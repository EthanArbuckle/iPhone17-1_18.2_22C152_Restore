#error "25804D998: too big function (funcsize=0)"

uint64_t getEnumTagSinglePayload for SearchAppEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25805F514);
}

uint64_t sub_25805F514(uint64_t *a1, int a2)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v2 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v2) = -1;
    }
    return (v2 + 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    uint64_t v4 = OUTLINED_FUNCTION_38_7();
    return __swift_getEnumTagSinglePayload(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for SearchAppEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25805F5A8);
}

void *sub_25805F5A8(void *result, int a2, int a3)
{
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    uint64_t v3 = OUTLINED_FUNCTION_23_9();
    return (void *)__swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
  return result;
}

void type metadata completion function for SearchAppEntity()
{
  type metadata accessor for SearchResult?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchAppEntity.Builder(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    v10 = (void *)a2[8];
    uint64_t v9 = a2[9];
    a1[8] = (uint64_t)v10;
    a1[9] = v9;
    uint64_t v11 = *(int *)(a3 + 40);
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    a1[10] = a2[10];
    uint64_t v14 = type metadata accessor for SearchResult(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v15 = v10;
    swift_bridgeObjectRetain();
    v2677 = (char *)v13;
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      type metadata accessor for SearchResultItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v2664 = v14;
          uint64_t v39 = v13[1];
          void *v12 = *(void *)v2677;
          v12[1] = v39;
          uint64_t v40 = *((void *)v2677 + 3);
          v12[2] = *((void *)v2677 + 2);
          v12[3] = v40;
          uint64_t v41 = *((void *)v2677 + 5);
          v12[4] = *((void *)v2677 + 4);
          v12[5] = v41;
          uint64_t v42 = *((void *)v2677 + 7);
          v12[6] = *((void *)v2677 + 6);
          v12[7] = v42;
          uint64_t v43 = *((void *)v2677 + 9);
          v12[8] = *((void *)v2677 + 8);
          v12[9] = v43;
          uint64_t v44 = type metadata accessor for MobileSMSDocument(0);
          uint64_t v45 = *(int *)(v44 + 40);
          v2631 = (char *)v12 + v45;
          v2646 = (int *)v44;
          v46 = &v2677[v45];
          uint64_t v47 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
          {
            uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2631, v46, *(void *)(*(void *)(v48 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v2631, v46, v47);
            __swift_storeEnumTagSinglePayload((uint64_t)v2631, 0, 1, v47);
          }
          uint64_t v317 = v2646[11];
          v318 = (char *)v12 + v317;
          v319 = &v2677[v317];
          uint64_t v320 = type metadata accessor for URL();
          uint64_t v2627 = v320;
          uint64_t v2640 = v47;
          if (__swift_getEnumTagSinglePayload((uint64_t)v319, 1, v320))
          {
            uint64_t v321 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v318, v319, *(void *)(*(void *)(v321 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v320 - 8) + 16))(v318, v319, v320);
            __swift_storeEnumTagSinglePayload((uint64_t)v318, 0, 1, v320);
          }
          *(void *)((char *)v12 + v2646[12]) = *(void *)&v2677[v2646[12]];
          uint64_t v474 = v2646[13];
          v475 = (void *)((char *)v12 + v474);
          v476 = &v2677[v474];
          uint64_t v477 = *((void *)v476 + 1);
          void *v475 = *(void *)v476;
          v475[1] = v477;
          uint64_t v478 = v2646[14];
          v479 = (void *)((char *)v12 + v478);
          v480 = &v2677[v478];
          uint64_t v481 = *((void *)v480 + 1);
          void *v479 = *(void *)v480;
          v479[1] = v481;
          *(void *)((char *)v12 + v2646[15]) = *(void *)&v2677[v2646[15]];
          *(void *)((char *)v12 + v2646[16]) = *(void *)&v2677[v2646[16]];
          uint64_t v482 = v2646[17];
          v483 = (void *)((char *)v12 + v482);
          v484 = &v2677[v482];
          uint64_t v485 = *(void *)&v2677[v482];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v485)
          {
            uint64_t v486 = *((void *)v484 + 1);
            uint64_t v487 = *((void *)v484 + 2);
            void *v483 = v485;
            v483[1] = v486;
            uint64_t v488 = *((void *)v484 + 3);
            uint64_t v489 = *((void *)v484 + 4);
            v483[2] = v487;
            v483[3] = v488;
            v483[4] = v489;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v641 = *((_OWORD *)v484 + 1);
            *(_OWORD *)v483 = *(_OWORD *)v484;
            *((_OWORD *)v483 + 1) = v641;
            v483[4] = *((void *)v484 + 4);
          }
          uint64_t v642 = v2646[18];
          v643 = (void *)((char *)v12 + v642);
          v644 = &v2677[v642];
          uint64_t v645 = *((void *)v644 + 1);
          void *v643 = *(void *)v644;
          v643[1] = v645;
          uint64_t v646 = v2646[19];
          v647 = (void *)((char *)v12 + v646);
          v648 = &v2677[v646];
          v649 = (int *)type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v648, 1, (uint64_t)v649))
          {
            uint64_t v650 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v647, v648, *(void *)(*(void *)(v650 - 8) + 64));
          }
          else
          {
            uint64_t v687 = *((void *)v648 + 1);
            void *v647 = *(void *)v648;
            v647[1] = v687;
            uint64_t v688 = v649[5];
            v689 = (void *)((char *)v647 + v688);
            v690 = &v648[v688];
            uint64_t v691 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            v2612 = v649;
            v2571 = v648;
            if (__swift_getEnumTagSinglePayload((uint64_t)v690, 1, v691))
            {
              uint64_t v692 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v689, v690, *(void *)(*(void *)(v692 - 8) + 64));
            }
            else
            {
              uint64_t v748 = v690[1];
              void *v689 = *v690;
              v689[1] = v748;
              uint64_t v749 = v690[3];
              v689[2] = v690[2];
              v689[3] = v749;
              uint64_t v750 = v690[5];
              v689[4] = v690[4];
              v689[5] = v750;
              uint64_t v751 = v690[7];
              v689[6] = v690[6];
              v689[7] = v751;
              uint64_t v752 = v690[9];
              v689[8] = v690[8];
              v689[9] = v752;
              uint64_t v753 = v690[11];
              v689[10] = v690[10];
              v689[11] = v753;
              uint64_t v754 = v690[13];
              v689[12] = v690[12];
              v689[13] = v754;
              uint64_t v755 = v690[15];
              v689[14] = v690[14];
              v689[15] = v755;
              *((unsigned char *)v689 + 128) = *((unsigned char *)v690 + 128);
              *(_WORD *)((char *)v689 + 129) = *(_WORD *)((char *)v690 + 129);
              uint64_t v756 = v690[18];
              v689[17] = v690[17];
              v689[18] = v756;
              uint64_t v757 = v690[20];
              v689[19] = v690[19];
              v689[20] = v757;
              uint64_t v758 = v690[22];
              v689[21] = v690[21];
              v689[22] = v758;
              uint64_t v2416 = v690[24];
              v689[23] = v690[23];
              v689[24] = v2416;
              uint64_t v759 = v690[26];
              v689[25] = v690[25];
              v689[26] = v759;
              uint64_t v760 = v690[28];
              v689[27] = v690[27];
              v689[28] = v760;
              uint64_t v761 = v690[30];
              v689[29] = v690[29];
              v689[30] = v761;
              uint64_t v2539 = v690[32];
              v689[31] = v690[31];
              v689[32] = v2539;
              uint64_t v2502 = v690[34];
              v689[33] = v690[33];
              v689[34] = v2502;
              uint64_t v762 = v690[36];
              v689[35] = v690[35];
              v689[36] = v762;
              uint64_t v763 = v690[38];
              v689[37] = v690[37];
              v689[38] = v763;
              uint64_t v764 = v690[40];
              v689[39] = v690[39];
              v689[40] = v764;
              uint64_t v765 = v690[42];
              v689[41] = v690[41];
              v689[42] = v765;
              uint64_t v766 = v690[44];
              v689[43] = v690[43];
              v689[44] = v766;
              uint64_t v767 = v690[46];
              v689[45] = v690[45];
              v689[46] = v767;
              uint64_t v768 = v690[47];
              *((unsigned char *)v689 + 384) = *((unsigned char *)v690 + 384);
              v689[47] = v768;
              uint64_t v769 = v690[50];
              v689[49] = v690[49];
              v689[50] = v769;
              uint64_t v770 = v690[52];
              v689[51] = v690[51];
              v689[52] = v770;
              uint64_t v771 = *(int *)(v691 + 140);
              v2591 = (char *)v689 + v771;
              v772 = (char *)v690 + v771;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v772, 1, v2640))
              {
                uint64_t v773 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2591, v772, *(void *)(*(void *)(v773 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v2591, v772, v2640);
                __swift_storeEnumTagSinglePayload((uint64_t)v2591, 0, 1, v2640);
              }
              uint64_t v782 = *(int *)(v691 + 144);
              v783 = (char *)v689 + v782;
              v784 = (char *)v690 + v782;
              if (__swift_getEnumTagSinglePayload((uint64_t)v690 + v782, 1, v2640))
              {
                uint64_t v785 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v783, v784, *(void *)(*(void *)(v785 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v783, v784, v2640);
                __swift_storeEnumTagSinglePayload((uint64_t)v783, 0, 1, v2640);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v689, 0, 1, v691);
              v649 = v2612;
            }
            uint64_t v839 = v649[6];
            v840 = (void *)((char *)v647 + v839);
            v841 = &v648[v839];
            uint64_t v842 = type metadata accessor for TicketedTransportation(0);
            v2592 = v647;
            if (__swift_getEnumTagSinglePayload((uint64_t)v841, 1, v842))
            {
              uint64_t v843 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v840, v841, *(void *)(*(void *)(v843 - 8) + 64));
            }
            else
            {
              uint64_t v844 = v841[1];
              void *v840 = *v841;
              v840[1] = v844;
              uint64_t v845 = v841[3];
              v840[2] = v841[2];
              v840[3] = v845;
              uint64_t v846 = v841[5];
              v840[4] = v841[4];
              v840[5] = v846;
              uint64_t v847 = v841[7];
              v840[6] = v841[6];
              v840[7] = v847;
              uint64_t v848 = v841[9];
              v840[8] = v841[8];
              v840[9] = v848;
              uint64_t v849 = v841[11];
              v840[10] = v841[10];
              v840[11] = v849;
              uint64_t v850 = v841[13];
              v840[12] = v841[12];
              v840[13] = v850;
              uint64_t v851 = v841[15];
              v840[14] = v841[14];
              v840[15] = v851;
              *((unsigned char *)v840 + 128) = *((unsigned char *)v841 + 128);
              *(_WORD *)((char *)v840 + 129) = *(_WORD *)((char *)v841 + 129);
              uint64_t v852 = v841[18];
              v840[17] = v841[17];
              v840[18] = v852;
              uint64_t v853 = v841[20];
              v840[19] = v841[19];
              v840[20] = v853;
              uint64_t v854 = v841[22];
              v840[21] = v841[21];
              v840[22] = v854;
              uint64_t v855 = v841[24];
              v840[23] = v841[23];
              v840[24] = v855;
              v2482 = (void *)v841[26];
              v840[25] = v841[25];
              v840[26] = v2482;
              uint64_t v856 = v841[28];
              v840[27] = v841[27];
              v840[28] = v856;
              uint64_t v857 = v841[30];
              v840[29] = v841[29];
              v840[30] = v857;
              uint64_t v858 = v841[32];
              v840[31] = v841[31];
              v840[32] = v858;
              uint64_t v859 = v841[34];
              v840[33] = v841[33];
              v840[34] = v859;
              uint64_t v860 = v841[36];
              uint64_t v861 = v841[35];
              *((unsigned char *)v840 + 296) = *((unsigned char *)v841 + 296);
              v840[35] = v861;
              v840[36] = v860;
              uint64_t v862 = *(int *)(v842 + 112);
              v2503 = (char *)v840 + v862;
              uint64_t v2541 = v842;
              v863 = (char *)v841 + v862;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v863, 1, v2640))
              {
                uint64_t v864 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2503, v863, *(void *)(*(void *)(v864 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v2503, v863, v2640);
                __swift_storeEnumTagSinglePayload((uint64_t)v2503, 0, 1, v2640);
              }
              uint64_t v873 = *(int *)(v842 + 116);
              v874 = (char *)v840 + v873;
              v875 = (char *)v841 + v873;
              if (__swift_getEnumTagSinglePayload((uint64_t)v841 + v873, 1, v2640))
              {
                uint64_t v876 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v874, v875, *(void *)(*(void *)(v876 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v874, v875, v2640);
                __swift_storeEnumTagSinglePayload((uint64_t)v874, 0, 1, v2640);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v840, 0, 1, v2541);
              v649 = v2612;
            }
            uint64_t v932 = v649[7];
            v933 = (void *)((char *)v647 + v932);
            v934 = &v648[v932];
            v935 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v934, 1, (uint64_t)v935))
            {
              uint64_t v936 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v933, v934, *(void *)(*(void *)(v936 - 8) + 64));
            }
            else
            {
              uint64_t v937 = v934[1];
              void *v933 = *v934;
              v933[1] = v937;
              uint64_t v938 = v934[3];
              v933[2] = v934[2];
              v933[3] = v938;
              uint64_t v939 = v934[5];
              v933[4] = v934[4];
              v933[5] = v939;
              uint64_t v940 = v934[7];
              v933[6] = v934[6];
              v933[7] = v940;
              uint64_t v941 = v934[9];
              v933[8] = v934[8];
              v933[9] = v941;
              uint64_t v942 = v934[11];
              v933[10] = v934[10];
              v933[11] = v942;
              uint64_t v943 = v934[13];
              v933[12] = v934[12];
              v933[13] = v943;
              uint64_t v944 = v934[15];
              v933[14] = v934[14];
              v933[15] = v944;
              *((unsigned char *)v933 + 128) = *((unsigned char *)v934 + 128);
              *(_WORD *)((char *)v933 + 129) = *(_WORD *)((char *)v934 + 129);
              uint64_t v945 = v934[18];
              v933[17] = v934[17];
              v933[18] = v945;
              uint64_t v946 = v934[20];
              v933[19] = v934[19];
              v933[20] = v946;
              uint64_t v947 = v934[22];
              v933[21] = v934[21];
              v933[22] = v947;
              uint64_t v948 = v934[24];
              v933[23] = v934[23];
              v933[24] = v948;
              uint64_t v949 = v934[26];
              v933[25] = v934[25];
              v933[26] = v949;
              uint64_t v950 = v934[28];
              v933[27] = v934[27];
              v933[28] = v950;
              v2484 = (void *)v934[30];
              v933[29] = v934[29];
              v933[30] = v2484;
              uint64_t v951 = v934[32];
              v933[31] = v934[31];
              v933[32] = v951;
              uint64_t v952 = v934[34];
              v933[33] = v934[33];
              v933[34] = v952;
              uint64_t v953 = v934[36];
              uint64_t v954 = v934[35];
              *((unsigned char *)v933 + 296) = *((unsigned char *)v934 + 296);
              v933[35] = v954;
              v933[36] = v953;
              uint64_t v955 = v934[39];
              v933[38] = v934[38];
              v933[39] = v955;
              uint64_t v956 = v935[29];
              v2506 = (char *)v933 + v956;
              uint64_t v2543 = (uint64_t)v935;
              v957 = (char *)v934 + v956;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v957, 1, v2627))
              {
                uint64_t v958 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2506, v957, *(void *)(*(void *)(v958 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v2506, v957, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v2506, 0, 1, v2627);
              }
              uint64_t v975 = v935[30];
              v976 = (void *)((char *)v933 + v975);
              v977 = (void *)((char *)v934 + v975);
              uint64_t v978 = v977[1];
              void *v976 = *v977;
              v976[1] = v978;
              uint64_t v979 = v935[31];
              v980 = (char *)v933 + v979;
              v981 = (char *)v934 + v979;
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v981, 1, v2640))
              {
                uint64_t v982 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v980, v981, *(void *)(*(void *)(v982 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v980, v981, v2640);
                __swift_storeEnumTagSinglePayload((uint64_t)v980, 0, 1, v2640);
              }
              uint64_t v991 = *(int *)(v2543 + 128);
              v992 = (char *)v933 + v991;
              v993 = (char *)v934 + v991;
              if (__swift_getEnumTagSinglePayload((uint64_t)v934 + v991, 1, v2640))
              {
                uint64_t v994 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v992, v993, *(void *)(*(void *)(v994 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v992, v993, v2640);
                __swift_storeEnumTagSinglePayload((uint64_t)v992, 0, 1, v2640);
              }
              v648 = (char *)v2571;
              __swift_storeEnumTagSinglePayload((uint64_t)v933, 0, 1, v2543);
              v649 = v2612;
            }
            uint64_t v1049 = v649[8];
            v1050 = (void *)((char *)v647 + v1049);
            v1051 = &v648[v1049];
            uint64_t v1052 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1051, 1, v1052))
            {
              uint64_t v1053 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v1050, v1051, *(void *)(*(void *)(v1053 - 8) + 64));
            }
            else
            {
              uint64_t v1054 = v1051[1];
              void *v1050 = *v1051;
              v1050[1] = v1054;
              uint64_t v1055 = v1051[3];
              v1050[2] = v1051[2];
              v1050[3] = v1055;
              uint64_t v1056 = v1051[5];
              v1050[4] = v1051[4];
              v1050[5] = v1056;
              uint64_t v1057 = v1051[7];
              v1050[6] = v1051[6];
              v1050[7] = v1057;
              uint64_t v1058 = v1051[9];
              v1050[8] = v1051[8];
              v1050[9] = v1058;
              uint64_t v1059 = v1051[11];
              v1050[10] = v1051[10];
              v1050[11] = v1059;
              uint64_t v1060 = v1051[13];
              v1050[12] = v1051[12];
              v1050[13] = v1060;
              uint64_t v1061 = v1051[15];
              v1050[14] = v1051[14];
              v1050[15] = v1061;
              *((unsigned char *)v1050 + 128) = *((unsigned char *)v1051 + 128);
              *(_WORD *)((char *)v1050 + 129) = *(_WORD *)((char *)v1051 + 129);
              uint64_t v1062 = v1051[18];
              v1050[17] = v1051[17];
              v1050[18] = v1062;
              uint64_t v1063 = v1051[20];
              v1050[19] = v1051[19];
              v1050[20] = v1063;
              uint64_t v1064 = v1051[22];
              v1050[21] = v1051[21];
              v1050[22] = v1064;
              uint64_t v1065 = v1051[24];
              v1050[23] = v1051[23];
              v1050[24] = v1065;
              uint64_t v1066 = v1051[26];
              v1050[25] = v1051[25];
              v1050[26] = v1066;
              uint64_t v1067 = v1051[28];
              v1050[27] = v1051[27];
              v1050[28] = v1067;
              uint64_t v1068 = v1051[30];
              v1050[29] = v1051[29];
              v1050[30] = v1068;
              uint64_t v1069 = v1051[32];
              v1050[31] = v1051[31];
              v1050[32] = v1069;
              uint64_t v1070 = v1051[34];
              uint64_t v1071 = v1051[33];
              *((unsigned char *)v1050 + 280) = *((unsigned char *)v1051 + 280);
              v1050[33] = v1071;
              v1050[34] = v1070;
              uint64_t v1072 = v1052;
              uint64_t v1073 = v1051[37];
              v1050[36] = v1051[36];
              v1050[37] = v1073;
              uint64_t v2545 = v1072;
              uint64_t v1074 = *(int *)(v1072 + 108);
              v2507 = (char *)v1050 + v1074;
              v1075 = (char *)v1051 + v1074;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1075, 1, v2640))
              {
                uint64_t v1076 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2507, v1075, *(void *)(*(void *)(v1076 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v2507, v1075, v2640);
                __swift_storeEnumTagSinglePayload((uint64_t)v2507, 0, 1, v2640);
              }
              uint64_t v1085 = *(int *)(v2545 + 112);
              v1086 = (char *)v1050 + v1085;
              v1087 = (char *)v1051 + v1085;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1051 + v1085, 1, v2640))
              {
                uint64_t v1088 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1086, v1087, *(void *)(*(void *)(v1088 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v1086, v1087, v2640);
                __swift_storeEnumTagSinglePayload((uint64_t)v1086, 0, 1, v2640);
              }
              v648 = (char *)v2571;
              __swift_storeEnumTagSinglePayload((uint64_t)v1050, 0, 1, v2545);
              v649 = v2612;
            }
            uint64_t v1135 = v649[9];
            v1136 = (void *)((char *)v647 + v1135);
            v1137 = &v648[v1135];
            uint64_t v1138 = type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1137, 1, v1138))
            {
              uint64_t v1139 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v1136, v1137, *(void *)(*(void *)(v1139 - 8) + 64));
            }
            else
            {
              uint64_t v1140 = v1137[1];
              void *v1136 = *v1137;
              v1136[1] = v1140;
              uint64_t v1141 = v1137[3];
              v1136[2] = v1137[2];
              v1136[3] = v1141;
              uint64_t v1142 = v1137[5];
              v1136[4] = v1137[4];
              v1136[5] = v1142;
              uint64_t v1143 = v1137[7];
              v1136[6] = v1137[6];
              v1136[7] = v1143;
              uint64_t v1144 = v1137[9];
              v1136[8] = v1137[8];
              v1136[9] = v1144;
              uint64_t v1145 = v1137[11];
              v1136[10] = v1137[10];
              v1136[11] = v1145;
              uint64_t v1146 = v1137[13];
              v1136[12] = v1137[12];
              v1136[13] = v1146;
              uint64_t v1147 = v1137[15];
              v1136[14] = v1137[14];
              v1136[15] = v1147;
              *((unsigned char *)v1136 + 128) = *((unsigned char *)v1137 + 128);
              *(_WORD *)((char *)v1136 + 129) = *(_WORD *)((char *)v1137 + 129);
              uint64_t v1148 = v1137[18];
              v1136[17] = v1137[17];
              v1136[18] = v1148;
              uint64_t v1149 = v1137[20];
              v1136[19] = v1137[19];
              v1136[20] = v1149;
              uint64_t v1150 = v1137[22];
              v1136[21] = v1137[21];
              v1136[22] = v1150;
              uint64_t v1151 = v1137[24];
              v1136[23] = v1137[23];
              v1136[24] = v1151;
              uint64_t v1152 = v1137[26];
              v1136[25] = v1137[25];
              v1136[26] = v1152;
              uint64_t v1153 = v1137[28];
              v1136[27] = v1137[27];
              v1136[28] = v1153;
              uint64_t v1154 = v1137[30];
              v1136[29] = v1137[29];
              v1136[30] = v1154;
              v1136[31] = v1137[31];
              uint64_t v2546 = v1138;
              uint64_t v1155 = *(int *)(v1138 + 96);
              v2509 = (char *)v1136 + v1155;
              v1156 = (char *)v1137 + v1155;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1156, 1, v2640))
              {
                uint64_t v1157 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2509, v1156, *(void *)(*(void *)(v1157 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v2509, v1156, v2640);
                __swift_storeEnumTagSinglePayload((uint64_t)v2509, 0, 1, v2640);
              }
              uint64_t v1166 = *(int *)(v1138 + 100);
              v1167 = (char *)v1136 + v1166;
              v1168 = (char *)v1137 + v1166;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1137 + v1166, 1, v2640))
              {
                uint64_t v1169 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1167, v1168, *(void *)(*(void *)(v1169 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v1167, v1168, v2640);
                __swift_storeEnumTagSinglePayload((uint64_t)v1167, 0, 1, v2640);
              }
              uint64_t v1180 = *(int *)(v2546 + 104);
              v1181 = (char *)v1136 + v1180;
              v1182 = (char *)v1137 + v1180;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1137 + v1180, 1, v2627))
              {
                uint64_t v1183 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1181, v1182, *(void *)(*(void *)(v1183 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v1181, v1182, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v1181, 0, 1, v2627);
              }
              v648 = (char *)v2571;
              __swift_storeEnumTagSinglePayload((uint64_t)v1136, 0, 1, v2546);
              v649 = v2612;
            }
            uint64_t v1225 = v649[10];
            v1226 = (void *)((char *)v647 + v1225);
            v1227 = &v648[v1225];
            uint64_t v1228 = type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1227, 1, v1228))
            {
              uint64_t v1229 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1226, v1227, *(void *)(*(void *)(v1229 - 8) + 64));
            }
            else
            {
              uint64_t v1230 = v1227[1];
              void *v1226 = *v1227;
              v1226[1] = v1230;
              uint64_t v1231 = v1227[3];
              v1226[2] = v1227[2];
              v1226[3] = v1231;
              uint64_t v1232 = v1227[5];
              v1226[4] = v1227[4];
              v1226[5] = v1232;
              uint64_t v1233 = v1227[7];
              v1226[6] = v1227[6];
              v1226[7] = v1233;
              uint64_t v1234 = v1227[9];
              v1226[8] = v1227[8];
              v1226[9] = v1234;
              uint64_t v1235 = v1227[11];
              v1226[10] = v1227[10];
              v1226[11] = v1235;
              uint64_t v1236 = v1227[13];
              v1226[12] = v1227[12];
              v1226[13] = v1236;
              uint64_t v1237 = v1227[15];
              v1226[14] = v1227[14];
              v1226[15] = v1237;
              *((unsigned char *)v1226 + 128) = *((unsigned char *)v1227 + 128);
              *(_WORD *)((char *)v1226 + 129) = *(_WORD *)((char *)v1227 + 129);
              uint64_t v1238 = v1227[18];
              v1226[17] = v1227[17];
              v1226[18] = v1238;
              uint64_t v1239 = v1227[20];
              v1226[19] = v1227[19];
              v1226[20] = v1239;
              uint64_t v1240 = v1227[22];
              v1226[21] = v1227[21];
              v1226[22] = v1240;
              uint64_t v1241 = v1227[24];
              v1226[23] = v1227[23];
              v1226[24] = v1241;
              uint64_t v1242 = v1227[26];
              v1226[25] = v1227[25];
              v1226[26] = v1242;
              v1226[27] = v1227[27];
              uint64_t v2548 = v1228;
              uint64_t v1243 = *(int *)(v1228 + 88);
              v2511 = (char *)v1226 + v1243;
              v2428 = (char *)v1227 + v1243;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2428, 1, v2640))
              {
                uint64_t v1244 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2511, v2428, *(void *)(*(void *)(v1244 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v2511, v2428, v2640);
                __swift_storeEnumTagSinglePayload((uint64_t)v2511, 0, 1, v2640);
              }
              uint64_t v1253 = *(int *)(v1228 + 92);
              v1254 = (char *)v1226 + v1253;
              v1255 = (char *)v1227 + v1253;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1227 + v1253, 1, v2640))
              {
                uint64_t v1256 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1254, v1255, *(void *)(*(void *)(v1256 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v1254, v1255, v2640);
                __swift_storeEnumTagSinglePayload((uint64_t)v1254, 0, 1, v2640);
              }
              uint64_t v1273 = *(int *)(v2548 + 96);
              v1274 = (char *)v1226 + v1273;
              v1275 = (char *)v1227 + v1273;
              *(void *)v1274 = *(void *)v1275;
              v1274[8] = v1275[8];
              uint64_t v1276 = *(int *)(v2548 + 100);
              v1277 = (char *)v1226 + v1276;
              v1278 = (char *)v1227 + v1276;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1227 + v1276, 1, v2627))
              {
                uint64_t v1279 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1277, v1278, *(void *)(*(void *)(v1279 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v1277, v1278, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v1277, 0, 1, v2627);
              }
              v648 = (char *)v2571;
              __swift_storeEnumTagSinglePayload((uint64_t)v1226, 0, 1, v2548);
              v649 = v2612;
            }
            uint64_t v1310 = v649[11];
            v1311 = (void *)((char *)v647 + v1310);
            v1312 = &v648[v1310];
            v1313 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1312, 1, (uint64_t)v1313))
            {
              uint64_t v1314 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1311, v1312, *(void *)(*(void *)(v1314 - 8) + 64));
            }
            else
            {
              uint64_t v1315 = v1312[1];
              void *v1311 = *v1312;
              v1311[1] = v1315;
              uint64_t v1316 = v1312[3];
              v1311[2] = v1312[2];
              v1311[3] = v1316;
              uint64_t v1317 = v1312[5];
              v1311[4] = v1312[4];
              v1311[5] = v1317;
              uint64_t v1318 = v1312[7];
              v1311[6] = v1312[6];
              v1311[7] = v1318;
              uint64_t v2514 = v1312[9];
              v1311[8] = v1312[8];
              v1311[9] = v2514;
              uint64_t v1319 = v1312[11];
              v1311[10] = v1312[10];
              v1311[11] = v1319;
              *((unsigned char *)v1311 + 96) = *((unsigned char *)v1312 + 96);
              uint64_t v1320 = v1312[14];
              v1311[13] = v1312[13];
              v1311[14] = v1320;
              uint64_t v1321 = v1313[13];
              v2550 = (char *)v1311 + v1321;
              v2472 = (char *)v1312 + v1321;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2472, 1, v2627))
              {
                uint64_t v1322 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2550, v2472, *(void *)(*(void *)(v1322 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v2550, v2472, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v2550, 0, 1, v2627);
              }
              uint64_t v1331 = v1313[14];
              v1332 = (char *)v1311 + v1331;
              v1333 = (char *)v1312 + v1331;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1312 + v1331, 1, v2627))
              {
                uint64_t v1334 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1332, v1333, *(void *)(*(void *)(v1334 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v1332, v1333, v2627);
                __swift_storeEnumTagSinglePayload((uint64_t)v1332, 0, 1, v2627);
              }
              uint64_t v1475 = v1313[15];
              v1476 = (void *)((char *)v1311 + v1475);
              v1477 = (void *)((char *)v1312 + v1475);
              uint64_t v1478 = v1477[1];
              void *v1476 = *v1477;
              v1476[1] = v1478;
              uint64_t v1479 = v1313[16];
              v1480 = (void *)((char *)v1311 + v1479);
              v1481 = (void *)((char *)v1312 + v1479);
              uint64_t v2553 = v1481[1];
              void *v1480 = *v1481;
              v1480[1] = v2553;
              uint64_t v1482 = v1313[17];
              v1483 = (void *)((char *)v1311 + v1482);
              v1484 = (void *)((char *)v1312 + v1482);
              uint64_t v1485 = v1484[1];
              void *v1483 = *v1484;
              v1483[1] = v1485;
              uint64_t v1486 = v1313[18];
              v2519 = (char *)v1311 + v1486;
              v2491 = (char *)v1312 + v1486;
              uint64_t v1487 = type metadata accessor for DateComponents();
              v1488 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1487 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1488(v2519, v2491, v1487);
              v1488((char *)v1311 + v1313[19], (char *)v1312 + v1313[19], v1487);
              uint64_t v1489 = v1313[20];
              v1490 = (void *)((char *)v1311 + v1489);
              v1491 = (void *)((char *)v1312 + v1489);
              uint64_t v1492 = v1491[1];
              void *v1490 = *v1491;
              v1490[1] = v1492;
              uint64_t v1493 = v1313[21];
              v1494 = (void *)((char *)v1311 + v1493);
              v1495 = (void *)((char *)v1312 + v1493);
              uint64_t v2554 = v1495[1];
              void *v1494 = *v1495;
              v1494[1] = v2554;
              uint64_t v1496 = v1313[22];
              v1497 = (void *)((char *)v1311 + v1496);
              v1498 = (void *)((char *)v1312 + v1496);
              v2492 = (void *)v1498[1];
              void *v1497 = *v1498;
              v1497[1] = v2492;
              uint64_t v1499 = v1313[23];
              v1500 = (void *)((char *)v1311 + v1499);
              v1501 = (void *)((char *)v1312 + v1499);
              uint64_t v2476 = v1501[1];
              void *v1500 = *v1501;
              v1500[1] = v2476;
              uint64_t v1502 = v1313[24];
              v1503 = (void *)((char *)v1311 + v1502);
              v1504 = (void *)((char *)v1312 + v1502);
              v2466 = (void *)v1504[1];
              void *v1503 = *v1504;
              v1503[1] = v2466;
              uint64_t v1505 = v1313[25];
              v1506 = (void *)((char *)v1311 + v1505);
              v1507 = (void *)((char *)v1312 + v1505);
              uint64_t v2457 = v1507[1];
              void *v1506 = *v1507;
              v1506[1] = v2457;
              uint64_t v1508 = v1313[26];
              v1509 = (void *)((char *)v1311 + v1508);
              v1510 = (void *)((char *)v1312 + v1508);
              uint64_t v2449 = v1510[1];
              void *v1509 = *v1510;
              v1509[1] = v2449;
              uint64_t v1511 = v1313[27];
              v1512 = (void *)((char *)v1311 + v1511);
              v1513 = (void *)((char *)v1312 + v1511);
              v2443 = (void *)v1513[1];
              void *v1512 = *v1513;
              v1512[1] = v2443;
              uint64_t v1514 = v1313[28];
              v1515 = (void *)((char *)v1311 + v1514);
              v1516 = (void *)((char *)v1312 + v1514);
              uint64_t v2438 = v1516[1];
              void *v1515 = *v1516;
              v1515[1] = v2438;
              uint64_t v1517 = v1313[29];
              v1518 = (void *)((char *)v1311 + v1517);
              v1519 = (void *)((char *)v1312 + v1517);
              v2435 = (void *)v1519[1];
              void *v1518 = *v1519;
              v1518[1] = v2435;
              uint64_t v1520 = v1313[30];
              v1521 = (void *)((char *)v1311 + v1520);
              v1522 = (void *)((char *)v1312 + v1520);
              v2431 = (void *)v1522[1];
              void *v1521 = *v1522;
              v1521[1] = v2431;
              uint64_t v1523 = v1313[31];
              v1524 = (void *)((char *)v1311 + v1523);
              v1525 = (void *)((char *)v1312 + v1523);
              v2426 = (void *)v1525[1];
              void *v1524 = *v1525;
              v1524[1] = v2426;
              uint64_t v1526 = v1313[32];
              v1527 = (void *)((char *)v1311 + v1526);
              v1528 = (void *)((char *)v1312 + v1526);
              uint64_t v1529 = v1528[1];
              void *v1527 = *v1528;
              v1527[1] = v1529;
              *(void *)((char *)v1311 + v1313[33]) = *(void *)((char *)v1312 + v1313[33]);
              *(void *)((char *)v1311 + v1313[34]) = *(void *)((char *)v1312 + v1313[34]);
              uint64_t v1530 = v1313[35];
              v1531 = (void *)((char *)v1311 + v1530);
              v1532 = (void *)((char *)v1312 + v1530);
              uint64_t v1533 = v1532[1];
              void *v1531 = *v1532;
              v1531[1] = v1533;
              uint64_t v1534 = v1313[36];
              v1535 = (void *)((char *)v1311 + v1534);
              v1536 = (void *)((char *)v1312 + v1534);
              uint64_t v1537 = v1536[1];
              void *v1535 = *v1536;
              v1535[1] = v1537;
              uint64_t v1538 = v1313[37];
              v1539 = (void *)((char *)v1311 + v1538);
              v1540 = (void *)((char *)v1312 + v1538);
              uint64_t v1541 = v1540[1];
              void *v1539 = *v1540;
              v1539[1] = v1541;
              uint64_t v1542 = v1313[38];
              v2520 = (char *)v1311 + v1542;
              v2420 = (char *)v1312 + v1542;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2420, 1, v2640))
              {
                uint64_t v1543 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2520, v2420, *(void *)(*(void *)(v1543 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v2520, v2420, v2640);
                __swift_storeEnumTagSinglePayload((uint64_t)v2520, 0, 1, v2640);
              }
              uint64_t v1643 = v1313[39];
              v1644 = (void *)((char *)v1311 + v1643);
              v1645 = (void *)((char *)v1312 + v1643);
              uint64_t v1646 = v1645[1];
              void *v1644 = *v1645;
              v1644[1] = v1646;
              uint64_t v1647 = v1313[40];
              v1648 = (void *)((char *)v1311 + v1647);
              v1649 = (void *)((char *)v1312 + v1647);
              uint64_t v1650 = v1649[1];
              void *v1648 = *v1649;
              v1648[1] = v1650;
              uint64_t v1651 = v1313[41];
              v1652 = (char *)v1311 + v1651;
              v1653 = (char *)v1312 + v1651;
              v1652[8] = v1653[8];
              *(void *)v1652 = *(void *)v1653;
              uint64_t v1654 = v1313[42];
              v1655 = (void *)((char *)v1311 + v1654);
              v1656 = (void *)((char *)v1312 + v1654);
              uint64_t v1657 = v1656[1];
              void *v1655 = *v1656;
              v1655[1] = v1657;
              uint64_t v1658 = v1313[43];
              v1659 = (char *)v1311 + v1658;
              v1660 = (char *)v1312 + v1658;
              *(_OWORD *)v1659 = *(_OWORD *)v1660;
              *(void *)(v1659 + 13) = *(void *)(v1660 + 13);
              uint64_t v1661 = v1313[44];
              v1662 = (void *)((char *)v1311 + v1661);
              v1663 = (void *)((char *)v1312 + v1661);
              uint64_t v1664 = v1663[1];
              void *v1662 = *v1663;
              v1662[1] = v1664;
              uint64_t v1665 = v1313[45];
              v1666 = (void *)((char *)v1311 + v1665);
              v1667 = (void *)((char *)v1312 + v1665);
              uint64_t v1668 = v1667[1];
              void *v1666 = *v1667;
              v1666[1] = v1668;
              uint64_t v1669 = v1313[46];
              v1670 = (void *)((char *)v1311 + v1669);
              v1671 = (void *)((char *)v1312 + v1669);
              uint64_t v1672 = v1671[1];
              void *v1670 = *v1671;
              v1670[1] = v1672;
              uint64_t v1673 = v1313[47];
              v1674 = (void *)((char *)v1311 + v1673);
              v1675 = (void *)((char *)v1312 + v1673);
              uint64_t v1676 = v1675[1];
              void *v1674 = *v1675;
              v1674[1] = v1676;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1311, 0, 1, (uint64_t)v1313);
              v647 = v2592;
              v649 = v2612;
              v648 = (char *)v2571;
            }
            uint64_t v1677 = v649[12];
            v1678 = (void *)((char *)v647 + v1677);
            v1679 = &v648[v1677];
            v1680 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1679, 1, (uint64_t)v1680))
            {
              uint64_t v1681 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1678, v1679, *(void *)(*(void *)(v1681 - 8) + 64));
            }
            else
            {
              uint64_t v1682 = v1679[1];
              void *v1678 = *v1679;
              v1678[1] = v1682;
              uint64_t v1683 = v1679[3];
              v1678[2] = v1679[2];
              v1678[3] = v1683;
              uint64_t v2523 = v1679[5];
              v1678[4] = v1679[4];
              v1678[5] = v2523;
              uint64_t v1684 = v1679[7];
              v1678[6] = v1679[6];
              v1678[7] = v1684;
              uint64_t v1685 = v1679[9];
              v1678[8] = v1679[8];
              v1678[9] = v1685;
              uint64_t v1686 = v1679[11];
              v1678[10] = v1679[10];
              v1678[11] = v1686;
              *((unsigned char *)v1678 + 96) = *((unsigned char *)v1679 + 96);
              uint64_t v1687 = v1679[14];
              v1678[13] = v1679[13];
              v1678[14] = v1687;
              uint64_t v1688 = v1679[16];
              v1678[15] = v1679[15];
              v1678[16] = v1688;
              uint64_t v1689 = v1680[14];
              v2556 = (char *)v1678 + v1689;
              v2458 = (char *)v1679 + v1689;
              uint64_t v2451 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2458, 1, v2451))
              {
                uint64_t v1690 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2556, v2458, *(void *)(*(void *)(v1690 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2451 - 8) + 16))(v2556, v2458, v2451);
                __swift_storeEnumTagSinglePayload((uint64_t)v2556, 0, 1, v2451);
              }
              uint64_t v1699 = v1680[15];
              v1700 = (char *)v1678 + v1699;
              v1701 = (char *)v1679 + v1699;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1679 + v1699, 1, v2451))
              {
                uint64_t v1702 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1700, v1701, *(void *)(*(void *)(v1702 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2451 - 8) + 16))(v1700, v1701, v2451);
                __swift_storeEnumTagSinglePayload((uint64_t)v1700, 0, 1, v2451);
              }
              uint64_t v1814 = v1680[16];
              v1815 = (void *)((char *)v1678 + v1814);
              v1816 = (void *)((char *)v1679 + v1814);
              uint64_t v1817 = v1816[1];
              void *v1815 = *v1816;
              v1815[1] = v1817;
              uint64_t v1818 = v1680[17];
              v1819 = (void *)((char *)v1678 + v1818);
              v1820 = (void *)((char *)v1679 + v1818);
              uint64_t v2559 = v1820[1];
              void *v1819 = *v1820;
              v1819[1] = v2559;
              uint64_t v1821 = v1680[18];
              v1822 = (void *)((char *)v1678 + v1821);
              v1823 = (void *)((char *)v1679 + v1821);
              uint64_t v2528 = v1823[1];
              void *v1822 = *v1823;
              v1822[1] = v2528;
              uint64_t v1824 = v1680[19];
              v1825 = (void *)((char *)v1678 + v1824);
              v1826 = (void *)((char *)v1679 + v1824);
              v2494 = (void *)v1826[1];
              void *v1825 = *v1826;
              v1825[1] = v2494;
              uint64_t v1827 = v1680[20];
              v1828 = (void *)((char *)v1678 + v1827);
              v1829 = (void *)((char *)v1679 + v1827);
              uint64_t v2460 = v1829[1];
              void *v1828 = *v1829;
              v1828[1] = v2460;
              *(void *)((char *)v1678 + v1680[21]) = *(void *)((char *)v1679 + v1680[21]);
              *(void *)((char *)v1678 + v1680[22]) = *(void *)((char *)v1679 + v1680[22]);
              uint64_t v1830 = v1680[23];
              v1831 = (char *)v1678 + v1830;
              v1832 = (char *)v1679 + v1830;
              *(void *)v1831 = *(void *)v1832;
              v1831[8] = v1832[8];
              uint64_t v1833 = v1680[24];
              v1834 = (char *)v1678 + v1833;
              v1835 = (char *)v1679 + v1833;
              *(void *)v1834 = *(void *)v1835;
              v1834[8] = v1835[8];
              uint64_t v1836 = v1680[25];
              v1837 = (void *)((char *)v1678 + v1836);
              v1838 = (void *)((char *)v1679 + v1836);
              uint64_t v1839 = v1838[1];
              void *v1837 = *v1838;
              v1837[1] = v1839;
              uint64_t v1840 = v1680[26];
              v1841 = (void *)((char *)v1678 + v1840);
              v1842 = (void *)((char *)v1679 + v1840);
              uint64_t v1843 = v1842[1];
              void *v1841 = *v1842;
              v1841[1] = v1843;
              uint64_t v1844 = v1680[27];
              v1845 = (void *)((char *)v1678 + v1844);
              v1846 = (void *)((char *)v1679 + v1844);
              uint64_t v1847 = v1846[1];
              void *v1845 = *v1846;
              v1845[1] = v1847;
              uint64_t v1848 = v1680[28];
              v1849 = (void *)((char *)v1678 + v1848);
              v1850 = (void *)((char *)v1679 + v1848);
              uint64_t v1851 = v1850[1];
              void *v1849 = *v1850;
              v1849[1] = v1851;
              uint64_t v1852 = v1680[29];
              v1853 = (char *)v1678 + v1852;
              v1854 = (char *)v1679 + v1852;
              *(void *)v1853 = *(void *)v1854;
              v1853[8] = v1854[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1678, 0, 1, (uint64_t)v1680);
              v647 = v2592;
              v649 = v2612;
              v648 = (char *)v2571;
            }
            uint64_t v1855 = v649[13];
            v1856 = (void *)((char *)v647 + v1855);
            v1857 = &v648[v1855];
            v1858 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1857, 1, (uint64_t)v1858))
            {
              uint64_t v1859 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1856, v1857, *(void *)(*(void *)(v1859 - 8) + 64));
            }
            else
            {
              uint64_t v1860 = v1857[1];
              void *v1856 = *v1857;
              v1856[1] = v1860;
              uint64_t v1861 = v1857[3];
              v1856[2] = v1857[2];
              v1856[3] = v1861;
              uint64_t v2560 = v1857[5];
              v1856[4] = v1857[4];
              v1856[5] = v2560;
              uint64_t v2529 = v1857[7];
              v1856[6] = v1857[6];
              v1856[7] = v2529;
              uint64_t v1862 = v1857[9];
              v1856[8] = v1857[8];
              v1856[9] = v1862;
              uint64_t v1863 = v1857[11];
              v1856[10] = v1857[10];
              v1856[11] = v1863;
              *((unsigned char *)v1856 + 96) = *((unsigned char *)v1857 + 96);
              uint64_t v1864 = v1857[14];
              v1856[13] = v1857[13];
              v1856[14] = v1864;
              uint64_t v1865 = v1857[16];
              v1856[15] = v1857[15];
              v1856[16] = v1865;
              uint64_t v1866 = v1858[14];
              v2573 = (char *)v1856 + v1866;
              v2469 = (char *)v1857 + v1866;
              uint64_t v2461 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2469, 1, v2461))
              {
                uint64_t v1867 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2573, v2469, *(void *)(*(void *)(v1867 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2461 - 8) + 16))(v2573, v2469, v2461);
                __swift_storeEnumTagSinglePayload((uint64_t)v2573, 0, 1, v2461);
              }
              uint64_t v2222 = v1858[15];
              v2223 = (void *)((char *)v1856 + v2222);
              v2224 = (void *)((char *)v1857 + v2222);
              uint64_t v2225 = v2224[1];
              void *v2223 = *v2224;
              v2223[1] = v2225;
              uint64_t v2226 = v1858[16];
              v2227 = (void *)((char *)v1856 + v2226);
              v2228 = (void *)((char *)v1857 + v2226);
              uint64_t v2229 = v2228[1];
              void *v2227 = *v2228;
              v2227[1] = v2229;
              uint64_t v2230 = v1858[17];
              v2231 = (void *)((char *)v1856 + v2230);
              v2232 = (void *)((char *)v1857 + v2230);
              uint64_t v2579 = v2232[1];
              void *v2231 = *v2232;
              v2231[1] = v2579;
              uint64_t v2233 = v1858[18];
              v2234 = (void *)((char *)v1856 + v2233);
              v2235 = (void *)((char *)v1857 + v2233);
              uint64_t v2562 = v2235[1];
              void *v2234 = *v2235;
              v2234[1] = v2562;
              uint64_t v2236 = v1858[19];
              v2237 = (void *)((char *)v1856 + v2236);
              v2238 = (void *)((char *)v1857 + v2236);
              uint64_t v2239 = v2238[1];
              void *v2237 = *v2238;
              v2237[1] = v2239;
              *(void *)((char *)v1856 + v1858[20]) = *(void *)((char *)v1857 + v1858[20]);
              uint64_t v2240 = v1858[21];
              v2241 = (void *)((char *)v1856 + v2240);
              v2242 = (void *)((char *)v1857 + v2240);
              uint64_t v2243 = v2242[1];
              void *v2241 = *v2242;
              v2241[1] = v2243;
              uint64_t v2244 = v1858[22];
              v2245 = (void *)((char *)v1856 + v2244);
              v2246 = (void *)((char *)v1857 + v2244);
              uint64_t v2247 = v2246[1];
              void *v2245 = *v2246;
              v2245[1] = v2247;
              uint64_t v2248 = v1858[23];
              v2249 = (void *)((char *)v1856 + v2248);
              v2250 = (void *)((char *)v1857 + v2248);
              uint64_t v2251 = v2250[1];
              void *v2249 = *v2250;
              v2249[1] = v2251;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1856, 0, 1, (uint64_t)v1858);
              v647 = v2592;
              v649 = v2612;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v647, 0, 1, (uint64_t)v649);
          }
          uint64_t v2252 = v2646[20];
          v2253 = (void *)((char *)v12 + v2252);
          v2254 = &v2677[v2252];
          uint64_t v2255 = type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2254, 1, v2255))
          {
            uint64_t v2256 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v2253, v2254, *(void *)(*(void *)(v2256 - 8) + 64));
          }
          else
          {
            uint64_t v2257 = *((void *)v2254 + 1);
            void *v2253 = *(void *)v2254;
            v2253[1] = v2257;
            uint64_t v2258 = *((void *)v2254 + 3);
            v2259 = (int *)v2255;
            v2253[2] = *((void *)v2254 + 2);
            v2253[3] = v2258;
            uint64_t v2260 = *((void *)v2254 + 5);
            v2253[4] = *((void *)v2254 + 4);
            v2253[5] = v2260;
            uint64_t v2261 = *((void *)v2254 + 7);
            v2253[6] = *((void *)v2254 + 6);
            v2253[7] = v2261;
            uint64_t v2262 = *((void *)v2254 + 9);
            v2253[8] = *((void *)v2254 + 8);
            v2253[9] = v2262;
            uint64_t v2263 = *((void *)v2254 + 11);
            v2253[10] = *((void *)v2254 + 10);
            v2253[11] = v2263;
            v2616 = v2259;
            uint64_t v2264 = v2259[10];
            v2599 = (char *)v2253 + v2264;
            v2265 = &v2254[v2264];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2265, 1, v2640))
            {
              uint64_t v2266 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2599, v2265, *(void *)(*(void *)(v2266 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v2599, v2265, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v2599, 0, 1, v2640);
            }
            uint64_t v2267 = v2616[11];
            v2268 = (char *)v2253 + v2267;
            v2269 = &v2254[v2267];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v2254[v2267], 1, v2640))
            {
              uint64_t v2270 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2268, v2269, *(void *)(*(void *)(v2270 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v2268, v2269, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v2268, 0, 1, v2640);
            }
            uint64_t v2271 = v2616[12];
            v2272 = (void *)((char *)v2253 + v2271);
            v2273 = &v2254[v2271];
            uint64_t v2274 = v2273[1];
            void *v2272 = *v2273;
            v2272[1] = v2274;
            uint64_t v2275 = v2616[13];
            v2276 = (void *)((char *)v2253 + v2275);
            v2277 = &v2254[v2275];
            uint64_t v2278 = v2277[1];
            void *v2276 = *v2277;
            v2276[1] = v2278;
            uint64_t v2279 = v2616[14];
            v2280 = (void *)((char *)v2253 + v2279);
            v2281 = &v2254[v2279];
            uint64_t v2282 = v2281[1];
            void *v2280 = *v2281;
            v2280[1] = v2282;
            uint64_t v2283 = v2616[15];
            v2284 = (char *)v2253 + v2283;
            v2285 = &v2254[v2283];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2285, 1, v2640))
            {
              uint64_t v2286 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2284, v2285, *(void *)(*(void *)(v2286 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v2284, v2285, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v2284, 0, 1, v2640);
            }
            uint64_t v2287 = v2616[16];
            v2288 = (void *)((char *)v2253 + v2287);
            v2289 = &v2254[v2287];
            uint64_t v2290 = v2289[1];
            void *v2288 = *v2289;
            v2288[1] = v2290;
            uint64_t v2291 = v2616[17];
            v2292 = (void *)((char *)v2253 + v2291);
            v2293 = &v2254[v2291];
            uint64_t v2294 = v2293[1];
            void *v2292 = *v2293;
            v2292[1] = v2294;
            uint64_t v2295 = v2616[18];
            v2296 = (void *)((char *)v2253 + v2295);
            v2297 = &v2254[v2295];
            uint64_t v2600 = v2297[1];
            void *v2296 = *v2297;
            v2296[1] = v2600;
            uint64_t v2298 = v2616[19];
            v2299 = (void *)((char *)v2253 + v2298);
            v2300 = &v2254[v2298];
            uint64_t v2301 = v2300[1];
            void *v2299 = *v2300;
            v2299[1] = v2301;
            uint64_t v2302 = v2616[20];
            v2303 = (void *)((char *)v2253 + v2302);
            v2304 = &v2254[v2302];
            uint64_t v2305 = v2304[1];
            void *v2303 = *v2304;
            v2303[1] = v2305;
            uint64_t v2306 = v2616[21];
            v2307 = (void *)((char *)v2253 + v2306);
            v2308 = &v2254[v2306];
            uint64_t v2309 = v2308[1];
            void *v2307 = *v2308;
            v2307[1] = v2309;
            uint64_t v2310 = v2616[22];
            v2311 = (void *)((char *)v2253 + v2310);
            v2312 = &v2254[v2310];
            uint64_t v2313 = v2312[1];
            void *v2311 = *v2312;
            v2311[1] = v2313;
            uint64_t v2314 = v2616[23];
            v2315 = (void *)((char *)v2253 + v2314);
            v2316 = &v2254[v2314];
            uint64_t v2317 = v2316[1];
            void *v2315 = *v2316;
            v2315[1] = v2317;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2253, 0, 1, (uint64_t)v2616);
          }
          uint64_t v2318 = v2646[21];
          v2319 = (void *)((char *)v12 + v2318);
          v2320 = &v2677[v2318];
          v2321 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2320, 1, (uint64_t)v2321))
          {
            uint64_t v2322 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v2319, v2320, *(void *)(*(void *)(v2322 - 8) + 64));
          }
          else
          {
            uint64_t v2323 = *((void *)v2320 + 1);
            void *v2319 = *(void *)v2320;
            v2319[1] = v2323;
            uint64_t v2324 = *((void *)v2320 + 3);
            v2319[2] = *((void *)v2320 + 2);
            v2319[3] = v2324;
            uint64_t v2325 = *((void *)v2320 + 5);
            v2319[4] = *((void *)v2320 + 4);
            v2319[5] = v2325;
            uint64_t v2326 = *((void *)v2320 + 7);
            v2319[6] = *((void *)v2320 + 6);
            v2319[7] = v2326;
            uint64_t v2601 = *((void *)v2320 + 9);
            v2319[8] = *((void *)v2320 + 8);
            v2319[9] = v2601;
            uint64_t v2580 = *((void *)v2320 + 11);
            v2319[10] = *((void *)v2320 + 10);
            v2319[11] = v2580;
            uint64_t v2327 = v2321[11];
            v2617 = (char *)v2319 + v2327;
            v2328 = &v2320[v2327];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2328, 1, v2640))
            {
              uint64_t v2329 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2617, v2328, *(void *)(*(void *)(v2329 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v2617, v2328, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v2617, 0, 1, v2640);
            }
            uint64_t v2330 = v2321[12];
            v2331 = (void *)((char *)v2319 + v2330);
            v2332 = &v2320[v2330];
            uint64_t v2333 = v2332[1];
            void *v2331 = *v2332;
            v2331[1] = v2333;
            *(void *)((char *)v2319 + v2321[13]) = *(void *)&v2320[v2321[13]];
            uint64_t v2334 = v2321[14];
            v2335 = (char *)v2319 + v2334;
            v2336 = &v2320[v2334];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2336, 1, v2640))
            {
              uint64_t v2337 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2335, v2336, *(void *)(*(void *)(v2337 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v2335, v2336, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v2335, 0, 1, v2640);
            }
            *(void *)((char *)v2319 + v2321[15]) = *(void *)&v2320[v2321[15]];
            *(void *)((char *)v2319 + v2321[16]) = *(void *)&v2320[v2321[16]];
            uint64_t v2338 = v2321[17];
            v2339 = (void *)((char *)v2319 + v2338);
            v2340 = &v2320[v2338];
            uint64_t v2341 = v2340[1];
            void *v2339 = *v2340;
            v2339[1] = v2341;
            *(void *)((char *)v2319 + v2321[18]) = *(void *)&v2320[v2321[18]];
            *(void *)((char *)v2319 + v2321[19]) = *(void *)&v2320[v2321[19]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2319, 0, 1, (uint64_t)v2321);
          }
          uint64_t v2342 = v2646[22];
          v2343 = (void *)((char *)v12 + v2342);
          v2344 = &v2677[v2342];
          v2345 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2344, 1, (uint64_t)v2345))
          {
            uint64_t v2346 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v2343, v2344, *(void *)(*(void *)(v2346 - 8) + 64));
          }
          else
          {
            uint64_t v2347 = *((void *)v2344 + 1);
            void *v2343 = *(void *)v2344;
            v2343[1] = v2347;
            uint64_t v2348 = *((void *)v2344 + 3);
            v2343[2] = *((void *)v2344 + 2);
            v2343[3] = v2348;
            uint64_t v2349 = *((void *)v2344 + 5);
            v2343[4] = *((void *)v2344 + 4);
            v2343[5] = v2349;
            uint64_t v2350 = *((void *)v2344 + 7);
            v2343[6] = *((void *)v2344 + 6);
            v2343[7] = v2350;
            uint64_t v2351 = v2345[8];
            v2352 = (char *)v2343 + v2351;
            v2353 = &v2344[v2351];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2353, 1, v2627))
            {
              uint64_t v2354 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2352, v2353, *(void *)(*(void *)(v2354 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2627 - 8) + 16))(v2352, v2353, v2627);
              __swift_storeEnumTagSinglePayload((uint64_t)v2352, 0, 1, v2627);
            }
            uint64_t v2355 = v2345[9];
            v2356 = (void *)((char *)v2343 + v2355);
            v2357 = &v2344[v2355];
            uint64_t v2358 = v2357[1];
            void *v2356 = *v2357;
            v2356[1] = v2358;
            uint64_t v2359 = v2345[10];
            v2360 = (void *)((char *)v2343 + v2359);
            v2361 = &v2344[v2359];
            uint64_t v2362 = v2361[1];
            void *v2360 = *v2361;
            v2360[1] = v2362;
            uint64_t v2363 = v2345[11];
            v2364 = (void *)((char *)v2343 + v2363);
            v2365 = &v2344[v2363];
            uint64_t v2366 = v2365[1];
            void *v2364 = *v2365;
            v2364[1] = v2366;
            uint64_t v2367 = v2345[12];
            v2368 = (char *)v2343 + v2367;
            v2369 = &v2344[v2367];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2369, 1, v2640))
            {
              uint64_t v2370 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2368, v2369, *(void *)(*(void *)(v2370 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v2368, v2369, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v2368, 0, 1, v2640);
            }
            uint64_t v2371 = v2345[13];
            v2372 = (char *)v2343 + v2371;
            v2373 = &v2344[v2371];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v2344[v2371], 1, v2640))
            {
              uint64_t v2374 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2372, v2373, *(void *)(*(void *)(v2374 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2640 - 8) + 16))(v2372, v2373, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v2372, 0, 1, v2640);
            }
            uint64_t v2375 = v2345[14];
            v2376 = (char *)v2343 + v2375;
            v2377 = &v2344[v2375];
            *(void *)v2376 = *(void *)v2377;
            v2376[8] = v2377[8];
            uint64_t v2378 = v2345[15];
            v2379 = (void *)((char *)v2343 + v2378);
            v2380 = &v2344[v2378];
            uint64_t v2381 = v2380[1];
            void *v2379 = *v2380;
            v2379[1] = v2381;
            uint64_t v2382 = v2345[16];
            v2383 = (void *)((char *)v2343 + v2382);
            v2384 = &v2344[v2382];
            uint64_t v2385 = v2384[1];
            void *v2383 = *v2384;
            v2383[1] = v2385;
            uint64_t v2386 = v2345[17];
            v2387 = (void *)((char *)v2343 + v2386);
            v2388 = &v2344[v2386];
            uint64_t v2389 = v2388[1];
            void *v2387 = *v2388;
            v2387[1] = v2389;
            uint64_t v2390 = v2345[18];
            v2391 = (void *)((char *)v2343 + v2390);
            v2392 = &v2344[v2390];
            uint64_t v2393 = v2392[1];
            void *v2391 = *v2392;
            v2391[1] = v2393;
            uint64_t v2394 = v2345[19];
            v2395 = (void *)((char *)v2343 + v2394);
            v2396 = &v2344[v2394];
            uint64_t v2397 = v2396[1];
            void *v2395 = *v2396;
            v2395[1] = v2397;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2343, 0, 1, (uint64_t)v2345);
          }
          uint64_t v2043 = v2646[23];
          goto LABEL_534;
        case 2u:
          uint64_t v2664 = v14;
          uint64_t v49 = v13[1];
          void *v12 = *v13;
          v12[1] = v49;
          uint64_t v50 = v13[3];
          v12[2] = v13[2];
          v12[3] = v50;
          uint64_t v51 = v13[5];
          v12[4] = v13[4];
          v12[5] = v51;
          v52 = (int *)type metadata accessor for CalendarEvent(0);
          uint64_t v53 = v52[7];
          v54 = (char *)v12 + v53;
          v55 = (char *)v13 + v53;
          uint64_t v56 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v55, 1, v56))
          {
            uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
            __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v56);
          }
          uint64_t v322 = v52[8];
          v323 = (char *)v12 + v322;
          v324 = (char *)v13 + v322;
          if (__swift_getEnumTagSinglePayload((uint64_t)v13 + v322, 1, v56))
          {
            uint64_t v325 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v323, v324, *(void *)(*(void *)(v325 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v323, v324, v56);
            __swift_storeEnumTagSinglePayload((uint64_t)v323, 0, 1, v56);
          }
          uint64_t v490 = v52[9];
          v491 = (void *)((char *)v12 + v490);
          v492 = (void *)((char *)v13 + v490);
          uint64_t v493 = v492[1];
          void *v491 = *v492;
          v491[1] = v493;
          *(void *)((char *)v12 + v52[10]) = *(void *)((char *)v13 + v52[10]);
          *(void *)((char *)v12 + v52[11]) = *(void *)((char *)v13 + v52[11]);
          uint64_t v494 = v52[12];
          v495 = (void *)((char *)v12 + v494);
          v496 = (void *)((char *)v13 + v494);
          uint64_t v497 = v496[1];
          void *v495 = *v496;
          v495[1] = v497;
          uint64_t v498 = v52[13];
          v499 = (char *)v12 + v498;
          v500 = (char *)v13 + v498;
          uint64_t v501 = *(void *)((char *)v13 + v498);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (!v501)
          {
            long long v651 = *((_OWORD *)v500 + 1);
            *(_OWORD *)v499 = *(_OWORD *)v500;
            *((_OWORD *)v499 + 1) = v651;
            *((void *)v499 + 4) = *((void *)v500 + 4);
            goto LABEL_537;
          }
          uint64_t v502 = *((void *)v500 + 1);
          uint64_t v503 = *((void *)v500 + 2);
          *(void *)v499 = v501;
          *((void *)v499 + 1) = v502;
          uint64_t v504 = *((void *)v500 + 3);
          uint64_t v505 = *((void *)v500 + 4);
          *((void *)v499 + 2) = v503;
          *((void *)v499 + 3) = v504;
          *((void *)v499 + 4) = v505;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_146:
          swift_bridgeObjectRetain();
          goto LABEL_536;
        case 3u:
          uint64_t v2664 = v14;
          v58 = v12;
          uint64_t v59 = v13[1];
          void *v58 = *v13;
          v58[1] = v59;
          uint64_t v60 = v13[3];
          v58[2] = v13[2];
          v58[3] = v60;
          uint64_t v61 = v13[5];
          v58[4] = v13[4];
          v58[5] = v61;
          uint64_t v62 = v13[7];
          v58[6] = v13[6];
          v58[7] = v62;
          uint64_t v63 = v13[9];
          v58[8] = v13[8];
          v58[9] = v63;
          v58[10] = v13[10];
          v2632 = v58;
          v2647 = (int *)type metadata accessor for Photo(0);
          uint64_t v64 = v2647[11];
          v2603 = (char *)v58 + v64;
          v65 = (char *)v13 + v64;
          uint64_t v66 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v2620 = v66;
          if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v66))
          {
            uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2603, v65, *(void *)(*(void *)(v67 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v2603, v65, v66);
            __swift_storeEnumTagSinglePayload((uint64_t)v2603, 0, 1, v66);
          }
          *(void *)((char *)v2632 + v2647[12]) = *(void *)&v2677[v2647[12]];
          *(void *)((char *)v2632 + v2647[13]) = *(void *)&v2677[v2647[13]];
          *(void *)((char *)v2632 + v2647[14]) = *(void *)&v2677[v2647[14]];
          *(void *)((char *)v2632 + v2647[15]) = *(void *)&v2677[v2647[15]];
          uint64_t v326 = v2647[16];
          v327 = (void *)((char *)v2632 + v326);
          v328 = &v2677[v326];
          uint64_t v329 = *((void *)v328 + 1);
          void *v327 = *(void *)v328;
          v327[1] = v329;
          uint64_t v330 = v2647[17];
          v331 = (void *)((char *)v2632 + v330);
          v332 = &v2677[v330];
          uint64_t v333 = type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          v334 = (int *)v333;
          swift_bridgeObjectRetain();
          v335 = v332;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v332, 1, v333))
          {
            uint64_t v336 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v331, v332, *(void *)(*(void *)(v336 - 8) + 64));
          }
          else
          {
            uint64_t v506 = *((void *)v332 + 1);
            void *v331 = *(void *)v332;
            v331[1] = v506;
            uint64_t v507 = *(int *)(v333 + 20);
            v508 = (void *)((char *)v331 + v507);
            v509 = &v332[v507];
            uint64_t v510 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            v2589 = v331;
            v2610 = v334;
            v2569 = v335;
            if (__swift_getEnumTagSinglePayload((uint64_t)v509, 1, v510))
            {
              uint64_t v511 = (uint64_t)v331;
              uint64_t v512 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v508, v509, *(void *)(*(void *)(v512 - 8) + 64));
            }
            else
            {
              uint64_t v720 = v509[1];
              void *v508 = *v509;
              v508[1] = v720;
              uint64_t v721 = v509[3];
              v508[2] = v509[2];
              v508[3] = v721;
              uint64_t v722 = v509[5];
              v508[4] = v509[4];
              v508[5] = v722;
              uint64_t v723 = v509[7];
              v508[6] = v509[6];
              v508[7] = v723;
              uint64_t v724 = v509[9];
              v508[8] = v509[8];
              v508[9] = v724;
              uint64_t v725 = v509[11];
              v508[10] = v509[10];
              v508[11] = v725;
              uint64_t v726 = v509[13];
              v508[12] = v509[12];
              v508[13] = v726;
              uint64_t v727 = v509[15];
              v508[14] = v509[14];
              v508[15] = v727;
              *((unsigned char *)v508 + 128) = *((unsigned char *)v509 + 128);
              *(_WORD *)((char *)v508 + 129) = *(_WORD *)((char *)v509 + 129);
              uint64_t v728 = v509[18];
              v508[17] = v509[17];
              v508[18] = v728;
              uint64_t v729 = v509[20];
              v508[19] = v509[19];
              v508[20] = v729;
              uint64_t v730 = v509[22];
              v508[21] = v509[21];
              v508[22] = v730;
              uint64_t v731 = v509[24];
              v508[23] = v509[23];
              v508[24] = v731;
              uint64_t v732 = v509[26];
              v508[25] = v509[25];
              v508[26] = v732;
              uint64_t v733 = v509[28];
              v508[27] = v509[27];
              v508[28] = v733;
              uint64_t v734 = v509[30];
              v508[29] = v509[29];
              v508[30] = v734;
              uint64_t v2501 = v509[32];
              v508[31] = v509[31];
              v508[32] = v2501;
              uint64_t v735 = v509[34];
              v508[33] = v509[33];
              v508[34] = v735;
              uint64_t v736 = v509[36];
              v508[35] = v509[35];
              v508[36] = v736;
              uint64_t v737 = v509[38];
              v508[37] = v509[37];
              v508[38] = v737;
              uint64_t v738 = v509[40];
              v508[39] = v509[39];
              v508[40] = v738;
              uint64_t v739 = v509[42];
              v508[41] = v509[41];
              v508[42] = v739;
              uint64_t v740 = v509[44];
              v508[43] = v509[43];
              v508[44] = v740;
              uint64_t v741 = v509[46];
              v508[45] = v509[45];
              v508[46] = v741;
              uint64_t v742 = v509[47];
              *((unsigned char *)v508 + 384) = *((unsigned char *)v509 + 384);
              v508[47] = v742;
              uint64_t v743 = v509[50];
              v508[49] = v509[49];
              v508[50] = v743;
              uint64_t v744 = v509[52];
              v508[51] = v509[51];
              v508[52] = v744;
              uint64_t v745 = *(int *)(v510 + 140);
              v2538 = (char *)v508 + v745;
              v746 = (char *)v509 + v745;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v746, 1, v2620))
              {
                uint64_t v747 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2538, v746, *(void *)(*(void *)(v747 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v2538, v746, v2620);
                __swift_storeEnumTagSinglePayload((uint64_t)v2538, 0, 1, v2620);
              }
              uint64_t v778 = *(int *)(v510 + 144);
              v779 = (char *)v508 + v778;
              v780 = (char *)v509 + v778;
              if (__swift_getEnumTagSinglePayload((uint64_t)v509 + v778, 1, v2620))
              {
                uint64_t v781 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v779, v780, *(void *)(*(void *)(v781 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v779, v780, v2620);
                __swift_storeEnumTagSinglePayload((uint64_t)v779, 0, 1, v2620);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v508, 0, 1, v510);
              uint64_t v511 = (uint64_t)v331;
              v334 = v2610;
            }
            uint64_t v813 = v334[6];
            v814 = (void *)(v511 + v813);
            v815 = (void *)((char *)v335 + v813);
            uint64_t v816 = type metadata accessor for TicketedTransportation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v815, 1, v816))
            {
              uint64_t v817 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v814, v815, *(void *)(*(void *)(v817 - 8) + 64));
            }
            else
            {
              uint64_t v818 = v815[1];
              void *v814 = *v815;
              v814[1] = v818;
              uint64_t v819 = v815[3];
              v814[2] = v815[2];
              v814[3] = v819;
              uint64_t v820 = v815[5];
              v814[4] = v815[4];
              v814[5] = v820;
              uint64_t v821 = v815[7];
              v814[6] = v815[6];
              v814[7] = v821;
              uint64_t v822 = v815[9];
              v814[8] = v815[8];
              v814[9] = v822;
              uint64_t v823 = v815[11];
              v814[10] = v815[10];
              v814[11] = v823;
              uint64_t v824 = v815[13];
              v814[12] = v815[12];
              v814[13] = v824;
              uint64_t v825 = v815[15];
              v814[14] = v815[14];
              v814[15] = v825;
              *((unsigned char *)v814 + 128) = *((unsigned char *)v815 + 128);
              *(_WORD *)((char *)v814 + 129) = *(_WORD *)((char *)v815 + 129);
              uint64_t v826 = v815[18];
              v814[17] = v815[17];
              v814[18] = v826;
              uint64_t v827 = v815[20];
              v814[19] = v815[19];
              v814[20] = v827;
              uint64_t v828 = v815[22];
              v814[21] = v815[21];
              v814[22] = v828;
              uint64_t v829 = v815[24];
              v814[23] = v815[23];
              v814[24] = v829;
              v2481 = (void *)v815[26];
              v814[25] = v815[25];
              v814[26] = v2481;
              uint64_t v830 = v815[28];
              v814[27] = v815[27];
              v814[28] = v830;
              uint64_t v831 = v815[30];
              v814[29] = v815[29];
              v814[30] = v831;
              uint64_t v832 = v815[32];
              v814[31] = v815[31];
              v814[32] = v832;
              uint64_t v833 = v815[34];
              v814[33] = v815[33];
              v814[34] = v833;
              uint64_t v834 = v815[36];
              uint64_t v835 = v815[35];
              *((unsigned char *)v814 + 296) = *((unsigned char *)v815 + 296);
              v814[35] = v835;
              v814[36] = v834;
              uint64_t v836 = *(int *)(v816 + 112);
              v2540 = (char *)v814 + v836;
              v837 = (char *)v815 + v836;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v837, 1, v2620))
              {
                uint64_t v838 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2540, v837, *(void *)(*(void *)(v838 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v2540, v837, v2620);
                __swift_storeEnumTagSinglePayload((uint64_t)v2540, 0, 1, v2620);
              }
              uint64_t v869 = *(int *)(v816 + 116);
              v870 = (char *)v814 + v869;
              v871 = (char *)v815 + v869;
              if (__swift_getEnumTagSinglePayload((uint64_t)v815 + v869, 1, v2620))
              {
                uint64_t v872 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v870, v871, *(void *)(*(void *)(v872 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v870, v871, v2620);
                __swift_storeEnumTagSinglePayload((uint64_t)v870, 0, 1, v2620);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v814, 0, 1, v816);
              uint64_t v511 = (uint64_t)v2589;
              v334 = v2610;
            }
            uint64_t v905 = v334[7];
            v906 = (void *)(v511 + v905);
            v907 = (void *)((char *)v335 + v905);
            v908 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v907, 1, (uint64_t)v908))
            {
              uint64_t v909 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v906, v907, *(void *)(*(void *)(v909 - 8) + 64));
            }
            else
            {
              uint64_t v910 = v907[1];
              void *v906 = *v907;
              v906[1] = v910;
              uint64_t v911 = v907[3];
              v906[2] = v907[2];
              v906[3] = v911;
              uint64_t v912 = v907[5];
              v906[4] = v907[4];
              v906[5] = v912;
              uint64_t v913 = v907[7];
              v906[6] = v907[6];
              v906[7] = v913;
              uint64_t v914 = v907[9];
              v906[8] = v907[8];
              v906[9] = v914;
              uint64_t v915 = v907[11];
              v906[10] = v907[10];
              v906[11] = v915;
              uint64_t v916 = v907[13];
              v906[12] = v907[12];
              v906[13] = v916;
              uint64_t v917 = v907[15];
              v906[14] = v907[14];
              v906[15] = v917;
              *((unsigned char *)v906 + 128) = *((unsigned char *)v907 + 128);
              *(_WORD *)((char *)v906 + 129) = *(_WORD *)((char *)v907 + 129);
              uint64_t v918 = v907[18];
              v906[17] = v907[17];
              v906[18] = v918;
              uint64_t v919 = v907[20];
              v906[19] = v907[19];
              v906[20] = v919;
              uint64_t v920 = v907[22];
              v906[21] = v907[21];
              v906[22] = v920;
              __dsta = (void *)v907[24];
              v906[23] = v907[23];
              v906[24] = __dsta;
              uint64_t v921 = v907[26];
              v906[25] = v907[25];
              v906[26] = v921;
              uint64_t v922 = v907[28];
              v906[27] = v907[27];
              v906[28] = v922;
              uint64_t v2505 = v907[30];
              v906[29] = v907[29];
              v906[30] = v2505;
              uint64_t v923 = v907[32];
              v906[31] = v907[31];
              v906[32] = v923;
              uint64_t v924 = v907[34];
              v906[33] = v907[33];
              v906[34] = v924;
              uint64_t v925 = v907[36];
              uint64_t v926 = v907[35];
              *((unsigned char *)v906 + 296) = *((unsigned char *)v907 + 296);
              v906[35] = v926;
              v906[36] = v925;
              uint64_t v927 = v907[39];
              v906[38] = v907[38];
              v906[39] = v927;
              uint64_t v928 = v908[29];
              v2542 = (char *)v906 + v928;
              v929 = (char *)v907 + v928;
              uint64_t v930 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v929, 1, v930))
              {
                uint64_t v931 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2542, v929, *(void *)(*(void *)(v931 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v930 - 8) + 16))(v2542, v929, v930);
                __swift_storeEnumTagSinglePayload((uint64_t)v2542, 0, 1, v930);
              }
              uint64_t v967 = v908[30];
              v968 = (void *)((char *)v906 + v967);
              v969 = (void *)((char *)v907 + v967);
              uint64_t v970 = v969[1];
              void *v968 = *v969;
              v968[1] = v970;
              uint64_t v971 = v908[31];
              v972 = (char *)v906 + v971;
              v973 = (char *)v907 + v971;
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v973, 1, v2620))
              {
                uint64_t v974 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v972, v973, *(void *)(*(void *)(v974 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v972, v973, v2620);
                __swift_storeEnumTagSinglePayload((uint64_t)v972, 0, 1, v2620);
              }
              uint64_t v987 = v908[32];
              v988 = (char *)v906 + v987;
              v989 = (char *)v907 + v987;
              if (__swift_getEnumTagSinglePayload((uint64_t)v907 + v987, 1, v2620))
              {
                uint64_t v990 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v988, v989, *(void *)(*(void *)(v990 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v988, v989, v2620);
                __swift_storeEnumTagSinglePayload((uint64_t)v988, 0, 1, v2620);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v906, 0, 1, (uint64_t)v908);
              uint64_t v511 = (uint64_t)v2589;
              v334 = v2610;
            }
            uint64_t v1022 = v334[8];
            v1023 = (void *)(v511 + v1022);
            v1024 = (void *)((char *)v335 + v1022);
            uint64_t v1025 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1024, 1, v1025))
            {
              uint64_t v1026 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v1023, v1024, *(void *)(*(void *)(v1026 - 8) + 64));
            }
            else
            {
              uint64_t v1027 = v1024[1];
              void *v1023 = *v1024;
              v1023[1] = v1027;
              uint64_t v1028 = v1024[3];
              v1023[2] = v1024[2];
              v1023[3] = v1028;
              uint64_t v1029 = v1024[5];
              v1023[4] = v1024[4];
              v1023[5] = v1029;
              uint64_t v1030 = v1024[7];
              v1023[6] = v1024[6];
              v1023[7] = v1030;
              uint64_t v1031 = v1024[9];
              v1023[8] = v1024[8];
              v1023[9] = v1031;
              uint64_t v1032 = v1024[11];
              v1023[10] = v1024[10];
              v1023[11] = v1032;
              uint64_t v1033 = v1024[13];
              v1023[12] = v1024[12];
              v1023[13] = v1033;
              uint64_t v1034 = v1024[15];
              v1023[14] = v1024[14];
              v1023[15] = v1034;
              *((unsigned char *)v1023 + 128) = *((unsigned char *)v1024 + 128);
              *(_WORD *)((char *)v1023 + 129) = *(_WORD *)((char *)v1024 + 129);
              uint64_t v1035 = v1024[18];
              v1023[17] = v1024[17];
              v1023[18] = v1035;
              uint64_t v1036 = v1024[20];
              v1023[19] = v1024[19];
              v1023[20] = v1036;
              uint64_t v1037 = v1024[22];
              v1023[21] = v1024[21];
              v1023[22] = v1037;
              uint64_t v1038 = v1024[24];
              v1023[23] = v1024[23];
              v1023[24] = v1038;
              uint64_t v1039 = v1024[26];
              v1023[25] = v1024[25];
              v1023[26] = v1039;
              uint64_t v1040 = v1024[28];
              v1023[27] = v1024[27];
              v1023[28] = v1040;
              uint64_t v1041 = v1024[30];
              v1023[29] = v1024[29];
              v1023[30] = v1041;
              uint64_t v1042 = v1024[32];
              v1023[31] = v1024[31];
              v1023[32] = v1042;
              uint64_t v1043 = v1024[34];
              uint64_t v1044 = v1024[33];
              *((unsigned char *)v1023 + 280) = *((unsigned char *)v1024 + 280);
              v1023[33] = v1044;
              v1023[34] = v1043;
              uint64_t v1045 = v1024[37];
              v1023[36] = v1024[36];
              v1023[37] = v1045;
              uint64_t v1046 = *(int *)(v1025 + 108);
              v2544 = (char *)v1023 + v1046;
              v1047 = (char *)v1024 + v1046;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1047, 1, v2620))
              {
                uint64_t v1048 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2544, v1047, *(void *)(*(void *)(v1048 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v2544, v1047, v2620);
                __swift_storeEnumTagSinglePayload((uint64_t)v2544, 0, 1, v2620);
              }
              uint64_t v1081 = *(int *)(v1025 + 112);
              v1082 = (char *)v1023 + v1081;
              v1083 = (char *)v1024 + v1081;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1024 + v1081, 1, v2620))
              {
                uint64_t v1084 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1082, v1083, *(void *)(*(void *)(v1084 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v1082, v1083, v2620);
                __swift_storeEnumTagSinglePayload((uint64_t)v1082, 0, 1, v2620);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v1023, 0, 1, v1025);
              uint64_t v511 = (uint64_t)v2589;
              v334 = v2610;
            }
            uint64_t v1112 = v334[9];
            v1113 = (void *)(v511 + v1112);
            v1114 = (void *)((char *)v335 + v1112);
            v1115 = (int *)type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1114, 1, (uint64_t)v1115))
            {
              uint64_t v1116 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v1113, v1114, *(void *)(*(void *)(v1116 - 8) + 64));
            }
            else
            {
              uint64_t v1117 = v1114[1];
              void *v1113 = *v1114;
              v1113[1] = v1117;
              uint64_t v1118 = v1114[3];
              v1113[2] = v1114[2];
              v1113[3] = v1118;
              uint64_t v1119 = v1114[5];
              v1113[4] = v1114[4];
              v1113[5] = v1119;
              uint64_t v1120 = v1114[7];
              v1113[6] = v1114[6];
              v1113[7] = v1120;
              uint64_t v1121 = v1114[9];
              v1113[8] = v1114[8];
              v1113[9] = v1121;
              uint64_t v1122 = v1114[11];
              v1113[10] = v1114[10];
              v1113[11] = v1122;
              uint64_t v1123 = v1114[13];
              v1113[12] = v1114[12];
              v1113[13] = v1123;
              uint64_t v1124 = v1114[15];
              v1113[14] = v1114[14];
              v1113[15] = v1124;
              *((unsigned char *)v1113 + 128) = *((unsigned char *)v1114 + 128);
              *(_WORD *)((char *)v1113 + 129) = *(_WORD *)((char *)v1114 + 129);
              uint64_t v1125 = v1114[18];
              v1113[17] = v1114[17];
              v1113[18] = v1125;
              uint64_t v1126 = v1114[20];
              v1113[19] = v1114[19];
              v1113[20] = v1126;
              uint64_t v1127 = v1114[22];
              v1113[21] = v1114[21];
              v1113[22] = v1127;
              uint64_t v1128 = v1114[24];
              v1113[23] = v1114[23];
              v1113[24] = v1128;
              uint64_t v1129 = v1114[26];
              v1113[25] = v1114[25];
              v1113[26] = v1129;
              uint64_t v1130 = v1114[28];
              v1113[27] = v1114[27];
              v1113[28] = v1130;
              uint64_t v1131 = v1114[30];
              v1113[29] = v1114[29];
              v1113[30] = v1131;
              v1113[31] = v1114[31];
              uint64_t v1132 = v1115[24];
              v2508 = (char *)v1113 + v1132;
              v1133 = (char *)v1114 + v1132;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1133, 1, v2620))
              {
                uint64_t v1134 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2508, v1133, *(void *)(*(void *)(v1134 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v2508, v1133, v2620);
                __swift_storeEnumTagSinglePayload((uint64_t)v2508, 0, 1, v2620);
              }
              uint64_t v1162 = v1115[25];
              v1163 = (char *)v1113 + v1162;
              v1164 = (char *)v1114 + v1162;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1114 + v1162, 1, v2620))
              {
                uint64_t v1165 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1163, v1164, *(void *)(*(void *)(v1165 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v1163, v1164, v2620);
                __swift_storeEnumTagSinglePayload((uint64_t)v1163, 0, 1, v2620);
              }
              uint64_t v1175 = v1115[26];
              v1176 = (char *)v1113 + v1175;
              v1177 = (char *)v1114 + v1175;
              uint64_t v1178 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1177, 1, v1178))
              {
                uint64_t v1179 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1176, v1177, *(void *)(*(void *)(v1179 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1178 - 8) + 16))(v1176, v1177, v1178);
                __swift_storeEnumTagSinglePayload((uint64_t)v1176, 0, 1, v1178);
              }
              v335 = v2569;
              __swift_storeEnumTagSinglePayload((uint64_t)v1113, 0, 1, (uint64_t)v1115);
              uint64_t v511 = (uint64_t)v2589;
              v334 = v2610;
            }
            uint64_t v1204 = v334[10];
            v1205 = (void *)(v511 + v1204);
            v1206 = (void *)((char *)v335 + v1204);
            uint64_t v1207 = type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1206, 1, v1207))
            {
              uint64_t v1208 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1205, v1206, *(void *)(*(void *)(v1208 - 8) + 64));
            }
            else
            {
              uint64_t v1209 = v1206[1];
              void *v1205 = *v1206;
              v1205[1] = v1209;
              uint64_t v1210 = v1206[3];
              v1205[2] = v1206[2];
              v1205[3] = v1210;
              uint64_t v1211 = v1206[5];
              v1205[4] = v1206[4];
              v1205[5] = v1211;
              uint64_t v1212 = v1206[7];
              v1205[6] = v1206[6];
              v1205[7] = v1212;
              uint64_t v1213 = v1206[9];
              v1205[8] = v1206[8];
              v1205[9] = v1213;
              uint64_t v1214 = v1206[11];
              v1205[10] = v1206[10];
              v1205[11] = v1214;
              uint64_t v1215 = v1206[13];
              v1205[12] = v1206[12];
              v1205[13] = v1215;
              uint64_t v1216 = v1206[15];
              v1205[14] = v1206[14];
              v1205[15] = v1216;
              *((unsigned char *)v1205 + 128) = *((unsigned char *)v1206 + 128);
              *(_WORD *)((char *)v1205 + 129) = *(_WORD *)((char *)v1206 + 129);
              uint64_t v1217 = v1206[18];
              v1205[17] = v1206[17];
              v1205[18] = v1217;
              uint64_t v1218 = v1206[20];
              v1205[19] = v1206[19];
              v1205[20] = v1218;
              uint64_t v1219 = v1206[22];
              v1205[21] = v1206[21];
              v1205[22] = v1219;
              uint64_t v1220 = v1206[24];
              v1205[23] = v1206[23];
              v1205[24] = v1220;
              uint64_t v1221 = v1206[26];
              v1205[25] = v1206[25];
              v1205[26] = v1221;
              v1205[27] = v1206[27];
              uint64_t v1222 = *(int *)(v1207 + 88);
              v2510 = (int *)v1207;
              v2547 = (char *)v1205 + v1222;
              v1223 = (char *)v1206 + v1222;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1223, 1, v2620))
              {
                uint64_t v1224 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2547, v1223, *(void *)(*(void *)(v1224 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v2547, v1223, v2620);
                __swift_storeEnumTagSinglePayload((uint64_t)v2547, 0, 1, v2620);
              }
              uint64_t v1249 = v2510[23];
              v1250 = (char *)v1205 + v1249;
              v1251 = (char *)v1206 + v1249;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1206 + v1249, 1, v2620))
              {
                uint64_t v1252 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1250, v1251, *(void *)(*(void *)(v1252 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v1250, v1251, v2620);
                __swift_storeEnumTagSinglePayload((uint64_t)v1250, 0, 1, v2620);
              }
              uint64_t v1265 = v2510[24];
              v1266 = (char *)v1205 + v1265;
              v1267 = (char *)v1206 + v1265;
              *(void *)v1266 = *(void *)v1267;
              v1266[8] = v1267[8];
              uint64_t v1268 = v2510[25];
              v1269 = (char *)v1205 + v1268;
              v1270 = (char *)v1206 + v1268;
              uint64_t v1271 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1270, 1, v1271))
              {
                uint64_t v1272 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1269, v1270, *(void *)(*(void *)(v1272 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1271 - 8) + 16))(v1269, v1270, v1271);
                __swift_storeEnumTagSinglePayload((uint64_t)v1269, 0, 1, v1271);
              }
              v335 = v2569;
              __swift_storeEnumTagSinglePayload((uint64_t)v1205, 0, 1, (uint64_t)v2510);
              uint64_t v511 = (uint64_t)v2589;
              v334 = v2610;
            }
            uint64_t v1295 = v334[11];
            v1296 = (void *)(v511 + v1295);
            v1297 = (void *)((char *)v335 + v1295);
            v1298 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1297, 1, (uint64_t)v1298))
            {
              uint64_t v1299 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1296, v1297, *(void *)(*(void *)(v1299 - 8) + 64));
            }
            else
            {
              uint64_t v1300 = v1297[1];
              void *v1296 = *v1297;
              v1296[1] = v1300;
              uint64_t v1301 = v1297[3];
              v1296[2] = v1297[2];
              v1296[3] = v1301;
              uint64_t v2513 = v1297[5];
              v1296[4] = v1297[4];
              v1296[5] = v2513;
              uint64_t v1302 = v1297[7];
              v1296[6] = v1297[6];
              v1296[7] = v1302;
              uint64_t v1303 = v1297[9];
              v1296[8] = v1297[8];
              v1296[9] = v1303;
              uint64_t v1304 = v1297[11];
              v1296[10] = v1297[10];
              v1296[11] = v1304;
              *((unsigned char *)v1296 + 96) = *((unsigned char *)v1297 + 96);
              uint64_t v1305 = v1297[14];
              v1296[13] = v1297[13];
              v1296[14] = v1305;
              uint64_t v1306 = v1298[13];
              v2549 = (char *)v1296 + v1306;
              v1307 = (char *)v1297 + v1306;
              uint64_t v1308 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1307, 1, v1308))
              {
                uint64_t v1309 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2549, v1307, *(void *)(*(void *)(v1309 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1308 - 8) + 16))(v2549, v1307, v1308);
                __swift_storeEnumTagSinglePayload((uint64_t)v2549, 0, 1, v1308);
              }
              uint64_t v1327 = v1298[14];
              v1328 = (char *)v1296 + v1327;
              v1329 = (char *)v1297 + v1327;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1297 + v1327, 1, v1308))
              {
                uint64_t v1330 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1328, v1329, *(void *)(*(void *)(v1330 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1308 - 8) + 16))(v1328, v1329, v1308);
                __swift_storeEnumTagSinglePayload((uint64_t)v1328, 0, 1, v1308);
              }
              uint64_t v1404 = v1298[15];
              v1405 = (void *)((char *)v1296 + v1404);
              v1406 = (void *)((char *)v1297 + v1404);
              uint64_t v1407 = v1406[1];
              void *v1405 = *v1406;
              v1405[1] = v1407;
              uint64_t v1408 = v1298[16];
              v1409 = (void *)((char *)v1296 + v1408);
              v1410 = (void *)((char *)v1297 + v1408);
              uint64_t v1411 = v1410[1];
              void *v1409 = *v1410;
              v1409[1] = v1411;
              uint64_t v1412 = v1298[17];
              v1413 = (void *)((char *)v1296 + v1412);
              v1414 = (void *)((char *)v1297 + v1412);
              uint64_t v1415 = v1414[1];
              void *v1413 = *v1414;
              v1413[1] = v1415;
              uint64_t v1416 = v1298[18];
              v2517 = (char *)v1297 + v1416;
              v2551 = (char *)v1296 + v1416;
              uint64_t v1417 = type metadata accessor for DateComponents();
              v1418 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1417 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1418(v2551, v2517, v1417);
              v1418((char *)v1296 + v1298[19], (char *)v1297 + v1298[19], v1417);
              uint64_t v1419 = v1298[20];
              v1420 = (void *)((char *)v1296 + v1419);
              v1421 = (void *)((char *)v1297 + v1419);
              uint64_t v1422 = v1421[1];
              void *v1420 = *v1421;
              v1420[1] = v1422;
              uint64_t v1423 = v1298[21];
              v1424 = (void *)((char *)v1296 + v1423);
              v1425 = (void *)((char *)v1297 + v1423);
              v2465 = (void *)v1425[1];
              void *v1424 = *v1425;
              v1424[1] = v2465;
              uint64_t v1426 = v1298[22];
              v1427 = (void *)((char *)v1296 + v1426);
              v1428 = (void *)((char *)v1297 + v1426);
              uint64_t v2518 = v1428[1];
              void *v1427 = *v1428;
              v1427[1] = v2518;
              uint64_t v1429 = v1298[23];
              v1430 = (void *)((char *)v1296 + v1429);
              v1431 = (void *)((char *)v1297 + v1429);
              v2490 = (void *)v1431[1];
              void *v1430 = *v1431;
              v1430[1] = v2490;
              uint64_t v1432 = v1298[24];
              v1433 = (void *)((char *)v1296 + v1432);
              v1434 = (void *)((char *)v1297 + v1432);
              uint64_t v2475 = v1434[1];
              void *v1433 = *v1434;
              v1433[1] = v2475;
              uint64_t v1435 = v1298[25];
              v1436 = (void *)((char *)v1296 + v1435);
              v1437 = (void *)((char *)v1297 + v1435);
              uint64_t v2456 = v1437[1];
              void *v1436 = *v1437;
              v1436[1] = v2456;
              uint64_t v1438 = v1298[26];
              v1439 = (void *)((char *)v1296 + v1438);
              v1440 = (void *)((char *)v1297 + v1438);
              uint64_t v2448 = v1440[1];
              void *v1439 = *v1440;
              v1439[1] = v2448;
              uint64_t v1441 = v1298[27];
              v1442 = (void *)((char *)v1296 + v1441);
              v1443 = (void *)((char *)v1297 + v1441);
              v2442 = (void *)v1443[1];
              void *v1442 = *v1443;
              v1442[1] = v2442;
              uint64_t v1444 = v1298[28];
              v1445 = (void *)((char *)v1296 + v1444);
              v1446 = (void *)((char *)v1297 + v1444);
              uint64_t v2437 = v1446[1];
              void *v1445 = *v1446;
              v1445[1] = v2437;
              uint64_t v1447 = v1298[29];
              v1448 = (void *)((char *)v1296 + v1447);
              v1449 = (void *)((char *)v1297 + v1447);
              v2434 = (void *)v1449[1];
              void *v1448 = *v1449;
              v1448[1] = v2434;
              uint64_t v1450 = v1298[30];
              v1451 = (void *)((char *)v1296 + v1450);
              v1452 = (void *)((char *)v1297 + v1450);
              v2430 = (void *)v1452[1];
              void *v1451 = *v1452;
              v1451[1] = v2430;
              uint64_t v1453 = v1298[31];
              v1454 = (void *)((char *)v1296 + v1453);
              v1455 = (void *)((char *)v1297 + v1453);
              v2425 = (void *)v1455[1];
              void *v1454 = *v1455;
              v1454[1] = v2425;
              uint64_t v1456 = v1298[32];
              v1457 = (void *)((char *)v1296 + v1456);
              v1458 = (void *)((char *)v1297 + v1456);
              uint64_t v1459 = v1458[1];
              void *v1457 = *v1458;
              v1457[1] = v1459;
              *(void *)((char *)v1296 + v1298[33]) = *(void *)((char *)v1297 + v1298[33]);
              *(void *)((char *)v1296 + v1298[34]) = *(void *)((char *)v1297 + v1298[34]);
              uint64_t v1460 = v1298[35];
              v1461 = (void *)((char *)v1296 + v1460);
              v1462 = (void *)((char *)v1297 + v1460);
              uint64_t v1463 = v1462[1];
              void *v1461 = *v1462;
              v1461[1] = v1463;
              uint64_t v1464 = v1298[36];
              v1465 = (void *)((char *)v1296 + v1464);
              v1466 = (void *)((char *)v1297 + v1464);
              uint64_t v1467 = v1466[1];
              void *v1465 = *v1466;
              v1465[1] = v1467;
              uint64_t v1468 = v1298[37];
              v1469 = (void *)((char *)v1296 + v1468);
              v1470 = (void *)((char *)v1297 + v1468);
              uint64_t v1471 = v1470[1];
              void *v1469 = *v1470;
              v1469[1] = v1471;
              uint64_t v1472 = v1298[38];
              v2552 = (char *)v1296 + v1472;
              v1473 = (char *)v1297 + v1472;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1473, 1, v2620))
              {
                uint64_t v1474 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2552, v1473, *(void *)(*(void *)(v1474 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v2552, v1473, v2620);
                __swift_storeEnumTagSinglePayload((uint64_t)v2552, 0, 1, v2620);
              }
              uint64_t v1593 = v1298[39];
              v1594 = (void *)((char *)v1296 + v1593);
              v1595 = (void *)((char *)v1297 + v1593);
              uint64_t v1596 = v1595[1];
              void *v1594 = *v1595;
              v1594[1] = v1596;
              uint64_t v1597 = v1298[40];
              v1598 = (void *)((char *)v1296 + v1597);
              v1599 = (void *)((char *)v1297 + v1597);
              uint64_t v1600 = v1599[1];
              void *v1598 = *v1599;
              v1598[1] = v1600;
              uint64_t v1601 = v1298[41];
              v1602 = (char *)v1296 + v1601;
              v1603 = (char *)v1297 + v1601;
              v1602[8] = v1603[8];
              *(void *)v1602 = *(void *)v1603;
              uint64_t v1604 = v1298[42];
              v1605 = (void *)((char *)v1296 + v1604);
              v1606 = (void *)((char *)v1297 + v1604);
              uint64_t v1607 = v1606[1];
              void *v1605 = *v1606;
              v1605[1] = v1607;
              uint64_t v1608 = v1298[43];
              v1609 = (char *)v1296 + v1608;
              v1610 = (char *)v1297 + v1608;
              *(_OWORD *)v1609 = *(_OWORD *)v1610;
              *(void *)(v1609 + 13) = *(void *)(v1610 + 13);
              uint64_t v1611 = v1298[44];
              v1612 = (void *)((char *)v1296 + v1611);
              v1613 = (void *)((char *)v1297 + v1611);
              uint64_t v1614 = v1613[1];
              void *v1612 = *v1613;
              v1612[1] = v1614;
              uint64_t v1615 = v1298[45];
              v1616 = (void *)((char *)v1296 + v1615);
              v1617 = (void *)((char *)v1297 + v1615);
              uint64_t v1618 = v1617[1];
              void *v1616 = *v1617;
              v1616[1] = v1618;
              uint64_t v1619 = v1298[46];
              v1620 = (void *)((char *)v1296 + v1619);
              v1621 = (void *)((char *)v1297 + v1619);
              uint64_t v1622 = v1621[1];
              void *v1620 = *v1621;
              v1620[1] = v1622;
              uint64_t v1623 = v1298[47];
              v1624 = (void *)((char *)v1296 + v1623);
              v1625 = (void *)((char *)v1297 + v1623);
              uint64_t v1626 = v1625[1];
              void *v1624 = *v1625;
              v1624[1] = v1626;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1296, 0, 1, (uint64_t)v1298);
              uint64_t v511 = (uint64_t)v2589;
              v334 = v2610;
              v335 = v2569;
            }
            uint64_t v1627 = v334[12];
            v1628 = (void *)(v511 + v1627);
            v1629 = (void *)((char *)v335 + v1627);
            v1630 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1629, 1, (uint64_t)v1630))
            {
              uint64_t v1631 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1628, v1629, *(void *)(*(void *)(v1631 - 8) + 64));
            }
            else
            {
              uint64_t v1632 = v1629[1];
              void *v1628 = *v1629;
              v1628[1] = v1632;
              uint64_t v1633 = v1629[3];
              v1628[2] = v1629[2];
              v1628[3] = v1633;
              uint64_t v2522 = v1629[5];
              v1628[4] = v1629[4];
              v1628[5] = v2522;
              uint64_t v1634 = v1629[7];
              v1628[6] = v1629[6];
              v1628[7] = v1634;
              uint64_t v1635 = v1629[9];
              v1628[8] = v1629[8];
              v1628[9] = v1635;
              uint64_t v1636 = v1629[11];
              v1628[10] = v1629[10];
              v1628[11] = v1636;
              *((unsigned char *)v1628 + 96) = *((unsigned char *)v1629 + 96);
              uint64_t v1637 = v1629[14];
              v1628[13] = v1629[13];
              v1628[14] = v1637;
              uint64_t v1638 = v1629[16];
              v1628[15] = v1629[15];
              v1628[16] = v1638;
              uint64_t v1639 = v1630[14];
              v2555 = (char *)v1628 + v1639;
              v1640 = (char *)v1629 + v1639;
              uint64_t v1641 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1640, 1, v1641))
              {
                uint64_t v1642 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2555, v1640, *(void *)(*(void *)(v1642 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1641 - 8) + 16))(v2555, v1640, v1641);
                __swift_storeEnumTagSinglePayload((uint64_t)v2555, 0, 1, v1641);
              }
              uint64_t v1695 = v1630[15];
              v1696 = (char *)v1628 + v1695;
              v1697 = (char *)v1629 + v1695;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1629 + v1695, 1, v1641))
              {
                uint64_t v1698 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1696, v1697, *(void *)(*(void *)(v1698 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1641 - 8) + 16))(v1696, v1697, v1641);
                __swift_storeEnumTagSinglePayload((uint64_t)v1696, 0, 1, v1641);
              }
              uint64_t v1758 = v1630[16];
              v1759 = (void *)((char *)v1628 + v1758);
              v1760 = (void *)((char *)v1629 + v1758);
              uint64_t v1761 = v1760[1];
              void *v1759 = *v1760;
              v1759[1] = v1761;
              uint64_t v1762 = v1630[17];
              v1763 = (void *)((char *)v1628 + v1762);
              v1764 = (void *)((char *)v1629 + v1762);
              uint64_t v1765 = v1764[1];
              void *v1763 = *v1764;
              v1763[1] = v1765;
              uint64_t v1766 = v1630[18];
              v1767 = (void *)((char *)v1628 + v1766);
              v1768 = (void *)((char *)v1629 + v1766);
              uint64_t v2557 = v1768[1];
              void *v1767 = *v1768;
              v1767[1] = v2557;
              uint64_t v1769 = v1630[19];
              v1770 = (void *)((char *)v1628 + v1769);
              v1771 = (void *)((char *)v1629 + v1769);
              uint64_t v2526 = v1771[1];
              void *v1770 = *v1771;
              v1770[1] = v2526;
              uint64_t v1772 = v1630[20];
              v1773 = (void *)((char *)v1628 + v1772);
              v1774 = (void *)((char *)v1629 + v1772);
              v2467 = (void *)v1774[1];
              void *v1773 = *v1774;
              v1773[1] = v2467;
              *(void *)((char *)v1628 + v1630[21]) = *(void *)((char *)v1629 + v1630[21]);
              *(void *)((char *)v1628 + v1630[22]) = *(void *)((char *)v1629 + v1630[22]);
              uint64_t v1775 = v1630[23];
              v1776 = (char *)v1628 + v1775;
              v1777 = (char *)v1629 + v1775;
              *(void *)v1776 = *(void *)v1777;
              v1776[8] = v1777[8];
              uint64_t v1778 = v1630[24];
              v1779 = (char *)v1628 + v1778;
              v1780 = (char *)v1629 + v1778;
              *(void *)v1779 = *(void *)v1780;
              v1779[8] = v1780[8];
              uint64_t v1781 = v1630[25];
              v1782 = (void *)((char *)v1628 + v1781);
              v1783 = (void *)((char *)v1629 + v1781);
              uint64_t v1784 = v1783[1];
              void *v1782 = *v1783;
              v1782[1] = v1784;
              uint64_t v1785 = v1630[26];
              v1786 = (void *)((char *)v1628 + v1785);
              v1787 = (void *)((char *)v1629 + v1785);
              uint64_t v1788 = v1787[1];
              void *v1786 = *v1787;
              v1786[1] = v1788;
              uint64_t v1789 = v1630[27];
              v1790 = (void *)((char *)v1628 + v1789);
              v1791 = (void *)((char *)v1629 + v1789);
              uint64_t v1792 = v1791[1];
              void *v1790 = *v1791;
              v1790[1] = v1792;
              uint64_t v1793 = v1630[28];
              v1794 = (void *)((char *)v1628 + v1793);
              v1795 = (void *)((char *)v1629 + v1793);
              uint64_t v1796 = v1795[1];
              void *v1794 = *v1795;
              v1794[1] = v1796;
              uint64_t v1797 = v1630[29];
              v1798 = (char *)v1628 + v1797;
              v1799 = (char *)v1629 + v1797;
              *(void *)v1798 = *(void *)v1799;
              v1798[8] = v1799[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1628, 0, 1, (uint64_t)v1630);
              uint64_t v511 = (uint64_t)v2589;
              v334 = v2610;
              v335 = v2569;
            }
            uint64_t v1800 = v334[13];
            v1801 = (void *)(v511 + v1800);
            v1802 = (void *)((char *)v335 + v1800);
            v1803 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1802, 1, (uint64_t)v1803))
            {
              uint64_t v1804 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1801, v1802, *(void *)(*(void *)(v1804 - 8) + 64));
            }
            else
            {
              uint64_t v1805 = v1802[1];
              void *v1801 = *v1802;
              v1801[1] = v1805;
              uint64_t v1806 = v1802[3];
              v1801[2] = v1802[2];
              v1801[3] = v1806;
              uint64_t v2558 = v1802[5];
              v1801[4] = v1802[4];
              v1801[5] = v2558;
              uint64_t v2527 = v1802[7];
              v1801[6] = v1802[6];
              v1801[7] = v2527;
              uint64_t v1807 = v1802[9];
              v1801[8] = v1802[8];
              v1801[9] = v1807;
              uint64_t v1808 = v1802[11];
              v1801[10] = v1802[10];
              v1801[11] = v1808;
              *((unsigned char *)v1801 + 96) = *((unsigned char *)v1802 + 96);
              uint64_t v1809 = v1802[14];
              v1801[13] = v1802[13];
              v1801[14] = v1809;
              uint64_t v1810 = v1802[16];
              v1801[15] = v1802[15];
              v1801[16] = v1810;
              uint64_t v1811 = v1803[14];
              v2572 = (char *)v1801 + v1811;
              v1812 = (char *)v1802 + v1811;
              v2468 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1812, 1, (uint64_t)v2468))
              {
                uint64_t v1813 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2572, v1812, *(void *)(*(void *)(v1813 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2468 - 1) + 16))(v2572, v1812, v2468);
                __swift_storeEnumTagSinglePayload((uint64_t)v2572, 0, 1, (uint64_t)v2468);
              }
              uint64_t v2044 = v1803[15];
              v2045 = (void *)((char *)v1801 + v2044);
              v2046 = (void *)((char *)v1802 + v2044);
              uint64_t v2047 = v2046[1];
              void *v2045 = *v2046;
              v2045[1] = v2047;
              uint64_t v2048 = v1803[16];
              v2049 = (void *)((char *)v1801 + v2048);
              v2050 = (void *)((char *)v1802 + v2048);
              uint64_t v2051 = v2050[1];
              void *v2049 = *v2050;
              v2049[1] = v2051;
              uint64_t v2052 = v1803[17];
              v2053 = (void *)((char *)v1801 + v2052);
              v2054 = (void *)((char *)v1802 + v2052);
              uint64_t v2055 = v2054[1];
              void *v2053 = *v2054;
              v2053[1] = v2055;
              uint64_t v2056 = v1803[18];
              v2057 = (void *)((char *)v1801 + v2056);
              v2058 = (void *)((char *)v1802 + v2056);
              uint64_t v2578 = v2058[1];
              void *v2057 = *v2058;
              v2057[1] = v2578;
              uint64_t v2059 = v1803[19];
              v2060 = (void *)((char *)v1801 + v2059);
              v2061 = (void *)((char *)v1802 + v2059);
              uint64_t v2062 = v2061[1];
              void *v2060 = *v2061;
              v2060[1] = v2062;
              *(void *)((char *)v1801 + v1803[20]) = *(void *)((char *)v1802 + v1803[20]);
              uint64_t v2063 = v1803[21];
              v2064 = (void *)((char *)v1801 + v2063);
              v2065 = (void *)((char *)v1802 + v2063);
              uint64_t v2066 = v2065[1];
              void *v2064 = *v2065;
              v2064[1] = v2066;
              uint64_t v2067 = v1803[22];
              v2068 = (void *)((char *)v1801 + v2067);
              v2069 = (void *)((char *)v1802 + v2067);
              uint64_t v2070 = v2069[1];
              void *v2068 = *v2069;
              v2068[1] = v2070;
              uint64_t v2071 = v1803[23];
              v2072 = (void *)((char *)v1801 + v2071);
              v2073 = (void *)((char *)v1802 + v2071);
              uint64_t v2074 = v2073[1];
              void *v2072 = *v2073;
              v2072[1] = v2074;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1801, 0, 1, (uint64_t)v1803);
              uint64_t v511 = (uint64_t)v2589;
              v334 = v2610;
            }
            __swift_storeEnumTagSinglePayload(v511, 0, 1, (uint64_t)v334);
          }
          uint64_t v2075 = v2647[18];
          v2076 = (void *)((char *)v2632 + v2075);
          v2077 = &v2677[v2075];
          v2078 = (int *)type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2077, 1, (uint64_t)v2078))
          {
            uint64_t v2079 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v2076, v2077, *(void *)(*(void *)(v2079 - 8) + 64));
          }
          else
          {
            uint64_t v2080 = *((void *)v2077 + 1);
            void *v2076 = *(void *)v2077;
            v2076[1] = v2080;
            uint64_t v2081 = *((void *)v2077 + 3);
            v2076[2] = *((void *)v2077 + 2);
            v2076[3] = v2081;
            uint64_t v2082 = *((void *)v2077 + 5);
            v2076[4] = *((void *)v2077 + 4);
            v2076[5] = v2082;
            uint64_t v2083 = *((void *)v2077 + 7);
            v2076[6] = *((void *)v2077 + 6);
            v2076[7] = v2083;
            uint64_t v2084 = *((void *)v2077 + 9);
            v2076[8] = *((void *)v2077 + 8);
            v2076[9] = v2084;
            uint64_t v2085 = *((void *)v2077 + 11);
            v2076[10] = *((void *)v2077 + 10);
            v2076[11] = v2085;
            uint64_t v2086 = v2078[10];
            v2613 = (char *)v2076 + v2086;
            v2087 = &v2077[v2086];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2087, 1, v2620))
            {
              uint64_t v2088 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2613, v2087, *(void *)(*(void *)(v2088 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v2613, v2087, v2620);
              __swift_storeEnumTagSinglePayload((uint64_t)v2613, 0, 1, v2620);
            }
            uint64_t v2089 = v2078[11];
            v2090 = (char *)v2076 + v2089;
            v2091 = &v2077[v2089];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v2077[v2089], 1, v2620))
            {
              uint64_t v2092 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2090, v2091, *(void *)(*(void *)(v2092 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v2090, v2091, v2620);
              __swift_storeEnumTagSinglePayload((uint64_t)v2090, 0, 1, v2620);
            }
            uint64_t v2093 = v2078[12];
            v2094 = (void *)((char *)v2076 + v2093);
            v2095 = &v2077[v2093];
            uint64_t v2096 = v2095[1];
            void *v2094 = *v2095;
            v2094[1] = v2096;
            uint64_t v2097 = v2078[13];
            v2098 = (void *)((char *)v2076 + v2097);
            v2099 = &v2077[v2097];
            uint64_t v2100 = v2099[1];
            void *v2098 = *v2099;
            v2098[1] = v2100;
            uint64_t v2101 = v2078[14];
            v2102 = (void *)((char *)v2076 + v2101);
            v2103 = &v2077[v2101];
            uint64_t v2104 = v2103[1];
            void *v2102 = *v2103;
            v2102[1] = v2104;
            uint64_t v2105 = v2078[15];
            v2106 = (char *)v2076 + v2105;
            v2107 = &v2077[v2105];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2107, 1, v2620))
            {
              uint64_t v2108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2106, v2107, *(void *)(*(void *)(v2108 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v2106, v2107, v2620);
              __swift_storeEnumTagSinglePayload((uint64_t)v2106, 0, 1, v2620);
            }
            uint64_t v2109 = v2078[16];
            v2110 = (void *)((char *)v2076 + v2109);
            v2111 = &v2077[v2109];
            uint64_t v2112 = v2111[1];
            void *v2110 = *v2111;
            v2110[1] = v2112;
            uint64_t v2113 = v2078[17];
            v2114 = (void *)((char *)v2076 + v2113);
            v2115 = &v2077[v2113];
            uint64_t v2116 = v2115[1];
            void *v2114 = *v2115;
            v2114[1] = v2116;
            uint64_t v2117 = v2078[18];
            v2118 = (void *)((char *)v2076 + v2117);
            v2119 = &v2077[v2117];
            uint64_t v2120 = v2119[1];
            void *v2118 = *v2119;
            v2118[1] = v2120;
            uint64_t v2121 = v2078[19];
            v2122 = (void *)((char *)v2076 + v2121);
            v2123 = &v2077[v2121];
            uint64_t v2124 = v2123[1];
            void *v2122 = *v2123;
            v2122[1] = v2124;
            uint64_t v2125 = v2078[20];
            v2126 = (void *)((char *)v2076 + v2125);
            v2127 = &v2077[v2125];
            uint64_t v2128 = v2127[1];
            void *v2126 = *v2127;
            v2126[1] = v2128;
            uint64_t v2129 = v2078[21];
            v2130 = (void *)((char *)v2076 + v2129);
            v2131 = &v2077[v2129];
            uint64_t v2132 = v2131[1];
            void *v2130 = *v2131;
            v2130[1] = v2132;
            uint64_t v2133 = v2078[22];
            v2134 = (void *)((char *)v2076 + v2133);
            v2135 = &v2077[v2133];
            uint64_t v2136 = v2135[1];
            void *v2134 = *v2135;
            v2134[1] = v2136;
            uint64_t v2137 = v2078[23];
            v2138 = (void *)((char *)v2076 + v2137);
            v2139 = &v2077[v2137];
            uint64_t v2140 = v2139[1];
            void *v2138 = *v2139;
            v2138[1] = v2140;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2076, 0, 1, (uint64_t)v2078);
          }
          uint64_t v2141 = v2647[19];
          v2142 = (void *)((char *)v2632 + v2141);
          v2143 = &v2677[v2141];
          v2144 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2143, 1, (uint64_t)v2144))
          {
            uint64_t v2145 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v2142, v2143, *(void *)(*(void *)(v2145 - 8) + 64));
          }
          else
          {
            uint64_t v2146 = *((void *)v2143 + 1);
            void *v2142 = *(void *)v2143;
            v2142[1] = v2146;
            uint64_t v2147 = *((void *)v2143 + 3);
            v2142[2] = *((void *)v2143 + 2);
            v2142[3] = v2147;
            uint64_t v2148 = *((void *)v2143 + 5);
            v2142[4] = *((void *)v2143 + 4);
            v2142[5] = v2148;
            uint64_t v2149 = *((void *)v2143 + 7);
            v2142[6] = *((void *)v2143 + 6);
            v2142[7] = v2149;
            uint64_t v2150 = *((void *)v2143 + 9);
            v2142[8] = *((void *)v2143 + 8);
            v2142[9] = v2150;
            uint64_t v2598 = *((void *)v2143 + 11);
            v2142[10] = *((void *)v2143 + 10);
            v2142[11] = v2598;
            uint64_t v2151 = v2144[11];
            v2614 = (char *)v2142 + v2151;
            v2152 = &v2143[v2151];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2152, 1, v2620))
            {
              uint64_t v2153 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2614, v2152, *(void *)(*(void *)(v2153 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v2614, v2152, v2620);
              __swift_storeEnumTagSinglePayload((uint64_t)v2614, 0, 1, v2620);
            }
            uint64_t v2154 = v2144[12];
            v2155 = (void *)((char *)v2142 + v2154);
            v2156 = &v2143[v2154];
            uint64_t v2157 = v2156[1];
            void *v2155 = *v2156;
            v2155[1] = v2157;
            *(void *)((char *)v2142 + v2144[13]) = *(void *)&v2143[v2144[13]];
            uint64_t v2158 = v2144[14];
            v2159 = (char *)v2142 + v2158;
            v2160 = &v2143[v2158];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2160, 1, v2620))
            {
              uint64_t v2161 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2159, v2160, *(void *)(*(void *)(v2161 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v2159, v2160, v2620);
              __swift_storeEnumTagSinglePayload((uint64_t)v2159, 0, 1, v2620);
            }
            *(void *)((char *)v2142 + v2144[15]) = *(void *)&v2143[v2144[15]];
            *(void *)((char *)v2142 + v2144[16]) = *(void *)&v2143[v2144[16]];
            uint64_t v2162 = v2144[17];
            v2163 = (void *)((char *)v2142 + v2162);
            v2164 = &v2143[v2162];
            uint64_t v2165 = v2164[1];
            void *v2163 = *v2164;
            v2163[1] = v2165;
            *(void *)((char *)v2142 + v2144[18]) = *(void *)&v2143[v2144[18]];
            *(void *)((char *)v2142 + v2144[19]) = *(void *)&v2143[v2144[19]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2142, 0, 1, (uint64_t)v2144);
          }
          uint64_t v2166 = v2647[20];
          v2167 = (void *)((char *)v2632 + v2166);
          v2168 = &v2677[v2166];
          v2169 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2168, 1, (uint64_t)v2169))
          {
            uint64_t v2170 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v2167, v2168, *(void *)(*(void *)(v2170 - 8) + 64));
            v12 = v2632;
          }
          else
          {
            uint64_t v2171 = *((void *)v2168 + 1);
            void *v2167 = *(void *)v2168;
            v2167[1] = v2171;
            uint64_t v2172 = *((void *)v2168 + 3);
            v2167[2] = *((void *)v2168 + 2);
            v2167[3] = v2172;
            uint64_t v2173 = *((void *)v2168 + 5);
            v2167[4] = *((void *)v2168 + 4);
            v2167[5] = v2173;
            uint64_t v2174 = *((void *)v2168 + 7);
            v2167[6] = *((void *)v2168 + 6);
            v2167[7] = v2174;
            uint64_t v2175 = v2169[8];
            v2615 = (char *)v2167 + v2175;
            v2176 = &v2168[v2175];
            uint64_t v2177 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2176, 1, v2177))
            {
              uint64_t v2178 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2615, v2176, *(void *)(*(void *)(v2178 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2177 - 8) + 16))(v2615, v2176, v2177);
              __swift_storeEnumTagSinglePayload((uint64_t)v2615, 0, 1, v2177);
            }
            uint64_t v2179 = v2169[9];
            v2180 = (void *)((char *)v2167 + v2179);
            v2181 = &v2168[v2179];
            uint64_t v2182 = v2181[1];
            void *v2180 = *v2181;
            v2180[1] = v2182;
            uint64_t v2183 = v2169[10];
            v2184 = (void *)((char *)v2167 + v2183);
            v2185 = &v2168[v2183];
            uint64_t v2186 = v2185[1];
            void *v2184 = *v2185;
            v2184[1] = v2186;
            uint64_t v2187 = v2169[11];
            v2188 = (void *)((char *)v2167 + v2187);
            v2189 = &v2168[v2187];
            uint64_t v2190 = v2189[1];
            void *v2188 = *v2189;
            v2188[1] = v2190;
            uint64_t v2191 = v2169[12];
            v2192 = (char *)v2167 + v2191;
            v2193 = &v2168[v2191];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2193, 1, v2620))
            {
              uint64_t v2194 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2192, v2193, *(void *)(*(void *)(v2194 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v2192, v2193, v2620);
              __swift_storeEnumTagSinglePayload((uint64_t)v2192, 0, 1, v2620);
            }
            v12 = v2632;
            uint64_t v2195 = v2169[13];
            v2196 = (char *)v2167 + v2195;
            v2197 = &v2168[v2195];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v2168[v2195], 1, v2620))
            {
              uint64_t v2198 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2196, v2197, *(void *)(*(void *)(v2198 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2620 - 8) + 16))(v2196, v2197, v2620);
              __swift_storeEnumTagSinglePayload((uint64_t)v2196, 0, 1, v2620);
            }
            uint64_t v2199 = v2169[14];
            v2200 = (char *)v2167 + v2199;
            v2201 = &v2168[v2199];
            *(void *)v2200 = *(void *)v2201;
            v2200[8] = v2201[8];
            uint64_t v2202 = v2169[15];
            v2203 = (void *)((char *)v2167 + v2202);
            v2204 = &v2168[v2202];
            uint64_t v2205 = v2204[1];
            void *v2203 = *v2204;
            v2203[1] = v2205;
            uint64_t v2206 = v2169[16];
            v2207 = (void *)((char *)v2167 + v2206);
            v2208 = &v2168[v2206];
            uint64_t v2209 = v2208[1];
            void *v2207 = *v2208;
            v2207[1] = v2209;
            uint64_t v2210 = v2169[17];
            v2211 = (void *)((char *)v2167 + v2210);
            v2212 = &v2168[v2210];
            uint64_t v2213 = v2212[1];
            void *v2211 = *v2212;
            v2211[1] = v2213;
            uint64_t v2214 = v2169[18];
            v2215 = (void *)((char *)v2167 + v2214);
            v2216 = &v2168[v2214];
            uint64_t v2217 = v2216[1];
            void *v2215 = *v2216;
            v2215[1] = v2217;
            uint64_t v2218 = v2169[19];
            v2219 = (void *)((char *)v2167 + v2218);
            v2220 = &v2168[v2218];
            uint64_t v2221 = v2220[1];
            void *v2219 = *v2220;
            v2219[1] = v2221;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2167, 0, 1, (uint64_t)v2169);
          }
          uint64_t v2043 = v2647[21];
          goto LABEL_534;
        case 4u:
          uint64_t v2665 = v14;
          uint64_t v68 = v13[1];
          void *v12 = *v13;
          v12[1] = v68;
          uint64_t v69 = v13[3];
          v12[2] = v13[2];
          v12[3] = v69;
          uint64_t v70 = v13[5];
          v12[4] = v13[4];
          v12[5] = v70;
          uint64_t v71 = v13[7];
          v12[6] = v13[6];
          v12[7] = v71;
          uint64_t v72 = type metadata accessor for NoteDocument(0);
          uint64_t v73 = *(int *)(v72 + 32);
          v2648 = (char *)v12 + v73;
          v74 = (char *)v13 + v73;
          uint64_t v75 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v74, 1, v75))
          {
            uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2648, v74, *(void *)(*(void *)(v76 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v2648, v74, v75);
            __swift_storeEnumTagSinglePayload((uint64_t)v2648, 0, 1, v75);
          }
          uint64_t v337 = *(int *)(v72 + 36);
          v338 = (char *)v12 + v337;
          uint64_t v339 = (uint64_t)v13 + v337;
          uint64_t v14 = v2665;
          if (!__swift_getEnumTagSinglePayload((uint64_t)v13 + v337, 1, v75)) {
            goto LABEL_139;
          }
          goto LABEL_149;
        case 5u:
          uint64_t v2666 = v14;
          uint64_t v77 = v13[1];
          void *v12 = *v13;
          v12[1] = v77;
          uint64_t v78 = v13[3];
          v12[2] = v13[2];
          v12[3] = v78;
          uint64_t v79 = v13[5];
          v12[4] = v13[4];
          v12[5] = v79;
          v80 = (int *)type metadata accessor for Reminder(0);
          uint64_t v81 = v80[7];
          v82 = (char *)v12 + v81;
          v83 = (char *)v13 + v81;
          uint64_t v84 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v84))
          {
            uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v82, v83, *(void *)(*(void *)(v85 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
            __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v84);
          }
          uint64_t v340 = v80[8];
          v341 = (char *)v12 + v340;
          v342 = (char *)v13 + v340;
          uint64_t v14 = v2666;
          if (__swift_getEnumTagSinglePayload((uint64_t)v13 + v340, 1, v84))
          {
            uint64_t v343 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v341, v342, *(void *)(*(void *)(v343 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(v341, v342, v84);
            __swift_storeEnumTagSinglePayload((uint64_t)v341, 0, 1, v84);
          }
          *((unsigned char *)v12 + v80[9]) = *((unsigned char *)v13 + v80[9]);
          uint64_t v513 = v80[10];
          v514 = (void *)((char *)v12 + v513);
          v515 = (void *)((char *)v13 + v513);
          uint64_t v516 = v515[1];
          void *v514 = *v515;
          v514[1] = v516;
          uint64_t v517 = v80[11];
          v518 = (void *)((char *)v12 + v517);
          v519 = (void *)((char *)v13 + v517);
          uint64_t v520 = v519[1];
          void *v518 = *v519;
          v518[1] = v520;
          uint64_t v521 = v80[12];
          v108 = (char *)v12 + v521;
          v109 = (char *)v13 + v521;
          uint64_t v110 = type metadata accessor for URL();
          goto LABEL_137;
        case 6u:
          uint64_t v2667 = v14;
          uint64_t v86 = v13[1];
          void *v12 = *v13;
          v12[1] = v86;
          uint64_t v87 = v13[3];
          v12[2] = v13[2];
          v12[3] = v87;
          uint64_t v88 = v13[5];
          v12[4] = v13[4];
          v12[5] = v88;
          uint64_t v89 = v13[7];
          v12[6] = v13[6];
          v12[7] = v89;
          uint64_t v90 = type metadata accessor for PhoneHistory(0);
          uint64_t v91 = *(int *)(v90 + 40);
          v2633 = (char *)v12 + v91;
          v2649 = (int *)v90;
          v92 = (char *)v13 + v91;
          uint64_t v93 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v92, 1, v93))
          {
            uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2633, v92, *(void *)(*(void *)(v94 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16))(v2633, v92, v93);
            __swift_storeEnumTagSinglePayload((uint64_t)v2633, 0, 1, v93);
          }
          uint64_t v344 = v2649[11];
          v345 = (void *)((char *)v12 + v344);
          v346 = &v2677[v344];
          uint64_t v347 = *((void *)v346 + 1);
          void *v345 = *(void *)v346;
          v345[1] = v347;
          uint64_t v348 = v2649[12];
          v349 = (void *)((char *)v12 + v348);
          v350 = &v2677[v348];
          uint64_t v351 = *((void *)v350 + 1);
          void *v349 = *(void *)v350;
          v349[1] = v351;
          uint64_t v352 = v2649[13];
          v108 = (char *)v12 + v352;
          v109 = &v2677[v352];
          uint64_t v110 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v14 = v2667;
          if (!__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v110)) {
            goto LABEL_76;
          }
          goto LABEL_138;
        case 7u:
          uint64_t v2668 = v14;
          uint64_t v95 = v13[1];
          void *v12 = *v13;
          v12[1] = v95;
          uint64_t v96 = v13[3];
          v12[2] = v13[2];
          v12[3] = v96;
          uint64_t v97 = v13[5];
          v12[4] = v13[4];
          v12[5] = v97;
          uint64_t v98 = type metadata accessor for VoicemailTranscript(0);
          uint64_t v99 = *(int *)(v98 + 28);
          v100 = (char *)v12 + v99;
          v101 = (char *)v13 + v99;
          uint64_t v102 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v101, 1, v102))
          {
            uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v100, v101, *(void *)(*(void *)(v103 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16))(v100, v101, v102);
            __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, v102);
          }
          uint64_t v353 = *(int *)(v98 + 32);
          v354 = (char *)v12 + v353;
          uint64_t v355 = (uint64_t)v13 + v353;
          uint64_t v356 = type metadata accessor for URL();
          int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v355, 1, v356);
          uint64_t v14 = v2668;
          goto LABEL_81;
        case 8u:
          uint64_t v104 = v13[1];
          void *v12 = *v13;
          v12[1] = v104;
          uint64_t v105 = v13[3];
          v12[2] = v13[2];
          v12[3] = v105;
          uint64_t v106 = v13[5];
          v12[4] = v13[4];
          v12[5] = v106;
          uint64_t v107 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
          v108 = (char *)v12 + v107;
          v109 = (char *)v13 + v107;
          uint64_t v110 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
LABEL_137:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v110))
          {
LABEL_138:
            uint64_t v522 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v108, v109, *(void *)(*(void *)(v522 - 8) + 64));
          }
          else
          {
LABEL_76:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16))(v108, v109, v110);
            __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, v110);
          }
          goto LABEL_538;
        case 9u:
          uint64_t v111 = v13[1];
          void *v12 = *v13;
          v12[1] = v111;
          uint64_t v112 = v13[3];
          v12[2] = v13[2];
          v12[3] = v112;
          v113 = (int *)type metadata accessor for VoiceMemo(0);
          uint64_t v114 = v113[6];
          v115 = (char *)v12 + v114;
          v116 = (char *)v13 + v114;
          uint64_t v117 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v116, 1, v117))
          {
            uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v115, v116, *(void *)(*(void *)(v118 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16))(v115, v116, v117);
            __swift_storeEnumTagSinglePayload((uint64_t)v115, 0, 1, v117);
          }
          uint64_t v358 = v113[7];
          v359 = (char *)v12 + v358;
          v360 = (char *)v13 + v358;
          *(void *)v359 = *(void *)v360;
          v359[8] = v360[8];
          uint64_t v361 = v113[8];
          v354 = (char *)v12 + v361;
          uint64_t v355 = (uint64_t)v13 + v361;
          uint64_t v356 = type metadata accessor for URL();
          int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v355, 1, v356);
LABEL_81:
          if (EnumTagSinglePayload) {
            goto LABEL_82;
          }
          goto LABEL_156;
        case 0xAu:
          uint64_t v119 = v13[1];
          void *v12 = *v13;
          v12[1] = v119;
          uint64_t v120 = v13[3];
          v12[2] = v13[2];
          v12[3] = v120;
          v121 = (int *)type metadata accessor for Safari(0);
          uint64_t v122 = v121[6];
          v123 = (char *)v12 + v122;
          v124 = (char *)v13 + v122;
          uint64_t v75 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v124, 1, v75))
          {
            uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v123, v124, *(void *)(*(void *)(v125 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v123, v124, v75);
            __swift_storeEnumTagSinglePayload((uint64_t)v123, 0, 1, v75);
          }
          uint64_t v365 = v121[7];
          v366 = (void *)((char *)v12 + v365);
          v367 = (void *)((char *)v13 + v365);
          uint64_t v368 = v367[1];
          void *v366 = *v367;
          v366[1] = v368;
          uint64_t v369 = v121[8];
          v370 = (void *)((char *)v12 + v369);
          v371 = (void *)((char *)v13 + v369);
          uint64_t v372 = v371[1];
          void *v370 = *v371;
          v370[1] = v372;
          uint64_t v373 = v121[9];
          v338 = (char *)v12 + v373;
          uint64_t v339 = (uint64_t)v13 + v373;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (!__swift_getEnumTagSinglePayload(v339, 1, v75)) {
            goto LABEL_139;
          }
          size_t v362 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                       - 8)
                           + 64);
          v363 = v338;
          v364 = (const void *)v339;
          goto LABEL_150;
        case 0xBu:
          uint64_t v126 = v13[1];
          void *v12 = *v13;
          v12[1] = v126;
          v127 = (void *)v13[2];
          v12[2] = v127;
          swift_bridgeObjectRetain();
          id v128 = v127;
          goto LABEL_538;
        case 0xCu:
          uint64_t v2669 = v14;
          uint64_t v129 = v13[1];
          void *v12 = *v13;
          v12[1] = v129;
          uint64_t v130 = v13[3];
          v12[2] = v13[2];
          v12[3] = v130;
          uint64_t v131 = v13[5];
          v12[4] = v13[4];
          v12[5] = v131;
          v132 = (int *)type metadata accessor for WalletTransaction(0);
          uint64_t v133 = v132[7];
          v134 = (char *)v12 + v133;
          v135 = (char *)v13 + v133;
          uint64_t v136 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v135, 1, v136))
          {
            uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v134, v135, *(void *)(*(void *)(v137 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16))(v134, v135, v136);
            __swift_storeEnumTagSinglePayload((uint64_t)v134, 0, 1, v136);
          }
          uint64_t v14 = v2669;
          uint64_t v374 = v132[8];
          v375 = (void *)((char *)v12 + v374);
          v376 = (void *)((char *)v13 + v374);
          uint64_t v377 = v376[1];
          void *v375 = *v376;
          v375[1] = v377;
          uint64_t v378 = v132[9];
          v379 = (void *)((char *)v12 + v378);
          v380 = (void *)((char *)v13 + v378);
          uint64_t v381 = v380[1];
          void *v379 = *v380;
          v379[1] = v381;
          uint64_t v382 = v132[10];
          v383 = (void *)((char *)v12 + v382);
          v384 = (void *)((char *)v13 + v382);
          uint64_t v385 = v384[1];
          void *v383 = *v384;
          v383[1] = v385;
          uint64_t v386 = v132[11];
          v387 = (char *)v12 + v386;
          v388 = (char *)v13 + v386;
          *(_OWORD *)v387 = *(_OWORD *)v388;
          *(void *)(v387 + 13) = *(void *)(v388 + 13);
          uint64_t v389 = v132[12];
          v390 = (void *)((char *)v12 + v389);
          v391 = (void *)((char *)v13 + v389);
          uint64_t v392 = v391[1];
          void *v390 = *v391;
          v390[1] = v392;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_90;
        case 0xDu:
          uint64_t v2670 = v14;
          uint64_t v138 = v13[1];
          void *v12 = *v13;
          v12[1] = v138;
          uint64_t v139 = v13[3];
          v12[2] = v13[2];
          v12[3] = v139;
          uint64_t v140 = v13[5];
          v12[4] = v13[4];
          v12[5] = v140;
          v141 = (int *)type metadata accessor for WalletPass(0);
          uint64_t v142 = v141[7];
          v143 = (char *)v12 + v142;
          v144 = (char *)v13 + v142;
          uint64_t v145 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v144, 1, v145))
          {
            uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v143, v144, *(void *)(*(void *)(v146 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 16))(v143, v144, v145);
            __swift_storeEnumTagSinglePayload((uint64_t)v143, 0, 1, v145);
          }
          uint64_t v14 = v2670;
          uint64_t v393 = v141[8];
          v394 = (void *)((char *)v12 + v393);
          v395 = (void *)((char *)v13 + v393);
          uint64_t v396 = v395[1];
          void *v394 = *v395;
          v394[1] = v396;
          *(void *)((char *)v12 + v141[9]) = *(void *)((char *)v13 + v141[9]);
LABEL_90:
          swift_bridgeObjectRetain();
          goto LABEL_124;
        case 0xEu:
          uint64_t v147 = v13[1];
          void *v12 = *v13;
          v12[1] = v147;
          uint64_t v148 = v13[3];
          v12[2] = v13[2];
          v12[3] = v148;
          uint64_t v149 = v13[5];
          v12[4] = v13[4];
          v12[5] = v149;
          uint64_t v150 = v13[7];
          v12[6] = v13[6];
          v12[7] = v150;
          uint64_t v151 = v13[9];
          v12[8] = v13[8];
          v12[9] = v151;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_124;
        case 0xFu:
          uint64_t v2671 = v14;
          uint64_t v152 = v13[1];
          void *v12 = *v13;
          v12[1] = v152;
          uint64_t v153 = v13[3];
          v12[2] = v13[2];
          v12[3] = v153;
          uint64_t v154 = v13[5];
          v12[4] = v13[4];
          v12[5] = v154;
          uint64_t v2650 = v13[7];
          v12[6] = v13[6];
          v12[7] = v2650;
          uint64_t v2634 = v13[9];
          v12[8] = v13[8];
          v12[9] = v2634;
          uint64_t v2621 = v13[11];
          v12[10] = v13[10];
          v12[11] = v2621;
          *((unsigned char *)v12 + 96) = *((unsigned char *)v13 + 96);
          uint64_t v155 = v13[14];
          v12[13] = v13[13];
          v12[14] = v155;
          v156 = (int *)type metadata accessor for FlightReservation(0);
          uint64_t v157 = v156[13];
          v2604 = (char *)v12 + v157;
          v158 = (char *)v13 + v157;
          uint64_t v159 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v158, 1, v159))
          {
            uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2604, v158, *(void *)(*(void *)(v160 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 16))(v2604, v158, v159);
            __swift_storeEnumTagSinglePayload((uint64_t)v2604, 0, 1, v159);
          }
          uint64_t v397 = v156[14];
          v398 = (char *)v12 + v397;
          v399 = &v2677[v397];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v2677[v397], 1, v159))
          {
            uint64_t v400 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v398, v399, *(void *)(*(void *)(v400 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 16))(v398, v399, v159);
            __swift_storeEnumTagSinglePayload((uint64_t)v398, 0, 1, v159);
          }
          uint64_t v523 = v156[15];
          v524 = (void *)((char *)v12 + v523);
          v525 = &v2677[v523];
          uint64_t v526 = *((void *)v525 + 1);
          void *v524 = *(void *)v525;
          v524[1] = v526;
          uint64_t v527 = v156[16];
          v528 = (void *)((char *)v12 + v527);
          v529 = &v2677[v527];
          uint64_t v530 = *((void *)v529 + 1);
          void *v528 = *(void *)v529;
          v528[1] = v530;
          uint64_t v531 = v156[17];
          v532 = (void *)((char *)v12 + v531);
          v533 = &v2677[v531];
          uint64_t v534 = *((void *)v533 + 1);
          void *v532 = *(void *)v533;
          v532[1] = v534;
          uint64_t v535 = v156[18];
          v2641 = &v2677[v535];
          v2660 = (char *)v12 + v535;
          uint64_t v536 = type metadata accessor for DateComponents();
          v537 = *(void (**)(char *, char *, uint64_t))(*(void *)(v536 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v537(v2660, v2641, v536);
          v537((char *)v12 + v156[19], &v2677[v156[19]], v536);
          uint64_t v538 = v156[20];
          v539 = (void *)((char *)v12 + v538);
          v540 = &v2677[v538];
          uint64_t v2661 = *((void *)v540 + 1);
          void *v539 = *(void *)v540;
          v539[1] = v2661;
          uint64_t v541 = v156[21];
          v542 = (void *)((char *)v12 + v541);
          v543 = &v2677[v541];
          uint64_t v2642 = *((void *)v543 + 1);
          void *v542 = *(void *)v543;
          v542[1] = v2642;
          uint64_t v544 = v156[22];
          v545 = (void *)((char *)v12 + v544);
          v546 = &v2677[v544];
          uint64_t v2628 = *((void *)v546 + 1);
          void *v545 = *(void *)v546;
          v545[1] = v2628;
          uint64_t v547 = v156[23];
          v548 = (void *)((char *)v12 + v547);
          v549 = &v2677[v547];
          uint64_t v2611 = *((void *)v549 + 1);
          void *v548 = *(void *)v549;
          v548[1] = v2611;
          uint64_t v550 = v156[24];
          v551 = (void *)((char *)v12 + v550);
          v552 = &v2677[v550];
          uint64_t v2590 = *((void *)v552 + 1);
          void *v551 = *(void *)v552;
          v551[1] = v2590;
          uint64_t v553 = v156[25];
          v554 = (void *)((char *)v12 + v553);
          v555 = &v2677[v553];
          uint64_t v2570 = *((void *)v555 + 1);
          void *v554 = *(void *)v555;
          v554[1] = v2570;
          uint64_t v556 = v156[26];
          v557 = (void *)((char *)v12 + v556);
          v558 = &v2677[v556];
          uint64_t v2537 = *((void *)v558 + 1);
          void *v557 = *(void *)v558;
          v557[1] = v2537;
          uint64_t v559 = v156[27];
          v560 = (void *)((char *)v12 + v559);
          v561 = &v2677[v559];
          uint64_t v2499 = *((void *)v561 + 1);
          void *v560 = *(void *)v561;
          v560[1] = v2499;
          uint64_t v562 = v156[28];
          v563 = (void *)((char *)v12 + v562);
          v564 = &v2677[v562];
          v2478 = (void *)*((void *)v564 + 1);
          void *v563 = *(void *)v564;
          v563[1] = v2478;
          uint64_t v565 = v156[29];
          v566 = (void *)((char *)v12 + v565);
          v567 = &v2677[v565];
          uint64_t v2470 = *((void *)v567 + 1);
          void *v566 = *(void *)v567;
          v566[1] = v2470;
          uint64_t v568 = v156[30];
          v569 = (void *)((char *)v12 + v568);
          v570 = &v2677[v568];
          v2463 = (void *)*((void *)v570 + 1);
          void *v569 = *(void *)v570;
          v569[1] = v2463;
          uint64_t v571 = v156[31];
          v572 = (void *)((char *)v12 + v571);
          v573 = &v2677[v571];
          uint64_t v2454 = *((void *)v573 + 1);
          void *v572 = *(void *)v573;
          v572[1] = v2454;
          uint64_t v574 = v156[32];
          v575 = (void *)((char *)v12 + v574);
          v576 = &v2677[v574];
          uint64_t v577 = *((void *)v576 + 1);
          void *v575 = *(void *)v576;
          v575[1] = v577;
          *(void *)((char *)v12 + v156[33]) = *(void *)&v2677[v156[33]];
          *(void *)((char *)v12 + v156[34]) = *(void *)&v2677[v156[34]];
          uint64_t v578 = v156[35];
          v579 = (void *)((char *)v12 + v578);
          v580 = &v2677[v578];
          uint64_t v581 = *((void *)v580 + 1);
          void *v579 = *(void *)v580;
          v579[1] = v581;
          uint64_t v582 = v156[36];
          v583 = (void *)((char *)v12 + v582);
          v584 = &v2677[v582];
          uint64_t v585 = *((void *)v584 + 1);
          void *v583 = *(void *)v584;
          v583[1] = v585;
          uint64_t v586 = v156[37];
          v587 = (void *)((char *)v12 + v586);
          v588 = &v2677[v586];
          uint64_t v589 = *((void *)v588 + 1);
          void *v587 = *(void *)v588;
          v587[1] = v589;
          uint64_t v590 = v156[38];
          v2440 = (char *)v12 + v590;
          v2445 = &v2677[v590];
          uint64_t v591 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2445, 1, v591))
          {
            uint64_t v592 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2440, v2445, *(void *)(*(void *)(v592 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v591 - 8) + 16))(v2440, v2445, v591);
            __swift_storeEnumTagSinglePayload((uint64_t)v2440, 0, 1, v591);
          }
          uint64_t v14 = v2671;
          uint64_t v652 = v156[39];
          v653 = (void *)((char *)v12 + v652);
          v654 = &v2677[v652];
          uint64_t v655 = *((void *)v654 + 1);
          void *v653 = *(void *)v654;
          v653[1] = v655;
          uint64_t v656 = v156[40];
          v657 = (void *)((char *)v12 + v656);
          v658 = &v2677[v656];
          uint64_t v659 = *((void *)v658 + 1);
          void *v657 = *(void *)v658;
          v657[1] = v659;
          uint64_t v660 = v156[41];
          v661 = (char *)v12 + v660;
          v662 = &v2677[v660];
          v661[8] = v662[8];
          *(void *)v661 = *(void *)v662;
          uint64_t v663 = v156[42];
          v664 = (void *)((char *)v12 + v663);
          v665 = &v2677[v663];
          uint64_t v666 = *((void *)v665 + 1);
          void *v664 = *(void *)v665;
          v664[1] = v666;
          uint64_t v667 = v156[43];
          v668 = (char *)v12 + v667;
          v669 = &v2677[v667];
          *(_OWORD *)v668 = *(_OWORD *)v669;
          *(void *)(v668 + 13) = *(void *)(v669 + 13);
          uint64_t v670 = v156[44];
          v671 = (void *)((char *)v12 + v670);
          v672 = &v2677[v670];
          uint64_t v673 = *((void *)v672 + 1);
          void *v671 = *(void *)v672;
          v671[1] = v673;
          uint64_t v674 = v156[45];
          v675 = (void *)((char *)v12 + v674);
          v676 = &v2677[v674];
          uint64_t v677 = *((void *)v676 + 1);
          void *v675 = *(void *)v676;
          v675[1] = v677;
          uint64_t v678 = v156[46];
          v679 = (void *)((char *)v12 + v678);
          v680 = &v2677[v678];
          uint64_t v681 = *((void *)v680 + 1);
          void *v679 = *(void *)v680;
          v679[1] = v681;
          uint64_t v682 = v156[47];
          v683 = (void *)((char *)v12 + v682);
          v684 = &v2677[v682];
          uint64_t v685 = *((void *)v684 + 1);
          void *v683 = *(void *)v684;
          v683[1] = v685;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v686 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
          *(void *)((char *)v12 + *(int *)(v686 + 48)) = *(void *)&v2677[*(int *)(v686 + 48)];
          swift_bridgeObjectRetain();
          goto LABEL_538;
        case 0x10u:
          uint64_t v2664 = v14;
          uint64_t v161 = v13[1];
          void *v12 = *v13;
          v12[1] = v161;
          uint64_t v162 = v13[3];
          v12[2] = v13[2];
          v12[3] = v162;
          uint64_t v2651 = v13[5];
          v12[4] = v13[4];
          v12[5] = v2651;
          uint64_t v2635 = v13[7];
          v12[6] = v13[6];
          v12[7] = v2635;
          uint64_t v2622 = v13[9];
          v12[8] = v13[8];
          v12[9] = v2622;
          uint64_t v2605 = v13[11];
          v12[10] = v13[10];
          v12[11] = v2605;
          *((unsigned char *)v12 + 96) = *((unsigned char *)v13 + 96);
          uint64_t v163 = v13[14];
          v12[13] = v13[13];
          v12[14] = v163;
          uint64_t v164 = v13[16];
          v12[15] = v13[15];
          v12[16] = v164;
          v165 = (int *)type metadata accessor for HotelReservation(0);
          uint64_t v166 = v165[14];
          v2582 = (char *)v12 + v166;
          v167 = (char *)v13 + v166;
          uint64_t v168 = type metadata accessor for DateComponents();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v168))
          {
            uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v2582, v167, *(void *)(*(void *)(v169 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v2582, v167, v168);
            __swift_storeEnumTagSinglePayload((uint64_t)v2582, 0, 1, v168);
          }
          uint64_t v401 = v165[15];
          v402 = (char *)v12 + v401;
          v403 = &v2677[v401];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v2677[v401], 1, v168))
          {
            uint64_t v404 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v402, v403, *(void *)(*(void *)(v404 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v402, v403, v168);
            __swift_storeEnumTagSinglePayload((uint64_t)v402, 0, 1, v168);
          }
          uint64_t v593 = v165[16];
          v594 = (void *)((char *)v12 + v593);
          v595 = &v2677[v593];
          uint64_t v596 = *((void *)v595 + 1);
          void *v594 = *(void *)v595;
          v594[1] = v596;
          uint64_t v597 = v165[17];
          v598 = (void *)((char *)v12 + v597);
          v599 = &v2677[v597];
          uint64_t v2662 = *((void *)v599 + 1);
          void *v598 = *(void *)v599;
          v598[1] = v2662;
          uint64_t v600 = v165[18];
          v601 = (void *)((char *)v12 + v600);
          v602 = &v2677[v600];
          uint64_t v2643 = *((void *)v602 + 1);
          void *v601 = *(void *)v602;
          v601[1] = v2643;
          uint64_t v603 = v165[19];
          v604 = (void *)((char *)v12 + v603);
          v605 = &v2677[v603];
          uint64_t v2629 = *((void *)v605 + 1);
          void *v604 = *(void *)v605;
          v604[1] = v2629;
          uint64_t v606 = v165[20];
          v607 = (void *)((char *)v12 + v606);
          v608 = &v2677[v606];
          uint64_t v609 = *((void *)v608 + 1);
          void *v607 = *(void *)v608;
          v607[1] = v609;
          *(void *)((char *)v12 + v165[21]) = *(void *)&v2677[v165[21]];
          *(void *)((char *)v12 + v165[22]) = *(void *)&v2677[v165[22]];
          uint64_t v610 = v165[23];
          v611 = (char *)v12 + v610;
          v612 = &v2677[v610];
          *(void *)v611 = *(void *)v612;
          v611[8] = v612[8];
          uint64_t v613 = v165[24];
          v614 = (char *)v12 + v613;
          v615 = &v2677[v613];
          *(void *)v614 = *(void *)v615;
          v614[8] = v615[8];
          uint64_t v616 = v165[25];
          v617 = (void *)((char *)v12 + v616);
          v618 = &v2677[v616];
          uint64_t v619 = *((void *)v618 + 1);
          void *v617 = *(void *)v618;
          v617[1] = v619;
          uint64_t v620 = v165[26];
          v621 = (void *)((char *)v12 + v620);
          v622 = &v2677[v620];
          uint64_t v623 = *((void *)v622 + 1);
          void *v621 = *(void *)v622;
          v621[1] = v623;
          uint64_t v624 = v165[27];
          v625 = (void *)((char *)v12 + v624);
          v626 = &v2677[v624];
          uint64_t v627 = *((void *)v626 + 1);
          void *v625 = *(void *)v626;
          v625[1] = v627;
          uint64_t v628 = v165[28];
          v629 = (void *)((char *)v12 + v628);
          v630 = &v2677[v628];
          uint64_t v631 = *((void *)v630 + 1);
          void *v629 = *(void *)v630;
          v629[1] = v631;
          uint64_t v632 = v165[29];
          v633 = (char *)v12 + v632;
          v634 = &v2677[v632];
          *(void *)v633 = *(void *)v634;
          v633[8] = v634[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_146;
        case 0x11u:
          uint64_t v2664 = v14;
          uint64_t v170 = v13[1];
          void *v12 = *v13;
          v12[1] = v170;
          uint64_t v171 = v13[3];
          v12[2] = v13[2];
          v12[3] = v171;
          uint64_t v2652 = v13[5];
          v12[4] = v13[4];
          v12[5] = v2652;
          uint64_t v2636 = v13[7];
          v12[6] = v13[6];
          v12[7] = v2636;
          uint64_t v2623 = v13[9];
          v12[8] = v13[8];
          v12[9] = v2623;
          uint64_t v2606 = v13[11];
          v12[10] = v13[10];
          v12[11] = v2606;
          *((unsigned char *)v12 + 96) = *((unsigned char *)v13 + 96);
          uint64_t v172 = v13[14];
          v12[13] = v13[13];
          v12[14] = v172;
          uint64_t v173 = v13[16];
          v12[15] = v13[15];
          v12[16] = v173;
          v174 = (int *)type metadata accessor for RestaurantReservation(0);
          uint64_t v175 = v174[14];
          v2583 = (char *)v12 + v175;
          v176 = (char *)v13 + v175;
          uint64_t v177 = type metadata accessor for DateComponents();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v176, 1, v177))
          {
            uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v2583, v176, *(void *)(*(void *)(v178 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16))(v2583, v176, v177);
            __swift_storeEnumTagSinglePayload((uint64_t)v2583, 0, 1, v177);
          }
          uint64_t v405 = v174[15];
          v406 = (void *)((char *)v12 + v405);
          v407 = &v2677[v405];
          uint64_t v408 = *((void *)v407 + 1);
          void *v406 = *(void *)v407;
          v406[1] = v408;
          uint64_t v409 = v174[16];
          v410 = (void *)((char *)v12 + v409);
          v411 = &v2677[v409];
          uint64_t v412 = *((void *)v411 + 1);
          void *v410 = *(void *)v411;
          v410[1] = v412;
          uint64_t v413 = v174[17];
          v414 = (void *)((char *)v12 + v413);
          v415 = &v2677[v413];
          uint64_t v416 = *((void *)v415 + 1);
          void *v414 = *(void *)v415;
          v414[1] = v416;
          uint64_t v417 = v174[18];
          v418 = (void *)((char *)v12 + v417);
          v419 = &v2677[v417];
          uint64_t v420 = *((void *)v419 + 1);
          void *v418 = *(void *)v419;
          v418[1] = v420;
          uint64_t v421 = v174[19];
          v422 = (void *)((char *)v12 + v421);
          v423 = &v2677[v421];
          uint64_t v424 = *((void *)v423 + 1);
          void *v422 = *(void *)v423;
          v422[1] = v424;
          *(void *)((char *)v12 + v174[20]) = *(void *)&v2677[v174[20]];
          uint64_t v425 = v174[21];
          v426 = (void *)((char *)v12 + v425);
          v427 = &v2677[v425];
          uint64_t v428 = *((void *)v427 + 1);
          void *v426 = *(void *)v427;
          v426[1] = v428;
          uint64_t v429 = v174[22];
          v430 = (void *)((char *)v12 + v429);
          v431 = &v2677[v429];
          uint64_t v432 = *((void *)v431 + 1);
          void *v430 = *(void *)v431;
          v430[1] = v432;
          uint64_t v433 = v174[23];
          v434 = (void *)((char *)v12 + v433);
          v435 = &v2677[v433];
          uint64_t v436 = *((void *)v435 + 1);
          void *v434 = *(void *)v435;
          v434[1] = v436;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_536;
        case 0x12u:
          uint64_t v2672 = v14;
          uint64_t v179 = v13[1];
          void *v12 = *v13;
          v12[1] = v179;
          uint64_t v180 = v13[3];
          v12[2] = v13[2];
          v12[3] = v180;
          uint64_t v181 = v13[5];
          v12[4] = v13[4];
          v12[5] = v181;
          uint64_t v182 = v13[7];
          v12[6] = v13[6];
          v12[7] = v182;
          uint64_t v183 = v13[9];
          v12[8] = v13[8];
          v12[9] = v183;
          uint64_t v184 = v13[11];
          v12[10] = v13[10];
          v12[11] = v184;
          uint64_t v185 = v13[13];
          v12[12] = v13[12];
          v12[13] = v185;
          uint64_t v186 = v13[15];
          v12[14] = v13[14];
          v12[15] = v186;
          *((unsigned char *)v12 + 128) = *((unsigned char *)v13 + 128);
          *(_WORD *)((char *)v12 + 129) = *(_WORD *)((char *)v13 + 129);
          uint64_t v187 = v13[18];
          v12[17] = v13[17];
          v12[18] = v187;
          uint64_t v188 = v13[20];
          v12[19] = v13[19];
          v12[20] = v188;
          uint64_t v189 = v13[22];
          v12[21] = v13[21];
          v12[22] = v189;
          uint64_t v190 = v13[24];
          v12[23] = v13[23];
          v12[24] = v190;
          uint64_t v191 = v13[26];
          v12[25] = v13[25];
          v12[26] = v191;
          uint64_t v192 = v13[28];
          v12[27] = v13[27];
          v12[28] = v192;
          uint64_t v193 = v13[30];
          v12[29] = v13[29];
          v12[30] = v193;
          uint64_t v2637 = v13[32];
          v12[31] = v13[31];
          v12[32] = v2637;
          uint64_t v2624 = v13[34];
          v12[33] = v13[33];
          v12[34] = v2624;
          uint64_t v2607 = v13[36];
          v12[35] = v13[35];
          v12[36] = v2607;
          uint64_t v2584 = v13[38];
          v12[37] = v13[37];
          v12[38] = v2584;
          uint64_t v2563 = v13[40];
          v12[39] = v13[39];
          v12[40] = v2563;
          uint64_t v2531 = v13[42];
          v12[41] = v13[41];
          v12[42] = v2531;
          uint64_t v2495 = v13[44];
          v12[43] = v13[43];
          v12[44] = v2495;
          uint64_t v194 = v13[46];
          v12[45] = v13[45];
          v12[46] = v194;
          uint64_t v195 = v13[47];
          *((unsigned char *)v12 + 384) = *((unsigned char *)v13 + 384);
          v12[47] = v195;
          uint64_t v196 = v13[50];
          v12[49] = v13[49];
          v12[50] = v196;
          uint64_t v197 = v13[52];
          v12[51] = v13[51];
          v12[52] = v197;
          uint64_t v2653 = type metadata accessor for RentalCarReservation(0);
          uint64_t v198 = *(int *)(v2653 + 140);
          __dst = (char *)v12 + v198;
          v199 = (char *)v13 + v198;
          uint64_t v200 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v199, 1, v200))
          {
            uint64_t v201 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(__dst, v199, *(void *)(*(void *)(v201 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 16))(__dst, v199, v200);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v200);
          }
          uint64_t v437 = *(int *)(v2653 + 144);
          goto LABEL_108;
        case 0x13u:
          uint64_t v2672 = v14;
          uint64_t v202 = v13[1];
          void *v12 = *v13;
          v12[1] = v202;
          uint64_t v203 = v13[3];
          v12[2] = v13[2];
          v12[3] = v203;
          uint64_t v204 = v13[5];
          v12[4] = v13[4];
          v12[5] = v204;
          uint64_t v205 = v13[7];
          v12[6] = v13[6];
          v12[7] = v205;
          uint64_t v206 = v13[9];
          v12[8] = v13[8];
          v12[9] = v206;
          uint64_t v207 = v13[11];
          v12[10] = v13[10];
          v12[11] = v207;
          uint64_t v208 = v13[13];
          v12[12] = v13[12];
          v12[13] = v208;
          uint64_t v209 = v13[15];
          v12[14] = v13[14];
          v12[15] = v209;
          *((unsigned char *)v12 + 128) = *((unsigned char *)v13 + 128);
          *(_WORD *)((char *)v12 + 129) = *(_WORD *)((char *)v13 + 129);
          uint64_t v210 = v13[18];
          v12[17] = v13[17];
          v12[18] = v210;
          uint64_t v211 = v13[20];
          v12[19] = v13[19];
          v12[20] = v211;
          uint64_t v212 = v13[22];
          v12[21] = v13[21];
          v12[22] = v212;
          uint64_t v213 = v13[24];
          v12[23] = v13[23];
          v12[24] = v213;
          uint64_t v2638 = v13[26];
          v12[25] = v13[25];
          v12[26] = v2638;
          uint64_t v2625 = v13[28];
          v12[27] = v13[27];
          v12[28] = v2625;
          uint64_t v2608 = v13[30];
          v12[29] = v13[29];
          v12[30] = v2608;
          uint64_t v2585 = v13[32];
          v12[31] = v13[31];
          v12[32] = v2585;
          uint64_t v214 = v13[34];
          v12[33] = v13[33];
          v12[34] = v214;
          uint64_t v215 = v13[36];
          uint64_t v2532 = v13[35];
          *((unsigned char *)v12 + 296) = *((unsigned char *)v13 + 296);
          v12[35] = v2532;
          v12[36] = v215;
          uint64_t v2654 = type metadata accessor for TicketedTransportation(0);
          uint64_t v216 = *(int *)(v2654 + 112);
          v2427 = (char *)v12 + v216;
          v217 = (char *)v13 + v216;
          uint64_t v200 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v217, 1, v200))
          {
            uint64_t v218 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2427, v217, *(void *)(*(void *)(v218 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 16))(v2427, v217, v200);
            __swift_storeEnumTagSinglePayload((uint64_t)v2427, 0, 1, v200);
          }
          uint64_t v437 = *(int *)(v2654 + 116);
          goto LABEL_108;
        case 0x14u:
          uint64_t v2673 = v14;
          uint64_t v219 = v13[1];
          void *v12 = *v13;
          v12[1] = v219;
          uint64_t v220 = v13[3];
          v12[2] = v13[2];
          v12[3] = v220;
          uint64_t v221 = v13[5];
          v12[4] = v13[4];
          v12[5] = v221;
          uint64_t v222 = v13[7];
          v12[6] = v13[6];
          v12[7] = v222;
          uint64_t v223 = v13[9];
          v12[8] = v13[8];
          v12[9] = v223;
          uint64_t v224 = v13[11];
          v12[10] = v13[10];
          v12[11] = v224;
          uint64_t v225 = v13[13];
          v12[12] = v13[12];
          v12[13] = v225;
          uint64_t v226 = v13[15];
          v12[14] = v13[14];
          v12[15] = v226;
          *((unsigned char *)v12 + 128) = *((unsigned char *)v13 + 128);
          *(_WORD *)((char *)v12 + 129) = *(_WORD *)((char *)v13 + 129);
          uint64_t v227 = v13[18];
          v12[17] = v13[17];
          v12[18] = v227;
          uint64_t v228 = v13[20];
          v12[19] = v13[19];
          v12[20] = v228;
          uint64_t v229 = v13[22];
          v12[21] = v13[21];
          v12[22] = v229;
          uint64_t v230 = v13[24];
          v12[23] = v13[23];
          v12[24] = v230;
          uint64_t v231 = v13[26];
          v12[25] = v13[25];
          v12[26] = v231;
          uint64_t v232 = v13[28];
          v12[27] = v13[27];
          v12[28] = v232;
          uint64_t v2639 = v13[30];
          v12[29] = v13[29];
          v12[30] = v2639;
          uint64_t v2626 = v13[32];
          v12[31] = v13[31];
          v12[32] = v2626;
          uint64_t v233 = v13[34];
          v12[33] = v13[33];
          v12[34] = v233;
          uint64_t v234 = v13[36];
          uint64_t v2586 = v13[35];
          *((unsigned char *)v12 + 296) = *((unsigned char *)v13 + 296);
          v12[35] = v2586;
          v12[36] = v234;
          uint64_t v2564 = v13[39];
          v12[38] = v13[38];
          v12[39] = v2564;
          v2655 = (int *)type metadata accessor for TicketedShow(0);
          uint64_t v235 = v2655[29];
          v2422 = (char *)v12 + v235;
          v236 = (char *)v13 + v235;
          uint64_t v237 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v236, 1, v237))
          {
            uint64_t v238 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2422, v236, *(void *)(*(void *)(v238 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 16))(v2422, v236, v237);
            __swift_storeEnumTagSinglePayload((uint64_t)v2422, 0, 1, v237);
          }
          uint64_t v438 = v2655[30];
          v439 = (void *)((char *)v12 + v438);
          v440 = (void *)((char *)v13 + v438);
          uint64_t v441 = v440[1];
          void *v439 = *v440;
          v439[1] = v441;
          uint64_t v442 = v2655[31];
          v443 = (char *)v12 + v442;
          v444 = (char *)v13 + v442;
          uint64_t v75 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          uint64_t v14 = v2673;
          if (__swift_getEnumTagSinglePayload((uint64_t)v444, 1, v75))
          {
            uint64_t v445 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v443, v444, *(void *)(*(void *)(v445 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v443, v444, v75);
            __swift_storeEnumTagSinglePayload((uint64_t)v443, 0, 1, v75);
          }
          uint64_t v635 = v2655[32];
          v338 = (char *)v12 + v635;
          uint64_t v339 = (uint64_t)v13 + v635;
          if (!__swift_getEnumTagSinglePayload((uint64_t)v13 + v635, 1, v75))
          {
LABEL_139:
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v75 - 8) + 16))(v338, v339, v75);
            uint64_t v448 = (uint64_t)v338;
            uint64_t v449 = v75;
            goto LABEL_140;
          }
LABEL_149:
          size_t v362 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                       - 8)
                           + 64);
          v363 = v338;
          v364 = (const void *)v339;
          goto LABEL_150;
        case 0x15u:
          uint64_t v2672 = v14;
          uint64_t v2565 = v13[1];
          void *v12 = *v13;
          v12[1] = v2565;
          uint64_t v2533 = v13[3];
          v12[2] = v13[2];
          v12[3] = v2533;
          uint64_t v2496 = v13[5];
          v12[4] = v13[4];
          v12[5] = v2496;
          uint64_t v239 = v13[7];
          v12[6] = v13[6];
          v12[7] = v239;
          uint64_t v240 = v13[9];
          v12[8] = v13[8];
          v12[9] = v240;
          uint64_t v241 = v13[11];
          v12[10] = v13[10];
          v12[11] = v241;
          uint64_t v242 = v13[13];
          v12[12] = v13[12];
          v12[13] = v242;
          uint64_t v243 = v13[15];
          v12[14] = v13[14];
          v12[15] = v243;
          *((unsigned char *)v12 + 128) = *((unsigned char *)v13 + 128);
          *(_WORD *)((char *)v12 + 129) = *(_WORD *)((char *)v13 + 129);
          uint64_t v244 = v13[18];
          v12[17] = v13[17];
          v12[18] = v244;
          uint64_t v245 = v13[20];
          v12[19] = v13[19];
          v12[20] = v245;
          uint64_t v246 = v13[22];
          v12[21] = v13[21];
          v12[22] = v246;
          uint64_t v247 = v13[24];
          v12[23] = v13[23];
          v12[24] = v247;
          uint64_t v248 = v13[26];
          v12[25] = v13[25];
          v12[26] = v248;
          uint64_t v249 = v13[28];
          v12[27] = v13[27];
          v12[28] = v249;
          uint64_t v250 = v13[30];
          v12[29] = v13[29];
          v12[30] = v250;
          uint64_t v251 = v13[32];
          v12[31] = v13[31];
          v12[32] = v251;
          uint64_t v252 = v13[34];
          uint64_t v253 = v13[33];
          *((unsigned char *)v12 + 280) = *((unsigned char *)v13 + 280);
          v12[33] = v253;
          v12[34] = v252;
          uint64_t v254 = v13[37];
          v12[36] = v13[36];
          v12[37] = v254;
          uint64_t v2656 = type metadata accessor for Appointment(0);
          uint64_t v255 = *(int *)(v2656 + 108);
          v2432 = (char *)v12 + v255;
          v256 = (char *)v13 + v255;
          uint64_t v200 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v256, 1, v200))
          {
            uint64_t v257 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2432, v256, *(void *)(*(void *)(v257 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 16))(v2432, v256, v200);
            __swift_storeEnumTagSinglePayload((uint64_t)v2432, 0, 1, v200);
          }
          uint64_t v437 = *(int *)(v2656 + 112);
LABEL_108:
          v446 = (char *)v12 + v437;
          v447 = (char *)v13 + v437;
          uint64_t v14 = v2672;
          if (__swift_getEnumTagSinglePayload((uint64_t)v13 + v437, 1, v200))
          {
            size_t v362 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                         - 8)
                             + 64);
            v363 = v446;
            v364 = v447;
            goto LABEL_150;
          }
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 16))(v446, v447, v200);
          uint64_t v448 = (uint64_t)v446;
          uint64_t v449 = v200;
          goto LABEL_140;
        case 0x16u:
          uint64_t v2674 = v14;
          uint64_t v2566 = v13[1];
          void *v12 = *v13;
          v12[1] = v2566;
          uint64_t v2534 = v13[3];
          v12[2] = v13[2];
          v12[3] = v2534;
          uint64_t v2497 = v13[5];
          v12[4] = v13[4];
          v12[5] = v2497;
          uint64_t v258 = v13[7];
          v12[6] = v13[6];
          v12[7] = v258;
          uint64_t v259 = v13[9];
          v12[8] = v13[8];
          v12[9] = v259;
          uint64_t v260 = v13[11];
          v12[10] = v13[10];
          v12[11] = v260;
          uint64_t v261 = v13[13];
          v12[12] = v13[12];
          v12[13] = v261;
          uint64_t v262 = v13[15];
          v12[14] = v13[14];
          v12[15] = v262;
          *((unsigned char *)v12 + 128) = *((unsigned char *)v13 + 128);
          *(_WORD *)((char *)v12 + 129) = *(_WORD *)((char *)v13 + 129);
          uint64_t v263 = v13[18];
          v12[17] = v13[17];
          v12[18] = v263;
          uint64_t v264 = v13[20];
          v12[19] = v13[19];
          v12[20] = v264;
          uint64_t v265 = v13[22];
          v12[21] = v13[21];
          v12[22] = v265;
          uint64_t v266 = v13[24];
          v12[23] = v13[23];
          v12[24] = v266;
          uint64_t v267 = v13[26];
          v12[25] = v13[25];
          v12[26] = v267;
          uint64_t v268 = v13[28];
          v12[27] = v13[27];
          v12[28] = v268;
          uint64_t v269 = v13[30];
          v12[29] = v13[29];
          v12[30] = v269;
          v12[31] = v13[31];
          v2657 = (int *)type metadata accessor for Party(0);
          uint64_t v270 = v2657[24];
          v2439 = (char *)v12 + v270;
          v271 = (char *)v13 + v270;
          uint64_t v272 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v271, 1, v272))
          {
            uint64_t v273 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2439, v271, *(void *)(*(void *)(v273 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v272 - 8) + 16))(v2439, v271, v272);
            __swift_storeEnumTagSinglePayload((uint64_t)v2439, 0, 1, v272);
          }
          uint64_t v450 = v2657[25];
          v451 = (char *)v12 + v450;
          v452 = (char *)v13 + v450;
          uint64_t v14 = v2674;
          if (__swift_getEnumTagSinglePayload((uint64_t)v13 + v450, 1, v272))
          {
            uint64_t v453 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v451, v452, *(void *)(*(void *)(v453 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v272 - 8) + 16))(v451, v452, v272);
            __swift_storeEnumTagSinglePayload((uint64_t)v451, 0, 1, v272);
          }
          uint64_t v636 = v2657[26];
          v354 = (char *)v12 + v636;
          uint64_t v355 = (uint64_t)v13 + v636;
          goto LABEL_155;
        case 0x17u:
          uint64_t v2675 = v14;
          uint64_t v274 = v13[1];
          void *v12 = *v13;
          v12[1] = v274;
          uint64_t v2609 = v13[3];
          v12[2] = v13[2];
          v12[3] = v2609;
          uint64_t v2587 = v13[5];
          v12[4] = v13[4];
          v12[5] = v2587;
          uint64_t v2567 = v13[7];
          v12[6] = v13[6];
          v12[7] = v2567;
          uint64_t v2535 = v13[9];
          v12[8] = v13[8];
          v12[9] = v2535;
          uint64_t v275 = v13[11];
          v12[10] = v13[10];
          v12[11] = v275;
          uint64_t v2498 = v13[13];
          v12[12] = v13[12];
          v12[13] = v2498;
          uint64_t v276 = v13[15];
          v12[14] = v13[14];
          v12[15] = v276;
          *((unsigned char *)v12 + 128) = *((unsigned char *)v13 + 128);
          *(_WORD *)((char *)v12 + 129) = *(_WORD *)((char *)v13 + 129);
          uint64_t v277 = v13[18];
          v12[17] = v13[17];
          v12[18] = v277;
          uint64_t v278 = v13[20];
          v12[19] = v13[19];
          v12[20] = v278;
          uint64_t v279 = v13[22];
          v12[21] = v13[21];
          v12[22] = v279;
          uint64_t v280 = v13[24];
          v12[23] = v13[23];
          v12[24] = v280;
          uint64_t v281 = v13[26];
          v12[25] = v13[25];
          v12[26] = v281;
          v12[27] = v13[27];
          v2658 = (int *)type metadata accessor for Trip(0);
          uint64_t v282 = v2658[22];
          v2462 = (char *)v12 + v282;
          v283 = (char *)v13 + v282;
          uint64_t v284 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v283, 1, v284))
          {
            uint64_t v285 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2462, v283, *(void *)(*(void *)(v285 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v284 - 8) + 16))(v2462, v283, v284);
            __swift_storeEnumTagSinglePayload((uint64_t)v2462, 0, 1, v284);
          }
          uint64_t v454 = v2658[23];
          v455 = (char *)v12 + v454;
          v456 = &v2677[v454];
          uint64_t v14 = v2675;
          if (__swift_getEnumTagSinglePayload((uint64_t)&v2677[v454], 1, v284))
          {
            uint64_t v457 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v455, v456, *(void *)(*(void *)(v457 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v284 - 8) + 16))(v455, v456, v284);
            __swift_storeEnumTagSinglePayload((uint64_t)v455, 0, 1, v284);
          }
          uint64_t v637 = v2658[24];
          v638 = (char *)v12 + v637;
          v639 = &v2677[v637];
          *(void *)v638 = *(void *)v639;
          v638[8] = v639[8];
          uint64_t v640 = v2658[25];
          v354 = (char *)v12 + v640;
          uint64_t v355 = (uint64_t)&v2677[v640];
LABEL_155:
          uint64_t v356 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload(v355, 1, v356))
          {
LABEL_82:
            size_t v362 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                         - 8)
                             + 64);
            v363 = v354;
            v364 = (const void *)v355;
LABEL_150:
            memcpy(v363, v364, v362);
          }
          else
          {
LABEL_156:
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v356 - 8) + 16))(v354, v355, v356);
            uint64_t v448 = (uint64_t)v354;
            uint64_t v449 = v356;
LABEL_140:
            __swift_storeEnumTagSinglePayload(v448, 0, 1, v449);
          }
LABEL_538:
          swift_storeEnumTagMultiPayload();
          uint64_t v2407 = *(int *)(v14 + 20);
          v2408 = *(void **)&v2677[v2407];
          *(void *)((char *)v12 + v2407) = v2408;
          uint64_t v2409 = *(int *)(v14 + 24);
          v2410 = (void *)((char *)v12 + v2409);
          v2411 = &v2677[v2409];
          uint64_t v2412 = *((void *)v2411 + 1);
          void *v2410 = *(void *)v2411;
          v2410[1] = v2412;
          id v2413 = v2408;
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
          break;
        case 0x18u:
          uint64_t v2676 = v14;
          uint64_t v286 = v13[1];
          void *v12 = *v13;
          v12[1] = v286;
          uint64_t v287 = v13[3];
          v12[2] = v13[2];
          v12[3] = v287;
          uint64_t v288 = v13[5];
          v12[4] = v13[4];
          v12[5] = v288;
          v289 = (int *)type metadata accessor for GlobalItem();
          uint64_t v290 = v289[7];
          v291 = (char *)v12 + v290;
          v292 = (char *)v13 + v290;
          uint64_t v293 = type metadata accessor for GlobalDialog();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v292, 1, v293))
          {
            uint64_t v294 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
            memcpy(v291, v292, *(void *)(*(void *)(v294 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v293 - 8) + 16))(v291, v292, v293);
            __swift_storeEnumTagSinglePayload((uint64_t)v291, 0, 1, v293);
          }
          uint64_t v458 = v289[8];
          v459 = (char *)v12 + v458;
          v460 = (char *)v13 + v458;
          unint64_t v461 = *((void *)v460 + 1);
          uint64_t v14 = v2676;
          if (v461 >> 60 == 15)
          {
            *(_OWORD *)v459 = *(_OWORD *)v460;
          }
          else
          {
            uint64_t v462 = *(void *)v460;
            outlined copy of Data._Representation(*(void *)v460, *((void *)v460 + 1));
            *(void *)v459 = v462;
            *((void *)v459 + 1) = v461;
          }
          *((unsigned char *)v12 + v289[9]) = *((unsigned char *)v13 + v289[9]);
          uint64_t v463 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
          *(void *)((char *)v12 + *(int *)(v463 + 48)) = *(void *)((char *)v13 + *(int *)(v463 + 48));
          swift_bridgeObjectRetain();
          goto LABEL_538;
        case 0x19u:
          uint64_t v295 = v13[1];
          void *v12 = *v13;
          v12[1] = v295;
          uint64_t v296 = v13[3];
          v12[2] = v13[2];
          v12[3] = v296;
          uint64_t v297 = v13[5];
          v12[4] = v13[4];
          v12[5] = v297;
          uint64_t v298 = v13[7];
          v12[6] = v13[6];
          v12[7] = v298;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_124;
        case 0x1Au:
          uint64_t v299 = v13[1];
          void *v12 = *v13;
          v12[1] = v299;
          uint64_t v300 = v13[3];
          v12[2] = v13[2];
          v12[3] = v300;
          uint64_t v301 = v13[5];
          v12[4] = v13[4];
          v12[5] = v301;
          v12[6] = v13[6];
          v302 = (int *)type metadata accessor for Answer(0);
          uint64_t v303 = v302[9];
          v2659 = (char *)v12 + v303;
          v304 = (char *)v13 + v303;
          uint64_t v305 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v304, 1, v305))
          {
            uint64_t v306 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2659, v304, *(void *)(*(void *)(v306 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v305 - 8) + 16))(v2659, v304, v305);
            __swift_storeEnumTagSinglePayload((uint64_t)v2659, 0, 1, v305);
          }
          *((unsigned char *)v12 + v302[10]) = v2677[v302[10]];
          uint64_t v464 = v302[11];
          v465 = (void *)((char *)v12 + v464);
          v466 = &v2677[v464];
          uint64_t v467 = *((void *)v466 + 1);
          void *v465 = *(void *)v466;
          v465[1] = v467;
LABEL_124:
          swift_bridgeObjectRetain();
          goto LABEL_538;
        default:
          uint64_t v2664 = v14;
          uint64_t v18 = v13[1];
          void *v12 = *v13;
          v12[1] = v18;
          uint64_t v19 = v13[3];
          v12[2] = v13[2];
          v12[3] = v19;
          uint64_t v20 = v13[5];
          v12[4] = v13[4];
          v12[5] = v20;
          uint64_t v21 = v13[7];
          v12[6] = v13[6];
          v12[7] = v21;
          uint64_t v22 = v13[9];
          v12[8] = v13[8];
          v12[9] = v22;
          uint64_t v2644 = v13[11];
          v12[10] = v13[10];
          v12[11] = v2644;
          v23 = (int *)type metadata accessor for EmailDocument(0);
          uint64_t v24 = v23[12];
          v2581 = (char *)v13 + v24;
          v2602 = (char *)v12 + v24;
          uint64_t v25 = type metadata accessor for Date();
          v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v2619 = v26;
          uint64_t v2630 = v25;
          v26(v2602, v2581, v25);
          *(void *)((char *)v12 + v23[13]) = *(void *)((char *)v13 + v23[13]);
          *(void *)((char *)v12 + v23[14]) = *(void *)((char *)v13 + v23[14]);
          *(void *)((char *)v12 + v23[15]) = *(void *)((char *)v13 + v23[15]);
          *((unsigned char *)v12 + v23[16]) = *((unsigned char *)v13 + v23[16]);
          *((unsigned char *)v12 + v23[17]) = *((unsigned char *)v13 + v23[17]);
          uint64_t v27 = v23[18];
          v28 = (void *)((char *)v12 + v27);
          v29 = (void *)((char *)v13 + v27);
          uint64_t v30 = v29[1];
          void *v28 = *v29;
          v28[1] = v30;
          v2645 = v23;
          uint64_t v31 = v23[19];
          v32 = (void *)((char *)v12 + v31);
          v33 = (char *)v13 + v31;
          uint64_t v34 = *(void *)((char *)v13 + v31);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v34)
          {
            uint64_t v35 = *((void *)v33 + 1);
            uint64_t v36 = *((void *)v33 + 2);
            void *v32 = v34;
            v32[1] = v35;
            uint64_t v37 = *((void *)v33 + 3);
            uint64_t v38 = *((void *)v33 + 4);
            v32[2] = v36;
            v32[3] = v37;
            v32[4] = v38;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v307 = *((_OWORD *)v33 + 1);
            *(_OWORD *)v32 = *(_OWORD *)v33;
            *((_OWORD *)v32 + 1) = v307;
            v32[4] = *((void *)v33 + 4);
          }
          uint64_t v308 = v23[20];
          v309 = (void *)((char *)v12 + v308);
          v310 = (void *)((char *)v13 + v308);
          uint64_t v311 = v310[1];
          void *v309 = *v310;
          v309[1] = v311;
          uint64_t v312 = v23[21];
          v313 = (void *)((char *)v12 + v312);
          v314 = (void *)((char *)v13 + v312);
          v315 = (int *)type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v314, 1, (uint64_t)v315))
          {
            uint64_t v316 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v313, v314, *(void *)(*(void *)(v316 - 8) + 64));
          }
          else
          {
            uint64_t v468 = v314[1];
            void *v313 = *v314;
            v313[1] = v468;
            uint64_t v469 = v315[5];
            v470 = (void *)((char *)v313 + v469);
            v2588 = v314;
            v471 = (void *)((char *)v314 + v469);
            uint64_t v472 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            v2536 = v315;
            v2568 = v313;
            if (__swift_getEnumTagSinglePayload((uint64_t)v471, 1, v472))
            {
              uint64_t v473 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v470, v471, *(void *)(*(void *)(v473 - 8) + 64));
            }
            else
            {
              uint64_t v693 = v471[1];
              void *v470 = *v471;
              v470[1] = v693;
              uint64_t v694 = v471[3];
              v470[2] = v471[2];
              v470[3] = v694;
              uint64_t v695 = v471[5];
              v470[4] = v471[4];
              v470[5] = v695;
              uint64_t v696 = v471[7];
              v470[6] = v471[6];
              v470[7] = v696;
              uint64_t v697 = v471[9];
              v470[8] = v471[8];
              v470[9] = v697;
              uint64_t v698 = v471[11];
              v470[10] = v471[10];
              v470[11] = v698;
              uint64_t v699 = v471[13];
              v470[12] = v471[12];
              v470[13] = v699;
              uint64_t v700 = v471[15];
              v470[14] = v471[14];
              v470[15] = v700;
              *((unsigned char *)v470 + 128) = *((unsigned char *)v471 + 128);
              *(_WORD *)((char *)v470 + 129) = *(_WORD *)((char *)v471 + 129);
              uint64_t v701 = v471[18];
              v470[17] = v471[17];
              v470[18] = v701;
              uint64_t v702 = v471[20];
              v470[19] = v471[19];
              v470[20] = v702;
              uint64_t v703 = v471[22];
              v470[21] = v471[21];
              v470[22] = v703;
              uint64_t v2415 = v471[24];
              v470[23] = v471[23];
              v470[24] = v2415;
              uint64_t v704 = v471[26];
              v470[25] = v471[25];
              v470[26] = v704;
              uint64_t v705 = v471[28];
              v470[27] = v471[27];
              v470[28] = v705;
              uint64_t v706 = v471[30];
              v470[29] = v471[29];
              v470[30] = v706;
              v2479 = (void *)v471[32];
              v470[31] = v471[31];
              v470[32] = v2479;
              uint64_t v707 = v471[34];
              v470[33] = v471[33];
              v470[34] = v707;
              uint64_t v708 = v471[36];
              v470[35] = v471[35];
              v470[36] = v708;
              uint64_t v709 = v471[38];
              v470[37] = v471[37];
              v470[38] = v709;
              uint64_t v710 = v471[40];
              v470[39] = v471[39];
              v470[40] = v710;
              uint64_t v711 = v471[42];
              v470[41] = v471[41];
              v470[42] = v711;
              uint64_t v712 = v471[44];
              v470[43] = v471[43];
              v470[44] = v712;
              uint64_t v713 = v471[46];
              v470[45] = v471[45];
              v470[46] = v713;
              uint64_t v714 = v471[47];
              *((unsigned char *)v470 + 384) = *((unsigned char *)v471 + 384);
              v470[47] = v714;
              uint64_t v715 = v471[50];
              v470[49] = v471[49];
              v470[50] = v715;
              uint64_t v716 = v471[52];
              v470[51] = v471[51];
              v470[52] = v716;
              uint64_t v717 = *(int *)(v472 + 140);
              v2500 = (char *)v470 + v717;
              v718 = (char *)v471 + v717;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v718, 1, v2630))
              {
                uint64_t v719 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2500, v718, *(void *)(*(void *)(v719 - 8) + 64));
              }
              else
              {
                v2619(v2500, v718, v2630);
                __swift_storeEnumTagSinglePayload((uint64_t)v2500, 0, 1, v2630);
              }
              uint64_t v774 = *(int *)(v472 + 144);
              v775 = (char *)v470 + v774;
              v776 = (char *)v471 + v774;
              if (__swift_getEnumTagSinglePayload((uint64_t)v471 + v774, 1, v2630))
              {
                uint64_t v777 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v775, v776, *(void *)(*(void *)(v777 - 8) + 64));
              }
              else
              {
                v2619(v775, v776, v2630);
                __swift_storeEnumTagSinglePayload((uint64_t)v775, 0, 1, v2630);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v470, 0, 1, v472);
              v313 = v2568;
            }
            v786 = v314;
            uint64_t v787 = v315[6];
            v788 = (void *)((char *)v313 + v787);
            v789 = (void *)((char *)v314 + v787);
            uint64_t v790 = type metadata accessor for TicketedTransportation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v789, 1, v790))
            {
              uint64_t v791 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v788, v789, *(void *)(*(void *)(v791 - 8) + 64));
            }
            else
            {
              uint64_t v792 = v789[1];
              void *v788 = *v789;
              v788[1] = v792;
              uint64_t v793 = v789[3];
              v788[2] = v789[2];
              v788[3] = v793;
              uint64_t v794 = v789[5];
              v788[4] = v789[4];
              v788[5] = v794;
              uint64_t v795 = v789[7];
              v788[6] = v789[6];
              v788[7] = v795;
              uint64_t v796 = v789[9];
              v788[8] = v789[8];
              v788[9] = v796;
              uint64_t v797 = v789[11];
              v788[10] = v789[10];
              v788[11] = v797;
              uint64_t v798 = v789[13];
              v788[12] = v789[12];
              v788[13] = v798;
              uint64_t v799 = v789[15];
              v788[14] = v789[14];
              v788[15] = v799;
              *((unsigned char *)v788 + 128) = *((unsigned char *)v789 + 128);
              *(_WORD *)((char *)v788 + 129) = *(_WORD *)((char *)v789 + 129);
              uint64_t v800 = v789[18];
              v788[17] = v789[17];
              v788[18] = v800;
              uint64_t v801 = v789[20];
              v788[19] = v789[19];
              v788[20] = v801;
              uint64_t v802 = v789[22];
              v788[21] = v789[21];
              v788[22] = v802;
              uint64_t v803 = v789[24];
              v788[23] = v789[23];
              v788[24] = v803;
              uint64_t v2471 = v789[26];
              v788[25] = v789[25];
              v788[26] = v2471;
              uint64_t v804 = v789[28];
              v788[27] = v789[27];
              v788[28] = v804;
              uint64_t v805 = v789[30];
              v788[29] = v789[29];
              v788[30] = v805;
              uint64_t v806 = v789[32];
              v788[31] = v789[31];
              v788[32] = v806;
              uint64_t v807 = v789[34];
              v788[33] = v789[33];
              v788[34] = v807;
              uint64_t v808 = v789[36];
              uint64_t v809 = v789[35];
              *((unsigned char *)v788 + 296) = *((unsigned char *)v789 + 296);
              v788[35] = v809;
              v788[36] = v808;
              uint64_t v810 = *(int *)(v790 + 112);
              v2480 = (char *)v788 + v810;
              v811 = (char *)v789 + v810;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v811, 1, v2630))
              {
                uint64_t v812 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2480, v811, *(void *)(*(void *)(v812 - 8) + 64));
              }
              else
              {
                v2619(v2480, v811, v2630);
                __swift_storeEnumTagSinglePayload((uint64_t)v2480, 0, 1, v2630);
              }
              uint64_t v865 = *(int *)(v790 + 116);
              v866 = (char *)v788 + v865;
              v867 = (char *)v789 + v865;
              if (__swift_getEnumTagSinglePayload((uint64_t)v789 + v865, 1, v2630))
              {
                uint64_t v868 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v866, v867, *(void *)(*(void *)(v868 - 8) + 64));
              }
              else
              {
                v2619(v866, v867, v2630);
                __swift_storeEnumTagSinglePayload((uint64_t)v866, 0, 1, v2630);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v788, 0, 1, v790);
              v313 = v2568;
              v786 = v2588;
            }
            uint64_t v877 = v315[7];
            v878 = (void *)((char *)v313 + v877);
            v879 = (void *)((char *)v786 + v877);
            v880 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v879, 1, (uint64_t)v880))
            {
              uint64_t v881 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v878, v879, *(void *)(*(void *)(v881 - 8) + 64));
            }
            else
            {
              uint64_t v882 = v879[1];
              void *v878 = *v879;
              v878[1] = v882;
              uint64_t v883 = v879[3];
              v878[2] = v879[2];
              v878[3] = v883;
              uint64_t v884 = v879[5];
              v878[4] = v879[4];
              v878[5] = v884;
              uint64_t v885 = v879[7];
              v878[6] = v879[6];
              v878[7] = v885;
              uint64_t v886 = v879[9];
              v878[8] = v879[8];
              v878[9] = v886;
              uint64_t v887 = v879[11];
              v878[10] = v879[10];
              v878[11] = v887;
              uint64_t v888 = v879[13];
              v878[12] = v879[12];
              v878[13] = v888;
              uint64_t v889 = v879[15];
              v878[14] = v879[14];
              v878[15] = v889;
              *((unsigned char *)v878 + 128) = *((unsigned char *)v879 + 128);
              *(_WORD *)((char *)v878 + 129) = *(_WORD *)((char *)v879 + 129);
              uint64_t v890 = v879[18];
              v878[17] = v879[17];
              v878[18] = v890;
              uint64_t v891 = v879[20];
              v878[19] = v879[19];
              v878[20] = v891;
              uint64_t v892 = v879[22];
              v878[21] = v879[21];
              v878[22] = v892;
              uint64_t v893 = v879[24];
              v878[23] = v879[23];
              v878[24] = v893;
              uint64_t v894 = v879[26];
              v878[25] = v879[25];
              v878[26] = v894;
              uint64_t v895 = v879[28];
              v878[27] = v879[27];
              v878[28] = v895;
              v2483 = (void *)v879[30];
              v878[29] = v879[29];
              v878[30] = v2483;
              uint64_t v896 = v879[32];
              v878[31] = v879[31];
              v878[32] = v896;
              uint64_t v897 = v879[34];
              v878[33] = v879[33];
              v878[34] = v897;
              uint64_t v898 = v879[36];
              uint64_t v899 = v879[35];
              *((unsigned char *)v878 + 296) = *((unsigned char *)v879 + 296);
              v878[35] = v899;
              v878[36] = v898;
              uint64_t v900 = v879[39];
              v878[38] = v879[38];
              v878[39] = v900;
              uint64_t v901 = v880[29];
              v2504 = (char *)v878 + v901;
              v902 = (char *)v879 + v901;
              uint64_t v903 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v902, 1, v903))
              {
                uint64_t v904 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2504, v902, *(void *)(*(void *)(v904 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v903 - 8) + 16))(v2504, v902, v903);
                __swift_storeEnumTagSinglePayload((uint64_t)v2504, 0, 1, v903);
              }
              uint64_t v959 = v880[30];
              v960 = (void *)((char *)v878 + v959);
              v961 = (void *)((char *)v879 + v959);
              uint64_t v962 = v961[1];
              void *v960 = *v961;
              v960[1] = v962;
              uint64_t v963 = v880[31];
              v964 = (char *)v878 + v963;
              v965 = (char *)v879 + v963;
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v965, 1, v2630))
              {
                uint64_t v966 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v964, v965, *(void *)(*(void *)(v966 - 8) + 64));
              }
              else
              {
                v2619(v964, v965, v2630);
                __swift_storeEnumTagSinglePayload((uint64_t)v964, 0, 1, v2630);
              }
              uint64_t v983 = v880[32];
              v984 = (char *)v878 + v983;
              v985 = (char *)v879 + v983;
              if (__swift_getEnumTagSinglePayload((uint64_t)v879 + v983, 1, v2630))
              {
                uint64_t v986 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v984, v985, *(void *)(*(void *)(v986 - 8) + 64));
              }
              else
              {
                v2619(v984, v985, v2630);
                __swift_storeEnumTagSinglePayload((uint64_t)v984, 0, 1, v2630);
              }
              v315 = v2536;
              __swift_storeEnumTagSinglePayload((uint64_t)v878, 0, 1, (uint64_t)v880);
              v313 = v2568;
              v786 = v2588;
            }
            uint64_t v995 = v315[8];
            v996 = (void *)((char *)v313 + v995);
            v997 = (void *)((char *)v786 + v995);
            uint64_t v998 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v997, 1, v998))
            {
              uint64_t v999 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v996, v997, *(void *)(*(void *)(v999 - 8) + 64));
            }
            else
            {
              uint64_t v1000 = v997[1];
              void *v996 = *v997;
              v996[1] = v1000;
              uint64_t v1001 = v997[3];
              v996[2] = v997[2];
              v996[3] = v1001;
              uint64_t v1002 = v997[5];
              v996[4] = v997[4];
              v996[5] = v1002;
              uint64_t v1003 = v997[7];
              v996[6] = v997[6];
              v996[7] = v1003;
              uint64_t v1004 = v997[9];
              v996[8] = v997[8];
              v996[9] = v1004;
              uint64_t v1005 = v997[11];
              v996[10] = v997[10];
              v996[11] = v1005;
              uint64_t v1006 = v997[13];
              v996[12] = v997[12];
              v996[13] = v1006;
              uint64_t v1007 = v997[15];
              v996[14] = v997[14];
              v996[15] = v1007;
              *((unsigned char *)v996 + 128) = *((unsigned char *)v997 + 128);
              *(_WORD *)((char *)v996 + 129) = *(_WORD *)((char *)v997 + 129);
              uint64_t v1008 = v997[18];
              v996[17] = v997[17];
              v996[18] = v1008;
              uint64_t v1009 = v997[20];
              v996[19] = v997[19];
              v996[20] = v1009;
              uint64_t v1010 = v997[22];
              v996[21] = v997[21];
              v996[22] = v1010;
              uint64_t v1011 = v997[24];
              v996[23] = v997[23];
              v996[24] = v1011;
              uint64_t v1012 = v997[26];
              v996[25] = v997[25];
              v996[26] = v1012;
              uint64_t v1013 = v997[28];
              v996[27] = v997[27];
              v996[28] = v1013;
              uint64_t v1014 = v997[30];
              v996[29] = v997[29];
              v996[30] = v1014;
              uint64_t v1015 = v997[32];
              v996[31] = v997[31];
              v996[32] = v1015;
              uint64_t v1016 = v997[34];
              uint64_t v1017 = v997[33];
              *((unsigned char *)v996 + 280) = *((unsigned char *)v997 + 280);
              v996[33] = v1017;
              v996[34] = v1016;
              uint64_t v1018 = v997[37];
              v996[36] = v997[36];
              v996[37] = v1018;
              uint64_t v1019 = *(int *)(v998 + 108);
              v2485 = (char *)v996 + v1019;
              v1020 = (char *)v997 + v1019;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1020, 1, v2630))
              {
                uint64_t v1021 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2485, v1020, *(void *)(*(void *)(v1021 - 8) + 64));
              }
              else
              {
                v2619(v2485, v1020, v2630);
                __swift_storeEnumTagSinglePayload((uint64_t)v2485, 0, 1, v2630);
              }
              uint64_t v1077 = *(int *)(v998 + 112);
              v1078 = (char *)v996 + v1077;
              v1079 = (char *)v997 + v1077;
              if (__swift_getEnumTagSinglePayload((uint64_t)v997 + v1077, 1, v2630))
              {
                uint64_t v1080 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1078, v1079, *(void *)(*(void *)(v1080 - 8) + 64));
              }
              else
              {
                v2619(v1078, v1079, v2630);
                __swift_storeEnumTagSinglePayload((uint64_t)v1078, 0, 1, v2630);
              }
              v315 = v2536;
              __swift_storeEnumTagSinglePayload((uint64_t)v996, 0, 1, v998);
              v313 = v2568;
              v786 = v2588;
            }
            uint64_t v1089 = v315[9];
            v1090 = (void *)((char *)v313 + v1089);
            v1091 = (void *)((char *)v786 + v1089);
            v1092 = (int *)type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1091, 1, (uint64_t)v1092))
            {
              uint64_t v1093 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v1090, v1091, *(void *)(*(void *)(v1093 - 8) + 64));
            }
            else
            {
              uint64_t v1094 = v1091[1];
              void *v1090 = *v1091;
              v1090[1] = v1094;
              uint64_t v1095 = v1091[3];
              v1090[2] = v1091[2];
              v1090[3] = v1095;
              uint64_t v1096 = v1091[5];
              v1090[4] = v1091[4];
              v1090[5] = v1096;
              uint64_t v1097 = v1091[7];
              v1090[6] = v1091[6];
              v1090[7] = v1097;
              uint64_t v1098 = v1091[9];
              v1090[8] = v1091[8];
              v1090[9] = v1098;
              uint64_t v1099 = v1091[11];
              v1090[10] = v1091[10];
              v1090[11] = v1099;
              uint64_t v1100 = v1091[13];
              v1090[12] = v1091[12];
              v1090[13] = v1100;
              uint64_t v1101 = v1091[15];
              v1090[14] = v1091[14];
              v1090[15] = v1101;
              *((unsigned char *)v1090 + 128) = *((unsigned char *)v1091 + 128);
              *(_WORD *)((char *)v1090 + 129) = *(_WORD *)((char *)v1091 + 129);
              uint64_t v1102 = v1091[18];
              v1090[17] = v1091[17];
              v1090[18] = v1102;
              uint64_t v1103 = v1091[20];
              v1090[19] = v1091[19];
              v1090[20] = v1103;
              uint64_t v1104 = v1091[22];
              v1090[21] = v1091[21];
              v1090[22] = v1104;
              uint64_t v1105 = v1091[24];
              v1090[23] = v1091[23];
              v1090[24] = v1105;
              uint64_t v1106 = v1091[26];
              v1090[25] = v1091[25];
              v1090[26] = v1106;
              uint64_t v1107 = v1091[28];
              v1090[27] = v1091[27];
              v1090[28] = v1107;
              uint64_t v1108 = v1091[30];
              v1090[29] = v1091[29];
              v1090[30] = v1108;
              v1090[31] = v1091[31];
              uint64_t v1109 = v1092[24];
              v2486 = (char *)v1090 + v1109;
              v1110 = (char *)v1091 + v1109;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1110, 1, v2630))
              {
                uint64_t v1111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2486, v1110, *(void *)(*(void *)(v1111 - 8) + 64));
              }
              else
              {
                v2619(v2486, v1110, v2630);
                __swift_storeEnumTagSinglePayload((uint64_t)v2486, 0, 1, v2630);
              }
              uint64_t v1158 = v1092[25];
              v1159 = (char *)v1090 + v1158;
              v1160 = (char *)v1091 + v1158;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1091 + v1158, 1, v2630))
              {
                uint64_t v1161 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1159, v1160, *(void *)(*(void *)(v1161 - 8) + 64));
              }
              else
              {
                v2619(v1159, v1160, v2630);
                __swift_storeEnumTagSinglePayload((uint64_t)v1159, 0, 1, v2630);
              }
              uint64_t v1170 = v1092[26];
              v1171 = (char *)v1090 + v1170;
              v1172 = (char *)v1091 + v1170;
              uint64_t v1173 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1172, 1, v1173))
              {
                uint64_t v1174 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1171, v1172, *(void *)(*(void *)(v1174 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1173 - 8) + 16))(v1171, v1172, v1173);
                __swift_storeEnumTagSinglePayload((uint64_t)v1171, 0, 1, v1173);
              }
              v315 = v2536;
              __swift_storeEnumTagSinglePayload((uint64_t)v1090, 0, 1, (uint64_t)v1092);
              v313 = v2568;
              v786 = v2588;
            }
            uint64_t v1184 = v315[10];
            v1185 = (void *)((char *)v313 + v1184);
            v1186 = (void *)((char *)v786 + v1184);
            v1187 = (int *)type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1186, 1, (uint64_t)v1187))
            {
              uint64_t v1188 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1185, v1186, *(void *)(*(void *)(v1188 - 8) + 64));
            }
            else
            {
              uint64_t v1189 = v1186[1];
              void *v1185 = *v1186;
              v1185[1] = v1189;
              uint64_t v1190 = v1186[3];
              v1185[2] = v1186[2];
              v1185[3] = v1190;
              uint64_t v1191 = v1186[5];
              v1185[4] = v1186[4];
              v1185[5] = v1191;
              uint64_t v1192 = v1186[7];
              v1185[6] = v1186[6];
              v1185[7] = v1192;
              uint64_t v1193 = v1186[9];
              v1185[8] = v1186[8];
              v1185[9] = v1193;
              uint64_t v1194 = v1186[11];
              v1185[10] = v1186[10];
              v1185[11] = v1194;
              uint64_t v1195 = v1186[13];
              v1185[12] = v1186[12];
              v1185[13] = v1195;
              uint64_t v1196 = v1186[15];
              v1185[14] = v1186[14];
              v1185[15] = v1196;
              *((unsigned char *)v1185 + 128) = *((unsigned char *)v1186 + 128);
              *(_WORD *)((char *)v1185 + 129) = *(_WORD *)((char *)v1186 + 129);
              uint64_t v1197 = v1186[18];
              v1185[17] = v1186[17];
              v1185[18] = v1197;
              uint64_t v1198 = v1186[20];
              v1185[19] = v1186[19];
              v1185[20] = v1198;
              uint64_t v1199 = v1186[22];
              v1185[21] = v1186[21];
              v1185[22] = v1199;
              uint64_t v1200 = v1186[24];
              v1185[23] = v1186[23];
              v1185[24] = v1200;
              uint64_t v1201 = v1186[26];
              v1185[25] = v1186[25];
              v1185[26] = v1201;
              v1185[27] = v1186[27];
              uint64_t v1202 = v1187[22];
              v2487 = (char *)v1185 + v1202;
              v2423 = (char *)v1186 + v1202;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2423, 1, v2630))
              {
                uint64_t v1203 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2487, v2423, *(void *)(*(void *)(v1203 - 8) + 64));
              }
              else
              {
                v2619(v2487, v2423, v2630);
                __swift_storeEnumTagSinglePayload((uint64_t)v2487, 0, 1, v2630);
              }
              uint64_t v1245 = v1187[23];
              v1246 = (char *)v1185 + v1245;
              v1247 = (char *)v1186 + v1245;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1186 + v1245, 1, v2630))
              {
                uint64_t v1248 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1246, v1247, *(void *)(*(void *)(v1248 - 8) + 64));
              }
              else
              {
                v2619(v1246, v1247, v2630);
                __swift_storeEnumTagSinglePayload((uint64_t)v1246, 0, 1, v2630);
              }
              uint64_t v1257 = v1187[24];
              v1258 = (char *)v1185 + v1257;
              v1259 = (char *)v1186 + v1257;
              *(void *)v1258 = *(void *)v1259;
              v1258[8] = v1259[8];
              uint64_t v1260 = v1187[25];
              v1261 = (char *)v1185 + v1260;
              v1262 = (char *)v1186 + v1260;
              uint64_t v1263 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1262, 1, v1263))
              {
                uint64_t v1264 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1261, v1262, *(void *)(*(void *)(v1264 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1263 - 8) + 16))(v1261, v1262, v1263);
                __swift_storeEnumTagSinglePayload((uint64_t)v1261, 0, 1, v1263);
              }
              v315 = v2536;
              __swift_storeEnumTagSinglePayload((uint64_t)v1185, 0, 1, (uint64_t)v1187);
              v313 = v2568;
              v786 = v2588;
            }
            uint64_t v1280 = v315[11];
            v1281 = (void *)((char *)v313 + v1280);
            v1282 = (void *)((char *)v786 + v1280);
            v1283 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1282, 1, (uint64_t)v1283))
            {
              uint64_t v1284 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1281, v1282, *(void *)(*(void *)(v1284 - 8) + 64));
            }
            else
            {
              uint64_t v1285 = v1282[1];
              void *v1281 = *v1282;
              v1281[1] = v1285;
              uint64_t v1286 = v1282[3];
              v1281[2] = v1282[2];
              v1281[3] = v1286;
              uint64_t v1287 = v1282[5];
              v1281[4] = v1282[4];
              v1281[5] = v1287;
              uint64_t v1288 = v1282[7];
              v1281[6] = v1282[6];
              v1281[7] = v1288;
              uint64_t v1289 = v1282[9];
              v1281[8] = v1282[8];
              v1281[9] = v1289;
              uint64_t v1290 = v1282[11];
              v1281[10] = v1282[10];
              v1281[11] = v1290;
              *((unsigned char *)v1281 + 96) = *((unsigned char *)v1282 + 96);
              uint64_t v1291 = v1282[14];
              v1281[13] = v1282[13];
              v1281[14] = v1291;
              uint64_t v1292 = v1283[13];
              v2512 = (char *)v1281 + v1292;
              v1293 = (char *)v1282 + v1292;
              uint64_t v2446 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1293, 1, v2446))
              {
                uint64_t v1294 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2512, v1293, *(void *)(*(void *)(v1294 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2446 - 8) + 16))(v2512, v1293, v2446);
                __swift_storeEnumTagSinglePayload((uint64_t)v2512, 0, 1, v2446);
              }
              uint64_t v1323 = v1283[14];
              v1324 = (char *)v1281 + v1323;
              v1325 = (char *)v1282 + v1323;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1282 + v1323, 1, v2446))
              {
                uint64_t v1326 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1324, v1325, *(void *)(*(void *)(v1326 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2446 - 8) + 16))(v1324, v1325, v2446);
                __swift_storeEnumTagSinglePayload((uint64_t)v1324, 0, 1, v2446);
              }
              uint64_t v1335 = v1283[15];
              v1336 = (void *)((char *)v1281 + v1335);
              v1337 = (void *)((char *)v1282 + v1335);
              uint64_t v1338 = v1337[1];
              void *v1336 = *v1337;
              v1336[1] = v1338;
              uint64_t v1339 = v1283[16];
              v1340 = (void *)((char *)v1281 + v1339);
              v1341 = (void *)((char *)v1282 + v1339);
              uint64_t v2515 = v1341[1];
              void *v1340 = *v1341;
              v1340[1] = v2515;
              uint64_t v1342 = v1283[17];
              v1343 = (void *)((char *)v1281 + v1342);
              v1344 = (void *)((char *)v1282 + v1342);
              uint64_t v1345 = v1344[1];
              void *v1343 = *v1344;
              v1343[1] = v1345;
              uint64_t v1346 = v1283[18];
              v2473 = (char *)v1282 + v1346;
              v2488 = (char *)v1281 + v1346;
              uint64_t v1347 = type metadata accessor for DateComponents();
              v1348 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1347 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1348(v2488, v2473, v1347);
              v1348((char *)v1281 + v1283[19], (char *)v1282 + v1283[19], v1347);
              uint64_t v1349 = v1283[20];
              v1350 = (void *)((char *)v1281 + v1349);
              v1351 = (void *)((char *)v1282 + v1349);
              uint64_t v1352 = v1351[1];
              void *v1350 = *v1351;
              v1350[1] = v1352;
              uint64_t v1353 = v1283[21];
              v1354 = (void *)((char *)v1281 + v1353);
              v1355 = (void *)((char *)v1282 + v1353);
              uint64_t v2516 = v1355[1];
              void *v1354 = *v1355;
              v1354[1] = v2516;
              uint64_t v1356 = v1283[22];
              v1357 = (void *)((char *)v1281 + v1356);
              v1358 = (void *)((char *)v1282 + v1356);
              v2489 = (void *)v1358[1];
              void *v1357 = *v1358;
              v1357[1] = v2489;
              uint64_t v1359 = v1283[23];
              v1360 = (void *)((char *)v1281 + v1359);
              v1361 = (void *)((char *)v1282 + v1359);
              uint64_t v2474 = v1361[1];
              void *v1360 = *v1361;
              v1360[1] = v2474;
              uint64_t v1362 = v1283[24];
              v1363 = (void *)((char *)v1281 + v1362);
              v1364 = (void *)((char *)v1282 + v1362);
              uint64_t v2455 = v1364[1];
              void *v1363 = *v1364;
              v1363[1] = v2455;
              uint64_t v1365 = v1283[25];
              v1366 = (void *)((char *)v1281 + v1365);
              v1367 = (void *)((char *)v1282 + v1365);
              uint64_t v2447 = v1367[1];
              void *v1366 = *v1367;
              v1366[1] = v2447;
              uint64_t v1368 = v1283[26];
              v1369 = (void *)((char *)v1281 + v1368);
              v1370 = (void *)((char *)v1282 + v1368);
              v2441 = (void *)v1370[1];
              void *v1369 = *v1370;
              v1369[1] = v2441;
              uint64_t v1371 = v1283[27];
              v1372 = (void *)((char *)v1281 + v1371);
              v1373 = (void *)((char *)v1282 + v1371);
              uint64_t v2436 = v1373[1];
              void *v1372 = *v1373;
              v1372[1] = v2436;
              uint64_t v1374 = v1283[28];
              v1375 = (void *)((char *)v1281 + v1374);
              v1376 = (void *)((char *)v1282 + v1374);
              v2433 = (void *)v1376[1];
              void *v1375 = *v1376;
              v1375[1] = v2433;
              uint64_t v1377 = v1283[29];
              v1378 = (void *)((char *)v1281 + v1377);
              v1379 = (void *)((char *)v1282 + v1377);
              v2429 = (void *)v1379[1];
              void *v1378 = *v1379;
              v1378[1] = v2429;
              uint64_t v1380 = v1283[30];
              v1381 = (void *)((char *)v1281 + v1380);
              v1382 = (void *)((char *)v1282 + v1380);
              v2424 = (void *)v1382[1];
              void *v1381 = *v1382;
              v1381[1] = v2424;
              uint64_t v1383 = v1283[31];
              v1384 = (void *)((char *)v1281 + v1383);
              v1385 = (void *)((char *)v1282 + v1383);
              uint64_t v2421 = v1385[1];
              void *v1384 = *v1385;
              v1384[1] = v2421;
              uint64_t v1386 = v1283[32];
              v1387 = (void *)((char *)v1281 + v1386);
              v1388 = (void *)((char *)v1282 + v1386);
              uint64_t v1389 = v1388[1];
              void *v1387 = *v1388;
              v1387[1] = v1389;
              *(void *)((char *)v1281 + v1283[33]) = *(void *)((char *)v1282 + v1283[33]);
              *(void *)((char *)v1281 + v1283[34]) = *(void *)((char *)v1282 + v1283[34]);
              uint64_t v1390 = v1283[35];
              v1391 = (void *)((char *)v1281 + v1390);
              v1392 = (void *)((char *)v1282 + v1390);
              uint64_t v1393 = v1392[1];
              void *v1391 = *v1392;
              v1391[1] = v1393;
              uint64_t v1394 = v1283[36];
              v1395 = (void *)((char *)v1281 + v1394);
              v1396 = (void *)((char *)v1282 + v1394);
              uint64_t v1397 = v1396[1];
              void *v1395 = *v1396;
              v1395[1] = v1397;
              uint64_t v1398 = v1283[37];
              v1399 = (void *)((char *)v1281 + v1398);
              v1400 = (void *)((char *)v1282 + v1398);
              uint64_t v1401 = v1400[1];
              void *v1399 = *v1400;
              v1399[1] = v1401;
              uint64_t v1402 = v1283[38];
              v2464 = (char *)v1281 + v1402;
              v2419 = (char *)v1282 + v1402;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2419, 1, v2630))
              {
                uint64_t v1403 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2464, v2419, *(void *)(*(void *)(v1403 - 8) + 64));
              }
              else
              {
                v2619(v2464, v2419, v2630);
                __swift_storeEnumTagSinglePayload((uint64_t)v2464, 0, 1, v2630);
              }
              uint64_t v1544 = v1283[39];
              v1545 = (void *)((char *)v1281 + v1544);
              v1546 = (void *)((char *)v1282 + v1544);
              uint64_t v1547 = v1546[1];
              void *v1545 = *v1546;
              v1545[1] = v1547;
              uint64_t v1548 = v1283[40];
              v1549 = (void *)((char *)v1281 + v1548);
              v1550 = (void *)((char *)v1282 + v1548);
              uint64_t v1551 = v1550[1];
              void *v1549 = *v1550;
              v1549[1] = v1551;
              uint64_t v1552 = v1283[41];
              v1553 = (char *)v1281 + v1552;
              v1554 = (char *)v1282 + v1552;
              v1553[8] = v1554[8];
              *(void *)v1553 = *(void *)v1554;
              uint64_t v1555 = v1283[42];
              v1556 = (void *)((char *)v1281 + v1555);
              v1557 = (void *)((char *)v1282 + v1555);
              uint64_t v1558 = v1557[1];
              void *v1556 = *v1557;
              v1556[1] = v1558;
              uint64_t v1559 = v1283[43];
              v1560 = (char *)v1281 + v1559;
              v1561 = (char *)v1282 + v1559;
              *(_OWORD *)v1560 = *(_OWORD *)v1561;
              *(void *)(v1560 + 13) = *(void *)(v1561 + 13);
              uint64_t v1562 = v1283[44];
              v1563 = (void *)((char *)v1281 + v1562);
              v1564 = (void *)((char *)v1282 + v1562);
              uint64_t v1565 = v1564[1];
              void *v1563 = *v1564;
              v1563[1] = v1565;
              uint64_t v1566 = v1283[45];
              v1567 = (void *)((char *)v1281 + v1566);
              v1568 = (void *)((char *)v1282 + v1566);
              uint64_t v1569 = v1568[1];
              void *v1567 = *v1568;
              v1567[1] = v1569;
              uint64_t v1570 = v1283[46];
              v1571 = (void *)((char *)v1281 + v1570);
              v1572 = (void *)((char *)v1282 + v1570);
              uint64_t v1573 = v1572[1];
              void *v1571 = *v1572;
              v1571[1] = v1573;
              uint64_t v1574 = v1283[47];
              v1575 = (void *)((char *)v1281 + v1574);
              v1576 = (void *)((char *)v1282 + v1574);
              uint64_t v1577 = v1576[1];
              void *v1575 = *v1576;
              v1575[1] = v1577;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1281, 0, 1, (uint64_t)v1283);
              v315 = v2536;
              v313 = v2568;
              v786 = v2588;
            }
            uint64_t v1578 = v315[12];
            v1579 = (void *)((char *)v313 + v1578);
            v1580 = (void *)((char *)v786 + v1578);
            v1581 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1580, 1, (uint64_t)v1581))
            {
              uint64_t v1582 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1579, v1580, *(void *)(*(void *)(v1582 - 8) + 64));
            }
            else
            {
              uint64_t v1583 = v1580[1];
              void *v1579 = *v1580;
              v1579[1] = v1583;
              uint64_t v1584 = v1580[3];
              v1579[2] = v1580[2];
              v1579[3] = v1584;
              uint64_t v1585 = v1580[5];
              v1579[4] = v1580[4];
              v1579[5] = v1585;
              uint64_t v1586 = v1580[7];
              v1579[6] = v1580[6];
              v1579[7] = v1586;
              uint64_t v1587 = v1580[9];
              v1579[8] = v1580[8];
              v1579[9] = v1587;
              uint64_t v1588 = v1580[11];
              v1579[10] = v1580[10];
              v1579[11] = v1588;
              *((unsigned char *)v1579 + 96) = *((unsigned char *)v1580 + 96);
              uint64_t v1589 = v1580[14];
              v1579[13] = v1580[13];
              v1579[14] = v1589;
              uint64_t v1590 = v1580[16];
              v1579[15] = v1580[15];
              v1579[16] = v1590;
              uint64_t v1591 = v1581[14];
              v2521 = (char *)v1579 + v1591;
              v2450 = (char *)v1580 + v1591;
              v2444 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2450, 1, (uint64_t)v2444))
              {
                uint64_t v1592 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2521, v2450, *(void *)(*(void *)(v1592 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2444 - 1) + 16))(v2521, v2450, v2444);
                __swift_storeEnumTagSinglePayload((uint64_t)v2521, 0, 1, (uint64_t)v2444);
              }
              uint64_t v1691 = v1581[15];
              v1692 = (char *)v1579 + v1691;
              v1693 = (char *)v1580 + v1691;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1580 + v1691, 1, (uint64_t)v2444))
              {
                uint64_t v1694 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1692, v1693, *(void *)(*(void *)(v1694 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2444 - 1) + 16))(v1692, v1693, v2444);
                __swift_storeEnumTagSinglePayload((uint64_t)v1692, 0, 1, (uint64_t)v2444);
              }
              uint64_t v1703 = v1581[16];
              v1704 = (void *)((char *)v1579 + v1703);
              v1705 = (void *)((char *)v1580 + v1703);
              uint64_t v1706 = v1705[1];
              void *v1704 = *v1705;
              v1704[1] = v1706;
              uint64_t v1707 = v1581[17];
              v1708 = (void *)((char *)v1579 + v1707);
              v1709 = (void *)((char *)v1580 + v1707);
              uint64_t v2524 = v1709[1];
              void *v1708 = *v1709;
              v1708[1] = v2524;
              uint64_t v1710 = v1581[18];
              v1711 = (void *)((char *)v1579 + v1710);
              v1712 = (void *)((char *)v1580 + v1710);
              v2493 = (void *)v1712[1];
              void *v1711 = *v1712;
              v1711[1] = v2493;
              uint64_t v1713 = v1581[19];
              v1714 = (void *)((char *)v1579 + v1713);
              v1715 = (void *)((char *)v1580 + v1713);
              uint64_t v2477 = v1715[1];
              void *v1714 = *v1715;
              v1714[1] = v2477;
              uint64_t v1716 = v1581[20];
              v1717 = (void *)((char *)v1579 + v1716);
              v1718 = (void *)((char *)v1580 + v1716);
              uint64_t v2452 = v1718[1];
              void *v1717 = *v1718;
              v1717[1] = v2452;
              *(void *)((char *)v1579 + v1581[21]) = *(void *)((char *)v1580 + v1581[21]);
              *(void *)((char *)v1579 + v1581[22]) = *(void *)((char *)v1580 + v1581[22]);
              uint64_t v1719 = v1581[23];
              v1720 = (char *)v1579 + v1719;
              v1721 = (char *)v1580 + v1719;
              *(void *)v1720 = *(void *)v1721;
              v1720[8] = v1721[8];
              uint64_t v1722 = v1581[24];
              v1723 = (char *)v1579 + v1722;
              v1724 = (char *)v1580 + v1722;
              *(void *)v1723 = *(void *)v1724;
              v1723[8] = v1724[8];
              uint64_t v1725 = v1581[25];
              v1726 = (void *)((char *)v1579 + v1725);
              v1727 = (void *)((char *)v1580 + v1725);
              uint64_t v1728 = v1727[1];
              void *v1726 = *v1727;
              v1726[1] = v1728;
              uint64_t v1729 = v1581[26];
              v1730 = (void *)((char *)v1579 + v1729);
              v1731 = (void *)((char *)v1580 + v1729);
              uint64_t v1732 = v1731[1];
              void *v1730 = *v1731;
              v1730[1] = v1732;
              uint64_t v1733 = v1581[27];
              v1734 = (void *)((char *)v1579 + v1733);
              v1735 = (void *)((char *)v1580 + v1733);
              uint64_t v1736 = v1735[1];
              void *v1734 = *v1735;
              v1734[1] = v1736;
              uint64_t v1737 = v1581[28];
              v1738 = (void *)((char *)v1579 + v1737);
              v1739 = (void *)((char *)v1580 + v1737);
              uint64_t v1740 = v1739[1];
              void *v1738 = *v1739;
              v1738[1] = v1740;
              uint64_t v1741 = v1581[29];
              v1742 = (char *)v1579 + v1741;
              v1743 = (char *)v1580 + v1741;
              *(void *)v1742 = *(void *)v1743;
              v1742[8] = v1743[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1579, 0, 1, (uint64_t)v1581);
              v315 = v2536;
              v313 = v2568;
              v786 = v2588;
            }
            uint64_t v1744 = v315[13];
            v1745 = (void *)((char *)v313 + v1744);
            v1746 = (void *)((char *)v786 + v1744);
            v1747 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1746, 1, (uint64_t)v1747))
            {
              uint64_t v1748 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1745, v1746, *(void *)(*(void *)(v1748 - 8) + 64));
            }
            else
            {
              uint64_t v1749 = v1746[1];
              void *v1745 = *v1746;
              v1745[1] = v1749;
              uint64_t v1750 = v1746[3];
              v1745[2] = v1746[2];
              v1745[3] = v1750;
              uint64_t v2525 = v1746[5];
              v1745[4] = v1746[4];
              v1745[5] = v2525;
              uint64_t v1751 = v1746[7];
              v1745[6] = v1746[6];
              v1745[7] = v1751;
              uint64_t v1752 = v1746[9];
              v1745[8] = v1746[8];
              v1745[9] = v1752;
              uint64_t v1753 = v1746[11];
              v1745[10] = v1746[10];
              v1745[11] = v1753;
              *((unsigned char *)v1745 + 96) = *((unsigned char *)v1746 + 96);
              uint64_t v1754 = v1746[14];
              v1745[13] = v1746[13];
              v1745[14] = v1754;
              uint64_t v1755 = v1746[16];
              v1745[15] = v1746[15];
              v1745[16] = v1755;
              uint64_t v1756 = v1747[14];
              v2593 = (char *)v1745 + v1756;
              v2459 = (char *)v1746 + v1756;
              uint64_t v2453 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2459, 1, v2453))
              {
                uint64_t v1757 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2593, v2459, *(void *)(*(void *)(v1757 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2453 - 8) + 16))(v2593, v2459, v2453);
                __swift_storeEnumTagSinglePayload((uint64_t)v2593, 0, 1, v2453);
              }
              uint64_t v1868 = v1747[15];
              v1869 = (void *)((char *)v1745 + v1868);
              v1870 = (void *)((char *)v1746 + v1868);
              uint64_t v1871 = v1870[1];
              void *v1869 = *v1870;
              v1869[1] = v1871;
              uint64_t v1872 = v1747[16];
              v1873 = (void *)((char *)v1745 + v1872);
              v1874 = (void *)((char *)v1746 + v1872);
              uint64_t v1875 = v1874[1];
              void *v1873 = *v1874;
              v1873[1] = v1875;
              uint64_t v1876 = v1747[17];
              v1877 = (void *)((char *)v1745 + v1876);
              v1878 = (void *)((char *)v1746 + v1876);
              uint64_t v2594 = v1878[1];
              void *v1877 = *v1878;
              v1877[1] = v2594;
              uint64_t v1879 = v1747[18];
              v1880 = (void *)((char *)v1745 + v1879);
              v1881 = (void *)((char *)v1746 + v1879);
              uint64_t v2530 = v1881[1];
              void *v1880 = *v1881;
              v1880[1] = v2530;
              uint64_t v1882 = v1747[19];
              v1883 = (void *)((char *)v1745 + v1882);
              v1884 = (void *)((char *)v1746 + v1882);
              uint64_t v1885 = v1884[1];
              void *v1883 = *v1884;
              v1883[1] = v1885;
              *(void *)((char *)v1745 + v1747[20]) = *(void *)((char *)v1746 + v1747[20]);
              uint64_t v1886 = v1747[21];
              v1887 = (void *)((char *)v1745 + v1886);
              v1888 = (void *)((char *)v1746 + v1886);
              uint64_t v1889 = v1888[1];
              void *v1887 = *v1888;
              v1887[1] = v1889;
              uint64_t v1890 = v1747[22];
              v1891 = (void *)((char *)v1745 + v1890);
              v1892 = (void *)((char *)v1746 + v1890);
              uint64_t v1893 = v1892[1];
              void *v1891 = *v1892;
              v1891[1] = v1893;
              uint64_t v1894 = v1747[23];
              v1895 = (void *)((char *)v1745 + v1894);
              v1896 = (void *)((char *)v1746 + v1894);
              uint64_t v1897 = v1896[1];
              void *v1895 = *v1896;
              v1895[1] = v1897;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1745, 0, 1, (uint64_t)v1747);
              v315 = v2536;
              v313 = v2568;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v313, 0, 1, (uint64_t)v315);
          }
          uint64_t v1898 = v2645[22];
          v1899 = (void *)((char *)v12 + v1898);
          v1900 = &v2677[v1898];
          uint64_t v1901 = type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1900, 1, v1901))
          {
            uint64_t v1902 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v1899, v1900, *(void *)(*(void *)(v1902 - 8) + 64));
          }
          else
          {
            uint64_t v1903 = *((void *)v1900 + 1);
            void *v1899 = *(void *)v1900;
            v1899[1] = v1903;
            uint64_t v1904 = *((void *)v1900 + 3);
            v1899[2] = *((void *)v1900 + 2);
            v1899[3] = v1904;
            uint64_t v1905 = *((void *)v1900 + 5);
            v1906 = (int *)v1901;
            v1899[4] = *((void *)v1900 + 4);
            v1899[5] = v1905;
            uint64_t v1907 = *((void *)v1900 + 7);
            v1899[6] = *((void *)v1900 + 6);
            v1899[7] = v1907;
            uint64_t v1908 = *((void *)v1900 + 9);
            v1899[8] = *((void *)v1900 + 8);
            v1899[9] = v1908;
            uint64_t v1909 = *((void *)v1900 + 11);
            v1899[10] = *((void *)v1900 + 10);
            v1899[11] = v1909;
            v2595 = v1906;
            uint64_t v1910 = v1906[10];
            v2574 = (char *)v1899 + v1910;
            v1911 = &v1900[v1910];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1911, 1, v2630))
            {
              uint64_t v1912 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2574, v1911, *(void *)(*(void *)(v1912 - 8) + 64));
            }
            else
            {
              v2619(v2574, v1911, v2630);
              __swift_storeEnumTagSinglePayload((uint64_t)v2574, 0, 1, v2630);
            }
            uint64_t v1913 = v2595[11];
            v1914 = (char *)v1899 + v1913;
            v1915 = &v1900[v1913];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1900[v1913], 1, v2630))
            {
              uint64_t v1916 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1914, v1915, *(void *)(*(void *)(v1916 - 8) + 64));
            }
            else
            {
              v2619(v1914, v1915, v2630);
              __swift_storeEnumTagSinglePayload((uint64_t)v1914, 0, 1, v2630);
            }
            uint64_t v1917 = v2595[12];
            v1918 = (void *)((char *)v1899 + v1917);
            v1919 = &v1900[v1917];
            uint64_t v1920 = v1919[1];
            void *v1918 = *v1919;
            v1918[1] = v1920;
            uint64_t v1921 = v2595[13];
            v1922 = (void *)((char *)v1899 + v1921);
            v1923 = &v1900[v1921];
            uint64_t v1924 = v1923[1];
            void *v1922 = *v1923;
            v1922[1] = v1924;
            uint64_t v1925 = v2595[14];
            v1926 = (void *)((char *)v1899 + v1925);
            v1927 = &v1900[v1925];
            uint64_t v1928 = v1927[1];
            void *v1926 = *v1927;
            v1926[1] = v1928;
            uint64_t v1929 = v2595[15];
            v1930 = (char *)v1899 + v1929;
            v1931 = &v1900[v1929];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1931, 1, v2630))
            {
              uint64_t v1932 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1930, v1931, *(void *)(*(void *)(v1932 - 8) + 64));
            }
            else
            {
              v2619(v1930, v1931, v2630);
              __swift_storeEnumTagSinglePayload((uint64_t)v1930, 0, 1, v2630);
            }
            uint64_t v1933 = v2595[16];
            v1934 = (void *)((char *)v1899 + v1933);
            v1935 = &v1900[v1933];
            uint64_t v1936 = v1935[1];
            void *v1934 = *v1935;
            v1934[1] = v1936;
            uint64_t v1937 = v2595[17];
            v1938 = (void *)((char *)v1899 + v1937);
            v1939 = &v1900[v1937];
            uint64_t v1940 = v1939[1];
            void *v1938 = *v1939;
            v1938[1] = v1940;
            uint64_t v1941 = v2595[18];
            v1942 = (void *)((char *)v1899 + v1941);
            v1943 = &v1900[v1941];
            uint64_t v2575 = v1943[1];
            void *v1942 = *v1943;
            v1942[1] = v2575;
            uint64_t v1944 = v2595[19];
            v1945 = (void *)((char *)v1899 + v1944);
            v1946 = &v1900[v1944];
            uint64_t v1947 = v1946[1];
            void *v1945 = *v1946;
            v1945[1] = v1947;
            uint64_t v1948 = v2595[20];
            v1949 = (void *)((char *)v1899 + v1948);
            v1950 = &v1900[v1948];
            uint64_t v1951 = v1950[1];
            void *v1949 = *v1950;
            v1949[1] = v1951;
            uint64_t v1952 = v2595[21];
            v1953 = (void *)((char *)v1899 + v1952);
            v1954 = &v1900[v1952];
            uint64_t v1955 = v1954[1];
            void *v1953 = *v1954;
            v1953[1] = v1955;
            uint64_t v1956 = v2595[22];
            v1957 = (void *)((char *)v1899 + v1956);
            v1958 = &v1900[v1956];
            uint64_t v1959 = v1958[1];
            void *v1957 = *v1958;
            v1957[1] = v1959;
            uint64_t v1960 = v2595[23];
            v1961 = (void *)((char *)v1899 + v1960);
            v1962 = &v1900[v1960];
            uint64_t v1963 = v1962[1];
            void *v1961 = *v1962;
            v1961[1] = v1963;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1899, 0, 1, (uint64_t)v2595);
          }
          uint64_t v1964 = v2645[23];
          v1965 = (void *)((char *)v12 + v1964);
          v1966 = &v2677[v1964];
          v1967 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1966, 1, (uint64_t)v1967))
          {
            uint64_t v1968 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v1965, v1966, *(void *)(*(void *)(v1968 - 8) + 64));
          }
          else
          {
            uint64_t v1969 = *((void *)v1966 + 1);
            void *v1965 = *(void *)v1966;
            v1965[1] = v1969;
            uint64_t v1970 = *((void *)v1966 + 3);
            v1965[2] = *((void *)v1966 + 2);
            v1965[3] = v1970;
            uint64_t v1971 = *((void *)v1966 + 5);
            v1965[4] = *((void *)v1966 + 4);
            v1965[5] = v1971;
            uint64_t v1972 = *((void *)v1966 + 7);
            v1965[6] = *((void *)v1966 + 6);
            v1965[7] = v1972;
            uint64_t v2576 = *((void *)v1966 + 9);
            v1965[8] = *((void *)v1966 + 8);
            v1965[9] = v2576;
            uint64_t v2561 = *((void *)v1966 + 11);
            v1965[10] = *((void *)v1966 + 10);
            v1965[11] = v2561;
            uint64_t v1973 = v1967[11];
            v2596 = (char *)v1965 + v1973;
            v1974 = &v1966[v1973];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1974, 1, v2630))
            {
              uint64_t v1975 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2596, v1974, *(void *)(*(void *)(v1975 - 8) + 64));
            }
            else
            {
              v2619(v2596, v1974, v2630);
              __swift_storeEnumTagSinglePayload((uint64_t)v2596, 0, 1, v2630);
            }
            uint64_t v1976 = v1967[12];
            v1977 = (void *)((char *)v1965 + v1976);
            v1978 = &v1966[v1976];
            uint64_t v1979 = v1978[1];
            void *v1977 = *v1978;
            v1977[1] = v1979;
            *(void *)((char *)v1965 + v1967[13]) = *(void *)&v1966[v1967[13]];
            uint64_t v1980 = v1967[14];
            v1981 = (char *)v1965 + v1980;
            v1982 = &v1966[v1980];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1982, 1, v2630))
            {
              uint64_t v1983 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1981, v1982, *(void *)(*(void *)(v1983 - 8) + 64));
            }
            else
            {
              v2619(v1981, v1982, v2630);
              __swift_storeEnumTagSinglePayload((uint64_t)v1981, 0, 1, v2630);
            }
            *(void *)((char *)v1965 + v1967[15]) = *(void *)&v1966[v1967[15]];
            *(void *)((char *)v1965 + v1967[16]) = *(void *)&v1966[v1967[16]];
            uint64_t v1984 = v1967[17];
            v1985 = (void *)((char *)v1965 + v1984);
            v1986 = &v1966[v1984];
            uint64_t v1987 = v1986[1];
            void *v1985 = *v1986;
            v1985[1] = v1987;
            *(void *)((char *)v1965 + v1967[18]) = *(void *)&v1966[v1967[18]];
            *(void *)((char *)v1965 + v1967[19]) = *(void *)&v1966[v1967[19]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1965, 0, 1, (uint64_t)v1967);
          }
          uint64_t v1988 = v2645[24];
          v1989 = (void *)((char *)v12 + v1988);
          v1990 = &v2677[v1988];
          v1991 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1990, 1, (uint64_t)v1991))
          {
            uint64_t v1992 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v1989, v1990, *(void *)(*(void *)(v1992 - 8) + 64));
          }
          else
          {
            uint64_t v1993 = *((void *)v1990 + 1);
            void *v1989 = *(void *)v1990;
            v1989[1] = v1993;
            uint64_t v1994 = *((void *)v1990 + 3);
            v1989[2] = *((void *)v1990 + 2);
            v1989[3] = v1994;
            uint64_t v1995 = *((void *)v1990 + 5);
            v1989[4] = *((void *)v1990 + 4);
            v1989[5] = v1995;
            uint64_t v1996 = *((void *)v1990 + 7);
            v1989[6] = *((void *)v1990 + 6);
            v1989[7] = v1996;
            uint64_t v1997 = v1991[8];
            v2577 = &v1990[v1997];
            v2597 = (char *)v1989 + v1997;
            uint64_t v1998 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2577, 1, v1998))
            {
              uint64_t v1999 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2597, v2577, *(void *)(*(void *)(v1999 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1998 - 8) + 16))(v2597, v2577, v1998);
              __swift_storeEnumTagSinglePayload((uint64_t)v2597, 0, 1, v1998);
            }
            uint64_t v2000 = v1991[9];
            v2001 = (void *)((char *)v1989 + v2000);
            v2002 = &v1990[v2000];
            uint64_t v2003 = v2002[1];
            void *v2001 = *v2002;
            v2001[1] = v2003;
            uint64_t v2004 = v1991[10];
            v2005 = (void *)((char *)v1989 + v2004);
            v2006 = &v1990[v2004];
            uint64_t v2007 = v2006[1];
            void *v2005 = *v2006;
            v2005[1] = v2007;
            uint64_t v2008 = v1991[11];
            v2009 = (void *)((char *)v1989 + v2008);
            v2010 = &v1990[v2008];
            uint64_t v2011 = v2010[1];
            void *v2009 = *v2010;
            v2009[1] = v2011;
            uint64_t v2012 = v1991[12];
            v2013 = (char *)v1989 + v2012;
            v2014 = &v1990[v2012];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2014, 1, v2630))
            {
              uint64_t v2015 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2013, v2014, *(void *)(*(void *)(v2015 - 8) + 64));
            }
            else
            {
              v2619(v2013, v2014, v2630);
              __swift_storeEnumTagSinglePayload((uint64_t)v2013, 0, 1, v2630);
            }
            uint64_t v2016 = v1991[13];
            v2017 = (char *)v1989 + v2016;
            v2018 = &v1990[v2016];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1990[v2016], 1, v2630))
            {
              uint64_t v2019 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2017, v2018, *(void *)(*(void *)(v2019 - 8) + 64));
            }
            else
            {
              v2619(v2017, v2018, v2630);
              __swift_storeEnumTagSinglePayload((uint64_t)v2017, 0, 1, v2630);
            }
            uint64_t v2020 = v1991[14];
            v2021 = (char *)v1989 + v2020;
            v2022 = &v1990[v2020];
            *(void *)v2021 = *(void *)v2022;
            v2021[8] = v2022[8];
            uint64_t v2023 = v1991[15];
            v2024 = (void *)((char *)v1989 + v2023);
            v2025 = &v1990[v2023];
            uint64_t v2026 = v2025[1];
            void *v2024 = *v2025;
            v2024[1] = v2026;
            uint64_t v2027 = v1991[16];
            v2028 = (void *)((char *)v1989 + v2027);
            v2029 = &v1990[v2027];
            uint64_t v2030 = v2029[1];
            void *v2028 = *v2029;
            v2028[1] = v2030;
            uint64_t v2031 = v1991[17];
            v2032 = (void *)((char *)v1989 + v2031);
            v2033 = &v1990[v2031];
            uint64_t v2034 = v2033[1];
            void *v2032 = *v2033;
            v2032[1] = v2034;
            uint64_t v2035 = v1991[18];
            v2036 = (void *)((char *)v1989 + v2035);
            v2037 = &v1990[v2035];
            uint64_t v2038 = v2037[1];
            void *v2036 = *v2037;
            v2036[1] = v2038;
            uint64_t v2039 = v1991[19];
            v2040 = (void *)((char *)v1989 + v2039);
            v2041 = &v1990[v2039];
            uint64_t v2042 = v2041[1];
            void *v2040 = *v2041;
            v2040[1] = v2042;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1989, 0, 1, (uint64_t)v1991);
          }
          uint64_t v2043 = v2645[25];
LABEL_534:
          v2398 = (void *)((char *)v12 + v2043);
          v2399 = &v2677[v2043];
          uint64_t v2400 = *(void *)&v2677[v2043 + 8];
          if (v2400)
          {
            void *v2398 = *(void *)v2399;
            v2398[1] = v2400;
            uint64_t v2401 = *((void *)v2399 + 3);
            v2398[2] = *((void *)v2399 + 2);
            v2398[3] = v2401;
            uint64_t v2402 = *((void *)v2399 + 5);
            v2398[4] = *((void *)v2399 + 4);
            v2398[5] = v2402;
            uint64_t v2403 = *((void *)v2399 + 7);
            v2398[6] = *((void *)v2399 + 6);
            v2398[7] = v2403;
            uint64_t v2404 = *((void *)v2399 + 9);
            v2398[8] = *((void *)v2399 + 8);
            v2398[9] = v2404;
            uint64_t v2405 = *((void *)v2399 + 11);
            v2398[10] = *((void *)v2399 + 10);
            v2398[11] = v2405;
            uint64_t v2618 = *((void *)v2399 + 13);
            v2398[12] = *((void *)v2399 + 12);
            v2398[13] = v2618;
            uint64_t v2406 = *((void *)v2399 + 15);
            v2398[14] = *((void *)v2399 + 14);
            v2398[15] = v2406;
            uint64_t v2663 = *((void *)v2399 + 17);
            v2398[16] = *((void *)v2399 + 16);
            v2398[17] = v2663;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_536:
            swift_bridgeObjectRetain();
          }
          else
          {
            memcpy(v2398, v2399, 0x90uLL);
          }
LABEL_537:
          uint64_t v14 = v2664;
          goto LABEL_538;
      }
    }
  }
  return v3;
}

uint64_t destroy for SearchAppEntity.Builder(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = type metadata accessor for SearchResult(0);
  uint64_t result = __swift_getEnumTagSinglePayload(v4, 1, v5);
  if (!result)
  {
    type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = (int *)type metadata accessor for EmailDocument(0);
        uint64_t v8 = v4 + v7[12];
        uint64_t v9 = type metadata accessor for Date();
        v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
        v10(v8, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v4 + v7[19]))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v11 = v4 + v7[21];
        v12 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v11, 1, (uint64_t)v12))
        {
          swift_bridgeObjectRelease();
          uint64_t v13 = v11 + v12[5];
          uint64_t v14 = type metadata accessor for RentalCarReservation(0);
          if (!__swift_getEnumTagSinglePayload(v13, 1, v14))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v15 = v13 + *(int *)(v14 + 140);
            if (!__swift_getEnumTagSinglePayload(v15, 1, v9)) {
              v10(v15, v9);
            }
            uint64_t v16 = v13 + *(int *)(v14 + 144);
            if (!__swift_getEnumTagSinglePayload(v16, 1, v9)) {
              v10(v16, v9);
            }
          }
          uint64_t v17 = v11 + v12[6];
          uint64_t v18 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v17, 1, v18))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v19 = v17 + *(int *)(v18 + 112);
            if (!__swift_getEnumTagSinglePayload(v19, 1, v9)) {
              v10(v19, v9);
            }
            uint64_t v20 = v17 + *(int *)(v18 + 116);
            if (!__swift_getEnumTagSinglePayload(v20, 1, v9)) {
              v10(v20, v9);
            }
          }
          uint64_t v21 = v11 + v12[7];
          uint64_t v22 = (int *)type metadata accessor for TicketedShow(0);
          uint64_t v285 = v12;
          if (!__swift_getEnumTagSinglePayload(v21, 1, (uint64_t)v22))
          {
            v23 = v10;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v24 = v21 + v22[29];
            uint64_t v25 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v24, 1, v25)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
            }
            swift_bridgeObjectRelease();
            uint64_t v26 = v21 + v22[31];
            v10 = v23;
            if (!__swift_getEnumTagSinglePayload(v26, 1, v9)) {
              v23(v26, v9);
            }
            uint64_t v27 = v21 + v22[32];
            v12 = v285;
            if (!__swift_getEnumTagSinglePayload(v27, 1, v9)) {
              v10(v27, v9);
            }
          }
          uint64_t v28 = v11 + v12[8];
          uint64_t v29 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v28, 1, v29))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v30 = v28 + *(int *)(v29 + 108);
            if (!__swift_getEnumTagSinglePayload(v30, 1, v9)) {
              v10(v30, v9);
            }
            uint64_t v31 = v28 + *(int *)(v29 + 112);
            if (!__swift_getEnumTagSinglePayload(v31, 1, v9)) {
              v10(v31, v9);
            }
          }
          uint64_t v32 = v11 + v12[9];
          v33 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v32, 1, (uint64_t)v33))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v34 = v32 + v33[24];
            if (!__swift_getEnumTagSinglePayload(v34, 1, v9)) {
              v10(v34, v9);
            }
            uint64_t v35 = v32 + v33[25];
            if (!__swift_getEnumTagSinglePayload(v35, 1, v9)) {
              v10(v35, v9);
            }
            uint64_t v36 = v32 + v33[26];
            uint64_t v37 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v36, 1, v37)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
            }
          }
          uint64_t v38 = v11 + v12[10];
          uint64_t v39 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v38, 1, (uint64_t)v39))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v40 = v38 + v39[22];
            if (!__swift_getEnumTagSinglePayload(v40, 1, v9)) {
              v10(v40, v9);
            }
            uint64_t v41 = v38 + v39[23];
            if (!__swift_getEnumTagSinglePayload(v41, 1, v9)) {
              v10(v41, v9);
            }
            uint64_t v42 = v38 + v39[25];
            uint64_t v43 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v42, 1, v43)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
            }
          }
          uint64_t v44 = v11 + v12[11];
          uint64_t v45 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v44, 1, (uint64_t)v45))
          {
            v283 = v10;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v46 = v44 + v45[13];
            uint64_t v47 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v46, 1, v47)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
            }
            uint64_t v282 = v11;
            uint64_t v48 = v44 + v45[14];
            if (!__swift_getEnumTagSinglePayload(v48, 1, v47)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v48, v47);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v49 = v44 + v45[18];
            uint64_t v50 = type metadata accessor for DateComponents();
            uint64_t v51 = *(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8);
            v51(v49, v50);
            v51(v44 + v45[19], v50);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v52 = v44 + v45[38];
            v10 = v283;
            if (!__swift_getEnumTagSinglePayload(v52, 1, v9)) {
              v283(v52, v9);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v11 = v282;
            v12 = v285;
          }
          uint64_t v53 = v11 + v12[12];
          uint64_t v54 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v53, 1, v54))
          {
            v55 = v10;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v56 = v53 + *(int *)(v54 + 56);
            uint64_t v57 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v56, 1, v57)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(v56, v57);
            }
            uint64_t v58 = v53 + *(int *)(v54 + 60);
            if (!__swift_getEnumTagSinglePayload(v58, 1, v57)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(v58, v57);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v10 = v55;
            v12 = v285;
          }
          uint64_t v59 = v11 + v12[13];
          uint64_t v60 = type metadata accessor for RestaurantReservation(0);
          if (!__swift_getEnumTagSinglePayload(v59, 1, v60))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v61 = v59 + *(int *)(v60 + 56);
            uint64_t v62 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v61, 1, v62)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v61, v62);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v63 = v4 + v7[22];
        uint64_t v64 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v63, 1, (uint64_t)v64))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v65 = v63 + v64[10];
          if (!__swift_getEnumTagSinglePayload(v65, 1, v9)) {
            v10(v65, v9);
          }
          uint64_t v66 = v63 + v64[11];
          if (!__swift_getEnumTagSinglePayload(v66, 1, v9)) {
            v10(v66, v9);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v67 = v63 + v64[15];
          if (!__swift_getEnumTagSinglePayload(v67, 1, v9)) {
            v10(v67, v9);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v68 = v4 + v7[23];
        uint64_t v69 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v68, 1, v69))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v70 = v68 + *(int *)(v69 + 44);
          if (!__swift_getEnumTagSinglePayload(v70, 1, v9)) {
            v10(v70, v9);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v71 = v68 + *(int *)(v69 + 56);
          if (!__swift_getEnumTagSinglePayload(v71, 1, v9)) {
            v10(v71, v9);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v72 = v4 + v7[24];
        uint64_t v73 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v72, 1, (uint64_t)v73))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v74 = v72 + v73[8];
          uint64_t v75 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v74, 1, v75)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v75 - 8) + 8))(v74, v75);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v76 = v72 + v73[12];
          if (!__swift_getEnumTagSinglePayload(v76, 1, v9)) {
            v10(v76, v9);
          }
          uint64_t v77 = v72 + v73[13];
          if (!__swift_getEnumTagSinglePayload(v77, 1, v9)) {
            v10(v77, v9);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v78 = v7[25];
        goto LABEL_253;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v79 = (int *)type metadata accessor for MobileSMSDocument(0);
        uint64_t v80 = v4 + v79[10];
        uint64_t v81 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v80, 1, v81)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v80, v81);
        }
        uint64_t v82 = v4 + v79[11];
        uint64_t v83 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v82, 1, v83)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v83 - 8) + 8))(v82, v83);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v4 + v79[17]))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v84 = v4 + v79[19];
        uint64_t v85 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v84, 1, (uint64_t)v85))
        {
          swift_bridgeObjectRelease();
          uint64_t v86 = v84 + v85[5];
          uint64_t v87 = type metadata accessor for RentalCarReservation(0);
          if (!__swift_getEnumTagSinglePayload(v86, 1, v87))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v88 = v86 + *(int *)(v87 + 140);
            if (!__swift_getEnumTagSinglePayload(v88, 1, v81)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v88, v81);
            }
            uint64_t v89 = v86 + *(int *)(v87 + 144);
            if (!__swift_getEnumTagSinglePayload(v89, 1, v81)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v89, v81);
            }
          }
          uint64_t v90 = v84 + v85[6];
          uint64_t v91 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v90, 1, v91))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v92 = v90 + *(int *)(v91 + 112);
            if (!__swift_getEnumTagSinglePayload(v92, 1, v81)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v92, v81);
            }
            uint64_t v93 = v90 + *(int *)(v91 + 116);
            if (!__swift_getEnumTagSinglePayload(v93, 1, v81)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v93, v81);
            }
          }
          uint64_t v94 = v84 + v85[7];
          uint64_t v95 = (int *)type metadata accessor for TicketedShow(0);
          if (!__swift_getEnumTagSinglePayload(v94, 1, (uint64_t)v95))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v96 = v94 + v95[29];
            if (!__swift_getEnumTagSinglePayload(v96, 1, v83)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v83 - 8) + 8))(v96, v83);
            }
            swift_bridgeObjectRelease();
            uint64_t v97 = v94 + v95[31];
            if (!__swift_getEnumTagSinglePayload(v97, 1, v81)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v97, v81);
            }
            uint64_t v98 = v94 + v95[32];
            if (!__swift_getEnumTagSinglePayload(v98, 1, v81)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v98, v81);
            }
          }
          uint64_t v99 = v84 + v85[8];
          uint64_t v100 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v99, 1, v100))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v101 = v99 + *(int *)(v100 + 108);
            if (!__swift_getEnumTagSinglePayload(v101, 1, v81)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v101, v81);
            }
            uint64_t v102 = v99 + *(int *)(v100 + 112);
            if (!__swift_getEnumTagSinglePayload(v102, 1, v81)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v102, v81);
            }
          }
          uint64_t v103 = v84 + v85[9];
          uint64_t v104 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v103, 1, (uint64_t)v104))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v105 = v103 + v104[24];
            if (!__swift_getEnumTagSinglePayload(v105, 1, v81)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v105, v81);
            }
            uint64_t v106 = v103 + v104[25];
            if (!__swift_getEnumTagSinglePayload(v106, 1, v81)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v106, v81);
            }
            uint64_t v107 = v103 + v104[26];
            if (!__swift_getEnumTagSinglePayload(v107, 1, v83)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v83 - 8) + 8))(v107, v83);
            }
          }
          uint64_t v108 = v84 + v85[10];
          v109 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v108, 1, (uint64_t)v109))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v110 = v108 + v109[22];
            if (!__swift_getEnumTagSinglePayload(v110, 1, v81)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v110, v81);
            }
            uint64_t v111 = v108 + v109[23];
            if (!__swift_getEnumTagSinglePayload(v111, 1, v81)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v111, v81);
            }
            uint64_t v112 = v108 + v109[25];
            if (!__swift_getEnumTagSinglePayload(v112, 1, v83)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v83 - 8) + 8))(v112, v83);
            }
          }
          uint64_t v113 = v84 + v85[11];
          uint64_t v114 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v113, 1, (uint64_t)v114))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v115 = v113 + v114[13];
            if (!__swift_getEnumTagSinglePayload(v115, 1, v83)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v83 - 8) + 8))(v115, v83);
            }
            uint64_t v284 = v84;
            uint64_t v116 = v113 + v114[14];
            if (!__swift_getEnumTagSinglePayload(v116, 1, v83)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v83 - 8) + 8))(v116, v83);
            }
            uint64_t v286 = v83;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v117 = v113 + v114[18];
            uint64_t v118 = type metadata accessor for DateComponents();
            uint64_t v119 = *(void (**)(uint64_t, uint64_t))(*(void *)(v118 - 8) + 8);
            v119(v117, v118);
            v119(v113 + v114[19], v118);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v120 = v113 + v114[38];
            if (!__swift_getEnumTagSinglePayload(v120, 1, v81)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v120, v81);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v84 = v284;
            uint64_t v83 = v286;
          }
          uint64_t v121 = v84 + v85[12];
          uint64_t v122 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v121, 1, v122))
          {
            uint64_t v288 = v85;
            uint64_t v123 = v83;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v124 = v121 + *(int *)(v122 + 56);
            uint64_t v125 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v124, 1, v125)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v125 - 8) + 8))(v124, v125);
            }
            uint64_t v126 = v121 + *(int *)(v122 + 60);
            if (!__swift_getEnumTagSinglePayload(v126, 1, v125)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v125 - 8) + 8))(v126, v125);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v83 = v123;
            uint64_t v85 = v288;
          }
          uint64_t v127 = v84 + v85[13];
          uint64_t v128 = type metadata accessor for RestaurantReservation(0);
          if (!__swift_getEnumTagSinglePayload(v127, 1, v128))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v129 = v127 + *(int *)(v128 + 56);
            uint64_t v130 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v129, 1, v130)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v130 - 8) + 8))(v129, v130);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v131 = v4 + v79[20];
        v132 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v131, 1, (uint64_t)v132))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v133 = v131 + v132[10];
          if (!__swift_getEnumTagSinglePayload(v133, 1, v81)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v133, v81);
          }
          uint64_t v134 = v131 + v132[11];
          if (!__swift_getEnumTagSinglePayload(v134, 1, v81)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v134, v81);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v135 = v131 + v132[15];
          if (!__swift_getEnumTagSinglePayload(v135, 1, v81)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v135, v81);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v136 = v4 + v79[21];
        uint64_t v137 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v136, 1, v137))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v138 = v136 + *(int *)(v137 + 44);
          if (!__swift_getEnumTagSinglePayload(v138, 1, v81)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v138, v81);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v139 = v136 + *(int *)(v137 + 56);
          if (!__swift_getEnumTagSinglePayload(v139, 1, v81)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v139, v81);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v140 = v4 + v79[22];
        v141 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v140, 1, (uint64_t)v141))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v142 = v140 + v141[8];
          if (!__swift_getEnumTagSinglePayload(v142, 1, v83)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v83 - 8) + 8))(v142, v83);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v143 = v140 + v141[12];
          if (!__swift_getEnumTagSinglePayload(v143, 1, v81)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v143, v81);
          }
          uint64_t v144 = v140 + v141[13];
          if (!__swift_getEnumTagSinglePayload(v144, 1, v81)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v144, v81);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v78 = v79[23];
        goto LABEL_253;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v145 = (int *)type metadata accessor for CalendarEvent(0);
        uint64_t v146 = v4 + v145[7];
        uint64_t v147 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v146, 1, v147)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v146, v147);
        }
        uint64_t v148 = v4 + v145[8];
        if (!__swift_getEnumTagSinglePayload(v148, 1, v147)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v148, v147);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!*(void *)(v4 + v145[13])) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v149 = (int *)type metadata accessor for Photo(0);
        uint64_t v150 = v4 + v149[11];
        uint64_t v151 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v150, 1, v151)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v150, v151);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v152 = v4 + v149[17];
        uint64_t v153 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v152, 1, (uint64_t)v153))
        {
          swift_bridgeObjectRelease();
          uint64_t v154 = v152 + v153[5];
          uint64_t v155 = type metadata accessor for RentalCarReservation(0);
          if (!__swift_getEnumTagSinglePayload(v154, 1, v155))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v156 = v154 + *(int *)(v155 + 140);
            if (!__swift_getEnumTagSinglePayload(v156, 1, v151)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v156, v151);
            }
            uint64_t v157 = v154 + *(int *)(v155 + 144);
            if (!__swift_getEnumTagSinglePayload(v157, 1, v151)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v157, v151);
            }
          }
          uint64_t v158 = v152 + v153[6];
          uint64_t v159 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v158, 1, v159))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v160 = v158 + *(int *)(v159 + 112);
            if (!__swift_getEnumTagSinglePayload(v160, 1, v151)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v160, v151);
            }
            uint64_t v161 = v158 + *(int *)(v159 + 116);
            if (!__swift_getEnumTagSinglePayload(v161, 1, v151)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v161, v151);
            }
          }
          uint64_t v162 = v152 + v153[7];
          uint64_t v163 = (int *)type metadata accessor for TicketedShow(0);
          if (!__swift_getEnumTagSinglePayload(v162, 1, (uint64_t)v163))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v164 = v162 + v163[29];
            uint64_t v165 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v164, 1, v165)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v165 - 8) + 8))(v164, v165);
            }
            swift_bridgeObjectRelease();
            uint64_t v166 = v162 + v163[31];
            if (!__swift_getEnumTagSinglePayload(v166, 1, v151)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v166, v151);
            }
            uint64_t v167 = v162 + v163[32];
            if (!__swift_getEnumTagSinglePayload(v167, 1, v151)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v167, v151);
            }
          }
          uint64_t v168 = v152 + v153[8];
          uint64_t v169 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v168, 1, v169))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v170 = v168 + *(int *)(v169 + 108);
            if (!__swift_getEnumTagSinglePayload(v170, 1, v151)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v170, v151);
            }
            uint64_t v171 = v168 + *(int *)(v169 + 112);
            if (!__swift_getEnumTagSinglePayload(v171, 1, v151)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v171, v151);
            }
          }
          uint64_t v172 = v152 + v153[9];
          uint64_t v173 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v172, 1, (uint64_t)v173))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v174 = v172 + v173[24];
            if (!__swift_getEnumTagSinglePayload(v174, 1, v151)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v174, v151);
            }
            uint64_t v175 = v172 + v173[25];
            if (!__swift_getEnumTagSinglePayload(v175, 1, v151)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v175, v151);
            }
            uint64_t v176 = v172 + v173[26];
            uint64_t v177 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v176, 1, v177)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v177 - 8) + 8))(v176, v177);
            }
          }
          uint64_t v178 = v152 + v153[10];
          uint64_t v179 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v178, 1, (uint64_t)v179))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v180 = v178 + v179[22];
            if (!__swift_getEnumTagSinglePayload(v180, 1, v151)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v180, v151);
            }
            uint64_t v181 = v178 + v179[23];
            if (!__swift_getEnumTagSinglePayload(v181, 1, v151)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v181, v151);
            }
            uint64_t v182 = v178 + v179[25];
            uint64_t v183 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v182, 1, v183)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v183 - 8) + 8))(v182, v183);
            }
          }
          uint64_t v184 = v152 + v153[11];
          uint64_t v185 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v184, 1, (uint64_t)v185))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v186 = v184 + v185[13];
            uint64_t v187 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v186, 1, v187)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v187 - 8) + 8))(v186, v187);
            }
            uint64_t v287 = v153;
            uint64_t v188 = v184 + v185[14];
            if (!__swift_getEnumTagSinglePayload(v188, 1, v187)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v187 - 8) + 8))(v188, v187);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v189 = v184 + v185[18];
            uint64_t v190 = type metadata accessor for DateComponents();
            uint64_t v191 = *(void (**)(uint64_t, uint64_t))(*(void *)(v190 - 8) + 8);
            v191(v189, v190);
            v191(v184 + v185[19], v190);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v192 = v184 + v185[38];
            if (!__swift_getEnumTagSinglePayload(v192, 1, v151)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v192, v151);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v153 = v287;
          }
          uint64_t v193 = v152 + v153[12];
          uint64_t v194 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v193, 1, v194))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v195 = v193 + *(int *)(v194 + 56);
            uint64_t v196 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v195, 1, v196)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v196 - 8) + 8))(v195, v196);
            }
            uint64_t v197 = v193 + *(int *)(v194 + 60);
            if (!__swift_getEnumTagSinglePayload(v197, 1, v196)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v196 - 8) + 8))(v197, v196);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v198 = v152 + v153[13];
          uint64_t v199 = type metadata accessor for RestaurantReservation(0);
          if (!__swift_getEnumTagSinglePayload(v198, 1, v199))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v200 = v198 + *(int *)(v199 + 56);
            uint64_t v201 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v200, 1, v201)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v201 - 8) + 8))(v200, v201);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v202 = v4 + v149[18];
        uint64_t v203 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v202, 1, (uint64_t)v203))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v204 = v202 + v203[10];
          if (!__swift_getEnumTagSinglePayload(v204, 1, v151)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v204, v151);
          }
          uint64_t v205 = v202 + v203[11];
          if (!__swift_getEnumTagSinglePayload(v205, 1, v151)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v205, v151);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v206 = v202 + v203[15];
          if (!__swift_getEnumTagSinglePayload(v206, 1, v151)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v206, v151);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v207 = v4 + v149[19];
        uint64_t v208 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v207, 1, v208))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v209 = v207 + *(int *)(v208 + 44);
          if (!__swift_getEnumTagSinglePayload(v209, 1, v151)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v209, v151);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v210 = v207 + *(int *)(v208 + 56);
          if (!__swift_getEnumTagSinglePayload(v210, 1, v151)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v210, v151);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v211 = v4 + v149[20];
        uint64_t v212 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v211, 1, (uint64_t)v212))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v213 = v211 + v212[8];
          uint64_t v214 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v213, 1, v214)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v214 - 8) + 8))(v213, v214);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v215 = v211 + v212[12];
          if (!__swift_getEnumTagSinglePayload(v215, 1, v151)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v215, v151);
          }
          uint64_t v216 = v211 + v212[13];
          if (!__swift_getEnumTagSinglePayload(v216, 1, v151)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v151 - 8) + 8))(v216, v151);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v78 = v149[21];
LABEL_253:
        if (!*(void *)(v4 + v78 + 8)) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v217 = (int *)type metadata accessor for NoteDocument(0);
        uint64_t v218 = v4 + v217[8];
        uint64_t v219 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v218, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v218, v219);
        }
        goto LABEL_274;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v220 = (int *)type metadata accessor for Reminder(0);
        uint64_t v221 = v4 + v220[7];
        uint64_t v222 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v221, 1, v222)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v222 - 8) + 8))(v221, v222);
        }
        uint64_t v223 = v4 + v220[8];
        if (!__swift_getEnumTagSinglePayload(v223, 1, v222)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v222 - 8) + 8))(v223, v222);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v224 = v220[12];
        goto LABEL_324;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v225 = type metadata accessor for PhoneHistory(0);
        uint64_t v226 = v4 + *(int *)(v225 + 40);
        uint64_t v227 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v226, 1, v227)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v227 - 8) + 8))(v226, v227);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v224 = *(int *)(v225 + 52);
        goto LABEL_324;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v228 = (int *)type metadata accessor for VoicemailTranscript(0);
        uint64_t v229 = v228[7];
        goto LABEL_268;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v224 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
        goto LABEL_324;
      case 9u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v228 = (int *)type metadata accessor for VoiceMemo(0);
        uint64_t v229 = v228[6];
LABEL_268:
        uint64_t v230 = v4 + v229;
        uint64_t v231 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v230, 1, v231)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v231 - 8) + 8))(v230, v231);
        }
        uint64_t v224 = v228[8];
        goto LABEL_324;
      case 0xAu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v217 = (int *)type metadata accessor for Safari(0);
        uint64_t v232 = v4 + v217[6];
        uint64_t v219 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v232, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v232, v219);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_274:
        uint64_t v233 = v217[9];
        goto LABEL_312;
      case 0xBu:
        swift_bridgeObjectRelease();

        break;
      case 0xCu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v234 = v4 + *(int *)(type metadata accessor for WalletTransaction(0) + 28);
        uint64_t v235 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v234, 1, v235)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v235 - 8) + 8))(v234, v235);
        }
        goto LABEL_278;
      case 0xDu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v236 = v4 + *(int *)(type metadata accessor for WalletPass(0) + 28);
        uint64_t v237 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v236, 1, v237)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v237 - 8) + 8))(v236, v237);
        }
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 0xEu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 0xFu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v238 = (int *)type metadata accessor for FlightReservation(0);
        uint64_t v239 = v4 + v238[13];
        uint64_t v240 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v239, 1, v240)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v240 - 8) + 8))(v239, v240);
        }
        uint64_t v241 = v4 + v238[14];
        if (!__swift_getEnumTagSinglePayload(v241, 1, v240)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v240 - 8) + 8))(v241, v240);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v242 = v4 + v238[18];
        uint64_t v243 = type metadata accessor for DateComponents();
        uint64_t v244 = *(void (**)(uint64_t, uint64_t))(*(void *)(v243 - 8) + 8);
        v244(v242, v243);
        v244(v4 + v238[19], v243);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v245 = v4 + v238[38];
        uint64_t v246 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v245, 1, v246)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v246 - 8) + 8))(v245, v246);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v247 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
        goto LABEL_332;
      case 0x10u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v248 = type metadata accessor for HotelReservation(0);
        uint64_t v249 = v4 + *(int *)(v248 + 56);
        uint64_t v250 = type metadata accessor for DateComponents();
        if (!__swift_getEnumTagSinglePayload(v249, 1, v250)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v250 - 8) + 8))(v249, v250);
        }
        uint64_t v251 = v4 + *(int *)(v248 + 60);
        if (!__swift_getEnumTagSinglePayload(v251, 1, v250)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v250 - 8) + 8))(v251, v250);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 0x11u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v252 = v4 + *(int *)(type metadata accessor for RestaurantReservation(0) + 56);
        uint64_t v253 = type metadata accessor for DateComponents();
        if (!__swift_getEnumTagSinglePayload(v252, 1, v253)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v253 - 8) + 8))(v252, v253);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 0x12u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v254 = type metadata accessor for RentalCarReservation(0);
        uint64_t v255 = v4 + *(int *)(v254 + 140);
        uint64_t v219 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v255, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v255, v219);
        }
        uint64_t v233 = *(int *)(v254 + 144);
        goto LABEL_312;
      case 0x13u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v256 = type metadata accessor for TicketedTransportation(0);
        uint64_t v257 = v4 + *(int *)(v256 + 112);
        uint64_t v219 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v257, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v257, v219);
        }
        uint64_t v233 = *(int *)(v256 + 116);
        goto LABEL_312;
      case 0x14u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v258 = (int *)type metadata accessor for TicketedShow(0);
        uint64_t v259 = v4 + v258[29];
        uint64_t v260 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v259, 1, v260)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v260 - 8) + 8))(v259, v260);
        }
        swift_bridgeObjectRelease();
        uint64_t v261 = v4 + v258[31];
        uint64_t v262 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v261, 1, v262)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v262 - 8) + 8))(v261, v262);
        }
        uint64_t v263 = v4 + v258[32];
        goto LABEL_325;
      case 0x15u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v264 = type metadata accessor for Appointment(0);
        uint64_t v265 = v4 + *(int *)(v264 + 108);
        uint64_t v219 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v265, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v265, v219);
        }
        uint64_t v233 = *(int *)(v264 + 112);
LABEL_312:
        uint64_t v266 = v4 + v233;
        if (!__swift_getEnumTagSinglePayload(v4 + v233, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v266, v219);
        }
        break;
      case 0x16u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v267 = (int *)type metadata accessor for Party(0);
        uint64_t v268 = v4 + v267[24];
        uint64_t v269 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v268, 1, v269)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v269 - 8) + 8))(v268, v269);
        }
        uint64_t v270 = v4 + v267[25];
        if (!__swift_getEnumTagSinglePayload(v270, 1, v269)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v269 - 8) + 8))(v270, v269);
        }
        uint64_t v224 = v267[26];
        goto LABEL_324;
      case 0x17u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v271 = (int *)type metadata accessor for Trip(0);
        uint64_t v272 = v4 + v271[22];
        uint64_t v273 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v272, 1, v273)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v273 - 8) + 8))(v272, v273);
        }
        uint64_t v274 = v4 + v271[23];
        if (!__swift_getEnumTagSinglePayload(v274, 1, v273)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v273 - 8) + 8))(v274, v273);
        }
        uint64_t v224 = v271[25];
LABEL_324:
        uint64_t v263 = v4 + v224;
        uint64_t v262 = type metadata accessor for URL();
LABEL_325:
        if (!__swift_getEnumTagSinglePayload(v263, 1, v262)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v262 - 8) + 8))(v263, v262);
        }
        break;
      case 0x18u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v275 = type metadata accessor for GlobalItem();
        uint64_t v276 = v4 + *(int *)(v275 + 28);
        uint64_t v277 = type metadata accessor for GlobalDialog();
        if (!__swift_getEnumTagSinglePayload(v276, 1, v277)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v277 - 8) + 8))(v276, v277);
        }
        uint64_t v278 = (uint64_t *)(v4 + *(int *)(v275 + 32));
        unint64_t v279 = v278[1];
        if (v279 >> 60 != 15) {
          outlined consume of Data._Representation(*v278, v279);
        }
        uint64_t v247 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_332:
        __swift_instantiateConcreteTypeFromMangledName(v247);
        goto LABEL_335;
      case 0x19u:
LABEL_278:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 0x1Au:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v280 = v4 + *(int *)(type metadata accessor for Answer(0) + 36);
        uint64_t v281 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v280, 1, v281)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v281 - 8) + 8))(v280, v281);
        }
LABEL_335:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }

    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for SearchAppEntity.Builder(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v9 = (void *)a2[8];
  uint64_t v8 = a2[9];
  a1[8] = v9;
  a1[9] = v8;
  uint64_t v10 = *(int *)(a3 + 40);
  uint64_t v11 = (void *)((char *)a1 + v10);
  v12 = (void *)((char *)a2 + v10);
  a1[10] = a2[10];
  uint64_t v13 = type metadata accessor for SearchResult(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v14 = v9;
  swift_bridgeObjectRetain();
  v2680 = (char *)v12;
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v2666 = v13;
        uint64_t v37 = v12[1];
        *uint64_t v11 = *(void *)v2680;
        v11[1] = v37;
        uint64_t v38 = *((void *)v2680 + 3);
        v11[2] = *((void *)v2680 + 2);
        v11[3] = v38;
        uint64_t v39 = *((void *)v2680 + 5);
        v11[4] = *((void *)v2680 + 4);
        v11[5] = v39;
        uint64_t v40 = *((void *)v2680 + 7);
        v11[6] = *((void *)v2680 + 6);
        v11[7] = v40;
        uint64_t v41 = *((void *)v2680 + 9);
        v11[8] = *((void *)v2680 + 8);
        v11[9] = v41;
        uint64_t v42 = type metadata accessor for MobileSMSDocument(0);
        uint64_t v43 = *(int *)(v42 + 40);
        uint64_t v2636 = (char *)v11 + v43;
        uint64_t v2651 = (int *)v42;
        uint64_t v44 = &v2680[v43];
        uint64_t v45 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
        {
          uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2636, v44, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v2636, v44, v45);
          __swift_storeEnumTagSinglePayload((uint64_t)v2636, 0, 1, v45);
        }
        uint64_t v316 = v2651[11];
        uint64_t v317 = (char *)v11 + v316;
        v318 = &v2680[v316];
        uint64_t v319 = type metadata accessor for URL();
        uint64_t v2632 = v319;
        uint64_t v2645 = v45;
        if (__swift_getEnumTagSinglePayload((uint64_t)v318, 1, v319))
        {
          uint64_t v320 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v317, v318, *(void *)(*(void *)(v320 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 16))(v317, v318, v319);
          __swift_storeEnumTagSinglePayload((uint64_t)v317, 0, 1, v319);
        }
        *(void *)((char *)v11 + v2651[12]) = *(void *)&v2680[v2651[12]];
        uint64_t v471 = v2651[13];
        uint64_t v472 = (void *)((char *)v11 + v471);
        uint64_t v473 = &v2680[v471];
        uint64_t v474 = *((void *)v473 + 1);
        *uint64_t v472 = *(void *)v473;
        v472[1] = v474;
        uint64_t v475 = v2651[14];
        v476 = (void *)((char *)v11 + v475);
        uint64_t v477 = &v2680[v475];
        uint64_t v478 = *((void *)v477 + 1);
        void *v476 = *(void *)v477;
        v476[1] = v478;
        *(void *)((char *)v11 + v2651[15]) = *(void *)&v2680[v2651[15]];
        *(void *)((char *)v11 + v2651[16]) = *(void *)&v2680[v2651[16]];
        uint64_t v479 = v2651[17];
        v480 = (void *)((char *)v11 + v479);
        uint64_t v481 = &v2680[v479];
        uint64_t v482 = *(void *)&v2680[v479];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v482)
        {
          uint64_t v483 = *((void *)v481 + 1);
          uint64_t v484 = *((void *)v481 + 2);
          void *v480 = v482;
          v480[1] = v483;
          uint64_t v485 = *((void *)v481 + 3);
          uint64_t v486 = *((void *)v481 + 4);
          v480[2] = v484;
          v480[3] = v485;
          v480[4] = v486;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v638 = *((_OWORD *)v481 + 1);
          *(_OWORD *)v480 = *(_OWORD *)v481;
          *((_OWORD *)v480 + 1) = v638;
          v480[4] = *((void *)v481 + 4);
        }
        uint64_t v639 = v2651[18];
        uint64_t v640 = (void *)((char *)v11 + v639);
        long long v641 = &v2680[v639];
        uint64_t v642 = *((void *)v641 + 1);
        *uint64_t v640 = *(void *)v641;
        v640[1] = v642;
        uint64_t v643 = v2651[19];
        v644 = (void *)((char *)v11 + v643);
        uint64_t v645 = &v2680[v643];
        uint64_t v646 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v645, 1, (uint64_t)v646))
        {
          uint64_t v647 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v644, v645, *(void *)(*(void *)(v647 - 8) + 64));
        }
        else
        {
          uint64_t v684 = *((void *)v645 + 1);
          void *v644 = *(void *)v645;
          v644[1] = v684;
          uint64_t v685 = v646[5];
          uint64_t v686 = (void *)((char *)v644 + v685);
          uint64_t v687 = &v645[v685];
          uint64_t v688 = type metadata accessor for RentalCarReservation(0);
          swift_bridgeObjectRetain();
          v2617 = v646;
          v2574 = v645;
          if (__swift_getEnumTagSinglePayload((uint64_t)v687, 1, v688))
          {
            uint64_t v689 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v686, v687, *(void *)(*(void *)(v689 - 8) + 64));
          }
          else
          {
            uint64_t v745 = *((void *)v687 + 1);
            *uint64_t v686 = *(void *)v687;
            v686[1] = v745;
            uint64_t v746 = *((void *)v687 + 3);
            v686[2] = *((void *)v687 + 2);
            v686[3] = v746;
            uint64_t v747 = *((void *)v687 + 5);
            v686[4] = *((void *)v687 + 4);
            v686[5] = v747;
            uint64_t v748 = *((void *)v687 + 7);
            v686[6] = *((void *)v687 + 6);
            v686[7] = v748;
            uint64_t v749 = *((void *)v687 + 9);
            v686[8] = *((void *)v687 + 8);
            v686[9] = v749;
            uint64_t v750 = *((void *)v687 + 11);
            v686[10] = *((void *)v687 + 10);
            v686[11] = v750;
            uint64_t v751 = *((void *)v687 + 13);
            v686[12] = *((void *)v687 + 12);
            v686[13] = v751;
            uint64_t v752 = *((void *)v687 + 15);
            v686[14] = *((void *)v687 + 14);
            v686[15] = v752;
            *((unsigned char *)v686 + 128) = v687[128];
            *(_WORD *)((char *)v686 + 129) = *(_WORD *)(v687 + 129);
            uint64_t v753 = *((void *)v687 + 18);
            v686[17] = *((void *)v687 + 17);
            v686[18] = v753;
            uint64_t v754 = *((void *)v687 + 20);
            v686[19] = *((void *)v687 + 19);
            v686[20] = v754;
            uint64_t v755 = *((void *)v687 + 22);
            v686[21] = *((void *)v687 + 21);
            v686[22] = v755;
            uint64_t v2413 = *((void *)v687 + 24);
            v686[23] = *((void *)v687 + 23);
            v686[24] = v2413;
            uint64_t v756 = *((void *)v687 + 26);
            v686[25] = *((void *)v687 + 25);
            v686[26] = v756;
            uint64_t v757 = *((void *)v687 + 28);
            v686[27] = *((void *)v687 + 27);
            v686[28] = v757;
            uint64_t v758 = *((void *)v687 + 30);
            v686[29] = *((void *)v687 + 29);
            v686[30] = v758;
            uint64_t v2542 = *((void *)v687 + 32);
            v686[31] = *((void *)v687 + 31);
            v686[32] = v2542;
            uint64_t v2506 = *((void *)v687 + 34);
            v686[33] = *((void *)v687 + 33);
            v686[34] = v2506;
            uint64_t v759 = *((void *)v687 + 36);
            v686[35] = *((void *)v687 + 35);
            v686[36] = v759;
            uint64_t v760 = *((void *)v687 + 38);
            v686[37] = *((void *)v687 + 37);
            v686[38] = v760;
            uint64_t v761 = *((void *)v687 + 40);
            v686[39] = *((void *)v687 + 39);
            v686[40] = v761;
            uint64_t v762 = *((void *)v687 + 42);
            v686[41] = *((void *)v687 + 41);
            v686[42] = v762;
            uint64_t v763 = *((void *)v687 + 44);
            v686[43] = *((void *)v687 + 43);
            v686[44] = v763;
            uint64_t v764 = *((void *)v687 + 46);
            v686[45] = *((void *)v687 + 45);
            v686[46] = v764;
            uint64_t v765 = *((void *)v687 + 47);
            *((unsigned char *)v686 + 384) = v687[384];
            v686[47] = v765;
            uint64_t v766 = *((void *)v687 + 50);
            v686[49] = *((void *)v687 + 49);
            v686[50] = v766;
            uint64_t v767 = *((void *)v687 + 52);
            v686[51] = *((void *)v687 + 51);
            v686[52] = v767;
            uint64_t v768 = *(int *)(v688 + 140);
            v2595 = (char *)v686 + v768;
            uint64_t v769 = &v687[v768];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v769, 1, v2645))
            {
              uint64_t v770 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2595, v769, *(void *)(*(void *)(v770 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v2595, v769, v2645);
              __swift_storeEnumTagSinglePayload((uint64_t)v2595, 0, 1, v2645);
            }
            uint64_t v779 = *(int *)(v688 + 144);
            v780 = (char *)v686 + v779;
            uint64_t v781 = &v687[v779];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v687[v779], 1, v2645))
            {
              uint64_t v782 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v780, v781, *(void *)(*(void *)(v782 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v780, v781, v2645);
              __swift_storeEnumTagSinglePayload((uint64_t)v780, 0, 1, v2645);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v686, 0, 1, v688);
            uint64_t v646 = v2617;
          }
          uint64_t v836 = v646[6];
          v837 = (void *)((char *)v644 + v836);
          uint64_t v838 = &v645[v836];
          uint64_t v839 = type metadata accessor for TicketedTransportation(0);
          v2596 = v644;
          if (__swift_getEnumTagSinglePayload((uint64_t)v838, 1, v839))
          {
            uint64_t v840 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v837, v838, *(void *)(*(void *)(v840 - 8) + 64));
          }
          else
          {
            uint64_t v841 = *((void *)v838 + 1);
            void *v837 = *(void *)v838;
            v837[1] = v841;
            uint64_t v842 = *((void *)v838 + 3);
            v837[2] = *((void *)v838 + 2);
            v837[3] = v842;
            uint64_t v843 = *((void *)v838 + 5);
            v837[4] = *((void *)v838 + 4);
            v837[5] = v843;
            uint64_t v844 = *((void *)v838 + 7);
            v837[6] = *((void *)v838 + 6);
            v837[7] = v844;
            uint64_t v845 = *((void *)v838 + 9);
            v837[8] = *((void *)v838 + 8);
            v837[9] = v845;
            uint64_t v846 = *((void *)v838 + 11);
            v837[10] = *((void *)v838 + 10);
            v837[11] = v846;
            uint64_t v847 = *((void *)v838 + 13);
            v837[12] = *((void *)v838 + 12);
            v837[13] = v847;
            uint64_t v848 = *((void *)v838 + 15);
            v837[14] = *((void *)v838 + 14);
            v837[15] = v848;
            *((unsigned char *)v837 + 128) = v838[128];
            *(_WORD *)((char *)v837 + 129) = *(_WORD *)(v838 + 129);
            uint64_t v849 = *((void *)v838 + 18);
            v837[17] = *((void *)v838 + 17);
            v837[18] = v849;
            uint64_t v850 = *((void *)v838 + 20);
            v837[19] = *((void *)v838 + 19);
            v837[20] = v850;
            uint64_t v851 = *((void *)v838 + 22);
            v837[21] = *((void *)v838 + 21);
            v837[22] = v851;
            uint64_t v852 = *((void *)v838 + 24);
            v837[23] = *((void *)v838 + 23);
            v837[24] = v852;
            v2485 = (void *)*((void *)v838 + 26);
            v837[25] = *((void *)v838 + 25);
            v837[26] = v2485;
            uint64_t v853 = *((void *)v838 + 28);
            v837[27] = *((void *)v838 + 27);
            v837[28] = v853;
            uint64_t v854 = *((void *)v838 + 30);
            v837[29] = *((void *)v838 + 29);
            v837[30] = v854;
            uint64_t v855 = *((void *)v838 + 32);
            v837[31] = *((void *)v838 + 31);
            v837[32] = v855;
            uint64_t v856 = *((void *)v838 + 34);
            v837[33] = *((void *)v838 + 33);
            v837[34] = v856;
            uint64_t v857 = *((void *)v838 + 36);
            uint64_t v858 = *((void *)v838 + 35);
            *((unsigned char *)v837 + 296) = v838[296];
            v837[35] = v858;
            v837[36] = v857;
            uint64_t v859 = *(int *)(v839 + 112);
            v2507 = (char *)v837 + v859;
            uint64_t v2544 = v839;
            uint64_t v860 = &v838[v859];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v860, 1, v2645))
            {
              uint64_t v861 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2507, v860, *(void *)(*(void *)(v861 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v2507, v860, v2645);
              __swift_storeEnumTagSinglePayload((uint64_t)v2507, 0, 1, v2645);
            }
            uint64_t v870 = *(int *)(v839 + 116);
            v871 = (char *)v837 + v870;
            uint64_t v872 = &v838[v870];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v838[v870], 1, v2645))
            {
              uint64_t v873 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v871, v872, *(void *)(*(void *)(v873 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v871, v872, v2645);
              __swift_storeEnumTagSinglePayload((uint64_t)v871, 0, 1, v2645);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v837, 0, 1, v2544);
            uint64_t v646 = v2617;
          }
          uint64_t v929 = v646[7];
          uint64_t v930 = (void *)((char *)v644 + v929);
          uint64_t v931 = &v645[v929];
          uint64_t v932 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v931, 1, (uint64_t)v932))
          {
            uint64_t v933 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v930, v931, *(void *)(*(void *)(v933 - 8) + 64));
          }
          else
          {
            uint64_t v934 = *((void *)v931 + 1);
            *uint64_t v930 = *(void *)v931;
            v930[1] = v934;
            uint64_t v935 = *((void *)v931 + 3);
            v930[2] = *((void *)v931 + 2);
            v930[3] = v935;
            uint64_t v936 = *((void *)v931 + 5);
            v930[4] = *((void *)v931 + 4);
            v930[5] = v936;
            uint64_t v937 = *((void *)v931 + 7);
            v930[6] = *((void *)v931 + 6);
            v930[7] = v937;
            uint64_t v938 = *((void *)v931 + 9);
            v930[8] = *((void *)v931 + 8);
            v930[9] = v938;
            uint64_t v939 = *((void *)v931 + 11);
            v930[10] = *((void *)v931 + 10);
            v930[11] = v939;
            uint64_t v940 = *((void *)v931 + 13);
            v930[12] = *((void *)v931 + 12);
            v930[13] = v940;
            uint64_t v941 = *((void *)v931 + 15);
            v930[14] = *((void *)v931 + 14);
            v930[15] = v941;
            *((unsigned char *)v930 + 128) = v931[128];
            *(_WORD *)((char *)v930 + 129) = *(_WORD *)(v931 + 129);
            uint64_t v942 = *((void *)v931 + 18);
            v930[17] = *((void *)v931 + 17);
            v930[18] = v942;
            uint64_t v943 = *((void *)v931 + 20);
            v930[19] = *((void *)v931 + 19);
            v930[20] = v943;
            uint64_t v944 = *((void *)v931 + 22);
            v930[21] = *((void *)v931 + 21);
            v930[22] = v944;
            uint64_t v945 = *((void *)v931 + 24);
            v930[23] = *((void *)v931 + 23);
            v930[24] = v945;
            uint64_t v946 = *((void *)v931 + 26);
            v930[25] = *((void *)v931 + 25);
            v930[26] = v946;
            uint64_t v947 = *((void *)v931 + 28);
            v930[27] = *((void *)v931 + 27);
            v930[28] = v947;
            v2487 = (void *)*((void *)v931 + 30);
            v930[29] = *((void *)v931 + 29);
            v930[30] = v2487;
            uint64_t v948 = *((void *)v931 + 32);
            v930[31] = *((void *)v931 + 31);
            v930[32] = v948;
            uint64_t v949 = *((void *)v931 + 34);
            v930[33] = *((void *)v931 + 33);
            v930[34] = v949;
            uint64_t v950 = *((void *)v931 + 36);
            uint64_t v951 = *((void *)v931 + 35);
            *((unsigned char *)v930 + 296) = v931[296];
            v930[35] = v951;
            v930[36] = v950;
            uint64_t v952 = *((void *)v931 + 39);
            v930[38] = *((void *)v931 + 38);
            v930[39] = v952;
            uint64_t v953 = v932[29];
            v2510 = (char *)v930 + v953;
            uint64_t v2546 = (uint64_t)v932;
            uint64_t v954 = &v931[v953];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v954, 1, v2632))
            {
              uint64_t v955 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2510, v954, *(void *)(*(void *)(v955 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2632 - 8) + 16))(v2510, v954, v2632);
              __swift_storeEnumTagSinglePayload((uint64_t)v2510, 0, 1, v2632);
            }
            uint64_t v972 = v932[30];
            v973 = (void *)((char *)v930 + v972);
            uint64_t v974 = &v931[v972];
            uint64_t v975 = *((void *)v974 + 1);
            void *v973 = *(void *)v974;
            v973[1] = v975;
            uint64_t v976 = v932[31];
            v977 = (char *)v930 + v976;
            uint64_t v978 = &v931[v976];
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v978, 1, v2645))
            {
              uint64_t v979 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v977, v978, *(void *)(*(void *)(v979 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v977, v978, v2645);
              __swift_storeEnumTagSinglePayload((uint64_t)v977, 0, 1, v2645);
            }
            uint64_t v988 = *(int *)(v2546 + 128);
            v989 = (char *)v930 + v988;
            uint64_t v990 = &v931[v988];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v931[v988], 1, v2645))
            {
              uint64_t v991 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v989, v990, *(void *)(*(void *)(v991 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v989, v990, v2645);
              __swift_storeEnumTagSinglePayload((uint64_t)v989, 0, 1, v2645);
            }
            uint64_t v645 = v2574;
            __swift_storeEnumTagSinglePayload((uint64_t)v930, 0, 1, v2546);
            uint64_t v646 = v2617;
          }
          uint64_t v1046 = v646[8];
          v1047 = (void *)((char *)v644 + v1046);
          uint64_t v1048 = &v645[v1046];
          uint64_t v1049 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1048, 1, v1049))
          {
            uint64_t v1050 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v1047, v1048, *(void *)(*(void *)(v1050 - 8) + 64));
          }
          else
          {
            uint64_t v1051 = *((void *)v1048 + 1);
            void *v1047 = *(void *)v1048;
            v1047[1] = v1051;
            uint64_t v1052 = *((void *)v1048 + 3);
            v1047[2] = *((void *)v1048 + 2);
            v1047[3] = v1052;
            uint64_t v1053 = *((void *)v1048 + 5);
            v1047[4] = *((void *)v1048 + 4);
            v1047[5] = v1053;
            uint64_t v1054 = *((void *)v1048 + 7);
            v1047[6] = *((void *)v1048 + 6);
            v1047[7] = v1054;
            uint64_t v1055 = *((void *)v1048 + 9);
            v1047[8] = *((void *)v1048 + 8);
            v1047[9] = v1055;
            uint64_t v1056 = *((void *)v1048 + 11);
            v1047[10] = *((void *)v1048 + 10);
            v1047[11] = v1056;
            uint64_t v1057 = *((void *)v1048 + 13);
            v1047[12] = *((void *)v1048 + 12);
            v1047[13] = v1057;
            uint64_t v1058 = *((void *)v1048 + 15);
            v1047[14] = *((void *)v1048 + 14);
            v1047[15] = v1058;
            *((unsigned char *)v1047 + 128) = v1048[128];
            *(_WORD *)((char *)v1047 + 129) = *(_WORD *)(v1048 + 129);
            uint64_t v1059 = *((void *)v1048 + 18);
            v1047[17] = *((void *)v1048 + 17);
            v1047[18] = v1059;
            uint64_t v1060 = *((void *)v1048 + 20);
            v1047[19] = *((void *)v1048 + 19);
            v1047[20] = v1060;
            uint64_t v1061 = *((void *)v1048 + 22);
            v1047[21] = *((void *)v1048 + 21);
            v1047[22] = v1061;
            uint64_t v1062 = *((void *)v1048 + 24);
            v1047[23] = *((void *)v1048 + 23);
            v1047[24] = v1062;
            uint64_t v1063 = *((void *)v1048 + 26);
            v1047[25] = *((void *)v1048 + 25);
            v1047[26] = v1063;
            uint64_t v1064 = *((void *)v1048 + 28);
            v1047[27] = *((void *)v1048 + 27);
            v1047[28] = v1064;
            uint64_t v1065 = *((void *)v1048 + 30);
            v1047[29] = *((void *)v1048 + 29);
            v1047[30] = v1065;
            uint64_t v1066 = *((void *)v1048 + 32);
            v1047[31] = *((void *)v1048 + 31);
            v1047[32] = v1066;
            uint64_t v1067 = *((void *)v1048 + 34);
            uint64_t v1068 = *((void *)v1048 + 33);
            *((unsigned char *)v1047 + 280) = v1048[280];
            v1047[33] = v1068;
            v1047[34] = v1067;
            uint64_t v1069 = v1049;
            uint64_t v1070 = *((void *)v1048 + 37);
            v1047[36] = *((void *)v1048 + 36);
            v1047[37] = v1070;
            uint64_t v2548 = v1069;
            uint64_t v1071 = *(int *)(v1069 + 108);
            v2511 = (char *)v1047 + v1071;
            uint64_t v1072 = &v1048[v1071];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1072, 1, v2645))
            {
              uint64_t v1073 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2511, v1072, *(void *)(*(void *)(v1073 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v2511, v1072, v2645);
              __swift_storeEnumTagSinglePayload((uint64_t)v2511, 0, 1, v2645);
            }
            uint64_t v1082 = *(int *)(v2548 + 112);
            v1083 = (char *)v1047 + v1082;
            uint64_t v1084 = &v1048[v1082];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1048[v1082], 1, v2645))
            {
              uint64_t v1085 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1083, v1084, *(void *)(*(void *)(v1085 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v1083, v1084, v2645);
              __swift_storeEnumTagSinglePayload((uint64_t)v1083, 0, 1, v2645);
            }
            uint64_t v645 = v2574;
            __swift_storeEnumTagSinglePayload((uint64_t)v1047, 0, 1, v2548);
            uint64_t v646 = v2617;
          }
          uint64_t v1132 = v646[9];
          v1133 = (void *)((char *)v644 + v1132);
          uint64_t v1134 = &v645[v1132];
          uint64_t v1135 = type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1134, 1, v1135))
          {
            uint64_t v1136 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v1133, v1134, *(void *)(*(void *)(v1136 - 8) + 64));
          }
          else
          {
            uint64_t v1137 = *((void *)v1134 + 1);
            void *v1133 = *(void *)v1134;
            v1133[1] = v1137;
            uint64_t v1138 = *((void *)v1134 + 3);
            v1133[2] = *((void *)v1134 + 2);
            v1133[3] = v1138;
            uint64_t v1139 = *((void *)v1134 + 5);
            v1133[4] = *((void *)v1134 + 4);
            v1133[5] = v1139;
            uint64_t v1140 = *((void *)v1134 + 7);
            v1133[6] = *((void *)v1134 + 6);
            v1133[7] = v1140;
            uint64_t v1141 = *((void *)v1134 + 9);
            v1133[8] = *((void *)v1134 + 8);
            v1133[9] = v1141;
            uint64_t v1142 = *((void *)v1134 + 11);
            v1133[10] = *((void *)v1134 + 10);
            v1133[11] = v1142;
            uint64_t v1143 = *((void *)v1134 + 13);
            v1133[12] = *((void *)v1134 + 12);
            v1133[13] = v1143;
            uint64_t v1144 = *((void *)v1134 + 15);
            v1133[14] = *((void *)v1134 + 14);
            v1133[15] = v1144;
            *((unsigned char *)v1133 + 128) = v1134[128];
            *(_WORD *)((char *)v1133 + 129) = *(_WORD *)(v1134 + 129);
            uint64_t v1145 = *((void *)v1134 + 18);
            v1133[17] = *((void *)v1134 + 17);
            v1133[18] = v1145;
            uint64_t v1146 = *((void *)v1134 + 20);
            v1133[19] = *((void *)v1134 + 19);
            v1133[20] = v1146;
            uint64_t v1147 = *((void *)v1134 + 22);
            v1133[21] = *((void *)v1134 + 21);
            v1133[22] = v1147;
            uint64_t v1148 = *((void *)v1134 + 24);
            v1133[23] = *((void *)v1134 + 23);
            v1133[24] = v1148;
            uint64_t v1149 = *((void *)v1134 + 26);
            v1133[25] = *((void *)v1134 + 25);
            v1133[26] = v1149;
            uint64_t v1150 = *((void *)v1134 + 28);
            v1133[27] = *((void *)v1134 + 27);
            v1133[28] = v1150;
            uint64_t v1151 = *((void *)v1134 + 30);
            v1133[29] = *((void *)v1134 + 29);
            v1133[30] = v1151;
            v1133[31] = *((void *)v1134 + 31);
            uint64_t v2549 = v1135;
            uint64_t v1152 = *(int *)(v1135 + 96);
            uint64_t v2513 = (char *)v1133 + v1152;
            uint64_t v1153 = &v1134[v1152];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1153, 1, v2645))
            {
              uint64_t v1154 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2513, v1153, *(void *)(*(void *)(v1154 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v2513, v1153, v2645);
              __swift_storeEnumTagSinglePayload((uint64_t)v2513, 0, 1, v2645);
            }
            uint64_t v1163 = *(int *)(v1135 + 100);
            v1164 = (char *)v1133 + v1163;
            uint64_t v1165 = &v1134[v1163];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1134[v1163], 1, v2645))
            {
              uint64_t v1166 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1164, v1165, *(void *)(*(void *)(v1166 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v1164, v1165, v2645);
              __swift_storeEnumTagSinglePayload((uint64_t)v1164, 0, 1, v2645);
            }
            uint64_t v1177 = *(int *)(v2549 + 104);
            uint64_t v1178 = (char *)v1133 + v1177;
            uint64_t v1179 = &v1134[v1177];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1134[v1177], 1, v2632))
            {
              uint64_t v1180 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1178, v1179, *(void *)(*(void *)(v1180 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2632 - 8) + 16))(v1178, v1179, v2632);
              __swift_storeEnumTagSinglePayload((uint64_t)v1178, 0, 1, v2632);
            }
            uint64_t v645 = v2574;
            __swift_storeEnumTagSinglePayload((uint64_t)v1133, 0, 1, v2549);
            uint64_t v646 = v2617;
          }
          uint64_t v1222 = v646[10];
          v1223 = (void *)((char *)v644 + v1222);
          uint64_t v1224 = &v645[v1222];
          uint64_t v1225 = type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1224, 1, v1225))
          {
            uint64_t v1226 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v1223, v1224, *(void *)(*(void *)(v1226 - 8) + 64));
          }
          else
          {
            uint64_t v1227 = *((void *)v1224 + 1);
            void *v1223 = *(void *)v1224;
            v1223[1] = v1227;
            uint64_t v1228 = *((void *)v1224 + 3);
            v1223[2] = *((void *)v1224 + 2);
            v1223[3] = v1228;
            uint64_t v1229 = *((void *)v1224 + 5);
            v1223[4] = *((void *)v1224 + 4);
            v1223[5] = v1229;
            uint64_t v1230 = *((void *)v1224 + 7);
            v1223[6] = *((void *)v1224 + 6);
            v1223[7] = v1230;
            uint64_t v1231 = *((void *)v1224 + 9);
            v1223[8] = *((void *)v1224 + 8);
            v1223[9] = v1231;
            uint64_t v1232 = *((void *)v1224 + 11);
            v1223[10] = *((void *)v1224 + 10);
            v1223[11] = v1232;
            uint64_t v1233 = *((void *)v1224 + 13);
            v1223[12] = *((void *)v1224 + 12);
            v1223[13] = v1233;
            uint64_t v1234 = *((void *)v1224 + 15);
            v1223[14] = *((void *)v1224 + 14);
            v1223[15] = v1234;
            *((unsigned char *)v1223 + 128) = v1224[128];
            *(_WORD *)((char *)v1223 + 129) = *(_WORD *)(v1224 + 129);
            uint64_t v1235 = *((void *)v1224 + 18);
            v1223[17] = *((void *)v1224 + 17);
            v1223[18] = v1235;
            uint64_t v1236 = *((void *)v1224 + 20);
            v1223[19] = *((void *)v1224 + 19);
            v1223[20] = v1236;
            uint64_t v1237 = *((void *)v1224 + 22);
            v1223[21] = *((void *)v1224 + 21);
            v1223[22] = v1237;
            uint64_t v1238 = *((void *)v1224 + 24);
            v1223[23] = *((void *)v1224 + 23);
            v1223[24] = v1238;
            uint64_t v1239 = *((void *)v1224 + 26);
            v1223[25] = *((void *)v1224 + 25);
            v1223[26] = v1239;
            v1223[27] = *((void *)v1224 + 27);
            uint64_t v2551 = v1225;
            uint64_t v1240 = *(int *)(v1225 + 88);
            uint64_t v2515 = (char *)v1223 + v1240;
            v2427 = &v1224[v1240];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2427, 1, v2645))
            {
              uint64_t v1241 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2515, v2427, *(void *)(*(void *)(v1241 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v2515, v2427, v2645);
              __swift_storeEnumTagSinglePayload((uint64_t)v2515, 0, 1, v2645);
            }
            uint64_t v1250 = *(int *)(v1225 + 92);
            v1251 = (char *)v1223 + v1250;
            uint64_t v1252 = &v1224[v1250];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1224[v1250], 1, v2645))
            {
              uint64_t v1253 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1251, v1252, *(void *)(*(void *)(v1253 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v1251, v1252, v2645);
              __swift_storeEnumTagSinglePayload((uint64_t)v1251, 0, 1, v2645);
            }
            uint64_t v1270 = *(int *)(v2551 + 96);
            uint64_t v1271 = (char *)v1223 + v1270;
            uint64_t v1272 = &v1224[v1270];
            *(void *)uint64_t v1271 = *(void *)v1272;
            v1271[8] = v1272[8];
            uint64_t v1273 = *(int *)(v2551 + 100);
            v1274 = (char *)v1223 + v1273;
            v1275 = &v1224[v1273];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1224[v1273], 1, v2632))
            {
              uint64_t v1276 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1274, v1275, *(void *)(*(void *)(v1276 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2632 - 8) + 16))(v1274, v1275, v2632);
              __swift_storeEnumTagSinglePayload((uint64_t)v1274, 0, 1, v2632);
            }
            uint64_t v645 = v2574;
            __swift_storeEnumTagSinglePayload((uint64_t)v1223, 0, 1, v2551);
            uint64_t v646 = v2617;
          }
          uint64_t v1307 = v646[11];
          uint64_t v1308 = (void *)((char *)v644 + v1307);
          uint64_t v1309 = &v645[v1307];
          uint64_t v1310 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1309, 1, (uint64_t)v1310))
          {
            uint64_t v1311 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v1308, v1309, *(void *)(*(void *)(v1311 - 8) + 64));
          }
          else
          {
            uint64_t v1312 = *((void *)v1309 + 1);
            *uint64_t v1308 = *(void *)v1309;
            v1308[1] = v1312;
            uint64_t v1313 = *((void *)v1309 + 3);
            v1308[2] = *((void *)v1309 + 2);
            v1308[3] = v1313;
            uint64_t v1314 = *((void *)v1309 + 5);
            v1308[4] = *((void *)v1309 + 4);
            v1308[5] = v1314;
            uint64_t v1315 = *((void *)v1309 + 7);
            v1308[6] = *((void *)v1309 + 6);
            v1308[7] = v1315;
            uint64_t v2518 = *((void *)v1309 + 9);
            v1308[8] = *((void *)v1309 + 8);
            v1308[9] = v2518;
            uint64_t v1316 = *((void *)v1309 + 11);
            v1308[10] = *((void *)v1309 + 10);
            v1308[11] = v1316;
            *((unsigned char *)v1308 + 96) = v1309[96];
            uint64_t v1317 = *((void *)v1309 + 14);
            v1308[13] = *((void *)v1309 + 13);
            v1308[14] = v1317;
            uint64_t v1318 = v1310[13];
            uint64_t v2553 = (char *)v1308 + v1318;
            uint64_t v2475 = &v1309[v1318];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2475, 1, v2632))
            {
              uint64_t v1319 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2553, v2475, *(void *)(*(void *)(v1319 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2632 - 8) + 16))(v2553, v2475, v2632);
              __swift_storeEnumTagSinglePayload((uint64_t)v2553, 0, 1, v2632);
            }
            uint64_t v1328 = v1310[14];
            v1329 = (char *)v1308 + v1328;
            uint64_t v1330 = &v1309[v1328];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1309[v1328], 1, v2632))
            {
              uint64_t v1331 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1329, v1330, *(void *)(*(void *)(v1331 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2632 - 8) + 16))(v1329, v1330, v2632);
              __swift_storeEnumTagSinglePayload((uint64_t)v1329, 0, 1, v2632);
            }
            uint64_t v1472 = v1310[15];
            v1473 = (void *)((char *)v1308 + v1472);
            uint64_t v1474 = &v1309[v1472];
            uint64_t v1475 = *((void *)v1474 + 1);
            void *v1473 = *(void *)v1474;
            v1473[1] = v1475;
            uint64_t v1476 = v1310[16];
            v1477 = (void *)((char *)v1308 + v1476);
            uint64_t v1478 = &v1309[v1476];
            uint64_t v2556 = *((void *)v1478 + 1);
            void *v1477 = *(void *)v1478;
            v1477[1] = v2556;
            uint64_t v1479 = v1310[17];
            v1480 = (void *)((char *)v1308 + v1479);
            v1481 = &v1309[v1479];
            uint64_t v1482 = *((void *)v1481 + 1);
            void *v1480 = *(void *)v1481;
            v1480[1] = v1482;
            uint64_t v1483 = v1310[18];
            uint64_t v2523 = (char *)v1308 + v1483;
            v2494 = &v1309[v1483];
            uint64_t v1484 = type metadata accessor for DateComponents();
            uint64_t v1485 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1484 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1485(v2523, v2494, v1484);
            v1485((char *)v1308 + v1310[19], &v1309[v1310[19]], v1484);
            uint64_t v1486 = v1310[20];
            uint64_t v1487 = (void *)((char *)v1308 + v1486);
            v1488 = &v1309[v1486];
            uint64_t v1489 = *((void *)v1488 + 1);
            *uint64_t v1487 = *(void *)v1488;
            v1487[1] = v1489;
            uint64_t v1490 = v1310[21];
            v1491 = (void *)((char *)v1308 + v1490);
            uint64_t v1492 = &v1309[v1490];
            uint64_t v2557 = *((void *)v1492 + 1);
            void *v1491 = *(void *)v1492;
            v1491[1] = v2557;
            uint64_t v1493 = v1310[22];
            v1494 = (void *)((char *)v1308 + v1493);
            v1495 = &v1309[v1493];
            uint64_t v2495 = (void *)*((void *)v1495 + 1);
            void *v1494 = *(void *)v1495;
            v1494[1] = v2495;
            uint64_t v1496 = v1310[23];
            v1497 = (void *)((char *)v1308 + v1496);
            v1498 = &v1309[v1496];
            uint64_t v2479 = *((void *)v1498 + 1);
            void *v1497 = *(void *)v1498;
            v1497[1] = v2479;
            uint64_t v1499 = v1310[24];
            v1500 = (void *)((char *)v1308 + v1499);
            v1501 = &v1309[v1499];
            v2468 = (void *)*((void *)v1501 + 1);
            void *v1500 = *(void *)v1501;
            v1500[1] = v2468;
            uint64_t v1502 = v1310[25];
            v1503 = (void *)((char *)v1308 + v1502);
            v1504 = &v1309[v1502];
            uint64_t v2459 = *((void *)v1504 + 1);
            void *v1503 = *(void *)v1504;
            v1503[1] = v2459;
            uint64_t v1505 = v1310[26];
            v1506 = (void *)((char *)v1308 + v1505);
            v1507 = &v1309[v1505];
            uint64_t v2451 = *((void *)v1507 + 1);
            void *v1506 = *(void *)v1507;
            v1506[1] = v2451;
            uint64_t v1508 = v1310[27];
            v1509 = (void *)((char *)v1308 + v1508);
            v1510 = &v1309[v1508];
            v2444 = (void *)*((void *)v1510 + 1);
            void *v1509 = *(void *)v1510;
            v1509[1] = v2444;
            uint64_t v1511 = v1310[28];
            v1512 = (void *)((char *)v1308 + v1511);
            v1513 = &v1309[v1511];
            uint64_t v2439 = *((void *)v1513 + 1);
            void *v1512 = *(void *)v1513;
            v1512[1] = v2439;
            uint64_t v1514 = v1310[29];
            v1515 = (void *)((char *)v1308 + v1514);
            v1516 = &v1309[v1514];
            v2435 = (void *)*((void *)v1516 + 1);
            void *v1515 = *(void *)v1516;
            v1515[1] = v2435;
            uint64_t v1517 = v1310[30];
            v1518 = (void *)((char *)v1308 + v1517);
            v1519 = &v1309[v1517];
            v2430 = (void *)*((void *)v1519 + 1);
            void *v1518 = *(void *)v1519;
            v1518[1] = v2430;
            uint64_t v1520 = v1310[31];
            v1521 = (void *)((char *)v1308 + v1520);
            v1522 = &v1309[v1520];
            v2424 = (void *)*((void *)v1522 + 1);
            void *v1521 = *(void *)v1522;
            v1521[1] = v2424;
            uint64_t v1523 = v1310[32];
            v1524 = (void *)((char *)v1308 + v1523);
            v1525 = &v1309[v1523];
            uint64_t v1526 = *((void *)v1525 + 1);
            void *v1524 = *(void *)v1525;
            v1524[1] = v1526;
            *(void *)((char *)v1308 + v1310[33]) = *(void *)&v1309[v1310[33]];
            *(void *)((char *)v1308 + v1310[34]) = *(void *)&v1309[v1310[34]];
            uint64_t v1527 = v1310[35];
            v1528 = (void *)((char *)v1308 + v1527);
            uint64_t v1529 = &v1309[v1527];
            uint64_t v1530 = *((void *)v1529 + 1);
            void *v1528 = *(void *)v1529;
            v1528[1] = v1530;
            uint64_t v1531 = v1310[36];
            v1532 = (void *)((char *)v1308 + v1531);
            uint64_t v1533 = &v1309[v1531];
            uint64_t v1534 = *((void *)v1533 + 1);
            void *v1532 = *(void *)v1533;
            v1532[1] = v1534;
            uint64_t v1535 = v1310[37];
            v1536 = (void *)((char *)v1308 + v1535);
            uint64_t v1537 = &v1309[v1535];
            uint64_t v1538 = *((void *)v1537 + 1);
            void *v1536 = *(void *)v1537;
            v1536[1] = v1538;
            uint64_t v1539 = v1310[38];
            uint64_t v2524 = (char *)v1308 + v1539;
            v2418 = &v1309[v1539];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2418, 1, v2645))
            {
              uint64_t v1540 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2524, v2418, *(void *)(*(void *)(v1540 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v2524, v2418, v2645);
              __swift_storeEnumTagSinglePayload((uint64_t)v2524, 0, 1, v2645);
            }
            uint64_t v1640 = v1310[39];
            uint64_t v1641 = (void *)((char *)v1308 + v1640);
            uint64_t v1642 = &v1309[v1640];
            uint64_t v1643 = *((void *)v1642 + 1);
            *uint64_t v1641 = *(void *)v1642;
            v1641[1] = v1643;
            uint64_t v1644 = v1310[40];
            v1645 = (void *)((char *)v1308 + v1644);
            uint64_t v1646 = &v1309[v1644];
            uint64_t v1647 = *((void *)v1646 + 1);
            void *v1645 = *(void *)v1646;
            v1645[1] = v1647;
            uint64_t v1648 = v1310[41];
            v1649 = (char *)v1308 + v1648;
            uint64_t v1650 = &v1309[v1648];
            v1649[8] = v1650[8];
            *(void *)v1649 = *(void *)v1650;
            uint64_t v1651 = v1310[42];
            v1652 = (void *)((char *)v1308 + v1651);
            v1653 = &v1309[v1651];
            uint64_t v1654 = *((void *)v1653 + 1);
            void *v1652 = *(void *)v1653;
            v1652[1] = v1654;
            uint64_t v1655 = v1310[43];
            v1656 = (char *)v1308 + v1655;
            uint64_t v1657 = &v1309[v1655];
            *(_OWORD *)v1656 = *(_OWORD *)v1657;
            *(void *)(v1656 + 13) = *(void *)(v1657 + 13);
            uint64_t v1658 = v1310[44];
            v1659 = (void *)((char *)v1308 + v1658);
            v1660 = &v1309[v1658];
            uint64_t v1661 = *((void *)v1660 + 1);
            void *v1659 = *(void *)v1660;
            v1659[1] = v1661;
            uint64_t v1662 = v1310[45];
            v1663 = (void *)((char *)v1308 + v1662);
            uint64_t v1664 = &v1309[v1662];
            uint64_t v1665 = *((void *)v1664 + 1);
            void *v1663 = *(void *)v1664;
            v1663[1] = v1665;
            uint64_t v1666 = v1310[46];
            v1667 = (void *)((char *)v1308 + v1666);
            uint64_t v1668 = &v1309[v1666];
            uint64_t v1669 = *((void *)v1668 + 1);
            void *v1667 = *(void *)v1668;
            v1667[1] = v1669;
            uint64_t v1670 = v1310[47];
            v1671 = (void *)((char *)v1308 + v1670);
            uint64_t v1672 = &v1309[v1670];
            uint64_t v1673 = *((void *)v1672 + 1);
            void *v1671 = *(void *)v1672;
            v1671[1] = v1673;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1308, 0, 1, (uint64_t)v1310);
            v644 = v2596;
            uint64_t v646 = v2617;
            uint64_t v645 = v2574;
          }
          uint64_t v1674 = v646[12];
          v1675 = (void *)((char *)v644 + v1674);
          uint64_t v1676 = &v645[v1674];
          uint64_t v1677 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1676, 1, (uint64_t)v1677))
          {
            uint64_t v1678 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v1675, v1676, *(void *)(*(void *)(v1678 - 8) + 64));
          }
          else
          {
            uint64_t v1679 = *((void *)v1676 + 1);
            void *v1675 = *(void *)v1676;
            v1675[1] = v1679;
            uint64_t v1680 = *((void *)v1676 + 3);
            v1675[2] = *((void *)v1676 + 2);
            v1675[3] = v1680;
            uint64_t v2527 = *((void *)v1676 + 5);
            v1675[4] = *((void *)v1676 + 4);
            v1675[5] = v2527;
            uint64_t v1681 = *((void *)v1676 + 7);
            v1675[6] = *((void *)v1676 + 6);
            v1675[7] = v1681;
            uint64_t v1682 = *((void *)v1676 + 9);
            v1675[8] = *((void *)v1676 + 8);
            v1675[9] = v1682;
            uint64_t v1683 = *((void *)v1676 + 11);
            v1675[10] = *((void *)v1676 + 10);
            v1675[11] = v1683;
            *((unsigned char *)v1675 + 96) = v1676[96];
            uint64_t v1684 = *((void *)v1676 + 14);
            v1675[13] = *((void *)v1676 + 13);
            v1675[14] = v1684;
            uint64_t v1685 = *((void *)v1676 + 16);
            v1675[15] = *((void *)v1676 + 15);
            v1675[16] = v1685;
            uint64_t v1686 = v1677[14];
            uint64_t v2559 = (char *)v1675 + v1686;
            uint64_t v2460 = &v1676[v1686];
            uint64_t v2453 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2460, 1, v2453))
            {
              uint64_t v1687 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2559, v2460, *(void *)(*(void *)(v1687 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2453 - 8) + 16))(v2559, v2460, v2453);
              __swift_storeEnumTagSinglePayload((uint64_t)v2559, 0, 1, v2453);
            }
            uint64_t v1696 = v1677[15];
            v1697 = (char *)v1675 + v1696;
            uint64_t v1698 = &v1676[v1696];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v1676[v1696], 1, v2453))
            {
              uint64_t v1699 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1697, v1698, *(void *)(*(void *)(v1699 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2453 - 8) + 16))(v1697, v1698, v2453);
              __swift_storeEnumTagSinglePayload((uint64_t)v1697, 0, 1, v2453);
            }
            uint64_t v1811 = v1677[16];
            v1812 = (void *)((char *)v1675 + v1811);
            uint64_t v1813 = &v1676[v1811];
            uint64_t v1814 = *((void *)v1813 + 1);
            void *v1812 = *(void *)v1813;
            v1812[1] = v1814;
            uint64_t v1815 = v1677[17];
            v1816 = (void *)((char *)v1675 + v1815);
            uint64_t v1817 = &v1676[v1815];
            uint64_t v2562 = *((void *)v1817 + 1);
            void *v1816 = *(void *)v1817;
            v1816[1] = v2562;
            uint64_t v1818 = v1677[18];
            v1819 = (void *)((char *)v1675 + v1818);
            v1820 = &v1676[v1818];
            uint64_t v2532 = *((void *)v1820 + 1);
            void *v1819 = *(void *)v1820;
            v1819[1] = v2532;
            uint64_t v1821 = v1677[19];
            v1822 = (void *)((char *)v1675 + v1821);
            v1823 = &v1676[v1821];
            uint64_t v2497 = (void *)*((void *)v1823 + 1);
            void *v1822 = *(void *)v1823;
            v1822[1] = v2497;
            uint64_t v1824 = v1677[20];
            v1825 = (void *)((char *)v1675 + v1824);
            v1826 = &v1676[v1824];
            uint64_t v2462 = *((void *)v1826 + 1);
            void *v1825 = *(void *)v1826;
            v1825[1] = v2462;
            *(void *)((char *)v1675 + v1677[21]) = *(void *)&v1676[v1677[21]];
            *(void *)((char *)v1675 + v1677[22]) = *(void *)&v1676[v1677[22]];
            uint64_t v1827 = v1677[23];
            v1828 = (char *)v1675 + v1827;
            v1829 = &v1676[v1827];
            *(void *)v1828 = *(void *)v1829;
            v1828[8] = v1829[8];
            uint64_t v1830 = v1677[24];
            v1831 = (char *)v1675 + v1830;
            v1832 = &v1676[v1830];
            *(void *)v1831 = *(void *)v1832;
            v1831[8] = v1832[8];
            uint64_t v1833 = v1677[25];
            v1834 = (void *)((char *)v1675 + v1833);
            v1835 = &v1676[v1833];
            uint64_t v1836 = *((void *)v1835 + 1);
            void *v1834 = *(void *)v1835;
            v1834[1] = v1836;
            uint64_t v1837 = v1677[26];
            v1838 = (void *)((char *)v1675 + v1837);
            uint64_t v1839 = &v1676[v1837];
            uint64_t v1840 = *((void *)v1839 + 1);
            void *v1838 = *(void *)v1839;
            v1838[1] = v1840;
            uint64_t v1841 = v1677[27];
            v1842 = (void *)((char *)v1675 + v1841);
            uint64_t v1843 = &v1676[v1841];
            uint64_t v1844 = *((void *)v1843 + 1);
            void *v1842 = *(void *)v1843;
            v1842[1] = v1844;
            uint64_t v1845 = v1677[28];
            v1846 = (void *)((char *)v1675 + v1845);
            uint64_t v1847 = &v1676[v1845];
            uint64_t v1848 = *((void *)v1847 + 1);
            void *v1846 = *(void *)v1847;
            v1846[1] = v1848;
            uint64_t v1849 = v1677[29];
            v1850 = (char *)v1675 + v1849;
            uint64_t v1851 = &v1676[v1849];
            *(void *)v1850 = *(void *)v1851;
            v1850[8] = v1851[8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1675, 0, 1, (uint64_t)v1677);
            v644 = v2596;
            uint64_t v646 = v2617;
            uint64_t v645 = v2574;
          }
          uint64_t v1852 = v646[13];
          v1853 = (void *)((char *)v644 + v1852);
          v1854 = &v645[v1852];
          uint64_t v1855 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1854, 1, (uint64_t)v1855))
          {
            uint64_t v1856 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v1853, v1854, *(void *)(*(void *)(v1856 - 8) + 64));
          }
          else
          {
            uint64_t v1857 = *((void *)v1854 + 1);
            void *v1853 = *(void *)v1854;
            v1853[1] = v1857;
            uint64_t v1858 = *((void *)v1854 + 3);
            v1853[2] = *((void *)v1854 + 2);
            v1853[3] = v1858;
            uint64_t v2563 = *((void *)v1854 + 5);
            v1853[4] = *((void *)v1854 + 4);
            v1853[5] = v2563;
            uint64_t v2533 = *((void *)v1854 + 7);
            v1853[6] = *((void *)v1854 + 6);
            v1853[7] = v2533;
            uint64_t v1859 = *((void *)v1854 + 9);
            v1853[8] = *((void *)v1854 + 8);
            v1853[9] = v1859;
            uint64_t v1860 = *((void *)v1854 + 11);
            v1853[10] = *((void *)v1854 + 10);
            v1853[11] = v1860;
            *((unsigned char *)v1853 + 96) = v1854[96];
            uint64_t v1861 = *((void *)v1854 + 14);
            v1853[13] = *((void *)v1854 + 13);
            v1853[14] = v1861;
            uint64_t v1862 = *((void *)v1854 + 16);
            v1853[15] = *((void *)v1854 + 15);
            v1853[16] = v1862;
            uint64_t v1863 = v1855[14];
            uint64_t v2576 = (char *)v1853 + v1863;
            uint64_t v2471 = &v1854[v1863];
            uint64_t v2463 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2471, 1, v2463))
            {
              uint64_t v1864 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2576, v2471, *(void *)(*(void *)(v1864 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2463 - 8) + 16))(v2576, v2471, v2463);
              __swift_storeEnumTagSinglePayload((uint64_t)v2576, 0, 1, v2463);
            }
            uint64_t v2219 = v1855[15];
            v2220 = (void *)((char *)v1853 + v2219);
            uint64_t v2221 = &v1854[v2219];
            uint64_t v2222 = *((void *)v2221 + 1);
            void *v2220 = *(void *)v2221;
            v2220[1] = v2222;
            uint64_t v2223 = v1855[16];
            v2224 = (void *)((char *)v1853 + v2223);
            uint64_t v2225 = &v1854[v2223];
            uint64_t v2226 = *((void *)v2225 + 1);
            void *v2224 = *(void *)v2225;
            v2224[1] = v2226;
            uint64_t v2227 = v1855[17];
            v2228 = (void *)((char *)v1853 + v2227);
            uint64_t v2229 = &v1854[v2227];
            uint64_t v2582 = *((void *)v2229 + 1);
            void *v2228 = *(void *)v2229;
            v2228[1] = v2582;
            uint64_t v2230 = v1855[18];
            v2231 = (void *)((char *)v1853 + v2230);
            v2232 = &v1854[v2230];
            uint64_t v2565 = *((void *)v2232 + 1);
            void *v2231 = *(void *)v2232;
            v2231[1] = v2565;
            uint64_t v2233 = v1855[19];
            v2234 = (void *)((char *)v1853 + v2233);
            v2235 = &v1854[v2233];
            uint64_t v2236 = *((void *)v2235 + 1);
            void *v2234 = *(void *)v2235;
            v2234[1] = v2236;
            *(void *)((char *)v1853 + v1855[20]) = *(void *)&v1854[v1855[20]];
            uint64_t v2237 = v1855[21];
            v2238 = (void *)((char *)v1853 + v2237);
            uint64_t v2239 = &v1854[v2237];
            uint64_t v2240 = *((void *)v2239 + 1);
            void *v2238 = *(void *)v2239;
            v2238[1] = v2240;
            uint64_t v2241 = v1855[22];
            v2242 = (void *)((char *)v1853 + v2241);
            uint64_t v2243 = &v1854[v2241];
            uint64_t v2244 = *((void *)v2243 + 1);
            void *v2242 = *(void *)v2243;
            v2242[1] = v2244;
            uint64_t v2245 = v1855[23];
            v2246 = (void *)((char *)v1853 + v2245);
            uint64_t v2247 = &v1854[v2245];
            uint64_t v2248 = *((void *)v2247 + 1);
            void *v2246 = *(void *)v2247;
            v2246[1] = v2248;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1853, 0, 1, (uint64_t)v1855);
            v644 = v2596;
            uint64_t v646 = v2617;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v644, 0, 1, (uint64_t)v646);
        }
        uint64_t v2249 = v2651[20];
        v2250 = (void *)((char *)v11 + v2249);
        uint64_t v2251 = &v2680[v2249];
        uint64_t v2252 = type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2251, 1, v2252))
        {
          uint64_t v2253 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v2250, v2251, *(void *)(*(void *)(v2253 - 8) + 64));
        }
        else
        {
          uint64_t v2254 = *((void *)v2251 + 1);
          void *v2250 = *(void *)v2251;
          v2250[1] = v2254;
          uint64_t v2255 = *((void *)v2251 + 3);
          uint64_t v2256 = (int *)v2252;
          v2250[2] = *((void *)v2251 + 2);
          v2250[3] = v2255;
          uint64_t v2257 = *((void *)v2251 + 5);
          v2250[4] = *((void *)v2251 + 4);
          v2250[5] = v2257;
          uint64_t v2258 = *((void *)v2251 + 7);
          v2250[6] = *((void *)v2251 + 6);
          v2250[7] = v2258;
          uint64_t v2259 = *((void *)v2251 + 9);
          v2250[8] = *((void *)v2251 + 8);
          v2250[9] = v2259;
          uint64_t v2260 = *((void *)v2251 + 11);
          v2250[10] = *((void *)v2251 + 10);
          v2250[11] = v2260;
          uint64_t v2621 = v2256;
          uint64_t v2261 = v2256[10];
          v2603 = (char *)v2250 + v2261;
          uint64_t v2262 = &v2251[v2261];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2262, 1, v2645))
          {
            uint64_t v2263 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2603, v2262, *(void *)(*(void *)(v2263 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v2603, v2262, v2645);
            __swift_storeEnumTagSinglePayload((uint64_t)v2603, 0, 1, v2645);
          }
          uint64_t v2264 = v2621[11];
          v2265 = (char *)v2250 + v2264;
          uint64_t v2266 = &v2251[v2264];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v2251[v2264], 1, v2645))
          {
            uint64_t v2267 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2265, v2266, *(void *)(*(void *)(v2267 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v2265, v2266, v2645);
            __swift_storeEnumTagSinglePayload((uint64_t)v2265, 0, 1, v2645);
          }
          uint64_t v2268 = v2621[12];
          v2269 = (void *)((char *)v2250 + v2268);
          uint64_t v2270 = &v2251[v2268];
          uint64_t v2271 = *((void *)v2270 + 1);
          void *v2269 = *(void *)v2270;
          v2269[1] = v2271;
          uint64_t v2272 = v2621[13];
          v2273 = (void *)((char *)v2250 + v2272);
          uint64_t v2274 = &v2251[v2272];
          uint64_t v2275 = *((void *)v2274 + 1);
          void *v2273 = *(void *)v2274;
          v2273[1] = v2275;
          uint64_t v2276 = v2621[14];
          v2277 = (void *)((char *)v2250 + v2276);
          uint64_t v2278 = &v2251[v2276];
          uint64_t v2279 = *((void *)v2278 + 1);
          void *v2277 = *(void *)v2278;
          v2277[1] = v2279;
          uint64_t v2280 = v2621[15];
          v2281 = (char *)v2250 + v2280;
          uint64_t v2282 = &v2251[v2280];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2282, 1, v2645))
          {
            uint64_t v2283 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2281, v2282, *(void *)(*(void *)(v2283 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v2281, v2282, v2645);
            __swift_storeEnumTagSinglePayload((uint64_t)v2281, 0, 1, v2645);
          }
          uint64_t v2284 = v2621[16];
          v2285 = (void *)((char *)v2250 + v2284);
          uint64_t v2286 = &v2251[v2284];
          uint64_t v2287 = *((void *)v2286 + 1);
          void *v2285 = *(void *)v2286;
          v2285[1] = v2287;
          uint64_t v2288 = v2621[17];
          v2289 = (void *)((char *)v2250 + v2288);
          uint64_t v2290 = &v2251[v2288];
          uint64_t v2291 = *((void *)v2290 + 1);
          void *v2289 = *(void *)v2290;
          v2289[1] = v2291;
          uint64_t v2292 = v2621[18];
          v2293 = (void *)((char *)v2250 + v2292);
          uint64_t v2294 = &v2251[v2292];
          uint64_t v2604 = *((void *)v2294 + 1);
          void *v2293 = *(void *)v2294;
          v2293[1] = v2604;
          uint64_t v2295 = v2621[19];
          v2296 = (void *)((char *)v2250 + v2295);
          v2297 = &v2251[v2295];
          uint64_t v2298 = *((void *)v2297 + 1);
          void *v2296 = *(void *)v2297;
          v2296[1] = v2298;
          uint64_t v2299 = v2621[20];
          v2300 = (void *)((char *)v2250 + v2299);
          uint64_t v2301 = &v2251[v2299];
          uint64_t v2302 = *((void *)v2301 + 1);
          void *v2300 = *(void *)v2301;
          v2300[1] = v2302;
          uint64_t v2303 = v2621[21];
          v2304 = (void *)((char *)v2250 + v2303);
          uint64_t v2305 = &v2251[v2303];
          uint64_t v2306 = *((void *)v2305 + 1);
          void *v2304 = *(void *)v2305;
          v2304[1] = v2306;
          uint64_t v2307 = v2621[22];
          v2308 = (void *)((char *)v2250 + v2307);
          uint64_t v2309 = &v2251[v2307];
          uint64_t v2310 = *((void *)v2309 + 1);
          void *v2308 = *(void *)v2309;
          v2308[1] = v2310;
          uint64_t v2311 = v2621[23];
          v2312 = (void *)((char *)v2250 + v2311);
          uint64_t v2313 = &v2251[v2311];
          uint64_t v2314 = *((void *)v2313 + 1);
          void *v2312 = *(void *)v2313;
          v2312[1] = v2314;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2250, 0, 1, (uint64_t)v2621);
        }
        uint64_t v2315 = v2651[21];
        v2316 = (void *)((char *)v11 + v2315);
        uint64_t v2317 = &v2680[v2315];
        uint64_t v2318 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2317, 1, (uint64_t)v2318))
        {
          uint64_t v2319 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v2316, v2317, *(void *)(*(void *)(v2319 - 8) + 64));
        }
        else
        {
          uint64_t v2320 = *((void *)v2317 + 1);
          void *v2316 = *(void *)v2317;
          v2316[1] = v2320;
          uint64_t v2321 = *((void *)v2317 + 3);
          v2316[2] = *((void *)v2317 + 2);
          v2316[3] = v2321;
          uint64_t v2322 = *((void *)v2317 + 5);
          v2316[4] = *((void *)v2317 + 4);
          v2316[5] = v2322;
          uint64_t v2323 = *((void *)v2317 + 7);
          v2316[6] = *((void *)v2317 + 6);
          v2316[7] = v2323;
          uint64_t v2605 = *((void *)v2317 + 9);
          v2316[8] = *((void *)v2317 + 8);
          v2316[9] = v2605;
          uint64_t v2583 = *((void *)v2317 + 11);
          v2316[10] = *((void *)v2317 + 10);
          v2316[11] = v2583;
          uint64_t v2324 = v2318[11];
          uint64_t v2622 = (char *)v2316 + v2324;
          uint64_t v2325 = &v2317[v2324];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2325, 1, v2645))
          {
            uint64_t v2326 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2622, v2325, *(void *)(*(void *)(v2326 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v2622, v2325, v2645);
            __swift_storeEnumTagSinglePayload((uint64_t)v2622, 0, 1, v2645);
          }
          uint64_t v2327 = v2318[12];
          v2328 = (void *)((char *)v2316 + v2327);
          uint64_t v2329 = &v2317[v2327];
          uint64_t v2330 = *((void *)v2329 + 1);
          void *v2328 = *(void *)v2329;
          v2328[1] = v2330;
          *(void *)((char *)v2316 + v2318[13]) = *(void *)&v2317[v2318[13]];
          uint64_t v2331 = v2318[14];
          v2332 = (char *)v2316 + v2331;
          uint64_t v2333 = &v2317[v2331];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2333, 1, v2645))
          {
            uint64_t v2334 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2332, v2333, *(void *)(*(void *)(v2334 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v2332, v2333, v2645);
            __swift_storeEnumTagSinglePayload((uint64_t)v2332, 0, 1, v2645);
          }
          *(void *)((char *)v2316 + v2318[15]) = *(void *)&v2317[v2318[15]];
          *(void *)((char *)v2316 + v2318[16]) = *(void *)&v2317[v2318[16]];
          uint64_t v2335 = v2318[17];
          v2336 = (void *)((char *)v2316 + v2335);
          uint64_t v2337 = &v2317[v2335];
          uint64_t v2338 = *((void *)v2337 + 1);
          void *v2336 = *(void *)v2337;
          v2336[1] = v2338;
          *(void *)((char *)v2316 + v2318[18]) = *(void *)&v2317[v2318[18]];
          *(void *)((char *)v2316 + v2318[19]) = *(void *)&v2317[v2318[19]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2316, 0, 1, (uint64_t)v2318);
        }
        uint64_t v2339 = v2651[22];
        v2340 = (void *)((char *)v11 + v2339);
        uint64_t v2341 = &v2680[v2339];
        uint64_t v2342 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2341, 1, (uint64_t)v2342))
        {
          uint64_t v2343 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v2340, v2341, *(void *)(*(void *)(v2343 - 8) + 64));
        }
        else
        {
          uint64_t v2344 = *((void *)v2341 + 1);
          void *v2340 = *(void *)v2341;
          v2340[1] = v2344;
          uint64_t v2345 = *((void *)v2341 + 3);
          v2340[2] = *((void *)v2341 + 2);
          v2340[3] = v2345;
          uint64_t v2346 = *((void *)v2341 + 5);
          v2340[4] = *((void *)v2341 + 4);
          v2340[5] = v2346;
          uint64_t v2347 = *((void *)v2341 + 7);
          v2340[6] = *((void *)v2341 + 6);
          v2340[7] = v2347;
          uint64_t v2348 = v2342[8];
          uint64_t v2349 = (char *)v2340 + v2348;
          uint64_t v2350 = &v2341[v2348];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2350, 1, v2632))
          {
            uint64_t v2351 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2349, v2350, *(void *)(*(void *)(v2351 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2632 - 8) + 16))(v2349, v2350, v2632);
            __swift_storeEnumTagSinglePayload((uint64_t)v2349, 0, 1, v2632);
          }
          uint64_t v2352 = v2342[9];
          v2353 = (void *)((char *)v2340 + v2352);
          uint64_t v2354 = &v2341[v2352];
          uint64_t v2355 = *((void *)v2354 + 1);
          void *v2353 = *(void *)v2354;
          v2353[1] = v2355;
          uint64_t v2356 = v2342[10];
          v2357 = (void *)((char *)v2340 + v2356);
          uint64_t v2358 = &v2341[v2356];
          uint64_t v2359 = *((void *)v2358 + 1);
          void *v2357 = *(void *)v2358;
          v2357[1] = v2359;
          uint64_t v2360 = v2342[11];
          v2361 = (void *)((char *)v2340 + v2360);
          uint64_t v2362 = &v2341[v2360];
          uint64_t v2363 = *((void *)v2362 + 1);
          void *v2361 = *(void *)v2362;
          v2361[1] = v2363;
          uint64_t v2364 = v2342[12];
          v2365 = (char *)v2340 + v2364;
          uint64_t v2366 = &v2341[v2364];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2366, 1, v2645))
          {
            uint64_t v2367 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2365, v2366, *(void *)(*(void *)(v2367 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v2365, v2366, v2645);
            __swift_storeEnumTagSinglePayload((uint64_t)v2365, 0, 1, v2645);
          }
          uint64_t v2368 = v2342[13];
          v2369 = (char *)v2340 + v2368;
          uint64_t v2370 = &v2341[v2368];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v2341[v2368], 1, v2645))
          {
            uint64_t v2371 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2369, v2370, *(void *)(*(void *)(v2371 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2645 - 8) + 16))(v2369, v2370, v2645);
            __swift_storeEnumTagSinglePayload((uint64_t)v2369, 0, 1, v2645);
          }
          uint64_t v2372 = v2342[14];
          v2373 = (char *)v2340 + v2372;
          uint64_t v2374 = &v2341[v2372];
          *(void *)v2373 = *(void *)v2374;
          v2373[8] = v2374[8];
          uint64_t v2375 = v2342[15];
          v2376 = (void *)((char *)v2340 + v2375);
          v2377 = &v2341[v2375];
          uint64_t v2378 = *((void *)v2377 + 1);
          void *v2376 = *(void *)v2377;
          v2376[1] = v2378;
          uint64_t v2379 = v2342[16];
          v2380 = (void *)((char *)v2340 + v2379);
          uint64_t v2381 = &v2341[v2379];
          uint64_t v2382 = *((void *)v2381 + 1);
          void *v2380 = *(void *)v2381;
          v2380[1] = v2382;
          uint64_t v2383 = v2342[17];
          v2384 = (void *)((char *)v2340 + v2383);
          uint64_t v2385 = &v2341[v2383];
          uint64_t v2386 = *((void *)v2385 + 1);
          void *v2384 = *(void *)v2385;
          v2384[1] = v2386;
          uint64_t v2387 = v2342[18];
          v2388 = (void *)((char *)v2340 + v2387);
          uint64_t v2389 = &v2341[v2387];
          uint64_t v2390 = *((void *)v2389 + 1);
          void *v2388 = *(void *)v2389;
          v2388[1] = v2390;
          uint64_t v2391 = v2342[19];
          v2392 = (void *)((char *)v2340 + v2391);
          uint64_t v2393 = &v2341[v2391];
          uint64_t v2394 = *((void *)v2393 + 1);
          void *v2392 = *(void *)v2393;
          v2392[1] = v2394;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2340, 0, 1, (uint64_t)v2342);
        }
        uint64_t v2040 = v2651[23];
        goto LABEL_535;
      case 2u:
        uint64_t v2666 = v13;
        uint64_t v47 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v47;
        uint64_t v48 = v12[3];
        v11[2] = v12[2];
        v11[3] = v48;
        uint64_t v49 = v12[5];
        v11[4] = v12[4];
        v11[5] = v49;
        uint64_t v50 = (int *)type metadata accessor for CalendarEvent(0);
        uint64_t v51 = v50[7];
        uint64_t v52 = (char *)v11 + v51;
        uint64_t v53 = (char *)v12 + v51;
        uint64_t v54 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v54))
        {
          uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
          __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v54);
        }
        uint64_t v321 = v50[8];
        uint64_t v322 = (char *)v11 + v321;
        v323 = (char *)v12 + v321;
        if (__swift_getEnumTagSinglePayload((uint64_t)v12 + v321, 1, v54))
        {
          uint64_t v324 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v322, v323, *(void *)(*(void *)(v324 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v322, v323, v54);
          __swift_storeEnumTagSinglePayload((uint64_t)v322, 0, 1, v54);
        }
        uint64_t v487 = v50[9];
        uint64_t v488 = (void *)((char *)v11 + v487);
        uint64_t v489 = (void *)((char *)v12 + v487);
        uint64_t v490 = v489[1];
        *uint64_t v488 = *v489;
        v488[1] = v490;
        *(void *)((char *)v11 + v50[10]) = *(void *)((char *)v12 + v50[10]);
        *(void *)((char *)v11 + v50[11]) = *(void *)((char *)v12 + v50[11]);
        uint64_t v491 = v50[12];
        v492 = (void *)((char *)v11 + v491);
        uint64_t v493 = (void *)((char *)v12 + v491);
        uint64_t v494 = v493[1];
        void *v492 = *v493;
        v492[1] = v494;
        uint64_t v495 = v50[13];
        v496 = (char *)v11 + v495;
        uint64_t v497 = (char *)v12 + v495;
        uint64_t v498 = *(void *)((char *)v12 + v495);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!v498)
        {
          long long v648 = *((_OWORD *)v497 + 1);
          *(_OWORD *)v496 = *(_OWORD *)v497;
          *((_OWORD *)v496 + 1) = v648;
          *((void *)v496 + 4) = *((void *)v497 + 4);
          goto LABEL_538;
        }
        uint64_t v499 = *((void *)v497 + 1);
        uint64_t v500 = *((void *)v497 + 2);
        *(void *)v496 = v498;
        *((void *)v496 + 1) = v499;
        uint64_t v501 = *((void *)v497 + 3);
        uint64_t v502 = *((void *)v497 + 4);
        *((void *)v496 + 2) = v500;
        *((void *)v496 + 3) = v501;
        *((void *)v496 + 4) = v502;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_142:
        swift_bridgeObjectRetain();
        goto LABEL_537;
      case 3u:
        uint64_t v2666 = v13;
        uint64_t v56 = v11;
        uint64_t v57 = v12[1];
        *uint64_t v56 = *v12;
        v56[1] = v57;
        uint64_t v58 = v12[3];
        v56[2] = v12[2];
        v56[3] = v58;
        uint64_t v59 = v12[5];
        v56[4] = v12[4];
        v56[5] = v59;
        uint64_t v60 = v12[7];
        v56[6] = v12[6];
        v56[7] = v60;
        uint64_t v61 = v12[9];
        v56[8] = v12[8];
        v56[9] = v61;
        v56[10] = v12[10];
        uint64_t v2637 = v56;
        uint64_t v2652 = (int *)type metadata accessor for Photo(0);
        uint64_t v62 = v2652[11];
        uint64_t v2607 = (char *)v56 + v62;
        uint64_t v63 = (char *)v12 + v62;
        uint64_t v64 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v2625 = v64;
        if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
        {
          uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2607, v63, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v2607, v63, v64);
          __swift_storeEnumTagSinglePayload((uint64_t)v2607, 0, 1, v64);
        }
        *(void *)((char *)v2637 + v2652[12]) = *(void *)&v2680[v2652[12]];
        *(void *)((char *)v2637 + v2652[13]) = *(void *)&v2680[v2652[13]];
        *(void *)((char *)v2637 + v2652[14]) = *(void *)&v2680[v2652[14]];
        *(void *)((char *)v2637 + v2652[15]) = *(void *)&v2680[v2652[15]];
        uint64_t v325 = v2652[16];
        uint64_t v326 = (void *)((char *)v2637 + v325);
        v327 = &v2680[v325];
        uint64_t v328 = *((void *)v327 + 1);
        *uint64_t v326 = *(void *)v327;
        v326[1] = v328;
        uint64_t v329 = v2652[17];
        uint64_t v330 = (void *)((char *)v2637 + v329);
        v331 = &v2680[v329];
        uint64_t v332 = type metadata accessor for PartialExtractedAttributes(0);
        swift_bridgeObjectRetain();
        uint64_t v333 = (int *)v332;
        swift_bridgeObjectRetain();
        v334 = v331;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v331, 1, v332))
        {
          uint64_t v335 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v330, v331, *(void *)(*(void *)(v335 - 8) + 64));
        }
        else
        {
          uint64_t v503 = *((void *)v331 + 1);
          *uint64_t v330 = *(void *)v331;
          v330[1] = v503;
          uint64_t v504 = *(int *)(v332 + 20);
          uint64_t v505 = (void *)((char *)v330 + v504);
          uint64_t v506 = &v331[v504];
          uint64_t v507 = type metadata accessor for RentalCarReservation(0);
          swift_bridgeObjectRetain();
          v2593 = v330;
          v2615 = v333;
          v2572 = v334;
          if (__swift_getEnumTagSinglePayload((uint64_t)v506, 1, v507))
          {
            uint64_t v508 = (uint64_t)v330;
            uint64_t v509 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v505, v506, *(void *)(*(void *)(v509 - 8) + 64));
          }
          else
          {
            uint64_t v717 = *((void *)v506 + 1);
            *uint64_t v505 = *(void *)v506;
            v505[1] = v717;
            uint64_t v718 = *((void *)v506 + 3);
            v505[2] = *((void *)v506 + 2);
            v505[3] = v718;
            uint64_t v719 = *((void *)v506 + 5);
            v505[4] = *((void *)v506 + 4);
            v505[5] = v719;
            uint64_t v720 = *((void *)v506 + 7);
            v505[6] = *((void *)v506 + 6);
            v505[7] = v720;
            uint64_t v721 = *((void *)v506 + 9);
            v505[8] = *((void *)v506 + 8);
            v505[9] = v721;
            uint64_t v722 = *((void *)v506 + 11);
            v505[10] = *((void *)v506 + 10);
            v505[11] = v722;
            uint64_t v723 = *((void *)v506 + 13);
            v505[12] = *((void *)v506 + 12);
            v505[13] = v723;
            uint64_t v724 = *((void *)v506 + 15);
            v505[14] = *((void *)v506 + 14);
            v505[15] = v724;
            *((unsigned char *)v505 + 128) = v506[128];
            *(_WORD *)((char *)v505 + 129) = *(_WORD *)(v506 + 129);
            uint64_t v725 = *((void *)v506 + 18);
            v505[17] = *((void *)v506 + 17);
            v505[18] = v725;
            uint64_t v726 = *((void *)v506 + 20);
            v505[19] = *((void *)v506 + 19);
            v505[20] = v726;
            uint64_t v727 = *((void *)v506 + 22);
            v505[21] = *((void *)v506 + 21);
            v505[22] = v727;
            uint64_t v728 = *((void *)v506 + 24);
            v505[23] = *((void *)v506 + 23);
            v505[24] = v728;
            uint64_t v729 = *((void *)v506 + 26);
            v505[25] = *((void *)v506 + 25);
            v505[26] = v729;
            uint64_t v730 = *((void *)v506 + 28);
            v505[27] = *((void *)v506 + 27);
            v505[28] = v730;
            uint64_t v731 = *((void *)v506 + 30);
            v505[29] = *((void *)v506 + 29);
            v505[30] = v731;
            uint64_t v2505 = *((void *)v506 + 32);
            v505[31] = *((void *)v506 + 31);
            v505[32] = v2505;
            uint64_t v732 = *((void *)v506 + 34);
            v505[33] = *((void *)v506 + 33);
            v505[34] = v732;
            uint64_t v733 = *((void *)v506 + 36);
            v505[35] = *((void *)v506 + 35);
            v505[36] = v733;
            uint64_t v734 = *((void *)v506 + 38);
            v505[37] = *((void *)v506 + 37);
            v505[38] = v734;
            uint64_t v735 = *((void *)v506 + 40);
            v505[39] = *((void *)v506 + 39);
            v505[40] = v735;
            uint64_t v736 = *((void *)v506 + 42);
            v505[41] = *((void *)v506 + 41);
            v505[42] = v736;
            uint64_t v737 = *((void *)v506 + 44);
            v505[43] = *((void *)v506 + 43);
            v505[44] = v737;
            uint64_t v738 = *((void *)v506 + 46);
            v505[45] = *((void *)v506 + 45);
            v505[46] = v738;
            uint64_t v739 = *((void *)v506 + 47);
            *((unsigned char *)v505 + 384) = v506[384];
            v505[47] = v739;
            uint64_t v740 = *((void *)v506 + 50);
            v505[49] = *((void *)v506 + 49);
            v505[50] = v740;
            uint64_t v741 = *((void *)v506 + 52);
            v505[51] = *((void *)v506 + 51);
            v505[52] = v741;
            uint64_t v742 = *(int *)(v507 + 140);
            uint64_t v2541 = (char *)v505 + v742;
            uint64_t v743 = &v506[v742];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v743, 1, v2625))
            {
              uint64_t v744 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2541, v743, *(void *)(*(void *)(v744 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v2541, v743, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v2541, 0, 1, v2625);
            }
            uint64_t v775 = *(int *)(v507 + 144);
            v776 = (char *)v505 + v775;
            uint64_t v777 = &v506[v775];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v506[v775], 1, v2625))
            {
              uint64_t v778 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v776, v777, *(void *)(*(void *)(v778 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v776, v777, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v776, 0, 1, v2625);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v505, 0, 1, v507);
            uint64_t v508 = (uint64_t)v330;
            uint64_t v333 = v2615;
          }
          uint64_t v810 = v333[6];
          v811 = (void *)(v508 + v810);
          uint64_t v812 = (void *)((char *)v334 + v810);
          uint64_t v813 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v812, 1, v813))
          {
            uint64_t v814 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v811, v812, *(void *)(*(void *)(v814 - 8) + 64));
          }
          else
          {
            uint64_t v815 = v812[1];
            void *v811 = *v812;
            v811[1] = v815;
            uint64_t v816 = v812[3];
            v811[2] = v812[2];
            v811[3] = v816;
            uint64_t v817 = v812[5];
            v811[4] = v812[4];
            v811[5] = v817;
            uint64_t v818 = v812[7];
            v811[6] = v812[6];
            v811[7] = v818;
            uint64_t v819 = v812[9];
            v811[8] = v812[8];
            v811[9] = v819;
            uint64_t v820 = v812[11];
            v811[10] = v812[10];
            v811[11] = v820;
            uint64_t v821 = v812[13];
            v811[12] = v812[12];
            v811[13] = v821;
            uint64_t v822 = v812[15];
            v811[14] = v812[14];
            v811[15] = v822;
            *((unsigned char *)v811 + 128) = *((unsigned char *)v812 + 128);
            *(_WORD *)((char *)v811 + 129) = *(_WORD *)((char *)v812 + 129);
            uint64_t v823 = v812[18];
            v811[17] = v812[17];
            v811[18] = v823;
            uint64_t v824 = v812[20];
            v811[19] = v812[19];
            v811[20] = v824;
            uint64_t v825 = v812[22];
            v811[21] = v812[21];
            v811[22] = v825;
            uint64_t v826 = v812[24];
            v811[23] = v812[23];
            v811[24] = v826;
            v2484 = (void *)v812[26];
            v811[25] = v812[25];
            v811[26] = v2484;
            uint64_t v827 = v812[28];
            v811[27] = v812[27];
            v811[28] = v827;
            uint64_t v828 = v812[30];
            v811[29] = v812[29];
            v811[30] = v828;
            uint64_t v829 = v812[32];
            v811[31] = v812[31];
            v811[32] = v829;
            uint64_t v830 = v812[34];
            v811[33] = v812[33];
            v811[34] = v830;
            uint64_t v831 = v812[36];
            uint64_t v832 = v812[35];
            *((unsigned char *)v811 + 296) = *((unsigned char *)v812 + 296);
            v811[35] = v832;
            v811[36] = v831;
            uint64_t v833 = *(int *)(v813 + 112);
            uint64_t v2543 = (char *)v811 + v833;
            uint64_t v834 = (char *)v812 + v833;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v834, 1, v2625))
            {
              uint64_t v835 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2543, v834, *(void *)(*(void *)(v835 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v2543, v834, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v2543, 0, 1, v2625);
            }
            uint64_t v866 = *(int *)(v813 + 116);
            v867 = (char *)v811 + v866;
            uint64_t v868 = (char *)v812 + v866;
            if (__swift_getEnumTagSinglePayload((uint64_t)v812 + v866, 1, v2625))
            {
              uint64_t v869 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v867, v868, *(void *)(*(void *)(v869 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v867, v868, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v867, 0, 1, v2625);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v811, 0, 1, v813);
            uint64_t v508 = (uint64_t)v2593;
            uint64_t v333 = v2615;
          }
          uint64_t v902 = v333[7];
          uint64_t v903 = (void *)(v508 + v902);
          uint64_t v904 = (void *)((char *)v334 + v902);
          uint64_t v905 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v904, 1, (uint64_t)v905))
          {
            uint64_t v906 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v903, v904, *(void *)(*(void *)(v906 - 8) + 64));
          }
          else
          {
            uint64_t v907 = v904[1];
            *uint64_t v903 = *v904;
            v903[1] = v907;
            uint64_t v908 = v904[3];
            v903[2] = v904[2];
            v903[3] = v908;
            uint64_t v909 = v904[5];
            v903[4] = v904[4];
            v903[5] = v909;
            uint64_t v910 = v904[7];
            v903[6] = v904[6];
            v903[7] = v910;
            uint64_t v911 = v904[9];
            v903[8] = v904[8];
            v903[9] = v911;
            uint64_t v912 = v904[11];
            v903[10] = v904[10];
            v903[11] = v912;
            uint64_t v913 = v904[13];
            v903[12] = v904[12];
            v903[13] = v913;
            uint64_t v914 = v904[15];
            v903[14] = v904[14];
            v903[15] = v914;
            *((unsigned char *)v903 + 128) = *((unsigned char *)v904 + 128);
            *(_WORD *)((char *)v903 + 129) = *(_WORD *)((char *)v904 + 129);
            uint64_t v915 = v904[18];
            v903[17] = v904[17];
            v903[18] = v915;
            uint64_t v916 = v904[20];
            v903[19] = v904[19];
            v903[20] = v916;
            uint64_t v917 = v904[22];
            v903[21] = v904[21];
            v903[22] = v917;
            __dsta = (void *)v904[24];
            v903[23] = v904[23];
            v903[24] = __dsta;
            uint64_t v918 = v904[26];
            v903[25] = v904[25];
            v903[26] = v918;
            uint64_t v919 = v904[28];
            v903[27] = v904[27];
            v903[28] = v919;
            uint64_t v2509 = v904[30];
            v903[29] = v904[29];
            v903[30] = v2509;
            uint64_t v920 = v904[32];
            v903[31] = v904[31];
            v903[32] = v920;
            uint64_t v921 = v904[34];
            v903[33] = v904[33];
            v903[34] = v921;
            uint64_t v922 = v904[36];
            uint64_t v923 = v904[35];
            *((unsigned char *)v903 + 296) = *((unsigned char *)v904 + 296);
            v903[35] = v923;
            v903[36] = v922;
            uint64_t v924 = v904[39];
            v903[38] = v904[38];
            v903[39] = v924;
            uint64_t v925 = v905[29];
            uint64_t v2545 = (char *)v903 + v925;
            uint64_t v926 = (char *)v904 + v925;
            uint64_t v927 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v926, 1, v927))
            {
              uint64_t v928 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2545, v926, *(void *)(*(void *)(v928 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v927 - 8) + 16))(v2545, v926, v927);
              __swift_storeEnumTagSinglePayload((uint64_t)v2545, 0, 1, v927);
            }
            uint64_t v964 = v905[30];
            v965 = (void *)((char *)v903 + v964);
            uint64_t v966 = (void *)((char *)v904 + v964);
            uint64_t v967 = v966[1];
            void *v965 = *v966;
            v965[1] = v967;
            uint64_t v968 = v905[31];
            v969 = (char *)v903 + v968;
            uint64_t v970 = (char *)v904 + v968;
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v970, 1, v2625))
            {
              uint64_t v971 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v969, v970, *(void *)(*(void *)(v971 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v969, v970, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v969, 0, 1, v2625);
            }
            uint64_t v984 = v905[32];
            v985 = (char *)v903 + v984;
            uint64_t v986 = (char *)v904 + v984;
            if (__swift_getEnumTagSinglePayload((uint64_t)v904 + v984, 1, v2625))
            {
              uint64_t v987 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v985, v986, *(void *)(*(void *)(v987 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v985, v986, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v985, 0, 1, v2625);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v903, 0, 1, (uint64_t)v905);
            uint64_t v508 = (uint64_t)v2593;
            uint64_t v333 = v2615;
          }
          uint64_t v1019 = v333[8];
          v1020 = (void *)(v508 + v1019);
          uint64_t v1021 = (void *)((char *)v334 + v1019);
          uint64_t v1022 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1021, 1, v1022))
          {
            uint64_t v1023 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v1020, v1021, *(void *)(*(void *)(v1023 - 8) + 64));
          }
          else
          {
            uint64_t v1024 = v1021[1];
            void *v1020 = *v1021;
            v1020[1] = v1024;
            uint64_t v1025 = v1021[3];
            v1020[2] = v1021[2];
            v1020[3] = v1025;
            uint64_t v1026 = v1021[5];
            v1020[4] = v1021[4];
            v1020[5] = v1026;
            uint64_t v1027 = v1021[7];
            v1020[6] = v1021[6];
            v1020[7] = v1027;
            uint64_t v1028 = v1021[9];
            v1020[8] = v1021[8];
            v1020[9] = v1028;
            uint64_t v1029 = v1021[11];
            v1020[10] = v1021[10];
            v1020[11] = v1029;
            uint64_t v1030 = v1021[13];
            v1020[12] = v1021[12];
            v1020[13] = v1030;
            uint64_t v1031 = v1021[15];
            v1020[14] = v1021[14];
            v1020[15] = v1031;
            *((unsigned char *)v1020 + 128) = *((unsigned char *)v1021 + 128);
            *(_WORD *)((char *)v1020 + 129) = *(_WORD *)((char *)v1021 + 129);
            uint64_t v1032 = v1021[18];
            v1020[17] = v1021[17];
            v1020[18] = v1032;
            uint64_t v1033 = v1021[20];
            v1020[19] = v1021[19];
            v1020[20] = v1033;
            uint64_t v1034 = v1021[22];
            v1020[21] = v1021[21];
            v1020[22] = v1034;
            uint64_t v1035 = v1021[24];
            v1020[23] = v1021[23];
            v1020[24] = v1035;
            uint64_t v1036 = v1021[26];
            v1020[25] = v1021[25];
            v1020[26] = v1036;
            uint64_t v1037 = v1021[28];
            v1020[27] = v1021[27];
            v1020[28] = v1037;
            uint64_t v1038 = v1021[30];
            v1020[29] = v1021[29];
            v1020[30] = v1038;
            uint64_t v1039 = v1021[32];
            v1020[31] = v1021[31];
            v1020[32] = v1039;
            uint64_t v1040 = v1021[34];
            uint64_t v1041 = v1021[33];
            *((unsigned char *)v1020 + 280) = *((unsigned char *)v1021 + 280);
            v1020[33] = v1041;
            v1020[34] = v1040;
            uint64_t v1042 = v1021[37];
            v1020[36] = v1021[36];
            v1020[37] = v1042;
            uint64_t v1043 = *(int *)(v1022 + 108);
            v2547 = (char *)v1020 + v1043;
            uint64_t v1044 = (char *)v1021 + v1043;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1044, 1, v2625))
            {
              uint64_t v1045 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2547, v1044, *(void *)(*(void *)(v1045 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v2547, v1044, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v2547, 0, 1, v2625);
            }
            uint64_t v1078 = *(int *)(v1022 + 112);
            v1079 = (char *)v1020 + v1078;
            uint64_t v1080 = (char *)v1021 + v1078;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1021 + v1078, 1, v2625))
            {
              uint64_t v1081 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1079, v1080, *(void *)(*(void *)(v1081 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v1079, v1080, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v1079, 0, 1, v2625);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v1020, 0, 1, v1022);
            uint64_t v508 = (uint64_t)v2593;
            uint64_t v333 = v2615;
          }
          uint64_t v1109 = v333[9];
          v1110 = (void *)(v508 + v1109);
          uint64_t v1111 = (void *)((char *)v334 + v1109);
          uint64_t v1112 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1111, 1, (uint64_t)v1112))
          {
            uint64_t v1113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v1110, v1111, *(void *)(*(void *)(v1113 - 8) + 64));
          }
          else
          {
            uint64_t v1114 = v1111[1];
            void *v1110 = *v1111;
            v1110[1] = v1114;
            uint64_t v1115 = v1111[3];
            v1110[2] = v1111[2];
            v1110[3] = v1115;
            uint64_t v1116 = v1111[5];
            v1110[4] = v1111[4];
            v1110[5] = v1116;
            uint64_t v1117 = v1111[7];
            v1110[6] = v1111[6];
            v1110[7] = v1117;
            uint64_t v1118 = v1111[9];
            v1110[8] = v1111[8];
            v1110[9] = v1118;
            uint64_t v1119 = v1111[11];
            v1110[10] = v1111[10];
            v1110[11] = v1119;
            uint64_t v1120 = v1111[13];
            v1110[12] = v1111[12];
            v1110[13] = v1120;
            uint64_t v1121 = v1111[15];
            v1110[14] = v1111[14];
            v1110[15] = v1121;
            *((unsigned char *)v1110 + 128) = *((unsigned char *)v1111 + 128);
            *(_WORD *)((char *)v1110 + 129) = *(_WORD *)((char *)v1111 + 129);
            uint64_t v1122 = v1111[18];
            v1110[17] = v1111[17];
            v1110[18] = v1122;
            uint64_t v1123 = v1111[20];
            v1110[19] = v1111[19];
            v1110[20] = v1123;
            uint64_t v1124 = v1111[22];
            v1110[21] = v1111[21];
            v1110[22] = v1124;
            uint64_t v1125 = v1111[24];
            v1110[23] = v1111[23];
            v1110[24] = v1125;
            uint64_t v1126 = v1111[26];
            v1110[25] = v1111[25];
            v1110[26] = v1126;
            uint64_t v1127 = v1111[28];
            v1110[27] = v1111[27];
            v1110[28] = v1127;
            uint64_t v1128 = v1111[30];
            v1110[29] = v1111[29];
            v1110[30] = v1128;
            v1110[31] = v1111[31];
            uint64_t v1129 = v1112[24];
            v2512 = (char *)v1110 + v1129;
            uint64_t v1130 = (char *)v1111 + v1129;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1130, 1, v2625))
            {
              uint64_t v1131 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2512, v1130, *(void *)(*(void *)(v1131 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v2512, v1130, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v2512, 0, 1, v2625);
            }
            uint64_t v1159 = v1112[25];
            v1160 = (char *)v1110 + v1159;
            uint64_t v1161 = (char *)v1111 + v1159;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1111 + v1159, 1, v2625))
            {
              uint64_t v1162 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1160, v1161, *(void *)(*(void *)(v1162 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v1160, v1161, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v1160, 0, 1, v2625);
            }
            uint64_t v1172 = v1112[26];
            uint64_t v1173 = (char *)v1110 + v1172;
            uint64_t v1174 = (char *)v1111 + v1172;
            uint64_t v1175 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1174, 1, v1175))
            {
              uint64_t v1176 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1173, v1174, *(void *)(*(void *)(v1176 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1175 - 8) + 16))(v1173, v1174, v1175);
              __swift_storeEnumTagSinglePayload((uint64_t)v1173, 0, 1, v1175);
            }
            v334 = v2572;
            __swift_storeEnumTagSinglePayload((uint64_t)v1110, 0, 1, (uint64_t)v1112);
            uint64_t v508 = (uint64_t)v2593;
            uint64_t v333 = v2615;
          }
          uint64_t v1201 = v333[10];
          uint64_t v1202 = (void *)(v508 + v1201);
          uint64_t v1203 = (void *)((char *)v334 + v1201);
          uint64_t v1204 = type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1203, 1, v1204))
          {
            uint64_t v1205 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v1202, v1203, *(void *)(*(void *)(v1205 - 8) + 64));
          }
          else
          {
            uint64_t v1206 = v1203[1];
            *uint64_t v1202 = *v1203;
            v1202[1] = v1206;
            uint64_t v1207 = v1203[3];
            v1202[2] = v1203[2];
            v1202[3] = v1207;
            uint64_t v1208 = v1203[5];
            v1202[4] = v1203[4];
            v1202[5] = v1208;
            uint64_t v1209 = v1203[7];
            v1202[6] = v1203[6];
            v1202[7] = v1209;
            uint64_t v1210 = v1203[9];
            v1202[8] = v1203[8];
            v1202[9] = v1210;
            uint64_t v1211 = v1203[11];
            v1202[10] = v1203[10];
            v1202[11] = v1211;
            uint64_t v1212 = v1203[13];
            v1202[12] = v1203[12];
            v1202[13] = v1212;
            uint64_t v1213 = v1203[15];
            v1202[14] = v1203[14];
            v1202[15] = v1213;
            *((unsigned char *)v1202 + 128) = *((unsigned char *)v1203 + 128);
            *(_WORD *)((char *)v1202 + 129) = *(_WORD *)((char *)v1203 + 129);
            uint64_t v1214 = v1203[18];
            v1202[17] = v1203[17];
            v1202[18] = v1214;
            uint64_t v1215 = v1203[20];
            v1202[19] = v1203[19];
            v1202[20] = v1215;
            uint64_t v1216 = v1203[22];
            v1202[21] = v1203[21];
            v1202[22] = v1216;
            uint64_t v1217 = v1203[24];
            v1202[23] = v1203[23];
            v1202[24] = v1217;
            uint64_t v1218 = v1203[26];
            v1202[25] = v1203[25];
            v1202[26] = v1218;
            v1202[27] = v1203[27];
            uint64_t v1219 = *(int *)(v1204 + 88);
            uint64_t v2514 = (int *)v1204;
            v2550 = (char *)v1202 + v1219;
            uint64_t v1220 = (char *)v1203 + v1219;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1220, 1, v2625))
            {
              uint64_t v1221 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2550, v1220, *(void *)(*(void *)(v1221 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v2550, v1220, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v2550, 0, 1, v2625);
            }
            uint64_t v1246 = v2514[23];
            v1247 = (char *)v1202 + v1246;
            uint64_t v1248 = (char *)v1203 + v1246;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1203 + v1246, 1, v2625))
            {
              uint64_t v1249 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1247, v1248, *(void *)(*(void *)(v1249 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v1247, v1248, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v1247, 0, 1, v2625);
            }
            uint64_t v1262 = v2514[24];
            uint64_t v1263 = (char *)v1202 + v1262;
            uint64_t v1264 = (char *)v1203 + v1262;
            *(void *)uint64_t v1263 = *(void *)v1264;
            v1263[8] = v1264[8];
            uint64_t v1265 = v2514[25];
            v1266 = (char *)v1202 + v1265;
            v1267 = (char *)v1203 + v1265;
            uint64_t v1268 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1267, 1, v1268))
            {
              uint64_t v1269 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1266, v1267, *(void *)(*(void *)(v1269 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1268 - 8) + 16))(v1266, v1267, v1268);
              __swift_storeEnumTagSinglePayload((uint64_t)v1266, 0, 1, v1268);
            }
            v334 = v2572;
            __swift_storeEnumTagSinglePayload((uint64_t)v1202, 0, 1, (uint64_t)v2514);
            uint64_t v508 = (uint64_t)v2593;
            uint64_t v333 = v2615;
          }
          uint64_t v1292 = v333[11];
          v1293 = (void *)(v508 + v1292);
          uint64_t v1294 = (void *)((char *)v334 + v1292);
          uint64_t v1295 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1294, 1, (uint64_t)v1295))
          {
            uint64_t v1296 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v1293, v1294, *(void *)(*(void *)(v1296 - 8) + 64));
          }
          else
          {
            uint64_t v1297 = v1294[1];
            void *v1293 = *v1294;
            v1293[1] = v1297;
            uint64_t v1298 = v1294[3];
            v1293[2] = v1294[2];
            v1293[3] = v1298;
            uint64_t v2517 = v1294[5];
            v1293[4] = v1294[4];
            v1293[5] = v2517;
            uint64_t v1299 = v1294[7];
            v1293[6] = v1294[6];
            v1293[7] = v1299;
            uint64_t v1300 = v1294[9];
            v1293[8] = v1294[8];
            v1293[9] = v1300;
            uint64_t v1301 = v1294[11];
            v1293[10] = v1294[10];
            v1293[11] = v1301;
            *((unsigned char *)v1293 + 96) = *((unsigned char *)v1294 + 96);
            uint64_t v1302 = v1294[14];
            v1293[13] = v1294[13];
            v1293[14] = v1302;
            uint64_t v1303 = v1295[13];
            v2552 = (char *)v1293 + v1303;
            uint64_t v1304 = (char *)v1294 + v1303;
            uint64_t v1305 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1304, 1, v1305))
            {
              uint64_t v1306 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2552, v1304, *(void *)(*(void *)(v1306 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1305 - 8) + 16))(v2552, v1304, v1305);
              __swift_storeEnumTagSinglePayload((uint64_t)v2552, 0, 1, v1305);
            }
            uint64_t v1324 = v1295[14];
            v1325 = (char *)v1293 + v1324;
            uint64_t v1326 = (char *)v1294 + v1324;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1294 + v1324, 1, v1305))
            {
              uint64_t v1327 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1325, v1326, *(void *)(*(void *)(v1327 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1305 - 8) + 16))(v1325, v1326, v1305);
              __swift_storeEnumTagSinglePayload((uint64_t)v1325, 0, 1, v1305);
            }
            uint64_t v1401 = v1295[15];
            uint64_t v1402 = (void *)((char *)v1293 + v1401);
            uint64_t v1403 = (void *)((char *)v1294 + v1401);
            uint64_t v1404 = v1403[1];
            *uint64_t v1402 = *v1403;
            v1402[1] = v1404;
            uint64_t v1405 = v1295[16];
            v1406 = (void *)((char *)v1293 + v1405);
            uint64_t v1407 = (void *)((char *)v1294 + v1405);
            uint64_t v1408 = v1407[1];
            void *v1406 = *v1407;
            v1406[1] = v1408;
            uint64_t v1409 = v1295[17];
            v1410 = (void *)((char *)v1293 + v1409);
            uint64_t v1411 = (void *)((char *)v1294 + v1409);
            uint64_t v1412 = v1411[1];
            void *v1410 = *v1411;
            v1410[1] = v1412;
            uint64_t v1413 = v1295[18];
            v2521 = (char *)v1294 + v1413;
            uint64_t v2554 = (char *)v1293 + v1413;
            uint64_t v1414 = type metadata accessor for DateComponents();
            uint64_t v1415 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1414 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1415(v2554, v2521, v1414);
            v1415((char *)v1293 + v1295[19], (char *)v1294 + v1295[19], v1414);
            uint64_t v1416 = v1295[20];
            uint64_t v1417 = (void *)((char *)v1293 + v1416);
            v1418 = (void *)((char *)v1294 + v1416);
            uint64_t v1419 = v1418[1];
            *uint64_t v1417 = *v1418;
            v1417[1] = v1419;
            uint64_t v1420 = v1295[21];
            v1421 = (void *)((char *)v1293 + v1420);
            uint64_t v1422 = (void *)((char *)v1294 + v1420);
            v2467 = (void *)v1422[1];
            void *v1421 = *v1422;
            v1421[1] = v2467;
            uint64_t v1423 = v1295[22];
            v1424 = (void *)((char *)v1293 + v1423);
            v1425 = (void *)((char *)v1294 + v1423);
            uint64_t v2522 = v1425[1];
            void *v1424 = *v1425;
            v1424[1] = v2522;
            uint64_t v1426 = v1295[23];
            v1427 = (void *)((char *)v1293 + v1426);
            v1428 = (void *)((char *)v1294 + v1426);
            v2493 = (void *)v1428[1];
            void *v1427 = *v1428;
            v1427[1] = v2493;
            uint64_t v1429 = v1295[24];
            v1430 = (void *)((char *)v1293 + v1429);
            v1431 = (void *)((char *)v1294 + v1429);
            uint64_t v2478 = v1431[1];
            void *v1430 = *v1431;
            v1430[1] = v2478;
            uint64_t v1432 = v1295[25];
            v1433 = (void *)((char *)v1293 + v1432);
            v1434 = (void *)((char *)v1294 + v1432);
            uint64_t v2458 = v1434[1];
            void *v1433 = *v1434;
            v1433[1] = v2458;
            uint64_t v1435 = v1295[26];
            v1436 = (void *)((char *)v1293 + v1435);
            v1437 = (void *)((char *)v1294 + v1435);
            uint64_t v2450 = v1437[1];
            void *v1436 = *v1437;
            v1436[1] = v2450;
            uint64_t v1438 = v1295[27];
            v1439 = (void *)((char *)v1293 + v1438);
            v1440 = (void *)((char *)v1294 + v1438);
            v2443 = (void *)v1440[1];
            void *v1439 = *v1440;
            v1439[1] = v2443;
            uint64_t v1441 = v1295[28];
            v1442 = (void *)((char *)v1293 + v1441);
            v1443 = (void *)((char *)v1294 + v1441);
            uint64_t v2438 = v1443[1];
            void *v1442 = *v1443;
            v1442[1] = v2438;
            uint64_t v1444 = v1295[29];
            v1445 = (void *)((char *)v1293 + v1444);
            v1446 = (void *)((char *)v1294 + v1444);
            v2434 = (void *)v1446[1];
            void *v1445 = *v1446;
            v1445[1] = v2434;
            uint64_t v1447 = v1295[30];
            v1448 = (void *)((char *)v1293 + v1447);
            v1449 = (void *)((char *)v1294 + v1447);
            v2429 = (void *)v1449[1];
            void *v1448 = *v1449;
            v1448[1] = v2429;
            uint64_t v1450 = v1295[31];
            v1451 = (void *)((char *)v1293 + v1450);
            v1452 = (void *)((char *)v1294 + v1450);
            v2423 = (void *)v1452[1];
            void *v1451 = *v1452;
            v1451[1] = v2423;
            uint64_t v1453 = v1295[32];
            v1454 = (void *)((char *)v1293 + v1453);
            v1455 = (void *)((char *)v1294 + v1453);
            uint64_t v1456 = v1455[1];
            void *v1454 = *v1455;
            v1454[1] = v1456;
            *(void *)((char *)v1293 + v1295[33]) = *(void *)((char *)v1294 + v1295[33]);
            *(void *)((char *)v1293 + v1295[34]) = *(void *)((char *)v1294 + v1295[34]);
            uint64_t v1457 = v1295[35];
            v1458 = (void *)((char *)v1293 + v1457);
            uint64_t v1459 = (void *)((char *)v1294 + v1457);
            uint64_t v1460 = v1459[1];
            void *v1458 = *v1459;
            v1458[1] = v1460;
            uint64_t v1461 = v1295[36];
            v1462 = (void *)((char *)v1293 + v1461);
            uint64_t v1463 = (void *)((char *)v1294 + v1461);
            uint64_t v1464 = v1463[1];
            void *v1462 = *v1463;
            v1462[1] = v1464;
            uint64_t v1465 = v1295[37];
            v1466 = (void *)((char *)v1293 + v1465);
            uint64_t v1467 = (void *)((char *)v1294 + v1465);
            uint64_t v1468 = v1467[1];
            void *v1466 = *v1467;
            v1466[1] = v1468;
            uint64_t v1469 = v1295[38];
            v2555 = (char *)v1293 + v1469;
            v1470 = (char *)v1294 + v1469;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1470, 1, v2625))
            {
              uint64_t v1471 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2555, v1470, *(void *)(*(void *)(v1471 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v2555, v1470, v2625);
              __swift_storeEnumTagSinglePayload((uint64_t)v2555, 0, 1, v2625);
            }
            uint64_t v1590 = v1295[39];
            uint64_t v1591 = (void *)((char *)v1293 + v1590);
            uint64_t v1592 = (void *)((char *)v1294 + v1590);
            uint64_t v1593 = v1592[1];
            *uint64_t v1591 = *v1592;
            v1591[1] = v1593;
            uint64_t v1594 = v1295[40];
            v1595 = (void *)((char *)v1293 + v1594);
            uint64_t v1596 = (void *)((char *)v1294 + v1594);
            uint64_t v1597 = v1596[1];
            void *v1595 = *v1596;
            v1595[1] = v1597;
            uint64_t v1598 = v1295[41];
            v1599 = (char *)v1293 + v1598;
            uint64_t v1600 = (char *)v1294 + v1598;
            v1599[8] = v1600[8];
            *(void *)v1599 = *(void *)v1600;
            uint64_t v1601 = v1295[42];
            v1602 = (void *)((char *)v1293 + v1601);
            v1603 = (void *)((char *)v1294 + v1601);
            uint64_t v1604 = v1603[1];
            void *v1602 = *v1603;
            v1602[1] = v1604;
            uint64_t v1605 = v1295[43];
            v1606 = (char *)v1293 + v1605;
            uint64_t v1607 = (char *)v1294 + v1605;
            *(_OWORD *)v1606 = *(_OWORD *)v1607;
            *(void *)(v1606 + 13) = *(void *)(v1607 + 13);
            uint64_t v1608 = v1295[44];
            v1609 = (void *)((char *)v1293 + v1608);
            v1610 = (void *)((char *)v1294 + v1608);
            uint64_t v1611 = v1610[1];
            void *v1609 = *v1610;
            v1609[1] = v1611;
            uint64_t v1612 = v1295[45];
            v1613 = (void *)((char *)v1293 + v1612);
            uint64_t v1614 = (void *)((char *)v1294 + v1612);
            uint64_t v1615 = v1614[1];
            void *v1613 = *v1614;
            v1613[1] = v1615;
            uint64_t v1616 = v1295[46];
            v1617 = (void *)((char *)v1293 + v1616);
            uint64_t v1618 = (void *)((char *)v1294 + v1616);
            uint64_t v1619 = v1618[1];
            void *v1617 = *v1618;
            v1617[1] = v1619;
            uint64_t v1620 = v1295[47];
            v1621 = (void *)((char *)v1293 + v1620);
            uint64_t v1622 = (void *)((char *)v1294 + v1620);
            uint64_t v1623 = v1622[1];
            void *v1621 = *v1622;
            v1621[1] = v1623;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1293, 0, 1, (uint64_t)v1295);
            uint64_t v508 = (uint64_t)v2593;
            uint64_t v333 = v2615;
            v334 = v2572;
          }
          uint64_t v1624 = v333[12];
          v1625 = (void *)(v508 + v1624);
          uint64_t v1626 = (void *)((char *)v334 + v1624);
          uint64_t v1627 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1626, 1, (uint64_t)v1627))
          {
            uint64_t v1628 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v1625, v1626, *(void *)(*(void *)(v1628 - 8) + 64));
          }
          else
          {
            uint64_t v1629 = v1626[1];
            void *v1625 = *v1626;
            v1625[1] = v1629;
            uint64_t v1630 = v1626[3];
            v1625[2] = v1626[2];
            v1625[3] = v1630;
            uint64_t v2526 = v1626[5];
            v1625[4] = v1626[4];
            v1625[5] = v2526;
            uint64_t v1631 = v1626[7];
            v1625[6] = v1626[6];
            v1625[7] = v1631;
            uint64_t v1632 = v1626[9];
            v1625[8] = v1626[8];
            v1625[9] = v1632;
            uint64_t v1633 = v1626[11];
            v1625[10] = v1626[10];
            v1625[11] = v1633;
            *((unsigned char *)v1625 + 96) = *((unsigned char *)v1626 + 96);
            uint64_t v1634 = v1626[14];
            v1625[13] = v1626[13];
            v1625[14] = v1634;
            uint64_t v1635 = v1626[16];
            v1625[15] = v1626[15];
            v1625[16] = v1635;
            uint64_t v1636 = v1627[14];
            uint64_t v2558 = (char *)v1625 + v1636;
            uint64_t v1637 = (char *)v1626 + v1636;
            uint64_t v1638 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1637, 1, v1638))
            {
              uint64_t v1639 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2558, v1637, *(void *)(*(void *)(v1639 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1638 - 8) + 16))(v2558, v1637, v1638);
              __swift_storeEnumTagSinglePayload((uint64_t)v2558, 0, 1, v1638);
            }
            uint64_t v1692 = v1627[15];
            v1693 = (char *)v1625 + v1692;
            uint64_t v1694 = (char *)v1626 + v1692;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1626 + v1692, 1, v1638))
            {
              uint64_t v1695 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1693, v1694, *(void *)(*(void *)(v1695 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1638 - 8) + 16))(v1693, v1694, v1638);
              __swift_storeEnumTagSinglePayload((uint64_t)v1693, 0, 1, v1638);
            }
            uint64_t v1755 = v1627[16];
            uint64_t v1756 = (void *)((char *)v1625 + v1755);
            uint64_t v1757 = (void *)((char *)v1626 + v1755);
            uint64_t v1758 = v1757[1];
            *uint64_t v1756 = *v1757;
            v1756[1] = v1758;
            uint64_t v1759 = v1627[17];
            v1760 = (void *)((char *)v1625 + v1759);
            uint64_t v1761 = (void *)((char *)v1626 + v1759);
            uint64_t v1762 = v1761[1];
            void *v1760 = *v1761;
            v1760[1] = v1762;
            uint64_t v1763 = v1627[18];
            v1764 = (void *)((char *)v1625 + v1763);
            uint64_t v1765 = (void *)((char *)v1626 + v1763);
            uint64_t v2560 = v1765[1];
            void *v1764 = *v1765;
            v1764[1] = v2560;
            uint64_t v1766 = v1627[19];
            v1767 = (void *)((char *)v1625 + v1766);
            v1768 = (void *)((char *)v1626 + v1766);
            uint64_t v2530 = v1768[1];
            void *v1767 = *v1768;
            v1767[1] = v2530;
            uint64_t v1769 = v1627[20];
            v1770 = (void *)((char *)v1625 + v1769);
            v1771 = (void *)((char *)v1626 + v1769);
            v2469 = (void *)v1771[1];
            void *v1770 = *v1771;
            v1770[1] = v2469;
            *(void *)((char *)v1625 + v1627[21]) = *(void *)((char *)v1626 + v1627[21]);
            *(void *)((char *)v1625 + v1627[22]) = *(void *)((char *)v1626 + v1627[22]);
            uint64_t v1772 = v1627[23];
            v1773 = (char *)v1625 + v1772;
            v1774 = (char *)v1626 + v1772;
            *(void *)v1773 = *(void *)v1774;
            v1773[8] = v1774[8];
            uint64_t v1775 = v1627[24];
            v1776 = (char *)v1625 + v1775;
            v1777 = (char *)v1626 + v1775;
            *(void *)v1776 = *(void *)v1777;
            v1776[8] = v1777[8];
            uint64_t v1778 = v1627[25];
            v1779 = (void *)((char *)v1625 + v1778);
            v1780 = (void *)((char *)v1626 + v1778);
            uint64_t v1781 = v1780[1];
            void *v1779 = *v1780;
            v1779[1] = v1781;
            uint64_t v1782 = v1627[26];
            v1783 = (void *)((char *)v1625 + v1782);
            uint64_t v1784 = (void *)((char *)v1626 + v1782);
            uint64_t v1785 = v1784[1];
            void *v1783 = *v1784;
            v1783[1] = v1785;
            uint64_t v1786 = v1627[27];
            v1787 = (void *)((char *)v1625 + v1786);
            uint64_t v1788 = (void *)((char *)v1626 + v1786);
            uint64_t v1789 = v1788[1];
            void *v1787 = *v1788;
            v1787[1] = v1789;
            uint64_t v1790 = v1627[28];
            v1791 = (void *)((char *)v1625 + v1790);
            uint64_t v1792 = (void *)((char *)v1626 + v1790);
            uint64_t v1793 = v1792[1];
            void *v1791 = *v1792;
            v1791[1] = v1793;
            uint64_t v1794 = v1627[29];
            v1795 = (char *)v1625 + v1794;
            uint64_t v1796 = (char *)v1626 + v1794;
            *(void *)v1795 = *(void *)v1796;
            v1795[8] = v1796[8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1625, 0, 1, (uint64_t)v1627);
            uint64_t v508 = (uint64_t)v2593;
            uint64_t v333 = v2615;
            v334 = v2572;
          }
          uint64_t v1797 = v333[13];
          v1798 = (void *)(v508 + v1797);
          v1799 = (void *)((char *)v334 + v1797);
          uint64_t v1800 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1799, 1, (uint64_t)v1800))
          {
            uint64_t v1801 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v1798, v1799, *(void *)(*(void *)(v1801 - 8) + 64));
          }
          else
          {
            uint64_t v1802 = v1799[1];
            void *v1798 = *v1799;
            v1798[1] = v1802;
            uint64_t v1803 = v1799[3];
            v1798[2] = v1799[2];
            v1798[3] = v1803;
            uint64_t v2561 = v1799[5];
            v1798[4] = v1799[4];
            v1798[5] = v2561;
            uint64_t v2531 = v1799[7];
            v1798[6] = v1799[6];
            v1798[7] = v2531;
            uint64_t v1804 = v1799[9];
            v1798[8] = v1799[8];
            v1798[9] = v1804;
            uint64_t v1805 = v1799[11];
            v1798[10] = v1799[10];
            v1798[11] = v1805;
            *((unsigned char *)v1798 + 96) = *((unsigned char *)v1799 + 96);
            uint64_t v1806 = v1799[14];
            v1798[13] = v1799[13];
            v1798[14] = v1806;
            uint64_t v1807 = v1799[16];
            v1798[15] = v1799[15];
            v1798[16] = v1807;
            uint64_t v1808 = v1800[14];
            uint64_t v2575 = (char *)v1798 + v1808;
            uint64_t v1809 = (char *)v1799 + v1808;
            uint64_t v2470 = (void *)type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1809, 1, (uint64_t)v2470))
            {
              uint64_t v1810 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2575, v1809, *(void *)(*(void *)(v1810 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v2470 - 1) + 16))(v2575, v1809, v2470);
              __swift_storeEnumTagSinglePayload((uint64_t)v2575, 0, 1, (uint64_t)v2470);
            }
            uint64_t v2041 = v1800[15];
            uint64_t v2042 = (void *)((char *)v1798 + v2041);
            uint64_t v2043 = (void *)((char *)v1799 + v2041);
            uint64_t v2044 = v2043[1];
            *uint64_t v2042 = *v2043;
            v2042[1] = v2044;
            uint64_t v2045 = v1800[16];
            v2046 = (void *)((char *)v1798 + v2045);
            uint64_t v2047 = (void *)((char *)v1799 + v2045);
            uint64_t v2048 = v2047[1];
            void *v2046 = *v2047;
            v2046[1] = v2048;
            uint64_t v2049 = v1800[17];
            v2050 = (void *)((char *)v1798 + v2049);
            uint64_t v2051 = (void *)((char *)v1799 + v2049);
            uint64_t v2052 = v2051[1];
            void *v2050 = *v2051;
            v2050[1] = v2052;
            uint64_t v2053 = v1800[18];
            v2054 = (void *)((char *)v1798 + v2053);
            uint64_t v2055 = (void *)((char *)v1799 + v2053);
            uint64_t v2581 = v2055[1];
            void *v2054 = *v2055;
            v2054[1] = v2581;
            uint64_t v2056 = v1800[19];
            v2057 = (void *)((char *)v1798 + v2056);
            v2058 = (void *)((char *)v1799 + v2056);
            uint64_t v2059 = v2058[1];
            void *v2057 = *v2058;
            v2057[1] = v2059;
            *(void *)((char *)v1798 + v1800[20]) = *(void *)((char *)v1799 + v1800[20]);
            uint64_t v2060 = v1800[21];
            v2061 = (void *)((char *)v1798 + v2060);
            uint64_t v2062 = (void *)((char *)v1799 + v2060);
            uint64_t v2063 = v2062[1];
            void *v2061 = *v2062;
            v2061[1] = v2063;
            uint64_t v2064 = v1800[22];
            v2065 = (void *)((char *)v1798 + v2064);
            uint64_t v2066 = (void *)((char *)v1799 + v2064);
            uint64_t v2067 = v2066[1];
            void *v2065 = *v2066;
            v2065[1] = v2067;
            uint64_t v2068 = v1800[23];
            v2069 = (void *)((char *)v1798 + v2068);
            uint64_t v2070 = (void *)((char *)v1799 + v2068);
            uint64_t v2071 = v2070[1];
            void *v2069 = *v2070;
            v2069[1] = v2071;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1798, 0, 1, (uint64_t)v1800);
            uint64_t v508 = (uint64_t)v2593;
            uint64_t v333 = v2615;
          }
          __swift_storeEnumTagSinglePayload(v508, 0, 1, (uint64_t)v333);
        }
        uint64_t v2072 = v2652[18];
        v2073 = (void *)((char *)v2637 + v2072);
        uint64_t v2074 = &v2680[v2072];
        uint64_t v2075 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2074, 1, (uint64_t)v2075))
        {
          uint64_t v2076 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v2073, v2074, *(void *)(*(void *)(v2076 - 8) + 64));
        }
        else
        {
          uint64_t v2077 = *((void *)v2074 + 1);
          void *v2073 = *(void *)v2074;
          v2073[1] = v2077;
          uint64_t v2078 = *((void *)v2074 + 3);
          v2073[2] = *((void *)v2074 + 2);
          v2073[3] = v2078;
          uint64_t v2079 = *((void *)v2074 + 5);
          v2073[4] = *((void *)v2074 + 4);
          v2073[5] = v2079;
          uint64_t v2080 = *((void *)v2074 + 7);
          v2073[6] = *((void *)v2074 + 6);
          v2073[7] = v2080;
          uint64_t v2081 = *((void *)v2074 + 9);
          v2073[8] = *((void *)v2074 + 8);
          v2073[9] = v2081;
          uint64_t v2082 = *((void *)v2074 + 11);
          v2073[10] = *((void *)v2074 + 10);
          v2073[11] = v2082;
          uint64_t v2083 = v2075[10];
          uint64_t v2618 = (char *)v2073 + v2083;
          uint64_t v2084 = &v2074[v2083];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2084, 1, v2625))
          {
            uint64_t v2085 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2618, v2084, *(void *)(*(void *)(v2085 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v2618, v2084, v2625);
            __swift_storeEnumTagSinglePayload((uint64_t)v2618, 0, 1, v2625);
          }
          uint64_t v2086 = v2075[11];
          v2087 = (char *)v2073 + v2086;
          uint64_t v2088 = &v2074[v2086];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v2074[v2086], 1, v2625))
          {
            uint64_t v2089 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2087, v2088, *(void *)(*(void *)(v2089 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v2087, v2088, v2625);
            __swift_storeEnumTagSinglePayload((uint64_t)v2087, 0, 1, v2625);
          }
          uint64_t v2090 = v2075[12];
          v2091 = (void *)((char *)v2073 + v2090);
          uint64_t v2092 = &v2074[v2090];
          uint64_t v2093 = *((void *)v2092 + 1);
          void *v2091 = *(void *)v2092;
          v2091[1] = v2093;
          uint64_t v2094 = v2075[13];
          v2095 = (void *)((char *)v2073 + v2094);
          uint64_t v2096 = &v2074[v2094];
          uint64_t v2097 = *((void *)v2096 + 1);
          void *v2095 = *(void *)v2096;
          v2095[1] = v2097;
          uint64_t v2098 = v2075[14];
          v2099 = (void *)((char *)v2073 + v2098);
          uint64_t v2100 = &v2074[v2098];
          uint64_t v2101 = *((void *)v2100 + 1);
          void *v2099 = *(void *)v2100;
          v2099[1] = v2101;
          uint64_t v2102 = v2075[15];
          v2103 = (char *)v2073 + v2102;
          uint64_t v2104 = &v2074[v2102];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2104, 1, v2625))
          {
            uint64_t v2105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2103, v2104, *(void *)(*(void *)(v2105 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v2103, v2104, v2625);
            __swift_storeEnumTagSinglePayload((uint64_t)v2103, 0, 1, v2625);
          }
          uint64_t v2106 = v2075[16];
          v2107 = (void *)((char *)v2073 + v2106);
          uint64_t v2108 = &v2074[v2106];
          uint64_t v2109 = *((void *)v2108 + 1);
          void *v2107 = *(void *)v2108;
          v2107[1] = v2109;
          uint64_t v2110 = v2075[17];
          v2111 = (void *)((char *)v2073 + v2110);
          uint64_t v2112 = &v2074[v2110];
          uint64_t v2113 = *((void *)v2112 + 1);
          void *v2111 = *(void *)v2112;
          v2111[1] = v2113;
          uint64_t v2114 = v2075[18];
          v2115 = (void *)((char *)v2073 + v2114);
          uint64_t v2116 = &v2074[v2114];
          uint64_t v2117 = *((void *)v2116 + 1);
          void *v2115 = *(void *)v2116;
          v2115[1] = v2117;
          uint64_t v2118 = v2075[19];
          v2119 = (void *)((char *)v2073 + v2118);
          uint64_t v2120 = &v2074[v2118];
          uint64_t v2121 = *((void *)v2120 + 1);
          void *v2119 = *(void *)v2120;
          v2119[1] = v2121;
          uint64_t v2122 = v2075[20];
          v2123 = (void *)((char *)v2073 + v2122);
          uint64_t v2124 = &v2074[v2122];
          uint64_t v2125 = *((void *)v2124 + 1);
          void *v2123 = *(void *)v2124;
          v2123[1] = v2125;
          uint64_t v2126 = v2075[21];
          v2127 = (void *)((char *)v2073 + v2126);
          uint64_t v2128 = &v2074[v2126];
          uint64_t v2129 = *((void *)v2128 + 1);
          void *v2127 = *(void *)v2128;
          v2127[1] = v2129;
          uint64_t v2130 = v2075[22];
          v2131 = (void *)((char *)v2073 + v2130);
          uint64_t v2132 = &v2074[v2130];
          uint64_t v2133 = *((void *)v2132 + 1);
          void *v2131 = *(void *)v2132;
          v2131[1] = v2133;
          uint64_t v2134 = v2075[23];
          v2135 = (void *)((char *)v2073 + v2134);
          uint64_t v2136 = &v2074[v2134];
          uint64_t v2137 = *((void *)v2136 + 1);
          void *v2135 = *(void *)v2136;
          v2135[1] = v2137;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2073, 0, 1, (uint64_t)v2075);
        }
        uint64_t v2138 = v2652[19];
        v2139 = (void *)((char *)v2637 + v2138);
        uint64_t v2140 = &v2680[v2138];
        uint64_t v2141 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2140, 1, (uint64_t)v2141))
        {
          uint64_t v2142 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v2139, v2140, *(void *)(*(void *)(v2142 - 8) + 64));
        }
        else
        {
          uint64_t v2143 = *((void *)v2140 + 1);
          void *v2139 = *(void *)v2140;
          v2139[1] = v2143;
          uint64_t v2144 = *((void *)v2140 + 3);
          v2139[2] = *((void *)v2140 + 2);
          v2139[3] = v2144;
          uint64_t v2145 = *((void *)v2140 + 5);
          v2139[4] = *((void *)v2140 + 4);
          v2139[5] = v2145;
          uint64_t v2146 = *((void *)v2140 + 7);
          v2139[6] = *((void *)v2140 + 6);
          v2139[7] = v2146;
          uint64_t v2147 = *((void *)v2140 + 9);
          v2139[8] = *((void *)v2140 + 8);
          v2139[9] = v2147;
          uint64_t v2602 = *((void *)v2140 + 11);
          v2139[10] = *((void *)v2140 + 10);
          v2139[11] = v2602;
          uint64_t v2148 = v2141[11];
          v2619 = (char *)v2139 + v2148;
          uint64_t v2149 = &v2140[v2148];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2149, 1, v2625))
          {
            uint64_t v2150 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2619, v2149, *(void *)(*(void *)(v2150 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v2619, v2149, v2625);
            __swift_storeEnumTagSinglePayload((uint64_t)v2619, 0, 1, v2625);
          }
          uint64_t v2151 = v2141[12];
          v2152 = (void *)((char *)v2139 + v2151);
          uint64_t v2153 = &v2140[v2151];
          uint64_t v2154 = *((void *)v2153 + 1);
          void *v2152 = *(void *)v2153;
          v2152[1] = v2154;
          *(void *)((char *)v2139 + v2141[13]) = *(void *)&v2140[v2141[13]];
          uint64_t v2155 = v2141[14];
          v2156 = (char *)v2139 + v2155;
          uint64_t v2157 = &v2140[v2155];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2157, 1, v2625))
          {
            uint64_t v2158 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2156, v2157, *(void *)(*(void *)(v2158 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v2156, v2157, v2625);
            __swift_storeEnumTagSinglePayload((uint64_t)v2156, 0, 1, v2625);
          }
          *(void *)((char *)v2139 + v2141[15]) = *(void *)&v2140[v2141[15]];
          *(void *)((char *)v2139 + v2141[16]) = *(void *)&v2140[v2141[16]];
          uint64_t v2159 = v2141[17];
          v2160 = (void *)((char *)v2139 + v2159);
          uint64_t v2161 = &v2140[v2159];
          uint64_t v2162 = *((void *)v2161 + 1);
          void *v2160 = *(void *)v2161;
          v2160[1] = v2162;
          *(void *)((char *)v2139 + v2141[18]) = *(void *)&v2140[v2141[18]];
          *(void *)((char *)v2139 + v2141[19]) = *(void *)&v2140[v2141[19]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2139, 0, 1, (uint64_t)v2141);
        }
        uint64_t v2163 = v2652[20];
        v2164 = (void *)((char *)v2637 + v2163);
        uint64_t v2165 = &v2680[v2163];
        uint64_t v2166 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2165, 1, (uint64_t)v2166))
        {
          uint64_t v2167 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v2164, v2165, *(void *)(*(void *)(v2167 - 8) + 64));
          uint64_t v11 = v2637;
        }
        else
        {
          uint64_t v2168 = *((void *)v2165 + 1);
          void *v2164 = *(void *)v2165;
          v2164[1] = v2168;
          uint64_t v2169 = *((void *)v2165 + 3);
          v2164[2] = *((void *)v2165 + 2);
          v2164[3] = v2169;
          uint64_t v2170 = *((void *)v2165 + 5);
          v2164[4] = *((void *)v2165 + 4);
          v2164[5] = v2170;
          uint64_t v2171 = *((void *)v2165 + 7);
          v2164[6] = *((void *)v2165 + 6);
          v2164[7] = v2171;
          uint64_t v2172 = v2166[8];
          uint64_t v2620 = (char *)v2164 + v2172;
          uint64_t v2173 = &v2165[v2172];
          uint64_t v2174 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2173, 1, v2174))
          {
            uint64_t v2175 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2620, v2173, *(void *)(*(void *)(v2175 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2174 - 8) + 16))(v2620, v2173, v2174);
            __swift_storeEnumTagSinglePayload((uint64_t)v2620, 0, 1, v2174);
          }
          uint64_t v2176 = v2166[9];
          uint64_t v2177 = (void *)((char *)v2164 + v2176);
          uint64_t v2178 = &v2165[v2176];
          uint64_t v2179 = *((void *)v2178 + 1);
          *uint64_t v2177 = *(void *)v2178;
          v2177[1] = v2179;
          uint64_t v2180 = v2166[10];
          v2181 = (void *)((char *)v2164 + v2180);
          uint64_t v2182 = &v2165[v2180];
          uint64_t v2183 = *((void *)v2182 + 1);
          void *v2181 = *(void *)v2182;
          v2181[1] = v2183;
          uint64_t v2184 = v2166[11];
          v2185 = (void *)((char *)v2164 + v2184);
          uint64_t v2186 = &v2165[v2184];
          uint64_t v2187 = *((void *)v2186 + 1);
          void *v2185 = *(void *)v2186;
          v2185[1] = v2187;
          uint64_t v2188 = v2166[12];
          v2189 = (char *)v2164 + v2188;
          uint64_t v2190 = &v2165[v2188];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2190, 1, v2625))
          {
            uint64_t v2191 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2189, v2190, *(void *)(*(void *)(v2191 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v2189, v2190, v2625);
            __swift_storeEnumTagSinglePayload((uint64_t)v2189, 0, 1, v2625);
          }
          uint64_t v11 = v2637;
          uint64_t v2192 = v2166[13];
          v2193 = (char *)v2164 + v2192;
          uint64_t v2194 = &v2165[v2192];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v2165[v2192], 1, v2625))
          {
            uint64_t v2195 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2193, v2194, *(void *)(*(void *)(v2195 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2625 - 8) + 16))(v2193, v2194, v2625);
            __swift_storeEnumTagSinglePayload((uint64_t)v2193, 0, 1, v2625);
          }
          uint64_t v2196 = v2166[14];
          v2197 = (char *)v2164 + v2196;
          uint64_t v2198 = &v2165[v2196];
          *(void *)v2197 = *(void *)v2198;
          v2197[8] = v2198[8];
          uint64_t v2199 = v2166[15];
          v2200 = (void *)((char *)v2164 + v2199);
          v2201 = &v2165[v2199];
          uint64_t v2202 = *((void *)v2201 + 1);
          void *v2200 = *(void *)v2201;
          v2200[1] = v2202;
          uint64_t v2203 = v2166[16];
          v2204 = (void *)((char *)v2164 + v2203);
          uint64_t v2205 = &v2165[v2203];
          uint64_t v2206 = *((void *)v2205 + 1);
          void *v2204 = *(void *)v2205;
          v2204[1] = v2206;
          uint64_t v2207 = v2166[17];
          v2208 = (void *)((char *)v2164 + v2207);
          uint64_t v2209 = &v2165[v2207];
          uint64_t v2210 = *((void *)v2209 + 1);
          void *v2208 = *(void *)v2209;
          v2208[1] = v2210;
          uint64_t v2211 = v2166[18];
          v2212 = (void *)((char *)v2164 + v2211);
          uint64_t v2213 = &v2165[v2211];
          uint64_t v2214 = *((void *)v2213 + 1);
          void *v2212 = *(void *)v2213;
          v2212[1] = v2214;
          uint64_t v2215 = v2166[19];
          v2216 = (void *)((char *)v2164 + v2215);
          uint64_t v2217 = &v2165[v2215];
          uint64_t v2218 = *((void *)v2217 + 1);
          void *v2216 = *(void *)v2217;
          v2216[1] = v2218;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2164, 0, 1, (uint64_t)v2166);
        }
        uint64_t v2040 = v2652[21];
        goto LABEL_535;
      case 4u:
        uint64_t v2667 = v13;
        uint64_t v66 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v66;
        uint64_t v67 = v12[3];
        v11[2] = v12[2];
        v11[3] = v67;
        uint64_t v68 = v12[5];
        v11[4] = v12[4];
        v11[5] = v68;
        uint64_t v69 = v12[7];
        v11[6] = v12[6];
        v11[7] = v69;
        uint64_t v70 = type metadata accessor for NoteDocument(0);
        uint64_t v71 = *(int *)(v70 + 32);
        uint64_t v2653 = (char *)v11 + v71;
        uint64_t v72 = (char *)v12 + v71;
        uint64_t v73 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v72, 1, v73))
        {
          uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2653, v72, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v2653, v72, v73);
          __swift_storeEnumTagSinglePayload((uint64_t)v2653, 0, 1, v73);
        }
        uint64_t v13 = v2667;
        uint64_t v336 = *(int *)(v70 + 36);
        goto LABEL_145;
      case 5u:
        uint64_t v2668 = v13;
        uint64_t v75 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v75;
        uint64_t v76 = v12[3];
        v11[2] = v12[2];
        v11[3] = v76;
        uint64_t v77 = v12[5];
        v11[4] = v12[4];
        v11[5] = v77;
        uint64_t v78 = (int *)type metadata accessor for Reminder(0);
        uint64_t v79 = v78[7];
        uint64_t v80 = (char *)v11 + v79;
        uint64_t v81 = (char *)v12 + v79;
        uint64_t v82 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v81, 1, v82))
        {
          uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v80, v81, *(void *)(*(void *)(v83 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16))(v80, v81, v82);
          __swift_storeEnumTagSinglePayload((uint64_t)v80, 0, 1, v82);
        }
        uint64_t v13 = v2668;
        uint64_t v337 = v78[8];
        v338 = (char *)v11 + v337;
        uint64_t v339 = (char *)v12 + v337;
        if (__swift_getEnumTagSinglePayload((uint64_t)v12 + v337, 1, v82))
        {
          uint64_t v340 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v338, v339, *(void *)(*(void *)(v340 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16))(v338, v339, v82);
          __swift_storeEnumTagSinglePayload((uint64_t)v338, 0, 1, v82);
        }
        *((unsigned char *)v11 + v78[9]) = *((unsigned char *)v12 + v78[9]);
        uint64_t v510 = v78[10];
        uint64_t v511 = (void *)((char *)v11 + v510);
        uint64_t v512 = (void *)((char *)v12 + v510);
        uint64_t v513 = v512[1];
        *uint64_t v511 = *v512;
        v511[1] = v513;
        uint64_t v514 = v78[11];
        v515 = (void *)((char *)v11 + v514);
        uint64_t v516 = (void *)((char *)v12 + v514);
        uint64_t v517 = v516[1];
        void *v515 = *v516;
        v515[1] = v517;
        uint64_t v518 = v78[12];
        uint64_t v106 = (char *)v11 + v518;
        uint64_t v107 = (char *)v12 + v518;
        uint64_t v108 = type metadata accessor for URL();
        goto LABEL_131;
      case 6u:
        uint64_t v2669 = v13;
        uint64_t v84 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v84;
        uint64_t v85 = v12[3];
        v11[2] = v12[2];
        v11[3] = v85;
        uint64_t v86 = v12[5];
        v11[4] = v12[4];
        v11[5] = v86;
        uint64_t v87 = v12[7];
        v11[6] = v12[6];
        v11[7] = v87;
        uint64_t v88 = type metadata accessor for PhoneHistory(0);
        uint64_t v89 = *(int *)(v88 + 40);
        uint64_t v2638 = (int *)v88;
        uint64_t v2654 = (char *)v11 + v89;
        uint64_t v90 = (char *)v12 + v89;
        uint64_t v91 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, v91))
        {
          uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2654, v90, *(void *)(*(void *)(v92 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16))(v2654, v90, v91);
          __swift_storeEnumTagSinglePayload((uint64_t)v2654, 0, 1, v91);
        }
        uint64_t v13 = v2669;
        uint64_t v341 = v2638[11];
        v342 = (void *)((char *)v11 + v341);
        uint64_t v343 = &v2680[v341];
        uint64_t v344 = *((void *)v343 + 1);
        void *v342 = *(void *)v343;
        v342[1] = v344;
        uint64_t v345 = v2638[12];
        v346 = (void *)((char *)v11 + v345);
        uint64_t v347 = &v2680[v345];
        uint64_t v348 = *((void *)v347 + 1);
        void *v346 = *(void *)v347;
        v346[1] = v348;
        uint64_t v349 = v2638[13];
        uint64_t v106 = (char *)v11 + v349;
        uint64_t v107 = &v2680[v349];
        uint64_t v108 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        goto LABEL_132;
      case 7u:
        uint64_t v2670 = v13;
        uint64_t v93 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v93;
        uint64_t v94 = v12[3];
        v11[2] = v12[2];
        v11[3] = v94;
        uint64_t v95 = v12[5];
        v11[4] = v12[4];
        v11[5] = v95;
        uint64_t v96 = type metadata accessor for VoicemailTranscript(0);
        uint64_t v97 = *(int *)(v96 + 28);
        uint64_t v98 = (char *)v11 + v97;
        uint64_t v99 = (char *)v12 + v97;
        uint64_t v100 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v99, 1, v100))
        {
          uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
          __swift_storeEnumTagSinglePayload((uint64_t)v98, 0, 1, v100);
        }
        uint64_t v13 = v2670;
        uint64_t v350 = *(int *)(v96 + 32);
        goto LABEL_150;
      case 8u:
        uint64_t v102 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v102;
        uint64_t v103 = v12[3];
        v11[2] = v12[2];
        v11[3] = v103;
        uint64_t v104 = v12[5];
        v11[4] = v12[4];
        v11[5] = v104;
        uint64_t v105 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
        uint64_t v106 = (char *)v11 + v105;
        uint64_t v107 = (char *)v12 + v105;
        uint64_t v108 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
LABEL_131:
        swift_bridgeObjectRetain();
LABEL_132:
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v107, 1, v108))
        {
          uint64_t v519 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v106, v107, *(void *)(*(void *)(v519 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
          __swift_storeEnumTagSinglePayload((uint64_t)v106, 0, 1, v108);
        }
        goto LABEL_539;
      case 9u:
        uint64_t v109 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v109;
        uint64_t v110 = v12[3];
        v11[2] = v12[2];
        v11[3] = v110;
        uint64_t v111 = (int *)type metadata accessor for VoiceMemo(0);
        uint64_t v112 = v111[6];
        uint64_t v113 = (char *)v11 + v112;
        uint64_t v114 = (char *)v12 + v112;
        uint64_t v115 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v114, 1, v115))
        {
          uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v113, v114, *(void *)(*(void *)(v116 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16))(v113, v114, v115);
          __swift_storeEnumTagSinglePayload((uint64_t)v113, 0, 1, v115);
        }
        uint64_t v351 = (char *)v12;
        uint64_t v352 = v111[7];
        uint64_t v353 = (char *)v11 + v352;
        v354 = (char *)v12 + v352;
        *(void *)uint64_t v353 = *(void *)v354;
        v353[8] = v354[8];
        uint64_t v355 = v111[8];
        goto LABEL_153;
      case 0xAu:
        uint64_t v117 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v117;
        uint64_t v118 = v12[3];
        v11[2] = v12[2];
        v11[3] = v118;
        uint64_t v119 = (int *)type metadata accessor for Safari(0);
        uint64_t v120 = v119[6];
        uint64_t v121 = (char *)v11 + v120;
        uint64_t v122 = (char *)v12 + v120;
        uint64_t v73 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v122, 1, v73))
        {
          uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v121, v122, *(void *)(*(void *)(v123 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v121, v122, v73);
          __swift_storeEnumTagSinglePayload((uint64_t)v121, 0, 1, v73);
        }
        uint64_t v356 = v119[7];
        v357 = (void *)((char *)v11 + v356);
        uint64_t v358 = (void *)((char *)v12 + v356);
        uint64_t v359 = v358[1];
        void *v357 = *v358;
        v357[1] = v359;
        uint64_t v360 = v119[8];
        uint64_t v361 = (void *)((char *)v11 + v360);
        size_t v362 = (void *)((char *)v12 + v360);
        uint64_t v363 = v362[1];
        *uint64_t v361 = *v362;
        v361[1] = v363;
        uint64_t v364 = v119[9];
        uint64_t v365 = (char *)v11 + v364;
        uint64_t v366 = (uint64_t)v12 + v364;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!__swift_getEnumTagSinglePayload(v366, 1, v73)) {
          goto LABEL_135;
        }
        size_t v367 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                     - 8)
                         + 64);
        uint64_t v368 = v365;
        uint64_t v369 = (const void *)v366;
        goto LABEL_156;
      case 0xBu:
        uint64_t v124 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v124;
        uint64_t v125 = (void *)v12[2];
        v11[2] = v125;
        swift_bridgeObjectRetain();
        id v126 = v125;
        goto LABEL_539;
      case 0xCu:
        uint64_t v2671 = v13;
        uint64_t v127 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v127;
        uint64_t v128 = v12[3];
        v11[2] = v12[2];
        v11[3] = v128;
        uint64_t v129 = v12[5];
        v11[4] = v12[4];
        v11[5] = v129;
        uint64_t v130 = (int *)type metadata accessor for WalletTransaction(0);
        uint64_t v131 = v130[7];
        v132 = (char *)v11 + v131;
        uint64_t v133 = (char *)v12 + v131;
        uint64_t v134 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v133, 1, v134))
        {
          uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16))(v132, v133, v134);
          __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v134);
        }
        uint64_t v13 = v2671;
        uint64_t v370 = v130[8];
        v371 = (void *)((char *)v11 + v370);
        uint64_t v372 = (void *)((char *)v12 + v370);
        uint64_t v373 = v372[1];
        void *v371 = *v372;
        v371[1] = v373;
        uint64_t v374 = v130[9];
        v375 = (void *)((char *)v11 + v374);
        v376 = (void *)((char *)v12 + v374);
        uint64_t v377 = v376[1];
        void *v375 = *v376;
        v375[1] = v377;
        uint64_t v378 = v130[10];
        v379 = (void *)((char *)v11 + v378);
        v380 = (void *)((char *)v12 + v378);
        uint64_t v381 = v380[1];
        void *v379 = *v380;
        v379[1] = v381;
        uint64_t v382 = v130[11];
        v383 = (char *)v11 + v382;
        v384 = (char *)v12 + v382;
        *(_OWORD *)v383 = *(_OWORD *)v384;
        *(void *)(v383 + 13) = *(void *)(v384 + 13);
        uint64_t v385 = v130[12];
        uint64_t v386 = (void *)((char *)v11 + v385);
        v387 = (void *)((char *)v12 + v385);
        uint64_t v388 = v387[1];
        *uint64_t v386 = *v387;
        v386[1] = v388;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_84;
      case 0xDu:
        uint64_t v2672 = v13;
        uint64_t v136 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v136;
        uint64_t v137 = v12[3];
        v11[2] = v12[2];
        v11[3] = v137;
        uint64_t v138 = v12[5];
        v11[4] = v12[4];
        v11[5] = v138;
        uint64_t v139 = (int *)type metadata accessor for WalletPass(0);
        uint64_t v140 = v139[7];
        v141 = (char *)v11 + v140;
        uint64_t v142 = (char *)v12 + v140;
        uint64_t v143 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v143))
        {
          uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v141, v142, *(void *)(*(void *)(v144 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16))(v141, v142, v143);
          __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v143);
        }
        uint64_t v13 = v2672;
        uint64_t v389 = v139[8];
        v390 = (void *)((char *)v11 + v389);
        v391 = (void *)((char *)v12 + v389);
        uint64_t v392 = v391[1];
        void *v390 = *v391;
        v390[1] = v392;
        *(void *)((char *)v11 + v139[9]) = *(void *)((char *)v12 + v139[9]);
LABEL_84:
        swift_bridgeObjectRetain();
        goto LABEL_118;
      case 0xEu:
        uint64_t v145 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v145;
        uint64_t v146 = v12[3];
        v11[2] = v12[2];
        v11[3] = v146;
        uint64_t v147 = v12[5];
        v11[4] = v12[4];
        v11[5] = v147;
        uint64_t v148 = v12[7];
        v11[6] = v12[6];
        v11[7] = v148;
        uint64_t v149 = v12[9];
        v11[8] = v12[8];
        v11[9] = v149;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_118;
      case 0xFu:
        uint64_t v2673 = v13;
        uint64_t v150 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v150;
        uint64_t v151 = v12[3];
        v11[2] = v12[2];
        v11[3] = v151;
        uint64_t v152 = v12[5];
        v11[4] = v12[4];
        v11[5] = v152;
        uint64_t v2655 = v12[7];
        v11[6] = v12[6];
        v11[7] = v2655;
        uint64_t v2639 = v12[9];
        v11[8] = v12[8];
        v11[9] = v2639;
        uint64_t v2626 = v12[11];
        v11[10] = v12[10];
        v11[11] = v2626;
        *((unsigned char *)v11 + 96) = *((unsigned char *)v12 + 96);
        uint64_t v153 = v12[14];
        v11[13] = v12[13];
        v11[14] = v153;
        uint64_t v154 = (int *)type metadata accessor for FlightReservation(0);
        uint64_t v155 = v154[13];
        uint64_t v2608 = (char *)v11 + v155;
        uint64_t v156 = (char *)v12 + v155;
        uint64_t v157 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v156, 1, v157))
        {
          uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v2608, v156, *(void *)(*(void *)(v158 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16))(v2608, v156, v157);
          __swift_storeEnumTagSinglePayload((uint64_t)v2608, 0, 1, v157);
        }
        uint64_t v393 = v154[14];
        v394 = (char *)v11 + v393;
        v395 = &v2680[v393];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v2680[v393], 1, v157))
        {
          uint64_t v396 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v394, v395, *(void *)(*(void *)(v396 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16))(v394, v395, v157);
          __swift_storeEnumTagSinglePayload((uint64_t)v394, 0, 1, v157);
        }
        uint64_t v520 = v154[15];
        uint64_t v521 = (void *)((char *)v11 + v520);
        uint64_t v522 = &v2680[v520];
        uint64_t v523 = *((void *)v522 + 1);
        *uint64_t v521 = *(void *)v522;
        v521[1] = v523;
        uint64_t v524 = v154[16];
        v525 = (void *)((char *)v11 + v524);
        uint64_t v526 = &v2680[v524];
        uint64_t v527 = *((void *)v526 + 1);
        void *v525 = *(void *)v526;
        v525[1] = v527;
        uint64_t v528 = v154[17];
        v529 = (void *)((char *)v11 + v528);
        uint64_t v530 = &v2680[v528];
        uint64_t v531 = *((void *)v530 + 1);
        void *v529 = *(void *)v530;
        v529[1] = v531;
        uint64_t v532 = v154[18];
        v2646 = &v2680[v532];
        uint64_t v2662 = (char *)v11 + v532;
        uint64_t v533 = type metadata accessor for DateComponents();
        uint64_t v534 = *(void (**)(char *, char *, uint64_t))(*(void *)(v533 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v534(v2662, v2646, v533);
        v534((char *)v11 + v154[19], &v2680[v154[19]], v533);
        uint64_t v535 = v154[20];
        uint64_t v536 = (void *)((char *)v11 + v535);
        v537 = &v2680[v535];
        uint64_t v2663 = *((void *)v537 + 1);
        *uint64_t v536 = *(void *)v537;
        v536[1] = v2663;
        uint64_t v538 = v154[21];
        v539 = (void *)((char *)v11 + v538);
        v540 = &v2680[v538];
        uint64_t v2647 = *((void *)v540 + 1);
        void *v539 = *(void *)v540;
        v539[1] = v2647;
        uint64_t v541 = v154[22];
        v542 = (void *)((char *)v11 + v541);
        v543 = &v2680[v541];
        uint64_t v2633 = *((void *)v543 + 1);
        void *v542 = *(void *)v543;
        v542[1] = v2633;
        uint64_t v544 = v154[23];
        v545 = (void *)((char *)v11 + v544);
        v546 = &v2680[v544];
        uint64_t v2616 = *((void *)v546 + 1);
        void *v545 = *(void *)v546;
        v545[1] = v2616;
        uint64_t v547 = v154[24];
        v548 = (void *)((char *)v11 + v547);
        v549 = &v2680[v547];
        uint64_t v2594 = *((void *)v549 + 1);
        void *v548 = *(void *)v549;
        v548[1] = v2594;
        uint64_t v550 = v154[25];
        v551 = (void *)((char *)v11 + v550);
        v552 = &v2680[v550];
        uint64_t v2573 = *((void *)v552 + 1);
        void *v551 = *(void *)v552;
        v551[1] = v2573;
        uint64_t v553 = v154[26];
        v554 = (void *)((char *)v11 + v553);
        v555 = &v2680[v553];
        uint64_t v2540 = *((void *)v555 + 1);
        void *v554 = *(void *)v555;
        v554[1] = v2540;
        uint64_t v556 = v154[27];
        v557 = (void *)((char *)v11 + v556);
        v558 = &v2680[v556];
        uint64_t v2503 = *((void *)v558 + 1);
        void *v557 = *(void *)v558;
        v557[1] = v2503;
        uint64_t v559 = v154[28];
        v560 = (void *)((char *)v11 + v559);
        v561 = &v2680[v559];
        v2481 = (void *)*((void *)v561 + 1);
        void *v560 = *(void *)v561;
        v560[1] = v2481;
        uint64_t v562 = v154[29];
        v563 = (void *)((char *)v11 + v562);
        v564 = &v2680[v562];
        uint64_t v2473 = *((void *)v564 + 1);
        void *v563 = *(void *)v564;
        v563[1] = v2473;
        uint64_t v565 = v154[30];
        v566 = (void *)((char *)v11 + v565);
        v567 = &v2680[v565];
        v2465 = (void *)*((void *)v567 + 1);
        void *v566 = *(void *)v567;
        v566[1] = v2465;
        uint64_t v568 = v154[31];
        v569 = (void *)((char *)v11 + v568);
        v570 = &v2680[v568];
        uint64_t v2456 = *((void *)v570 + 1);
        void *v569 = *(void *)v570;
        v569[1] = v2456;
        uint64_t v571 = v154[32];
        v572 = (void *)((char *)v11 + v571);
        v573 = &v2680[v571];
        uint64_t v574 = *((void *)v573 + 1);
        void *v572 = *(void *)v573;
        v572[1] = v574;
        *(void *)((char *)v11 + v154[33]) = *(void *)&v2680[v154[33]];
        *(void *)((char *)v11 + v154[34]) = *(void *)&v2680[v154[34]];
        uint64_t v575 = v154[35];
        v576 = (void *)((char *)v11 + v575);
        uint64_t v577 = &v2680[v575];
        uint64_t v578 = *((void *)v577 + 1);
        void *v576 = *(void *)v577;
        v576[1] = v578;
        uint64_t v579 = v154[36];
        v580 = (void *)((char *)v11 + v579);
        uint64_t v581 = &v2680[v579];
        uint64_t v582 = *((void *)v581 + 1);
        void *v580 = *(void *)v581;
        v580[1] = v582;
        uint64_t v583 = v154[37];
        v584 = (void *)((char *)v11 + v583);
        uint64_t v585 = &v2680[v583];
        uint64_t v586 = *((void *)v585 + 1);
        void *v584 = *(void *)v585;
        v584[1] = v586;
        uint64_t v587 = v154[38];
        v2441 = (char *)v11 + v587;
        uint64_t v2447 = &v2680[v587];
        uint64_t v588 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v2447, 1, v588))
        {
          uint64_t v589 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2441, v2447, *(void *)(*(void *)(v589 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v588 - 8) + 16))(v2441, v2447, v588);
          __swift_storeEnumTagSinglePayload((uint64_t)v2441, 0, 1, v588);
        }
        uint64_t v13 = v2673;
        uint64_t v649 = v154[39];
        uint64_t v650 = (void *)((char *)v11 + v649);
        long long v651 = &v2680[v649];
        uint64_t v652 = *((void *)v651 + 1);
        *uint64_t v650 = *(void *)v651;
        v650[1] = v652;
        uint64_t v653 = v154[40];
        v654 = (void *)((char *)v11 + v653);
        uint64_t v655 = &v2680[v653];
        uint64_t v656 = *((void *)v655 + 1);
        void *v654 = *(void *)v655;
        v654[1] = v656;
        uint64_t v657 = v154[41];
        v658 = (char *)v11 + v657;
        uint64_t v659 = &v2680[v657];
        v658[8] = v659[8];
        *(void *)v658 = *(void *)v659;
        uint64_t v660 = v154[42];
        v661 = (void *)((char *)v11 + v660);
        v662 = &v2680[v660];
        uint64_t v663 = *((void *)v662 + 1);
        void *v661 = *(void *)v662;
        v661[1] = v663;
        uint64_t v664 = v154[43];
        v665 = (char *)v11 + v664;
        uint64_t v666 = &v2680[v664];
        *(_OWORD *)v665 = *(_OWORD *)v666;
        *(void *)(v665 + 13) = *(void *)(v666 + 13);
        uint64_t v667 = v154[44];
        v668 = (void *)((char *)v11 + v667);
        v669 = &v2680[v667];
        uint64_t v670 = *((void *)v669 + 1);
        void *v668 = *(void *)v669;
        v668[1] = v670;
        uint64_t v671 = v154[45];
        v672 = (void *)((char *)v11 + v671);
        uint64_t v673 = &v2680[v671];
        uint64_t v674 = *((void *)v673 + 1);
        void *v672 = *(void *)v673;
        v672[1] = v674;
        uint64_t v675 = v154[46];
        v676 = (void *)((char *)v11 + v675);
        uint64_t v677 = &v2680[v675];
        uint64_t v678 = *((void *)v677 + 1);
        void *v676 = *(void *)v677;
        v676[1] = v678;
        uint64_t v679 = v154[47];
        v680 = (void *)((char *)v11 + v679);
        uint64_t v681 = &v2680[v679];
        uint64_t v682 = *((void *)v681 + 1);
        void *v680 = *(void *)v681;
        v680[1] = v682;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v683 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
        *(void *)((char *)v11 + *(int *)(v683 + 48)) = *(void *)&v2680[*(int *)(v683 + 48)];
        swift_bridgeObjectRetain();
        goto LABEL_539;
      case 0x10u:
        uint64_t v2666 = v13;
        uint64_t v159 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v159;
        uint64_t v160 = v12[3];
        v11[2] = v12[2];
        v11[3] = v160;
        uint64_t v2656 = v12[5];
        v11[4] = v12[4];
        v11[5] = v2656;
        uint64_t v2640 = v12[7];
        v11[6] = v12[6];
        v11[7] = v2640;
        uint64_t v2627 = v12[9];
        v11[8] = v12[8];
        v11[9] = v2627;
        uint64_t v2609 = v12[11];
        v11[10] = v12[10];
        v11[11] = v2609;
        *((unsigned char *)v11 + 96) = *((unsigned char *)v12 + 96);
        uint64_t v161 = v12[14];
        v11[13] = v12[13];
        v11[14] = v161;
        uint64_t v162 = v12[16];
        v11[15] = v12[15];
        v11[16] = v162;
        uint64_t v163 = (int *)type metadata accessor for HotelReservation(0);
        uint64_t v164 = v163[14];
        uint64_t v2585 = (char *)v11 + v164;
        uint64_t v165 = (char *)v12 + v164;
        uint64_t v166 = type metadata accessor for DateComponents();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v165, 1, v166))
        {
          uint64_t v167 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v2585, v165, *(void *)(*(void *)(v167 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16))(v2585, v165, v166);
          __swift_storeEnumTagSinglePayload((uint64_t)v2585, 0, 1, v166);
        }
        uint64_t v397 = v163[15];
        v398 = (char *)v11 + v397;
        v399 = &v2680[v397];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v2680[v397], 1, v166))
        {
          uint64_t v400 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v398, v399, *(void *)(*(void *)(v400 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16))(v398, v399, v166);
          __swift_storeEnumTagSinglePayload((uint64_t)v398, 0, 1, v166);
        }
        uint64_t v590 = v163[16];
        uint64_t v591 = (void *)((char *)v11 + v590);
        uint64_t v592 = &v2680[v590];
        uint64_t v593 = *((void *)v592 + 1);
        *uint64_t v591 = *(void *)v592;
        v591[1] = v593;
        uint64_t v594 = v163[17];
        v595 = (void *)((char *)v11 + v594);
        uint64_t v596 = &v2680[v594];
        uint64_t v2664 = *((void *)v596 + 1);
        void *v595 = *(void *)v596;
        v595[1] = v2664;
        uint64_t v597 = v163[18];
        v598 = (void *)((char *)v11 + v597);
        v599 = &v2680[v597];
        uint64_t v2648 = *((void *)v599 + 1);
        void *v598 = *(void *)v599;
        v598[1] = v2648;
        uint64_t v600 = v163[19];
        v601 = (void *)((char *)v11 + v600);
        v602 = &v2680[v600];
        uint64_t v2634 = *((void *)v602 + 1);
        void *v601 = *(void *)v602;
        v601[1] = v2634;
        uint64_t v603 = v163[20];
        v604 = (void *)((char *)v11 + v603);
        v605 = &v2680[v603];
        uint64_t v606 = *((void *)v605 + 1);
        void *v604 = *(void *)v605;
        v604[1] = v606;
        *(void *)((char *)v11 + v163[21]) = *(void *)&v2680[v163[21]];
        *(void *)((char *)v11 + v163[22]) = *(void *)&v2680[v163[22]];
        uint64_t v607 = v163[23];
        v608 = (char *)v11 + v607;
        uint64_t v609 = &v2680[v607];
        *(void *)v608 = *(void *)v609;
        v608[8] = v609[8];
        uint64_t v610 = v163[24];
        v611 = (char *)v11 + v610;
        v612 = &v2680[v610];
        *(void *)v611 = *(void *)v612;
        v611[8] = v612[8];
        uint64_t v613 = v163[25];
        v614 = (void *)((char *)v11 + v613);
        v615 = &v2680[v613];
        uint64_t v616 = *((void *)v615 + 1);
        void *v614 = *(void *)v615;
        v614[1] = v616;
        uint64_t v617 = v163[26];
        v618 = (void *)((char *)v11 + v617);
        uint64_t v619 = &v2680[v617];
        uint64_t v620 = *((void *)v619 + 1);
        void *v618 = *(void *)v619;
        v618[1] = v620;
        uint64_t v621 = v163[27];
        v622 = (void *)((char *)v11 + v621);
        uint64_t v623 = &v2680[v621];
        uint64_t v624 = *((void *)v623 + 1);
        void *v622 = *(void *)v623;
        v622[1] = v624;
        uint64_t v625 = v163[28];
        v626 = (void *)((char *)v11 + v625);
        uint64_t v627 = &v2680[v625];
        uint64_t v628 = *((void *)v627 + 1);
        void *v626 = *(void *)v627;
        v626[1] = v628;
        uint64_t v629 = v163[29];
        v630 = (char *)v11 + v629;
        uint64_t v631 = &v2680[v629];
        *(void *)v630 = *(void *)v631;
        v630[8] = v631[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_142;
      case 0x11u:
        uint64_t v2666 = v13;
        uint64_t v168 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v168;
        uint64_t v169 = v12[3];
        v11[2] = v12[2];
        v11[3] = v169;
        uint64_t v2657 = v12[5];
        v11[4] = v12[4];
        v11[5] = v2657;
        uint64_t v2641 = v12[7];
        v11[6] = v12[6];
        v11[7] = v2641;
        uint64_t v2628 = v12[9];
        v11[8] = v12[8];
        v11[9] = v2628;
        uint64_t v2610 = v12[11];
        v11[10] = v12[10];
        v11[11] = v2610;
        *((unsigned char *)v11 + 96) = *((unsigned char *)v12 + 96);
        uint64_t v170 = v12[14];
        v11[13] = v12[13];
        v11[14] = v170;
        uint64_t v171 = v12[16];
        v11[15] = v12[15];
        v11[16] = v171;
        uint64_t v172 = (int *)type metadata accessor for RestaurantReservation(0);
        uint64_t v173 = v172[14];
        uint64_t v2586 = (char *)v11 + v173;
        uint64_t v174 = (char *)v12 + v173;
        uint64_t v175 = type metadata accessor for DateComponents();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v174, 1, v175))
        {
          uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v2586, v174, *(void *)(*(void *)(v176 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 16))(v2586, v174, v175);
          __swift_storeEnumTagSinglePayload((uint64_t)v2586, 0, 1, v175);
        }
        uint64_t v401 = v172[15];
        v402 = (void *)((char *)v11 + v401);
        v403 = &v2680[v401];
        uint64_t v404 = *((void *)v403 + 1);
        void *v402 = *(void *)v403;
        v402[1] = v404;
        uint64_t v405 = v172[16];
        v406 = (void *)((char *)v11 + v405);
        v407 = &v2680[v405];
        uint64_t v408 = *((void *)v407 + 1);
        void *v406 = *(void *)v407;
        v406[1] = v408;
        uint64_t v409 = v172[17];
        v410 = (void *)((char *)v11 + v409);
        v411 = &v2680[v409];
        uint64_t v412 = *((void *)v411 + 1);
        void *v410 = *(void *)v411;
        v410[1] = v412;
        uint64_t v413 = v172[18];
        v414 = (void *)((char *)v11 + v413);
        v415 = &v2680[v413];
        uint64_t v416 = *((void *)v415 + 1);
        void *v414 = *(void *)v415;
        v414[1] = v416;
        uint64_t v417 = v172[19];
        v418 = (void *)((char *)v11 + v417);
        v419 = &v2680[v417];
        uint64_t v420 = *((void *)v419 + 1);
        void *v418 = *(void *)v419;
        v418[1] = v420;
        *(void *)((char *)v11 + v172[20]) = *(void *)&v2680[v172[20]];
        uint64_t v421 = v172[21];
        v422 = (void *)((char *)v11 + v421);
        v423 = &v2680[v421];
        uint64_t v424 = *((void *)v423 + 1);
        void *v422 = *(void *)v423;
        v422[1] = v424;
        uint64_t v425 = v172[22];
        v426 = (void *)((char *)v11 + v425);
        v427 = &v2680[v425];
        uint64_t v428 = *((void *)v427 + 1);
        void *v426 = *(void *)v427;
        v426[1] = v428;
        uint64_t v429 = v172[23];
        v430 = (void *)((char *)v11 + v429);
        v431 = &v2680[v429];
        uint64_t v432 = *((void *)v431 + 1);
        void *v430 = *(void *)v431;
        v430[1] = v432;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_537;
      case 0x12u:
        uint64_t v2674 = v13;
        uint64_t v177 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v177;
        uint64_t v178 = v12[3];
        v11[2] = v12[2];
        v11[3] = v178;
        uint64_t v179 = v12[5];
        v11[4] = v12[4];
        v11[5] = v179;
        uint64_t v180 = v12[7];
        v11[6] = v12[6];
        v11[7] = v180;
        uint64_t v181 = v12[9];
        v11[8] = v12[8];
        v11[9] = v181;
        uint64_t v182 = v12[11];
        v11[10] = v12[10];
        v11[11] = v182;
        uint64_t v183 = v12[13];
        v11[12] = v12[12];
        v11[13] = v183;
        uint64_t v184 = v12[15];
        v11[14] = v12[14];
        v11[15] = v184;
        *((unsigned char *)v11 + 128) = *((unsigned char *)v12 + 128);
        *(_WORD *)((char *)v11 + 129) = *(_WORD *)((char *)v12 + 129);
        uint64_t v185 = v12[18];
        v11[17] = v12[17];
        v11[18] = v185;
        uint64_t v186 = v12[20];
        v11[19] = v12[19];
        v11[20] = v186;
        uint64_t v187 = v12[22];
        v11[21] = v12[21];
        v11[22] = v187;
        uint64_t v188 = v12[24];
        v11[23] = v12[23];
        v11[24] = v188;
        uint64_t v189 = v12[26];
        v11[25] = v12[25];
        v11[26] = v189;
        uint64_t v190 = v12[28];
        v11[27] = v12[27];
        v11[28] = v190;
        uint64_t v191 = v12[30];
        v11[29] = v12[29];
        v11[30] = v191;
        uint64_t v2658 = v12[32];
        v11[31] = v12[31];
        v11[32] = v2658;
        uint64_t v2642 = v12[34];
        v11[33] = v12[33];
        v11[34] = v2642;
        uint64_t v2629 = v12[36];
        v11[35] = v12[35];
        v11[36] = v2629;
        uint64_t v2611 = v12[38];
        v11[37] = v12[37];
        v11[38] = v2611;
        uint64_t v2587 = v12[40];
        v11[39] = v12[39];
        v11[40] = v2587;
        uint64_t v2566 = v12[42];
        v11[41] = v12[41];
        v11[42] = v2566;
        uint64_t v2535 = v12[44];
        v11[43] = v12[43];
        v11[44] = v2535;
        uint64_t v2498 = v12[46];
        v11[45] = v12[45];
        v11[46] = v2498;
        uint64_t v192 = v12[47];
        *((unsigned char *)v11 + 384) = *((unsigned char *)v12 + 384);
        v11[47] = v192;
        uint64_t v193 = v12[50];
        v11[49] = v12[49];
        v11[50] = v193;
        uint64_t v194 = v12[52];
        v11[51] = v12[51];
        v11[52] = v194;
        uint64_t v195 = type metadata accessor for RentalCarReservation(0);
        uint64_t v196 = *(int *)(v195 + 140);
        __dst = (char *)v11 + v196;
        uint64_t v2416 = v195;
        uint64_t v197 = (char *)v12 + v196;
        uint64_t v198 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v198))
        {
          uint64_t v199 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(__dst, v197, *(void *)(*(void *)(v199 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(__dst, v197, v198);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v198);
        }
        uint64_t v13 = v2674;
        uint64_t v433 = *(int *)(v2416 + 144);
        goto LABEL_102;
      case 0x13u:
        uint64_t v2675 = v13;
        uint64_t v2499 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v2499;
        uint64_t v200 = v12[3];
        v11[2] = v12[2];
        v11[3] = v200;
        uint64_t v201 = v12[5];
        v11[4] = v12[4];
        v11[5] = v201;
        uint64_t v202 = v12[7];
        v11[6] = v12[6];
        v11[7] = v202;
        uint64_t v203 = v12[9];
        v11[8] = v12[8];
        v11[9] = v203;
        uint64_t v204 = v12[11];
        v11[10] = v12[10];
        v11[11] = v204;
        uint64_t v205 = v12[13];
        v11[12] = v12[12];
        v11[13] = v205;
        uint64_t v206 = v12[15];
        v11[14] = v12[14];
        v11[15] = v206;
        *((unsigned char *)v11 + 128) = *((unsigned char *)v12 + 128);
        *(_WORD *)((char *)v11 + 129) = *(_WORD *)((char *)v12 + 129);
        uint64_t v207 = v12[18];
        v11[17] = v12[17];
        v11[18] = v207;
        uint64_t v208 = v12[20];
        v11[19] = v12[19];
        v11[20] = v208;
        uint64_t v209 = v12[22];
        v11[21] = v12[21];
        v11[22] = v209;
        uint64_t v210 = v12[24];
        v11[23] = v12[23];
        v11[24] = v210;
        uint64_t v2659 = v12[26];
        v11[25] = v12[25];
        v11[26] = v2659;
        uint64_t v2643 = v12[28];
        v11[27] = v12[27];
        v11[28] = v2643;
        uint64_t v2630 = v12[30];
        v11[29] = v12[29];
        v11[30] = v2630;
        uint64_t v2612 = v12[32];
        v11[31] = v12[31];
        v11[32] = v2612;
        uint64_t v211 = v12[34];
        v11[33] = v12[33];
        v11[34] = v211;
        uint64_t v212 = v12[36];
        uint64_t v2567 = v12[35];
        *((unsigned char *)v11 + 296) = *((unsigned char *)v12 + 296);
        v11[35] = v2567;
        v11[36] = v212;
        uint64_t v213 = type metadata accessor for TicketedTransportation(0);
        uint64_t v214 = *(int *)(v213 + 112);
        v2425 = (char *)v11 + v214;
        v2431 = (int *)v213;
        uint64_t v215 = (char *)v12 + v214;
        uint64_t v198 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v215, 1, v198))
        {
          uint64_t v216 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2425, v215, *(void *)(*(void *)(v216 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(v2425, v215, v198);
          __swift_storeEnumTagSinglePayload((uint64_t)v2425, 0, 1, v198);
        }
        uint64_t v13 = v2675;
        uint64_t v433 = v2431[29];
        goto LABEL_102;
      case 0x14u:
        uint64_t v2676 = v13;
        uint64_t v217 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v217;
        uint64_t v218 = v12[3];
        v11[2] = v12[2];
        v11[3] = v218;
        uint64_t v219 = v12[5];
        v11[4] = v12[4];
        v11[5] = v219;
        uint64_t v220 = v12[7];
        v11[6] = v12[6];
        v11[7] = v220;
        uint64_t v221 = v12[9];
        v11[8] = v12[8];
        v11[9] = v221;
        uint64_t v222 = v12[11];
        v11[10] = v12[10];
        v11[11] = v222;
        uint64_t v223 = v12[13];
        v11[12] = v12[12];
        v11[13] = v223;
        uint64_t v224 = v12[15];
        v11[14] = v12[14];
        v11[15] = v224;
        *((unsigned char *)v11 + 128) = *((unsigned char *)v12 + 128);
        *(_WORD *)((char *)v11 + 129) = *(_WORD *)((char *)v12 + 129);
        uint64_t v225 = v12[18];
        v11[17] = v12[17];
        v11[18] = v225;
        uint64_t v226 = v12[20];
        v11[19] = v12[19];
        v11[20] = v226;
        uint64_t v227 = v12[22];
        v11[21] = v12[21];
        v11[22] = v227;
        uint64_t v228 = v12[24];
        v11[23] = v12[23];
        v11[24] = v228;
        uint64_t v229 = v12[26];
        v11[25] = v12[25];
        v11[26] = v229;
        uint64_t v230 = v12[28];
        v11[27] = v12[27];
        v11[28] = v230;
        uint64_t v2660 = v12[30];
        v11[29] = v12[29];
        v11[30] = v2660;
        uint64_t v2644 = v12[32];
        v11[31] = v12[31];
        v11[32] = v2644;
        uint64_t v231 = v12[34];
        v11[33] = v12[33];
        v11[34] = v231;
        uint64_t v232 = v12[36];
        uint64_t v2613 = v12[35];
        *((unsigned char *)v11 + 296) = *((unsigned char *)v12 + 296);
        v11[35] = v2613;
        v11[36] = v232;
        uint64_t v2588 = v12[39];
        v11[38] = v12[38];
        v11[39] = v2588;
        uint64_t v233 = type metadata accessor for TicketedShow(0);
        uint64_t v234 = *(int *)(v233 + 116);
        v2420 = (char *)v11 + v234;
        v2426 = (int *)v233;
        uint64_t v235 = (char *)v12 + v234;
        uint64_t v236 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v235, 1, v236))
        {
          uint64_t v237 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v2420, v235, *(void *)(*(void *)(v237 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 16))(v2420, v235, v236);
          __swift_storeEnumTagSinglePayload((uint64_t)v2420, 0, 1, v236);
        }
        uint64_t v13 = v2676;
        uint64_t v434 = v2426[30];
        v435 = (void *)((char *)v11 + v434);
        uint64_t v436 = (void *)((char *)v12 + v434);
        uint64_t v437 = v436[1];
        void *v435 = *v436;
        v435[1] = v437;
        uint64_t v438 = v2426[31];
        v439 = (char *)v11 + v438;
        v440 = (char *)v12 + v438;
        uint64_t v73 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v440, 1, v73))
        {
          uint64_t v441 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v439, v440, *(void *)(*(void *)(v441 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v439, v440, v73);
          __swift_storeEnumTagSinglePayload((uint64_t)v439, 0, 1, v73);
        }
        uint64_t v336 = v2426[32];
LABEL_145:
        uint64_t v365 = (char *)v11 + v336;
        uint64_t v366 = (uint64_t)v12 + v336;
        if (!__swift_getEnumTagSinglePayload((uint64_t)v12 + v336, 1, v73))
        {
LABEL_135:
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v73 - 8) + 16))(v365, v366, v73);
          uint64_t v444 = (uint64_t)v365;
          uint64_t v445 = v73;
          goto LABEL_136;
        }
        size_t v367 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                     - 8)
                         + 64);
        uint64_t v368 = v365;
        uint64_t v369 = (const void *)v366;
        goto LABEL_156;
      case 0x15u:
        uint64_t v2589 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v2589;
        uint64_t v2568 = v12[3];
        v11[2] = v12[2];
        v11[3] = v2568;
        uint64_t v2536 = v12[5];
        v11[4] = v12[4];
        v11[5] = v2536;
        uint64_t v2500 = v12[7];
        v11[6] = v12[6];
        v11[7] = v2500;
        uint64_t v238 = v12[9];
        v11[8] = v12[8];
        v11[9] = v238;
        uint64_t v239 = v12[11];
        v11[10] = v12[10];
        v11[11] = v239;
        uint64_t v240 = v12[13];
        v11[12] = v12[12];
        v11[13] = v240;
        uint64_t v241 = v12[15];
        v11[14] = v12[14];
        v11[15] = v241;
        *((unsigned char *)v11 + 128) = *((unsigned char *)v12 + 128);
        *(_WORD *)((char *)v11 + 129) = *(_WORD *)((char *)v12 + 129);
        uint64_t v242 = v12[18];
        v11[17] = v12[17];
        v11[18] = v242;
        uint64_t v243 = v12[20];
        v11[19] = v12[19];
        v11[20] = v243;
        uint64_t v244 = v12[22];
        v11[21] = v12[21];
        v11[22] = v244;
        uint64_t v245 = v12[24];
        v11[23] = v12[23];
        v11[24] = v245;
        uint64_t v246 = v12[26];
        v11[25] = v12[25];
        v11[26] = v246;
        uint64_t v247 = v12[28];
        v11[27] = v12[27];
        v11[28] = v247;
        uint64_t v248 = v12[30];
        v11[29] = v12[29];
        v11[30] = v248;
        uint64_t v249 = v12[32];
        v11[31] = v12[31];
        v11[32] = v249;
        uint64_t v250 = v12[34];
        uint64_t v251 = v12[33];
        *((unsigned char *)v11 + 280) = *((unsigned char *)v12 + 280);
        v11[33] = v251;
        v11[34] = v250;
        uint64_t v252 = v12[37];
        v11[36] = v12[36];
        v11[37] = v252;
        uint64_t v253 = type metadata accessor for Appointment(0);
        uint64_t v254 = *(int *)(v253 + 108);
        v2432 = (char *)v11 + v254;
        uint64_t v2436 = v253;
        uint64_t v255 = (char *)v12 + v254;
        uint64_t v198 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v255, 1, v198))
        {
          uint64_t v256 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2432, v255, *(void *)(*(void *)(v256 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(v2432, v255, v198);
          __swift_storeEnumTagSinglePayload((uint64_t)v2432, 0, 1, v198);
        }
        uint64_t v433 = *(int *)(v2436 + 112);
LABEL_102:
        uint64_t v442 = (char *)v11 + v433;
        v443 = (char *)v12 + v433;
        if (__swift_getEnumTagSinglePayload((uint64_t)v12 + v433, 1, v198))
        {
          size_t v367 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                       - 8)
                           + 64);
          uint64_t v368 = v442;
          uint64_t v369 = v443;
          goto LABEL_156;
        }
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(v442, v443, v198);
        uint64_t v444 = (uint64_t)v442;
        uint64_t v445 = v198;
        goto LABEL_136;
      case 0x16u:
        uint64_t v2677 = v13;
        uint64_t v2590 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v2590;
        uint64_t v2569 = v12[3];
        v11[2] = v12[2];
        v11[3] = v2569;
        uint64_t v2537 = v12[5];
        v11[4] = v12[4];
        v11[5] = v2537;
        uint64_t v2501 = v12[7];
        v11[6] = v12[6];
        v11[7] = v2501;
        uint64_t v257 = v12[9];
        v11[8] = v12[8];
        v11[9] = v257;
        uint64_t v258 = v12[11];
        v11[10] = v12[10];
        v11[11] = v258;
        uint64_t v259 = v12[13];
        v11[12] = v12[12];
        v11[13] = v259;
        uint64_t v260 = v12[15];
        v11[14] = v12[14];
        v11[15] = v260;
        *((unsigned char *)v11 + 128) = *((unsigned char *)v12 + 128);
        *(_WORD *)((char *)v11 + 129) = *(_WORD *)((char *)v12 + 129);
        uint64_t v261 = v12[18];
        v11[17] = v12[17];
        v11[18] = v261;
        uint64_t v262 = v12[20];
        v11[19] = v12[19];
        v11[20] = v262;
        uint64_t v263 = v12[22];
        v11[21] = v12[21];
        v11[22] = v263;
        uint64_t v264 = v12[24];
        v11[23] = v12[23];
        v11[24] = v264;
        uint64_t v265 = v12[26];
        v11[25] = v12[25];
        v11[26] = v265;
        uint64_t v266 = v12[28];
        v11[27] = v12[27];
        v11[28] = v266;
        uint64_t v267 = v12[30];
        v11[29] = v12[29];
        v11[30] = v267;
        v11[31] = v12[31];
        uint64_t v268 = type metadata accessor for Party(0);
        uint64_t v269 = *(int *)(v268 + 96);
        v2440 = (char *)v11 + v269;
        uint64_t v2446 = v268;
        uint64_t v270 = (char *)v12 + v269;
        uint64_t v271 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v270, 1, v271))
        {
          uint64_t v272 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2440, v270, *(void *)(*(void *)(v272 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v271 - 8) + 16))(v2440, v270, v271);
          __swift_storeEnumTagSinglePayload((uint64_t)v2440, 0, 1, v271);
        }
        uint64_t v13 = v2677;
        uint64_t v446 = *(int *)(v2446 + 100);
        v447 = (char *)v11 + v446;
        uint64_t v448 = (char *)v12 + v446;
        if (__swift_getEnumTagSinglePayload((uint64_t)v12 + v446, 1, v271))
        {
          uint64_t v449 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v447, v448, *(void *)(*(void *)(v449 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v271 - 8) + 16))(v447, v448, v271);
          __swift_storeEnumTagSinglePayload((uint64_t)v447, 0, 1, v271);
        }
        uint64_t v350 = *(int *)(v2446 + 104);
LABEL_150:
        uint64_t v632 = (char *)v11 + v350;
        uint64_t v633 = (uint64_t)v12 + v350;
        goto LABEL_154;
      case 0x17u:
        uint64_t v2678 = v13;
        uint64_t v273 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v273;
        uint64_t v2631 = v12[3];
        v11[2] = v12[2];
        v11[3] = v2631;
        uint64_t v2614 = v12[5];
        v11[4] = v12[4];
        v11[5] = v2614;
        uint64_t v2591 = v12[7];
        v11[6] = v12[6];
        v11[7] = v2591;
        uint64_t v2570 = v12[9];
        v11[8] = v12[8];
        v11[9] = v2570;
        uint64_t v274 = v12[11];
        v11[10] = v12[10];
        v11[11] = v274;
        uint64_t v2538 = v12[13];
        v11[12] = v12[12];
        v11[13] = v2538;
        uint64_t v2502 = v12[15];
        v11[14] = v12[14];
        v11[15] = v2502;
        *((unsigned char *)v11 + 128) = *((unsigned char *)v12 + 128);
        *(_WORD *)((char *)v11 + 129) = *(_WORD *)((char *)v12 + 129);
        uint64_t v275 = v12[18];
        v11[17] = v12[17];
        v11[18] = v275;
        uint64_t v276 = v12[20];
        v11[19] = v12[19];
        v11[20] = v276;
        uint64_t v277 = v12[22];
        v11[21] = v12[21];
        v11[22] = v277;
        uint64_t v278 = v12[24];
        v11[23] = v12[23];
        v11[24] = v278;
        uint64_t v279 = v12[26];
        v11[25] = v12[25];
        v11[26] = v279;
        v11[27] = v12[27];
        uint64_t v280 = type metadata accessor for Trip(0);
        uint64_t v281 = *(int *)(v280 + 88);
        v2464 = (char *)v11 + v281;
        v2472 = (int *)v280;
        uint64_t v282 = (char *)v12 + v281;
        uint64_t v283 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v282, 1, v283))
        {
          uint64_t v284 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2464, v282, *(void *)(*(void *)(v284 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v283 - 8) + 16))(v2464, v282, v283);
          __swift_storeEnumTagSinglePayload((uint64_t)v2464, 0, 1, v283);
        }
        uint64_t v13 = v2678;
        uint64_t v450 = v2472[23];
        v451 = (char *)v11 + v450;
        v452 = &v2680[v450];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v2680[v450], 1, v283))
        {
          uint64_t v453 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v451, v452, *(void *)(*(void *)(v453 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v283 - 8) + 16))(v451, v452, v283);
          __swift_storeEnumTagSinglePayload((uint64_t)v451, 0, 1, v283);
        }
        uint64_t v634 = v2472[24];
        uint64_t v635 = (char *)v11 + v634;
        uint64_t v351 = v2680;
        uint64_t v636 = &v2680[v634];
        *(void *)uint64_t v635 = *(void *)v636;
        v635[8] = v636[8];
        uint64_t v355 = v2472[25];
LABEL_153:
        uint64_t v632 = (char *)v11 + v355;
        uint64_t v633 = (uint64_t)&v351[v355];
LABEL_154:
        uint64_t v637 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload(v633, 1, v637))
        {
          size_t v367 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                       - 8)
                           + 64);
          uint64_t v368 = v632;
          uint64_t v369 = (const void *)v633;
LABEL_156:
          memcpy(v368, v369, v367);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v637 - 8) + 16))(v632, v633, v637);
          uint64_t v444 = (uint64_t)v632;
          uint64_t v445 = v637;
LABEL_136:
          __swift_storeEnumTagSinglePayload(v444, 0, 1, v445);
        }
LABEL_539:
        swift_storeEnumTagMultiPayload();
        uint64_t v2404 = *(int *)(v13 + 20);
        uint64_t v2405 = *(void **)&v2680[v2404];
        *(void *)((char *)v11 + v2404) = v2405;
        uint64_t v2406 = *(int *)(v13 + 24);
        uint64_t v2407 = (void *)((char *)v11 + v2406);
        v2408 = &v2680[v2406];
        uint64_t v2409 = *((void *)v2408 + 1);
        *uint64_t v2407 = *(void *)v2408;
        v2407[1] = v2409;
        id v2410 = v2405;
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
        break;
      case 0x18u:
        uint64_t v2679 = v13;
        uint64_t v285 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v285;
        uint64_t v286 = v12[3];
        v11[2] = v12[2];
        v11[3] = v286;
        uint64_t v287 = v12[5];
        v11[4] = v12[4];
        v11[5] = v287;
        uint64_t v288 = (int *)type metadata accessor for GlobalItem();
        uint64_t v289 = v288[7];
        uint64_t v290 = (char *)v11 + v289;
        v291 = (char *)v12 + v289;
        uint64_t v292 = type metadata accessor for GlobalDialog();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v291, 1, v292))
        {
          uint64_t v293 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
          memcpy(v290, v291, *(void *)(*(void *)(v293 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v292 - 8) + 16))(v290, v291, v292);
          __swift_storeEnumTagSinglePayload((uint64_t)v290, 0, 1, v292);
        }
        uint64_t v13 = v2679;
        uint64_t v454 = v288[8];
        v455 = (char *)v11 + v454;
        v456 = (char *)v12 + v454;
        unint64_t v457 = *((void *)v456 + 1);
        if (v457 >> 60 == 15)
        {
          *(_OWORD *)v455 = *(_OWORD *)v456;
        }
        else
        {
          uint64_t v458 = *(void *)v456;
          outlined copy of Data._Representation(*(void *)v456, *((void *)v456 + 1));
          *(void *)v455 = v458;
          *((void *)v455 + 1) = v457;
        }
        *((unsigned char *)v11 + v288[9]) = *((unsigned char *)v12 + v288[9]);
        uint64_t v459 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
        *(void *)((char *)v11 + *(int *)(v459 + 48)) = *(void *)((char *)v12 + *(int *)(v459 + 48));
        goto LABEL_118;
      case 0x19u:
        uint64_t v294 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v294;
        uint64_t v295 = v12[3];
        v11[2] = v12[2];
        v11[3] = v295;
        uint64_t v296 = v12[5];
        v11[4] = v12[4];
        v11[5] = v296;
        uint64_t v297 = v12[7];
        v11[6] = v12[6];
        v11[7] = v297;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_118;
      case 0x1Au:
        uint64_t v298 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v298;
        uint64_t v299 = v12[3];
        v11[2] = v12[2];
        v11[3] = v299;
        uint64_t v300 = v12[5];
        v11[4] = v12[4];
        v11[5] = v300;
        v11[6] = v12[6];
        uint64_t v301 = (int *)type metadata accessor for Answer(0);
        uint64_t v302 = v301[9];
        uint64_t v2661 = (char *)v11 + v302;
        uint64_t v303 = (char *)v12 + v302;
        uint64_t v304 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v303, 1, v304))
        {
          uint64_t v305 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v2661, v303, *(void *)(*(void *)(v305 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v304 - 8) + 16))(v2661, v303, v304);
          __swift_storeEnumTagSinglePayload((uint64_t)v2661, 0, 1, v304);
        }
        *((unsigned char *)v11 + v301[10]) = v2680[v301[10]];
        uint64_t v460 = v301[11];
        unint64_t v461 = (void *)((char *)v11 + v460);
        uint64_t v462 = &v2680[v460];
        uint64_t v463 = *((void *)v462 + 1);
        *unint64_t v461 = *(void *)v462;
        v461[1] = v463;
LABEL_118:
        swift_bridgeObjectRetain();
        goto LABEL_539;
      default:
        uint64_t v2666 = v13;
        uint64_t v16 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v16;
        uint64_t v17 = v12[3];
        v11[2] = v12[2];
        v11[3] = v17;
        uint64_t v18 = v12[5];
        v11[4] = v12[4];
        v11[5] = v18;
        uint64_t v19 = v12[7];
        v11[6] = v12[6];
        v11[7] = v19;
        uint64_t v20 = v12[9];
        v11[8] = v12[8];
        v11[9] = v20;
        uint64_t v2649 = v12[11];
        v11[10] = v12[10];
        v11[11] = v2649;
        uint64_t v21 = (int *)type metadata accessor for EmailDocument(0);
        uint64_t v22 = v21[12];
        uint64_t v2584 = (char *)v12 + v22;
        uint64_t v2606 = (char *)v11 + v22;
        uint64_t v23 = type metadata accessor for Date();
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v2624 = v24;
        uint64_t v2635 = v23;
        v24(v2606, v2584, v23);
        *(void *)((char *)v11 + v21[13]) = *(void *)((char *)v12 + v21[13]);
        *(void *)((char *)v11 + v21[14]) = *(void *)((char *)v12 + v21[14]);
        *(void *)((char *)v11 + v21[15]) = *(void *)((char *)v12 + v21[15]);
        *((unsigned char *)v11 + v21[16]) = *((unsigned char *)v12 + v21[16]);
        *((unsigned char *)v11 + v21[17]) = *((unsigned char *)v12 + v21[17]);
        uint64_t v25 = v21[18];
        uint64_t v26 = (void *)((char *)v11 + v25);
        uint64_t v27 = (void *)((char *)v12 + v25);
        uint64_t v28 = v27[1];
        *uint64_t v26 = *v27;
        v26[1] = v28;
        uint64_t v2650 = v21;
        uint64_t v29 = v21[19];
        uint64_t v30 = (void *)((char *)v11 + v29);
        uint64_t v31 = (char *)v12 + v29;
        uint64_t v32 = *(void *)((char *)v12 + v29);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v32)
        {
          uint64_t v33 = *((void *)v31 + 1);
          uint64_t v34 = *((void *)v31 + 2);
          *uint64_t v30 = v32;
          v30[1] = v33;
          uint64_t v35 = *((void *)v31 + 3);
          uint64_t v36 = *((void *)v31 + 4);
          v30[2] = v34;
          v30[3] = v35;
          v30[4] = v36;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v306 = *((_OWORD *)v31 + 1);
          *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
          *((_OWORD *)v30 + 1) = v306;
          v30[4] = *((void *)v31 + 4);
        }
        uint64_t v307 = v21[20];
        uint64_t v308 = (void *)((char *)v11 + v307);
        v309 = (void *)((char *)v12 + v307);
        uint64_t v310 = v309[1];
        *uint64_t v308 = *v309;
        v308[1] = v310;
        uint64_t v311 = v21[21];
        uint64_t v312 = (void *)((char *)v11 + v311);
        v313 = (void *)((char *)v12 + v311);
        v314 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v313, 1, (uint64_t)v314))
        {
          uint64_t v315 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v312, v313, *(void *)(*(void *)(v315 - 8) + 64));
        }
        else
        {
          uint64_t v464 = v313;
          uint64_t v465 = v313[1];
          *uint64_t v312 = *v313;
          v312[1] = v465;
          uint64_t v466 = v314[5];
          uint64_t v467 = (void *)((char *)v312 + v466);
          v2592 = v464;
          uint64_t v468 = (void *)((char *)v464 + v466);
          uint64_t v469 = type metadata accessor for RentalCarReservation(0);
          swift_bridgeObjectRetain();
          uint64_t v2539 = v314;
          v2571 = v312;
          if (__swift_getEnumTagSinglePayload((uint64_t)v468, 1, v469))
          {
            uint64_t v470 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v467, v468, *(void *)(*(void *)(v470 - 8) + 64));
          }
          else
          {
            uint64_t v690 = v468[1];
            *uint64_t v467 = *v468;
            v467[1] = v690;
            uint64_t v691 = v468[3];
            v467[2] = v468[2];
            v467[3] = v691;
            uint64_t v692 = v468[5];
            v467[4] = v468[4];
            v467[5] = v692;
            uint64_t v693 = v468[7];
            v467[6] = v468[6];
            v467[7] = v693;
            uint64_t v694 = v468[9];
            v467[8] = v468[8];
            v467[9] = v694;
            uint64_t v695 = v468[11];
            v467[10] = v468[10];
            v467[11] = v695;
            uint64_t v696 = v468[13];
            v467[12] = v468[12];
            v467[13] = v696;
            uint64_t v697 = v468[15];
            v467[14] = v468[14];
            v467[15] = v697;
            *((unsigned char *)v467 + 128) = *((unsigned char *)v468 + 128);
            *(_WORD *)((char *)v467 + 129) = *(_WORD *)((char *)v468 + 129);
            uint64_t v698 = v468[18];
            v467[17] = v468[17];
            v467[18] = v698;
            uint64_t v699 = v468[20];
            v467[19] = v468[19];
            v467[20] = v699;
            uint64_t v700 = v468[22];
            v467[21] = v468[21];
            v467[22] = v700;
            uint64_t v2412 = v468[24];
            v467[23] = v468[23];
            v467[24] = v2412;
            uint64_t v701 = v468[26];
            v467[25] = v468[25];
            v467[26] = v701;
            uint64_t v702 = v468[28];
            v467[27] = v468[27];
            v467[28] = v702;
            uint64_t v703 = v468[30];
            v467[29] = v468[29];
            v467[30] = v703;
            v2482 = (void *)v468[32];
            v467[31] = v468[31];
            v467[32] = v2482;
            uint64_t v704 = v468[34];
            v467[33] = v468[33];
            v467[34] = v704;
            uint64_t v705 = v468[36];
            v467[35] = v468[35];
            v467[36] = v705;
            uint64_t v706 = v468[38];
            v467[37] = v468[37];
            v467[38] = v706;
            uint64_t v707 = v468[40];
            v467[39] = v468[39];
            v467[40] = v707;
            uint64_t v708 = v468[42];
            v467[41] = v468[41];
            v467[42] = v708;
            uint64_t v709 = v468[44];
            v467[43] = v468[43];
            v467[44] = v709;
            uint64_t v710 = v468[46];
            v467[45] = v468[45];
            v467[46] = v710;
            uint64_t v711 = v468[47];
            *((unsigned char *)v467 + 384) = *((unsigned char *)v468 + 384);
            v467[47] = v711;
            uint64_t v712 = v468[50];
            v467[49] = v468[49];
            v467[50] = v712;
            uint64_t v713 = v468[52];
            v467[51] = v468[51];
            v467[52] = v713;
            uint64_t v714 = *(int *)(v469 + 140);
            v2504 = (char *)v467 + v714;
            uint64_t v715 = (char *)v468 + v714;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v715, 1, v2635))
            {
              uint64_t v716 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2504, v715, *(void *)(*(void *)(v716 - 8) + 64));
            }
            else
            {
              v2624(v2504, v715, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v2504, 0, 1, v2635);
            }
            uint64_t v771 = *(int *)(v469 + 144);
            v772 = (char *)v467 + v771;
            uint64_t v773 = (char *)v468 + v771;
            if (__swift_getEnumTagSinglePayload((uint64_t)v468 + v771, 1, v2635))
            {
              uint64_t v774 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v772, v773, *(void *)(*(void *)(v774 - 8) + 64));
            }
            else
            {
              v2624(v772, v773, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v772, 0, 1, v2635);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v467, 0, 1, v469);
            uint64_t v312 = v2571;
          }
          v783 = v2592;
          uint64_t v784 = v314[6];
          uint64_t v785 = (void *)((char *)v312 + v784);
          v786 = (void *)((char *)v2592 + v784);
          uint64_t v787 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v786, 1, v787))
          {
            uint64_t v788 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v785, v786, *(void *)(*(void *)(v788 - 8) + 64));
          }
          else
          {
            uint64_t v789 = v786[1];
            *uint64_t v785 = *v786;
            v785[1] = v789;
            uint64_t v790 = v786[3];
            v785[2] = v786[2];
            v785[3] = v790;
            uint64_t v791 = v786[5];
            v785[4] = v786[4];
            v785[5] = v791;
            uint64_t v792 = v786[7];
            v785[6] = v786[6];
            v785[7] = v792;
            uint64_t v793 = v786[9];
            v785[8] = v786[8];
            v785[9] = v793;
            uint64_t v794 = v786[11];
            v785[10] = v786[10];
            v785[11] = v794;
            uint64_t v795 = v786[13];
            v785[12] = v786[12];
            v785[13] = v795;
            uint64_t v796 = v786[15];
            v785[14] = v786[14];
            v785[15] = v796;
            *((unsigned char *)v785 + 128) = *((unsigned char *)v786 + 128);
            *(_WORD *)((char *)v785 + 129) = *(_WORD *)((char *)v786 + 129);
            uint64_t v797 = v786[18];
            v785[17] = v786[17];
            v785[18] = v797;
            uint64_t v798 = v786[20];
            v785[19] = v786[19];
            v785[20] = v798;
            uint64_t v799 = v786[22];
            v785[21] = v786[21];
            v785[22] = v799;
            uint64_t v800 = v786[24];
            v785[23] = v786[23];
            v785[24] = v800;
            uint64_t v2474 = v786[26];
            v785[25] = v786[25];
            v785[26] = v2474;
            uint64_t v801 = v786[28];
            v785[27] = v786[27];
            v785[28] = v801;
            uint64_t v802 = v786[30];
            v785[29] = v786[29];
            v785[30] = v802;
            uint64_t v803 = v786[32];
            v785[31] = v786[31];
            v785[32] = v803;
            uint64_t v804 = v786[34];
            v785[33] = v786[33];
            v785[34] = v804;
            uint64_t v805 = v786[36];
            uint64_t v806 = v786[35];
            *((unsigned char *)v785 + 296) = *((unsigned char *)v786 + 296);
            v785[35] = v806;
            v785[36] = v805;
            uint64_t v807 = *(int *)(v787 + 112);
            v2483 = (char *)v785 + v807;
            uint64_t v808 = (char *)v786 + v807;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v808, 1, v2635))
            {
              uint64_t v809 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2483, v808, *(void *)(*(void *)(v809 - 8) + 64));
            }
            else
            {
              v2624(v2483, v808, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v2483, 0, 1, v2635);
            }
            uint64_t v862 = *(int *)(v787 + 116);
            v863 = (char *)v785 + v862;
            uint64_t v864 = (char *)v786 + v862;
            if (__swift_getEnumTagSinglePayload((uint64_t)v786 + v862, 1, v2635))
            {
              uint64_t v865 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v863, v864, *(void *)(*(void *)(v865 - 8) + 64));
            }
            else
            {
              v2624(v863, v864, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v863, 0, 1, v2635);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v785, 0, 1, v787);
            uint64_t v312 = v2571;
            v783 = v2592;
          }
          uint64_t v874 = v314[7];
          v875 = (void *)((char *)v312 + v874);
          uint64_t v876 = (void *)((char *)v783 + v874);
          uint64_t v877 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v876, 1, (uint64_t)v877))
          {
            uint64_t v878 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v875, v876, *(void *)(*(void *)(v878 - 8) + 64));
          }
          else
          {
            uint64_t v879 = v876[1];
            void *v875 = *v876;
            v875[1] = v879;
            uint64_t v880 = v876[3];
            v875[2] = v876[2];
            v875[3] = v880;
            uint64_t v881 = v876[5];
            v875[4] = v876[4];
            v875[5] = v881;
            uint64_t v882 = v876[7];
            v875[6] = v876[6];
            v875[7] = v882;
            uint64_t v883 = v876[9];
            v875[8] = v876[8];
            v875[9] = v883;
            uint64_t v884 = v876[11];
            v875[10] = v876[10];
            v875[11] = v884;
            uint64_t v885 = v876[13];
            v875[12] = v876[12];
            v875[13] = v885;
            uint64_t v886 = v876[15];
            v875[14] = v876[14];
            v875[15] = v886;
            *((unsigned char *)v875 + 128) = *((unsigned char *)v876 + 128);
            *(_WORD *)((char *)v875 + 129) = *(_WORD *)((char *)v876 + 129);
            uint64_t v887 = v876[18];
            v875[17] = v876[17];
            v875[18] = v887;
            uint64_t v888 = v876[20];
            v875[19] = v876[19];
            v875[20] = v888;
            uint64_t v889 = v876[22];
            v875[21] = v876[21];
            v875[22] = v889;
            uint64_t v890 = v876[24];
            v875[23] = v876[23];
            v875[24] = v890;
            uint64_t v891 = v876[26];
            v875[25] = v876[25];
            v875[26] = v891;
            uint64_t v892 = v876[28];
            v875[27] = v876[27];
            v875[28] = v892;
            v2486 = (void *)v876[30];
            v875[29] = v876[29];
            v875[30] = v2486;
            uint64_t v893 = v876[32];
            v875[31] = v876[31];
            v875[32] = v893;
            uint64_t v894 = v876[34];
            v875[33] = v876[33];
            v875[34] = v894;
            uint64_t v895 = v876[36];
            uint64_t v896 = v876[35];
            *((unsigned char *)v875 + 296) = *((unsigned char *)v876 + 296);
            v875[35] = v896;
            v875[36] = v895;
            uint64_t v897 = v876[39];
            v875[38] = v876[38];
            v875[39] = v897;
            uint64_t v898 = v877[29];
            v2508 = (char *)v875 + v898;
            uint64_t v899 = (char *)v876 + v898;
            uint64_t v900 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v899, 1, v900))
            {
              uint64_t v901 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2508, v899, *(void *)(*(void *)(v901 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v900 - 8) + 16))(v2508, v899, v900);
              __swift_storeEnumTagSinglePayload((uint64_t)v2508, 0, 1, v900);
            }
            uint64_t v956 = v877[30];
            v957 = (void *)((char *)v875 + v956);
            uint64_t v958 = (void *)((char *)v876 + v956);
            uint64_t v959 = v958[1];
            void *v957 = *v958;
            v957[1] = v959;
            uint64_t v960 = v877[31];
            v961 = (char *)v875 + v960;
            uint64_t v962 = (char *)v876 + v960;
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v962, 1, v2635))
            {
              uint64_t v963 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v961, v962, *(void *)(*(void *)(v963 - 8) + 64));
            }
            else
            {
              v2624(v961, v962, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v961, 0, 1, v2635);
            }
            uint64_t v980 = v877[32];
            v981 = (char *)v875 + v980;
            uint64_t v982 = (char *)v876 + v980;
            if (__swift_getEnumTagSinglePayload((uint64_t)v876 + v980, 1, v2635))
            {
              uint64_t v983 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v981, v982, *(void *)(*(void *)(v983 - 8) + 64));
            }
            else
            {
              v2624(v981, v982, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v981, 0, 1, v2635);
            }
            v314 = v2539;
            __swift_storeEnumTagSinglePayload((uint64_t)v875, 0, 1, (uint64_t)v877);
            uint64_t v312 = v2571;
            v783 = v2592;
          }
          uint64_t v992 = v314[8];
          v993 = (void *)((char *)v312 + v992);
          uint64_t v994 = (void *)((char *)v783 + v992);
          uint64_t v995 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v994, 1, v995))
          {
            uint64_t v996 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v993, v994, *(void *)(*(void *)(v996 - 8) + 64));
          }
          else
          {
            uint64_t v997 = v994[1];
            void *v993 = *v994;
            v993[1] = v997;
            uint64_t v998 = v994[3];
            v993[2] = v994[2];
            v993[3] = v998;
            uint64_t v999 = v994[5];
            v993[4] = v994[4];
            v993[5] = v999;
            uint64_t v1000 = v994[7];
            v993[6] = v994[6];
            v993[7] = v1000;
            uint64_t v1001 = v994[9];
            v993[8] = v994[8];
            v993[9] = v1001;
            uint64_t v1002 = v994[11];
            v993[10] = v994[10];
            v993[11] = v1002;
            uint64_t v1003 = v994[13];
            v993[12] = v994[12];
            v993[13] = v1003;
            uint64_t v1004 = v994[15];
            v993[14] = v994[14];
            v993[15] = v1004;
            *((unsigned char *)v993 + 128) = *((unsigned char *)v994 + 128);
            *(_WORD *)((char *)v993 + 129) = *(_WORD *)((char *)v994 + 129);
            uint64_t v1005 = v994[18];
            v993[17] = v994[17];
            v993[18] = v1005;
            uint64_t v1006 = v994[20];
            v993[19] = v994[19];
            v993[20] = v1006;
            uint64_t v1007 = v994[22];
            v993[21] = v994[21];
            v993[22] = v1007;
            uint64_t v1008 = v994[24];
            v993[23] = v994[23];
            v993[24] = v1008;
            uint64_t v1009 = v994[26];
            v993[25] = v994[25];
            v993[26] = v1009;
            uint64_t v1010 = v994[28];
            v993[27] = v994[27];
            v993[28] = v1010;
            uint64_t v1011 = v994[30];
            v993[29] = v994[29];
            v993[30] = v1011;
            uint64_t v1012 = v994[32];
            v993[31] = v994[31];
            v993[32] = v1012;
            uint64_t v1013 = v994[34];
            uint64_t v1014 = v994[33];
            *((unsigned char *)v993 + 280) = *((unsigned char *)v994 + 280);
            v993[33] = v1014;
            v993[34] = v1013;
            uint64_t v1015 = v994[37];
            v993[36] = v994[36];
            v993[37] = v1015;
            uint64_t v1016 = *(int *)(v995 + 108);
            v2488 = (char *)v993 + v1016;
            uint64_t v1017 = (char *)v994 + v1016;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1017, 1, v2635))
            {
              uint64_t v1018 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2488, v1017, *(void *)(*(void *)(v1018 - 8) + 64));
            }
            else
            {
              v2624(v2488, v1017, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v2488, 0, 1, v2635);
            }
            uint64_t v1074 = *(int *)(v995 + 112);
            v1075 = (char *)v993 + v1074;
            uint64_t v1076 = (char *)v994 + v1074;
            if (__swift_getEnumTagSinglePayload((uint64_t)v994 + v1074, 1, v2635))
            {
              uint64_t v1077 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1075, v1076, *(void *)(*(void *)(v1077 - 8) + 64));
            }
            else
            {
              v2624(v1075, v1076, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v1075, 0, 1, v2635);
            }
            v314 = v2539;
            __swift_storeEnumTagSinglePayload((uint64_t)v993, 0, 1, v995);
            uint64_t v312 = v2571;
            v783 = v2592;
          }
          uint64_t v1086 = v314[9];
          v1087 = (void *)((char *)v312 + v1086);
          uint64_t v1088 = (void *)((char *)v783 + v1086);
          uint64_t v1089 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1088, 1, (uint64_t)v1089))
          {
            uint64_t v1090 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v1087, v1088, *(void *)(*(void *)(v1090 - 8) + 64));
          }
          else
          {
            uint64_t v1091 = v1088[1];
            void *v1087 = *v1088;
            v1087[1] = v1091;
            uint64_t v1092 = v1088[3];
            v1087[2] = v1088[2];
            v1087[3] = v1092;
            uint64_t v1093 = v1088[5];
            v1087[4] = v1088[4];
            v1087[5] = v1093;
            uint64_t v1094 = v1088[7];
            v1087[6] = v1088[6];
            v1087[7] = v1094;
            uint64_t v1095 = v1088[9];
            v1087[8] = v1088[8];
            v1087[9] = v1095;
            uint64_t v1096 = v1088[11];
            v1087[10] = v1088[10];
            v1087[11] = v1096;
            uint64_t v1097 = v1088[13];
            v1087[12] = v1088[12];
            v1087[13] = v1097;
            uint64_t v1098 = v1088[15];
            v1087[14] = v1088[14];
            v1087[15] = v1098;
            *((unsigned char *)v1087 + 128) = *((unsigned char *)v1088 + 128);
            *(_WORD *)((char *)v1087 + 129) = *(_WORD *)((char *)v1088 + 129);
            uint64_t v1099 = v1088[18];
            v1087[17] = v1088[17];
            v1087[18] = v1099;
            uint64_t v1100 = v1088[20];
            v1087[19] = v1088[19];
            v1087[20] = v1100;
            uint64_t v1101 = v1088[22];
            v1087[21] = v1088[21];
            v1087[22] = v1101;
            uint64_t v1102 = v1088[24];
            v1087[23] = v1088[23];
            v1087[24] = v1102;
            uint64_t v1103 = v1088[26];
            v1087[25] = v1088[25];
            v1087[26] = v1103;
            uint64_t v1104 = v1088[28];
            v1087[27] = v1088[27];
            v1087[28] = v1104;
            uint64_t v1105 = v1088[30];
            v1087[29] = v1088[29];
            v1087[30] = v1105;
            v1087[31] = v1088[31];
            uint64_t v1106 = v1089[24];
            v2489 = (char *)v1087 + v1106;
            uint64_t v1107 = (char *)v1088 + v1106;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1107, 1, v2635))
            {
              uint64_t v1108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2489, v1107, *(void *)(*(void *)(v1108 - 8) + 64));
            }
            else
            {
              v2624(v2489, v1107, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v2489, 0, 1, v2635);
            }
            uint64_t v1155 = v1089[25];
            v1156 = (char *)v1087 + v1155;
            uint64_t v1157 = (char *)v1088 + v1155;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1088 + v1155, 1, v2635))
            {
              uint64_t v1158 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1156, v1157, *(void *)(*(void *)(v1158 - 8) + 64));
            }
            else
            {
              v2624(v1156, v1157, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v1156, 0, 1, v2635);
            }
            uint64_t v1167 = v1089[26];
            v1168 = (char *)v1087 + v1167;
            uint64_t v1169 = (char *)v1088 + v1167;
            uint64_t v1170 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1169, 1, v1170))
            {
              uint64_t v1171 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1168, v1169, *(void *)(*(void *)(v1171 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1170 - 8) + 16))(v1168, v1169, v1170);
              __swift_storeEnumTagSinglePayload((uint64_t)v1168, 0, 1, v1170);
            }
            v314 = v2539;
            __swift_storeEnumTagSinglePayload((uint64_t)v1087, 0, 1, (uint64_t)v1089);
            uint64_t v312 = v2571;
            v783 = v2592;
          }
          uint64_t v1181 = v314[10];
          v1182 = (void *)((char *)v312 + v1181);
          uint64_t v1183 = (void *)((char *)v783 + v1181);
          uint64_t v1184 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1183, 1, (uint64_t)v1184))
          {
            uint64_t v1185 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v1182, v1183, *(void *)(*(void *)(v1185 - 8) + 64));
          }
          else
          {
            uint64_t v1186 = v1183[1];
            void *v1182 = *v1183;
            v1182[1] = v1186;
            uint64_t v1187 = v1183[3];
            v1182[2] = v1183[2];
            v1182[3] = v1187;
            uint64_t v1188 = v1183[5];
            v1182[4] = v1183[4];
            v1182[5] = v1188;
            uint64_t v1189 = v1183[7];
            v1182[6] = v1183[6];
            v1182[7] = v1189;
            uint64_t v1190 = v1183[9];
            v1182[8] = v1183[8];
            v1182[9] = v1190;
            uint64_t v1191 = v1183[11];
            v1182[10] = v1183[10];
            v1182[11] = v1191;
            uint64_t v1192 = v1183[13];
            v1182[12] = v1183[12];
            v1182[13] = v1192;
            uint64_t v1193 = v1183[15];
            v1182[14] = v1183[14];
            v1182[15] = v1193;
            *((unsigned char *)v1182 + 128) = *((unsigned char *)v1183 + 128);
            *(_WORD *)((char *)v1182 + 129) = *(_WORD *)((char *)v1183 + 129);
            uint64_t v1194 = v1183[18];
            v1182[17] = v1183[17];
            v1182[18] = v1194;
            uint64_t v1195 = v1183[20];
            v1182[19] = v1183[19];
            v1182[20] = v1195;
            uint64_t v1196 = v1183[22];
            v1182[21] = v1183[21];
            v1182[22] = v1196;
            uint64_t v1197 = v1183[24];
            v1182[23] = v1183[23];
            v1182[24] = v1197;
            uint64_t v1198 = v1183[26];
            v1182[25] = v1183[25];
            v1182[26] = v1198;
            v1182[27] = v1183[27];
            uint64_t v1199 = v1184[22];
            v2490 = (char *)v1182 + v1199;
            uint64_t v2421 = (char *)v1183 + v1199;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2421, 1, v2635))
            {
              uint64_t v1200 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2490, v2421, *(void *)(*(void *)(v1200 - 8) + 64));
            }
            else
            {
              v2624(v2490, v2421, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v2490, 0, 1, v2635);
            }
            uint64_t v1242 = v1184[23];
            uint64_t v1243 = (char *)v1182 + v1242;
            uint64_t v1244 = (char *)v1183 + v1242;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1183 + v1242, 1, v2635))
            {
              uint64_t v1245 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1243, v1244, *(void *)(*(void *)(v1245 - 8) + 64));
            }
            else
            {
              v2624(v1243, v1244, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v1243, 0, 1, v2635);
            }
            uint64_t v1254 = v1184[24];
            v1255 = (char *)v1182 + v1254;
            uint64_t v1256 = (char *)v1183 + v1254;
            *(void *)v1255 = *(void *)v1256;
            v1255[8] = v1256[8];
            uint64_t v1257 = v1184[25];
            v1258 = (char *)v1182 + v1257;
            v1259 = (char *)v1183 + v1257;
            uint64_t v1260 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1259, 1, v1260))
            {
              uint64_t v1261 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1258, v1259, *(void *)(*(void *)(v1261 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1260 - 8) + 16))(v1258, v1259, v1260);
              __swift_storeEnumTagSinglePayload((uint64_t)v1258, 0, 1, v1260);
            }
            v314 = v2539;
            __swift_storeEnumTagSinglePayload((uint64_t)v1182, 0, 1, (uint64_t)v1184);
            uint64_t v312 = v2571;
            v783 = v2592;
          }
          uint64_t v1277 = v314[11];
          v1278 = (void *)((char *)v312 + v1277);
          uint64_t v1279 = (void *)((char *)v783 + v1277);
          uint64_t v1280 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1279, 1, (uint64_t)v1280))
          {
            uint64_t v1281 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v1278, v1279, *(void *)(*(void *)(v1281 - 8) + 64));
          }
          else
          {
            uint64_t v1282 = v1279[1];
            void *v1278 = *v1279;
            v1278[1] = v1282;
            uint64_t v1283 = v1279[3];
            v1278[2] = v1279[2];
            v1278[3] = v1283;
            uint64_t v1284 = v1279[5];
            v1278[4] = v1279[4];
            v1278[5] = v1284;
            uint64_t v1285 = v1279[7];
            v1278[6] = v1279[6];
            v1278[7] = v1285;
            uint64_t v1286 = v1279[9];
            v1278[8] = v1279[8];
            v1278[9] = v1286;
            uint64_t v1287 = v1279[11];
            v1278[10] = v1279[10];
            v1278[11] = v1287;
            *((unsigned char *)v1278 + 96) = *((unsigned char *)v1279 + 96);
            uint64_t v1288 = v1279[14];
            v1278[13] = v1279[13];
            v1278[14] = v1288;
            uint64_t v1289 = v1280[13];
            uint64_t v2516 = (char *)v1278 + v1289;
            uint64_t v1290 = (char *)v1279 + v1289;
            uint64_t v2448 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1290, 1, v2448))
            {
              uint64_t v1291 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2516, v1290, *(void *)(*(void *)(v1291 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2448 - 8) + 16))(v2516, v1290, v2448);
              __swift_storeEnumTagSinglePayload((uint64_t)v2516, 0, 1, v2448);
            }
            uint64_t v1320 = v1280[14];
            uint64_t v1321 = (char *)v1278 + v1320;
            uint64_t v1322 = (char *)v1279 + v1320;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1279 + v1320, 1, v2448))
            {
              uint64_t v1323 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1321, v1322, *(void *)(*(void *)(v1323 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2448 - 8) + 16))(v1321, v1322, v2448);
              __swift_storeEnumTagSinglePayload((uint64_t)v1321, 0, 1, v2448);
            }
            uint64_t v1332 = v1280[15];
            v1333 = (void *)((char *)v1278 + v1332);
            uint64_t v1334 = (void *)((char *)v1279 + v1332);
            uint64_t v1335 = v1334[1];
            void *v1333 = *v1334;
            v1333[1] = v1335;
            uint64_t v1336 = v1280[16];
            v1337 = (void *)((char *)v1278 + v1336);
            uint64_t v1338 = (void *)((char *)v1279 + v1336);
            uint64_t v2519 = v1338[1];
            void *v1337 = *v1338;
            v1337[1] = v2519;
            uint64_t v1339 = v1280[17];
            v1340 = (void *)((char *)v1278 + v1339);
            v1341 = (void *)((char *)v1279 + v1339);
            uint64_t v1342 = v1341[1];
            void *v1340 = *v1341;
            v1340[1] = v1342;
            uint64_t v1343 = v1280[18];
            uint64_t v2476 = (char *)v1279 + v1343;
            v2491 = (char *)v1278 + v1343;
            uint64_t v1344 = type metadata accessor for DateComponents();
            uint64_t v1345 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1344 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1345(v2491, v2476, v1344);
            v1345((char *)v1278 + v1280[19], (char *)v1279 + v1280[19], v1344);
            uint64_t v1346 = v1280[20];
            uint64_t v1347 = (void *)((char *)v1278 + v1346);
            v1348 = (void *)((char *)v1279 + v1346);
            uint64_t v1349 = v1348[1];
            *uint64_t v1347 = *v1348;
            v1347[1] = v1349;
            uint64_t v1350 = v1280[21];
            v1351 = (void *)((char *)v1278 + v1350);
            uint64_t v1352 = (void *)((char *)v1279 + v1350);
            uint64_t v2520 = v1352[1];
            void *v1351 = *v1352;
            v1351[1] = v2520;
            uint64_t v1353 = v1280[22];
            v1354 = (void *)((char *)v1278 + v1353);
            v1355 = (void *)((char *)v1279 + v1353);
            v2492 = (void *)v1355[1];
            void *v1354 = *v1355;
            v1354[1] = v2492;
            uint64_t v1356 = v1280[23];
            v1357 = (void *)((char *)v1278 + v1356);
            v1358 = (void *)((char *)v1279 + v1356);
            uint64_t v2477 = v1358[1];
            void *v1357 = *v1358;
            v1357[1] = v2477;
            uint64_t v1359 = v1280[24];
            v1360 = (void *)((char *)v1278 + v1359);
            v1361 = (void *)((char *)v1279 + v1359);
            uint64_t v2457 = v1361[1];
            void *v1360 = *v1361;
            v1360[1] = v2457;
            uint64_t v1362 = v1280[25];
            v1363 = (void *)((char *)v1278 + v1362);
            v1364 = (void *)((char *)v1279 + v1362);
            uint64_t v2449 = v1364[1];
            void *v1363 = *v1364;
            v1363[1] = v2449;
            uint64_t v1365 = v1280[26];
            v1366 = (void *)((char *)v1278 + v1365);
            v1367 = (void *)((char *)v1279 + v1365);
            v2442 = (void *)v1367[1];
            void *v1366 = *v1367;
            v1366[1] = v2442;
            uint64_t v1368 = v1280[27];
            v1369 = (void *)((char *)v1278 + v1368);
            v1370 = (void *)((char *)v1279 + v1368);
            uint64_t v2437 = v1370[1];
            void *v1369 = *v1370;
            v1369[1] = v2437;
            uint64_t v1371 = v1280[28];
            v1372 = (void *)((char *)v1278 + v1371);
            v1373 = (void *)((char *)v1279 + v1371);
            v2433 = (void *)v1373[1];
            void *v1372 = *v1373;
            v1372[1] = v2433;
            uint64_t v1374 = v1280[29];
            v1375 = (void *)((char *)v1278 + v1374);
            v1376 = (void *)((char *)v1279 + v1374);
            v2428 = (void *)v1376[1];
            void *v1375 = *v1376;
            v1375[1] = v2428;
            uint64_t v1377 = v1280[30];
            v1378 = (void *)((char *)v1278 + v1377);
            v1379 = (void *)((char *)v1279 + v1377);
            v2422 = (void *)v1379[1];
            void *v1378 = *v1379;
            v1378[1] = v2422;
            uint64_t v1380 = v1280[31];
            v1381 = (void *)((char *)v1278 + v1380);
            v1382 = (void *)((char *)v1279 + v1380);
            uint64_t v2419 = v1382[1];
            void *v1381 = *v1382;
            v1381[1] = v2419;
            uint64_t v1383 = v1280[32];
            v1384 = (void *)((char *)v1278 + v1383);
            v1385 = (void *)((char *)v1279 + v1383);
            uint64_t v1386 = v1385[1];
            void *v1384 = *v1385;
            v1384[1] = v1386;
            *(void *)((char *)v1278 + v1280[33]) = *(void *)((char *)v1279 + v1280[33]);
            *(void *)((char *)v1278 + v1280[34]) = *(void *)((char *)v1279 + v1280[34]);
            uint64_t v1387 = v1280[35];
            v1388 = (void *)((char *)v1278 + v1387);
            uint64_t v1389 = (void *)((char *)v1279 + v1387);
            uint64_t v1390 = v1389[1];
            void *v1388 = *v1389;
            v1388[1] = v1390;
            uint64_t v1391 = v1280[36];
            v1392 = (void *)((char *)v1278 + v1391);
            uint64_t v1393 = (void *)((char *)v1279 + v1391);
            uint64_t v1394 = v1393[1];
            void *v1392 = *v1393;
            v1392[1] = v1394;
            uint64_t v1395 = v1280[37];
            v1396 = (void *)((char *)v1278 + v1395);
            uint64_t v1397 = (void *)((char *)v1279 + v1395);
            uint64_t v1398 = v1397[1];
            void *v1396 = *v1397;
            v1396[1] = v1398;
            uint64_t v1399 = v1280[38];
            v2466 = (char *)v1278 + v1399;
            v2417 = (char *)v1279 + v1399;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2417, 1, v2635))
            {
              uint64_t v1400 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2466, v2417, *(void *)(*(void *)(v1400 - 8) + 64));
            }
            else
            {
              v2624(v2466, v2417, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v2466, 0, 1, v2635);
            }
            uint64_t v1541 = v1280[39];
            uint64_t v1542 = (void *)((char *)v1278 + v1541);
            uint64_t v1543 = (void *)((char *)v1279 + v1541);
            uint64_t v1544 = v1543[1];
            *uint64_t v1542 = *v1543;
            v1542[1] = v1544;
            uint64_t v1545 = v1280[40];
            v1546 = (void *)((char *)v1278 + v1545);
            uint64_t v1547 = (void *)((char *)v1279 + v1545);
            uint64_t v1548 = v1547[1];
            void *v1546 = *v1547;
            v1546[1] = v1548;
            uint64_t v1549 = v1280[41];
            v1550 = (char *)v1278 + v1549;
            uint64_t v1551 = (char *)v1279 + v1549;
            v1550[8] = v1551[8];
            *(void *)v1550 = *(void *)v1551;
            uint64_t v1552 = v1280[42];
            v1553 = (void *)((char *)v1278 + v1552);
            v1554 = (void *)((char *)v1279 + v1552);
            uint64_t v1555 = v1554[1];
            void *v1553 = *v1554;
            v1553[1] = v1555;
            uint64_t v1556 = v1280[43];
            v1557 = (char *)v1278 + v1556;
            uint64_t v1558 = (char *)v1279 + v1556;
            *(_OWORD *)v1557 = *(_OWORD *)v1558;
            *(void *)(v1557 + 13) = *(void *)(v1558 + 13);
            uint64_t v1559 = v1280[44];
            v1560 = (void *)((char *)v1278 + v1559);
            v1561 = (void *)((char *)v1279 + v1559);
            uint64_t v1562 = v1561[1];
            void *v1560 = *v1561;
            v1560[1] = v1562;
            uint64_t v1563 = v1280[45];
            v1564 = (void *)((char *)v1278 + v1563);
            uint64_t v1565 = (void *)((char *)v1279 + v1563);
            uint64_t v1566 = v1565[1];
            void *v1564 = *v1565;
            v1564[1] = v1566;
            uint64_t v1567 = v1280[46];
            v1568 = (void *)((char *)v1278 + v1567);
            uint64_t v1569 = (void *)((char *)v1279 + v1567);
            uint64_t v1570 = v1569[1];
            void *v1568 = *v1569;
            v1568[1] = v1570;
            uint64_t v1571 = v1280[47];
            v1572 = (void *)((char *)v1278 + v1571);
            uint64_t v1573 = (void *)((char *)v1279 + v1571);
            uint64_t v1574 = v1573[1];
            void *v1572 = *v1573;
            v1572[1] = v1574;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1278, 0, 1, (uint64_t)v1280);
            v314 = v2539;
            uint64_t v312 = v2571;
            v783 = v2592;
          }
          uint64_t v1575 = v314[12];
          v1576 = (void *)((char *)v312 + v1575);
          uint64_t v1577 = (void *)((char *)v783 + v1575);
          uint64_t v1578 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1577, 1, (uint64_t)v1578))
          {
            uint64_t v1579 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v1576, v1577, *(void *)(*(void *)(v1579 - 8) + 64));
          }
          else
          {
            uint64_t v1580 = v1577[1];
            void *v1576 = *v1577;
            v1576[1] = v1580;
            uint64_t v1581 = v1577[3];
            v1576[2] = v1577[2];
            v1576[3] = v1581;
            uint64_t v1582 = v1577[5];
            v1576[4] = v1577[4];
            v1576[5] = v1582;
            uint64_t v1583 = v1577[7];
            v1576[6] = v1577[6];
            v1576[7] = v1583;
            uint64_t v1584 = v1577[9];
            v1576[8] = v1577[8];
            v1576[9] = v1584;
            uint64_t v1585 = v1577[11];
            v1576[10] = v1577[10];
            v1576[11] = v1585;
            *((unsigned char *)v1576 + 96) = *((unsigned char *)v1577 + 96);
            uint64_t v1586 = v1577[14];
            v1576[13] = v1577[13];
            v1576[14] = v1586;
            uint64_t v1587 = v1577[16];
            v1576[15] = v1577[15];
            v1576[16] = v1587;
            uint64_t v1588 = v1578[14];
            uint64_t v2525 = (char *)v1576 + v1588;
            uint64_t v2452 = (char *)v1577 + v1588;
            v2445 = (void *)type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2452, 1, (uint64_t)v2445))
            {
              uint64_t v1589 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2525, v2452, *(void *)(*(void *)(v1589 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v2445 - 1) + 16))(v2525, v2452, v2445);
              __swift_storeEnumTagSinglePayload((uint64_t)v2525, 0, 1, (uint64_t)v2445);
            }
            uint64_t v1688 = v1578[15];
            uint64_t v1689 = (char *)v1576 + v1688;
            uint64_t v1690 = (char *)v1577 + v1688;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1577 + v1688, 1, (uint64_t)v2445))
            {
              uint64_t v1691 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1689, v1690, *(void *)(*(void *)(v1691 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v2445 - 1) + 16))(v1689, v1690, v2445);
              __swift_storeEnumTagSinglePayload((uint64_t)v1689, 0, 1, (uint64_t)v2445);
            }
            uint64_t v1700 = v1578[16];
            v1701 = (void *)((char *)v1576 + v1700);
            uint64_t v1702 = (void *)((char *)v1577 + v1700);
            uint64_t v1703 = v1702[1];
            void *v1701 = *v1702;
            v1701[1] = v1703;
            uint64_t v1704 = v1578[17];
            v1705 = (void *)((char *)v1576 + v1704);
            uint64_t v1706 = (void *)((char *)v1577 + v1704);
            uint64_t v2528 = v1706[1];
            void *v1705 = *v1706;
            v1705[1] = v2528;
            uint64_t v1707 = v1578[18];
            v1708 = (void *)((char *)v1576 + v1707);
            v1709 = (void *)((char *)v1577 + v1707);
            uint64_t v2496 = (void *)v1709[1];
            void *v1708 = *v1709;
            v1708[1] = v2496;
            uint64_t v1710 = v1578[19];
            v1711 = (void *)((char *)v1576 + v1710);
            v1712 = (void *)((char *)v1577 + v1710);
            uint64_t v2480 = v1712[1];
            void *v1711 = *v1712;
            v1711[1] = v2480;
            uint64_t v1713 = v1578[20];
            v1714 = (void *)((char *)v1576 + v1713);
            v1715 = (void *)((char *)v1577 + v1713);
            uint64_t v2454 = v1715[1];
            void *v1714 = *v1715;
            v1714[1] = v2454;
            *(void *)((char *)v1576 + v1578[21]) = *(void *)((char *)v1577 + v1578[21]);
            *(void *)((char *)v1576 + v1578[22]) = *(void *)((char *)v1577 + v1578[22]);
            uint64_t v1716 = v1578[23];
            v1717 = (char *)v1576 + v1716;
            v1718 = (char *)v1577 + v1716;
            *(void *)v1717 = *(void *)v1718;
            v1717[8] = v1718[8];
            uint64_t v1719 = v1578[24];
            v1720 = (char *)v1576 + v1719;
            v1721 = (char *)v1577 + v1719;
            *(void *)v1720 = *(void *)v1721;
            v1720[8] = v1721[8];
            uint64_t v1722 = v1578[25];
            v1723 = (void *)((char *)v1576 + v1722);
            v1724 = (void *)((char *)v1577 + v1722);
            uint64_t v1725 = v1724[1];
            void *v1723 = *v1724;
            v1723[1] = v1725;
            uint64_t v1726 = v1578[26];
            v1727 = (void *)((char *)v1576 + v1726);
            uint64_t v1728 = (void *)((char *)v1577 + v1726);
            uint64_t v1729 = v1728[1];
            void *v1727 = *v1728;
            v1727[1] = v1729;
            uint64_t v1730 = v1578[27];
            v1731 = (void *)((char *)v1576 + v1730);
            uint64_t v1732 = (void *)((char *)v1577 + v1730);
            uint64_t v1733 = v1732[1];
            void *v1731 = *v1732;
            v1731[1] = v1733;
            uint64_t v1734 = v1578[28];
            v1735 = (void *)((char *)v1576 + v1734);
            uint64_t v1736 = (void *)((char *)v1577 + v1734);
            uint64_t v1737 = v1736[1];
            void *v1735 = *v1736;
            v1735[1] = v1737;
            uint64_t v1738 = v1578[29];
            v1739 = (char *)v1576 + v1738;
            uint64_t v1740 = (char *)v1577 + v1738;
            *(void *)v1739 = *(void *)v1740;
            v1739[8] = v1740[8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1576, 0, 1, (uint64_t)v1578);
            v314 = v2539;
            uint64_t v312 = v2571;
            v783 = v2592;
          }
          uint64_t v1741 = v314[13];
          v1742 = (void *)((char *)v312 + v1741);
          v1743 = (void *)((char *)v783 + v1741);
          uint64_t v1744 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1743, 1, (uint64_t)v1744))
          {
            uint64_t v1745 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v1742, v1743, *(void *)(*(void *)(v1745 - 8) + 64));
          }
          else
          {
            uint64_t v1746 = v1743[1];
            void *v1742 = *v1743;
            v1742[1] = v1746;
            uint64_t v1747 = v1743[3];
            v1742[2] = v1743[2];
            v1742[3] = v1747;
            uint64_t v2529 = v1743[5];
            v1742[4] = v1743[4];
            v1742[5] = v2529;
            uint64_t v1748 = v1743[7];
            v1742[6] = v1743[6];
            v1742[7] = v1748;
            uint64_t v1749 = v1743[9];
            v1742[8] = v1743[8];
            v1742[9] = v1749;
            uint64_t v1750 = v1743[11];
            v1742[10] = v1743[10];
            v1742[11] = v1750;
            *((unsigned char *)v1742 + 96) = *((unsigned char *)v1743 + 96);
            uint64_t v1751 = v1743[14];
            v1742[13] = v1743[13];
            v1742[14] = v1751;
            uint64_t v1752 = v1743[16];
            v1742[15] = v1743[15];
            v1742[16] = v1752;
            uint64_t v1753 = v1744[14];
            v2597 = (char *)v1742 + v1753;
            uint64_t v2461 = (char *)v1743 + v1753;
            uint64_t v2455 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2461, 1, v2455))
            {
              uint64_t v1754 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2597, v2461, *(void *)(*(void *)(v1754 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2455 - 8) + 16))(v2597, v2461, v2455);
              __swift_storeEnumTagSinglePayload((uint64_t)v2597, 0, 1, v2455);
            }
            uint64_t v1865 = v1744[15];
            uint64_t v1866 = (void *)((char *)v1742 + v1865);
            uint64_t v1867 = (void *)((char *)v1743 + v1865);
            uint64_t v1868 = v1867[1];
            *uint64_t v1866 = *v1867;
            v1866[1] = v1868;
            uint64_t v1869 = v1744[16];
            v1870 = (void *)((char *)v1742 + v1869);
            uint64_t v1871 = (void *)((char *)v1743 + v1869);
            uint64_t v1872 = v1871[1];
            void *v1870 = *v1871;
            v1870[1] = v1872;
            uint64_t v1873 = v1744[17];
            v1874 = (void *)((char *)v1742 + v1873);
            uint64_t v1875 = (void *)((char *)v1743 + v1873);
            uint64_t v2598 = v1875[1];
            void *v1874 = *v1875;
            v1874[1] = v2598;
            uint64_t v1876 = v1744[18];
            v1877 = (void *)((char *)v1742 + v1876);
            v1878 = (void *)((char *)v1743 + v1876);
            uint64_t v2534 = v1878[1];
            void *v1877 = *v1878;
            v1877[1] = v2534;
            uint64_t v1879 = v1744[19];
            v1880 = (void *)((char *)v1742 + v1879);
            v1881 = (void *)((char *)v1743 + v1879);
            uint64_t v1882 = v1881[1];
            void *v1880 = *v1881;
            v1880[1] = v1882;
            *(void *)((char *)v1742 + v1744[20]) = *(void *)((char *)v1743 + v1744[20]);
            uint64_t v1883 = v1744[21];
            v1884 = (void *)((char *)v1742 + v1883);
            uint64_t v1885 = (void *)((char *)v1743 + v1883);
            uint64_t v1886 = v1885[1];
            void *v1884 = *v1885;
            v1884[1] = v1886;
            uint64_t v1887 = v1744[22];
            v1888 = (void *)((char *)v1742 + v1887);
            uint64_t v1889 = (void *)((char *)v1743 + v1887);
            uint64_t v1890 = v1889[1];
            void *v1888 = *v1889;
            v1888[1] = v1890;
            uint64_t v1891 = v1744[23];
            v1892 = (void *)((char *)v1742 + v1891);
            uint64_t v1893 = (void *)((char *)v1743 + v1891);
            uint64_t v1894 = v1893[1];
            void *v1892 = *v1893;
            v1892[1] = v1894;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1742, 0, 1, (uint64_t)v1744);
            v314 = v2539;
            uint64_t v312 = v2571;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v312, 0, 1, (uint64_t)v314);
        }
        uint64_t v1895 = v2650[22];
        v1896 = (void *)((char *)v11 + v1895);
        uint64_t v1897 = &v2680[v1895];
        uint64_t v1898 = type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1897, 1, v1898))
        {
          uint64_t v1899 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v1896, v1897, *(void *)(*(void *)(v1899 - 8) + 64));
        }
        else
        {
          uint64_t v1900 = *((void *)v1897 + 1);
          void *v1896 = *(void *)v1897;
          v1896[1] = v1900;
          uint64_t v1901 = *((void *)v1897 + 3);
          v1896[2] = *((void *)v1897 + 2);
          v1896[3] = v1901;
          uint64_t v1902 = *((void *)v1897 + 5);
          uint64_t v1903 = (int *)v1898;
          v1896[4] = *((void *)v1897 + 4);
          v1896[5] = v1902;
          uint64_t v1904 = *((void *)v1897 + 7);
          v1896[6] = *((void *)v1897 + 6);
          v1896[7] = v1904;
          uint64_t v1905 = *((void *)v1897 + 9);
          v1896[8] = *((void *)v1897 + 8);
          v1896[9] = v1905;
          uint64_t v1906 = *((void *)v1897 + 11);
          v1896[10] = *((void *)v1897 + 10);
          v1896[11] = v1906;
          v2599 = v1903;
          uint64_t v1907 = v1903[10];
          v2577 = (char *)v1896 + v1907;
          uint64_t v1908 = &v1897[v1907];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1908, 1, v2635))
          {
            uint64_t v1909 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2577, v1908, *(void *)(*(void *)(v1909 - 8) + 64));
          }
          else
          {
            v2624(v2577, v1908, v2635);
            __swift_storeEnumTagSinglePayload((uint64_t)v2577, 0, 1, v2635);
          }
          uint64_t v1910 = v2599[11];
          v1911 = (char *)v1896 + v1910;
          uint64_t v1912 = &v1897[v1910];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v1897[v1910], 1, v2635))
          {
            uint64_t v1913 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1911, v1912, *(void *)(*(void *)(v1913 - 8) + 64));
          }
          else
          {
            v2624(v1911, v1912, v2635);
            __swift_storeEnumTagSinglePayload((uint64_t)v1911, 0, 1, v2635);
          }
          uint64_t v1914 = v2599[12];
          v1915 = (void *)((char *)v1896 + v1914);
          uint64_t v1916 = &v1897[v1914];
          uint64_t v1917 = *((void *)v1916 + 1);
          void *v1915 = *(void *)v1916;
          v1915[1] = v1917;
          uint64_t v1918 = v2599[13];
          v1919 = (void *)((char *)v1896 + v1918);
          uint64_t v1920 = &v1897[v1918];
          uint64_t v1921 = *((void *)v1920 + 1);
          void *v1919 = *(void *)v1920;
          v1919[1] = v1921;
          uint64_t v1922 = v2599[14];
          v1923 = (void *)((char *)v1896 + v1922);
          uint64_t v1924 = &v1897[v1922];
          uint64_t v1925 = *((void *)v1924 + 1);
          void *v1923 = *(void *)v1924;
          v1923[1] = v1925;
          uint64_t v1926 = v2599[15];
          v1927 = (char *)v1896 + v1926;
          uint64_t v1928 = &v1897[v1926];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1928, 1, v2635))
          {
            uint64_t v1929 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1927, v1928, *(void *)(*(void *)(v1929 - 8) + 64));
          }
          else
          {
            v2624(v1927, v1928, v2635);
            __swift_storeEnumTagSinglePayload((uint64_t)v1927, 0, 1, v2635);
          }
          uint64_t v1930 = v2599[16];
          v1931 = (void *)((char *)v1896 + v1930);
          uint64_t v1932 = &v1897[v1930];
          uint64_t v1933 = *((void *)v1932 + 1);
          void *v1931 = *(void *)v1932;
          v1931[1] = v1933;
          uint64_t v1934 = v2599[17];
          v1935 = (void *)((char *)v1896 + v1934);
          uint64_t v1936 = &v1897[v1934];
          uint64_t v1937 = *((void *)v1936 + 1);
          void *v1935 = *(void *)v1936;
          v1935[1] = v1937;
          uint64_t v1938 = v2599[18];
          v1939 = (void *)((char *)v1896 + v1938);
          uint64_t v1940 = &v1897[v1938];
          uint64_t v2578 = *((void *)v1940 + 1);
          void *v1939 = *(void *)v1940;
          v1939[1] = v2578;
          uint64_t v1941 = v2599[19];
          v1942 = (void *)((char *)v1896 + v1941);
          v1943 = &v1897[v1941];
          uint64_t v1944 = *((void *)v1943 + 1);
          void *v1942 = *(void *)v1943;
          v1942[1] = v1944;
          uint64_t v1945 = v2599[20];
          v1946 = (void *)((char *)v1896 + v1945);
          uint64_t v1947 = &v1897[v1945];
          uint64_t v1948 = *((void *)v1947 + 1);
          void *v1946 = *(void *)v1947;
          v1946[1] = v1948;
          uint64_t v1949 = v2599[21];
          v1950 = (void *)((char *)v1896 + v1949);
          uint64_t v1951 = &v1897[v1949];
          uint64_t v1952 = *((void *)v1951 + 1);
          void *v1950 = *(void *)v1951;
          v1950[1] = v1952;
          uint64_t v1953 = v2599[22];
          v1954 = (void *)((char *)v1896 + v1953);
          uint64_t v1955 = &v1897[v1953];
          uint64_t v1956 = *((void *)v1955 + 1);
          void *v1954 = *(void *)v1955;
          v1954[1] = v1956;
          uint64_t v1957 = v2599[23];
          v1958 = (void *)((char *)v1896 + v1957);
          uint64_t v1959 = &v1897[v1957];
          uint64_t v1960 = *((void *)v1959 + 1);
          void *v1958 = *(void *)v1959;
          v1958[1] = v1960;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v1896, 0, 1, (uint64_t)v2599);
        }
        uint64_t v1961 = v2650[23];
        v1962 = (void *)((char *)v11 + v1961);
        uint64_t v1963 = &v2680[v1961];
        uint64_t v1964 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1963, 1, (uint64_t)v1964))
        {
          uint64_t v1965 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v1962, v1963, *(void *)(*(void *)(v1965 - 8) + 64));
        }
        else
        {
          uint64_t v1966 = *((void *)v1963 + 1);
          void *v1962 = *(void *)v1963;
          v1962[1] = v1966;
          uint64_t v1967 = *((void *)v1963 + 3);
          v1962[2] = *((void *)v1963 + 2);
          v1962[3] = v1967;
          uint64_t v1968 = *((void *)v1963 + 5);
          v1962[4] = *((void *)v1963 + 4);
          v1962[5] = v1968;
          uint64_t v1969 = *((void *)v1963 + 7);
          v1962[6] = *((void *)v1963 + 6);
          v1962[7] = v1969;
          uint64_t v2579 = *((void *)v1963 + 9);
          v1962[8] = *((void *)v1963 + 8);
          v1962[9] = v2579;
          uint64_t v2564 = *((void *)v1963 + 11);
          v1962[10] = *((void *)v1963 + 10);
          v1962[11] = v2564;
          uint64_t v1970 = v1964[11];
          uint64_t v2600 = (char *)v1962 + v1970;
          uint64_t v1971 = &v1963[v1970];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1971, 1, v2635))
          {
            uint64_t v1972 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2600, v1971, *(void *)(*(void *)(v1972 - 8) + 64));
          }
          else
          {
            v2624(v2600, v1971, v2635);
            __swift_storeEnumTagSinglePayload((uint64_t)v2600, 0, 1, v2635);
          }
          uint64_t v1973 = v1964[12];
          v1974 = (void *)((char *)v1962 + v1973);
          uint64_t v1975 = &v1963[v1973];
          uint64_t v1976 = *((void *)v1975 + 1);
          void *v1974 = *(void *)v1975;
          v1974[1] = v1976;
          *(void *)((char *)v1962 + v1964[13]) = *(void *)&v1963[v1964[13]];
          uint64_t v1977 = v1964[14];
          v1978 = (char *)v1962 + v1977;
          uint64_t v1979 = &v1963[v1977];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1979, 1, v2635))
          {
            uint64_t v1980 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1978, v1979, *(void *)(*(void *)(v1980 - 8) + 64));
          }
          else
          {
            v2624(v1978, v1979, v2635);
            __swift_storeEnumTagSinglePayload((uint64_t)v1978, 0, 1, v2635);
          }
          *(void *)((char *)v1962 + v1964[15]) = *(void *)&v1963[v1964[15]];
          *(void *)((char *)v1962 + v1964[16]) = *(void *)&v1963[v1964[16]];
          uint64_t v1981 = v1964[17];
          v1982 = (void *)((char *)v1962 + v1981);
          uint64_t v1983 = &v1963[v1981];
          uint64_t v1984 = *((void *)v1983 + 1);
          void *v1982 = *(void *)v1983;
          v1982[1] = v1984;
          *(void *)((char *)v1962 + v1964[18]) = *(void *)&v1963[v1964[18]];
          *(void *)((char *)v1962 + v1964[19]) = *(void *)&v1963[v1964[19]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v1962, 0, 1, (uint64_t)v1964);
        }
        uint64_t v1985 = v2650[24];
        v1986 = (void *)((char *)v11 + v1985);
        uint64_t v1987 = &v2680[v1985];
        uint64_t v1988 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1987, 1, (uint64_t)v1988))
        {
          uint64_t v1989 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v1986, v1987, *(void *)(*(void *)(v1989 - 8) + 64));
        }
        else
        {
          uint64_t v1990 = *((void *)v1987 + 1);
          void *v1986 = *(void *)v1987;
          v1986[1] = v1990;
          uint64_t v1991 = *((void *)v1987 + 3);
          v1986[2] = *((void *)v1987 + 2);
          v1986[3] = v1991;
          uint64_t v1992 = *((void *)v1987 + 5);
          v1986[4] = *((void *)v1987 + 4);
          v1986[5] = v1992;
          uint64_t v1993 = *((void *)v1987 + 7);
          v1986[6] = *((void *)v1987 + 6);
          v1986[7] = v1993;
          uint64_t v1994 = v1988[8];
          uint64_t v2580 = &v1987[v1994];
          uint64_t v2601 = (char *)v1986 + v1994;
          uint64_t v1995 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2580, 1, v1995))
          {
            uint64_t v1996 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2601, v2580, *(void *)(*(void *)(v1996 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1995 - 8) + 16))(v2601, v2580, v1995);
            __swift_storeEnumTagSinglePayload((uint64_t)v2601, 0, 1, v1995);
          }
          uint64_t v1997 = v1988[9];
          uint64_t v1998 = (void *)((char *)v1986 + v1997);
          uint64_t v1999 = &v1987[v1997];
          uint64_t v2000 = *((void *)v1999 + 1);
          *uint64_t v1998 = *(void *)v1999;
          v1998[1] = v2000;
          uint64_t v2001 = v1988[10];
          v2002 = (void *)((char *)v1986 + v2001);
          uint64_t v2003 = &v1987[v2001];
          uint64_t v2004 = *((void *)v2003 + 1);
          void *v2002 = *(void *)v2003;
          v2002[1] = v2004;
          uint64_t v2005 = v1988[11];
          v2006 = (void *)((char *)v1986 + v2005);
          uint64_t v2007 = &v1987[v2005];
          uint64_t v2008 = *((void *)v2007 + 1);
          void *v2006 = *(void *)v2007;
          v2006[1] = v2008;
          uint64_t v2009 = v1988[12];
          v2010 = (char *)v1986 + v2009;
          uint64_t v2011 = &v1987[v2009];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2011, 1, v2635))
          {
            uint64_t v2012 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2010, v2011, *(void *)(*(void *)(v2012 - 8) + 64));
          }
          else
          {
            v2624(v2010, v2011, v2635);
            __swift_storeEnumTagSinglePayload((uint64_t)v2010, 0, 1, v2635);
          }
          uint64_t v2013 = v1988[13];
          v2014 = (char *)v1986 + v2013;
          uint64_t v2015 = &v1987[v2013];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v1987[v2013], 1, v2635))
          {
            uint64_t v2016 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2014, v2015, *(void *)(*(void *)(v2016 - 8) + 64));
          }
          else
          {
            v2624(v2014, v2015, v2635);
            __swift_storeEnumTagSinglePayload((uint64_t)v2014, 0, 1, v2635);
          }
          uint64_t v2017 = v1988[14];
          v2018 = (char *)v1986 + v2017;
          uint64_t v2019 = &v1987[v2017];
          *(void *)v2018 = *(void *)v2019;
          v2018[8] = v2019[8];
          uint64_t v2020 = v1988[15];
          v2021 = (void *)((char *)v1986 + v2020);
          v2022 = &v1987[v2020];
          uint64_t v2023 = *((void *)v2022 + 1);
          void *v2021 = *(void *)v2022;
          v2021[1] = v2023;
          uint64_t v2024 = v1988[16];
          v2025 = (void *)((char *)v1986 + v2024);
          uint64_t v2026 = &v1987[v2024];
          uint64_t v2027 = *((void *)v2026 + 1);
          void *v2025 = *(void *)v2026;
          v2025[1] = v2027;
          uint64_t v2028 = v1988[17];
          v2029 = (void *)((char *)v1986 + v2028);
          uint64_t v2030 = &v1987[v2028];
          uint64_t v2031 = *((void *)v2030 + 1);
          void *v2029 = *(void *)v2030;
          v2029[1] = v2031;
          uint64_t v2032 = v1988[18];
          v2033 = (void *)((char *)v1986 + v2032);
          uint64_t v2034 = &v1987[v2032];
          uint64_t v2035 = *((void *)v2034 + 1);
          void *v2033 = *(void *)v2034;
          v2033[1] = v2035;
          uint64_t v2036 = v1988[19];
          v2037 = (void *)((char *)v1986 + v2036);
          uint64_t v2038 = &v1987[v2036];
          uint64_t v2039 = *((void *)v2038 + 1);
          void *v2037 = *(void *)v2038;
          v2037[1] = v2039;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v1986, 0, 1, (uint64_t)v1988);
        }
        uint64_t v2040 = v2650[25];
LABEL_535:
        v2395 = (void *)((char *)v11 + v2040);
        v2396 = &v2680[v2040];
        uint64_t v2397 = *(void *)&v2680[v2040 + 8];
        if (v2397)
        {
          void *v2395 = *(void *)v2396;
          v2395[1] = v2397;
          uint64_t v2398 = *((void *)v2396 + 3);
          v2395[2] = *((void *)v2396 + 2);
          v2395[3] = v2398;
          uint64_t v2399 = *((void *)v2396 + 5);
          v2395[4] = *((void *)v2396 + 4);
          v2395[5] = v2399;
          uint64_t v2400 = *((void *)v2396 + 7);
          v2395[6] = *((void *)v2396 + 6);
          v2395[7] = v2400;
          uint64_t v2401 = *((void *)v2396 + 9);
          v2395[8] = *((void *)v2396 + 8);
          v2395[9] = v2401;
          uint64_t v2402 = *((void *)v2396 + 11);
          v2395[10] = *((void *)v2396 + 10);
          v2395[11] = v2402;
          uint64_t v2623 = *((void *)v2396 + 13);
          v2395[12] = *((void *)v2396 + 12);
          v2395[13] = v2623;
          uint64_t v2403 = *((void *)v2396 + 15);
          v2395[14] = *((void *)v2396 + 14);
          v2395[15] = v2403;
          uint64_t v2665 = *((void *)v2396 + 17);
          v2395[16] = *((void *)v2396 + 16);
          v2395[17] = v2665;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_537:
          swift_bridgeObjectRetain();
        }
        else
        {
          memcpy(v2395, v2396, 0x90uLL);
        }
LABEL_538:
        uint64_t v13 = v2666;
        goto LABEL_539;
    }
  }
  return a1;
}

#error "25807D054: too big function (funcsize=0)"

uint64_t initializeWithTake for SearchAppEntity.Builder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v9 = type metadata accessor for SearchResult(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        long long v12 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v12;
        long long v13 = v8[3];
        v7[2] = v8[2];
        v7[3] = v13;
        long long v14 = v8[5];
        v7[4] = v8[4];
        v7[5] = v14;
        uint64_t v15 = (int *)type metadata accessor for EmailDocument(0);
        uint64_t v16 = v15[12];
        uint64_t v17 = (char *)v7 + v16;
        uint64_t v18 = (char *)v8 + v16;
        uint64_t v19 = type metadata accessor for Date();
        uint64_t v1151 = *(void (**)(char *, char *))(*(void *)(v19 - 8) + 32);
        uint64_t v1154 = (void *)v19;
        v1151(v17, v18);
        *(void *)((char *)v7 + v15[13]) = *(void *)((char *)v8 + v15[13]);
        *(void *)((char *)v7 + v15[14]) = *(void *)((char *)v8 + v15[14]);
        *(void *)((char *)v7 + v15[15]) = *(void *)((char *)v8 + v15[15]);
        *((unsigned char *)v7 + v15[16]) = *((unsigned char *)v8 + v15[16]);
        *((unsigned char *)v7 + v15[17]) = *((unsigned char *)v8 + v15[17]);
        *(_OWORD *)((char *)v7 + v15[18]) = *(_OWORD *)((char *)v8 + v15[18]);
        uint64_t v20 = v15[19];
        uint64_t v21 = (char *)v7 + v20;
        uint64_t v22 = (char *)v8 + v20;
        long long v23 = *((_OWORD *)v22 + 1);
        *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
        *((_OWORD *)v21 + 1) = v23;
        *((void *)v21 + 4) = *((void *)v22 + 4);
        *(_OWORD *)((char *)v7 + v15[20]) = *(_OWORD *)((char *)v8 + v15[20]);
        uint64_t v1158 = v15;
        uint64_t v24 = v15[21];
        uint64_t v25 = (_OWORD *)((char *)v7 + v24);
        uint64_t v26 = (_OWORD *)((char *)v8 + v24);
        uint64_t v27 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, (uint64_t)v27))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
          uint64_t v29 = v1158;
        }
        else
        {
          *uint64_t v25 = *v26;
          uint64_t v231 = v27[5];
          uint64_t v232 = (_OWORD *)((char *)v25 + v231);
          uint64_t v233 = (_OWORD *)((char *)v26 + v231);
          uint64_t v234 = type metadata accessor for RentalCarReservation(0);
          __dst = v25;
          uint64_t v1146 = v27;
          uint64_t v1136 = v26;
          if (__swift_getEnumTagSinglePayload((uint64_t)v233, 1, v234))
          {
            uint64_t v235 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v232, v233, *(void *)(*(void *)(v235 - 8) + 64));
          }
          else
          {
            long long v355 = v233[1];
            *uint64_t v232 = *v233;
            v232[1] = v355;
            long long v356 = v233[3];
            v232[2] = v233[2];
            v232[3] = v356;
            long long v357 = v233[5];
            v232[4] = v233[4];
            v232[5] = v357;
            long long v358 = v233[7];
            v232[6] = v233[6];
            v232[7] = v358;
            *((unsigned char *)v232 + 128) = *((unsigned char *)v233 + 128);
            *(_WORD *)((char *)v232 + 129) = *(_WORD *)((char *)v233 + 129);
            *((void *)v232 + 17) = *((void *)v233 + 17);
            long long v359 = v233[10];
            v232[9] = v233[9];
            v232[10] = v359;
            long long v360 = v233[12];
            v232[11] = v233[11];
            v232[12] = v360;
            long long v361 = v233[14];
            v232[13] = v233[13];
            v232[14] = v361;
            v232[15] = v233[15];
            *((void *)v232 + 32) = *((void *)v233 + 32);
            *(_OWORD *)((char *)v232 + 264) = *(_OWORD *)((char *)v233 + 264);
            *(_OWORD *)((char *)v232 + 280) = *(_OWORD *)((char *)v233 + 280);
            *(_OWORD *)((char *)v232 + 296) = *(_OWORD *)((char *)v233 + 296);
            *(_OWORD *)((char *)v232 + 312) = *(_OWORD *)((char *)v233 + 312);
            *(_OWORD *)((char *)v232 + 328) = *(_OWORD *)((char *)v233 + 328);
            *(_OWORD *)((char *)v232 + 344) = *(_OWORD *)((char *)v233 + 344);
            *(_OWORD *)((char *)v232 + 360) = *(_OWORD *)((char *)v233 + 360);
            *((unsigned char *)v232 + 384) = *((unsigned char *)v233 + 384);
            *((void *)v232 + 47) = *((void *)v233 + 47);
            *(_OWORD *)((char *)v232 + 392) = *(_OWORD *)((char *)v233 + 392);
            *(_OWORD *)((char *)v232 + 408) = *(_OWORD *)((char *)v233 + 408);
            uint64_t v362 = *(int *)(v234 + 140);
            uint64_t v363 = (char *)v232 + v362;
            uint64_t v364 = (char *)v233 + v362;
            if (__swift_getEnumTagSinglePayload((uint64_t)v233 + v362, 1, (uint64_t)v1154))
            {
              uint64_t v365 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v363, v364, *(void *)(*(void *)(v365 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1151)(v363, v364, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v363, 0, 1, (uint64_t)v1154);
            }
            uint64_t v388 = *(int *)(v234 + 144);
            uint64_t v389 = (char *)v232 + v388;
            v390 = (char *)v233 + v388;
            if (__swift_getEnumTagSinglePayload((uint64_t)v233 + v388, 1, (uint64_t)v1154))
            {
              uint64_t v391 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v389, v390, *(void *)(*(void *)(v391 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1151)(v389, v390, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v389, 0, 1, (uint64_t)v1154);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v232, 0, 1, v234);
            uint64_t v25 = __dst;
            uint64_t v27 = v1146;
          }
          uint64_t v400 = v27[6];
          uint64_t v401 = (_OWORD *)((char *)v25 + v400);
          v402 = (_OWORD *)((char *)v26 + v400);
          uint64_t v403 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v402, 1, v403))
          {
            uint64_t v404 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v401, v402, *(void *)(*(void *)(v404 - 8) + 64));
          }
          else
          {
            long long v405 = v402[1];
            *uint64_t v401 = *v402;
            v401[1] = v405;
            long long v406 = v402[3];
            v401[2] = v402[2];
            v401[3] = v406;
            long long v407 = v402[5];
            v401[4] = v402[4];
            v401[5] = v407;
            long long v408 = v402[7];
            v401[6] = v402[6];
            v401[7] = v408;
            *((unsigned char *)v401 + 128) = *((unsigned char *)v402 + 128);
            *(_WORD *)((char *)v401 + 129) = *(_WORD *)((char *)v402 + 129);
            *((void *)v401 + 17) = *((void *)v402 + 17);
            long long v409 = v402[10];
            v401[9] = v402[9];
            v401[10] = v409;
            long long v410 = v402[12];
            v401[11] = v402[11];
            v401[12] = v410;
            *((void *)v401 + 26) = *((void *)v402 + 26);
            *(_OWORD *)((char *)v401 + 216) = *(_OWORD *)((char *)v402 + 216);
            *(_OWORD *)((char *)v401 + 232) = *(_OWORD *)((char *)v402 + 232);
            *(_OWORD *)((char *)v401 + 248) = *(_OWORD *)((char *)v402 + 248);
            *(_OWORD *)((char *)v401 + 264) = *(_OWORD *)((char *)v402 + 264);
            *((unsigned char *)v401 + 296) = *((unsigned char *)v402 + 296);
            uint64_t v411 = *((void *)v402 + 36);
            *((void *)v401 + 35) = *((void *)v402 + 35);
            *((void *)v401 + 36) = v411;
            uint64_t v412 = *(int *)(v403 + 112);
            uint64_t v413 = (char *)v401 + v412;
            v414 = (char *)v402 + v412;
            if (__swift_getEnumTagSinglePayload((uint64_t)v402 + v412, 1, (uint64_t)v1154))
            {
              uint64_t v415 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v413, v414, *(void *)(*(void *)(v415 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1151)(v413, v414, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v413, 0, 1, (uint64_t)v1154);
            }
            uint64_t v448 = *(int *)(v403 + 116);
            uint64_t v449 = (char *)v401 + v448;
            uint64_t v450 = (char *)v402 + v448;
            if (__swift_getEnumTagSinglePayload((uint64_t)v402 + v448, 1, (uint64_t)v1154))
            {
              uint64_t v451 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v449, v450, *(void *)(*(void *)(v451 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1151)(v449, v450, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v449, 0, 1, (uint64_t)v1154);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v401, 0, 1, v403);
            uint64_t v25 = __dst;
            uint64_t v27 = v1146;
          }
          uint64_t v460 = v27[7];
          unint64_t v461 = (_OWORD *)((char *)v25 + v460);
          uint64_t v462 = (_OWORD *)((char *)v26 + v460);
          uint64_t v463 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v462, 1, (uint64_t)v463))
          {
            uint64_t v464 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v461, v462, *(void *)(*(void *)(v464 - 8) + 64));
          }
          else
          {
            long long v465 = v462[1];
            *unint64_t v461 = *v462;
            v461[1] = v465;
            long long v466 = v462[3];
            v461[2] = v462[2];
            v461[3] = v466;
            long long v467 = v462[5];
            v461[4] = v462[4];
            v461[5] = v467;
            long long v468 = v462[7];
            v461[6] = v462[6];
            v461[7] = v468;
            *((unsigned char *)v461 + 128) = *((unsigned char *)v462 + 128);
            *(_WORD *)((char *)v461 + 129) = *(_WORD *)((char *)v462 + 129);
            *((void *)v461 + 17) = *((void *)v462 + 17);
            long long v469 = v462[10];
            v461[9] = v462[9];
            v461[10] = v469;
            long long v470 = v462[12];
            v461[11] = v462[11];
            v461[12] = v470;
            long long v471 = v462[14];
            v461[13] = v462[13];
            v461[14] = v471;
            *((void *)v461 + 30) = *((void *)v462 + 30);
            *(_OWORD *)((char *)v461 + 248) = *(_OWORD *)((char *)v462 + 248);
            *(_OWORD *)((char *)v461 + 264) = *(_OWORD *)((char *)v462 + 264);
            *((unsigned char *)v461 + 296) = *((unsigned char *)v462 + 296);
            uint64_t v472 = *((void *)v462 + 36);
            *((void *)v461 + 35) = *((void *)v462 + 35);
            *((void *)v461 + 36) = v472;
            v461[19] = v462[19];
            uint64_t v473 = v463[29];
            uint64_t v474 = (char *)v461 + v473;
            uint64_t v475 = (char *)v462 + v473;
            uint64_t v476 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v475, 1, v476))
            {
              uint64_t v477 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v474, v475, *(void *)(*(void *)(v477 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v476 - 8) + 32))(v474, v475, v476);
              __swift_storeEnumTagSinglePayload((uint64_t)v474, 0, 1, v476);
            }
            *(_OWORD *)((char *)v461 + v463[30]) = *(_OWORD *)((char *)v462 + v463[30]);
            uint64_t v513 = v463[31];
            uint64_t v514 = (char *)v461 + v513;
            v515 = (char *)v462 + v513;
            if (__swift_getEnumTagSinglePayload((uint64_t)v462 + v513, 1, (uint64_t)v1154))
            {
              uint64_t v516 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v514, v515, *(void *)(*(void *)(v516 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1151)(v514, v515, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v514, 0, 1, (uint64_t)v1154);
            }
            uint64_t v525 = v463[32];
            uint64_t v526 = (char *)v461 + v525;
            uint64_t v527 = (char *)v462 + v525;
            if (__swift_getEnumTagSinglePayload((uint64_t)v462 + v525, 1, (uint64_t)v1154))
            {
              uint64_t v528 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v526, v527, *(void *)(*(void *)(v528 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1151)(v526, v527, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v526, 0, 1, (uint64_t)v1154);
            }
            uint64_t v26 = v1136;
            __swift_storeEnumTagSinglePayload((uint64_t)v461, 0, 1, (uint64_t)v463);
            uint64_t v25 = __dst;
            uint64_t v27 = v1146;
          }
          uint64_t v537 = v27[8];
          uint64_t v538 = (_OWORD *)((char *)v25 + v537);
          v539 = (_OWORD *)((char *)v26 + v537);
          uint64_t v540 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v539, 1, v540))
          {
            uint64_t v541 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v538, v539, *(void *)(*(void *)(v541 - 8) + 64));
          }
          else
          {
            long long v542 = v539[1];
            *uint64_t v538 = *v539;
            v538[1] = v542;
            long long v543 = v539[3];
            v538[2] = v539[2];
            v538[3] = v543;
            long long v544 = v539[5];
            v538[4] = v539[4];
            v538[5] = v544;
            long long v545 = v539[7];
            v538[6] = v539[6];
            v538[7] = v545;
            *((unsigned char *)v538 + 128) = *((unsigned char *)v539 + 128);
            *(_WORD *)((char *)v538 + 129) = *(_WORD *)((char *)v539 + 129);
            *((void *)v538 + 17) = *((void *)v539 + 17);
            long long v546 = v539[10];
            v538[9] = v539[9];
            v538[10] = v546;
            long long v547 = v539[12];
            v538[11] = v539[11];
            v538[12] = v547;
            long long v548 = v539[14];
            v538[13] = v539[13];
            v538[14] = v548;
            long long v549 = v539[16];
            v538[15] = v539[15];
            v538[16] = v549;
            *((unsigned char *)v538 + 280) = *((unsigned char *)v539 + 280);
            *((void *)v538 + 34) = *((void *)v539 + 34);
            v538[18] = v539[18];
            uint64_t v550 = *(int *)(v540 + 108);
            v551 = (char *)v538 + v550;
            v552 = (char *)v539 + v550;
            if (__swift_getEnumTagSinglePayload((uint64_t)v539 + v550, 1, (uint64_t)v1154))
            {
              uint64_t v553 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v551, v552, *(void *)(*(void *)(v553 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1151)(v551, v552, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v551, 0, 1, (uint64_t)v1154);
            }
            uint64_t v588 = *(int *)(v540 + 112);
            uint64_t v589 = (char *)v538 + v588;
            uint64_t v590 = (char *)v539 + v588;
            if (__swift_getEnumTagSinglePayload((uint64_t)v539 + v588, 1, (uint64_t)v1154))
            {
              uint64_t v591 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v589, v590, *(void *)(*(void *)(v591 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1151)(v589, v590, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v589, 0, 1, (uint64_t)v1154);
            }
            uint64_t v26 = v1136;
            __swift_storeEnumTagSinglePayload((uint64_t)v538, 0, 1, v540);
            uint64_t v25 = __dst;
            uint64_t v27 = v1146;
          }
          uint64_t v600 = v27[9];
          v601 = (_OWORD *)((char *)v25 + v600);
          v602 = (_OWORD *)((char *)v26 + v600);
          uint64_t v603 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v602, 1, (uint64_t)v603))
          {
            uint64_t v604 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v601, v602, *(void *)(*(void *)(v604 - 8) + 64));
          }
          else
          {
            long long v605 = v602[1];
            _OWORD *v601 = *v602;
            v601[1] = v605;
            long long v606 = v602[3];
            v601[2] = v602[2];
            v601[3] = v606;
            long long v607 = v602[5];
            v601[4] = v602[4];
            v601[5] = v607;
            long long v608 = v602[7];
            v601[6] = v602[6];
            v601[7] = v608;
            *((unsigned char *)v601 + 128) = *((unsigned char *)v602 + 128);
            *(_WORD *)((char *)v601 + 129) = *(_WORD *)((char *)v602 + 129);
            *((void *)v601 + 17) = *((void *)v602 + 17);
            long long v609 = v602[10];
            v601[9] = v602[9];
            v601[10] = v609;
            long long v610 = v602[12];
            v601[11] = v602[11];
            v601[12] = v610;
            long long v611 = v602[14];
            v601[13] = v602[13];
            v601[14] = v611;
            v601[15] = v602[15];
            uint64_t v612 = v603[24];
            uint64_t v613 = (char *)v601 + v612;
            v614 = (char *)v602 + v612;
            if (__swift_getEnumTagSinglePayload((uint64_t)v602 + v612, 1, (uint64_t)v1154))
            {
              uint64_t v615 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v613, v614, *(void *)(*(void *)(v615 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1151)(v613, v614, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v613, 0, 1, (uint64_t)v1154);
            }
            uint64_t v648 = v603[25];
            uint64_t v649 = (char *)v601 + v648;
            uint64_t v650 = (char *)v602 + v648;
            if (__swift_getEnumTagSinglePayload((uint64_t)v602 + v648, 1, (uint64_t)v1154))
            {
              uint64_t v651 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v649, v650, *(void *)(*(void *)(v651 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1151)(v649, v650, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v649, 0, 1, (uint64_t)v1154);
            }
            uint64_t v660 = v603[26];
            v661 = (char *)v601 + v660;
            v662 = (char *)v602 + v660;
            uint64_t v663 = type metadata accessor for URL();
            uint64_t v25 = __dst;
            if (__swift_getEnumTagSinglePayload((uint64_t)v662, 1, v663))
            {
              uint64_t v664 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v661, v662, *(void *)(*(void *)(v664 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v663 - 8) + 32))(v661, v662, v663);
              __swift_storeEnumTagSinglePayload((uint64_t)v661, 0, 1, v663);
            }
            uint64_t v27 = v1146;
            __swift_storeEnumTagSinglePayload((uint64_t)v601, 0, 1, (uint64_t)v603);
            uint64_t v26 = v1136;
          }
          uint64_t v674 = v27[10];
          uint64_t v675 = (_OWORD *)((char *)v25 + v674);
          v676 = (_OWORD *)((char *)v26 + v674);
          uint64_t v677 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v676, 1, (uint64_t)v677))
          {
            uint64_t v678 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v675, v676, *(void *)(*(void *)(v678 - 8) + 64));
          }
          else
          {
            long long v679 = v676[1];
            _OWORD *v675 = *v676;
            v675[1] = v679;
            long long v680 = v676[3];
            v675[2] = v676[2];
            v675[3] = v680;
            long long v681 = v676[5];
            v675[4] = v676[4];
            v675[5] = v681;
            long long v682 = v676[7];
            v675[6] = v676[6];
            v675[7] = v682;
            *((unsigned char *)v675 + 128) = *((unsigned char *)v676 + 128);
            *(_WORD *)((char *)v675 + 129) = *(_WORD *)((char *)v676 + 129);
            *((void *)v675 + 17) = *((void *)v676 + 17);
            long long v683 = v676[10];
            v675[9] = v676[9];
            v675[10] = v683;
            long long v684 = v676[12];
            v675[11] = v676[11];
            v675[12] = v684;
            v675[13] = v676[13];
            uint64_t v685 = v677[22];
            uint64_t v686 = (char *)v675 + v685;
            uint64_t v687 = (char *)v676 + v685;
            if (__swift_getEnumTagSinglePayload((uint64_t)v676 + v685, 1, (uint64_t)v1154))
            {
              uint64_t v688 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v686, v687, *(void *)(*(void *)(v688 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1151)(v686, v687, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v686, 0, 1, (uint64_t)v1154);
            }
            uint64_t v719 = v677[23];
            uint64_t v720 = (char *)v675 + v719;
            uint64_t v721 = (char *)v676 + v719;
            if (__swift_getEnumTagSinglePayload((uint64_t)v676 + v719, 1, (uint64_t)v1154))
            {
              uint64_t v722 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v720, v721, *(void *)(*(void *)(v722 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1151)(v720, v721, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v720, 0, 1, (uint64_t)v1154);
            }
            uint64_t v731 = v677[24];
            uint64_t v732 = (char *)v675 + v731;
            uint64_t v733 = (char *)v676 + v731;
            *(void *)uint64_t v732 = *(void *)v733;
            v732[8] = v733[8];
            uint64_t v734 = v677[25];
            uint64_t v735 = (char *)v675 + v734;
            uint64_t v736 = (char *)v676 + v734;
            uint64_t v737 = type metadata accessor for URL();
            uint64_t v25 = __dst;
            if (__swift_getEnumTagSinglePayload((uint64_t)v736, 1, v737))
            {
              uint64_t v738 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v735, v736, *(void *)(*(void *)(v738 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v737 - 8) + 32))(v735, v736, v737);
              __swift_storeEnumTagSinglePayload((uint64_t)v735, 0, 1, v737);
            }
            uint64_t v27 = v1146;
            __swift_storeEnumTagSinglePayload((uint64_t)v675, 0, 1, (uint64_t)v677);
            uint64_t v26 = v1136;
          }
          uint64_t v754 = v27[11];
          uint64_t v755 = (_OWORD *)((char *)v25 + v754);
          uint64_t v756 = (_OWORD *)((char *)v26 + v754);
          uint64_t v757 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v756, 1, (uint64_t)v757))
          {
            uint64_t v758 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v755, v756, *(void *)(*(void *)(v758 - 8) + 64));
          }
          else
          {
            long long v759 = v756[1];
            *uint64_t v755 = *v756;
            v755[1] = v759;
            long long v760 = v756[3];
            v755[2] = v756[2];
            v755[3] = v760;
            long long v761 = v756[5];
            v755[4] = v756[4];
            v755[5] = v761;
            *((unsigned char *)v755 + 96) = *((unsigned char *)v756 + 96);
            *(_OWORD *)((char *)v755 + 104) = *(_OWORD *)((char *)v756 + 104);
            uint64_t v762 = v757[13];
            uint64_t v763 = (char *)v755 + v762;
            uint64_t v764 = (char *)v756 + v762;
            uint64_t v765 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v764, 1, v765))
            {
              uint64_t v766 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v763, v764, *(void *)(*(void *)(v766 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v765 - 8) + 32))(v763, v764, v765);
              __swift_storeEnumTagSinglePayload((uint64_t)v763, 0, 1, v765);
            }
            uint64_t v792 = v757[14];
            uint64_t v793 = (char *)v755 + v792;
            uint64_t v794 = (char *)v756 + v792;
            if (__swift_getEnumTagSinglePayload((uint64_t)v756 + v792, 1, v765))
            {
              uint64_t v795 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v793, v794, *(void *)(*(void *)(v795 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v765 - 8) + 32))(v793, v794, v765);
              __swift_storeEnumTagSinglePayload((uint64_t)v793, 0, 1, v765);
            }
            *(_OWORD *)((char *)v755 + v757[15]) = *(_OWORD *)((char *)v756 + v757[15]);
            *(_OWORD *)((char *)v755 + v757[16]) = *(_OWORD *)((char *)v756 + v757[16]);
            *(_OWORD *)((char *)v755 + v757[17]) = *(_OWORD *)((char *)v756 + v757[17]);
            uint64_t v804 = v757[18];
            v1133 = (char *)v756 + v804;
            uint64_t v1134 = (char *)v755 + v804;
            uint64_t v805 = type metadata accessor for DateComponents();
            uint64_t v806 = *(void (**)(char *, char *, uint64_t))(*(void *)(v805 - 8) + 32);
            v806(v1134, v1133, v805);
            v806((char *)v755 + v757[19], (char *)v756 + v757[19], v805);
            *(_OWORD *)((char *)v755 + v757[20]) = *(_OWORD *)((char *)v756 + v757[20]);
            *(_OWORD *)((char *)v755 + v757[21]) = *(_OWORD *)((char *)v756 + v757[21]);
            *(_OWORD *)((char *)v755 + v757[22]) = *(_OWORD *)((char *)v756 + v757[22]);
            *(_OWORD *)((char *)v755 + v757[23]) = *(_OWORD *)((char *)v756 + v757[23]);
            *(_OWORD *)((char *)v755 + v757[24]) = *(_OWORD *)((char *)v756 + v757[24]);
            *(_OWORD *)((char *)v755 + v757[25]) = *(_OWORD *)((char *)v756 + v757[25]);
            *(_OWORD *)((char *)v755 + v757[26]) = *(_OWORD *)((char *)v756 + v757[26]);
            *(_OWORD *)((char *)v755 + v757[27]) = *(_OWORD *)((char *)v756 + v757[27]);
            *(_OWORD *)((char *)v755 + v757[28]) = *(_OWORD *)((char *)v756 + v757[28]);
            *(_OWORD *)((char *)v755 + v757[29]) = *(_OWORD *)((char *)v756 + v757[29]);
            *(_OWORD *)((char *)v755 + v757[30]) = *(_OWORD *)((char *)v756 + v757[30]);
            *(_OWORD *)((char *)v755 + v757[31]) = *(_OWORD *)((char *)v756 + v757[31]);
            *(_OWORD *)((char *)v755 + v757[32]) = *(_OWORD *)((char *)v756 + v757[32]);
            *(void *)((char *)v755 + v757[33]) = *(void *)((char *)v756 + v757[33]);
            *(void *)((char *)v755 + v757[34]) = *(void *)((char *)v756 + v757[34]);
            *(_OWORD *)((char *)v755 + v757[35]) = *(_OWORD *)((char *)v756 + v757[35]);
            *(_OWORD *)((char *)v755 + v757[36]) = *(_OWORD *)((char *)v756 + v757[36]);
            *(_OWORD *)((char *)v755 + v757[37]) = *(_OWORD *)((char *)v756 + v757[37]);
            uint64_t v807 = v757[38];
            uint64_t v808 = (char *)v755 + v807;
            uint64_t v809 = (char *)v756 + v807;
            if (__swift_getEnumTagSinglePayload((uint64_t)v756 + v807, 1, (uint64_t)v1154))
            {
              uint64_t v810 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v808, v809, *(void *)(*(void *)(v810 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1151)(v808, v809, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v808, 0, 1, (uint64_t)v1154);
            }
            uint64_t v26 = v1136;
            *(_OWORD *)((char *)v755 + v757[39]) = *(_OWORD *)((char *)v756 + v757[39]);
            *(_OWORD *)((char *)v755 + v757[40]) = *(_OWORD *)((char *)v756 + v757[40]);
            uint64_t v825 = v757[41];
            uint64_t v826 = (char *)v755 + v825;
            uint64_t v827 = (char *)v756 + v825;
            *(void *)uint64_t v826 = *(void *)v827;
            v826[8] = v827[8];
            *(_OWORD *)((char *)v755 + v757[42]) = *(_OWORD *)((char *)v756 + v757[42]);
            uint64_t v828 = v757[43];
            uint64_t v829 = (char *)v755 + v828;
            uint64_t v830 = (char *)v756 + v828;
            *(_OWORD *)uint64_t v829 = *(_OWORD *)v830;
            *(void *)(v829 + 13) = *(void *)(v830 + 13);
            *(_OWORD *)((char *)v755 + v757[44]) = *(_OWORD *)((char *)v756 + v757[44]);
            *(_OWORD *)((char *)v755 + v757[45]) = *(_OWORD *)((char *)v756 + v757[45]);
            *(_OWORD *)((char *)v755 + v757[46]) = *(_OWORD *)((char *)v756 + v757[46]);
            *(_OWORD *)((char *)v755 + v757[47]) = *(_OWORD *)((char *)v756 + v757[47]);
            __swift_storeEnumTagSinglePayload((uint64_t)v755, 0, 1, (uint64_t)v757);
            uint64_t v25 = __dst;
            uint64_t v27 = v1146;
          }
          uint64_t v831 = v27[12];
          uint64_t v832 = (_OWORD *)((char *)v25 + v831);
          uint64_t v833 = (_OWORD *)((char *)v26 + v831);
          uint64_t v834 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v833, 1, (uint64_t)v834))
          {
            uint64_t v835 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v832, v833, *(void *)(*(void *)(v835 - 8) + 64));
          }
          else
          {
            long long v836 = v833[1];
            *uint64_t v832 = *v833;
            v832[1] = v836;
            long long v837 = v833[3];
            v832[2] = v833[2];
            v832[3] = v837;
            long long v838 = v833[5];
            v832[4] = v833[4];
            v832[5] = v838;
            *((unsigned char *)v832 + 96) = *((unsigned char *)v833 + 96);
            *(_OWORD *)((char *)v832 + 104) = *(_OWORD *)((char *)v833 + 104);
            *(_OWORD *)((char *)v832 + 120) = *(_OWORD *)((char *)v833 + 120);
            uint64_t v839 = v834[14];
            uint64_t v840 = (char *)v832 + v839;
            uint64_t v841 = (char *)v833 + v839;
            uint64_t v842 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v841, 1, v842))
            {
              uint64_t v843 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v840, v841, *(void *)(*(void *)(v843 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v842 - 8) + 32))(v840, v841, v842);
              __swift_storeEnumTagSinglePayload((uint64_t)v840, 0, 1, v842);
            }
            uint64_t v880 = v834[15];
            uint64_t v881 = (char *)v832 + v880;
            uint64_t v882 = (char *)v833 + v880;
            if (__swift_getEnumTagSinglePayload((uint64_t)v833 + v880, 1, v842))
            {
              uint64_t v883 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v881, v882, *(void *)(*(void *)(v883 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v842 - 8) + 32))(v881, v882, v842);
              __swift_storeEnumTagSinglePayload((uint64_t)v881, 0, 1, v842);
            }
            uint64_t v26 = v1136;
            *(_OWORD *)((char *)v832 + v834[16]) = *(_OWORD *)((char *)v833 + v834[16]);
            *(_OWORD *)((char *)v832 + v834[17]) = *(_OWORD *)((char *)v833 + v834[17]);
            *(_OWORD *)((char *)v832 + v834[18]) = *(_OWORD *)((char *)v833 + v834[18]);
            *(_OWORD *)((char *)v832 + v834[19]) = *(_OWORD *)((char *)v833 + v834[19]);
            *(_OWORD *)((char *)v832 + v834[20]) = *(_OWORD *)((char *)v833 + v834[20]);
            *(void *)((char *)v832 + v834[21]) = *(void *)((char *)v833 + v834[21]);
            *(void *)((char *)v832 + v834[22]) = *(void *)((char *)v833 + v834[22]);
            uint64_t v890 = v834[23];
            uint64_t v891 = (char *)v832 + v890;
            uint64_t v892 = (char *)v833 + v890;
            v891[8] = v892[8];
            *(void *)uint64_t v891 = *(void *)v892;
            uint64_t v893 = v834[24];
            uint64_t v894 = (char *)v832 + v893;
            uint64_t v895 = (char *)v833 + v893;
            v894[8] = v895[8];
            *(void *)uint64_t v894 = *(void *)v895;
            *(_OWORD *)((char *)v832 + v834[25]) = *(_OWORD *)((char *)v833 + v834[25]);
            *(_OWORD *)((char *)v832 + v834[26]) = *(_OWORD *)((char *)v833 + v834[26]);
            *(_OWORD *)((char *)v832 + v834[27]) = *(_OWORD *)((char *)v833 + v834[27]);
            *(_OWORD *)((char *)v832 + v834[28]) = *(_OWORD *)((char *)v833 + v834[28]);
            uint64_t v896 = v834[29];
            uint64_t v897 = (char *)v832 + v896;
            uint64_t v898 = (char *)v833 + v896;
            *(void *)uint64_t v897 = *(void *)v898;
            v897[8] = v898[8];
            __swift_storeEnumTagSinglePayload((uint64_t)v832, 0, 1, (uint64_t)v834);
            uint64_t v25 = __dst;
            uint64_t v27 = v1146;
          }
          uint64_t v899 = v27[13];
          uint64_t v900 = (_OWORD *)((char *)v25 + v899);
          uint64_t v901 = (_OWORD *)((char *)v26 + v899);
          uint64_t v902 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v901, 1, (uint64_t)v902))
          {
            uint64_t v903 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v900, v901, *(void *)(*(void *)(v903 - 8) + 64));
            uint64_t v29 = v1158;
          }
          else
          {
            long long v904 = v901[1];
            *uint64_t v900 = *v901;
            v900[1] = v904;
            long long v905 = v901[3];
            v900[2] = v901[2];
            v900[3] = v905;
            long long v906 = v901[5];
            v900[4] = v901[4];
            v900[5] = v906;
            *((unsigned char *)v900 + 96) = *((unsigned char *)v901 + 96);
            *(_OWORD *)((char *)v900 + 104) = *(_OWORD *)((char *)v901 + 104);
            *(_OWORD *)((char *)v900 + 120) = *(_OWORD *)((char *)v901 + 120);
            uint64_t v907 = v902[14];
            uint64_t v908 = (char *)v900 + v907;
            uint64_t v909 = (char *)v901 + v907;
            uint64_t v910 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v909, 1, v910))
            {
              uint64_t v911 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v908, v909, *(void *)(*(void *)(v911 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v910 - 8) + 32))(v908, v909, v910);
              __swift_storeEnumTagSinglePayload((uint64_t)v908, 0, 1, v910);
            }
            uint64_t v29 = v1158;
            *(_OWORD *)((char *)v900 + v902[15]) = *(_OWORD *)((char *)v901 + v902[15]);
            *(_OWORD *)((char *)v900 + v902[16]) = *(_OWORD *)((char *)v901 + v902[16]);
            *(_OWORD *)((char *)v900 + v902[17]) = *(_OWORD *)((char *)v901 + v902[17]);
            *(_OWORD *)((char *)v900 + v902[18]) = *(_OWORD *)((char *)v901 + v902[18]);
            *(_OWORD *)((char *)v900 + v902[19]) = *(_OWORD *)((char *)v901 + v902[19]);
            *(void *)((char *)v900 + v902[20]) = *(void *)((char *)v901 + v902[20]);
            *(_OWORD *)((char *)v900 + v902[21]) = *(_OWORD *)((char *)v901 + v902[21]);
            *(_OWORD *)((char *)v900 + v902[22]) = *(_OWORD *)((char *)v901 + v902[22]);
            *(_OWORD *)((char *)v900 + v902[23]) = *(_OWORD *)((char *)v901 + v902[23]);
            __swift_storeEnumTagSinglePayload((uint64_t)v900, 0, 1, (uint64_t)v902);
            uint64_t v25 = __dst;
            uint64_t v27 = v1146;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, (uint64_t)v27);
        }
        uint64_t v956 = v29[22];
        v957 = (_OWORD *)((char *)v7 + v956);
        uint64_t v958 = (_OWORD *)((char *)v8 + v956);
        uint64_t v959 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v958, 1, (uint64_t)v959))
        {
          uint64_t v960 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v957, v958, *(void *)(*(void *)(v960 - 8) + 64));
        }
        else
        {
          long long v961 = v958[1];
          _OWORD *v957 = *v958;
          v957[1] = v961;
          long long v962 = v958[3];
          v957[2] = v958[2];
          v957[3] = v962;
          long long v963 = v958[5];
          v957[4] = v958[4];
          v957[5] = v963;
          uint64_t v964 = v959[10];
          v965 = (char *)v957 + v964;
          uint64_t v966 = (char *)v958 + v964;
          if (__swift_getEnumTagSinglePayload((uint64_t)v958 + v964, 1, (uint64_t)v1154))
          {
            uint64_t v967 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v965, v966, *(void *)(*(void *)(v967 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1151)(v965, v966, v1154);
            __swift_storeEnumTagSinglePayload((uint64_t)v965, 0, 1, (uint64_t)v1154);
          }
          uint64_t v968 = v959[11];
          v969 = (char *)v957 + v968;
          uint64_t v970 = (char *)v958 + v968;
          if (__swift_getEnumTagSinglePayload((uint64_t)v958 + v968, 1, (uint64_t)v1154))
          {
            uint64_t v971 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v969, v970, *(void *)(*(void *)(v971 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1151)(v969, v970, v1154);
            __swift_storeEnumTagSinglePayload((uint64_t)v969, 0, 1, (uint64_t)v1154);
          }
          *(_OWORD *)((char *)v957 + v959[12]) = *(_OWORD *)((char *)v958 + v959[12]);
          *(_OWORD *)((char *)v957 + v959[13]) = *(_OWORD *)((char *)v958 + v959[13]);
          *(_OWORD *)((char *)v957 + v959[14]) = *(_OWORD *)((char *)v958 + v959[14]);
          uint64_t v972 = v959[15];
          v973 = (char *)v957 + v972;
          uint64_t v974 = (char *)v958 + v972;
          if (__swift_getEnumTagSinglePayload((uint64_t)v958 + v972, 1, (uint64_t)v1154))
          {
            uint64_t v975 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v973, v974, *(void *)(*(void *)(v975 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1151)(v973, v974, v1154);
            __swift_storeEnumTagSinglePayload((uint64_t)v973, 0, 1, (uint64_t)v1154);
          }
          uint64_t v29 = v1158;
          *(_OWORD *)((char *)v957 + v959[16]) = *(_OWORD *)((char *)v958 + v959[16]);
          *(_OWORD *)((char *)v957 + v959[17]) = *(_OWORD *)((char *)v958 + v959[17]);
          *(_OWORD *)((char *)v957 + v959[18]) = *(_OWORD *)((char *)v958 + v959[18]);
          *(_OWORD *)((char *)v957 + v959[19]) = *(_OWORD *)((char *)v958 + v959[19]);
          *(_OWORD *)((char *)v957 + v959[20]) = *(_OWORD *)((char *)v958 + v959[20]);
          *(_OWORD *)((char *)v957 + v959[21]) = *(_OWORD *)((char *)v958 + v959[21]);
          *(_OWORD *)((char *)v957 + v959[22]) = *(_OWORD *)((char *)v958 + v959[22]);
          *(_OWORD *)((char *)v957 + v959[23]) = *(_OWORD *)((char *)v958 + v959[23]);
          __swift_storeEnumTagSinglePayload((uint64_t)v957, 0, 1, (uint64_t)v959);
        }
        uint64_t v976 = v29[23];
        v977 = (_OWORD *)((char *)v7 + v976);
        uint64_t v978 = (_OWORD *)((char *)v8 + v976);
        uint64_t v979 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v978, 1, (uint64_t)v979))
        {
          uint64_t v980 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v977, v978, *(void *)(*(void *)(v980 - 8) + 64));
        }
        else
        {
          long long v981 = v978[1];
          _OWORD *v977 = *v978;
          v977[1] = v981;
          long long v982 = v978[3];
          v977[2] = v978[2];
          v977[3] = v982;
          long long v983 = v978[5];
          v977[4] = v978[4];
          v977[5] = v983;
          uint64_t v984 = v979[11];
          v985 = (char *)v977 + v984;
          uint64_t v986 = (char *)v978 + v984;
          if (__swift_getEnumTagSinglePayload((uint64_t)v978 + v984, 1, (uint64_t)v1154))
          {
            uint64_t v987 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v985, v986, *(void *)(*(void *)(v987 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1151)(v985, v986, v1154);
            __swift_storeEnumTagSinglePayload((uint64_t)v985, 0, 1, (uint64_t)v1154);
          }
          *(_OWORD *)((char *)v977 + v979[12]) = *(_OWORD *)((char *)v978 + v979[12]);
          *(void *)((char *)v977 + v979[13]) = *(void *)((char *)v978 + v979[13]);
          uint64_t v988 = v979[14];
          v989 = (char *)v977 + v988;
          uint64_t v990 = (char *)v978 + v988;
          if (__swift_getEnumTagSinglePayload((uint64_t)v978 + v988, 1, (uint64_t)v1154))
          {
            uint64_t v991 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v989, v990, *(void *)(*(void *)(v991 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1151)(v989, v990, v1154);
            __swift_storeEnumTagSinglePayload((uint64_t)v989, 0, 1, (uint64_t)v1154);
          }
          uint64_t v29 = v1158;
          *(void *)((char *)v977 + v979[15]) = *(void *)((char *)v978 + v979[15]);
          *(void *)((char *)v977 + v979[16]) = *(void *)((char *)v978 + v979[16]);
          *(_OWORD *)((char *)v977 + v979[17]) = *(_OWORD *)((char *)v978 + v979[17]);
          *(void *)((char *)v977 + v979[18]) = *(void *)((char *)v978 + v979[18]);
          *(void *)((char *)v977 + v979[19]) = *(void *)((char *)v978 + v979[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v977, 0, 1, (uint64_t)v979);
        }
        uint64_t v992 = v29[24];
        v993 = (_OWORD *)((char *)v7 + v992);
        uint64_t v994 = (_OWORD *)((char *)v8 + v992);
        uint64_t v995 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v994, 1, (uint64_t)v995))
        {
          uint64_t v996 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v993, v994, *(void *)(*(void *)(v996 - 8) + 64));
        }
        else
        {
          long long v997 = v994[1];
          _OWORD *v993 = *v994;
          v993[1] = v997;
          long long v998 = v994[3];
          v993[2] = v994[2];
          v993[3] = v998;
          uint64_t v999 = v995[8];
          uint64_t v1000 = (char *)v993 + v999;
          uint64_t v1001 = (char *)v994 + v999;
          uint64_t v1002 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1001, 1, v1002))
          {
            uint64_t v1003 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v1000, v1001, *(void *)(*(void *)(v1003 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1002 - 8) + 32))(v1000, v1001, v1002);
            __swift_storeEnumTagSinglePayload((uint64_t)v1000, 0, 1, v1002);
          }
          *(_OWORD *)((char *)v993 + v995[9]) = *(_OWORD *)((char *)v994 + v995[9]);
          *(_OWORD *)((char *)v993 + v995[10]) = *(_OWORD *)((char *)v994 + v995[10]);
          *(_OWORD *)((char *)v993 + v995[11]) = *(_OWORD *)((char *)v994 + v995[11]);
          uint64_t v1004 = v995[12];
          uint64_t v1005 = (char *)v993 + v1004;
          uint64_t v1006 = (char *)v994 + v1004;
          if (__swift_getEnumTagSinglePayload((uint64_t)v994 + v1004, 1, (uint64_t)v1154))
          {
            uint64_t v1007 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1005, v1006, *(void *)(*(void *)(v1007 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1151)(v1005, v1006, v1154);
            __swift_storeEnumTagSinglePayload((uint64_t)v1005, 0, 1, (uint64_t)v1154);
          }
          uint64_t v1008 = v995[13];
          uint64_t v1009 = (char *)v993 + v1008;
          uint64_t v1010 = (char *)v994 + v1008;
          if (__swift_getEnumTagSinglePayload((uint64_t)v994 + v1008, 1, (uint64_t)v1154))
          {
            uint64_t v1011 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1009, v1010, *(void *)(*(void *)(v1011 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1151)(v1009, v1010, v1154);
            __swift_storeEnumTagSinglePayload((uint64_t)v1009, 0, 1, (uint64_t)v1154);
          }
          uint64_t v29 = v1158;
          uint64_t v1012 = v995[14];
          uint64_t v1013 = (char *)v993 + v1012;
          uint64_t v1014 = (char *)v994 + v1012;
          *(void *)uint64_t v1013 = *(void *)v1014;
          v1013[8] = v1014[8];
          *(_OWORD *)((char *)v993 + v995[15]) = *(_OWORD *)((char *)v994 + v995[15]);
          *(_OWORD *)((char *)v993 + v995[16]) = *(_OWORD *)((char *)v994 + v995[16]);
          *(_OWORD *)((char *)v993 + v995[17]) = *(_OWORD *)((char *)v994 + v995[17]);
          *(_OWORD *)((char *)v993 + v995[18]) = *(_OWORD *)((char *)v994 + v995[18]);
          *(_OWORD *)((char *)v993 + v995[19]) = *(_OWORD *)((char *)v994 + v995[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v993, 0, 1, (uint64_t)v995);
        }
        memcpy((char *)v7 + v29[25], (char *)v8 + v29[25], 0x90uLL);
        goto LABEL_524;
      case 1u:
        long long v30 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v30;
        long long v31 = v8[3];
        v7[2] = v8[2];
        v7[3] = v31;
        v7[4] = v8[4];
        uint64_t v32 = (int *)type metadata accessor for MobileSMSDocument(0);
        uint64_t v33 = v32[10];
        uint64_t v34 = (char *)v7 + v33;
        uint64_t v35 = (char *)v8 + v33;
        uint64_t v36 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36))
        {
          uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
          __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v36);
        }
        uint64_t v236 = v32[11];
        uint64_t v237 = (char *)v7 + v236;
        uint64_t v238 = (char *)v8 + v236;
        uint64_t v239 = type metadata accessor for URL();
        uint64_t v1152 = v36;
        if (__swift_getEnumTagSinglePayload((uint64_t)v238, 1, v239))
        {
          uint64_t v240 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v237, v238, *(void *)(*(void *)(v240 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v239 - 8) + 32))(v237, v238, v239);
          __swift_storeEnumTagSinglePayload((uint64_t)v237, 0, 1, v239);
        }
        *(void *)((char *)v7 + v32[12]) = *(void *)((char *)v8 + v32[12]);
        *(_OWORD *)((char *)v7 + v32[13]) = *(_OWORD *)((char *)v8 + v32[13]);
        *(_OWORD *)((char *)v7 + v32[14]) = *(_OWORD *)((char *)v8 + v32[14]);
        *(void *)((char *)v7 + v32[15]) = *(void *)((char *)v8 + v32[15]);
        *(void *)((char *)v7 + v32[16]) = *(void *)((char *)v8 + v32[16]);
        uint64_t v294 = v32[17];
        uint64_t v295 = (char *)v7 + v294;
        uint64_t v296 = (char *)v8 + v294;
        long long v297 = *((_OWORD *)v296 + 1);
        *(_OWORD *)uint64_t v295 = *(_OWORD *)v296;
        *((_OWORD *)v295 + 1) = v297;
        *((void *)v295 + 4) = *((void *)v296 + 4);
        *(_OWORD *)((char *)v7 + v32[18]) = *(_OWORD *)((char *)v8 + v32[18]);
        uint64_t v298 = v32[19];
        uint64_t v299 = (_OWORD *)((char *)v7 + v298);
        uint64_t v300 = (_OWORD *)((char *)v8 + v298);
        uint64_t v301 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        uint64_t v1149 = v239;
        v1160 = v32;
        if (__swift_getEnumTagSinglePayload((uint64_t)v300, 1, (uint64_t)v301))
        {
          uint64_t v302 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v299, v300, *(void *)(*(void *)(v302 - 8) + 64));
          uint64_t v303 = v1152;
        }
        else
        {
          *uint64_t v299 = *v300;
          uint64_t v343 = v301[5];
          uint64_t v344 = (_OWORD *)((char *)v299 + v343);
          v1156 = (char *)v300;
          uint64_t v345 = (_OWORD *)((char *)v300 + v343);
          uint64_t v346 = type metadata accessor for RentalCarReservation(0);
          __dsta = v299;
          uint64_t v1148 = v301;
          if (__swift_getEnumTagSinglePayload((uint64_t)v345, 1, v346))
          {
            uint64_t v347 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v344, v345, *(void *)(*(void *)(v347 - 8) + 64));
          }
          else
          {
            long long v377 = v345[1];
            *uint64_t v344 = *v345;
            v344[1] = v377;
            long long v378 = v345[3];
            v344[2] = v345[2];
            v344[3] = v378;
            long long v379 = v345[5];
            v344[4] = v345[4];
            v344[5] = v379;
            long long v380 = v345[7];
            v344[6] = v345[6];
            v344[7] = v380;
            *((unsigned char *)v344 + 128) = *((unsigned char *)v345 + 128);
            *(_WORD *)((char *)v344 + 129) = *(_WORD *)((char *)v345 + 129);
            *((void *)v344 + 17) = *((void *)v345 + 17);
            long long v381 = v345[10];
            v344[9] = v345[9];
            v344[10] = v381;
            long long v382 = v345[12];
            v344[11] = v345[11];
            v344[12] = v382;
            long long v383 = v345[14];
            v344[13] = v345[13];
            v344[14] = v383;
            v344[15] = v345[15];
            *((void *)v344 + 32) = *((void *)v345 + 32);
            *(_OWORD *)((char *)v344 + 264) = *(_OWORD *)((char *)v345 + 264);
            *(_OWORD *)((char *)v344 + 280) = *(_OWORD *)((char *)v345 + 280);
            *(_OWORD *)((char *)v344 + 296) = *(_OWORD *)((char *)v345 + 296);
            *(_OWORD *)((char *)v344 + 312) = *(_OWORD *)((char *)v345 + 312);
            *(_OWORD *)((char *)v344 + 328) = *(_OWORD *)((char *)v345 + 328);
            *(_OWORD *)((char *)v344 + 344) = *(_OWORD *)((char *)v345 + 344);
            *(_OWORD *)((char *)v344 + 360) = *(_OWORD *)((char *)v345 + 360);
            *((unsigned char *)v344 + 384) = *((unsigned char *)v345 + 384);
            *((void *)v344 + 47) = *((void *)v345 + 47);
            *(_OWORD *)((char *)v344 + 392) = *(_OWORD *)((char *)v345 + 392);
            *(_OWORD *)((char *)v344 + 408) = *(_OWORD *)((char *)v345 + 408);
            uint64_t v384 = *(int *)(v346 + 140);
            uint64_t v385 = (char *)v344 + v384;
            uint64_t v386 = (char *)v345 + v384;
            if (__swift_getEnumTagSinglePayload((uint64_t)v345 + v384, 1, v1152))
            {
              uint64_t v387 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v385, v386, *(void *)(*(void *)(v387 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v385, v386, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v385, 0, 1, v1152);
            }
            uint64_t v396 = *(int *)(v346 + 144);
            uint64_t v397 = (char *)v344 + v396;
            v398 = (char *)v345 + v396;
            if (__swift_getEnumTagSinglePayload((uint64_t)v345 + v396, 1, v1152))
            {
              uint64_t v399 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v397, v398, *(void *)(*(void *)(v399 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v397, v398, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v397, 0, 1, v1152);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v344, 0, 1, v346);
            uint64_t v299 = __dsta;
            uint64_t v301 = v1148;
          }
          uint64_t v432 = v301[6];
          uint64_t v433 = (_OWORD *)((char *)v299 + v432);
          uint64_t v434 = (_OWORD *)((char *)v300 + v432);
          uint64_t v435 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v434, 1, v435))
          {
            uint64_t v436 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v433, v434, *(void *)(*(void *)(v436 - 8) + 64));
          }
          else
          {
            long long v437 = v434[1];
            *uint64_t v433 = *v434;
            v433[1] = v437;
            long long v438 = v434[3];
            v433[2] = v434[2];
            v433[3] = v438;
            long long v439 = v434[5];
            v433[4] = v434[4];
            v433[5] = v439;
            long long v440 = v434[7];
            v433[6] = v434[6];
            v433[7] = v440;
            *((unsigned char *)v433 + 128) = *((unsigned char *)v434 + 128);
            *(_WORD *)((char *)v433 + 129) = *(_WORD *)((char *)v434 + 129);
            *((void *)v433 + 17) = *((void *)v434 + 17);
            long long v441 = v434[10];
            v433[9] = v434[9];
            v433[10] = v441;
            long long v442 = v434[12];
            v433[11] = v434[11];
            v433[12] = v442;
            *((void *)v433 + 26) = *((void *)v434 + 26);
            *(_OWORD *)((char *)v433 + 216) = *(_OWORD *)((char *)v434 + 216);
            *(_OWORD *)((char *)v433 + 232) = *(_OWORD *)((char *)v434 + 232);
            *(_OWORD *)((char *)v433 + 248) = *(_OWORD *)((char *)v434 + 248);
            *(_OWORD *)((char *)v433 + 264) = *(_OWORD *)((char *)v434 + 264);
            *((unsigned char *)v433 + 296) = *((unsigned char *)v434 + 296);
            uint64_t v443 = *((void *)v434 + 36);
            *((void *)v433 + 35) = *((void *)v434 + 35);
            *((void *)v433 + 36) = v443;
            uint64_t v444 = *(int *)(v435 + 112);
            uint64_t v445 = (char *)v433 + v444;
            uint64_t v446 = (char *)v434 + v444;
            if (__swift_getEnumTagSinglePayload((uint64_t)v434 + v444, 1, v1152))
            {
              uint64_t v447 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v445, v446, *(void *)(*(void *)(v447 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v445, v446, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v445, 0, 1, v1152);
            }
            uint64_t v456 = *(int *)(v435 + 116);
            unint64_t v457 = (char *)v433 + v456;
            uint64_t v458 = (char *)v434 + v456;
            if (__swift_getEnumTagSinglePayload((uint64_t)v434 + v456, 1, v1152))
            {
              uint64_t v459 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v457, v458, *(void *)(*(void *)(v459 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v457, v458, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v457, 0, 1, v1152);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v433, 0, 1, v435);
            uint64_t v299 = __dsta;
            uint64_t v301 = v1148;
          }
          uint64_t v496 = v301[7];
          uint64_t v497 = (_OWORD *)((char *)v299 + v496);
          uint64_t v498 = (_OWORD *)((char *)v300 + v496);
          uint64_t v499 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v498, 1, (uint64_t)v499))
          {
            uint64_t v500 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v497, v498, *(void *)(*(void *)(v500 - 8) + 64));
          }
          else
          {
            long long v501 = v498[1];
            *uint64_t v497 = *v498;
            v497[1] = v501;
            long long v502 = v498[3];
            v497[2] = v498[2];
            v497[3] = v502;
            long long v503 = v498[5];
            v497[4] = v498[4];
            v497[5] = v503;
            long long v504 = v498[7];
            v497[6] = v498[6];
            v497[7] = v504;
            *((unsigned char *)v497 + 128) = *((unsigned char *)v498 + 128);
            *(_WORD *)((char *)v497 + 129) = *(_WORD *)((char *)v498 + 129);
            *((void *)v497 + 17) = *((void *)v498 + 17);
            long long v505 = v498[10];
            v497[9] = v498[9];
            v497[10] = v505;
            long long v506 = v498[12];
            v497[11] = v498[11];
            v497[12] = v506;
            long long v507 = v498[14];
            v497[13] = v498[13];
            v497[14] = v507;
            *((void *)v497 + 30) = *((void *)v498 + 30);
            *(_OWORD *)((char *)v497 + 248) = *(_OWORD *)((char *)v498 + 248);
            *(_OWORD *)((char *)v497 + 264) = *(_OWORD *)((char *)v498 + 264);
            *((unsigned char *)v497 + 296) = *((unsigned char *)v498 + 296);
            uint64_t v508 = *((void *)v498 + 36);
            *((void *)v497 + 35) = *((void *)v498 + 35);
            *((void *)v497 + 36) = v508;
            v497[19] = v498[19];
            uint64_t v509 = v499[29];
            uint64_t v510 = (char *)v497 + v509;
            uint64_t v511 = (char *)v498 + v509;
            if (__swift_getEnumTagSinglePayload((uint64_t)v498 + v509, 1, v1149))
            {
              uint64_t v512 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v510, v511, *(void *)(*(void *)(v512 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v510, v511, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v510, 0, 1, v1149);
            }
            *(_OWORD *)((char *)v497 + v499[30]) = *(_OWORD *)((char *)v498 + v499[30]);
            uint64_t v521 = v499[31];
            uint64_t v522 = (char *)v497 + v521;
            uint64_t v523 = (char *)v498 + v521;
            if (__swift_getEnumTagSinglePayload((uint64_t)v498 + v521, 1, v1152))
            {
              uint64_t v524 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v522, v523, *(void *)(*(void *)(v524 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v522, v523, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v522, 0, 1, v1152);
            }
            uint64_t v533 = v499[32];
            uint64_t v534 = (char *)v497 + v533;
            uint64_t v535 = (char *)v498 + v533;
            if (__swift_getEnumTagSinglePayload((uint64_t)v498 + v533, 1, v1152))
            {
              uint64_t v536 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v534, v535, *(void *)(*(void *)(v536 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v534, v535, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v534, 0, 1, v1152);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v497, 0, 1, (uint64_t)v499);
            uint64_t v299 = __dsta;
            uint64_t v301 = v1148;
          }
          uint64_t v571 = v301[8];
          v572 = (_OWORD *)((char *)v299 + v571);
          v573 = (_OWORD *)((char *)v300 + v571);
          uint64_t v574 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v573, 1, v574))
          {
            uint64_t v575 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v572, v573, *(void *)(*(void *)(v575 - 8) + 64));
          }
          else
          {
            long long v576 = v573[1];
            _OWORD *v572 = *v573;
            v572[1] = v576;
            long long v577 = v573[3];
            v572[2] = v573[2];
            v572[3] = v577;
            long long v578 = v573[5];
            v572[4] = v573[4];
            v572[5] = v578;
            long long v579 = v573[7];
            v572[6] = v573[6];
            v572[7] = v579;
            *((unsigned char *)v572 + 128) = *((unsigned char *)v573 + 128);
            *(_WORD *)((char *)v572 + 129) = *(_WORD *)((char *)v573 + 129);
            *((void *)v572 + 17) = *((void *)v573 + 17);
            long long v580 = v573[10];
            v572[9] = v573[9];
            v572[10] = v580;
            long long v581 = v573[12];
            v572[11] = v573[11];
            v572[12] = v581;
            long long v582 = v573[14];
            v572[13] = v573[13];
            v572[14] = v582;
            long long v583 = v573[16];
            v572[15] = v573[15];
            v572[16] = v583;
            *((unsigned char *)v572 + 280) = *((unsigned char *)v573 + 280);
            *((void *)v572 + 34) = *((void *)v573 + 34);
            v572[18] = v573[18];
            uint64_t v584 = *(int *)(v574 + 108);
            uint64_t v585 = (char *)v572 + v584;
            uint64_t v586 = (char *)v573 + v584;
            if (__swift_getEnumTagSinglePayload((uint64_t)v573 + v584, 1, v1152))
            {
              uint64_t v587 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v585, v586, *(void *)(*(void *)(v587 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v585, v586, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v585, 0, 1, v1152);
            }
            uint64_t v596 = *(int *)(v574 + 112);
            uint64_t v597 = (char *)v572 + v596;
            v598 = (char *)v573 + v596;
            if (__swift_getEnumTagSinglePayload((uint64_t)v573 + v596, 1, v1152))
            {
              uint64_t v599 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v597, v598, *(void *)(*(void *)(v599 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v597, v598, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v597, 0, 1, v1152);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v572, 0, 1, v574);
            uint64_t v299 = __dsta;
            uint64_t v301 = v1148;
          }
          uint64_t v632 = v301[9];
          uint64_t v633 = (_OWORD *)((char *)v299 + v632);
          uint64_t v634 = (_OWORD *)((char *)v300 + v632);
          uint64_t v635 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v634, 1, (uint64_t)v635))
          {
            uint64_t v636 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v633, v634, *(void *)(*(void *)(v636 - 8) + 64));
          }
          else
          {
            long long v637 = v634[1];
            _OWORD *v633 = *v634;
            v633[1] = v637;
            long long v638 = v634[3];
            v633[2] = v634[2];
            v633[3] = v638;
            long long v639 = v634[5];
            v633[4] = v634[4];
            v633[5] = v639;
            long long v640 = v634[7];
            v633[6] = v634[6];
            v633[7] = v640;
            *((unsigned char *)v633 + 128) = *((unsigned char *)v634 + 128);
            *(_WORD *)((char *)v633 + 129) = *(_WORD *)((char *)v634 + 129);
            *((void *)v633 + 17) = *((void *)v634 + 17);
            long long v641 = v634[10];
            v633[9] = v634[9];
            v633[10] = v641;
            long long v642 = v634[12];
            v633[11] = v634[11];
            v633[12] = v642;
            long long v643 = v634[14];
            v633[13] = v634[13];
            v633[14] = v643;
            v633[15] = v634[15];
            uint64_t v644 = v635[24];
            uint64_t v645 = (char *)v633 + v644;
            uint64_t v646 = (char *)v634 + v644;
            if (__swift_getEnumTagSinglePayload((uint64_t)v634 + v644, 1, v1152))
            {
              uint64_t v647 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v645, v646, *(void *)(*(void *)(v647 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v645, v646, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v645, 0, 1, v1152);
            }
            uint64_t v656 = v635[25];
            uint64_t v657 = (char *)v633 + v656;
            v658 = (char *)v634 + v656;
            if (__swift_getEnumTagSinglePayload((uint64_t)v634 + v656, 1, v1152))
            {
              uint64_t v659 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v657, v658, *(void *)(*(void *)(v659 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v657, v658, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v657, 0, 1, v1152);
            }
            uint64_t v670 = v635[26];
            uint64_t v671 = (char *)v633 + v670;
            v672 = (char *)v634 + v670;
            if (__swift_getEnumTagSinglePayload((uint64_t)v634 + v670, 1, v1149))
            {
              uint64_t v673 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v671, v672, *(void *)(*(void *)(v673 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v671, v672, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v671, 0, 1, v1149);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v633, 0, 1, (uint64_t)v635);
            uint64_t v299 = __dsta;
            uint64_t v301 = v1148;
          }
          uint64_t v704 = v301[10];
          uint64_t v705 = (_OWORD *)((char *)v299 + v704);
          uint64_t v706 = (_OWORD *)((char *)v300 + v704);
          uint64_t v707 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v706, 1, (uint64_t)v707))
          {
            uint64_t v708 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v705, v706, *(void *)(*(void *)(v708 - 8) + 64));
          }
          else
          {
            long long v709 = v706[1];
            *uint64_t v705 = *v706;
            v705[1] = v709;
            long long v710 = v706[3];
            v705[2] = v706[2];
            v705[3] = v710;
            long long v711 = v706[5];
            v705[4] = v706[4];
            v705[5] = v711;
            long long v712 = v706[7];
            v705[6] = v706[6];
            v705[7] = v712;
            *((unsigned char *)v705 + 128) = *((unsigned char *)v706 + 128);
            *(_WORD *)((char *)v705 + 129) = *(_WORD *)((char *)v706 + 129);
            *((void *)v705 + 17) = *((void *)v706 + 17);
            long long v713 = v706[10];
            v705[9] = v706[9];
            v705[10] = v713;
            long long v714 = v706[12];
            v705[11] = v706[11];
            v705[12] = v714;
            v705[13] = v706[13];
            uint64_t v715 = v707[22];
            uint64_t v716 = (char *)v705 + v715;
            uint64_t v717 = (char *)v706 + v715;
            if (__swift_getEnumTagSinglePayload((uint64_t)v706 + v715, 1, v1152))
            {
              uint64_t v718 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v716, v717, *(void *)(*(void *)(v718 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v716, v717, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v716, 0, 1, v1152);
            }
            uint64_t v727 = v707[23];
            uint64_t v728 = (char *)v705 + v727;
            uint64_t v729 = (char *)v706 + v727;
            if (__swift_getEnumTagSinglePayload((uint64_t)v706 + v727, 1, v1152))
            {
              uint64_t v730 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v728, v729, *(void *)(*(void *)(v730 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v728, v729, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v728, 0, 1, v1152);
            }
            uint64_t v747 = v707[24];
            uint64_t v748 = (char *)v705 + v747;
            uint64_t v749 = (char *)v706 + v747;
            *(void *)uint64_t v748 = *(void *)v749;
            v748[8] = v749[8];
            uint64_t v750 = v707[25];
            uint64_t v751 = (char *)v705 + v750;
            uint64_t v752 = (char *)v706 + v750;
            if (__swift_getEnumTagSinglePayload((uint64_t)v706 + v750, 1, v1149))
            {
              uint64_t v753 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v751, v752, *(void *)(*(void *)(v753 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v751, v752, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v751, 0, 1, v1149);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v705, 0, 1, (uint64_t)v707);
            uint64_t v299 = __dsta;
            uint64_t v301 = v1148;
          }
          uint64_t v780 = v301[11];
          uint64_t v781 = (_OWORD *)((char *)v299 + v780);
          uint64_t v782 = (_OWORD *)((char *)v300 + v780);
          v783 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v782, 1, (uint64_t)v783))
          {
            uint64_t v784 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v781, v782, *(void *)(*(void *)(v784 - 8) + 64));
            uint64_t v303 = v1152;
          }
          else
          {
            long long v785 = v782[1];
            *uint64_t v781 = *v782;
            v781[1] = v785;
            long long v786 = v782[3];
            v781[2] = v782[2];
            v781[3] = v786;
            long long v787 = v782[5];
            v781[4] = v782[4];
            v781[5] = v787;
            *((unsigned char *)v781 + 96) = *((unsigned char *)v782 + 96);
            *(_OWORD *)((char *)v781 + 104) = *(_OWORD *)((char *)v782 + 104);
            uint64_t v788 = v783[13];
            uint64_t v789 = (char *)v781 + v788;
            uint64_t v790 = (char *)v782 + v788;
            if (__swift_getEnumTagSinglePayload((uint64_t)v782 + v788, 1, v1149))
            {
              uint64_t v791 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v789, v790, *(void *)(*(void *)(v791 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v789, v790, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v789, 0, 1, v1149);
            }
            uint64_t v800 = v783[14];
            uint64_t v801 = (char *)v781 + v800;
            uint64_t v802 = (char *)v782 + v800;
            if (__swift_getEnumTagSinglePayload((uint64_t)v782 + v800, 1, v1149))
            {
              uint64_t v803 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v801, v802, *(void *)(*(void *)(v803 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v801, v802, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v801, 0, 1, v1149);
            }
            *(_OWORD *)((char *)v781 + v783[15]) = *(_OWORD *)((char *)v782 + v783[15]);
            *(_OWORD *)((char *)v781 + v783[16]) = *(_OWORD *)((char *)v782 + v783[16]);
            *(_OWORD *)((char *)v781 + v783[17]) = *(_OWORD *)((char *)v782 + v783[17]);
            uint64_t v818 = v783[18];
            uint64_t v1135 = (char *)v782 + v818;
            uint64_t v1138 = (char *)v781 + v818;
            uint64_t v819 = type metadata accessor for DateComponents();
            uint64_t v820 = *(void (**)(char *, char *, uint64_t))(*(void *)(v819 - 8) + 32);
            v820(v1138, v1135, v819);
            v820((char *)v781 + v783[19], (char *)v782 + v783[19], v819);
            *(_OWORD *)((char *)v781 + v783[20]) = *(_OWORD *)((char *)v782 + v783[20]);
            *(_OWORD *)((char *)v781 + v783[21]) = *(_OWORD *)((char *)v782 + v783[21]);
            *(_OWORD *)((char *)v781 + v783[22]) = *(_OWORD *)((char *)v782 + v783[22]);
            *(_OWORD *)((char *)v781 + v783[23]) = *(_OWORD *)((char *)v782 + v783[23]);
            *(_OWORD *)((char *)v781 + v783[24]) = *(_OWORD *)((char *)v782 + v783[24]);
            *(_OWORD *)((char *)v781 + v783[25]) = *(_OWORD *)((char *)v782 + v783[25]);
            *(_OWORD *)((char *)v781 + v783[26]) = *(_OWORD *)((char *)v782 + v783[26]);
            *(_OWORD *)((char *)v781 + v783[27]) = *(_OWORD *)((char *)v782 + v783[27]);
            *(_OWORD *)((char *)v781 + v783[28]) = *(_OWORD *)((char *)v782 + v783[28]);
            *(_OWORD *)((char *)v781 + v783[29]) = *(_OWORD *)((char *)v782 + v783[29]);
            *(_OWORD *)((char *)v781 + v783[30]) = *(_OWORD *)((char *)v782 + v783[30]);
            *(_OWORD *)((char *)v781 + v783[31]) = *(_OWORD *)((char *)v782 + v783[31]);
            *(_OWORD *)((char *)v781 + v783[32]) = *(_OWORD *)((char *)v782 + v783[32]);
            *(void *)((char *)v781 + v783[33]) = *(void *)((char *)v782 + v783[33]);
            *(void *)((char *)v781 + v783[34]) = *(void *)((char *)v782 + v783[34]);
            *(_OWORD *)((char *)v781 + v783[35]) = *(_OWORD *)((char *)v782 + v783[35]);
            *(_OWORD *)((char *)v781 + v783[36]) = *(_OWORD *)((char *)v782 + v783[36]);
            *(_OWORD *)((char *)v781 + v783[37]) = *(_OWORD *)((char *)v782 + v783[37]);
            uint64_t v821 = v783[38];
            uint64_t v822 = (char *)v781 + v821;
            uint64_t v823 = (char *)v782 + v821;
            uint64_t v303 = v1152;
            if (__swift_getEnumTagSinglePayload((uint64_t)v782 + v821, 1, v1152))
            {
              uint64_t v824 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v822, v823, *(void *)(*(void *)(v824 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v822, v823, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v822, 0, 1, v1152);
            }
            *(_OWORD *)((char *)v781 + v783[39]) = *(_OWORD *)((char *)v782 + v783[39]);
            *(_OWORD *)((char *)v781 + v783[40]) = *(_OWORD *)((char *)v782 + v783[40]);
            uint64_t v862 = v783[41];
            v863 = (char *)v781 + v862;
            uint64_t v864 = (char *)v782 + v862;
            *(void *)v863 = *(void *)v864;
            v863[8] = v864[8];
            *(_OWORD *)((char *)v781 + v783[42]) = *(_OWORD *)((char *)v782 + v783[42]);
            uint64_t v865 = v783[43];
            uint64_t v866 = (char *)v781 + v865;
            v867 = (char *)v782 + v865;
            *(_OWORD *)uint64_t v866 = *(_OWORD *)v867;
            *(void *)(v866 + 13) = *(void *)(v867 + 13);
            *(_OWORD *)((char *)v781 + v783[44]) = *(_OWORD *)((char *)v782 + v783[44]);
            *(_OWORD *)((char *)v781 + v783[45]) = *(_OWORD *)((char *)v782 + v783[45]);
            *(_OWORD *)((char *)v781 + v783[46]) = *(_OWORD *)((char *)v782 + v783[46]);
            *(_OWORD *)((char *)v781 + v783[47]) = *(_OWORD *)((char *)v782 + v783[47]);
            __swift_storeEnumTagSinglePayload((uint64_t)v781, 0, 1, (uint64_t)v783);
            uint64_t v299 = __dsta;
            uint64_t v301 = v1148;
          }
          uint64_t v868 = v301[12];
          uint64_t v869 = (_OWORD *)((char *)v299 + v868);
          uint64_t v870 = &v1156[v868];
          v871 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v870, 1, (uint64_t)v871))
          {
            uint64_t v872 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v869, v870, *(void *)(*(void *)(v872 - 8) + 64));
          }
          else
          {
            long long v873 = *((_OWORD *)v870 + 1);
            *uint64_t v869 = *(_OWORD *)v870;
            v869[1] = v873;
            long long v874 = *((_OWORD *)v870 + 3);
            v869[2] = *((_OWORD *)v870 + 2);
            v869[3] = v874;
            long long v875 = *((_OWORD *)v870 + 5);
            v869[4] = *((_OWORD *)v870 + 4);
            v869[5] = v875;
            *((unsigned char *)v869 + 96) = v870[96];
            *(_OWORD *)((char *)v869 + 104) = *(_OWORD *)(v870 + 104);
            *(_OWORD *)((char *)v869 + 120) = *(_OWORD *)(v870 + 120);
            uint64_t v876 = v871[14];
            uint64_t v1139 = (char *)v869 + v876;
            uint64_t v877 = &v870[v876];
            uint64_t v878 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v877, 1, v878))
            {
              uint64_t v879 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1139, v877, *(void *)(*(void *)(v879 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v878 - 8) + 32))(v1139, v877, v878);
              __swift_storeEnumTagSinglePayload((uint64_t)v1139, 0, 1, v878);
            }
            uint64_t v887 = v871[15];
            uint64_t v1140 = (char *)v869 + v887;
            uint64_t v888 = &v870[v887];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v870[v887], 1, v878))
            {
              uint64_t v889 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1140, v888, *(void *)(*(void *)(v889 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v878 - 8) + 32))(v1140, v888, v878);
              __swift_storeEnumTagSinglePayload((uint64_t)v1140, 0, 1, v878);
            }
            uint64_t v301 = v1148;
            *(_OWORD *)((char *)v869 + v871[16]) = *(_OWORD *)&v870[v871[16]];
            *(_OWORD *)((char *)v869 + v871[17]) = *(_OWORD *)&v870[v871[17]];
            *(_OWORD *)((char *)v869 + v871[18]) = *(_OWORD *)&v870[v871[18]];
            *(_OWORD *)((char *)v869 + v871[19]) = *(_OWORD *)&v870[v871[19]];
            *(_OWORD *)((char *)v869 + v871[20]) = *(_OWORD *)&v870[v871[20]];
            *(void *)((char *)v869 + v871[21]) = *(void *)&v870[v871[21]];
            *(void *)((char *)v869 + v871[22]) = *(void *)&v870[v871[22]];
            uint64_t v934 = v871[23];
            uint64_t v935 = (char *)v869 + v934;
            uint64_t v936 = &v870[v934];
            v935[8] = v936[8];
            *(void *)uint64_t v935 = *(void *)v936;
            uint64_t v937 = v871[24];
            uint64_t v938 = (char *)v869 + v937;
            uint64_t v939 = &v870[v937];
            v938[8] = v939[8];
            *(void *)uint64_t v938 = *(void *)v939;
            *(_OWORD *)((char *)v869 + v871[25]) = *(_OWORD *)&v870[v871[25]];
            *(_OWORD *)((char *)v869 + v871[26]) = *(_OWORD *)&v870[v871[26]];
            *(_OWORD *)((char *)v869 + v871[27]) = *(_OWORD *)&v870[v871[27]];
            *(_OWORD *)((char *)v869 + v871[28]) = *(_OWORD *)&v870[v871[28]];
            uint64_t v940 = v871[29];
            uint64_t v941 = (char *)v869 + v940;
            uint64_t v942 = &v870[v940];
            *(void *)uint64_t v941 = *(void *)v942;
            v941[8] = v942[8];
            __swift_storeEnumTagSinglePayload((uint64_t)v869, 0, 1, (uint64_t)v871);
            uint64_t v299 = __dsta;
          }
          uint64_t v943 = v301[13];
          uint64_t v944 = (_OWORD *)((char *)v299 + v943);
          uint64_t v945 = &v1156[v943];
          uint64_t v946 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v945, 1, (uint64_t)v946))
          {
            uint64_t v947 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v944, v945, *(void *)(*(void *)(v947 - 8) + 64));
          }
          else
          {
            long long v948 = *((_OWORD *)v945 + 1);
            *uint64_t v944 = *(_OWORD *)v945;
            v944[1] = v948;
            long long v949 = *((_OWORD *)v945 + 3);
            v944[2] = *((_OWORD *)v945 + 2);
            v944[3] = v949;
            long long v950 = *((_OWORD *)v945 + 5);
            v944[4] = *((_OWORD *)v945 + 4);
            v944[5] = v950;
            *((unsigned char *)v944 + 96) = v945[96];
            *(_OWORD *)((char *)v944 + 104) = *(_OWORD *)(v945 + 104);
            *(_OWORD *)((char *)v944 + 120) = *(_OWORD *)(v945 + 120);
            uint64_t v951 = v946[14];
            uint64_t v952 = (char *)v944 + v951;
            uint64_t v953 = &v945[v951];
            uint64_t v954 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v953, 1, v954))
            {
              uint64_t v955 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v952, v953, *(void *)(*(void *)(v955 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v954 - 8) + 32))(v952, v953, v954);
              __swift_storeEnumTagSinglePayload((uint64_t)v952, 0, 1, v954);
            }
            uint64_t v303 = v1152;
            *(_OWORD *)((char *)v944 + v946[15]) = *(_OWORD *)&v945[v946[15]];
            *(_OWORD *)((char *)v944 + v946[16]) = *(_OWORD *)&v945[v946[16]];
            *(_OWORD *)((char *)v944 + v946[17]) = *(_OWORD *)&v945[v946[17]];
            *(_OWORD *)((char *)v944 + v946[18]) = *(_OWORD *)&v945[v946[18]];
            *(_OWORD *)((char *)v944 + v946[19]) = *(_OWORD *)&v945[v946[19]];
            *(void *)((char *)v944 + v946[20]) = *(void *)&v945[v946[20]];
            *(_OWORD *)((char *)v944 + v946[21]) = *(_OWORD *)&v945[v946[21]];
            *(_OWORD *)((char *)v944 + v946[22]) = *(_OWORD *)&v945[v946[22]];
            *(_OWORD *)((char *)v944 + v946[23]) = *(_OWORD *)&v945[v946[23]];
            __swift_storeEnumTagSinglePayload((uint64_t)v944, 0, 1, (uint64_t)v946);
            uint64_t v299 = __dsta;
            uint64_t v301 = v1148;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v299, 0, 1, (uint64_t)v301);
          uint64_t v32 = v1160;
        }
        uint64_t v1074 = v32[20];
        v1075 = (_OWORD *)((char *)v7 + v1074);
        uint64_t v1076 = (_OWORD *)((char *)v8 + v1074);
        uint64_t v1077 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1076, 1, (uint64_t)v1077))
        {
          uint64_t v1078 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v1075, v1076, *(void *)(*(void *)(v1078 - 8) + 64));
        }
        else
        {
          long long v1079 = v1076[1];
          _OWORD *v1075 = *v1076;
          v1075[1] = v1079;
          long long v1080 = v1076[3];
          v1075[2] = v1076[2];
          v1075[3] = v1080;
          long long v1081 = v1076[5];
          v1075[4] = v1076[4];
          v1075[5] = v1081;
          uint64_t v1082 = v1077[10];
          v1083 = (char *)v1075 + v1082;
          uint64_t v1084 = (char *)v1076 + v1082;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1076 + v1082, 1, v303))
          {
            uint64_t v1085 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1083, v1084, *(void *)(*(void *)(v1085 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v303 - 8) + 32))(v1083, v1084, v303);
            __swift_storeEnumTagSinglePayload((uint64_t)v1083, 0, 1, v303);
          }
          uint64_t v1086 = v1077[11];
          v1087 = (char *)v1075 + v1086;
          uint64_t v1088 = (char *)v1076 + v1086;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1076 + v1086, 1, v303))
          {
            uint64_t v1089 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1087, v1088, *(void *)(*(void *)(v1089 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v303 - 8) + 32))(v1087, v1088, v303);
            __swift_storeEnumTagSinglePayload((uint64_t)v1087, 0, 1, v303);
          }
          *(_OWORD *)((char *)v1075 + v1077[12]) = *(_OWORD *)((char *)v1076 + v1077[12]);
          *(_OWORD *)((char *)v1075 + v1077[13]) = *(_OWORD *)((char *)v1076 + v1077[13]);
          *(_OWORD *)((char *)v1075 + v1077[14]) = *(_OWORD *)((char *)v1076 + v1077[14]);
          uint64_t v1090 = v1077[15];
          uint64_t v1091 = (char *)v1075 + v1090;
          uint64_t v1092 = (char *)v1076 + v1090;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1076 + v1090, 1, v303))
          {
            uint64_t v1093 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1091, v1092, *(void *)(*(void *)(v1093 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v303 - 8) + 32))(v1091, v1092, v303);
            __swift_storeEnumTagSinglePayload((uint64_t)v1091, 0, 1, v303);
          }
          *(_OWORD *)((char *)v1075 + v1077[16]) = *(_OWORD *)((char *)v1076 + v1077[16]);
          *(_OWORD *)((char *)v1075 + v1077[17]) = *(_OWORD *)((char *)v1076 + v1077[17]);
          *(_OWORD *)((char *)v1075 + v1077[18]) = *(_OWORD *)((char *)v1076 + v1077[18]);
          *(_OWORD *)((char *)v1075 + v1077[19]) = *(_OWORD *)((char *)v1076 + v1077[19]);
          *(_OWORD *)((char *)v1075 + v1077[20]) = *(_OWORD *)((char *)v1076 + v1077[20]);
          *(_OWORD *)((char *)v1075 + v1077[21]) = *(_OWORD *)((char *)v1076 + v1077[21]);
          *(_OWORD *)((char *)v1075 + v1077[22]) = *(_OWORD *)((char *)v1076 + v1077[22]);
          *(_OWORD *)((char *)v1075 + v1077[23]) = *(_OWORD *)((char *)v1076 + v1077[23]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1075, 0, 1, (uint64_t)v1077);
        }
        uint64_t v1094 = v1160[21];
        uint64_t v1095 = (_OWORD *)((char *)v7 + v1094);
        uint64_t v1096 = (_OWORD *)((char *)v8 + v1094);
        uint64_t v1097 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1096, 1, (uint64_t)v1097))
        {
          uint64_t v1098 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v1095, v1096, *(void *)(*(void *)(v1098 - 8) + 64));
        }
        else
        {
          long long v1099 = v1096[1];
          *uint64_t v1095 = *v1096;
          v1095[1] = v1099;
          long long v1100 = v1096[3];
          v1095[2] = v1096[2];
          v1095[3] = v1100;
          long long v1101 = v1096[5];
          v1095[4] = v1096[4];
          v1095[5] = v1101;
          uint64_t v1102 = v1097[11];
          uint64_t v1103 = (char *)v1095 + v1102;
          uint64_t v1104 = (char *)v1096 + v1102;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1096 + v1102, 1, v303))
          {
            uint64_t v1105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1103, v1104, *(void *)(*(void *)(v1105 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v303 - 8) + 32))(v1103, v1104, v303);
            __swift_storeEnumTagSinglePayload((uint64_t)v1103, 0, 1, v303);
          }
          *(_OWORD *)((char *)v1095 + v1097[12]) = *(_OWORD *)((char *)v1096 + v1097[12]);
          *(void *)((char *)v1095 + v1097[13]) = *(void *)((char *)v1096 + v1097[13]);
          uint64_t v1106 = v1097[14];
          uint64_t v1107 = (char *)v1095 + v1106;
          uint64_t v1108 = (char *)v1096 + v1106;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1096 + v1106, 1, v303))
          {
            uint64_t v1109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1107, v1108, *(void *)(*(void *)(v1109 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v303 - 8) + 32))(v1107, v1108, v303);
            __swift_storeEnumTagSinglePayload((uint64_t)v1107, 0, 1, v303);
          }
          *(void *)((char *)v1095 + v1097[15]) = *(void *)((char *)v1096 + v1097[15]);
          *(void *)((char *)v1095 + v1097[16]) = *(void *)((char *)v1096 + v1097[16]);
          *(_OWORD *)((char *)v1095 + v1097[17]) = *(_OWORD *)((char *)v1096 + v1097[17]);
          *(void *)((char *)v1095 + v1097[18]) = *(void *)((char *)v1096 + v1097[18]);
          *(void *)((char *)v1095 + v1097[19]) = *(void *)((char *)v1096 + v1097[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1095, 0, 1, (uint64_t)v1097);
        }
        v1110 = v1160;
        uint64_t v1111 = v1160[22];
        uint64_t v1112 = (_OWORD *)((char *)v7 + v1111);
        uint64_t v1113 = (_OWORD *)((char *)v8 + v1111);
        uint64_t v1114 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1113, 1, (uint64_t)v1114))
        {
          uint64_t v1115 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v1112, v1113, *(void *)(*(void *)(v1115 - 8) + 64));
        }
        else
        {
          long long v1116 = v1113[1];
          *uint64_t v1112 = *v1113;
          v1112[1] = v1116;
          long long v1117 = v1113[3];
          v1112[2] = v1113[2];
          v1112[3] = v1117;
          uint64_t v1118 = v1114[8];
          uint64_t v1119 = (char *)v1112 + v1118;
          uint64_t v1120 = (char *)v1113 + v1118;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1113 + v1118, 1, v1149))
          {
            uint64_t v1121 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v1119, v1120, *(void *)(*(void *)(v1121 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v1119, v1120, v1149);
            __swift_storeEnumTagSinglePayload((uint64_t)v1119, 0, 1, v1149);
          }
          *(_OWORD *)((char *)v1112 + v1114[9]) = *(_OWORD *)((char *)v1113 + v1114[9]);
          *(_OWORD *)((char *)v1112 + v1114[10]) = *(_OWORD *)((char *)v1113 + v1114[10]);
          *(_OWORD *)((char *)v1112 + v1114[11]) = *(_OWORD *)((char *)v1113 + v1114[11]);
          uint64_t v1122 = v1114[12];
          uint64_t v1123 = (char *)v1112 + v1122;
          uint64_t v1124 = (char *)v1113 + v1122;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1113 + v1122, 1, v1152))
          {
            uint64_t v1125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1123, v1124, *(void *)(*(void *)(v1125 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v1123, v1124, v1152);
            __swift_storeEnumTagSinglePayload((uint64_t)v1123, 0, 1, v1152);
          }
          uint64_t v1126 = v1114[13];
          uint64_t v1157 = (char *)v1112 + v1126;
          uint64_t v1127 = (char *)v1113 + v1126;
          v1110 = v1160;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1113 + v1126, 1, v1152))
          {
            uint64_t v1128 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1157, v1127, *(void *)(*(void *)(v1128 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v1157, v1127, v1152);
            __swift_storeEnumTagSinglePayload((uint64_t)v1157, 0, 1, v1152);
          }
          uint64_t v1129 = v1114[14];
          uint64_t v1130 = (char *)v1112 + v1129;
          uint64_t v1131 = (char *)v1113 + v1129;
          *(void *)uint64_t v1130 = *(void *)v1131;
          v1130[8] = v1131[8];
          *(_OWORD *)((char *)v1112 + v1114[15]) = *(_OWORD *)((char *)v1113 + v1114[15]);
          *(_OWORD *)((char *)v1112 + v1114[16]) = *(_OWORD *)((char *)v1113 + v1114[16]);
          *(_OWORD *)((char *)v1112 + v1114[17]) = *(_OWORD *)((char *)v1113 + v1114[17]);
          *(_OWORD *)((char *)v1112 + v1114[18]) = *(_OWORD *)((char *)v1113 + v1114[18]);
          *(_OWORD *)((char *)v1112 + v1114[19]) = *(_OWORD *)((char *)v1113 + v1114[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1112, 0, 1, (uint64_t)v1114);
        }
        memcpy((char *)v7 + v1110[23], (char *)v8 + v1110[23], 0x90uLL);
        goto LABEL_524;
      case 2u:
        long long v38 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v38;
        v7[2] = v8[2];
        uint64_t v39 = (int *)type metadata accessor for CalendarEvent(0);
        uint64_t v40 = v39[7];
        uint64_t v41 = (char *)v7 + v40;
        uint64_t v42 = (char *)v8 + v40;
        uint64_t v43 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
        {
          uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
          __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v43);
        }
        uint64_t v241 = v39[8];
        uint64_t v242 = (char *)v7 + v241;
        uint64_t v243 = (char *)v8 + v241;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v241, 1, v43))
        {
          uint64_t v244 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v242, v243, *(void *)(*(void *)(v244 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v242, v243, v43);
          __swift_storeEnumTagSinglePayload((uint64_t)v242, 0, 1, v43);
        }
        *(_OWORD *)((char *)v7 + v39[9]) = *(_OWORD *)((char *)v8 + v39[9]);
        *(void *)((char *)v7 + v39[10]) = *(void *)((char *)v8 + v39[10]);
        *(void *)((char *)v7 + v39[11]) = *(void *)((char *)v8 + v39[11]);
        *(_OWORD *)((char *)v7 + v39[12]) = *(_OWORD *)((char *)v8 + v39[12]);
        uint64_t v304 = v39[13];
        uint64_t v305 = (char *)v7 + v304;
        long long v306 = (char *)v8 + v304;
        long long v307 = *((_OWORD *)v306 + 1);
        *(_OWORD *)uint64_t v305 = *(_OWORD *)v306;
        *((_OWORD *)v305 + 1) = v307;
        *((void *)v305 + 4) = *((void *)v306 + 4);
        goto LABEL_524;
      case 3u:
        long long v45 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v45;
        v7[2] = v8[2];
        *((void *)v7 + 6) = *((void *)v8 + 6);
        *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
        *(_OWORD *)((char *)v7 + 72) = *(_OWORD *)((char *)v8 + 72);
        uint64_t v46 = (int *)type metadata accessor for Photo(0);
        uint64_t v47 = v46[11];
        uint64_t v48 = (char *)v7 + v47;
        uint64_t v49 = (char *)v8 + v47;
        uint64_t v50 = type metadata accessor for Date();
        uint64_t v1155 = (void *)v50;
        if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
        {
          uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
          __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v50);
        }
        *(void *)((char *)v7 + v46[12]) = *(void *)((char *)v8 + v46[12]);
        *(void *)((char *)v7 + v46[13]) = *(void *)((char *)v8 + v46[13]);
        *(void *)((char *)v7 + v46[14]) = *(void *)((char *)v8 + v46[14]);
        *(void *)((char *)v7 + v46[15]) = *(void *)((char *)v8 + v46[15]);
        *(_OWORD *)((char *)v7 + v46[16]) = *(_OWORD *)((char *)v8 + v46[16]);
        uint64_t v245 = v46[17];
        uint64_t v246 = (_OWORD *)((char *)v7 + v245);
        uint64_t v247 = (_OWORD *)((char *)v8 + v245);
        uint64_t v248 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        uint64_t v1159 = v46;
        if (__swift_getEnumTagSinglePayload((uint64_t)v247, 1, (uint64_t)v248))
        {
          uint64_t v249 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v246, v247, *(void *)(*(void *)(v249 - 8) + 64));
        }
        else
        {
          *uint64_t v246 = *v247;
          uint64_t v308 = v248[5];
          v309 = (_OWORD *)((char *)v246 + v308);
          uint64_t v310 = (_OWORD *)((char *)v247 + v308);
          uint64_t v311 = type metadata accessor for RentalCarReservation(0);
          uint64_t v1150 = v246;
          uint64_t v1153 = v248;
          uint64_t v1147 = v247;
          if (__swift_getEnumTagSinglePayload((uint64_t)v310, 1, v311))
          {
            uint64_t v312 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v309, v310, *(void *)(*(void *)(v312 - 8) + 64));
          }
          else
          {
            long long v366 = v310[1];
            _OWORD *v309 = *v310;
            v309[1] = v366;
            long long v367 = v310[3];
            v309[2] = v310[2];
            v309[3] = v367;
            long long v368 = v310[5];
            v309[4] = v310[4];
            v309[5] = v368;
            long long v369 = v310[7];
            v309[6] = v310[6];
            v309[7] = v369;
            *((unsigned char *)v309 + 128) = *((unsigned char *)v310 + 128);
            *(_WORD *)((char *)v309 + 129) = *(_WORD *)((char *)v310 + 129);
            *((void *)v309 + 17) = *((void *)v310 + 17);
            long long v370 = v310[10];
            v309[9] = v310[9];
            v309[10] = v370;
            long long v371 = v310[12];
            v309[11] = v310[11];
            v309[12] = v371;
            long long v372 = v310[14];
            v309[13] = v310[13];
            v309[14] = v372;
            v309[15] = v310[15];
            *((void *)v309 + 32) = *((void *)v310 + 32);
            *(_OWORD *)((char *)v309 + 264) = *(_OWORD *)((char *)v310 + 264);
            *(_OWORD *)((char *)v309 + 280) = *(_OWORD *)((char *)v310 + 280);
            *(_OWORD *)((char *)v309 + 296) = *(_OWORD *)((char *)v310 + 296);
            *(_OWORD *)((char *)v309 + 312) = *(_OWORD *)((char *)v310 + 312);
            *(_OWORD *)((char *)v309 + 328) = *(_OWORD *)((char *)v310 + 328);
            *(_OWORD *)((char *)v309 + 344) = *(_OWORD *)((char *)v310 + 344);
            *(_OWORD *)((char *)v309 + 360) = *(_OWORD *)((char *)v310 + 360);
            *((unsigned char *)v309 + 384) = *((unsigned char *)v310 + 384);
            *((void *)v309 + 47) = *((void *)v310 + 47);
            *(_OWORD *)((char *)v309 + 392) = *(_OWORD *)((char *)v310 + 392);
            *(_OWORD *)((char *)v309 + 408) = *(_OWORD *)((char *)v310 + 408);
            uint64_t v373 = *(int *)(v311 + 140);
            uint64_t v374 = (char *)v309 + v373;
            v375 = (char *)v310 + v373;
            if (__swift_getEnumTagSinglePayload((uint64_t)v310 + v373, 1, (uint64_t)v1155))
            {
              uint64_t v376 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v374, v375, *(void *)(*(void *)(v376 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v374, v375, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v374, 0, 1, (uint64_t)v1155);
            }
            uint64_t v392 = *(int *)(v311 + 144);
            uint64_t v393 = (char *)v309 + v392;
            v394 = (char *)v310 + v392;
            if (__swift_getEnumTagSinglePayload((uint64_t)v310 + v392, 1, (uint64_t)v1155))
            {
              uint64_t v395 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v393, v394, *(void *)(*(void *)(v395 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v393, v394, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v393, 0, 1, (uint64_t)v1155);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v309, 0, 1, v311);
            uint64_t v248 = v1153;
            uint64_t v247 = v1147;
          }
          uint64_t v416 = v248[6];
          uint64_t v417 = (_OWORD *)((char *)v246 + v416);
          v418 = (_OWORD *)((char *)v247 + v416);
          uint64_t v419 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v418, 1, v419))
          {
            uint64_t v420 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v417, v418, *(void *)(*(void *)(v420 - 8) + 64));
          }
          else
          {
            long long v421 = v418[1];
            *uint64_t v417 = *v418;
            v417[1] = v421;
            long long v422 = v418[3];
            v417[2] = v418[2];
            v417[3] = v422;
            long long v423 = v418[5];
            v417[4] = v418[4];
            v417[5] = v423;
            long long v424 = v418[7];
            v417[6] = v418[6];
            v417[7] = v424;
            *((unsigned char *)v417 + 128) = *((unsigned char *)v418 + 128);
            *(_WORD *)((char *)v417 + 129) = *(_WORD *)((char *)v418 + 129);
            *((void *)v417 + 17) = *((void *)v418 + 17);
            long long v425 = v418[10];
            v417[9] = v418[9];
            v417[10] = v425;
            long long v426 = v418[12];
            v417[11] = v418[11];
            v417[12] = v426;
            *((void *)v417 + 26) = *((void *)v418 + 26);
            *(_OWORD *)((char *)v417 + 216) = *(_OWORD *)((char *)v418 + 216);
            *(_OWORD *)((char *)v417 + 232) = *(_OWORD *)((char *)v418 + 232);
            *(_OWORD *)((char *)v417 + 248) = *(_OWORD *)((char *)v418 + 248);
            *(_OWORD *)((char *)v417 + 264) = *(_OWORD *)((char *)v418 + 264);
            *((unsigned char *)v417 + 296) = *((unsigned char *)v418 + 296);
            uint64_t v427 = *((void *)v418 + 36);
            *((void *)v417 + 35) = *((void *)v418 + 35);
            *((void *)v417 + 36) = v427;
            uint64_t v428 = *(int *)(v419 + 112);
            uint64_t v429 = (char *)v417 + v428;
            v430 = (char *)v418 + v428;
            if (__swift_getEnumTagSinglePayload((uint64_t)v418 + v428, 1, (uint64_t)v1155))
            {
              uint64_t v431 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v429, v430, *(void *)(*(void *)(v431 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v429, v430, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v429, 0, 1, (uint64_t)v1155);
            }
            uint64_t v452 = *(int *)(v419 + 116);
            uint64_t v453 = (char *)v417 + v452;
            uint64_t v454 = (char *)v418 + v452;
            if (__swift_getEnumTagSinglePayload((uint64_t)v418 + v452, 1, (uint64_t)v1155))
            {
              uint64_t v455 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v453, v454, *(void *)(*(void *)(v455 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v453, v454, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v453, 0, 1, (uint64_t)v1155);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v417, 0, 1, v419);
            uint64_t v248 = v1153;
            uint64_t v247 = v1147;
          }
          uint64_t v478 = v248[7];
          uint64_t v479 = (_OWORD *)((char *)v246 + v478);
          v480 = (_OWORD *)((char *)v247 + v478);
          uint64_t v481 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v480, 1, (uint64_t)v481))
          {
            uint64_t v482 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v479, v480, *(void *)(*(void *)(v482 - 8) + 64));
          }
          else
          {
            long long v483 = v480[1];
            _OWORD *v479 = *v480;
            v479[1] = v483;
            long long v484 = v480[3];
            v479[2] = v480[2];
            v479[3] = v484;
            long long v485 = v480[5];
            v479[4] = v480[4];
            v479[5] = v485;
            long long v486 = v480[7];
            v479[6] = v480[6];
            v479[7] = v486;
            *((unsigned char *)v479 + 128) = *((unsigned char *)v480 + 128);
            *(_WORD *)((char *)v479 + 129) = *(_WORD *)((char *)v480 + 129);
            *((void *)v479 + 17) = *((void *)v480 + 17);
            long long v487 = v480[10];
            v479[9] = v480[9];
            v479[10] = v487;
            long long v488 = v480[12];
            v479[11] = v480[11];
            v479[12] = v488;
            long long v489 = v480[14];
            v479[13] = v480[13];
            v479[14] = v489;
            *((void *)v479 + 30) = *((void *)v480 + 30);
            *(_OWORD *)((char *)v479 + 248) = *(_OWORD *)((char *)v480 + 248);
            *(_OWORD *)((char *)v479 + 264) = *(_OWORD *)((char *)v480 + 264);
            *((unsigned char *)v479 + 296) = *((unsigned char *)v480 + 296);
            uint64_t v490 = *((void *)v480 + 36);
            *((void *)v479 + 35) = *((void *)v480 + 35);
            *((void *)v479 + 36) = v490;
            v479[19] = v480[19];
            uint64_t v491 = v481[29];
            v492 = (char *)v479 + v491;
            uint64_t v493 = (char *)v480 + v491;
            uint64_t v494 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v493, 1, v494))
            {
              uint64_t v495 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v492, v493, *(void *)(*(void *)(v495 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v494 - 8) + 32))(v492, v493, v494);
              __swift_storeEnumTagSinglePayload((uint64_t)v492, 0, 1, v494);
            }
            *(_OWORD *)((char *)v479 + v481[30]) = *(_OWORD *)((char *)v480 + v481[30]);
            uint64_t v517 = v481[31];
            uint64_t v518 = (char *)v479 + v517;
            uint64_t v519 = (char *)v480 + v517;
            if (__swift_getEnumTagSinglePayload((uint64_t)v480 + v517, 1, (uint64_t)v1155))
            {
              uint64_t v520 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v518, v519, *(void *)(*(void *)(v520 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v518, v519, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v518, 0, 1, (uint64_t)v1155);
            }
            uint64_t v529 = v481[32];
            uint64_t v530 = (char *)v479 + v529;
            uint64_t v531 = (char *)v480 + v529;
            if (__swift_getEnumTagSinglePayload((uint64_t)v480 + v529, 1, (uint64_t)v1155))
            {
              uint64_t v532 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v530, v531, *(void *)(*(void *)(v532 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v530, v531, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v530, 0, 1, (uint64_t)v1155);
            }
            uint64_t v246 = v1150;
            __swift_storeEnumTagSinglePayload((uint64_t)v479, 0, 1, (uint64_t)v481);
            uint64_t v248 = v1153;
            uint64_t v247 = v1147;
          }
          uint64_t v554 = v248[8];
          v555 = (_OWORD *)((char *)v246 + v554);
          uint64_t v556 = (_OWORD *)((char *)v247 + v554);
          uint64_t v557 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v556, 1, v557))
          {
            uint64_t v558 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v555, v556, *(void *)(*(void *)(v558 - 8) + 64));
          }
          else
          {
            long long v559 = v556[1];
            _OWORD *v555 = *v556;
            v555[1] = v559;
            long long v560 = v556[3];
            v555[2] = v556[2];
            v555[3] = v560;
            long long v561 = v556[5];
            v555[4] = v556[4];
            v555[5] = v561;
            long long v562 = v556[7];
            v555[6] = v556[6];
            v555[7] = v562;
            *((unsigned char *)v555 + 128) = *((unsigned char *)v556 + 128);
            *(_WORD *)((char *)v555 + 129) = *(_WORD *)((char *)v556 + 129);
            *((void *)v555 + 17) = *((void *)v556 + 17);
            long long v563 = v556[10];
            v555[9] = v556[9];
            v555[10] = v563;
            long long v564 = v556[12];
            v555[11] = v556[11];
            v555[12] = v564;
            long long v565 = v556[14];
            v555[13] = v556[13];
            v555[14] = v565;
            long long v566 = v556[16];
            v555[15] = v556[15];
            v555[16] = v566;
            *((unsigned char *)v555 + 280) = *((unsigned char *)v556 + 280);
            *((void *)v555 + 34) = *((void *)v556 + 34);
            v555[18] = v556[18];
            uint64_t v567 = *(int *)(v557 + 108);
            uint64_t v568 = (char *)v555 + v567;
            v569 = (char *)v556 + v567;
            if (__swift_getEnumTagSinglePayload((uint64_t)v556 + v567, 1, (uint64_t)v1155))
            {
              uint64_t v570 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v568, v569, *(void *)(*(void *)(v570 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v568, v569, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v568, 0, 1, (uint64_t)v1155);
            }
            uint64_t v592 = *(int *)(v557 + 112);
            uint64_t v593 = (char *)v555 + v592;
            uint64_t v594 = (char *)v556 + v592;
            if (__swift_getEnumTagSinglePayload((uint64_t)v556 + v592, 1, (uint64_t)v1155))
            {
              uint64_t v595 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v593, v594, *(void *)(*(void *)(v595 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v593, v594, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v593, 0, 1, (uint64_t)v1155);
            }
            uint64_t v246 = v1150;
            __swift_storeEnumTagSinglePayload((uint64_t)v555, 0, 1, v557);
            uint64_t v248 = v1153;
            uint64_t v247 = v1147;
          }
          uint64_t v616 = v248[9];
          uint64_t v617 = (_OWORD *)((char *)v246 + v616);
          v618 = (_OWORD *)((char *)v247 + v616);
          uint64_t v619 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v618, 1, (uint64_t)v619))
          {
            uint64_t v620 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v617, v618, *(void *)(*(void *)(v620 - 8) + 64));
          }
          else
          {
            long long v621 = v618[1];
            _OWORD *v617 = *v618;
            v617[1] = v621;
            long long v622 = v618[3];
            v617[2] = v618[2];
            v617[3] = v622;
            long long v623 = v618[5];
            v617[4] = v618[4];
            v617[5] = v623;
            long long v624 = v618[7];
            v617[6] = v618[6];
            v617[7] = v624;
            *((unsigned char *)v617 + 128) = *((unsigned char *)v618 + 128);
            *(_WORD *)((char *)v617 + 129) = *(_WORD *)((char *)v618 + 129);
            *((void *)v617 + 17) = *((void *)v618 + 17);
            long long v625 = v618[10];
            v617[9] = v618[9];
            v617[10] = v625;
            long long v626 = v618[12];
            v617[11] = v618[11];
            v617[12] = v626;
            long long v627 = v618[14];
            v617[13] = v618[13];
            v617[14] = v627;
            v617[15] = v618[15];
            uint64_t v628 = v619[24];
            uint64_t v629 = (char *)v617 + v628;
            v630 = (char *)v618 + v628;
            if (__swift_getEnumTagSinglePayload((uint64_t)v618 + v628, 1, (uint64_t)v1155))
            {
              uint64_t v631 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v629, v630, *(void *)(*(void *)(v631 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v629, v630, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v629, 0, 1, (uint64_t)v1155);
            }
            uint64_t v652 = v619[25];
            uint64_t v653 = (char *)v617 + v652;
            v654 = (char *)v618 + v652;
            if (__swift_getEnumTagSinglePayload((uint64_t)v618 + v652, 1, (uint64_t)v1155))
            {
              uint64_t v655 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v653, v654, *(void *)(*(void *)(v655 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v653, v654, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v653, 0, 1, (uint64_t)v1155);
            }
            uint64_t v665 = v619[26];
            uint64_t v666 = (char *)v617 + v665;
            uint64_t v667 = (char *)v618 + v665;
            uint64_t v668 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v667, 1, v668))
            {
              uint64_t v669 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v666, v667, *(void *)(*(void *)(v669 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v668 - 8) + 32))(v666, v667, v668);
              __swift_storeEnumTagSinglePayload((uint64_t)v666, 0, 1, v668);
            }
            uint64_t v246 = v1150;
            __swift_storeEnumTagSinglePayload((uint64_t)v617, 0, 1, (uint64_t)v619);
            uint64_t v248 = v1153;
            uint64_t v247 = v1147;
          }
          uint64_t v689 = v248[10];
          uint64_t v690 = (_OWORD *)((char *)v246 + v689);
          uint64_t v691 = (_OWORD *)((char *)v247 + v689);
          uint64_t v692 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v691, 1, (uint64_t)v692))
          {
            uint64_t v693 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v690, v691, *(void *)(*(void *)(v693 - 8) + 64));
          }
          else
          {
            long long v694 = v691[1];
            _OWORD *v690 = *v691;
            v690[1] = v694;
            long long v695 = v691[3];
            v690[2] = v691[2];
            v690[3] = v695;
            long long v696 = v691[5];
            v690[4] = v691[4];
            v690[5] = v696;
            long long v697 = v691[7];
            v690[6] = v691[6];
            v690[7] = v697;
            *((unsigned char *)v690 + 128) = *((unsigned char *)v691 + 128);
            *(_WORD *)((char *)v690 + 129) = *(_WORD *)((char *)v691 + 129);
            *((void *)v690 + 17) = *((void *)v691 + 17);
            long long v698 = v691[10];
            v690[9] = v691[9];
            v690[10] = v698;
            long long v699 = v691[12];
            v690[11] = v691[11];
            v690[12] = v699;
            v690[13] = v691[13];
            uint64_t v700 = v692[22];
            uint64_t v701 = (char *)v690 + v700;
            uint64_t v702 = (char *)v691 + v700;
            if (__swift_getEnumTagSinglePayload((uint64_t)v691 + v700, 1, (uint64_t)v1155))
            {
              uint64_t v703 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v701, v702, *(void *)(*(void *)(v703 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v701, v702, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v701, 0, 1, (uint64_t)v1155);
            }
            uint64_t v723 = v692[23];
            uint64_t v724 = (char *)v690 + v723;
            uint64_t v725 = (char *)v691 + v723;
            if (__swift_getEnumTagSinglePayload((uint64_t)v691 + v723, 1, (uint64_t)v1155))
            {
              uint64_t v726 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v724, v725, *(void *)(*(void *)(v726 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v724, v725, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v724, 0, 1, (uint64_t)v1155);
            }
            uint64_t v739 = v692[24];
            uint64_t v740 = (char *)v690 + v739;
            uint64_t v741 = (char *)v691 + v739;
            *(void *)uint64_t v740 = *(void *)v741;
            v740[8] = v741[8];
            uint64_t v742 = v692[25];
            uint64_t v743 = (char *)v690 + v742;
            uint64_t v744 = (char *)v691 + v742;
            uint64_t v745 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v744, 1, v745))
            {
              uint64_t v746 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v743, v744, *(void *)(*(void *)(v746 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v745 - 8) + 32))(v743, v744, v745);
              __swift_storeEnumTagSinglePayload((uint64_t)v743, 0, 1, v745);
            }
            uint64_t v246 = v1150;
            __swift_storeEnumTagSinglePayload((uint64_t)v690, 0, 1, (uint64_t)v692);
            uint64_t v248 = v1153;
            uint64_t v247 = v1147;
          }
          uint64_t v767 = v248[11];
          uint64_t v768 = (_OWORD *)((char *)v246 + v767);
          uint64_t v769 = (_OWORD *)((char *)v247 + v767);
          uint64_t v770 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v769, 1, (uint64_t)v770))
          {
            uint64_t v771 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v768, v769, *(void *)(*(void *)(v771 - 8) + 64));
          }
          else
          {
            long long v772 = v769[1];
            *uint64_t v768 = *v769;
            v768[1] = v772;
            long long v773 = v769[3];
            v768[2] = v769[2];
            v768[3] = v773;
            long long v774 = v769[5];
            v768[4] = v769[4];
            v768[5] = v774;
            *((unsigned char *)v768 + 96) = *((unsigned char *)v769 + 96);
            *(_OWORD *)((char *)v768 + 104) = *(_OWORD *)((char *)v769 + 104);
            uint64_t v775 = v770[13];
            v776 = (char *)v768 + v775;
            uint64_t v777 = (char *)v769 + v775;
            uint64_t v778 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v777, 1, v778))
            {
              uint64_t v779 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v776, v777, *(void *)(*(void *)(v779 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v778 - 8) + 32))(v776, v777, v778);
              __swift_storeEnumTagSinglePayload((uint64_t)v776, 0, 1, v778);
            }
            uint64_t v796 = v770[14];
            uint64_t v797 = (char *)v768 + v796;
            uint64_t v798 = (char *)v769 + v796;
            if (__swift_getEnumTagSinglePayload((uint64_t)v769 + v796, 1, v778))
            {
              uint64_t v799 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v797, v798, *(void *)(*(void *)(v799 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v778 - 8) + 32))(v797, v798, v778);
              __swift_storeEnumTagSinglePayload((uint64_t)v797, 0, 1, v778);
            }
            *(_OWORD *)((char *)v768 + v770[15]) = *(_OWORD *)((char *)v769 + v770[15]);
            *(_OWORD *)((char *)v768 + v770[16]) = *(_OWORD *)((char *)v769 + v770[16]);
            *(_OWORD *)((char *)v768 + v770[17]) = *(_OWORD *)((char *)v769 + v770[17]);
            uint64_t v811 = v770[18];
            uint64_t v1137 = (char *)v769 + v811;
            __dstd = (char *)v768 + v811;
            uint64_t v812 = type metadata accessor for DateComponents();
            uint64_t v813 = *(void (**)(char *, char *, uint64_t))(*(void *)(v812 - 8) + 32);
            v813(__dstd, v1137, v812);
            v813((char *)v768 + v770[19], (char *)v769 + v770[19], v812);
            *(_OWORD *)((char *)v768 + v770[20]) = *(_OWORD *)((char *)v769 + v770[20]);
            *(_OWORD *)((char *)v768 + v770[21]) = *(_OWORD *)((char *)v769 + v770[21]);
            *(_OWORD *)((char *)v768 + v770[22]) = *(_OWORD *)((char *)v769 + v770[22]);
            *(_OWORD *)((char *)v768 + v770[23]) = *(_OWORD *)((char *)v769 + v770[23]);
            *(_OWORD *)((char *)v768 + v770[24]) = *(_OWORD *)((char *)v769 + v770[24]);
            *(_OWORD *)((char *)v768 + v770[25]) = *(_OWORD *)((char *)v769 + v770[25]);
            *(_OWORD *)((char *)v768 + v770[26]) = *(_OWORD *)((char *)v769 + v770[26]);
            *(_OWORD *)((char *)v768 + v770[27]) = *(_OWORD *)((char *)v769 + v770[27]);
            *(_OWORD *)((char *)v768 + v770[28]) = *(_OWORD *)((char *)v769 + v770[28]);
            *(_OWORD *)((char *)v768 + v770[29]) = *(_OWORD *)((char *)v769 + v770[29]);
            *(_OWORD *)((char *)v768 + v770[30]) = *(_OWORD *)((char *)v769 + v770[30]);
            *(_OWORD *)((char *)v768 + v770[31]) = *(_OWORD *)((char *)v769 + v770[31]);
            *(_OWORD *)((char *)v768 + v770[32]) = *(_OWORD *)((char *)v769 + v770[32]);
            *(void *)((char *)v768 + v770[33]) = *(void *)((char *)v769 + v770[33]);
            *(void *)((char *)v768 + v770[34]) = *(void *)((char *)v769 + v770[34]);
            *(_OWORD *)((char *)v768 + v770[35]) = *(_OWORD *)((char *)v769 + v770[35]);
            *(_OWORD *)((char *)v768 + v770[36]) = *(_OWORD *)((char *)v769 + v770[36]);
            *(_OWORD *)((char *)v768 + v770[37]) = *(_OWORD *)((char *)v769 + v770[37]);
            uint64_t v814 = v770[38];
            uint64_t v815 = (char *)v768 + v814;
            uint64_t v816 = (char *)v769 + v814;
            if (__swift_getEnumTagSinglePayload((uint64_t)v769 + v814, 1, (uint64_t)v1155))
            {
              uint64_t v817 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v815, v816, *(void *)(*(void *)(v817 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v815, v816, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v815, 0, 1, (uint64_t)v1155);
            }
            uint64_t v246 = v1150;
            *(_OWORD *)((char *)v768 + v770[39]) = *(_OWORD *)((char *)v769 + v770[39]);
            *(_OWORD *)((char *)v768 + v770[40]) = *(_OWORD *)((char *)v769 + v770[40]);
            uint64_t v844 = v770[41];
            uint64_t v845 = (char *)v768 + v844;
            uint64_t v846 = (char *)v769 + v844;
            *(void *)uint64_t v845 = *(void *)v846;
            v845[8] = v846[8];
            *(_OWORD *)((char *)v768 + v770[42]) = *(_OWORD *)((char *)v769 + v770[42]);
            uint64_t v847 = v770[43];
            uint64_t v848 = (char *)v768 + v847;
            uint64_t v849 = (char *)v769 + v847;
            *(_OWORD *)uint64_t v848 = *(_OWORD *)v849;
            *(void *)(v848 + 13) = *(void *)(v849 + 13);
            *(_OWORD *)((char *)v768 + v770[44]) = *(_OWORD *)((char *)v769 + v770[44]);
            *(_OWORD *)((char *)v768 + v770[45]) = *(_OWORD *)((char *)v769 + v770[45]);
            *(_OWORD *)((char *)v768 + v770[46]) = *(_OWORD *)((char *)v769 + v770[46]);
            *(_OWORD *)((char *)v768 + v770[47]) = *(_OWORD *)((char *)v769 + v770[47]);
            __swift_storeEnumTagSinglePayload((uint64_t)v768, 0, 1, (uint64_t)v770);
            uint64_t v248 = v1153;
            uint64_t v247 = v1147;
          }
          uint64_t v850 = v248[12];
          uint64_t v851 = (_OWORD *)((char *)v246 + v850);
          uint64_t v852 = (_OWORD *)((char *)v247 + v850);
          uint64_t v853 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v852, 1, (uint64_t)v853))
          {
            uint64_t v854 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v851, v852, *(void *)(*(void *)(v854 - 8) + 64));
          }
          else
          {
            long long v855 = v852[1];
            *uint64_t v851 = *v852;
            v851[1] = v855;
            long long v856 = v852[3];
            v851[2] = v852[2];
            v851[3] = v856;
            long long v857 = v852[5];
            v851[4] = v852[4];
            v851[5] = v857;
            *((unsigned char *)v851 + 96) = *((unsigned char *)v852 + 96);
            *(_OWORD *)((char *)v851 + 104) = *(_OWORD *)((char *)v852 + 104);
            *(_OWORD *)((char *)v851 + 120) = *(_OWORD *)((char *)v852 + 120);
            uint64_t v858 = v853[14];
            __dstb = (char *)v851 + v858;
            uint64_t v859 = (char *)v852 + v858;
            uint64_t v860 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v859, 1, v860))
            {
              uint64_t v861 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(__dstb, v859, *(void *)(*(void *)(v861 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v860 - 8) + 32))(__dstb, v859, v860);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v860);
            }
            uint64_t v884 = v853[15];
            __dstc = (char *)v851 + v884;
            uint64_t v885 = (char *)v852 + v884;
            if (__swift_getEnumTagSinglePayload((uint64_t)v852 + v884, 1, v860))
            {
              uint64_t v886 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(__dstc, v885, *(void *)(*(void *)(v886 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v860 - 8) + 32))(__dstc, v885, v860);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v860);
            }
            uint64_t v248 = v1153;
            *(_OWORD *)((char *)v851 + v853[16]) = *(_OWORD *)((char *)v852 + v853[16]);
            *(_OWORD *)((char *)v851 + v853[17]) = *(_OWORD *)((char *)v852 + v853[17]);
            *(_OWORD *)((char *)v851 + v853[18]) = *(_OWORD *)((char *)v852 + v853[18]);
            *(_OWORD *)((char *)v851 + v853[19]) = *(_OWORD *)((char *)v852 + v853[19]);
            *(_OWORD *)((char *)v851 + v853[20]) = *(_OWORD *)((char *)v852 + v853[20]);
            *(void *)((char *)v851 + v853[21]) = *(void *)((char *)v852 + v853[21]);
            *(void *)((char *)v851 + v853[22]) = *(void *)((char *)v852 + v853[22]);
            uint64_t v912 = v853[23];
            uint64_t v913 = (char *)v851 + v912;
            uint64_t v914 = (char *)v852 + v912;
            v913[8] = v914[8];
            *(void *)uint64_t v913 = *(void *)v914;
            uint64_t v915 = v853[24];
            uint64_t v916 = (char *)v851 + v915;
            uint64_t v917 = (char *)v852 + v915;
            v916[8] = v917[8];
            *(void *)uint64_t v916 = *(void *)v917;
            *(_OWORD *)((char *)v851 + v853[25]) = *(_OWORD *)((char *)v852 + v853[25]);
            *(_OWORD *)((char *)v851 + v853[26]) = *(_OWORD *)((char *)v852 + v853[26]);
            *(_OWORD *)((char *)v851 + v853[27]) = *(_OWORD *)((char *)v852 + v853[27]);
            *(_OWORD *)((char *)v851 + v853[28]) = *(_OWORD *)((char *)v852 + v853[28]);
            uint64_t v918 = v853[29];
            uint64_t v919 = (char *)v851 + v918;
            uint64_t v920 = (char *)v852 + v918;
            *(void *)uint64_t v919 = *(void *)v920;
            v919[8] = v920[8];
            __swift_storeEnumTagSinglePayload((uint64_t)v851, 0, 1, (uint64_t)v853);
            uint64_t v247 = v1147;
          }
          uint64_t v921 = v248[13];
          uint64_t v922 = (_OWORD *)((char *)v246 + v921);
          uint64_t v923 = (_OWORD *)((char *)v247 + v921);
          uint64_t v924 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v923, 1, (uint64_t)v924))
          {
            uint64_t v925 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v922, v923, *(void *)(*(void *)(v925 - 8) + 64));
          }
          else
          {
            long long v926 = v923[1];
            *uint64_t v922 = *v923;
            v922[1] = v926;
            long long v927 = v923[3];
            v922[2] = v923[2];
            v922[3] = v927;
            long long v928 = v923[5];
            v922[4] = v923[4];
            v922[5] = v928;
            *((unsigned char *)v922 + 96) = *((unsigned char *)v923 + 96);
            *(_OWORD *)((char *)v922 + 104) = *(_OWORD *)((char *)v923 + 104);
            *(_OWORD *)((char *)v922 + 120) = *(_OWORD *)((char *)v923 + 120);
            uint64_t v929 = v924[14];
            uint64_t v930 = (char *)v922 + v929;
            uint64_t v931 = (char *)v923 + v929;
            uint64_t v932 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v931, 1, v932))
            {
              uint64_t v933 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v930, v931, *(void *)(*(void *)(v933 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v932 - 8) + 32))(v930, v931, v932);
              __swift_storeEnumTagSinglePayload((uint64_t)v930, 0, 1, v932);
            }
            *(_OWORD *)((char *)v922 + v924[15]) = *(_OWORD *)((char *)v923 + v924[15]);
            *(_OWORD *)((char *)v922 + v924[16]) = *(_OWORD *)((char *)v923 + v924[16]);
            *(_OWORD *)((char *)v922 + v924[17]) = *(_OWORD *)((char *)v923 + v924[17]);
            *(_OWORD *)((char *)v922 + v924[18]) = *(_OWORD *)((char *)v923 + v924[18]);
            *(_OWORD *)((char *)v922 + v924[19]) = *(_OWORD *)((char *)v923 + v924[19]);
            *(void *)((char *)v922 + v924[20]) = *(void *)((char *)v923 + v924[20]);
            *(_OWORD *)((char *)v922 + v924[21]) = *(_OWORD *)((char *)v923 + v924[21]);
            *(_OWORD *)((char *)v922 + v924[22]) = *(_OWORD *)((char *)v923 + v924[22]);
            *(_OWORD *)((char *)v922 + v924[23]) = *(_OWORD *)((char *)v923 + v924[23]);
            __swift_storeEnumTagSinglePayload((uint64_t)v922, 0, 1, (uint64_t)v924);
            uint64_t v246 = v1150;
            uint64_t v248 = v1153;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v246, 0, 1, (uint64_t)v248);
          uint64_t v46 = v1159;
        }
        uint64_t v1015 = v46[18];
        uint64_t v1016 = (_OWORD *)((char *)v7 + v1015);
        uint64_t v1017 = (_OWORD *)((char *)v8 + v1015);
        uint64_t v1018 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1017, 1, (uint64_t)v1018))
        {
          uint64_t v1019 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v1016, v1017, *(void *)(*(void *)(v1019 - 8) + 64));
        }
        else
        {
          long long v1020 = v1017[1];
          *uint64_t v1016 = *v1017;
          v1016[1] = v1020;
          long long v1021 = v1017[3];
          v1016[2] = v1017[2];
          v1016[3] = v1021;
          long long v1022 = v1017[5];
          v1016[4] = v1017[4];
          v1016[5] = v1022;
          uint64_t v1023 = v1018[10];
          uint64_t v1024 = (char *)v1016 + v1023;
          uint64_t v1025 = (char *)v1017 + v1023;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1017 + v1023, 1, (uint64_t)v1155))
          {
            uint64_t v1026 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1024, v1025, *(void *)(*(void *)(v1026 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v1024, v1025, v1155);
            __swift_storeEnumTagSinglePayload((uint64_t)v1024, 0, 1, (uint64_t)v1155);
          }
          uint64_t v1027 = v1018[11];
          uint64_t v1028 = (char *)v1016 + v1027;
          uint64_t v1029 = (char *)v1017 + v1027;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1017 + v1027, 1, (uint64_t)v1155))
          {
            uint64_t v1030 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1028, v1029, *(void *)(*(void *)(v1030 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v1028, v1029, v1155);
            __swift_storeEnumTagSinglePayload((uint64_t)v1028, 0, 1, (uint64_t)v1155);
          }
          *(_OWORD *)((char *)v1016 + v1018[12]) = *(_OWORD *)((char *)v1017 + v1018[12]);
          *(_OWORD *)((char *)v1016 + v1018[13]) = *(_OWORD *)((char *)v1017 + v1018[13]);
          *(_OWORD *)((char *)v1016 + v1018[14]) = *(_OWORD *)((char *)v1017 + v1018[14]);
          uint64_t v1031 = v1018[15];
          uint64_t v1032 = (char *)v1016 + v1031;
          uint64_t v1033 = (char *)v1017 + v1031;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1017 + v1031, 1, (uint64_t)v1155))
          {
            uint64_t v1034 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1032, v1033, *(void *)(*(void *)(v1034 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v1032, v1033, v1155);
            __swift_storeEnumTagSinglePayload((uint64_t)v1032, 0, 1, (uint64_t)v1155);
          }
          *(_OWORD *)((char *)v1016 + v1018[16]) = *(_OWORD *)((char *)v1017 + v1018[16]);
          *(_OWORD *)((char *)v1016 + v1018[17]) = *(_OWORD *)((char *)v1017 + v1018[17]);
          *(_OWORD *)((char *)v1016 + v1018[18]) = *(_OWORD *)((char *)v1017 + v1018[18]);
          *(_OWORD *)((char *)v1016 + v1018[19]) = *(_OWORD *)((char *)v1017 + v1018[19]);
          *(_OWORD *)((char *)v1016 + v1018[20]) = *(_OWORD *)((char *)v1017 + v1018[20]);
          *(_OWORD *)((char *)v1016 + v1018[21]) = *(_OWORD *)((char *)v1017 + v1018[21]);
          *(_OWORD *)((char *)v1016 + v1018[22]) = *(_OWORD *)((char *)v1017 + v1018[22]);
          *(_OWORD *)((char *)v1016 + v1018[23]) = *(_OWORD *)((char *)v1017 + v1018[23]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1016, 0, 1, (uint64_t)v1018);
        }
        uint64_t v1035 = v1159[19];
        uint64_t v1036 = (_OWORD *)((char *)v7 + v1035);
        uint64_t v1037 = (_OWORD *)((char *)v8 + v1035);
        uint64_t v1038 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1037, 1, (uint64_t)v1038))
        {
          uint64_t v1039 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v1036, v1037, *(void *)(*(void *)(v1039 - 8) + 64));
        }
        else
        {
          long long v1040 = v1037[1];
          *uint64_t v1036 = *v1037;
          v1036[1] = v1040;
          long long v1041 = v1037[3];
          v1036[2] = v1037[2];
          v1036[3] = v1041;
          long long v1042 = v1037[5];
          v1036[4] = v1037[4];
          v1036[5] = v1042;
          uint64_t v1043 = v1038[11];
          uint64_t v1044 = (char *)v1036 + v1043;
          uint64_t v1045 = (char *)v1037 + v1043;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1037 + v1043, 1, (uint64_t)v1155))
          {
            uint64_t v1046 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1044, v1045, *(void *)(*(void *)(v1046 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v1044, v1045, v1155);
            __swift_storeEnumTagSinglePayload((uint64_t)v1044, 0, 1, (uint64_t)v1155);
          }
          *(_OWORD *)((char *)v1036 + v1038[12]) = *(_OWORD *)((char *)v1037 + v1038[12]);
          *(void *)((char *)v1036 + v1038[13]) = *(void *)((char *)v1037 + v1038[13]);
          uint64_t v1047 = v1038[14];
          uint64_t v1048 = (char *)v1036 + v1047;
          uint64_t v1049 = (char *)v1037 + v1047;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1037 + v1047, 1, (uint64_t)v1155))
          {
            uint64_t v1050 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1048, v1049, *(void *)(*(void *)(v1050 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v1048, v1049, v1155);
            __swift_storeEnumTagSinglePayload((uint64_t)v1048, 0, 1, (uint64_t)v1155);
          }
          *(void *)((char *)v1036 + v1038[15]) = *(void *)((char *)v1037 + v1038[15]);
          *(void *)((char *)v1036 + v1038[16]) = *(void *)((char *)v1037 + v1038[16]);
          *(_OWORD *)((char *)v1036 + v1038[17]) = *(_OWORD *)((char *)v1037 + v1038[17]);
          *(void *)((char *)v1036 + v1038[18]) = *(void *)((char *)v1037 + v1038[18]);
          *(void *)((char *)v1036 + v1038[19]) = *(void *)((char *)v1037 + v1038[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1036, 0, 1, (uint64_t)v1038);
        }
        uint64_t v1051 = v1159[20];
        uint64_t v1052 = (_OWORD *)((char *)v7 + v1051);
        uint64_t v1053 = (_OWORD *)((char *)v8 + v1051);
        uint64_t v1054 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1053, 1, (uint64_t)v1054))
        {
          uint64_t v1055 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v1052, v1053, *(void *)(*(void *)(v1055 - 8) + 64));
        }
        else
        {
          long long v1056 = v1053[1];
          *uint64_t v1052 = *v1053;
          v1052[1] = v1056;
          long long v1057 = v1053[3];
          v1052[2] = v1053[2];
          v1052[3] = v1057;
          uint64_t v1058 = v1054[8];
          uint64_t v1059 = (char *)v1052 + v1058;
          uint64_t v1060 = (char *)v1053 + v1058;
          uint64_t v1061 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1060, 1, v1061))
          {
            uint64_t v1062 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v1059, v1060, *(void *)(*(void *)(v1062 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1061 - 8) + 32))(v1059, v1060, v1061);
            __swift_storeEnumTagSinglePayload((uint64_t)v1059, 0, 1, v1061);
          }
          *(_OWORD *)((char *)v1052 + v1054[9]) = *(_OWORD *)((char *)v1053 + v1054[9]);
          *(_OWORD *)((char *)v1052 + v1054[10]) = *(_OWORD *)((char *)v1053 + v1054[10]);
          *(_OWORD *)((char *)v1052 + v1054[11]) = *(_OWORD *)((char *)v1053 + v1054[11]);
          uint64_t v1063 = v1054[12];
          uint64_t v1064 = (char *)v1052 + v1063;
          uint64_t v1065 = (char *)v1053 + v1063;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1053 + v1063, 1, (uint64_t)v1155))
          {
            uint64_t v1066 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1064, v1065, *(void *)(*(void *)(v1066 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v1064, v1065, v1155);
            __swift_storeEnumTagSinglePayload((uint64_t)v1064, 0, 1, (uint64_t)v1155);
          }
          uint64_t v1067 = v1054[13];
          uint64_t v1068 = (char *)v1052 + v1067;
          uint64_t v1069 = (char *)v1053 + v1067;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1053 + v1067, 1, (uint64_t)v1155))
          {
            uint64_t v1070 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1068, v1069, *(void *)(*(void *)(v1070 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1155 - 1) + 32))(v1068, v1069, v1155);
            __swift_storeEnumTagSinglePayload((uint64_t)v1068, 0, 1, (uint64_t)v1155);
          }
          uint64_t v1071 = v1054[14];
          uint64_t v1072 = (char *)v1052 + v1071;
          uint64_t v1073 = (char *)v1053 + v1071;
          *(void *)uint64_t v1072 = *(void *)v1073;
          v1072[8] = v1073[8];
          *(_OWORD *)((char *)v1052 + v1054[15]) = *(_OWORD *)((char *)v1053 + v1054[15]);
          *(_OWORD *)((char *)v1052 + v1054[16]) = *(_OWORD *)((char *)v1053 + v1054[16]);
          *(_OWORD *)((char *)v1052 + v1054[17]) = *(_OWORD *)((char *)v1053 + v1054[17]);
          *(_OWORD *)((char *)v1052 + v1054[18]) = *(_OWORD *)((char *)v1053 + v1054[18]);
          *(_OWORD *)((char *)v1052 + v1054[19]) = *(_OWORD *)((char *)v1053 + v1054[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1052, 0, 1, (uint64_t)v1054);
        }
        memcpy((char *)v7 + v1159[21], (char *)v8 + v1159[21], 0x90uLL);
        goto LABEL_524;
      case 4u:
        long long v52 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v52;
        long long v53 = v8[3];
        v7[2] = v8[2];
        v7[3] = v53;
        uint64_t v54 = type metadata accessor for NoteDocument(0);
        uint64_t v55 = *(int *)(v54 + 32);
        uint64_t v56 = (char *)v7 + v55;
        uint64_t v57 = (char *)v8 + v55;
        uint64_t v58 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, v58))
        {
          uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
          __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v58);
        }
        uint64_t v250 = *(int *)(v54 + 36);
        uint64_t v251 = (char *)v7 + v250;
        uint64_t v252 = (char *)v8 + v250;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v250, 1, v58)) {
          goto LABEL_106;
        }
        goto LABEL_136;
      case 5u:
        long long v60 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v60;
        v7[2] = v8[2];
        uint64_t v61 = (int *)type metadata accessor for Reminder(0);
        uint64_t v62 = v61[7];
        uint64_t v63 = (char *)v7 + v62;
        uint64_t v64 = (char *)v8 + v62;
        uint64_t v65 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, v65))
        {
          uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
          __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v65);
        }
        uint64_t v253 = v61[8];
        uint64_t v254 = (char *)v7 + v253;
        uint64_t v255 = (char *)v8 + v253;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v253, 1, v65))
        {
          uint64_t v256 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v254, v255, *(void *)(*(void *)(v256 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v254, v255, v65);
          __swift_storeEnumTagSinglePayload((uint64_t)v254, 0, 1, v65);
        }
        *((unsigned char *)v7 + v61[9]) = *((unsigned char *)v8 + v61[9]);
        *(_OWORD *)((char *)v7 + v61[10]) = *(_OWORD *)((char *)v8 + v61[10]);
        *(_OWORD *)((char *)v7 + v61[11]) = *(_OWORD *)((char *)v8 + v61[11]);
        uint64_t v313 = v61[12];
        uint64_t v84 = (char *)v7 + v313;
        uint64_t v85 = (char *)v8 + v313;
        uint64_t v86 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v85, 1, v86)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 6u:
        long long v67 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v67;
        long long v68 = v8[3];
        v7[2] = v8[2];
        v7[3] = v68;
        uint64_t v69 = (int *)type metadata accessor for PhoneHistory(0);
        uint64_t v70 = v69[10];
        uint64_t v71 = (char *)v7 + v70;
        uint64_t v72 = (char *)v8 + v70;
        uint64_t v73 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v72, 1, v73))
        {
          uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
          __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v73);
        }
        *(_OWORD *)((char *)v7 + v69[11]) = *(_OWORD *)((char *)v8 + v69[11]);
        *(_OWORD *)((char *)v7 + v69[12]) = *(_OWORD *)((char *)v8 + v69[12]);
        uint64_t v257 = v69[13];
        uint64_t v84 = (char *)v7 + v257;
        uint64_t v85 = (char *)v8 + v257;
        uint64_t v86 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v85, 1, v86)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 7u:
        long long v75 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v75;
        v7[2] = v8[2];
        uint64_t v76 = type metadata accessor for VoicemailTranscript(0);
        uint64_t v77 = *(int *)(v76 + 28);
        uint64_t v78 = (char *)v7 + v77;
        uint64_t v79 = (char *)v8 + v77;
        uint64_t v80 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v79, 1, v80))
        {
          uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
          __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v80);
        }
        uint64_t v258 = *(int *)(v76 + 32);
        uint64_t v84 = (char *)v7 + v258;
        uint64_t v85 = (char *)v8 + v258;
        uint64_t v86 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v85, 1, v86)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 8u:
        long long v82 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v82;
        v7[2] = v8[2];
        uint64_t v83 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
        uint64_t v84 = (char *)v7 + v83;
        uint64_t v85 = (char *)v8 + v83;
        uint64_t v86 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v85, 1, v86)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 9u:
        long long v87 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v87;
        uint64_t v88 = (int *)type metadata accessor for VoiceMemo(0);
        uint64_t v89 = v88[6];
        uint64_t v90 = (char *)v7 + v89;
        uint64_t v91 = (char *)v8 + v89;
        uint64_t v92 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v91, 1, v92))
        {
          uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v90, v91, *(void *)(*(void *)(v93 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v90, v91, v92);
          __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v92);
        }
        uint64_t v259 = v88[7];
        uint64_t v260 = (char *)v7 + v259;
        uint64_t v261 = (char *)v8 + v259;
        *(void *)uint64_t v260 = *(void *)v261;
        v260[8] = v261[8];
        uint64_t v262 = v88[8];
        uint64_t v84 = (char *)v7 + v262;
        uint64_t v85 = (char *)v8 + v262;
        uint64_t v86 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v85, 1, v86)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 0xAu:
        long long v94 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v94;
        uint64_t v95 = (int *)type metadata accessor for Safari(0);
        uint64_t v96 = v95[6];
        uint64_t v97 = (char *)v7 + v96;
        uint64_t v98 = (char *)v8 + v96;
        uint64_t v58 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v98, 1, v58))
        {
          uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v97, v98, v58);
          __swift_storeEnumTagSinglePayload((uint64_t)v97, 0, 1, v58);
        }
        *(_OWORD *)((char *)v7 + v95[7]) = *(_OWORD *)((char *)v8 + v95[7]);
        *(_OWORD *)((char *)v7 + v95[8]) = *(_OWORD *)((char *)v8 + v95[8]);
        uint64_t v263 = v95[9];
        uint64_t v251 = (char *)v7 + v263;
        uint64_t v252 = (char *)v8 + v263;
        if (!__swift_getEnumTagSinglePayload((uint64_t)v8 + v263, 1, v58)) {
          goto LABEL_136;
        }
        uint64_t v264 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v251, v252, *(void *)(*(void *)(v264 - 8) + 64));
        goto LABEL_524;
      case 0xCu:
        long long v100 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v100;
        v7[2] = v8[2];
        uint64_t v101 = (int *)type metadata accessor for WalletTransaction(0);
        uint64_t v102 = v101[7];
        uint64_t v103 = (char *)v7 + v102;
        uint64_t v104 = (char *)v8 + v102;
        uint64_t v105 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v104, 1, v105))
        {
          uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v103, v104, *(void *)(*(void *)(v106 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
          __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, v105);
        }
        *(_OWORD *)((char *)v7 + v101[8]) = *(_OWORD *)((char *)v8 + v101[8]);
        *(_OWORD *)((char *)v7 + v101[9]) = *(_OWORD *)((char *)v8 + v101[9]);
        *(_OWORD *)((char *)v7 + v101[10]) = *(_OWORD *)((char *)v8 + v101[10]);
        uint64_t v265 = v101[11];
        uint64_t v266 = (char *)v7 + v265;
        uint64_t v267 = (char *)v8 + v265;
        *(void *)(v266 + 13) = *(void *)(v267 + 13);
        *(_OWORD *)uint64_t v266 = *(_OWORD *)v267;
        *(_OWORD *)((char *)v7 + v101[12]) = *(_OWORD *)((char *)v8 + v101[12]);
        goto LABEL_524;
      case 0xDu:
        long long v107 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v107;
        v7[2] = v8[2];
        uint64_t v108 = (int *)type metadata accessor for WalletPass(0);
        uint64_t v109 = v108[7];
        uint64_t v110 = (char *)v7 + v109;
        uint64_t v111 = (char *)v8 + v109;
        uint64_t v112 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v111, 1, v112))
        {
          uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v110, v111, *(void *)(*(void *)(v113 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32))(v110, v111, v112);
          __swift_storeEnumTagSinglePayload((uint64_t)v110, 0, 1, v112);
        }
        *(_OWORD *)((char *)v7 + v108[8]) = *(_OWORD *)((char *)v8 + v108[8]);
        *(void *)((char *)v7 + v108[9]) = *(void *)((char *)v8 + v108[9]);
        goto LABEL_524;
      case 0xFu:
        long long v114 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v114;
        long long v115 = v8[3];
        v7[2] = v8[2];
        v7[3] = v115;
        long long v116 = v8[5];
        v7[4] = v8[4];
        v7[5] = v116;
        *((unsigned char *)v7 + 96) = *((unsigned char *)v8 + 96);
        *(_OWORD *)((char *)v7 + 104) = *(_OWORD *)((char *)v8 + 104);
        uint64_t v117 = (int *)type metadata accessor for FlightReservation(0);
        uint64_t v118 = v117[13];
        uint64_t v119 = (char *)v7 + v118;
        uint64_t v120 = (char *)v8 + v118;
        uint64_t v121 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v120, 1, v121))
        {
          uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v119, v120, *(void *)(*(void *)(v122 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 32))(v119, v120, v121);
          __swift_storeEnumTagSinglePayload((uint64_t)v119, 0, 1, v121);
        }
        uint64_t v268 = v117[14];
        uint64_t v269 = (char *)v7 + v268;
        uint64_t v270 = (char *)v8 + v268;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v268, 1, v121))
        {
          uint64_t v271 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v269, v270, *(void *)(*(void *)(v271 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 32))(v269, v270, v121);
          __swift_storeEnumTagSinglePayload((uint64_t)v269, 0, 1, v121);
        }
        *(_OWORD *)((char *)v7 + v117[15]) = *(_OWORD *)((char *)v8 + v117[15]);
        *(_OWORD *)((char *)v7 + v117[16]) = *(_OWORD *)((char *)v8 + v117[16]);
        *(_OWORD *)((char *)v7 + v117[17]) = *(_OWORD *)((char *)v8 + v117[17]);
        uint64_t v314 = v117[18];
        uint64_t v315 = (char *)v7 + v314;
        uint64_t v316 = (char *)v8 + v314;
        uint64_t v317 = type metadata accessor for DateComponents();
        v318 = *(void (**)(char *, char *, uint64_t))(*(void *)(v317 - 8) + 32);
        v318(v315, v316, v317);
        v318((char *)v7 + v117[19], (char *)v8 + v117[19], v317);
        *(_OWORD *)((char *)v7 + v117[20]) = *(_OWORD *)((char *)v8 + v117[20]);
        *(_OWORD *)((char *)v7 + v117[21]) = *(_OWORD *)((char *)v8 + v117[21]);
        *(_OWORD *)((char *)v7 + v117[22]) = *(_OWORD *)((char *)v8 + v117[22]);
        *(_OWORD *)((char *)v7 + v117[23]) = *(_OWORD *)((char *)v8 + v117[23]);
        *(_OWORD *)((char *)v7 + v117[24]) = *(_OWORD *)((char *)v8 + v117[24]);
        *(_OWORD *)((char *)v7 + v117[25]) = *(_OWORD *)((char *)v8 + v117[25]);
        *(_OWORD *)((char *)v7 + v117[26]) = *(_OWORD *)((char *)v8 + v117[26]);
        *(_OWORD *)((char *)v7 + v117[27]) = *(_OWORD *)((char *)v8 + v117[27]);
        *(_OWORD *)((char *)v7 + v117[28]) = *(_OWORD *)((char *)v8 + v117[28]);
        *(_OWORD *)((char *)v7 + v117[29]) = *(_OWORD *)((char *)v8 + v117[29]);
        *(_OWORD *)((char *)v7 + v117[30]) = *(_OWORD *)((char *)v8 + v117[30]);
        *(_OWORD *)((char *)v7 + v117[31]) = *(_OWORD *)((char *)v8 + v117[31]);
        *(_OWORD *)((char *)v7 + v117[32]) = *(_OWORD *)((char *)v8 + v117[32]);
        *(void *)((char *)v7 + v117[33]) = *(void *)((char *)v8 + v117[33]);
        *(void *)((char *)v7 + v117[34]) = *(void *)((char *)v8 + v117[34]);
        *(_OWORD *)((char *)v7 + v117[35]) = *(_OWORD *)((char *)v8 + v117[35]);
        *(_OWORD *)((char *)v7 + v117[36]) = *(_OWORD *)((char *)v8 + v117[36]);
        *(_OWORD *)((char *)v7 + v117[37]) = *(_OWORD *)((char *)v8 + v117[37]);
        uint64_t v319 = v117[38];
        uint64_t v320 = (char *)v7 + v319;
        uint64_t v321 = (char *)v8 + v319;
        uint64_t v322 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v321, 1, v322))
        {
          uint64_t v323 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v320, v321, *(void *)(*(void *)(v323 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v322 - 8) + 32))(v320, v321, v322);
          __swift_storeEnumTagSinglePayload((uint64_t)v320, 0, 1, v322);
        }
        *(_OWORD *)((char *)v7 + v117[39]) = *(_OWORD *)((char *)v8 + v117[39]);
        *(_OWORD *)((char *)v7 + v117[40]) = *(_OWORD *)((char *)v8 + v117[40]);
        uint64_t v348 = v117[41];
        uint64_t v349 = (char *)v7 + v348;
        uint64_t v350 = (char *)v8 + v348;
        *(void *)uint64_t v349 = *(void *)v350;
        v349[8] = v350[8];
        *(_OWORD *)((char *)v7 + v117[42]) = *(_OWORD *)((char *)v8 + v117[42]);
        uint64_t v351 = v117[43];
        uint64_t v352 = (char *)v7 + v351;
        uint64_t v353 = (char *)v8 + v351;
        *(_OWORD *)uint64_t v352 = *(_OWORD *)v353;
        *(void *)(v352 + 13) = *(void *)(v353 + 13);
        *(_OWORD *)((char *)v7 + v117[44]) = *(_OWORD *)((char *)v8 + v117[44]);
        *(_OWORD *)((char *)v7 + v117[45]) = *(_OWORD *)((char *)v8 + v117[45]);
        *(_OWORD *)((char *)v7 + v117[46]) = *(_OWORD *)((char *)v8 + v117[46]);
        *(_OWORD *)((char *)v7 + v117[47]) = *(_OWORD *)((char *)v8 + v117[47]);
        uint64_t v354 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
        *(void *)((char *)v7 + *(int *)(v354 + 48)) = *(void *)((char *)v8 + *(int *)(v354 + 48));
        goto LABEL_524;
      case 0x10u:
        long long v123 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v123;
        long long v124 = v8[3];
        v7[2] = v8[2];
        v7[3] = v124;
        long long v125 = v8[5];
        v7[4] = v8[4];
        v7[5] = v125;
        *((unsigned char *)v7 + 96) = *((unsigned char *)v8 + 96);
        *(_OWORD *)((char *)v7 + 104) = *(_OWORD *)((char *)v8 + 104);
        *(_OWORD *)((char *)v7 + 120) = *(_OWORD *)((char *)v8 + 120);
        id v126 = (int *)type metadata accessor for HotelReservation(0);
        uint64_t v127 = v126[14];
        uint64_t v128 = (char *)v7 + v127;
        uint64_t v129 = (char *)v8 + v127;
        uint64_t v130 = type metadata accessor for DateComponents();
        if (__swift_getEnumTagSinglePayload((uint64_t)v129, 1, v130))
        {
          uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v128, v129, *(void *)(*(void *)(v131 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v128, v129, v130);
          __swift_storeEnumTagSinglePayload((uint64_t)v128, 0, 1, v130);
        }
        uint64_t v272 = v126[15];
        uint64_t v273 = (char *)v7 + v272;
        uint64_t v274 = (char *)v8 + v272;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v272, 1, v130))
        {
          uint64_t v275 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v273, v274, *(void *)(*(void *)(v275 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v273, v274, v130);
          __swift_storeEnumTagSinglePayload((uint64_t)v273, 0, 1, v130);
        }
        *(_OWORD *)((char *)v7 + v126[16]) = *(_OWORD *)((char *)v8 + v126[16]);
        *(_OWORD *)((char *)v7 + v126[17]) = *(_OWORD *)((char *)v8 + v126[17]);
        *(_OWORD *)((char *)v7 + v126[18]) = *(_OWORD *)((char *)v8 + v126[18]);
        *(_OWORD *)((char *)v7 + v126[19]) = *(_OWORD *)((char *)v8 + v126[19]);
        *(_OWORD *)((char *)v7 + v126[20]) = *(_OWORD *)((char *)v8 + v126[20]);
        *(void *)((char *)v7 + v126[21]) = *(void *)((char *)v8 + v126[21]);
        *(void *)((char *)v7 + v126[22]) = *(void *)((char *)v8 + v126[22]);
        uint64_t v324 = v126[23];
        uint64_t v325 = (char *)v7 + v324;
        uint64_t v326 = (char *)v8 + v324;
        v325[8] = v326[8];
        *(void *)uint64_t v325 = *(void *)v326;
        uint64_t v327 = v126[24];
        uint64_t v328 = (char *)v7 + v327;
        uint64_t v329 = (char *)v8 + v327;
        v328[8] = v329[8];
        *(void *)uint64_t v328 = *(void *)v329;
        *(_OWORD *)((char *)v7 + v126[25]) = *(_OWORD *)((char *)v8 + v126[25]);
        *(_OWORD *)((char *)v7 + v126[26]) = *(_OWORD *)((char *)v8 + v126[26]);
        *(_OWORD *)((char *)v7 + v126[27]) = *(_OWORD *)((char *)v8 + v126[27]);
        *(_OWORD *)((char *)v7 + v126[28]) = *(_OWORD *)((char *)v8 + v126[28]);
        uint64_t v330 = v126[29];
        v331 = (char *)v7 + v330;
        uint64_t v332 = (char *)v8 + v330;
        *(void *)v331 = *(void *)v332;
        v331[8] = v332[8];
        goto LABEL_524;
      case 0x11u:
        long long v132 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v132;
        long long v133 = v8[3];
        v7[2] = v8[2];
        v7[3] = v133;
        long long v134 = v8[5];
        v7[4] = v8[4];
        v7[5] = v134;
        *((unsigned char *)v7 + 96) = *((unsigned char *)v8 + 96);
        *(_OWORD *)((char *)v7 + 104) = *(_OWORD *)((char *)v8 + 104);
        *(_OWORD *)((char *)v7 + 120) = *(_OWORD *)((char *)v8 + 120);
        uint64_t v135 = (int *)type metadata accessor for RestaurantReservation(0);
        uint64_t v136 = v135[14];
        uint64_t v137 = (char *)v7 + v136;
        uint64_t v138 = (char *)v8 + v136;
        uint64_t v139 = type metadata accessor for DateComponents();
        if (__swift_getEnumTagSinglePayload((uint64_t)v138, 1, v139))
        {
          uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v137, v138, *(void *)(*(void *)(v140 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 32))(v137, v138, v139);
          __swift_storeEnumTagSinglePayload((uint64_t)v137, 0, 1, v139);
        }
        *(_OWORD *)((char *)v7 + v135[15]) = *(_OWORD *)((char *)v8 + v135[15]);
        *(_OWORD *)((char *)v7 + v135[16]) = *(_OWORD *)((char *)v8 + v135[16]);
        *(_OWORD *)((char *)v7 + v135[17]) = *(_OWORD *)((char *)v8 + v135[17]);
        *(_OWORD *)((char *)v7 + v135[18]) = *(_OWORD *)((char *)v8 + v135[18]);
        *(_OWORD *)((char *)v7 + v135[19]) = *(_OWORD *)((char *)v8 + v135[19]);
        *(void *)((char *)v7 + v135[20]) = *(void *)((char *)v8 + v135[20]);
        *(_OWORD *)((char *)v7 + v135[21]) = *(_OWORD *)((char *)v8 + v135[21]);
        *(_OWORD *)((char *)v7 + v135[22]) = *(_OWORD *)((char *)v8 + v135[22]);
        *(_OWORD *)((char *)v7 + v135[23]) = *(_OWORD *)((char *)v8 + v135[23]);
        goto LABEL_524;
      case 0x12u:
        long long v141 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v141;
        long long v142 = v8[3];
        v7[2] = v8[2];
        v7[3] = v142;
        long long v143 = v8[5];
        v7[4] = v8[4];
        v7[5] = v143;
        long long v144 = v8[7];
        v7[6] = v8[6];
        v7[7] = v144;
        *((unsigned char *)v7 + 128) = *((unsigned char *)v8 + 128);
        *(_WORD *)((char *)v7 + 129) = *(_WORD *)((char *)v8 + 129);
        *((void *)v7 + 17) = *((void *)v8 + 17);
        long long v145 = v8[10];
        v7[9] = v8[9];
        v7[10] = v145;
        long long v146 = v8[12];
        v7[11] = v8[11];
        v7[12] = v146;
        long long v147 = v8[14];
        v7[13] = v8[13];
        v7[14] = v147;
        v7[15] = v8[15];
        *((void *)v7 + 32) = *((void *)v8 + 32);
        *(_OWORD *)((char *)v7 + 264) = *(_OWORD *)((char *)v8 + 264);
        *(_OWORD *)((char *)v7 + 280) = *(_OWORD *)((char *)v8 + 280);
        *(_OWORD *)((char *)v7 + 296) = *(_OWORD *)((char *)v8 + 296);
        *(_OWORD *)((char *)v7 + 312) = *(_OWORD *)((char *)v8 + 312);
        *(_OWORD *)((char *)v7 + 328) = *(_OWORD *)((char *)v8 + 328);
        *(_OWORD *)((char *)v7 + 344) = *(_OWORD *)((char *)v8 + 344);
        *(_OWORD *)((char *)v7 + 360) = *(_OWORD *)((char *)v8 + 360);
        *((unsigned char *)v7 + 384) = *((unsigned char *)v8 + 384);
        *((void *)v7 + 47) = *((void *)v8 + 47);
        *(_OWORD *)((char *)v7 + 392) = *(_OWORD *)((char *)v8 + 392);
        *(_OWORD *)((char *)v7 + 408) = *(_OWORD *)((char *)v8 + 408);
        uint64_t v148 = type metadata accessor for RentalCarReservation(0);
        uint64_t v149 = *(int *)(v148 + 140);
        uint64_t v150 = (char *)v7 + v149;
        uint64_t v151 = (char *)v8 + v149;
        uint64_t v58 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v151, 1, v58))
        {
          uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v150, v151, *(void *)(*(void *)(v152 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v150, v151, v58);
          __swift_storeEnumTagSinglePayload((uint64_t)v150, 0, 1, v58);
        }
        uint64_t v276 = *(int *)(v148 + 144);
        uint64_t v251 = (char *)v7 + v276;
        uint64_t v252 = (char *)v8 + v276;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v276, 1, v58)) {
          goto LABEL_106;
        }
        goto LABEL_136;
      case 0x13u:
        long long v153 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v153;
        long long v154 = v8[3];
        v7[2] = v8[2];
        v7[3] = v154;
        long long v155 = v8[5];
        v7[4] = v8[4];
        v7[5] = v155;
        long long v156 = v8[7];
        v7[6] = v8[6];
        v7[7] = v156;
        *((unsigned char *)v7 + 128) = *((unsigned char *)v8 + 128);
        *(_WORD *)((char *)v7 + 129) = *(_WORD *)((char *)v8 + 129);
        *((void *)v7 + 17) = *((void *)v8 + 17);
        long long v157 = v8[10];
        v7[9] = v8[9];
        v7[10] = v157;
        long long v158 = v8[12];
        v7[11] = v8[11];
        v7[12] = v158;
        *((void *)v7 + 26) = *((void *)v8 + 26);
        *(_OWORD *)((char *)v7 + 216) = *(_OWORD *)((char *)v8 + 216);
        *(_OWORD *)((char *)v7 + 232) = *(_OWORD *)((char *)v8 + 232);
        *(_OWORD *)((char *)v7 + 248) = *(_OWORD *)((char *)v8 + 248);
        *(_OWORD *)((char *)v7 + 264) = *(_OWORD *)((char *)v8 + 264);
        *((unsigned char *)v7 + 296) = *((unsigned char *)v8 + 296);
        uint64_t v159 = *((void *)v8 + 36);
        *((void *)v7 + 35) = *((void *)v8 + 35);
        *((void *)v7 + 36) = v159;
        uint64_t v160 = type metadata accessor for TicketedTransportation(0);
        uint64_t v161 = *(int *)(v160 + 112);
        uint64_t v162 = (char *)v7 + v161;
        uint64_t v163 = (char *)v8 + v161;
        uint64_t v58 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v163, 1, v58))
        {
          uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v162, v163, *(void *)(*(void *)(v164 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v162, v163, v58);
          __swift_storeEnumTagSinglePayload((uint64_t)v162, 0, 1, v58);
        }
        uint64_t v277 = *(int *)(v160 + 116);
        uint64_t v251 = (char *)v7 + v277;
        uint64_t v252 = (char *)v8 + v277;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v277, 1, v58)) {
          goto LABEL_106;
        }
        goto LABEL_136;
      case 0x14u:
        long long v165 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v165;
        long long v166 = v8[3];
        v7[2] = v8[2];
        v7[3] = v166;
        long long v167 = v8[5];
        v7[4] = v8[4];
        v7[5] = v167;
        long long v168 = v8[7];
        v7[6] = v8[6];
        v7[7] = v168;
        *((unsigned char *)v7 + 128) = *((unsigned char *)v8 + 128);
        *(_WORD *)((char *)v7 + 129) = *(_WORD *)((char *)v8 + 129);
        *((void *)v7 + 17) = *((void *)v8 + 17);
        long long v169 = v8[10];
        v7[9] = v8[9];
        v7[10] = v169;
        long long v170 = v8[12];
        v7[11] = v8[11];
        v7[12] = v170;
        long long v171 = v8[14];
        v7[13] = v8[13];
        v7[14] = v171;
        *((void *)v7 + 30) = *((void *)v8 + 30);
        *(_OWORD *)((char *)v7 + 248) = *(_OWORD *)((char *)v8 + 248);
        *(_OWORD *)((char *)v7 + 264) = *(_OWORD *)((char *)v8 + 264);
        *((unsigned char *)v7 + 296) = *((unsigned char *)v8 + 296);
        uint64_t v172 = *((void *)v8 + 36);
        *((void *)v7 + 35) = *((void *)v8 + 35);
        *((void *)v7 + 36) = v172;
        v7[19] = v8[19];
        uint64_t v173 = (int *)type metadata accessor for TicketedShow(0);
        uint64_t v174 = v173[29];
        uint64_t v175 = (char *)v7 + v174;
        uint64_t v176 = (char *)v8 + v174;
        uint64_t v177 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v176, 1, v177))
        {
          uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v175, v176, *(void *)(*(void *)(v178 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 32))(v175, v176, v177);
          __swift_storeEnumTagSinglePayload((uint64_t)v175, 0, 1, v177);
        }
        *(_OWORD *)((char *)v7 + v173[30]) = *(_OWORD *)((char *)v8 + v173[30]);
        uint64_t v278 = v173[31];
        uint64_t v279 = (char *)v7 + v278;
        uint64_t v280 = (char *)v8 + v278;
        uint64_t v281 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v280, 1, v281))
        {
          uint64_t v282 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v279, v280, *(void *)(*(void *)(v282 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 32))(v279, v280, v281);
          __swift_storeEnumTagSinglePayload((uint64_t)v279, 0, 1, v281);
        }
        uint64_t v333 = v173[32];
        v334 = (char *)v7 + v333;
        uint64_t v335 = (char *)v8 + v333;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v333, 1, v281))
        {
          uint64_t v336 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v334, v335, *(void *)(*(void *)(v336 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 32))(v334, v335, v281);
          __swift_storeEnumTagSinglePayload((uint64_t)v334, 0, 1, v281);
        }
        goto LABEL_524;
      case 0x15u:
        long long v179 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v179;
        long long v180 = v8[3];
        v7[2] = v8[2];
        v7[3] = v180;
        long long v181 = v8[5];
        v7[4] = v8[4];
        v7[5] = v181;
        long long v182 = v8[7];
        v7[6] = v8[6];
        v7[7] = v182;
        *((unsigned char *)v7 + 128) = *((unsigned char *)v8 + 128);
        *(_WORD *)((char *)v7 + 129) = *(_WORD *)((char *)v8 + 129);
        *((void *)v7 + 17) = *((void *)v8 + 17);
        long long v183 = v8[10];
        v7[9] = v8[9];
        v7[10] = v183;
        long long v184 = v8[12];
        v7[11] = v8[11];
        v7[12] = v184;
        long long v185 = v8[14];
        v7[13] = v8[13];
        v7[14] = v185;
        long long v186 = v8[16];
        v7[15] = v8[15];
        v7[16] = v186;
        *((unsigned char *)v7 + 280) = *((unsigned char *)v8 + 280);
        *((void *)v7 + 34) = *((void *)v8 + 34);
        v7[18] = v8[18];
        uint64_t v187 = type metadata accessor for Appointment(0);
        uint64_t v188 = *(int *)(v187 + 108);
        uint64_t v189 = (char *)v7 + v188;
        uint64_t v190 = (char *)v8 + v188;
        uint64_t v58 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v58))
        {
          uint64_t v191 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v189, v190, *(void *)(*(void *)(v191 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v189, v190, v58);
          __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v58);
        }
        uint64_t v283 = *(int *)(v187 + 112);
        uint64_t v251 = (char *)v7 + v283;
        uint64_t v252 = (char *)v8 + v283;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v283, 1, v58))
        {
LABEL_106:
          uint64_t v284 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v251, v252, *(void *)(*(void *)(v284 - 8) + 64));
        }
        else
        {
LABEL_136:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v251, v252, v58);
          __swift_storeEnumTagSinglePayload((uint64_t)v251, 0, 1, v58);
        }
        goto LABEL_524;
      case 0x16u:
        long long v192 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v192;
        long long v193 = v8[3];
        v7[2] = v8[2];
        v7[3] = v193;
        long long v194 = v8[5];
        v7[4] = v8[4];
        v7[5] = v194;
        long long v195 = v8[7];
        v7[6] = v8[6];
        v7[7] = v195;
        *((unsigned char *)v7 + 128) = *((unsigned char *)v8 + 128);
        *(_WORD *)((char *)v7 + 129) = *(_WORD *)((char *)v8 + 129);
        *((void *)v7 + 17) = *((void *)v8 + 17);
        long long v196 = v8[10];
        v7[9] = v8[9];
        v7[10] = v196;
        long long v197 = v8[12];
        v7[11] = v8[11];
        v7[12] = v197;
        long long v198 = v8[14];
        v7[13] = v8[13];
        v7[14] = v198;
        v7[15] = v8[15];
        uint64_t v199 = (int *)type metadata accessor for Party(0);
        uint64_t v200 = v199[24];
        uint64_t v201 = (char *)v7 + v200;
        uint64_t v202 = (char *)v8 + v200;
        uint64_t v203 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v202, 1, v203))
        {
          uint64_t v204 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v201, v202, *(void *)(*(void *)(v204 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 32))(v201, v202, v203);
          __swift_storeEnumTagSinglePayload((uint64_t)v201, 0, 1, v203);
        }
        uint64_t v285 = v199[25];
        uint64_t v286 = (char *)v7 + v285;
        uint64_t v287 = (char *)v8 + v285;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v285, 1, v203))
        {
          uint64_t v288 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v286, v287, *(void *)(*(void *)(v288 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 32))(v286, v287, v203);
          __swift_storeEnumTagSinglePayload((uint64_t)v286, 0, 1, v203);
        }
        uint64_t v337 = v199[26];
        uint64_t v84 = (char *)v7 + v337;
        uint64_t v85 = (char *)v8 + v337;
        uint64_t v86 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v85, 1, v86)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 0x17u:
        long long v205 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v205;
        long long v206 = v8[3];
        v7[2] = v8[2];
        v7[3] = v206;
        long long v207 = v8[5];
        v7[4] = v8[4];
        v7[5] = v207;
        long long v208 = v8[7];
        v7[6] = v8[6];
        v7[7] = v208;
        *((unsigned char *)v7 + 128) = *((unsigned char *)v8 + 128);
        *(_WORD *)((char *)v7 + 129) = *(_WORD *)((char *)v8 + 129);
        *((void *)v7 + 17) = *((void *)v8 + 17);
        long long v209 = v8[10];
        v7[9] = v8[9];
        v7[10] = v209;
        long long v210 = v8[12];
        v7[11] = v8[11];
        v7[12] = v210;
        v7[13] = v8[13];
        uint64_t v211 = (int *)type metadata accessor for Trip(0);
        uint64_t v212 = v211[22];
        uint64_t v213 = (char *)v7 + v212;
        uint64_t v214 = (char *)v8 + v212;
        uint64_t v215 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v214, 1, v215))
        {
          uint64_t v216 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v213, v214, *(void *)(*(void *)(v216 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 32))(v213, v214, v215);
          __swift_storeEnumTagSinglePayload((uint64_t)v213, 0, 1, v215);
        }
        uint64_t v289 = v211[23];
        uint64_t v290 = (char *)v7 + v289;
        v291 = (char *)v8 + v289;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v289, 1, v215))
        {
          uint64_t v292 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v290, v291, *(void *)(*(void *)(v292 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 32))(v290, v291, v215);
          __swift_storeEnumTagSinglePayload((uint64_t)v290, 0, 1, v215);
        }
        uint64_t v338 = v211[24];
        uint64_t v339 = (char *)v7 + v338;
        uint64_t v340 = (char *)v8 + v338;
        *(void *)uint64_t v339 = *(void *)v340;
        v339[8] = v340[8];
        uint64_t v341 = v211[25];
        uint64_t v84 = (char *)v7 + v341;
        uint64_t v85 = (char *)v8 + v341;
        uint64_t v86 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v85, 1, v86))
        {
LABEL_146:
          uint64_t v342 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v84, v85, *(void *)(*(void *)(v342 - 8) + 64));
        }
        else
        {
LABEL_128:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(v84, v85, v86);
          __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v86);
        }
        goto LABEL_524;
      case 0x18u:
        long long v217 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v217;
        v7[2] = v8[2];
        uint64_t v218 = (int *)type metadata accessor for GlobalItem();
        uint64_t v219 = v218[7];
        uint64_t v220 = (char *)v7 + v219;
        uint64_t v221 = (char *)v8 + v219;
        uint64_t v222 = type metadata accessor for GlobalDialog();
        if (__swift_getEnumTagSinglePayload((uint64_t)v221, 1, v222))
        {
          uint64_t v223 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
          memcpy(v220, v221, *(void *)(*(void *)(v223 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v222 - 8) + 32))(v220, v221, v222);
          __swift_storeEnumTagSinglePayload((uint64_t)v220, 0, 1, v222);
        }
        *(_OWORD *)((char *)v7 + v218[8]) = *(_OWORD *)((char *)v8 + v218[8]);
        *((unsigned char *)v7 + v218[9]) = *((unsigned char *)v8 + v218[9]);
        uint64_t v293 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
        *(void *)((char *)v7 + *(int *)(v293 + 48)) = *(void *)((char *)v8 + *(int *)(v293 + 48));
        goto LABEL_524;
      case 0x1Au:
        long long v224 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v224;
        v7[2] = v8[2];
        *((void *)v7 + 6) = *((void *)v8 + 6);
        uint64_t v225 = (int *)type metadata accessor for Answer(0);
        uint64_t v226 = v225[9];
        uint64_t v227 = (char *)v7 + v226;
        uint64_t v228 = (char *)v8 + v226;
        uint64_t v229 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v228, 1, v229))
        {
          uint64_t v230 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v227, v228, *(void *)(*(void *)(v230 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v229 - 8) + 32))(v227, v228, v229);
          __swift_storeEnumTagSinglePayload((uint64_t)v227, 0, 1, v229);
        }
        *((unsigned char *)v7 + v225[10]) = *((unsigned char *)v8 + v225[10]);
        *(_OWORD *)((char *)v7 + v225[11]) = *(_OWORD *)((char *)v8 + v225[11]);
LABEL_524:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
        break;
    }
    *(void *)((char *)v7 + *(int *)(v9 + 20)) = *(void *)((char *)v8 + *(int *)(v9 + 20));
    *(_OWORD *)((char *)v7 + *(int *)(v9 + 24)) = *(_OWORD *)((char *)v8 + *(int *)(v9 + 24));
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  return a1;
}

#error "2580A1940: too big function (funcsize=0)"

uint64_t getEnumTagSinglePayload for SearchAppEntity.Builder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2580B303C);
}

uint64_t sub_2580B303C(uint64_t a1, int a2)
{
  if (a2 == 2147483646)
  {
    unint64_t v2 = *(void *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF) {
      LODWORD(v2) = -1;
    }
    int v3 = v2 - 1;
    if (v3 < 0) {
      int v3 = -1;
    }
    return (v3 + 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    uint64_t v5 = OUTLINED_FUNCTION_38_7();
    return __swift_getEnumTagSinglePayload(v5, v6, v7);
  }
}

uint64_t storeEnumTagSinglePayload for SearchAppEntity.Builder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2580B30DC);
}

uint64_t sub_2580B30DC(uint64_t result, unsigned int a2, int a3)
{
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    uint64_t v3 = OUTLINED_FUNCTION_23_9();
    return __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
  return result;
}

void type metadata completion function for SearchAppEntity.Builder()
{
  type metadata accessor for SearchResult?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for SearchAppEntity.Query()
{
  return &type metadata for SearchAppEntity.Query;
}

uint64_t getEnumTagSinglePayload for SearchAppEntity.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SearchAppEntity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2580B335CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void *type metadata accessor for SearchAppEntity.CodingKeys()
{
  return &unk_2706AB1E0;
}

uint64_t OUTLINED_FUNCTION_4_16()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_12_16()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_13_18()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_14_16()
{
  uint64_t v4 = *(void *)(v2 - 120);
  return outlined init with copy of SearchAppEntity(v1, v4, v0);
}

uint64_t OUTLINED_FUNCTION_17_12()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_19_12()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t OUTLINED_FUNCTION_21_12()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_23_9()
{
  return v0 + *(int *)(v1 + 40);
}

void OUTLINED_FUNCTION_24_12()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t OUTLINED_FUNCTION_26_14()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

BOOL OUTLINED_FUNCTION_27_12(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_30_13()
{
  return outlined init with copy of SearchAppEntity(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_31_10()
{
  return outlined init with copy of SearchAppEntity(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_35_8()
{
  return outlined init with copy of SearchAppEntity(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_36_9()
{
  return v0 - 96;
}

uint64_t OUTLINED_FUNCTION_38_7()
{
  return v0 + *(int *)(v1 + 40);
}

BOOL specialized Collection.isEmpty.getter(uint64_t a1)
{
  return *(void *)(a1 + 16) == 0;
}

uint64_t SearchEntity.source.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchEntity.source : SearchEntity()
{
  return SearchEntity.source.setter();
}

uint64_t SearchEntity.source.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*SearchEntity.source.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntity.$source.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchEntity.type.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t key path setter for SearchEntity.type : SearchEntity(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchResultType();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return SearchEntity.type.setter((uint64_t)v4);
}

uint64_t SearchEntity.type.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchResultType();
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_64_0();
  v6();
  EntityProperty.wrappedValue.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*SearchEntity.type.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntity.$type.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchEntity.appEntity.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t SearchEntity.appEntity.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_65_4();
  OUTLINED_FUNCTION_31_11(a1);
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*SearchEntity.appEntity.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntity.$appEntity.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchEntity.globalResult.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t key path setter for SearchEntity.appEntity : SearchEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_18_8();
  uint64_t v11 = OUTLINED_FUNCTION_113_4();
  outlined init with copy of SearchAppEntity?(v11, v12, a5);
  return a6(v6);
}

uint64_t SearchEntity.globalResult.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_31_11(a1);
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*SearchEntity.globalResult.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntity.$globalResult.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchEntity.spotlightResult.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t SearchEntity.spotlightResult.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_31_11(a1);
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*SearchEntity.spotlightResult.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntity.$spotlightResult.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchEntity.event.getter()
{
  return EntityProperty.wrappedValue.getter();
}

double key path getter for SearchEntity.event : SearchEntity@<D0>(_OWORD *a1@<X8>)
{
  SearchEntity.event.getter();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  double result = *(double *)&v7;
  a1[4] = v7;
  return result;
}

uint64_t key path setter for SearchEntity.event : SearchEntity(uint64_t a1)
{
  return SearchEntity.event.setter();
}

uint64_t SearchEntity.event.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t (*SearchEntity.event.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntity.$event.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchEntity.idCard.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t SearchEntity.idCard.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IdCardEntity?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_31_11(a1);
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*SearchEntity.idCard.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntity.$idCard.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchEntity.media.getter()
{
  return EntityProperty.wrappedValue.getter();
}

double key path getter for SearchEntity.media : SearchEntity@<D0>(uint64_t a1@<X8>)
{
  SearchEntity.media.getter();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  return result;
}

uint64_t key path setter for SearchEntity.media : SearchEntity(uint64_t a1)
{
  return SearchEntity.media.setter();
}

uint64_t SearchEntity.media.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t (*SearchEntity.media.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntity.$media.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchEntity.answer.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t key path getter for SearchEntity.answer : SearchEntity@<X0>(uint64_t a1@<X8>)
{
  SearchEntity.answer.getter();
  outlined init with take of SearchResultItem?((uint64_t)&v3, (uint64_t)v4, &demangling cache variable for type metadata for AnswerMetadata?);
  return outlined init with take of SearchResultItem?((uint64_t)v4, a1, &demangling cache variable for type metadata for AnswerMetadata?);
}

uint64_t key path setter for SearchEntity.answer : SearchEntity(uint64_t a1)
{
  outlined init with take of SearchResultItem?(a1, (uint64_t)v3, &demangling cache variable for type metadata for AnswerMetadata?);
  outlined init with take of SearchResultItem?((uint64_t)v3, (uint64_t)v2, &demangling cache variable for type metadata for AnswerMetadata?);
  outlined release of AnswerMetadata?(v3);
  return SearchEntity.answer.setter((uint64_t)v2);
}

uint64_t SearchEntity.answer.setter(uint64_t a1)
{
  outlined init with take of SearchResultItem?(a1, (uint64_t)v3, &demangling cache variable for type metadata for AnswerMetadata?);
  outlined init with take of SearchResultItem?((uint64_t)v3, (uint64_t)&v2, &demangling cache variable for type metadata for AnswerMetadata?);
  return EntityProperty.wrappedValue.setter();
}

uint64_t (*SearchEntity.answer.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntity.$answer.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchEntity.shouldOpen.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchEntity.shouldOpen.setter()
{
  return SearchEntity.shouldOpen.didset();
}

uint64_t SearchEntity.shouldOpen.didset()
{
  uint64_t v2 = type metadata accessor for SearchAppEntity(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_17_1();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_65_4();
  EntityProperty.wrappedValue.getter();
  uint64_t v6 = OUTLINED_FUNCTION_88_4();
  if (__swift_getEnumTagSinglePayload(v6, v7, v2)) {
    return outlined destroy of PQAVerificationModelProtocol?(v1, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  }
  outlined init with copy of SearchEntity(v1, v0, (void (*)(void))type metadata accessor for SearchAppEntity);
  outlined destroy of PQAVerificationModelProtocol?(v1, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  EntityProperty.wrappedValue.getter();
  EntityProperty.wrappedValue.setter();
  return outlined destroy of SearchEntity(v0, (void (*)(void))type metadata accessor for SearchAppEntity);
}

uint64_t (*SearchEntity.shouldOpen.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 72);
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = v3;
  EntityProperty.wrappedValue.getter();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return SearchEntity.shouldOpen.modify;
}

uint64_t SearchEntity.shouldOpen.modify(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  EntityProperty.wrappedValue.setter();
  return SearchEntity.shouldOpen.didset();
}

uint64_t SearchEntity.$shouldOpen.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchEntity.experienceFile.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t SearchEntity.experienceFile.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_31_11(a1);
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*SearchEntity.experienceFile.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntity.$experienceFile.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchEntity.hydratedEntityType.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t key path getter for SearchEntity.hydratedEntityType : SearchEntity@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = SearchEntity.hydratedEntityType.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for SearchEntity.hydratedEntityType : SearchEntity()
{
  return SearchEntity.hydratedEntityType.setter();
}

uint64_t SearchEntity.hydratedEntityType.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t (*SearchEntity.hydratedEntityType.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntity.$hydratedEntityType.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchEntity.hydratedContent.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchEntity.hydratedContent.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*SearchEntity.hydratedContent.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntity.$hydratedContent.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchEntity.supportedTypeIdentifiersForExport.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchEntity.supportedTypeIdentifiersForExport : SearchEntity()
{
  return SearchEntity.supportedTypeIdentifiersForExport.setter();
}

uint64_t SearchEntity.supportedTypeIdentifiersForExport.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t (*SearchEntity.supportedTypeIdentifiersForExport.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntity.$supportedTypeIdentifiersForExport.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchEntity.inAppSearchString.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchEntity.inAppSearchString.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*SearchEntity.inAppSearchString.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntity.$inAppSearchString.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchEntity.requestedProperties.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchEntity.requestedProperties : SearchEntity()
{
  return SearchEntity.requestedProperties.setter();
}

uint64_t SearchEntity.requestedProperties.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t (*SearchEntity.requestedProperties.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntity.$requestedProperties.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchEntity.experienceSourceType.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t SearchEntity.associatedQuery.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchEntity.hydratedContent : SearchEntity(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v6, v7);
}

uint64_t SearchEntity.associatedQuery.setter()
{
  return SearchEntity.associatedQuery.didset();
}

uint64_t SearchEntity.associatedQuery.didset()
{
  uint64_t v2 = type metadata accessor for SearchGlobalEntity();
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_59_0();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_18_8();
  EntityProperty.wrappedValue.getter();
  uint64_t v8 = OUTLINED_FUNCTION_82_4();
  if (__swift_getEnumTagSinglePayload(v8, v9, v2)) {
    return outlined destroy of PQAVerificationModelProtocol?(v1, &demangling cache variable for type metadata for SearchGlobalEntity?);
  }
  OUTLINED_FUNCTION_113_4();
  OUTLINED_FUNCTION_64_0();
  v11();
  outlined destroy of PQAVerificationModelProtocol?(v1, &demangling cache variable for type metadata for SearchGlobalEntity?);
  EntityProperty.wrappedValue.getter();
  SearchGlobalEntity.associatedQuery.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v0, v2);
}

void (*SearchEntity.associatedQuery.modify())(uint64_t **a1, char a2)
{
  uint64_t v2 = malloc(0x30uLL);
  uint64_t v3 = OUTLINED_FUNCTION_4_7((uint64_t)v2);
  uint64_t v4 = *(void *)(v0 + 128);
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v4;
  EntityProperty.wrappedValue.getter();
  *uint64_t v1 = v1[1];
  return SearchEntity.associatedQuery.modify;
}

void SearchEntity.associatedQuery.modify(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  v2[2] = v4;
  v2[3] = v3;
  if (a2)
  {
    swift_bridgeObjectRetain();
    EntityProperty.wrappedValue.setter();
    SearchEntity.associatedQuery.didset();
    swift_bridgeObjectRelease();
  }
  else
  {
    EntityProperty.wrappedValue.setter();
    SearchEntity.associatedQuery.didset();
  }
  free(v2);
}

uint64_t SearchEntity.$associatedQuery.getter()
{
  return EntityProperty.projectedValue.getter();
}

void SearchEntity.snippetPluginModel.getter(uint64_t *a1@<X8>)
{
  uint64_t v2 = SearchEntity.card.getter();
  if (v2)
  {
    id v4 = (id)v2;
    SFCard.snippetPluginModel.getter(a1);
  }
  else
  {
    uint64_t v3 = type metadata accessor for RGPluginModel();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 1, 1, v3);
  }
}

uint64_t SearchEntity.card.getter()
{
  SearchEntity.representedEntity.getter();
  if (!v5)
  {
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)v4, &demangling cache variable for type metadata for AppEntity?);
    long long v6 = 0u;
    long long v7 = 0u;
    uint64_t v8 = 0;
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppEntity);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CardRepresentable);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v8 = 0;
    long long v6 = 0u;
    long long v7 = 0u;
    goto LABEL_7;
  }
  uint64_t v0 = *((void *)&v7 + 1);
  if (!*((void *)&v7 + 1))
  {
LABEL_7:
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)&v6, &demangling cache variable for type metadata for CardRepresentable?);
    return 0;
  }
  uint64_t v1 = v8;
  __swift_project_boxed_opaque_existential_1(&v6, *((uint64_t *)&v7 + 1));
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v1);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v6);
  return v2;
}

void SearchEntity.representedEntity.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v59 = v4;
  uint64_t v5 = type metadata accessor for SearchEntity(0);
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_184_0();
  *(void *)&long long v58 = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
  uint64_t v9 = OUTLINED_FUNCTION_81(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  uint64_t v13 = OUTLINED_FUNCTION_81(v12);
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_97_1();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IdCardEntity?);
  uint64_t v15 = OUTLINED_FUNCTION_81(v14);
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_21_7();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  uint64_t v17 = OUTLINED_FUNCTION_81(v16);
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_62_5();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_67_5();
  MEMORY[0x270FA5388](v19);
  EntityProperty.wrappedValue.getter();
  uint64_t v20 = OUTLINED_FUNCTION_105_4();
  int v22 = v21(v20);
  if (v22 == *MEMORY[0x263F5B7B0])
  {
    EntityProperty.wrappedValue.getter();
    uint64_t v23 = type metadata accessor for SearchAppEntity(0);
    OUTLINED_FUNCTION_53_2(v0, 1, v23);
    if (!v24)
    {
      uint64_t v28 = v59;
      v59[3] = v23;
      v28[4] = _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
      boxed_opaque_existential_1Tm_0 = __swift_allocate_boxed_opaque_existential_1Tm_0(v28);
      long long v30 = (void (*)(void))type metadata accessor for SearchAppEntity;
      uint64_t v31 = v0;
LABEL_25:
      outlined init with take of SearchSpotlightEntity(v31, (uint64_t)boxed_opaque_existential_1Tm_0, v30);
      goto LABEL_26;
    }
    uint64_t v25 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
    uint64_t v26 = v0;
    goto LABEL_20;
  }
  if (v22 == *MEMORY[0x263F5B7A0])
  {
    EntityProperty.wrappedValue.getter();
    uint64_t v27 = type metadata accessor for SearchGlobalEntity();
    OUTLINED_FUNCTION_53_2(v2, 1, v27);
    if (!v24)
    {
      uint64_t v33 = v59;
      v59[3] = v27;
      v33[4] = _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchGlobalEntity and conformance SearchGlobalEntity, MEMORY[0x263F5B7E0]);
      uint64_t v34 = __swift_allocate_boxed_opaque_existential_1Tm_0(v33);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v34, v2, v27);
      goto LABEL_26;
    }
    uint64_t v25 = &demangling cache variable for type metadata for SearchGlobalEntity?;
    uint64_t v26 = v2;
LABEL_20:
    outlined destroy of PQAVerificationModelProtocol?(v26, v25);
    uint64_t v43 = v59;
    *(_OWORD *)uint64_t v59 = 0u;
    *((_OWORD *)v43 + 1) = 0u;
    v43[4] = 0;
    goto LABEL_26;
  }
  if (v22 == *MEMORY[0x263F5B7B8])
  {
    EntityProperty.wrappedValue.getter();
    uint64_t v32 = type metadata accessor for SearchSpotlightEntity(0);
    OUTLINED_FUNCTION_53_2((uint64_t)v11, 1, v32);
    if (!v24)
    {
      uint64_t v39 = v59;
      v59[3] = v32;
      v39[4] = _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
      boxed_opaque_existential_1Tm_0 = __swift_allocate_boxed_opaque_existential_1Tm_0(v39);
      long long v30 = (void (*)(void))type metadata accessor for SearchSpotlightEntity;
      uint64_t v31 = (uint64_t)v11;
      goto LABEL_25;
    }
    uint64_t v25 = (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?;
    uint64_t v26 = (uint64_t)v11;
    goto LABEL_20;
  }
  if (v22 == *MEMORY[0x263F5B790])
  {
    EntityProperty.wrappedValue.getter();
    uint64_t v35 = v60;
    if (v60)
    {
      uint64_t v36 = v65;
      long long v58 = v64;
      uint64_t v37 = v59;
      v59[3] = (uint64_t)&type metadata for EventEntity;
      v37[4] = lazy protocol witness table accessor for type EventEntity and conformance EventEntity();
      uint64_t v38 = swift_allocObject();
      *uint64_t v37 = v38;
      *(void *)(v38 + 16) = v35;
      *(_OWORD *)(v38 + 24) = v61;
      *(_OWORD *)(v38 + 40) = v62;
      *(_OWORD *)(v38 + 56) = v63;
      *(_OWORD *)(v38 + 72) = v58;
      *(void *)(v38 + 88) = v36;
      goto LABEL_26;
    }
LABEL_24:
    OUTLINED_FUNCTION_102_1();
    goto LABEL_26;
  }
  if (v22 == *MEMORY[0x263F5B7A8])
  {
    EntityProperty.wrappedValue.getter();
    uint64_t v40 = type metadata accessor for IdCardEntity();
    uint64_t v41 = OUTLINED_FUNCTION_103_4();
    OUTLINED_FUNCTION_53_2(v41, v42, v40);
    if (!v24)
    {
      uint64_t v47 = v59;
      v59[3] = v40;
      v47[4] = _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type IdCardEntity and conformance IdCardEntity, (void (*)(uint64_t))type metadata accessor for IdCardEntity);
      boxed_opaque_existential_1Tm_0 = __swift_allocate_boxed_opaque_existential_1Tm_0(v47);
      long long v30 = (void (*)(void))type metadata accessor for IdCardEntity;
      uint64_t v31 = v3;
      goto LABEL_25;
    }
    uint64_t v25 = &demangling cache variable for type metadata for IdCardEntity?;
    uint64_t v26 = v3;
    goto LABEL_20;
  }
  if (v22 == *MEMORY[0x263F5B798])
  {
    EntityProperty.wrappedValue.getter();
    uint64_t v44 = v60;
    if (v60)
    {
      long long v45 = v61;
      uint64_t v46 = v59;
      v59[3] = (uint64_t)&type metadata for MediaEntity;
      v46[4] = lazy protocol witness table accessor for type MediaEntity and conformance MediaEntity();
      uint64_t *v46 = v44;
      *(_OWORD *)(v46 + 1) = v45;
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v48 = type metadata accessor for Logger();
  __swift_project_value_buffer(v48, (uint64_t)static Logging.search);
  uint64_t v49 = v58;
  outlined init with copy of SearchEntity(v1, v58, (void (*)(void))type metadata accessor for SearchEntity);
  uint64_t v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v50, v51))
  {
    long long v52 = (uint8_t *)OUTLINED_FUNCTION_52_6();
    uint64_t v57 = OUTLINED_FUNCTION_13_1();
    uint64_t v60 = v57;
    *(_DWORD *)long long v52 = 136315138;
    uint64_t v56 = v52 + 4;
    EntityProperty.wrappedValue.getter();
    uint64_t v53 = String.init<A>(describing:)();
    uint64_t v66 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, &v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of SearchEntity(v49, (void (*)(void))type metadata accessor for SearchEntity);
    _os_log_impl(&dword_257DC6000, v50, v51, "Unexpected entity type! %s", v52, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    outlined destroy of SearchEntity(v49, (void (*)(void))type metadata accessor for SearchEntity);
  }

  OUTLINED_FUNCTION_102_1();
  OUTLINED_FUNCTION_105_4();
  OUTLINED_FUNCTION_100_4();
  v55();
LABEL_26:
  OUTLINED_FUNCTION_119_0();
}

uint64_t type metadata accessor for SearchEntity(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for SearchEntity);
}

uint64_t SearchEntity.sourceResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SearchEntity(0);
  return outlined init with copy of SearchAppEntity?(v1 + *(int *)(v3 + 84), a1, &demangling cache variable for type metadata for SearchResult?);
}

uint64_t SearchEntity.sourceResult.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SearchEntity(0);
  return outlined assign with take of SearchResultItem?(a1, v1 + *(int *)(v3 + 84), &demangling cache variable for type metadata for SearchResult?);
}

uint64_t (*SearchEntity.sourceResult.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchEntity.llmConsumableDescription.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t SearchEntity.llmConsumableDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SearchEntity(0) + 88));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SearchEntity.llmConsumableDescription.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void SearchEntity.init()()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v3 = v2;
  uint64_t v30 = type metadata accessor for SearchAppEntity(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_184_0();
  uint64_t v29 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_5_8();
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_22_15();
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_14_10();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  OUTLINED_FUNCTION_98_3();
  *uint64_t v3 = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchResultType>);
  OUTLINED_FUNCTION_48_7();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v11 = _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType, MEMORY[0x263F5B7C0]);
  v3[1] = MEMORY[0x25A2C4880](v1, v11);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchAppEntity?>);
  LocalizedStringResource.init(stringLiteral:)();
  _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
  OUTLINED_FUNCTION_43_9();
  v3[2] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchGlobalEntity?>);
  OUTLINED_FUNCTION_48_7();
  OUTLINED_FUNCTION_41_9();
  _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchGlobalEntity and conformance SearchGlobalEntity, MEMORY[0x263F5B7E0]);
  OUTLINED_FUNCTION_43_9();
  v3[3] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchSpotlightEntity?>);
  OUTLINED_FUNCTION_32_10();
  _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
  OUTLINED_FUNCTION_43_9();
  v3[4] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<EventEntity?>);
  OUTLINED_FUNCTION_48_7();
  OUTLINED_FUNCTION_47_6();
  lazy protocol witness table accessor for type EventEntity and conformance EventEntity();
  OUTLINED_FUNCTION_43_9();
  v3[5] = v15;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IdCardEntity?>);
  OUTLINED_FUNCTION_48_7();
  OUTLINED_FUNCTION_39_6();
  _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type IdCardEntity and conformance IdCardEntity, (void (*)(uint64_t))type metadata accessor for IdCardEntity);
  OUTLINED_FUNCTION_43_9();
  v3[6] = v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<MediaEntity?>);
  OUTLINED_FUNCTION_48_7();
  OUTLINED_FUNCTION_119_2();
  lazy protocol witness table accessor for type MediaEntity and conformance MediaEntity();
  OUTLINED_FUNCTION_43_9();
  v3[7] = v17;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<AnswerMetadata?>);
  OUTLINED_FUNCTION_48_7();
  OUTLINED_FUNCTION_45_7();
  lazy protocol witness table accessor for type AnswerMetadata and conformance AnswerMetadata();
  OUTLINED_FUNCTION_43_9();
  __n128 v3[8] = v18;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Bool>);
  OUTLINED_FUNCTION_48_7();
  OUTLINED_FUNCTION_12_16();
  v3[9] = MEMORY[0x25A2C4910](v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_70_5();
  v3[10] = MEMORY[0x25A2C48A0](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<HydratedEntityType?>);
  OUTLINED_FUNCTION_95_3();
  unint64_t v19 = lazy protocol witness table accessor for type HydratedEntityType and conformance HydratedEntityType();
  v3[11] = MEMORY[0x25A2C4880](v1, v19);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_32_10();
  v3[12] = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_70_5();
  v3[13] = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_70_5();
  v3[14] = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[SearchPropertyResponse]>);
  OUTLINED_FUNCTION_95_3();
  _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchPropertyResponse and conformance SearchPropertyResponse, (void (*)(uint64_t))type metadata accessor for SearchPropertyResponse);
  OUTLINED_FUNCTION_43_9();
  v3[15] = v20;
  OUTLINED_FUNCTION_32_10();
  v3[16] = MEMORY[0x25A2C4900](v1);
  uint64_t v21 = (int *)type metadata accessor for SearchEntity(0);
  uint64_t v22 = (uint64_t)v3 + v21[21];
  uint64_t v23 = type metadata accessor for SearchResult(0);
  __swift_storeEnumTagSinglePayload(v22, 1, 1, v23);
  uint64_t v24 = v21[23];
  LocalizedStringResource.init(stringLiteral:)();
  *(void *)((char *)v3 + v24) = MEMORY[0x25A2C4900](v1);
  uint64_t v25 = (void *)((char *)v3 + v21[22]);
  *uint64_t v25 = 0;
  v25[1] = 0xE000000000000000;
  UUID.init()();
  UUID.uuidString.getter();
  OUTLINED_FUNCTION_100_4();
  v26();
  EntityProperty.wrappedValue.setter();
  EntityProperty.wrappedValue.setter();
  EntityProperty.wrappedValue.setter();
  EntityProperty.wrappedValue.getter();
  uint64_t v27 = OUTLINED_FUNCTION_82_4();
  if (__swift_getEnumTagSinglePayload(v27, v28, v30))
  {
    outlined destroy of PQAVerificationModelProtocol?(v0, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  }
  else
  {
    outlined init with copy of SearchEntity(v0, v29, (void (*)(void))type metadata accessor for SearchAppEntity);
    outlined destroy of PQAVerificationModelProtocol?(v0, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
    EntityProperty.wrappedValue.getter();
    EntityProperty.wrappedValue.setter();
    outlined destroy of SearchEntity(v29, (void (*)(void))type metadata accessor for SearchAppEntity);
  }
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_119_0();
}

uint64_t SearchEntity.id.setter()
{
  return EntityProperty.wrappedValue.setter();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchEntity.validateParameters()()
{
  uint64_t v4 = type metadata accessor for SearchEntity(0);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_64_4(v6, v60);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_184_0();
  uint64_t v65 = v9;
  uint64_t v10 = OUTLINED_FUNCTION_26_8();
  uint64_t v64 = type metadata accessor for SearchSpotlightEntity(v10);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_63_4(v12, v60);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  uint64_t v14 = OUTLINED_FUNCTION_81(v13);
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_29_11();
  uint64_t v66 = (uint8_t *)type metadata accessor for SearchGlobalEntity();
  OUTLINED_FUNCTION_1();
  uint64_t v63 = v15;
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_97_1();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  uint64_t v18 = OUTLINED_FUNCTION_81(v17);
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = OUTLINED_FUNCTION_5_8();
  uint64_t v20 = type metadata accessor for SearchAppEntity(v19);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_22_15();
  type metadata accessor for SearchResultType();
  OUTLINED_FUNCTION_1();
  uint64_t v67 = v22;
  uint64_t v68 = v23;
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_185_0();
  uint64_t v60 = v24;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v60 - v26;
  EntityProperty.wrappedValue.getter();
  outlined init with take of SearchResultItem?((uint64_t)v71, (uint64_t)v72, &demangling cache variable for type metadata for AnswerMetadata?);
  outlined init with take of SearchResultItem?((uint64_t)v72, (uint64_t)v73, &demangling cache variable for type metadata for AnswerMetadata?);
  if (getEnumTag for DataFilter.FilterResult(v73) != 1)
  {
    outlined init with take of SearchResultItem?((uint64_t)v72, (uint64_t)v70, &demangling cache variable for type metadata for AnswerMetadata?);
    memcpy(v69, v70, sizeof(v69));
    AnswerMetadata.validateParameters()();
    outlined release of AnswerMetadata?(v72);
    if (v28) {
      return;
    }
    v73[18] = 0;
  }
  EntityProperty.wrappedValue.getter();
  int v29 = (*(uint64_t (**)(char *, uint64_t))(v68 + 88))(v27, v67);
  if (v29 == *MEMORY[0x263F5B7B0])
  {
    EntityProperty.wrappedValue.getter();
    uint64_t v30 = OUTLINED_FUNCTION_82_4();
    if (__swift_getEnumTagSinglePayload(v30, v31, v20) == 1)
    {
      uint64_t v32 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
      uint64_t v33 = v1;
LABEL_14:
      outlined destroy of PQAVerificationModelProtocol?(v33, v32);
      lazy protocol witness table accessor for type SearchToolError and conformance SearchToolError();
      swift_allocError();
      *uint64_t v41 = 0;
      v41[1] = 0;
      swift_willThrow();
      return;
    }
    outlined init with take of SearchSpotlightEntity(v1, v2, (void (*)(void))type metadata accessor for SearchAppEntity);
    SearchAppEntity.validateParameters()();
    uint64_t v36 = type metadata accessor for SearchAppEntity;
    uint64_t v37 = v2;
    goto LABEL_26;
  }
  if (v29 == *MEMORY[0x263F5B7A0])
  {
    EntityProperty.wrappedValue.getter();
    uint64_t v34 = OUTLINED_FUNCTION_103_4();
    if (__swift_getEnumTagSinglePayload(v34, v35, (uint64_t)v66) == 1)
    {
      uint64_t v32 = &demangling cache variable for type metadata for SearchGlobalEntity?;
      uint64_t v33 = v3;
      goto LABEL_14;
    }
    OUTLINED_FUNCTION_58_1();
    v43(v42);
    SearchGlobalEntity.validateParameters()();
    uint64_t v44 = OUTLINED_FUNCTION_115_3();
    v45(v44);
  }
  else
  {
    if (v29 == *MEMORY[0x263F5B7B8])
    {
      uint64_t v38 = v65;
      EntityProperty.wrappedValue.getter();
      uint64_t v39 = OUTLINED_FUNCTION_88_4();
      if (__swift_getEnumTagSinglePayload(v39, v40, v64) == 1)
      {
        uint64_t v32 = (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?;
        uint64_t v33 = v38;
        goto LABEL_14;
      }
      uint64_t v48 = v38;
      uint64_t v49 = v61;
      outlined init with take of SearchSpotlightEntity(v48, v61, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
      SearchSpotlightEntity.validateParameters()();
      uint64_t v36 = type metadata accessor for SearchSpotlightEntity;
      uint64_t v37 = v49;
LABEL_26:
      outlined destroy of SearchEntity(v37, (void (*)(void))v36);
      return;
    }
    if (v29 != *MEMORY[0x263F5B790] && v29 != *MEMORY[0x263F5B7A8] && v29 != *MEMORY[0x263F5B798])
    {
      if (one-time initialization token for search != -1) {
        swift_once();
      }
      uint64_t v50 = type metadata accessor for Logger();
      __swift_project_value_buffer(v50, (uint64_t)static Logging.search);
      uint64_t v51 = v62;
      outlined init with copy of SearchEntity(v0, v62, (void (*)(void))type metadata accessor for SearchEntity);
      long long v52 = Logger.logObject.getter();
      os_log_type_t v53 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v52, v53))
      {
        unint64_t v54 = (uint8_t *)swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        v71[0] = v55;
        *(_DWORD *)unint64_t v54 = 136315138;
        uint64_t v66 = v54 + 4;
        EntityProperty.wrappedValue.getter();
        uint64_t v56 = String.init<A>(describing:)();
        v70[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v57, v71);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of SearchEntity(v62, (void (*)(void))type metadata accessor for SearchEntity);
        _os_log_impl(&dword_257DC6000, v52, v53, "Unhandled entity type! %s - no validation", v54, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25A2C94B0](v55, -1, -1);
        MEMORY[0x25A2C94B0](v54, -1, -1);
      }
      else
      {
        outlined destroy of SearchEntity(v51, (void (*)(void))type metadata accessor for SearchEntity);
      }

      OUTLINED_FUNCTION_16_1();
      v59(v58);
    }
  }
}

void SearchEntity.init(_:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchEntity?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_16();
  uint64_t v8 = type metadata accessor for SearchEntity.Builder(0);
  uint64_t v9 = (int *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_3_18();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (void *)((char *)v28 - v11);
  void *v12 = 0;
  v12[1] = 0;
  uint64_t v13 = OUTLINED_FUNCTION_50_9();
  uint64_t v14 = type metadata accessor for SearchResult(v13);
  OUTLINED_FUNCTION_20_11(v14);
  OUTLINED_FUNCTION_50_9();
  uint64_t v15 = type metadata accessor for SearchResultType();
  OUTLINED_FUNCTION_20_11(v15);
  OUTLINED_FUNCTION_50_9();
  uint64_t v16 = type metadata accessor for SearchGlobalEntity();
  OUTLINED_FUNCTION_20_11(v16);
  uint64_t v17 = OUTLINED_FUNCTION_50_9();
  uint64_t v18 = type metadata accessor for SearchSpotlightEntity(v17);
  OUTLINED_FUNCTION_20_11(v18);
  uint64_t v19 = (uint64_t)v12 + v9[11];
  _s10OmniSearch18GenericEventEntityVSgWOi0_(v28);
  outlined init with take of SearchResultItem?((uint64_t)v28, v19, &demangling cache variable for type metadata for AnswerMetadata?);
  uint64_t v20 = OUTLINED_FUNCTION_50_9();
  uint64_t v21 = type metadata accessor for SearchAppEntity(v20);
  OUTLINED_FUNCTION_20_11(v21);
  OUTLINED_FUNCTION_50_9();
  type metadata accessor for IntentFile();
  OUTLINED_FUNCTION_76_2(v19);
  uint64_t v22 = (void *)((char *)v12 + v9[14]);
  *uint64_t v22 = 0;
  v22[1] = 0;
  OUTLINED_FUNCTION_118_2((void *)((char *)v12 + v9[15]));
  OUTLINED_FUNCTION_50_9();
  uint64_t v23 = type metadata accessor for IdCardEntity();
  OUTLINED_FUNCTION_20_11(v23);
  uint64_t v24 = (void *)((char *)v12 + v9[17]);
  *uint64_t v24 = 0;
  v24[1] = 0;
  v24[2] = 0;
  OUTLINED_FUNCTION_76_2((uint64_t)v12 + v9[18]);
  *((unsigned char *)v12 + v9[19]) = 5;
  uint64_t v25 = (void *)((char *)v12 + v9[20]);
  *uint64_t v25 = 0;
  v25[1] = 0;
  v3(v12);
  outlined init with copy of SearchEntity((uint64_t)v12, v1, (void (*)(void))type metadata accessor for SearchEntity.Builder);
  SearchEntity.init(builder:)();
  outlined destroy of SearchEntity((uint64_t)v12, (void (*)(void))type metadata accessor for SearchEntity.Builder);
  uint64_t v26 = type metadata accessor for SearchEntity(0);
  if (OUTLINED_FUNCTION_84_3())
  {
    outlined destroy of PQAVerificationModelProtocol?(v0, &demangling cache variable for type metadata for SearchEntity?);
    uint64_t v27 = 1;
  }
  else
  {
    outlined init with take of SearchSpotlightEntity(v0, v5, (void (*)(void))type metadata accessor for SearchEntity);
    uint64_t v27 = 0;
  }
  __swift_storeEnumTagSinglePayload(v5, v27, 1, v26);
  OUTLINED_FUNCTION_119_0();
}

uint64_t SearchEntity.Builder.init()()
{
  uint64_t v1 = (int *)OUTLINED_FUNCTION_25_11();
  *uint64_t v0 = 0;
  v0[1] = 0;
  uint64_t v2 = OUTLINED_FUNCTION_57_4();
  uint64_t v3 = type metadata accessor for SearchResult(v2);
  OUTLINED_FUNCTION_25_7(v3);
  OUTLINED_FUNCTION_57_4();
  uint64_t v4 = type metadata accessor for SearchResultType();
  OUTLINED_FUNCTION_25_7(v4);
  OUTLINED_FUNCTION_57_4();
  uint64_t v5 = type metadata accessor for SearchGlobalEntity();
  OUTLINED_FUNCTION_25_7(v5);
  uint64_t v6 = OUTLINED_FUNCTION_57_4();
  uint64_t v7 = type metadata accessor for SearchSpotlightEntity(v6);
  OUTLINED_FUNCTION_25_7(v7);
  uint64_t v8 = (uint64_t)v0 + v1[9];
  _s10OmniSearch18GenericEventEntityVSgWOi0_(v16);
  outlined init with take of SearchResultItem?((uint64_t)v16, v8, &demangling cache variable for type metadata for AnswerMetadata?);
  uint64_t v9 = OUTLINED_FUNCTION_57_4();
  uint64_t v10 = type metadata accessor for SearchAppEntity(v9);
  OUTLINED_FUNCTION_25_7(v10);
  OUTLINED_FUNCTION_57_4();
  type metadata accessor for IntentFile();
  OUTLINED_FUNCTION_34_10(v8);
  uint64_t v11 = (void *)((char *)v0 + v1[12]);
  *uint64_t v11 = 0;
  v11[1] = 0;
  OUTLINED_FUNCTION_118_2((void *)((char *)v0 + v1[13]));
  OUTLINED_FUNCTION_57_4();
  uint64_t v12 = type metadata accessor for IdCardEntity();
  OUTLINED_FUNCTION_25_7(v12);
  uint64_t v13 = (void *)((char *)v0 + v1[15]);
  void *v13 = 0;
  v13[1] = 0;
  v13[2] = 0;
  uint64_t result = OUTLINED_FUNCTION_34_10((uint64_t)v0 + v1[16]);
  *((unsigned char *)v0 + v1[17]) = 5;
  uint64_t v15 = (void *)((char *)v0 + v1[18]);
  *uint64_t v15 = 0;
  v15[1] = 0;
  return result;
}

void SearchEntity.init(builder:)()
{
  OUTLINED_FUNCTION_104_0();
  long long v165 = v3;
  uint64_t v163 = v4;
  uint64_t v157 = type metadata accessor for SearchAppEntity(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_63_4(v6, v141);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_185_0();
  uint64_t v154 = v9;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v10);
  long long v153 = (char *)&v141 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IdCardEntity?);
  uint64_t v13 = OUTLINED_FUNCTION_81(v12);
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_185_0();
  uint64_t v152 = v14;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v15);
  uint64_t v151 = (char *)&v141 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  uint64_t v18 = OUTLINED_FUNCTION_81(v17);
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_185_0();
  uint64_t v156 = v19;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v20);
  uint64_t v150 = (char *)&v141 - v21;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_27_10();
  uint64_t v149 = v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  uint64_t v25 = OUTLINED_FUNCTION_81(v24);
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_185_0();
  uint64_t v148 = v26;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v27);
  long long v147 = (char *)&v141 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
  uint64_t v30 = OUTLINED_FUNCTION_81(v29);
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_185_0();
  uint64_t v146 = v31;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_27_10();
  uint64_t v145 = v33;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResultType?);
  uint64_t v35 = OUTLINED_FUNCTION_81(v34);
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_184_0();
  uint64_t v159 = v36;
  uint64_t v160 = type metadata accessor for SearchResultType();
  OUTLINED_FUNCTION_1();
  uint64_t v155 = v37;
  MEMORY[0x270FA5388](v38);
  OUTLINED_FUNCTION_185_0();
  uint64_t v143 = v39;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v40);
  OUTLINED_FUNCTION_43_4();
  uint64_t v144 = v41;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v42);
  OUTLINED_FUNCTION_27_10();
  uint64_t v158 = v43;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  uint64_t v45 = OUTLINED_FUNCTION_81(v44);
  MEMORY[0x270FA5388](v45);
  uint64_t v46 = OUTLINED_FUNCTION_29_11();
  uint64_t v47 = type metadata accessor for SearchResult(v46);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v48);
  OUTLINED_FUNCTION_184_0();
  uint64_t v161 = v49;
  OUTLINED_FUNCTION_26_8();
  uint64_t v50 = type metadata accessor for LocalizedStringResource();
  uint64_t v51 = OUTLINED_FUNCTION_81(v50);
  MEMORY[0x270FA5388](v51);
  uint64_t v52 = OUTLINED_FUNCTION_22_15();
  uint64_t v53 = type metadata accessor for SearchEntity(v52);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v54);
  OUTLINED_FUNCTION_39();
  uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  OUTLINED_FUNCTION_98_3();
  *uint64_t v0 = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchResultType>);
  OUTLINED_FUNCTION_49_7();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v55 = _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchResultType and conformance SearchResultType, MEMORY[0x263F5B7C0]);
  v0[1] = MEMORY[0x25A2C4880](v1, v55);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchAppEntity?>);
  LocalizedStringResource.init(stringLiteral:)();
  _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
  OUTLINED_FUNCTION_74_2();
  v0[2] = v56;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchGlobalEntity?>);
  OUTLINED_FUNCTION_49_7();
  OUTLINED_FUNCTION_41_9();
  _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchGlobalEntity and conformance SearchGlobalEntity, MEMORY[0x263F5B7E0]);
  OUTLINED_FUNCTION_74_2();
  v0[3] = v57;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<SearchSpotlightEntity?>);
  OUTLINED_FUNCTION_33_8();
  _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
  OUTLINED_FUNCTION_74_2();
  v0[4] = v58;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<EventEntity?>);
  OUTLINED_FUNCTION_49_7();
  OUTLINED_FUNCTION_47_6();
  lazy protocol witness table accessor for type EventEntity and conformance EventEntity();
  OUTLINED_FUNCTION_74_2();
  v0[5] = v59;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IdCardEntity?>);
  OUTLINED_FUNCTION_49_7();
  OUTLINED_FUNCTION_39_6();
  _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type IdCardEntity and conformance IdCardEntity, (void (*)(uint64_t))type metadata accessor for IdCardEntity);
  OUTLINED_FUNCTION_74_2();
  v0[6] = v60;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<MediaEntity?>);
  OUTLINED_FUNCTION_49_7();
  OUTLINED_FUNCTION_119_2();
  lazy protocol witness table accessor for type MediaEntity and conformance MediaEntity();
  OUTLINED_FUNCTION_74_2();
  v0[7] = v61;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<AnswerMetadata?>);
  OUTLINED_FUNCTION_49_7();
  OUTLINED_FUNCTION_45_7();
  lazy protocol witness table accessor for type AnswerMetadata and conformance AnswerMetadata();
  OUTLINED_FUNCTION_74_2();
  v0[8] = v62;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Bool>);
  OUTLINED_FUNCTION_49_7();
  OUTLINED_FUNCTION_12_16();
  v0[9] = MEMORY[0x25A2C4910](v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_44_7();
  v0[10] = MEMORY[0x25A2C48A0](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<HydratedEntityType?>);
  OUTLINED_FUNCTION_96_2();
  LocalizedStringResource.init(stringLiteral:)();
  unint64_t v63 = lazy protocol witness table accessor for type HydratedEntityType and conformance HydratedEntityType();
  v0[11] = MEMORY[0x25A2C4880](v1, v63);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_33_8();
  v0[12] = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_44_7();
  v0[13] = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_44_7();
  v0[14] = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[SearchPropertyResponse]>);
  OUTLINED_FUNCTION_96_2();
  uint64_t v64 = v165;
  LocalizedStringResource.init(stringLiteral:)();
  _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchPropertyResponse and conformance SearchPropertyResponse, (void (*)(uint64_t))type metadata accessor for SearchPropertyResponse);
  OUTLINED_FUNCTION_74_2();
  v0[15] = v65;
  OUTLINED_FUNCTION_33_8();
  v0[16] = MEMORY[0x25A2C4900](v1);
  uint64_t v164 = (uint64_t)v0 + *(int *)(v53 + 84);
  __swift_storeEnumTagSinglePayload(v164, 1, 1, v47);
  uint64_t v66 = v53;
  uint64_t v67 = *(int *)(v53 + 92);
  LocalizedStringResource.init(stringLiteral:)();
  *(void *)((char *)v0 + v67) = MEMORY[0x25A2C4900](v1);
  unint64_t v68 = v64[1];
  if (!v68)
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v78 = type metadata accessor for Logger();
    __swift_project_value_buffer(v78, (uint64_t)static Logging.search);
    uint64_t v74 = (void *)Logger.logObject.getter();
    os_log_type_t v79 = static os_log_type_t.fault.getter();
    if (OUTLINED_FUNCTION_51_1(v79))
    {
      *(_WORD *)OUTLINED_FUNCTION_55() = 0;
      OUTLINED_FUNCTION_51_7(&dword_257DC6000, v80, v81, "Attempting to create SearchEntity without id");
      OUTLINED_FUNCTION_34();
    }
    goto LABEL_19;
  }
  uint64_t v162 = v67;
  unint64_t v69 = *v64;
  uint64_t v70 = type metadata accessor for SearchEntity.Builder(0);
  outlined init with copy of SearchAppEntity?((uint64_t)v64 + *(int *)(v70 + 20), v2, &demangling cache variable for type metadata for SearchResult?);
  uint64_t v71 = OUTLINED_FUNCTION_103_4();
  OUTLINED_FUNCTION_53_2(v71, v72, v47);
  if (v99)
  {
    outlined destroy of PQAVerificationModelProtocol?(v2, &demangling cache variable for type metadata for SearchResult?);
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v73 = type metadata accessor for Logger();
    __swift_project_value_buffer(v73, (uint64_t)static Logging.search);
    uint64_t v74 = (void *)Logger.logObject.getter();
    os_log_type_t v75 = static os_log_type_t.fault.getter();
    if (OUTLINED_FUNCTION_51_1(v75))
    {
      *(_WORD *)OUTLINED_FUNCTION_55() = 0;
      OUTLINED_FUNCTION_51_7(&dword_257DC6000, v76, v77, "Attempting to create SearchEntity without source");
      OUTLINED_FUNCTION_34();
    }
LABEL_19:

    outlined destroy of SearchEntity((uint64_t)v64, (void (*)(void))type metadata accessor for SearchEntity.Builder);
    int v105 = 0;
    goto LABEL_20;
  }
  uint64_t v82 = v2;
  uint64_t v83 = v161;
  outlined init with take of SearchSpotlightEntity(v82, v161, (void (*)(void))type metadata accessor for SearchResult);
  swift_bridgeObjectRetain();
  uint64_t v84 = v164;
  outlined destroy of PQAVerificationModelProtocol?(v164, &demangling cache variable for type metadata for SearchResult?);
  outlined init with copy of SearchEntity(v83, v84, (void (*)(void))type metadata accessor for SearchResult);
  OUTLINED_FUNCTION_110_3();
  SearchResultItem.associatedValue.getter((uint64_t)&v176);
  uint64_t v85 = v177;
  uint64_t v86 = v178;
  __swift_project_boxed_opaque_existential_1(&v176, v177);
  uint64_t v87 = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 48))(v85, v86);
  uint64_t v89 = v88;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v176);
  uint64_t v90 = (void *)((char *)v0 + *(int *)(v66 + 88));
  *uint64_t v90 = v87;
  v90[1] = v89;
  v176.n128_u64[0] = v69;
  v176.n128_u64[1] = v68;
  EntityProperty.wrappedValue.setter();
  SearchResultItem.associatedValue.getter((uint64_t)&v176);
  uint64_t v91 = v177;
  uint64_t v92 = v178;
  __swift_project_boxed_opaque_existential_1(&v176, v177);
  uint64_t v93 = (*(uint64_t (**)(uint64_t, uint64_t))(v92 + 40))(v91, v92);
  unint64_t v95 = v94;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v176);
  v176.n128_u64[0] = v93;
  v176.n128_u64[1] = v95;
  uint64_t v96 = (uint64_t)v165;
  EntityProperty.wrappedValue.setter();
  uint64_t v97 = v159;
  outlined init with copy of SearchAppEntity?(v96 + *(int *)(v70 + 24), v159, &demangling cache variable for type metadata for SearchResultType?);
  uint64_t v98 = v160;
  OUTLINED_FUNCTION_53_2(v97, 1, v160);
  if (!v99)
  {
    uint64_t v164 = v66;
    uint64_t v106 = v155;
    OUTLINED_FUNCTION_58_1();
    v107();
    uint64_t v108 = *(void (**)(uint64_t))(v106 + 16);
    uint64_t v109 = v144;
    uint64_t v110 = OUTLINED_FUNCTION_81_3();
    v108(v110);
    uint64_t v162 = v70;
    ((void (*)(uint64_t, uint64_t, uint64_t))v108)(v143, v109, v98);
    EntityProperty.wrappedValue.setter();
    uint64_t v111 = v98;
    uint64_t v112 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
    v112(v109, v111);
    uint64_t v113 = (int *)v162;
    uint64_t v114 = v145;
    OUTLINED_FUNCTION_77_3(v96 + *(int *)(v162 + 32));
    OUTLINED_FUNCTION_31_11(v114);
    EntityProperty.wrappedValue.setter();
    OUTLINED_FUNCTION_80_3();
    uint64_t v115 = (uint64_t)v147;
    OUTLINED_FUNCTION_77_3(v96 + v113[7]);
    OUTLINED_FUNCTION_31_11(v115);
    EntityProperty.wrappedValue.setter();
    OUTLINED_FUNCTION_80_3();
    outlined init with take of SearchResultItem?(v96 + v113[9], (uint64_t)&v176, &demangling cache variable for type metadata for AnswerMetadata?);
    outlined init with take of SearchResultItem?((uint64_t)&v176, (uint64_t)&v166, &demangling cache variable for type metadata for AnswerMetadata?);
    outlined release of AnswerMetadata?(&v176);
    EntityProperty.wrappedValue.setter();
    uint64_t v116 = v149;
    OUTLINED_FUNCTION_77_3(v96 + v113[10]);
    OUTLINED_FUNCTION_31_11(v116);
    EntityProperty.wrappedValue.setter();
    OUTLINED_FUNCTION_80_3();
    uint64_t v166 = OUTLINED_FUNCTION_73_2(v96 + v113[13]);
    uint64_t v167 = v117;
    unint64_t v168 = v118;
    uint64_t v169 = v119;
    uint64_t v170 = v120;
    uint64_t v171 = v121;
    uint64_t v172 = v122;
    uint64_t v173 = v123;
    uint64_t v174 = v125;
    unint64_t v175 = v124;
    outlined copy of EventEntity?(v166, v117, v118, v119, v120, v121, v122, v123, v125, v124);
    EntityProperty.wrappedValue.setter();
    uint64_t v126 = (uint64_t)v151;
    OUTLINED_FUNCTION_77_3(v96 + v113[14]);
    OUTLINED_FUNCTION_31_11(v126);
    EntityProperty.wrappedValue.setter();
    OUTLINED_FUNCTION_80_3();
    uint64_t v127 = (uint64_t *)(v96 + v113[15]);
    uint64_t v128 = v127[1];
    unint64_t v129 = v127[2];
    uint64_t v166 = *v127;
    uint64_t v167 = v128;
    unint64_t v168 = v129;
    outlined copy of MediaEntity?(v166, v128, v129);
    EntityProperty.wrappedValue.setter();
    uint64_t v130 = (uint64_t)v153;
    OUTLINED_FUNCTION_77_3(v96 + v113[16]);
    OUTLINED_FUNCTION_31_11(v130);
    EntityProperty.wrappedValue.setter();
    OUTLINED_FUNCTION_80_3();
    SearchEntity.validTypeIdentifiers.getter();
    uint64_t v166 = v131;
    EntityProperty.wrappedValue.setter();
    LOBYTE(v166) = *(unsigned char *)(v96 + v113[17]);
    EntityProperty.wrappedValue.setter();
    long long v132 = (uint64_t *)(v96 + v113[18]);
    uint64_t v133 = v132[1];
    uint64_t v166 = *v132;
    uint64_t v167 = v133;
    swift_bridgeObjectRetain();
    EntityProperty.wrappedValue.setter();
    long long v134 = (uint64_t *)(v96 + v113[12]);
    uint64_t v135 = v134[1];
    uint64_t v166 = *v134;
    uint64_t v167 = v135;
    swift_bridgeObjectRetain();
    EntityProperty.wrappedValue.setter();
    LOBYTE(v166) = 0;
    EntityProperty.wrappedValue.setter();
    uint64_t v136 = v156;
    EntityProperty.wrappedValue.getter();
    if (__swift_getEnumTagSinglePayload(v136, 1, v157))
    {
      outlined destroy of PQAVerificationModelProtocol?(v136, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
    }
    else
    {
      uint64_t v138 = v142;
      outlined init with copy of SearchEntity(v136, v142, (void (*)(void))type metadata accessor for SearchAppEntity);
      outlined destroy of PQAVerificationModelProtocol?(v136, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      EntityProperty.wrappedValue.getter();
      EntityProperty.wrappedValue.setter();
      outlined destroy of SearchEntity(v138, (void (*)(void))type metadata accessor for SearchAppEntity);
    }
    uint64_t v139 = v164;
    outlined destroy of SearchEntity(v96, (void (*)(void))type metadata accessor for SearchEntity.Builder);
    v112(v158, v160);
    outlined destroy of SearchEntity(v161, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v140 = v163;
    outlined init with copy of SearchEntity((uint64_t)v0, v163, (void (*)(void))type metadata accessor for SearchEntity);
    __swift_storeEnumTagSinglePayload(v140, 0, 1, v139);
    outlined destroy of SearchEntity((uint64_t)v0, (void (*)(void))type metadata accessor for SearchEntity);
    goto LABEL_23;
  }
  outlined destroy of PQAVerificationModelProtocol?(v97, &demangling cache variable for type metadata for SearchResultType?);
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v100 = type metadata accessor for Logger();
  __swift_project_value_buffer(v100, (uint64_t)static Logging.search);
  uint64_t v101 = (void *)Logger.logObject.getter();
  os_log_type_t v102 = static os_log_type_t.fault.getter();
  if (OUTLINED_FUNCTION_51_1(v102))
  {
    *(_WORD *)OUTLINED_FUNCTION_55() = 0;
    OUTLINED_FUNCTION_51_7(&dword_257DC6000, v103, v104, "Attempting to create SearchEntity without type");
    uint64_t v96 = (uint64_t)v165;
    OUTLINED_FUNCTION_34();
  }

  outlined destroy of SearchEntity(v96, (void (*)(void))type metadata accessor for SearchEntity.Builder);
  outlined destroy of SearchEntity(v161, (void (*)(void))type metadata accessor for SearchResult);
  int v105 = 1;
LABEL_20:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined destroy of PQAVerificationModelProtocol?(v164, &demangling cache variable for type metadata for SearchResult?);
  if (v105) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  OUTLINED_FUNCTION_76_2(v163);
LABEL_23:
  OUTLINED_FUNCTION_119_0();
}

void SearchEntity.validTypeIdentifiers.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v3 = type metadata accessor for SearchGlobalEntity();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_18_8();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = OUTLINED_FUNCTION_22_15();
  uint64_t v8 = type metadata accessor for SearchSpotlightEntity(v7);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_14_10();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
  uint64_t v11 = OUTLINED_FUNCTION_81(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_21_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[String]>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_258661D70;
  EntityProperty.wrappedValue.getter();
  outlined init with take of SearchResultItem?((uint64_t)&v35, (uint64_t)v36, &demangling cache variable for type metadata for AnswerMetadata?);
  outlined init with take of SearchResultItem?((uint64_t)v36, (uint64_t)v37, &demangling cache variable for type metadata for AnswerMetadata?);
  if (getEnumTag for DataFilter.FilterResult(v37) == 1)
  {
    *(void *)(inited + 32) = MEMORY[0x263F8EE78];
  }
  else
  {
    outlined init with take of SearchResultItem?((uint64_t)v36, (uint64_t)v34, &demangling cache variable for type metadata for AnswerMetadata?);
    memcpy(v33, v34, sizeof(v33));
    uint64_t v13 = AnswerMetadata.validTypeIdentifiers.getter();
    outlined release of AnswerMetadata?(v36);
    *(void *)(inited + 32) = v13;
  }
  EntityProperty.wrappedValue.getter();
  uint64_t v14 = OUTLINED_FUNCTION_103_4();
  if (__swift_getEnumTagSinglePayload(v14, v15, v8))
  {
    outlined destroy of PQAVerificationModelProtocol?(v2, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
    uint64_t v16 = MEMORY[0x263F8EE78];
  }
  else
  {
    outlined init with copy of SearchEntity(v2, v1, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
    outlined destroy of PQAVerificationModelProtocol?(v2, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
    uint64_t v16 = SearchSpotlightEntity.validTypeIdentifiers.getter();
    outlined destroy of SearchEntity(v1, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  }
  *(void *)(inited + 40) = v16;
  EntityProperty.wrappedValue.getter();
  if (__swift_getEnumTagSinglePayload(v0, 1, v3))
  {
    outlined destroy of PQAVerificationModelProtocol?(v0, &demangling cache variable for type metadata for SearchGlobalEntity?);
    uint64_t v17 = MEMORY[0x263F8EE78];
  }
  else
  {
    OUTLINED_FUNCTION_64_0();
    v18();
    outlined destroy of PQAVerificationModelProtocol?(v0, &demangling cache variable for type metadata for SearchGlobalEntity?);
    uint64_t v17 = SearchGlobalEntity.validTypeIdentifiers.getter();
    uint64_t v19 = OUTLINED_FUNCTION_97_2();
    v20(v19);
  }
  *(void *)(inited + 48) = v17;
  uint64_t v21 = MEMORY[0x263F8EE78];
  uint64_t v22 = 32;
  while (1)
  {
    uint64_t v23 = *(void *)(inited + v22);
    uint64_t v24 = *(void *)(v23 + 16);
    uint64_t v25 = *(void *)(v21 + 16);
    if (__OFADD__(v25, v24)) {
      break;
    }
    swift_bridgeObjectRetain();
    if (!swift_isUniquelyReferenced_nonNull_native() || v25 + v24 > *(void *)(v21 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v21 = v26;
    }
    if (*(void *)(v23 + 16))
    {
      uint64_t v27 = *(void *)(v21 + 16);
      if ((*(void *)(v21 + 24) >> 1) - v27 < v24) {
        goto LABEL_30;
      }
      unint64_t v28 = v21 + 16 * v27 + 32;
      if (v23 + 32 < v28 + 16 * v24 && v28 < v23 + 32 + 16 * v24) {
        goto LABEL_32;
      }
      swift_arrayInitWithCopy();
      if (v24)
      {
        uint64_t v30 = *(void *)(v21 + 16);
        BOOL v31 = __OFADD__(v30, v24);
        uint64_t v32 = v30 + v24;
        if (v31) {
          goto LABEL_31;
        }
        *(void *)(v21 + 16) = v32;
      }
    }
    else if (v24)
    {
      goto LABEL_29;
    }
    swift_bridgeObjectRelease();
    v22 += 8;
    if (v22 == 56)
    {
      swift_setDeallocating();
      specialized _ContiguousArrayStorage.__deallocating_deinit();
      OUTLINED_FUNCTION_119_0();
      return;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t SearchEntity.Builder.id.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t SearchEntity.Builder.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SearchEntity.Builder.id.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchEntity.Builder.sourceResult.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_25_11();
  return outlined init with copy of SearchAppEntity?(v1 + *(int *)(v2 + 20), v0, &demangling cache variable for type metadata for SearchResult?);
}

uint64_t SearchEntity.Builder.sourceResult.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SearchEntity.Builder(0);
  return outlined assign with take of SearchResultItem?(a1, v1 + *(int *)(v3 + 20), &demangling cache variable for type metadata for SearchResult?);
}

uint64_t (*SearchEntity.Builder.sourceResult.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchEntity.Builder.type.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_25_11();
  return outlined init with copy of SearchAppEntity?(v1 + *(int *)(v2 + 24), v0, &demangling cache variable for type metadata for SearchResultType?);
}

uint64_t SearchEntity.Builder.type.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SearchEntity.Builder(0);
  return outlined assign with take of SearchResultItem?(a1, v1 + *(int *)(v3 + 24), &demangling cache variable for type metadata for SearchResultType?);
}

uint64_t (*SearchEntity.Builder.type.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchEntity.Builder.globalResult.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_25_11();
  return outlined init with copy of SearchAppEntity?(v1 + *(int *)(v2 + 28), v0, &demangling cache variable for type metadata for SearchGlobalEntity?);
}

uint64_t SearchEntity.Builder.globalResult.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SearchEntity.Builder(0);
  return outlined assign with take of SearchResultItem?(a1, v1 + *(int *)(v3 + 28), &demangling cache variable for type metadata for SearchGlobalEntity?);
}

uint64_t (*SearchEntity.Builder.globalResult.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchEntity.Builder.spotlightResult.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_25_11();
  return outlined init with copy of SearchAppEntity?(v1 + *(int *)(v2 + 32), v0, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
}

uint64_t SearchEntity.Builder.spotlightResult.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SearchEntity.Builder(0);
  return outlined assign with take of SearchResultItem?(a1, v1 + *(int *)(v3 + 32), (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
}

uint64_t (*SearchEntity.Builder.spotlightResult.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchEntity.Builder.answer.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_25_11();
  outlined init with take of SearchResultItem?(v1 + *(int *)(v2 + 36), (uint64_t)v4, &demangling cache variable for type metadata for AnswerMetadata?);
  outlined init with take of SearchResultItem?((uint64_t)v4, v0, &demangling cache variable for type metadata for AnswerMetadata?);
  return outlined release of AnswerMetadata?(v4);
}

uint64_t SearchEntity.Builder.answer.setter(uint64_t a1)
{
  outlined init with take of SearchResultItem?(a1, (uint64_t)v4, &demangling cache variable for type metadata for AnswerMetadata?);
  uint64_t v2 = v1 + *(int *)(type metadata accessor for SearchEntity.Builder(0) + 36);
  outlined init with take of SearchResultItem?(v2, (uint64_t)v5, &demangling cache variable for type metadata for AnswerMetadata?);
  outlined release of AnswerMetadata?(v5);
  return outlined init with take of SearchResultItem?((uint64_t)v4, v2, &demangling cache variable for type metadata for AnswerMetadata?);
}

uint64_t (*SearchEntity.Builder.answer.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchEntity.Builder.appEntity.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_25_11();
  return outlined init with copy of SearchAppEntity?(v1 + *(int *)(v2 + 40), v0, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
}

uint64_t SearchEntity.Builder.appEntity.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SearchEntity.Builder(0);
  return outlined assign with take of SearchResultItem?(a1, v1 + *(int *)(v3 + 40), (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
}

uint64_t (*SearchEntity.Builder.appEntity.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchEntity.Builder.encodedSearchableItem.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_25_11();
  return outlined init with copy of SearchAppEntity?(v1 + *(int *)(v2 + 44), v0, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t SearchEntity.Builder.encodedSearchableItem.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SearchEntity.Builder(0);
  return outlined assign with take of SearchResultItem?(a1, v1 + *(int *)(v3 + 44), (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t (*SearchEntity.Builder.encodedSearchableItem.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchEntity.Builder.inAppSearchString.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t SearchEntity.Builder.inAppSearchString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SearchEntity.Builder(0) + 48));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SearchEntity.Builder.inAppSearchString.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchEntity.Builder.event.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_25_11();
  uint64_t v3 = OUTLINED_FUNCTION_73_2(v1 + *(int *)(v2 + 52));
  *uint64_t v0 = v3;
  v0[1] = v4;
  v0[2] = v5;
  v0[3] = v6;
  v0[4] = v7;
  v0[5] = v8;
  v0[6] = v9;
  v0[7] = v10;
  v0[8] = v12;
  v0[9] = v11;
  return outlined copy of EventEntity?(v3, v4, v5, v6, v7, v8, v9, v10, v12, v11);
}

__n128 SearchEntity.Builder.event.setter(long long *a1)
{
  long long v9 = *a1;
  long long v7 = a1[2];
  long long v8 = a1[1];
  __n128 v6 = (__n128)a1[3];
  uint64_t v2 = *((void *)a1 + 8);
  uint64_t v3 = *((void *)a1 + 9);
  uint64_t v4 = v1 + *(int *)(type metadata accessor for SearchEntity.Builder(0) + 52);
  outlined consume of EventEntity?(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72));
  *(_OWORD *)uint64_t v4 = v9;
  *(_OWORD *)(v4 + 16) = v8;
  __n128 result = v6;
  *(_OWORD *)(v4 + 32) = v7;
  *(__n128 *)(v4 + 48) = v6;
  *(void *)(v4 + 64) = v2;
  *(void *)(v4 + 72) = v3;
  return result;
}

uint64_t (*SearchEntity.Builder.event.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchEntity.Builder.idCard.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_25_11();
  return outlined init with copy of SearchAppEntity?(v1 + *(int *)(v2 + 56), v0, &demangling cache variable for type metadata for IdCardEntity?);
}

uint64_t SearchEntity.Builder.idCard.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SearchEntity.Builder(0);
  return outlined assign with take of SearchResultItem?(a1, v1 + *(int *)(v3 + 56), &demangling cache variable for type metadata for IdCardEntity?);
}

uint64_t (*SearchEntity.Builder.idCard.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchEntity.Builder.media.getter()
{
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(OUTLINED_FUNCTION_25_11() + 60));
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  unint64_t v5 = v2[2];
  *uint64_t v0 = *v2;
  v0[1] = v4;
  v0[2] = v5;
  return outlined copy of MediaEntity?(v3, v4, v5);
}

__n128 SearchEntity.Builder.media.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchEntity.Builder(0) + 60);
  outlined consume of MediaEntity?(*(void *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16));
  __n128 result = v5;
  *(__n128 *)uint64_t v3 = v5;
  *(void *)(v3 + 16) = v2;
  return result;
}

uint64_t (*SearchEntity.Builder.media.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchEntity.Builder.experienceFile.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_25_11();
  return outlined init with copy of SearchAppEntity?(v1 + *(int *)(v2 + 64), v0, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t SearchEntity.Builder.experienceFile.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SearchEntity.Builder(0);
  return outlined assign with take of SearchResultItem?(a1, v1 + *(int *)(v3 + 64), (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t (*SearchEntity.Builder.experienceFile.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchEntity.Builder.hydratedEntityType.getter()
{
  uint64_t result = OUTLINED_FUNCTION_25_11();
  *uint64_t v0 = *(unsigned char *)(v1 + *(int *)(result + 68));
  return result;
}

uint64_t SearchEntity.Builder.hydratedEntityType.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for SearchEntity.Builder(0);
  *(unsigned char *)(v1 + *(int *)(result + 68)) = v2;
  return result;
}

uint64_t (*SearchEntity.Builder.hydratedEntityType.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchEntity.Builder.hydratedContent.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t SearchEntity.Builder.hydratedContent.setter(uint64_t a1, uint64_t a2)
{
  __n128 v5 = (void *)(v2 + *(int *)(type metadata accessor for SearchEntity.Builder(0) + 72));
  uint64_t result = swift_bridgeObjectRelease();
  *__n128 v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SearchEntity.Builder.hydratedContent.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchEntity.Builder.init(id:sourceResult:type:globalResult:spotlightResult:answer:appEntity:encodedSearchableItem:inAppSearchString:event:idCard:media:experienceFile:hydratedEntityType:hydratedContent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, long long *a13, uint64_t a14, long long *a15, uint64_t a16, char *a17, uint64_t a18, uint64_t a19)
{
  outlined init with take of SearchResultItem?(a7, (uint64_t)v42, &demangling cache variable for type metadata for AnswerMetadata?);
  long long v38 = a13[1];
  long long v39 = *a13;
  long long v36 = a13[3];
  long long v37 = a13[2];
  uint64_t v34 = *((void *)a13 + 9);
  uint64_t v35 = *((void *)a13 + 8);
  long long v41 = *a15;
  uint64_t v26 = *((void *)a15 + 2);
  char v27 = *a17;
  *a9 = a1;
  a9[1] = a2;
  unint64_t v28 = (int *)type metadata accessor for SearchEntity.Builder(0);
  outlined init with take of SearchResultItem?(a3, (uint64_t)a9 + v28[5], &demangling cache variable for type metadata for SearchResult?);
  outlined init with take of SearchResultItem?(a4, (uint64_t)a9 + v28[6], &demangling cache variable for type metadata for SearchResultType?);
  outlined init with take of SearchResultItem?(a5, (uint64_t)a9 + v28[7], &demangling cache variable for type metadata for SearchGlobalEntity?);
  outlined init with take of SearchResultItem?(a6, (uint64_t)a9 + v28[8], (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
  outlined init with take of SearchResultItem?((uint64_t)v42, (uint64_t)a9 + v28[9], &demangling cache variable for type metadata for AnswerMetadata?);
  outlined init with take of SearchResultItem?(a8, (uint64_t)a9 + v28[10], (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  outlined init with take of SearchResultItem?(a10, (uint64_t)a9 + v28[11], (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v29 = (void *)((char *)a9 + v28[12]);
  void *v29 = a11;
  v29[1] = a12;
  uint64_t v30 = (char *)a9 + v28[13];
  *(_OWORD *)uint64_t v30 = v39;
  *((_OWORD *)v30 + 1) = v38;
  *((_OWORD *)v30 + 2) = v37;
  *((_OWORD *)v30 + 3) = v36;
  *((void *)v30 + 8) = v35;
  *((void *)v30 + 9) = v34;
  outlined init with take of SearchResultItem?(a14, (uint64_t)a9 + v28[14], &demangling cache variable for type metadata for IdCardEntity?);
  BOOL v31 = (char *)a9 + v28[15];
  *(_OWORD *)BOOL v31 = v41;
  *((void *)v31 + 2) = v26;
  uint64_t result = outlined init with take of SearchResultItem?(a16, (uint64_t)a9 + v28[16], (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  *((unsigned char *)a9 + v28[17]) = v27;
  uint64_t v33 = (void *)((char *)a9 + v28[18]);
  void *v33 = a18;
  v33[1] = a19;
  return result;
}

uint64_t SearchEntity.id.getter()
{
  OUTLINED_FUNCTION_55_6();
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchEntity.id : SearchEntity()
{
  return SearchEntity.id.setter();
}

uint64_t (*SearchEntity.id.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  OUTLINED_FUNCTION_55_6();
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchEntity.$id.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t static SearchEntity.typeDisplayRepresentation.getter()
{
  return static SearchEntity.typeDisplayRepresentation.getter(&one-time initialization token for typeDisplayRepresentation, (uint64_t)static SearchEntity.typeDisplayRepresentation);
}

uint64_t static SearchEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  return static EventEntity.typeDisplayRepresentation.setter(a1, &one-time initialization token for typeDisplayRepresentation, (uint64_t)static SearchEntity.typeDisplayRepresentation);
}

uint64_t (*static SearchEntity.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  __swift_project_value_buffer(v0, (uint64_t)static SearchEntity.typeDisplayRepresentation);
  OUTLINED_FUNCTION_94_4();
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

void SearchEntity.displayRepresentation.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_16();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = OUTLINED_FUNCTION_19_12();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_5_8();
  uint64_t v8 = type metadata accessor for SearchResultType();
  OUTLINED_FUNCTION_1();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_29_11();
  uint64_t v12 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  uint64_t v13 = OUTLINED_FUNCTION_81(v12);
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_97_1();
  SearchEntity.representedEntity.getter();
  if (v22)
  {
    outlined init with take of SageSearchClient(&v21, (uint64_t)v23);
    __swift_project_boxed_opaque_existential_1(v23, v23[3]);
    dispatch thunk of InstanceDisplayRepresentable.displayRepresentation.getter();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
  }
  else
  {
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)&v21, &demangling cache variable for type metadata for AppEntity?);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v14);
    EntityProperty.wrappedValue.getter();
    uint64_t v15 = SearchResultType.rawValue.getter();
    uint64_t v17 = v16;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v8);
    v18._countAndFlagsBits = v15;
    v18._object = v17;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v18);
    swift_bridgeObjectRelease();
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
    LocalizedStringResource.init(stringInterpolation:)();
    __swift_storeEnumTagSinglePayload(v0, 1, 1, v6);
    uint64_t v20 = type metadata accessor for DisplayRepresentation.Image();
    OUTLINED_FUNCTION_25_7(v20);
    OUTLINED_FUNCTION_105_4();
    DisplayRepresentation.init(title:subtitle:image:)();
  }
  OUTLINED_FUNCTION_119_0();
}

uint64_t SearchEntity.Query.entities(for:)()
{
  return SearchAppEntity.Query.entities(for:)(*(uint64_t (**)(uint64_t))(v0 + 8), v0, MEMORY[0x263F8EE78]);
}

uint64_t protocol witness for EntityQuery.entities(for:) in conformance SearchEntity.Query()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for EntityQuery.entities(for:) in conformance SearchAppEntity.Query;
  return SearchEntity.Query.entities(for:)();
}

uint64_t protocol witness for DynamicOptionsProvider.results() in conformance SearchEntity.Query(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = lazy protocol witness table accessor for type SearchEntity.Query and conformance SearchEntity.Query();
  *uint64_t v5 = v2;
  v5[1] = protocol witness for DynamicOptionsProvider.results() in conformance SearchAppEntity.Query;
  return MEMORY[0x270EE0E40](a1, a2, v6);
}

uint64_t (*static SearchEntity.defaultQuery.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void static SearchEntity.== infix(_:_:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v215 = type metadata accessor for IdCardEntity();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_184_0();
  uint64_t v212 = v5;
  uint64_t v214 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (IdCardEntity?, IdCardEntity?));
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_184_0();
  uint64_t v216 = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IdCardEntity?);
  uint64_t v9 = OUTLINED_FUNCTION_81(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_185_0();
  uint64_t v213 = v10;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_43_4();
  uint64_t v217 = v12;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v13);
  uint64_t v218 = (uint64_t)&v212 - v14;
  uint64_t v15 = OUTLINED_FUNCTION_26_8();
  uint64_t v223 = type metadata accessor for SearchSpotlightEntity(v15);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_184_0();
  uint64_t v219 = v17;
  uint64_t v222 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SearchSpotlightEntity?, SearchSpotlightEntity?));
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_184_0();
  uint64_t v225 = v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
  uint64_t v21 = OUTLINED_FUNCTION_81(v20);
  MEMORY[0x270FA5388](v21);
  uint64_t v220 = (uint64_t)&v212 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_43_4();
  uint64_t v231 = v24;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_27_10();
  uint64_t v227 = v26;
  uint64_t v230 = type metadata accessor for SearchGlobalEntity();
  OUTLINED_FUNCTION_1();
  uint64_t v224 = v27;
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_184_0();
  uint64_t v221 = v29;
  uint64_t v229 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SearchGlobalEntity?, SearchGlobalEntity?));
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_184_0();
  uint64_t v235 = v31;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  uint64_t v33 = OUTLINED_FUNCTION_81(v32);
  MEMORY[0x270FA5388](v33);
  OUTLINED_FUNCTION_185_0();
  uint64_t v228 = v34;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_43_4();
  uint64_t v233 = v36;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_27_10();
  uint64_t v234 = v38;
  uint64_t v237 = type metadata accessor for SearchAppEntity(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v39);
  OUTLINED_FUNCTION_184_0();
  uint64_t v226 = v40;
  uint64_t v236 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SearchAppEntity?, SearchAppEntity?));
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v41);
  OUTLINED_FUNCTION_184_0();
  uint64_t v240 = v42;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  uint64_t v44 = OUTLINED_FUNCTION_81(v43);
  MEMORY[0x270FA5388](v44);
  uint64_t v232 = (uint64_t)&v212 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v46);
  OUTLINED_FUNCTION_43_4();
  uint64_t v238 = v47;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v48);
  OUTLINED_FUNCTION_27_10();
  uint64_t v239 = v49;
  type metadata accessor for SearchResultType();
  OUTLINED_FUNCTION_1();
  unint64_t v243 = v51;
  uint64_t v244 = v50;
  MEMORY[0x270FA5388](v50);
  OUTLINED_FUNCTION_185_0();
  uint64_t v242 = v52;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v53);
  OUTLINED_FUNCTION_27_10();
  uint64_t v241 = v54;
  uint64_t v55 = OUTLINED_FUNCTION_26_8();
  uint64_t v56 = type metadata accessor for SearchEntity(v55);
  MEMORY[0x270FA5388](v56);
  uint64_t v251 = (char *)&v212 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v58);
  OUTLINED_FUNCTION_43_4();
  uint64_t v258 = v59;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v60);
  OUTLINED_FUNCTION_43_4();
  uint64_t v245 = v61;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v62);
  OUTLINED_FUNCTION_43_4();
  uint64_t v247 = v63;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v64);
  OUTLINED_FUNCTION_43_4();
  uint64_t v254 = v65;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v66);
  OUTLINED_FUNCTION_43_4();
  uint64_t v248 = v67;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v68);
  OUTLINED_FUNCTION_43_4();
  uint64_t v249 = v69;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v70);
  uint64_t v250 = (uint64_t)&v212 - v71;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v72);
  uint64_t v255 = (uint64_t)&v212 - v73;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v74);
  uint64_t v252 = (uint64_t)&v212 - v75;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v76);
  OUTLINED_FUNCTION_43_4();
  uint64_t v257 = v77;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v78);
  OUTLINED_FUNCTION_43_4();
  uint64_t v256 = v79;
  OUTLINED_FUNCTION_113_1();
  uint64_t v81 = MEMORY[0x270FA5388](v80);
  uint64_t v83 = (char *)&v212 - v82;
  MEMORY[0x270FA5388](v81);
  OUTLINED_FUNCTION_43_4();
  uint64_t v246 = v84;
  OUTLINED_FUNCTION_113_1();
  uint64_t v86 = MEMORY[0x270FA5388](v85);
  uint64_t v88 = (char *)&v212 - v87;
  MEMORY[0x270FA5388](v86);
  uint64_t v90 = (char *)&v212 - v89;
  EntityProperty.wrappedValue.getter();
  uint64_t v91 = v265[0];
  uint64_t v92 = v265[1];
  EntityProperty.wrappedValue.getter();
  BOOL v93 = v91 == v265[0] && v92 == v265[1];
  uint64_t v253 = v1;
  if (v93)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v95 = v3;
    outlined init with copy of SearchEntity(v3, (uint64_t)v90, (void (*)(void))type metadata accessor for SearchEntity);
    outlined init with copy of SearchEntity(v1, (uint64_t)v88, (void (*)(void))type metadata accessor for SearchEntity);
LABEL_8:
    EntityProperty.wrappedValue.getter();
    uint64_t v99 = v265[0];
    uint64_t v100 = v265[1];
    EntityProperty.wrappedValue.getter();
    BOOL v101 = v99 == v265[0] && v100 == v265[1];
    uint64_t v98 = v256;
    if (v101)
    {
      swift_bridgeObjectRelease_n();
      outlined destroy of SearchEntity((uint64_t)v88, (void (*)(void))type metadata accessor for SearchEntity);
      outlined destroy of SearchEntity((uint64_t)v90, (void (*)(void))type metadata accessor for SearchEntity);
      uint64_t v96 = v95;
      uint64_t v97 = v246;
      outlined init with copy of SearchEntity(v95, v246, (void (*)(void))type metadata accessor for SearchEntity);
      OUTLINED_FUNCTION_53_7();
    }
    else
    {
      unint64_t v94 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      outlined destroy of SearchEntity((uint64_t)v88, (void (*)(void))type metadata accessor for SearchEntity);
      outlined destroy of SearchEntity((uint64_t)v90, (void (*)(void))type metadata accessor for SearchEntity);
      uint64_t v96 = v95;
      uint64_t v97 = v246;
      outlined init with copy of SearchEntity(v95, v246, (void (*)(void))type metadata accessor for SearchEntity);
      OUTLINED_FUNCTION_53_7();
      if ((v94 & 1) == 0) {
        goto LABEL_13;
      }
    }
    uint64_t v106 = v96;
    uint64_t v107 = v241;
    EntityProperty.wrappedValue.getter();
    uint64_t v108 = v242;
    EntityProperty.wrappedValue.getter();
    LODWORD(v246) = specialized == infix<A>(_:_:)(v107, v108);
    uint64_t v109 = v98;
    uint64_t v110 = v97;
    uint64_t v111 = *(void (**)(void))(v243 + 8);
    unint64_t v94 = v244;
    OUTLINED_FUNCTION_26_2();
    v111();
    uint64_t v96 = v106;
    OUTLINED_FUNCTION_26_2();
    v111();
    outlined destroy of SearchEntity((uint64_t)v83, (void (*)(void))type metadata accessor for SearchEntity);
    uint64_t v112 = v110;
    uint64_t v98 = v109;
    outlined destroy of SearchEntity(v112, (void (*)(void))type metadata accessor for SearchEntity);
    outlined init with copy of SearchEntity(v106, v109, (void (*)(void))type metadata accessor for SearchEntity);
    uint64_t v113 = OUTLINED_FUNCTION_104_4();
    outlined init with copy of SearchEntity(v113, v114, (void (*)(void))type metadata accessor for SearchEntity);
    uint64_t v104 = v247;
    uint64_t v105 = v252;
    if ((v246 & 1) == 0) {
      goto LABEL_21;
    }
    uint64_t v246 = v106;
    uint64_t v115 = v239;
    EntityProperty.wrappedValue.getter();
    uint64_t v116 = v238;
    EntityProperty.wrappedValue.getter();
    uint64_t v117 = v240;
    uint64_t v118 = v240 + *(int *)(v236 + 48);
    outlined init with copy of SearchAppEntity?(v115, v240, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
    OUTLINED_FUNCTION_74_4();
    uint64_t v119 = v117;
    outlined init with copy of SearchAppEntity?(v120, v121, v122);
    uint64_t v123 = OUTLINED_FUNCTION_82_4();
    uint64_t v124 = v237;
    OUTLINED_FUNCTION_53_2(v123, v125, v237);
    uint64_t v126 = v255;
    if (v93)
    {
      outlined destroy of PQAVerificationModelProtocol?(v116, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      outlined destroy of PQAVerificationModelProtocol?(v115, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      outlined destroy of SearchEntity(v257, (void (*)(void))type metadata accessor for SearchEntity);
      outlined destroy of SearchEntity(v256, (void (*)(void))type metadata accessor for SearchEntity);
      OUTLINED_FUNCTION_53_2(v118, 1, v124);
      uint64_t v127 = v254;
      uint64_t v96 = v246;
      uint64_t v128 = v251;
      if (v93)
      {
        outlined destroy of PQAVerificationModelProtocol?(v240, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
        outlined init with copy of SearchEntity(v96, v105, (void (*)(void))type metadata accessor for SearchEntity);
        uint64_t v129 = (uint64_t)v83;
        outlined init with copy of SearchEntity((uint64_t)v83, v126, (void (*)(void))type metadata accessor for SearchEntity);
        uint64_t v130 = v245;
        goto LABEL_38;
      }
    }
    else
    {
      uint64_t v143 = v232;
      outlined init with copy of SearchAppEntity?(v119, v232, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      OUTLINED_FUNCTION_53_2(v118, 1, v124);
      if (!v144)
      {
        uint64_t v145 = v226;
        outlined init with take of SearchSpotlightEntity(v118, v226, (void (*)(void))type metadata accessor for SearchAppEntity);
        static SearchAppEntity.== infix(_:_:)();
        char v147 = v146;
        outlined destroy of SearchEntity(v145, (void (*)(void))type metadata accessor for SearchAppEntity);
        outlined destroy of PQAVerificationModelProtocol?(v238, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
        outlined destroy of PQAVerificationModelProtocol?(v239, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
        outlined destroy of SearchEntity(v257, (void (*)(void))type metadata accessor for SearchEntity);
        uint64_t v126 = v255;
        outlined destroy of SearchEntity(v256, (void (*)(void))type metadata accessor for SearchEntity);
        outlined destroy of SearchEntity(v143, (void (*)(void))type metadata accessor for SearchAppEntity);
        uint64_t v129 = v253;
        outlined destroy of PQAVerificationModelProtocol?(v119, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
        uint64_t v96 = v246;
        outlined init with copy of SearchEntity(v246, v105, (void (*)(void))type metadata accessor for SearchEntity);
        uint64_t v148 = OUTLINED_FUNCTION_113_4();
        outlined init with copy of SearchEntity(v148, v149, (void (*)(void))type metadata accessor for SearchEntity);
        uint64_t v127 = v254;
        uint64_t v128 = v251;
        uint64_t v130 = v245;
        if ((v147 & 1) == 0) {
          goto LABEL_23;
        }
LABEL_38:
        uint64_t v150 = v234;
        EntityProperty.wrappedValue.getter();
        uint64_t v151 = v233;
        EntityProperty.wrappedValue.getter();
        uint64_t v152 = v235;
        uint64_t v153 = v235 + *(int *)(v229 + 48);
        outlined init with copy of SearchAppEntity?(v150, v235, &demangling cache variable for type metadata for SearchGlobalEntity?);
        uint64_t v257 = v153;
        outlined init with copy of SearchAppEntity?(v151, v153, &demangling cache variable for type metadata for SearchGlobalEntity?);
        uint64_t v154 = OUTLINED_FUNCTION_82_4();
        uint64_t v155 = v230;
        OUTLINED_FUNCTION_53_2(v154, v156, v230);
        if (v93)
        {
          uint64_t v132 = v130;
          outlined destroy of PQAVerificationModelProtocol?(v151, &demangling cache variable for type metadata for SearchGlobalEntity?);
          uint64_t v157 = OUTLINED_FUNCTION_81_3();
          outlined destroy of PQAVerificationModelProtocol?(v157, v158);
          outlined destroy of SearchEntity(v255, (void (*)(void))type metadata accessor for SearchEntity);
          outlined destroy of SearchEntity(v252, (void (*)(void))type metadata accessor for SearchEntity);
          uint64_t v128 = v251;
          OUTLINED_FUNCTION_53_2(v257, 1, v155);
          uint64_t v127 = v254;
          if (!v93) {
            goto LABEL_45;
          }
          uint64_t v134 = v104;
          outlined destroy of PQAVerificationModelProtocol?(v235, &demangling cache variable for type metadata for SearchGlobalEntity?);
          uint64_t v137 = v250;
          outlined init with copy of SearchEntity(v96, v250, (void (*)(void))type metadata accessor for SearchEntity);
          uint64_t v138 = v249;
          OUTLINED_FUNCTION_101_4(v129);
        }
        else
        {
          outlined init with copy of SearchAppEntity?(v152, v228, &demangling cache variable for type metadata for SearchGlobalEntity?);
          int v159 = OUTLINED_FUNCTION_84_3();
          uint64_t v132 = v130;
          if (v159 == 1)
          {
            outlined destroy of PQAVerificationModelProtocol?(v233, &demangling cache variable for type metadata for SearchGlobalEntity?);
            outlined destroy of PQAVerificationModelProtocol?(v234, &demangling cache variable for type metadata for SearchGlobalEntity?);
            outlined destroy of SearchEntity(v255, (void (*)(void))type metadata accessor for SearchEntity);
            outlined destroy of SearchEntity(v252, (void (*)(void))type metadata accessor for SearchEntity);
            OUTLINED_FUNCTION_81_3();
            OUTLINED_FUNCTION_16_1();
            v160();
            uint64_t v127 = v254;
LABEL_45:
            uint64_t v133 = (uint64_t)v128;
            uint64_t v134 = v104;
            outlined destroy of PQAVerificationModelProtocol?(v235, &demangling cache variable for type metadata for (SearchGlobalEntity?, SearchGlobalEntity?));
            goto LABEL_24;
          }
          uint64_t v133 = (uint64_t)v128;
          uint64_t v134 = v104;
          uint64_t v161 = v224;
          OUTLINED_FUNCTION_58_1();
          v162();
          _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchGlobalEntity and conformance SearchGlobalEntity, MEMORY[0x263F5B7E0]);
          LODWORD(v257) = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v163 = *(void (**)(void))(v161 + 8);
          OUTLINED_FUNCTION_26_2();
          v163();
          outlined destroy of PQAVerificationModelProtocol?(v233, &demangling cache variable for type metadata for SearchGlobalEntity?);
          outlined destroy of PQAVerificationModelProtocol?(v234, &demangling cache variable for type metadata for SearchGlobalEntity?);
          outlined destroy of SearchEntity(v255, (void (*)(void))type metadata accessor for SearchEntity);
          uint64_t v129 = v253;
          outlined destroy of SearchEntity(v252, (void (*)(void))type metadata accessor for SearchEntity);
          OUTLINED_FUNCTION_26_2();
          v163();
          outlined destroy of PQAVerificationModelProtocol?(v235, &demangling cache variable for type metadata for SearchGlobalEntity?);
          uint64_t v137 = v250;
          outlined init with copy of SearchEntity(v96, v250, (void (*)(void))type metadata accessor for SearchEntity);
          uint64_t v138 = v249;
          outlined init with copy of SearchEntity(v129, v249, (void (*)(void))type metadata accessor for SearchEntity);
          uint64_t v127 = v254;
          if ((v257 & 1) == 0) {
            goto LABEL_25;
          }
        }
        uint64_t v164 = v227;
        EntityProperty.wrappedValue.getter();
        EntityProperty.wrappedValue.getter();
        uint64_t v165 = v225;
        uint64_t v166 = v164;
        uint64_t v167 = v225 + *(int *)(v222 + 48);
        outlined init with copy of SearchAppEntity?(v166, v225, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
        outlined init with copy of SearchAppEntity?(v231, v167, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
        uint64_t v168 = v223;
        OUTLINED_FUNCTION_53_2(v165, 1, v223);
        if (v93)
        {
          outlined destroy of PQAVerificationModelProtocol?(v231, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
          outlined destroy of PQAVerificationModelProtocol?(v227, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
          outlined destroy of SearchEntity(v138, (void (*)(void))type metadata accessor for SearchEntity);
          uint64_t v165 = v225;
          outlined destroy of SearchEntity(v137, (void (*)(void))type metadata accessor for SearchEntity);
          OUTLINED_FUNCTION_53_2(v167, 1, v168);
          uint64_t v140 = (uint64_t)v251;
          uint64_t v139 = v134;
          uint64_t v142 = v248;
          if (v93)
          {
            outlined destroy of PQAVerificationModelProtocol?(v165, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
            outlined init with copy of SearchEntity(v96, v142, (void (*)(void))type metadata accessor for SearchEntity);
            uint64_t v127 = v254;
            outlined init with copy of SearchEntity(v129, v254, (void (*)(void))type metadata accessor for SearchEntity);
            uint64_t v141 = v132;
            goto LABEL_57;
          }
        }
        else
        {
          uint64_t v169 = v220;
          outlined init with copy of SearchAppEntity?(v165, v220, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
          uint64_t v170 = v167;
          OUTLINED_FUNCTION_53_2(v167, 1, v168);
          uint64_t v142 = v248;
          if (!v171)
          {
            uint64_t v172 = v219;
            outlined init with take of SearchSpotlightEntity(v170, v219, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
            static SearchSpotlightEntity.== infix(_:_:)();
            LODWORD(v257) = v173;
            outlined destroy of SearchEntity(v172, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
            outlined destroy of PQAVerificationModelProtocol?(v231, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
            outlined destroy of PQAVerificationModelProtocol?(v227, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
            outlined destroy of SearchEntity(v249, (void (*)(void))type metadata accessor for SearchEntity);
            uint64_t v142 = v248;
            outlined destroy of SearchEntity(v250, (void (*)(void))type metadata accessor for SearchEntity);
            outlined destroy of SearchEntity(v169, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
            uint64_t v129 = v253;
            outlined destroy of PQAVerificationModelProtocol?(v165, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
            outlined init with copy of SearchEntity(v96, v142, (void (*)(void))type metadata accessor for SearchEntity);
            uint64_t v127 = v254;
            outlined init with copy of SearchEntity(v129, v254, (void (*)(void))type metadata accessor for SearchEntity);
            uint64_t v140 = (uint64_t)v251;
            uint64_t v139 = v134;
            uint64_t v141 = v132;
            if ((v257 & 1) == 0) {
              goto LABEL_27;
            }
LABEL_57:
            EntityProperty.wrappedValue.getter();
            outlined init with take of SearchResultItem?((uint64_t)&v267, (uint64_t)v268, &demangling cache variable for type metadata for AnswerMetadata?);
            EntityProperty.wrappedValue.getter();
            outlined init with take of SearchResultItem?((uint64_t)&v266, (uint64_t)&v269, &demangling cache variable for type metadata for AnswerMetadata?);
            outlined init with take of SearchResultItem?((uint64_t)v268, (uint64_t)v265, &demangling cache variable for type metadata for AnswerMetadata?);
            OUTLINED_FUNCTION_74_4();
            outlined init with take of SearchResultItem?(v174, v175, v176);
            outlined init with take of SearchResultItem?((uint64_t)v268, (uint64_t)&v278, &demangling cache variable for type metadata for AnswerMetadata?);
            if (getEnumTag for DataFilter.FilterResult((uint64_t *)&v278) == 1)
            {
              outlined destroy of SearchEntity(v127, (void (*)(void))type metadata accessor for SearchEntity);
              outlined destroy of SearchEntity(v142, (void (*)(void))type metadata accessor for SearchEntity);
              outlined init with take of SearchResultItem?((uint64_t)&v265[16], (uint64_t)v264, &demangling cache variable for type metadata for AnswerMetadata?);
              outlined init with take of SearchResultItem?((uint64_t)v264, (uint64_t)v263, &demangling cache variable for type metadata for AnswerMetadata?);
              if (getEnumTag for DataFilter.FilterResult(v263) == 1)
              {
                outlined init with take of SearchResultItem?((uint64_t)v265, (uint64_t)v262, &demangling cache variable for type metadata for AnswerMetadata?);
                outlined release of AnswerMetadata?(v262);
                outlined init with copy of SearchEntity(v96, v139, (void (*)(void))type metadata accessor for SearchEntity);
                OUTLINED_FUNCTION_87_4();
                goto LABEL_64;
              }
            }
            else
            {
              outlined init with take of SearchResultItem?((uint64_t)v268, (uint64_t)v264, &demangling cache variable for type metadata for AnswerMetadata?);
              outlined init with take of SearchResultItem?((uint64_t)&v269, (uint64_t)v263, &demangling cache variable for type metadata for AnswerMetadata?);
              if (getEnumTag for DataFilter.FilterResult(v263) != 1)
              {
                outlined init with take of SearchResultItem?((uint64_t)&v269, (uint64_t)v259, &demangling cache variable for type metadata for AnswerMetadata?);
                memcpy(v262, v259, sizeof(v262));
                outlined init with take of SearchResultItem?((uint64_t)v268, (uint64_t)v260, &demangling cache variable for type metadata for AnswerMetadata?);
                outlined retain of AnswerMetadata((uint64_t)v260);
                char v177 = static AnswerMetadata.== infix(_:_:)(v264, v262);
                outlined release of AnswerMetadata?(&v269);
                outlined destroy of SearchEntity(v254, (void (*)(void))type metadata accessor for SearchEntity);
                outlined destroy of SearchEntity(v142, (void (*)(void))type metadata accessor for SearchEntity);
                memcpy(v261, v264, sizeof(v261));
                outlined release of AnswerMetadata((uint64_t)v261);
                outlined init with take of SearchResultItem?((uint64_t)v265, (uint64_t)v262, &demangling cache variable for type metadata for AnswerMetadata?);
                uint64_t v129 = v253;
                outlined release of AnswerMetadata?(v262);
                outlined init with copy of SearchEntity(v96, v139, (void (*)(void))type metadata accessor for SearchEntity);
                OUTLINED_FUNCTION_87_4();
                if ((v177 & 1) == 0) {
                  goto LABEL_29;
                }
LABEL_64:
                uint64_t v178 = v218;
                EntityProperty.wrappedValue.getter();
                uint64_t v179 = v217;
                EntityProperty.wrappedValue.getter();
                uint64_t v180 = v216;
                uint64_t v181 = v216 + *(int *)(v214 + 48);
                outlined init with copy of SearchAppEntity?(v178, v216, &demangling cache variable for type metadata for IdCardEntity?);
                uint64_t v257 = v181;
                OUTLINED_FUNCTION_74_4();
                outlined init with copy of SearchAppEntity?(v182, v183, v184);
                uint64_t v185 = v215;
                OUTLINED_FUNCTION_53_2(v180, 1, v215);
                if (v93)
                {
                  outlined destroy of PQAVerificationModelProtocol?(v179, &demangling cache variable for type metadata for IdCardEntity?);
                  outlined destroy of PQAVerificationModelProtocol?(v178, &demangling cache variable for type metadata for IdCardEntity?);
                  outlined destroy of SearchEntity(v141, (void (*)(void))type metadata accessor for SearchEntity);
                  outlined destroy of SearchEntity(v139, (void (*)(void))type metadata accessor for SearchEntity);
                  OUTLINED_FUNCTION_53_2(v257, 1, v185);
                  if (v93)
                  {
                    outlined destroy of PQAVerificationModelProtocol?(v180, &demangling cache variable for type metadata for IdCardEntity?);
                    outlined init with copy of SearchEntity(v96, v258, (void (*)(void))type metadata accessor for SearchEntity);
                    OUTLINED_FUNCTION_101_4(v253);
                    goto LABEL_74;
                  }
                }
                else
                {
                  uint64_t v186 = v213;
                  outlined init with copy of SearchAppEntity?(v180, v213, &demangling cache variable for type metadata for IdCardEntity?);
                  uint64_t v187 = v257;
                  uint64_t v188 = OUTLINED_FUNCTION_88_4();
                  OUTLINED_FUNCTION_53_2(v188, v189, v185);
                  if (!v190)
                  {
                    uint64_t v191 = v187;
                    uint64_t v192 = v212;
                    outlined init with take of SearchSpotlightEntity(v191, v212, (void (*)(void))type metadata accessor for IdCardEntity);
                    static IdCardEntity.== infix(_:_:)();
                    LODWORD(v257) = v193;
                    outlined destroy of SearchEntity(v192, (void (*)(void))type metadata accessor for IdCardEntity);
                    outlined destroy of PQAVerificationModelProtocol?(v217, &demangling cache variable for type metadata for IdCardEntity?);
                    outlined destroy of PQAVerificationModelProtocol?(v218, &demangling cache variable for type metadata for IdCardEntity?);
                    outlined destroy of SearchEntity(v141, (void (*)(void))type metadata accessor for SearchEntity);
                    outlined destroy of SearchEntity(v139, (void (*)(void))type metadata accessor for SearchEntity);
                    outlined destroy of SearchEntity(v213, (void (*)(void))type metadata accessor for IdCardEntity);
                    outlined destroy of PQAVerificationModelProtocol?(v180, &demangling cache variable for type metadata for IdCardEntity?);
                    outlined init with copy of SearchEntity(v96, v258, (void (*)(void))type metadata accessor for SearchEntity);
                    outlined init with copy of SearchEntity(v253, v140, (void (*)(void))type metadata accessor for SearchEntity);
                    if ((v257 & 1) == 0) {
                      goto LABEL_31;
                    }
LABEL_74:
                    EntityProperty.wrappedValue.getter();
                    uint64_t v194 = v263[0];
                    uint64_t v195 = v263[1];
                    uint64_t v196 = v263[2];
                    uint64_t v197 = v263[3];
                    uint64_t v198 = v263[4];
                    uint64_t v256 = v263[5];
                    uint64_t v257 = v263[6];
                    uint64_t v255 = v263[7];
                    uint64_t v199 = v263[8];
                    unint64_t v200 = v263[9];
                    EntityProperty.wrappedValue.getter();
                    uint64_t v201 = v194;
                    uint64_t v202 = v278.n128_u64[0];
                    uint64_t v253 = v284;
                    uint64_t v254 = v201;
                    uint64_t v252 = v283;
                    uint64_t v249 = v281;
                    uint64_t v250 = v282;
                    uint64_t v247 = v279;
                    uint64_t v248 = v280;
                    uint64_t v245 = v285;
                    uint64_t v246 = v278.n128_i64[1];
                    uint64_t v244 = v286;
                    if (v201)
                    {
                      v265[0] = v201;
                      v265[1] = v195;
                      v265[2] = v196;
                      v265[3] = v197;
                      v265[4] = v198;
                      v265[5] = v256;
                      v265[6] = v257;
                      v265[7] = v255;
                      v265[8] = v199;
                      v265[9] = v200;
                      unint64_t v243 = v278.n128_u64[0];
                      if (v278.n128_u64[0])
                      {
                        __n128 v269 = v278;
                        uint64_t v270 = v279;
                        uint64_t v271 = v280;
                        uint64_t v272 = v281;
                        uint64_t v273 = v282;
                        uint64_t v274 = v283;
                        uint64_t v275 = v284;
                        uint64_t v276 = v285;
                        unint64_t v277 = v286;
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        uint64_t v241 = v199;
                        swift_retain();
                        uint64_t v242 = v195;
                        swift_retain();
                        swift_retain();
                        outlined copy of Data?(v199, v200);
                        static EventEntity.== infix(_:_:)();
                        outlined consume of EventEntity?(v243, v246, v247, v248, v249, v250, v252, v253, v245, v244);
                        outlined destroy of SearchEntity(v140, (void (*)(void))type metadata accessor for SearchEntity);
                        outlined destroy of SearchEntity(v258, (void (*)(void))type metadata accessor for SearchEntity);
                        uint64_t v251 = (char *)v265[0];
                        uint64_t v252 = v198;
                        uint64_t v258 = v197;
                        uint64_t v253 = v196;
                        uint64_t v203 = v265[8];
                        uint64_t v250 = v265[9];
                        swift_release();
                        swift_release();
                        swift_release();
                        swift_release();
                        swift_release();
                        swift_release();
                        swift_release();
                        swift_release();
                        outlined consume of Data?(v203, v250);
                        outlined consume of EventEntity?(v254, v242, v253, v258, v252, v256, v257, v255, v241, v200);
                        goto LABEL_32;
                      }
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      outlined copy of Data?(v199, v200);
                      uint64_t v204 = v200;
                      unint64_t v205 = v199;
                      uint64_t v206 = v195;
                      uint64_t v207 = v196;
                      uint64_t v208 = v197;
                      uint64_t v209 = v198;
                      outlined destroy of SearchEntity(v140, (void (*)(void))type metadata accessor for SearchEntity);
                      OUTLINED_FUNCTION_35_9();
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                      uint64_t v210 = OUTLINED_FUNCTION_115_3();
                      outlined consume of Data?(v210, v211);
                      uint64_t v202 = v243;
                    }
                    else
                    {
                      uint64_t v204 = v200;
                      unint64_t v205 = v199;
                      uint64_t v206 = v195;
                      uint64_t v207 = v196;
                      uint64_t v208 = v197;
                      uint64_t v209 = v198;
                      outlined destroy of SearchEntity(v140, (void (*)(void))type metadata accessor for SearchEntity);
                      OUTLINED_FUNCTION_35_9();
                      if (!v202)
                      {
                        outlined consume of EventEntity?(0, v207, v208, v198, (uint64_t)type metadata accessor for SearchEntity, v256, v257, v255, v206, v205);
                        goto LABEL_32;
                      }
                    }
                    v265[0] = v204;
                    v265[1] = v207;
                    v265[2] = v208;
                    v265[3] = v209;
                    v265[4] = (uint64_t)type metadata accessor for SearchEntity;
                    v265[5] = v256;
                    v265[6] = v257;
                    v265[7] = v255;
                    v265[8] = v206;
                    v265[9] = v205;
                    v265[10] = v202;
                    v265[11] = v246;
                    v265[12] = v247;
                    v265[13] = v248;
                    v265[14] = v249;
                    v265[15] = v250;
                    v265[16] = v252;
                    v265[17] = v253;
                    v265[18] = v245;
                    v265[19] = v244;
                    outlined release of (EventEntity?, EventEntity?)(v265);
                    goto LABEL_32;
                  }
                  outlined destroy of PQAVerificationModelProtocol?(v217, &demangling cache variable for type metadata for IdCardEntity?);
                  outlined destroy of PQAVerificationModelProtocol?(v218, &demangling cache variable for type metadata for IdCardEntity?);
                  outlined destroy of SearchEntity(v141, (void (*)(void))type metadata accessor for SearchEntity);
                  outlined destroy of SearchEntity(v139, (void (*)(void))type metadata accessor for SearchEntity);
                  outlined destroy of SearchEntity(v186, (void (*)(void))type metadata accessor for IdCardEntity);
                }
                outlined destroy of PQAVerificationModelProtocol?(v180, &demangling cache variable for type metadata for (IdCardEntity?, IdCardEntity?));
                uint64_t v129 = v253;
                goto LABEL_30;
              }
              outlined init with take of SearchResultItem?((uint64_t)v268, (uint64_t)v261, &demangling cache variable for type metadata for AnswerMetadata?);
              outlined retain of AnswerMetadata((uint64_t)v261);
              outlined destroy of SearchEntity(v254, (void (*)(void))type metadata accessor for SearchEntity);
              outlined destroy of SearchEntity(v142, (void (*)(void))type metadata accessor for SearchEntity);
              memcpy(v262, v264, sizeof(v262));
              outlined release of AnswerMetadata((uint64_t)v262);
            }
            memcpy(v263, v265, sizeof(v263));
            outlined release of (AnswerMetadata?, AnswerMetadata?)((uint64_t)v263);
            goto LABEL_28;
          }
          outlined destroy of PQAVerificationModelProtocol?(v231, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
          outlined destroy of PQAVerificationModelProtocol?(v227, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
          outlined destroy of SearchEntity(v249, (void (*)(void))type metadata accessor for SearchEntity);
          outlined destroy of SearchEntity(v250, (void (*)(void))type metadata accessor for SearchEntity);
          outlined destroy of SearchEntity(v169, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
          uint64_t v140 = (uint64_t)v251;
          uint64_t v139 = v134;
        }
        outlined destroy of PQAVerificationModelProtocol?(v165, &demangling cache variable for type metadata for (SearchSpotlightEntity?, SearchSpotlightEntity?));
        uint64_t v127 = v254;
        uint64_t v141 = v132;
        goto LABEL_26;
      }
      outlined destroy of PQAVerificationModelProtocol?(v238, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      outlined destroy of PQAVerificationModelProtocol?(v239, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      outlined destroy of SearchEntity(v257, (void (*)(void))type metadata accessor for SearchEntity);
      outlined destroy of SearchEntity(v256, (void (*)(void))type metadata accessor for SearchEntity);
      outlined destroy of SearchEntity(v143, (void (*)(void))type metadata accessor for SearchAppEntity);
      uint64_t v127 = v254;
      uint64_t v96 = v246;
      uint64_t v128 = v251;
    }
    outlined destroy of PQAVerificationModelProtocol?(v240, &demangling cache variable for type metadata for (SearchAppEntity?, SearchAppEntity?));
    goto LABEL_22;
  }
  unint64_t v94 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v95 = v3;
  outlined init with copy of SearchEntity(v3, (uint64_t)v90, (void (*)(void))type metadata accessor for SearchEntity);
  outlined init with copy of SearchEntity(v1, (uint64_t)v88, (void (*)(void))type metadata accessor for SearchEntity);
  if (v94) {
    goto LABEL_8;
  }
  outlined destroy of SearchEntity((uint64_t)v88, (void (*)(void))type metadata accessor for SearchEntity);
  outlined destroy of SearchEntity((uint64_t)v90, (void (*)(void))type metadata accessor for SearchEntity);
  uint64_t v96 = v3;
  uint64_t v97 = v246;
  outlined init with copy of SearchEntity(v3, v246, (void (*)(void))type metadata accessor for SearchEntity);
  OUTLINED_FUNCTION_53_7();
  uint64_t v98 = v256;
LABEL_13:
  outlined destroy of SearchEntity((uint64_t)v83, (void (*)(void))type metadata accessor for SearchEntity);
  outlined destroy of SearchEntity(v97, (void (*)(void))type metadata accessor for SearchEntity);
  outlined init with copy of SearchEntity(v96, v98, (void (*)(void))type metadata accessor for SearchEntity);
  uint64_t v102 = OUTLINED_FUNCTION_104_4();
  outlined init with copy of SearchEntity(v102, v103, (void (*)(void))type metadata accessor for SearchEntity);
  uint64_t v104 = v247;
  uint64_t v105 = v252;
LABEL_21:
  outlined destroy of SearchEntity(v94, (void (*)(void))type metadata accessor for SearchEntity);
  outlined destroy of SearchEntity(v98, (void (*)(void))type metadata accessor for SearchEntity);
  uint64_t v128 = v251;
  uint64_t v127 = v254;
  uint64_t v126 = v255;
LABEL_22:
  uint64_t v129 = (uint64_t)v83;
  outlined init with copy of SearchEntity(v96, v105, (void (*)(void))type metadata accessor for SearchEntity);
  outlined init with copy of SearchEntity((uint64_t)v83, v126, (void (*)(void))type metadata accessor for SearchEntity);
  uint64_t v130 = v245;
LABEL_23:
  uint64_t v131 = v126;
  uint64_t v132 = v130;
  uint64_t v133 = (uint64_t)v128;
  uint64_t v134 = v104;
  outlined destroy of SearchEntity(v131, (void (*)(void))type metadata accessor for SearchEntity);
  uint64_t v135 = OUTLINED_FUNCTION_81_3();
  outlined destroy of SearchEntity(v135, v136);
LABEL_24:
  uint64_t v137 = v250;
  outlined init with copy of SearchEntity(v96, v250, (void (*)(void))type metadata accessor for SearchEntity);
  uint64_t v138 = v249;
  OUTLINED_FUNCTION_101_4(v129);
LABEL_25:
  outlined destroy of SearchEntity(v138, (void (*)(void))type metadata accessor for SearchEntity);
  outlined destroy of SearchEntity(v137, (void (*)(void))type metadata accessor for SearchEntity);
  uint64_t v139 = v134;
  uint64_t v140 = v133;
  uint64_t v141 = v132;
  uint64_t v142 = v248;
LABEL_26:
  outlined init with copy of SearchEntity(v96, v142, (void (*)(void))type metadata accessor for SearchEntity);
  outlined init with copy of SearchEntity(v129, v127, (void (*)(void))type metadata accessor for SearchEntity);
LABEL_27:
  outlined destroy of SearchEntity(v127, (void (*)(void))type metadata accessor for SearchEntity);
  outlined destroy of SearchEntity(v142, (void (*)(void))type metadata accessor for SearchEntity);
LABEL_28:
  outlined init with copy of SearchEntity(v96, v139, (void (*)(void))type metadata accessor for SearchEntity);
  OUTLINED_FUNCTION_87_4();
LABEL_29:
  outlined destroy of SearchEntity(v141, (void (*)(void))type metadata accessor for SearchEntity);
  outlined destroy of SearchEntity(v139, (void (*)(void))type metadata accessor for SearchEntity);
LABEL_30:
  outlined init with copy of SearchEntity(v96, v258, (void (*)(void))type metadata accessor for SearchEntity);
  OUTLINED_FUNCTION_101_4(v129);
LABEL_31:
  outlined destroy of SearchEntity(v140, (void (*)(void))type metadata accessor for SearchEntity);
  outlined destroy of SearchEntity(v258, (void (*)(void))type metadata accessor for SearchEntity);
LABEL_32:
  OUTLINED_FUNCTION_119_0();
}

void protocol witness for ValidatableEntity.validateParameters() in conformance SearchEntity()
{
}

uint64_t protocol witness for Identifiable.id.getter in conformance SearchEntity@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SearchEntity.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance SearchEntity(uint64_t a1)
{
  uint64_t v2 = _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchEntity and conformance SearchEntity, (void (*)(uint64_t))type metadata accessor for SearchEntity);
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance SearchEntity(uint64_t a1)
{
  uint64_t v2 = _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchEntity and conformance SearchEntity, (void (*)(uint64_t))type metadata accessor for SearchEntity);
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t SearchEntity.init(result:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = type metadata accessor for SearchResult(0);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_59_0();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchEntity?);
  uint64_t v9 = OUTLINED_FUNCTION_81(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_16();
  outlined init with copy of SearchEntity(a1, v3, (void (*)(void))type metadata accessor for SearchResult);
  SearchEntity.init(result:card:searchString:)(v3, 0, v2);
  outlined destroy of SearchEntity(a1, (void (*)(void))type metadata accessor for SearchResult);
  uint64_t v10 = type metadata accessor for SearchEntity(0);
  if (OUTLINED_FUNCTION_84_3())
  {
    outlined destroy of PQAVerificationModelProtocol?(v2, &demangling cache variable for type metadata for SearchEntity?);
    uint64_t v11 = 1;
  }
  else
  {
    outlined init with take of SearchSpotlightEntity(v2, a2, (void (*)(void))type metadata accessor for SearchEntity);
    uint64_t v11 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a2, v11, 1, v10);
}

uint64_t SearchEntity.init(result:card:searchString:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchEntity?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_12_7();
  SearchEntity.init(_:)();
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for SearchEntity(0);
  if (__swift_getEnumTagSinglePayload(v3, 1, v9))
  {

    outlined destroy of SearchEntity(a1, (void (*)(void))type metadata accessor for SearchResult);
    outlined destroy of PQAVerificationModelProtocol?(v3, &demangling cache variable for type metadata for SearchEntity?);
    uint64_t v10 = 1;
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_19_0();
    outlined init with take of SearchSpotlightEntity(v11, v12, v13);
    type metadata accessor for SearchResult(0);
    swift_bridgeObjectRetain();
    EntityProperty.wrappedValue.setter();
    SearchEntity.associatedQuery.didset();

    outlined destroy of SearchEntity(a1, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v10 = 0;
  }
  return OUTLINED_FUNCTION_69_5(a3, v10);
}

void closure #1 in SearchEntity.init(result:card:searchString:)()
{
  OUTLINED_FUNCTION_104_0();
  *(void *)&long long v361 = v0;
  uint64_t v2 = v1;
  *(void *)&long long v356 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v347 = type metadata accessor for NoteDocument(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_184_0();
  uint64_t v346 = v9;
  uint64_t v10 = OUTLINED_FUNCTION_26_8();
  uint64_t v345 = type metadata accessor for MobileSMSDocument(v10);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_184_0();
  uint64_t v344 = v12;
  OUTLINED_FUNCTION_26_8();
  uint64_t v339 = type metadata accessor for URL();
  OUTLINED_FUNCTION_1();
  uint64_t v316 = v13;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_184_0();
  uint64_t v315 = v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v17 = OUTLINED_FUNCTION_81(v16);
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_185_0();
  uint64_t v338 = v18;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_27_10();
  uint64_t v348 = v20;
  uint64_t v21 = OUTLINED_FUNCTION_26_8();
  uint64_t v343 = type metadata accessor for EmailDocument(v21);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_184_0();
  uint64_t v342 = v23;
  uint64_t v327 = type metadata accessor for SearchAppEntity(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_185_0();
  uint64_t v326 = v25;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v26);
  OUTLINED_FUNCTION_27_10();
  uint64_t v336 = v27;
  OUTLINED_FUNCTION_26_8();
  uint64_t v312 = type metadata accessor for AnswerMetadata.Builder();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v28);
  uint64_t v314 = (uint64_t)v296 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_27_10();
  uint64_t v313 = v31;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchEntity?);
  uint64_t v33 = OUTLINED_FUNCTION_81(v32);
  MEMORY[0x270FA5388](v33);
  OUTLINED_FUNCTION_184_0();
  uint64_t v311 = v34;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResultType?);
  uint64_t v36 = OUTLINED_FUNCTION_81(v35);
  MEMORY[0x270FA5388](v36);
  OUTLINED_FUNCTION_184_0();
  *(void *)&long long v357 = v37;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  uint64_t v39 = OUTLINED_FUNCTION_81(v38);
  MEMORY[0x270FA5388](v39);
  OUTLINED_FUNCTION_184_0();
  uint64_t v325 = v40;
  uint64_t v41 = OUTLINED_FUNCTION_26_8();
  uint64_t v299 = type metadata accessor for Answer(v41);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v42);
  OUTLINED_FUNCTION_185_0();
  uint64_t v298 = v43;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v44);
  OUTLINED_FUNCTION_43_4();
  uint64_t v310 = v45;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v46);
  OUTLINED_FUNCTION_27_10();
  uint64_t v330 = (void *)v47;
  uint64_t v319 = type metadata accessor for SearchGlobalEntity();
  OUTLINED_FUNCTION_1();
  uint64_t v301 = v48;
  MEMORY[0x270FA5388](v49);
  OUTLINED_FUNCTION_184_0();
  uint64_t v300 = v50;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
  uint64_t v52 = OUTLINED_FUNCTION_81(v51);
  MEMORY[0x270FA5388](v52);
  OUTLINED_FUNCTION_184_0();
  uint64_t v309 = v53;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  uint64_t v55 = OUTLINED_FUNCTION_81(v54);
  MEMORY[0x270FA5388](v55);
  OUTLINED_FUNCTION_184_0();
  uint64_t v318 = v56;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_AppEntity?);
  uint64_t v58 = OUTLINED_FUNCTION_81(v57);
  MEMORY[0x270FA5388](v58);
  OUTLINED_FUNCTION_184_0();
  uint64_t v324 = v59;
  OUTLINED_FUNCTION_26_8();
  uint64_t v331 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AppEntity();
  OUTLINED_FUNCTION_1();
  uint64_t v307 = v60;
  MEMORY[0x270FA5388](v61);
  OUTLINED_FUNCTION_185_0();
  uint64_t v320 = v62;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v63);
  long long v306 = (char *)v296 - v64;
  OUTLINED_FUNCTION_26_8();
  uint64_t v305 = type metadata accessor for GlobalItem();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v65);
  OUTLINED_FUNCTION_185_0();
  uint64_t v308 = v66;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v67);
  OUTLINED_FUNCTION_27_10();
  uint64_t v349 = v68;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IdCardEntity?);
  uint64_t v70 = OUTLINED_FUNCTION_81(v69);
  MEMORY[0x270FA5388](v70);
  OUTLINED_FUNCTION_64_4(v71, v296[0]);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v73 = OUTLINED_FUNCTION_81(v72);
  MEMORY[0x270FA5388](v73);
  uint64_t v302 = (uint8_t *)v296 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v75);
  uint64_t v334 = (uint64_t)v296 - v76;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v77);
  OUTLINED_FUNCTION_43_4();
  uint64_t v351 = v78;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v79);
  uint64_t v337 = (uint64_t)v296 - v80;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v81);
  uint64_t v304 = (char *)v296 - v82;
  OUTLINED_FUNCTION_26_8();
  uint64_t v352 = (uint8_t *)type metadata accessor for IntentFile();
  OUTLINED_FUNCTION_1();
  uint64_t v335 = v83;
  MEMORY[0x270FA5388](v84);
  uint64_t v333 = (char *)v296 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v86);
  OUTLINED_FUNCTION_27_10();
  v296[1] = v87;
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
  uint64_t v89 = OUTLINED_FUNCTION_81(v88);
  MEMORY[0x270FA5388](v89);
  OUTLINED_FUNCTION_184_0();
  uint64_t v323 = v90;
  uint64_t v91 = OUTLINED_FUNCTION_26_8();
  uint64_t v322 = type metadata accessor for PreExtractedCard(v91);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v92);
  OUTLINED_FUNCTION_185_0();
  uint64_t v297 = v93;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v94);
  OUTLINED_FUNCTION_27_10();
  uint64_t v328 = v95;
  uint64_t v96 = OUTLINED_FUNCTION_26_8();
  uint64_t v321 = type metadata accessor for Photo(v96);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v97);
  OUTLINED_FUNCTION_185_0();
  uint64_t v340 = (uint64_t *)v98;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v99);
  OUTLINED_FUNCTION_27_10();
  uint64_t v329 = (void *)v100;
  uint64_t v101 = OUTLINED_FUNCTION_26_8();
  uint64_t v358 = type metadata accessor for SearchResultItem(v101);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v102);
  OUTLINED_FUNCTION_185_0();
  uint64_t v355 = v103;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v104);
  uint64_t v332 = (uint64_t)v296 - v105;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v106);
  uint64_t v108 = (char *)v296 - v107;
  uint64_t v109 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v110);
  OUTLINED_FUNCTION_185_0();
  uint64_t v341 = v111;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v112);
  uint64_t v303 = (uint64_t)v296 - v113;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v114);
  OUTLINED_FUNCTION_43_4();
  uint64_t v317 = v115;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v116);
  uint64_t v118 = (char *)v296 - v117;
  SearchResultItem.associatedValue.getter((uint64_t)&v365);
  uint64_t v119 = *((void *)&v366 + 1);
  uint64_t v120 = v367;
  __swift_project_boxed_opaque_existential_1(&v365, *((uint64_t *)&v366 + 1));
  uint64_t v121 = (*(uint64_t (**)(uint64_t, uint64_t))(v120 + 32))(v119, v120);
  uint64_t v123 = v122;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v365);
  swift_bridgeObjectRelease();
  *uint64_t v7 = v121;
  v7[1] = v123;
  uint64_t v124 = (int *)type metadata accessor for SearchEntity.Builder(0);
  uint64_t v125 = (uint64_t)v7 + v124[5];
  outlined destroy of PQAVerificationModelProtocol?(v125, &demangling cache variable for type metadata for SearchResult?);
  outlined init with copy of SearchEntity(v5, v125, (void (*)(void))type metadata accessor for SearchResult);
  OUTLINED_FUNCTION_120_3();
  *(void *)&long long v354 = v109;
  __swift_storeEnumTagSinglePayload(v126, v127, v128, v109);
  uint64_t v129 = v124[12];
  long long v360 = v7;
  uint64_t v130 = (uint64_t *)((char *)v7 + v129);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *uint64_t v130 = v356;
  v130[1] = v2;
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v131 = type metadata accessor for Logger();
  uint64_t v132 = __swift_project_value_buffer(v131, (uint64_t)static Logging.search);
  uint64_t v359 = v5;
  outlined init with copy of SearchEntity(v5, (uint64_t)v118, (void (*)(void))type metadata accessor for SearchResult);
  uint64_t v133 = v361;
  id v134 = (id)v361;
  uint64_t v353 = v132;
  uint64_t v135 = Logger.logObject.getter();
  uint64_t v136 = v133;
  os_log_type_t v137 = static os_log_type_t.info.getter();
  BOOL v138 = os_log_type_enabled(v135, v137);
  uint64_t v139 = (uint8_t *)MEMORY[0x263F8EE58];
  *(void *)&long long v356 = v134;
  if (v138)
  {
    uint64_t v350 = v124;
    uint64_t v140 = swift_slowAlloc();
    *(void *)&long long v365 = OUTLINED_FUNCTION_13_1();
    *(_DWORD *)uint64_t v140 = 134218242;
    if (v136)
    {
      uint64_t v141 = (void *)v356;
      unint64_t v142 = outlined bridged method (pb) of @objc SFCard.cardSections.getter((void *)v356);
      if (v142)
      {
        if (v142 >> 62) {
          uint64_t v143 = _CocoaArrayWrapper.endIndex.getter();
        }
        else {
          uint64_t v143 = *(void *)((v142 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v141 = (void *)v356;

        swift_bridgeObjectRelease();
      }
      else
      {

        uint64_t v143 = 0;
      }
    }
    else
    {
      uint64_t v143 = 0;
      uint64_t v141 = (void *)v356;
    }
    v364[0].n128_u64[0] = v143;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v140 + 12) = 2080;
    SearchResultItem.type.getter((char *)v364);
    unint64_t v144 = SearchResultKey.rawValue.getter();
    uint64_t v136 = v145;
    v364[0].n128_u64[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v144, v145, (uint64_t *)&v365);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of SearchEntity((uint64_t)v118, (void (*)(void))type metadata accessor for SearchResult);
    _os_log_impl(&dword_257DC6000, v135, v137, "[VISUAL] Create SearchEntity with %ld cardSection(s) for searchResult: %s", (uint8_t *)v140, 0x16u);
    uint64_t v139 = (uint8_t *)MEMORY[0x263F8EE58];
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();

    uint64_t v124 = v350;
  }
  else
  {

    outlined destroy of SearchEntity((uint64_t)v118, (void (*)(void))type metadata accessor for SearchResult);
  }
  uint64_t v146 = v359;
  outlined init with copy of SearchEntity(v359, (uint64_t)v108, (void (*)(void))type metadata accessor for SearchResultItem);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v148 = type metadata accessor for HotelReservation;
  uint64_t v149 = (uint8_t *)v357;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v150 = type metadata accessor for MobileSMSDocument;
      goto LABEL_30;
    case 2:
      uint64_t v150 = type metadata accessor for CalendarEvent;
      goto LABEL_30;
    case 3:
      uint64_t v151 = v329;
      outlined init with take of SearchSpotlightEntity((uint64_t)v108, (uint64_t)v329, (void (*)(void))type metadata accessor for Photo);
      uint64_t v152 = v323;
      outlined init with copy of SearchAppEntity?((uint64_t)v151 + *(int *)(v321 + 72), v323, &demangling cache variable for type metadata for PreExtractedCard?);
      OUTLINED_FUNCTION_53_2(v152, 1, v322);
      if (v287)
      {
        outlined destroy of PQAVerificationModelProtocol?(v152, &demangling cache variable for type metadata for PreExtractedCard?);
        static SearchEntity.buildSearchableItemEntity(with:result:card:)((uint64_t)v360, v146, (void *)v361);
LABEL_99:
        unint64_t v277 = type metadata accessor for Photo;
        goto LABEL_100;
      }
      outlined init with take of SearchSpotlightEntity(v152, v328, (void (*)(void))type metadata accessor for PreExtractedCard);
      OUTLINED_FUNCTION_78_4();
      outlined destroy of PQAVerificationModelProtocol?(v152, &demangling cache variable for type metadata for SearchResultType?);
      type metadata accessor for SearchResultType();
      OUTLINED_FUNCTION_7_2();
      uint64_t v246 = OUTLINED_FUNCTION_85_4();
      v247(v246);
      id v248 = OUTLINED_FUNCTION_60_5();
      uint64_t v249 = (uint64_t)v304;
      CSSearchableItem.asIntentFile()();

      uint64_t v149 = v352;
      __swift_storeEnumTagSinglePayload(v249, 0, 1, (uint64_t)v352);
      OUTLINED_FUNCTION_53_2(v249, 1, (uint64_t)v149);
      if (v287)
      {
        outlined destroy of PQAVerificationModelProtocol?(v249, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
        uint64_t v288 = (void *)Logger.logObject.getter();
        os_log_type_t v289 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_51_1(v289))
        {
          *(_WORD *)OUTLINED_FUNCTION_55() = 0;
          OUTLINED_FUNCTION_56(&dword_257DC6000, v290, v291, "found nil encoded CSSI when trying to unwrap IDCard document");
          OUTLINED_FUNCTION_34();
        }

        outlined destroy of SearchEntity(v328, (void (*)(void))type metadata accessor for PreExtractedCard);
        goto LABEL_99;
      }
      OUTLINED_FUNCTION_107_3();
      OUTLINED_FUNCTION_58_1();
      v292();
      outlined init with copy of SearchEntity(v328, v297, (void (*)(void))type metadata accessor for PreExtractedCard);
      OUTLINED_FUNCTION_64_0();
      v293();
      OUTLINED_FUNCTION_111_4();
      uint64_t v255 = v296[2];
      IdCardEntity.init(preExtractedCard:card:encodedSearchableItem:)();
      uint64_t v294 = OUTLINED_FUNCTION_83_1();
      v295(v294);
      outlined destroy of SearchEntity(v328, (void (*)(void))type metadata accessor for PreExtractedCard);
      outlined destroy of SearchEntity((uint64_t)v329, (void (*)(void))type metadata accessor for Photo);
      uint64_t v274 = (uint64_t)v360 + v124[14];
      uint64_t v275 = &demangling cache variable for type metadata for IdCardEntity?;
LABEL_86:
      uint64_t v276 = v255;
LABEL_93:
      outlined assign with take of SearchResultItem?(v276, v274, v275);
LABEL_48:
      type metadata accessor for NSUserDefaults();
      if (static NSUserDefaults.forceContentHydration.getter())
      {
        uint64_t v162 = v355;
        outlined init with copy of SearchEntity(v146, v355, (void (*)(void))type metadata accessor for SearchResultItem);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v163 = v342;
            outlined init with take of SearchSpotlightEntity(v162, v342, (void (*)(void))type metadata accessor for EmailDocument);
            uint64_t v164 = (uint64_t)v360;
            *((unsigned char *)v360 + v124[17]) = 0;
            _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type EmailDocument and conformance EmailDocument, (void (*)(uint64_t))type metadata accessor for EmailDocument);
            uint64_t v165 = v163;
            Encodable.json()();
            OUTLINED_FUNCTION_93_4();
            uint64_t v166 = type metadata accessor for EmailDocument;
            goto LABEL_56;
          case 1u:
            uint64_t v163 = v344;
            outlined init with take of SearchSpotlightEntity(v162, v344, (void (*)(void))type metadata accessor for MobileSMSDocument);
            uint64_t v164 = (uint64_t)v360;
            *((unsigned char *)v360 + v124[17]) = 2;
            _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type MobileSMSDocument and conformance MobileSMSDocument, (void (*)(uint64_t))type metadata accessor for MobileSMSDocument);
            uint64_t v165 = v163;
            Encodable.json()();
            OUTLINED_FUNCTION_93_4();
            uint64_t v166 = type metadata accessor for MobileSMSDocument;
            goto LABEL_56;
          case 3u:
            uint64_t v175 = v340;
            outlined init with take of SearchSpotlightEntity(v162, (uint64_t)v340, (void (*)(void))type metadata accessor for Photo);
            uint64_t v176 = (uint64_t)v360;
            *((unsigned char *)v360 + v124[17]) = 4;
            uint64_t v178 = *v175;
            uint64_t v177 = v175[1];
            swift_bridgeObjectRetain();
            outlined destroy of SearchEntity((uint64_t)v175, (void (*)(void))type metadata accessor for Photo);
            uint64_t v179 = (void *)(v176 + v124[18]);
            swift_bridgeObjectRelease();
            *uint64_t v179 = v178;
            v179[1] = v177;
            break;
          case 4u:
            uint64_t v163 = v346;
            outlined init with take of SearchSpotlightEntity(v162, v346, (void (*)(void))type metadata accessor for NoteDocument);
            uint64_t v164 = (uint64_t)v360;
            *((unsigned char *)v360 + v124[17]) = 3;
            _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type NoteDocument and conformance NoteDocument, (void (*)(uint64_t))type metadata accessor for NoteDocument);
            uint64_t v165 = v163;
            Encodable.json()();
            OUTLINED_FUNCTION_93_4();
            uint64_t v166 = type metadata accessor for NoteDocument;
LABEL_56:
            outlined destroy of SearchEntity(v163, (void (*)(void))v166);
            uint64_t v180 = (uint64_t *)(v164 + v124[18]);
            swift_bridgeObjectRelease();
            *uint64_t v180 = v165;
            v180[1] = (uint64_t)v149;
            break;
          case 0xBu:
            uint64_t v181 = v124;
            uint64_t v182 = *(void **)(v162 + 16);
            id v183 = objc_msgSend(v182, sel_attributeSet);
            id v184 = objc_msgSend(v183, sel_URL);

            if (v184)
            {
              uint64_t v185 = v338;
              static URL._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v186 = 0;
            }
            else
            {
              uint64_t v186 = 1;
              uint64_t v185 = v338;
            }
            uint64_t v187 = v339;
            OUTLINED_FUNCTION_69_5(v185, v186);
            uint64_t v236 = v348;
            outlined init with take of SearchResultItem?(v185, v348, &demangling cache variable for type metadata for URL?);
            if (__swift_getEnumTagSinglePayload(v236, 1, v187))
            {

              swift_bridgeObjectRelease();
              outlined destroy of PQAVerificationModelProtocol?(v236, &demangling cache variable for type metadata for URL?);
            }
            else
            {
              uint64_t v238 = v315;
              uint64_t v237 = v316;
              OUTLINED_FUNCTION_81_3();
              OUTLINED_FUNCTION_64_0();
              v239();
              outlined destroy of PQAVerificationModelProtocol?(v236, &demangling cache variable for type metadata for URL?);
              uint64_t v240 = URL.absoluteString.getter();
              uint64_t v241 = v187;
              uint64_t v243 = v242;

              swift_bridgeObjectRelease();
              (*(void (**)(uint64_t, uint64_t))(v237 + 8))(v238, v241);
              uint64_t v244 = (uint64_t)v360;
              *((unsigned char *)v360 + v181[17]) = 1;
              uint64_t v245 = (uint64_t *)(v244 + v181[18]);
              swift_bridgeObjectRelease();
              *uint64_t v245 = v240;
              v245[1] = v243;
            }
            break;
          default:
            uint64_t v167 = v146;
            uint64_t v168 = v341;
            outlined init with copy of SearchEntity(v167, v341, (void (*)(void))type metadata accessor for SearchResult);
            uint64_t v169 = Logger.logObject.getter();
            os_log_type_t v170 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v169, v170))
            {
              char v171 = (uint8_t *)OUTLINED_FUNCTION_52_6();
              *(void *)&long long v365 = OUTLINED_FUNCTION_13_1();
              *(_DWORD *)char v171 = 136315138;
              SearchResultItem.type.getter((char *)v364);
              unint64_t v172 = SearchResultKey.rawValue.getter();
              uint64_t v174 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v172, v173, (uint64_t *)&v365);
              OUTLINED_FUNCTION_46_6(v174);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              outlined destroy of SearchEntity(v168, (void (*)(void))type metadata accessor for SearchResult);
              _os_log_impl(&dword_257DC6000, v169, v170, "Not attaching hydrated content for search result type %s", v171, 0xCu);
              swift_arrayDestroy();
              OUTLINED_FUNCTION_34();
              OUTLINED_FUNCTION_34();
            }
            else
            {
              outlined destroy of SearchEntity(v168, (void (*)(void))type metadata accessor for SearchResult);
            }

            outlined destroy of SearchEntity(v355, (void (*)(void))type metadata accessor for SearchResultItem);
            break;
        }
      }
      OUTLINED_FUNCTION_119_0();
      return;
    case 4:
      uint64_t v150 = type metadata accessor for NoteDocument;
      goto LABEL_30;
    case 5:
      uint64_t v150 = type metadata accessor for Reminder;
      goto LABEL_30;
    case 6:
      uint64_t v150 = type metadata accessor for PhoneHistory;
      goto LABEL_30;
    case 7:
      uint64_t v150 = type metadata accessor for VoicemailTranscript;
      goto LABEL_30;
    case 8:
      uint64_t v150 = type metadata accessor for JournalEntry;
      goto LABEL_30;
    case 9:
      uint64_t v150 = type metadata accessor for VoiceMemo;
      goto LABEL_30;
    case 10:
      uint64_t v150 = type metadata accessor for Safari;
      goto LABEL_30;
    case 11:

      goto LABEL_33;
    case 12:
      uint64_t v150 = type metadata accessor for WalletTransaction;
      goto LABEL_30;
    case 13:
      uint64_t v150 = type metadata accessor for WalletPass;
      goto LABEL_30;
    case 14:
      uint64_t v149 = v139;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_33:
      swift_bridgeObjectRelease();
      goto LABEL_31;
    case 15:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
      swift_bridgeObjectRelease();
      uint64_t v153 = type metadata accessor for FlightReservation;
      goto LABEL_42;
    case 16:
      goto LABEL_43;
    case 17:
      uint64_t v153 = type metadata accessor for RestaurantReservation;
      goto LABEL_42;
    case 18:
      uint64_t v153 = type metadata accessor for RentalCarReservation;
      goto LABEL_42;
    case 19:
      uint64_t v153 = type metadata accessor for TicketedTransportation;
      goto LABEL_42;
    case 20:
      uint64_t v153 = type metadata accessor for TicketedShow;
      goto LABEL_42;
    case 21:
      uint64_t v153 = type metadata accessor for Appointment;
      goto LABEL_42;
    case 22:
      uint64_t v153 = type metadata accessor for Party;
      goto LABEL_42;
    case 23:
      uint64_t v153 = type metadata accessor for Trip;
LABEL_42:
      uint64_t v148 = v153;
LABEL_43:
      outlined destroy of SearchEntity((uint64_t)v108, (void (*)(void))v148);
      OUTLINED_FUNCTION_78_4();
      outlined destroy of PQAVerificationModelProtocol?(v136, &demangling cache variable for type metadata for SearchResultType?);
      type metadata accessor for SearchResultType();
      OUTLINED_FUNCTION_7_2();
      uint64_t v154 = OUTLINED_FUNCTION_85_4();
      v155(v154);
      id v156 = OUTLINED_FUNCTION_60_5();
      uint64_t v157 = v351;
      CSSearchableItem.asIntentFile()();

      uint64_t v149 = v352;
      __swift_storeEnumTagSinglePayload(v157, 0, 1, (uint64_t)v352);
      OUTLINED_FUNCTION_53_2(v157, 1, (uint64_t)v149);
      if (v287)
      {
        outlined destroy of PQAVerificationModelProtocol?(v157, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
        uint64_t v158 = (void *)Logger.logObject.getter();
        os_log_type_t v159 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_51_1(v159))
        {
          *(_WORD *)OUTLINED_FUNCTION_55() = 0;
          OUTLINED_FUNCTION_56(&dword_257DC6000, v160, v161, "found nil encoded CSSI when trying to unwrap Event document");
          OUTLINED_FUNCTION_34();
        }
      }
      else
      {
        OUTLINED_FUNCTION_107_3();
        OUTLINED_FUNCTION_58_1();
        v188();
        outlined init with copy of SearchEntity(v146, v332, (void (*)(void))type metadata accessor for SearchResultItem);
        OUTLINED_FUNCTION_64_0();
        v189();
        OUTLINED_FUNCTION_111_4();
        EventEntity.init(item:card:encodedSearchableItem:)();
        uint64_t v190 = OUTLINED_FUNCTION_83_1();
        v191(v190);
        long long v361 = v365;
        long long v356 = v367;
        long long v357 = v366;
        long long v354 = v368;
        uint64_t v146 = v359;
        uint64_t v192 = v369;
        uint64_t v149 = v370;
        int v193 = (char *)v360 + v124[13];
        outlined consume of EventEntity?(*(void *)v193, *((void *)v193 + 1), *((void *)v193 + 2), *((void *)v193 + 3), *((void *)v193 + 4), *((void *)v193 + 5), *((void *)v193 + 6), *((void *)v193 + 7), *((void *)v193 + 8), *((void *)v193 + 9));
        long long v194 = v357;
        *(_OWORD *)int v193 = v361;
        *((_OWORD *)v193 + 1) = v194;
        long long v195 = v354;
        *((_OWORD *)v193 + 2) = v356;
        *((_OWORD *)v193 + 3) = v195;
        *((void *)v193 + 8) = v192;
        *((void *)v193 + 9) = v149;
      }
      goto LABEL_48;
    case 24:
      *(void *)&long long v361 = *(void *)&v108[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]))
                                                 + 48)];
      uint64_t v196 = v349;
      outlined init with take of SearchSpotlightEntity((uint64_t)v108, v349, (void (*)(void))type metadata accessor for GlobalItem);
      uint64_t v197 = (uint64_t)v360 + v124[6];
      outlined destroy of PQAVerificationModelProtocol?(v197, &demangling cache variable for type metadata for SearchResultType?);
      uint64_t v198 = *MEMORY[0x263F5B7A0];
      uint64_t v199 = type metadata accessor for SearchResultType();
      OUTLINED_FUNCTION_7_2();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v200 + 104))(v197, v198, v199);
      OUTLINED_FUNCTION_69_5(v197, 0);
      uint64_t v201 = v324;
      GlobalItem.getParsecEntity()(v324);
      uint64_t v202 = OUTLINED_FUNCTION_88_4();
      OUTLINED_FUNCTION_53_2(v202, v203, v331);
      if (v287)
      {
        outlined destroy of PQAVerificationModelProtocol?(v201, &demangling cache variable for type metadata for Apple_Parsec_Siri_V2alpha_AppEntity?);
        uint64_t v204 = v308;
        outlined init with copy of SearchEntity(v196, v308, (void (*)(void))type metadata accessor for GlobalItem);
        unint64_t v205 = Logger.logObject.getter();
        os_log_type_t v206 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v205, v206))
        {
          uint64_t v207 = (_DWORD *)OUTLINED_FUNCTION_52_6();
          uint64_t v208 = OUTLINED_FUNCTION_13_1();
          uint64_t v350 = v124;
          *(void *)&long long v365 = v208;
          *uint64_t v207 = 136315138;
          uint64_t v209 = GlobalItem.description.getter();
          uint64_t v211 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v209, v210, (uint64_t *)&v365);
          OUTLINED_FUNCTION_46_6(v211);
          uint64_t v146 = v359;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined destroy of SearchEntity(v204, (void (*)(void))type metadata accessor for GlobalItem);
          OUTLINED_FUNCTION_106_3(&dword_257DC6000, v212, v213, "No ParsecEntity available to build SearchGlobalEntity from result: %s");
          swift_arrayDestroy();
          uint64_t v124 = v350;
          OUTLINED_FUNCTION_34();
          OUTLINED_FUNCTION_34();
        }
        else
        {
          outlined destroy of SearchEntity(v204, (void (*)(void))type metadata accessor for GlobalItem);
        }

        uint64_t v254 = v318;
        uint64_t v149 = (uint8_t *)v319;
        uint64_t v255 = v334;
        MEMORY[0x270FA5388](v268);
        SearchGlobalEntity.init(_:)();
      }
      else
      {
        uint64_t v251 = v306;
        uint64_t v250 = v307;
        OUTLINED_FUNCTION_115_3();
        OUTLINED_FUNCTION_58_1();
        v252();
        OUTLINED_FUNCTION_64_0();
        v253();
        *(void *)&long long v357 = *(void *)(v196 + 32);
        outlined init with copy of SearchAppEntity?(v196 + *(int *)(v305 + 28), v309, &demangling cache variable for type metadata for GlobalDialog?);
        swift_bridgeObjectRetain();
        uint64_t v254 = v318;
        SearchGlobalEntity.init(entity:domain:isLowConfidenceKnowledge:dialog:)();
        (*(void (**)(char *, uint64_t))(v250 + 8))(v251, v331);
        uint64_t v149 = (uint8_t *)v319;
        uint64_t v255 = v334;
      }
      uint64_t v269 = (uint64_t)v360;
      outlined assign with take of SearchResultItem?(v254, (uint64_t)v360 + v124[7], &demangling cache variable for type metadata for SearchGlobalEntity?);
      IntentFile.init(experiences:)(v361, v255);
      if (!__swift_getEnumTagSinglePayload(v269 + v124[7], 1, (uint64_t)v149))
      {
        uint64_t v271 = v300;
        uint64_t v270 = v301;
        OUTLINED_FUNCTION_74_4();
        OUTLINED_FUNCTION_64_0();
        v272();
        outlined init with copy of SearchAppEntity?(v334, v337, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
        SearchGlobalEntity.experienceFile.setter();
        uint64_t v273 = v271;
        uint64_t v255 = v334;
        (*(void (**)(uint64_t, uint8_t *))(v270 + 8))(v273, v149);
      }
      outlined destroy of SearchEntity(v349, (void (*)(void))type metadata accessor for GlobalItem);
      uint64_t v274 = (uint64_t)v360 + v124[16];
      uint64_t v275 = (uint64_t *)&demangling cache variable for type metadata for IntentFile?;
      goto LABEL_86;
    case 25:
      uint64_t v214 = *(void *)v108;
      uint64_t v149 = (uint8_t *)*((void *)v108 + 1);
      uint64_t v216 = *((void *)v108 + 2);
      uint64_t v215 = *((void *)v108 + 3);
      uint64_t v217 = *((void *)v108 + 5);
      uint64_t v351 = *((void *)v108 + 4);
      uint64_t v352 = (uint8_t *)v214;
      *(void *)&long long v357 = *((void *)v108 + 7);
      uint64_t v350 = v124;
      OUTLINED_FUNCTION_78_4();
      outlined destroy of PQAVerificationModelProtocol?(v136, &demangling cache variable for type metadata for SearchResultType?);
      uint64_t v218 = *MEMORY[0x263F5B7B0];
      uint64_t v219 = type metadata accessor for SearchResultType();
      OUTLINED_FUNCTION_7_2();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v220 + 104))(v136, v218, v219);
      OUTLINED_FUNCTION_110_3();
      uint64_t v221 = v336;
      SearchAppEntity.init()();
      uint64_t v222 = v326;
      outlined init with copy of SearchEntity(v221, v326, (void (*)(void))type metadata accessor for SearchAppEntity);
      *(void *)&long long v365 = v216;
      *((void *)&v365 + 1) = v215;
      swift_bridgeObjectRetain();
      EntityProperty.wrappedValue.setter();
      outlined destroy of SearchEntity(v222, (void (*)(void))type metadata accessor for SearchAppEntity);
      outlined init with copy of SearchEntity(v221, v222, (void (*)(void))type metadata accessor for SearchAppEntity);
      *(void *)&long long v365 = v351;
      *((void *)&v365 + 1) = v217;
      uint64_t v146 = v359;
      swift_bridgeObjectRetain();
      EntityProperty.wrappedValue.setter();
      outlined destroy of SearchEntity(v222, (void (*)(void))type metadata accessor for SearchAppEntity);
      outlined init with copy of SearchEntity(v221, v222, (void (*)(void))type metadata accessor for SearchAppEntity);
      *(void *)&long long v365 = v352;
      *((void *)&v365 + 1) = v149;
      swift_bridgeObjectRetain();
      EntityProperty.wrappedValue.setter();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      outlined destroy of SearchEntity(v222, (void (*)(void))type metadata accessor for SearchAppEntity);
      uint64_t v223 = v327;
      uint64_t v224 = v221 + *(int *)(v327 + 40);
      outlined destroy of PQAVerificationModelProtocol?(v224, &demangling cache variable for type metadata for SearchResult?);
      outlined init with copy of SearchEntity(v146, v224, (void (*)(void))type metadata accessor for SearchResult);
      OUTLINED_FUNCTION_120_3();
      __swift_storeEnumTagSinglePayload(v225, v226, v227, v354);
      if ((void)v361)
      {
        id v228 = (id)v356;
        SFCard.data.getter();
        OUTLINED_FUNCTION_93_4();
      }
      else
      {
        id v228 = 0;
        uint64_t v149 = (uint8_t *)0xF000000000000000;
      }
      uint64_t v265 = v336;
      uint64_t v266 = v336 + *(int *)(v223 + 44);
      outlined consume of Data?(*(void *)v266, *(void *)(v266 + 8));
      *(void *)uint64_t v266 = v228;
      *(void *)(v266 + 8) = v149;
      uint64_t v124 = v350;
      uint64_t v267 = (uint64_t)v360 + v350[10];
      outlined destroy of PQAVerificationModelProtocol?(v267, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      outlined init with copy of SearchEntity(v265, v267, (void (*)(void))type metadata accessor for SearchAppEntity);
      OUTLINED_FUNCTION_69_5(v267, 0);
      outlined destroy of SearchEntity(v265, (void (*)(void))type metadata accessor for SearchAppEntity);
      goto LABEL_48;
    case 26:
      uint64_t v151 = v330;
      outlined init with take of SearchSpotlightEntity((uint64_t)v108, (uint64_t)v330, (void (*)(void))type metadata accessor for Answer);
      uint64_t v229 = v325;
      specialized Collection.first.getter(v151[5], v325);
      OUTLINED_FUNCTION_53_2(v229, 1, v354);
      if (!v287)
      {
        uint64_t v256 = v229;
        uint64_t v257 = v317;
        outlined init with take of SearchSpotlightEntity(v256, v317, (void (*)(void))type metadata accessor for SearchResult);
        uint64_t v258 = v257;
        uint64_t v259 = v303;
        outlined init with copy of SearchEntity(v258, v303, (void (*)(void))type metadata accessor for SearchResult);
        uint64_t v260 = v311;
        SearchEntity.init(result:card:searchString:)(v259, 0, 0, 0);
        type metadata accessor for SearchEntity(0);
        uint64_t v261 = OUTLINED_FUNCTION_88_4();
        OUTLINED_FUNCTION_53_2(v261, v262, v263);
        if (v264)
        {
          outlined destroy of PQAVerificationModelProtocol?(v260, &demangling cache variable for type metadata for SearchEntity?);
          uint64_t v278 = 1;
        }
        else
        {
          EntityProperty.wrappedValue.getter();
          outlined destroy of SearchEntity(v260, (void (*)(void))type metadata accessor for SearchEntity);
          uint64_t v278 = 0;
        }
        uint64_t v279 = type metadata accessor for SearchResultType();
        __swift_storeEnumTagSinglePayload((uint64_t)v149, v278, 1, v279);
        uint64_t v280 = (uint64_t)v360;
        outlined assign with take of SearchResultItem?((uint64_t)v149, (uint64_t)v360 + v124[6], &demangling cache variable for type metadata for SearchResultType?);
        uint64_t v281 = (int *)v312;
        uint64_t v282 = v313;
        *(_OWORD *)(v313 + 32) = 0u;
        *(_OWORD *)(v282 + 48) = 0u;
        *(_OWORD *)uint64_t v282 = 0u;
        *(_OWORD *)(v282 + 16) = 0u;
        OUTLINED_FUNCTION_34_10(v282 + v281[9]);
        *(void *)(v282 + v281[10]) = MEMORY[0x263F8EE78];
        *(void *)(v282 + v281[11]) = 0;
        uint64_t v283 = (void *)(v282 + v281[12]);
        void *v283 = 0;
        v283[1] = 0;
        uint64_t v284 = (void *)(v282 + v281[13]);
        *uint64_t v284 = 0;
        v284[1] = 0;
        *(unsigned char *)(v282 + v281[14]) = 0;
        uint64_t v285 = (void *)(v282 + v281[15]);
        *uint64_t v285 = 0;
        v285[1] = 0;
        closure #2 in closure #1 in SearchEntity.init(result:card:searchString:)((void *)v282, v151, (void *)v361);
        outlined init with copy of SearchEntity(v282, v314, (void (*)(void))type metadata accessor for AnswerMetadata.Builder);
        AnswerMetadata.init(builder:)();
        outlined destroy of SearchEntity(v282, (void (*)(void))type metadata accessor for AnswerMetadata.Builder);
        outlined init with take of SearchResultItem?((uint64_t)&v365, (uint64_t)v363, &demangling cache variable for type metadata for AnswerMetadata?);
        uint64_t v286 = v280 + v124[9];
        outlined init with take of SearchResultItem?(v286, (uint64_t)v364, &demangling cache variable for type metadata for AnswerMetadata?);
        outlined release of AnswerMetadata?(v364);
        outlined init with take of SearchResultItem?((uint64_t)v363, v286, &demangling cache variable for type metadata for AnswerMetadata?);
        outlined init with take of SearchResultItem?((uint64_t)v363, (uint64_t)&v365, &demangling cache variable for type metadata for AnswerMetadata?);
        if (getEnumTag for DataFilter.FilterResult((uint64_t *)&v365) == 1)
        {
          outlined destroy of SearchEntity(v317, (void (*)(void))type metadata accessor for SearchResult);
          outlined destroy of SearchEntity((uint64_t)v151, (void (*)(void))type metadata accessor for Answer);
          uint64_t v149 = v302;
          OUTLINED_FUNCTION_34_10((uint64_t)v302);
        }
        else
        {
          outlined init with take of SearchResultItem?((uint64_t)v363, (uint64_t)v362, &demangling cache variable for type metadata for AnswerMetadata?);
          outlined retain of AnswerMetadata((uint64_t)v362);
          uint64_t v149 = v302;
          EntityProperty.wrappedValue.getter();
          outlined release of AnswerMetadata?(v363);
          outlined destroy of SearchEntity(v317, (void (*)(void))type metadata accessor for SearchResult);
          outlined destroy of SearchEntity((uint64_t)v151, (void (*)(void))type metadata accessor for Answer);
        }
        uint64_t v274 = (uint64_t)v360 + v124[16];
        uint64_t v275 = (uint64_t *)&demangling cache variable for type metadata for IntentFile?;
        uint64_t v276 = (uint64_t)v149;
        goto LABEL_93;
      }
      outlined destroy of PQAVerificationModelProtocol?(v229, &demangling cache variable for type metadata for SearchResult?);
      uint64_t v230 = v310;
      outlined init with copy of SearchEntity((uint64_t)v151, v310, (void (*)(void))type metadata accessor for Answer);
      uint64_t v231 = Logger.logObject.getter();
      os_log_type_t v232 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v231, v232))
      {
        uint64_t v350 = v124;
        uint64_t v149 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v365 = OUTLINED_FUNCTION_13_1();
        *(_DWORD *)uint64_t v149 = 136315138;
        outlined init with copy of SearchEntity(v230, v298, (void (*)(void))type metadata accessor for Answer);
        uint64_t v233 = String.init<A>(describing:)();
        uint64_t v235 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v233, v234, (uint64_t *)&v365);
        OUTLINED_FUNCTION_46_6(v235);
        uint64_t v124 = v350;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined destroy of SearchEntity(v230, (void (*)(void))type metadata accessor for Answer);
        _os_log_impl(&dword_257DC6000, v231, v232, "Answer missing source result: %s", v149, 0xCu);
        swift_arrayDestroy();
        uint64_t v151 = v330;
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();
      }
      else
      {
        outlined destroy of SearchEntity(v230, (void (*)(void))type metadata accessor for Answer);
      }

      unint64_t v277 = type metadata accessor for Answer;
LABEL_100:
      outlined destroy of SearchEntity((uint64_t)v151, (void (*)(void))v277);
      goto LABEL_48;
    default:
      uint64_t v150 = type metadata accessor for EmailDocument;
LABEL_30:
      outlined destroy of SearchEntity((uint64_t)v108, (void (*)(void))v150);
LABEL_31:
      static SearchEntity.buildSearchableItemEntity(with:result:card:)((uint64_t)v360, v146, (void *)v361);
      goto LABEL_48;
  }
}

uint64_t static SearchEntity.buildSearchableItemEntity(with:result:card:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for SearchResult(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for SearchAppEntity(0);
  uint64_t v12 = MEMORY[0x270FA5388](v47);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v46 - v15;
  id v17 = *(id *)(a2 + *(int *)(v6 + 20));
  if (SearchResult.hasAssociatedAppEntity.getter())
  {
    uint64_t v18 = a1;
    SearchAppEntity.init()();
    uint64_t v19 = CSSearchableItem.title.getter();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    *((void *)v16 + 5) = v19;
    *((void *)v16 + 6) = v21;
    outlined init with copy of SearchEntity((uint64_t)v16, (uint64_t)v14, (void (*)(void))type metadata accessor for SearchAppEntity);
    uint64_t result = outlined bridged method (pb) of @objc CSSearchableItem.bundleID.getter(v17);
    if (v23)
    {
      uint64_t v48 = result;
      uint64_t v49 = v23;
      EntityProperty.wrappedValue.setter();
      outlined destroy of SearchEntity((uint64_t)v14, (void (*)(void))type metadata accessor for SearchAppEntity);
      uint64_t v24 = CSSearchableItem.associatedAppEntityId.getter();
      uint64_t v26 = v47;
      if (v25)
      {
        uint64_t v48 = v24;
        uint64_t v49 = v25;
        EntityProperty.wrappedValue.setter();
      }
      uint64_t v27 = CSSearchableItem.associatedAppEntityTypeId.getter();
      if (v28)
      {
        uint64_t v48 = v27;
        uint64_t v49 = v28;
        EntityProperty.wrappedValue.setter();
      }
      uint64_t v29 = (uint64_t)&v16[*(int *)(v26 + 40)];
      outlined destroy of PQAVerificationModelProtocol?(v29, &demangling cache variable for type metadata for SearchResult?);
      outlined init with copy of SearchEntity(a2, v29, (void (*)(void))type metadata accessor for SearchResult);
      __swift_storeEnumTagSinglePayload(v29, 0, 1, v6);
      if (a3)
      {
        id v30 = a3;
        uint64_t v31 = SFCard.data.getter();
        unint64_t v33 = v32;
      }
      else
      {
        uint64_t v31 = 0;
        unint64_t v33 = 0xF000000000000000;
      }
      uint64_t v40 = &v16[*(int *)(v26 + 44)];
      outlined consume of Data?(*(void *)v40, *((void *)v40 + 1));

      *(void *)uint64_t v40 = v31;
      *((void *)v40 + 1) = v33;
      uint64_t v41 = type metadata accessor for SearchEntity.Builder(0);
      uint64_t v42 = v18 + *(int *)(v41 + 24);
      outlined destroy of PQAVerificationModelProtocol?(v42, &demangling cache variable for type metadata for SearchResultType?);
      uint64_t v43 = *MEMORY[0x263F5B7B0];
      uint64_t v44 = type metadata accessor for SearchResultType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 104))(v42, v43, v44);
      __swift_storeEnumTagSinglePayload(v42, 0, 1, v44);
      uint64_t v45 = v18 + *(int *)(v41 + 40);
      outlined destroy of PQAVerificationModelProtocol?(v45, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      outlined init with copy of SearchEntity((uint64_t)v16, v45, (void (*)(void))type metadata accessor for SearchAppEntity);
      __swift_storeEnumTagSinglePayload(v45, 0, 1, v26);
      return outlined destroy of SearchEntity((uint64_t)v16, (void (*)(void))type metadata accessor for SearchAppEntity);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v34 = type metadata accessor for SearchEntity.Builder(0);
    uint64_t v35 = a1;
    uint64_t v36 = a1 + *(int *)(v34 + 24);
    outlined destroy of PQAVerificationModelProtocol?(v36, &demangling cache variable for type metadata for SearchResultType?);
    uint64_t v37 = *MEMORY[0x263F5B7B8];
    uint64_t v38 = type metadata accessor for SearchResultType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v36, v37, v38);
    __swift_storeEnumTagSinglePayload(v36, 0, 1, v38);
    outlined init with copy of SearchEntity(a2, (uint64_t)v8, (void (*)(void))type metadata accessor for SearchResult);
    id v39 = a3;
    SearchSpotlightEntity.init(result:card:)();

    return outlined assign with take of SearchResultItem?((uint64_t)v11, v35 + *(int *)(v34 + 32), (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
  }
  return result;
}

uint64_t closure #1 in closure #1 in SearchEntity.init(result:card:searchString:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  SearchGlobalEntity.Builder.id.setter();
  swift_bridgeObjectRetain();
  SearchGlobalEntity.Builder.domain.setter();
  swift_bridgeObjectRetain();
  SearchGlobalEntity.Builder.text.setter();
  uint64_t v6 = type metadata accessor for GlobalItem();
  SearchGlobalEntity.Builder.lowConfidenceKnowledge.setter();
  outlined init with copy of SearchAppEntity?(a2 + *(int *)(v6 + 28), (uint64_t)v5, &demangling cache variable for type metadata for GlobalDialog?);
  return SearchGlobalEntity.Builder.dialog.setter();
}

uint64_t closure #2 in closure #1 in SearchEntity.init(result:card:searchString:)(void *a1, void *a2, void *a3)
{
  uint64_t v6 = type metadata accessor for SearchResult(0);
  uint64_t v62 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v64 = (uint64_t)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a2;
  uint64_t v15 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = v14;
  a1[1] = v15;
  uint64_t v16 = a2[2];
  uint64_t v17 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = v16;
  a1[3] = v17;
  uint64_t v18 = a2[5];
  uint64_t v61 = type metadata accessor for AnswerMetadata.Builder();
  uint64_t v19 = *(int *)(v61 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v19) = v18;
  uint64_t v20 = v18;
  specialized Collection.first.getter(v18, (uint64_t)v13);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6) == 1)
  {
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)v13, &demangling cache variable for type metadata for SearchResult?);
    uint64_t v21 = 0;
    uint64_t v22 = 0;
  }
  else
  {
    id v23 = *(id *)&v13[*(int *)(v6 + 20)];
    outlined destroy of SearchEntity((uint64_t)v13, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v21 = CSSearchableItem.title.getter();
    uint64_t v22 = v24;
  }
  swift_bridgeObjectRelease();
  a1[4] = v21;
  a1[5] = v22;
  uint64_t v25 = *(void *)(v20 + 16);
  uint64_t v26 = MEMORY[0x263F8EE78];
  if (v25)
  {
    uint64_t v63 = v6;
    uint64_t v57 = v10;
    uint64_t v58 = a3;
    uint64_t v59 = a2;
    uint64_t v60 = a1;
    uint64_t v68 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v27 = *(unsigned __int8 *)(v62 + 80);
    v56[1] = v20;
    uint64_t v28 = v20 + ((v27 + 32) & ~v27);
    uint64_t v62 = *(void *)(v62 + 72);
    uint64_t v26 = v68;
    do
    {
      uint64_t v29 = v64;
      outlined init with copy of SearchEntity(v28, v64, (void (*)(void))type metadata accessor for SearchResult);
      uint64_t v30 = outlined bridged method (ob) of @objc CSSearchableItem.bundleID.getter(*(id *)(v29 + *(int *)(v63 + 20)));
      if (v31) {
        uint64_t v32 = v30;
      }
      else {
        uint64_t v32 = 0;
      }
      if (v31) {
        unint64_t v33 = v31;
      }
      else {
        unint64_t v33 = 0xE000000000000000;
      }
      SearchResultItem.associatedValue.getter((uint64_t)v65);
      uint64_t v34 = v66;
      uint64_t v35 = v67;
      __swift_project_boxed_opaque_existential_1(v65, v66);
      uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 32))(v34, v35);
      uint64_t v38 = v37;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v65);
      outlined destroy of SearchEntity(v29, (void (*)(void))type metadata accessor for SearchResult);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v26 = v68;
      }
      unint64_t v39 = *(void *)(v26 + 16);
      if (v39 >= *(void *)(v26 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v26 = v68;
      }
      *(void *)(v26 + 16) = v39 + 1;
      uint64_t v40 = (void *)(v26 + 32 * v39);
      v40[4] = v32;
      v40[5] = v33;
      v40[6] = v36;
      v40[7] = v38;
      v28 += v62;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    a2 = v59;
    a1 = v60;
    uint64_t v10 = v57;
    a3 = v58;
  }
  swift_bridgeObjectRelease();
  a1[6] = v26;
  uint64_t v41 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = v41;
  uint64_t v42 = Answer.llmConsumableDescription.getter();
  uint64_t v44 = v43;
  uint64_t v45 = (int *)v61;
  uint64_t v46 = (void *)((char *)a1 + *(int *)(v61 + 52));
  swift_bridgeObjectRelease();
  uint64_t *v46 = v42;
  v46[1] = v44;
  unint64_t v47 = swift_bridgeObjectRetain();
  IntentFile.init(experiences:)(v47, (uint64_t)v10);
  outlined assign with take of SearchResultItem?((uint64_t)v10, (uint64_t)a1 + v45[9], (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v48 = v45[11];
  uint64_t v49 = *(void **)((char *)a1 + v48);
  id v50 = a3;

  *(void *)((char *)a1 + v48) = a3;
  uint64_t v51 = (void *)((char *)a2 + *(int *)(type metadata accessor for Answer(0) + 44));
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  uint64_t v54 = (void *)((char *)a1 + v45[15]);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  void *v54 = v53;
  v54[1] = v52;
  return result;
}

void static SearchEntity.transferRepresentation.getter()
{
  OUTLINED_FUNCTION_104_0();
  v39[17] = v0;
  v39[20] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, AnswerMetadata>>, _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchSpotlightEntity>>, _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchGlobalEntity>>));
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_184_0();
  v39[16] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProxyRepresentation<SearchEntity, SearchGlobalEntity>);
  OUTLINED_FUNCTION_1();
  v39[14] = v3;
  v39[15] = v4;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_184_0();
  v39[10] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchGlobalEntity>>);
  OUTLINED_FUNCTION_1();
  v39[12] = v7;
  v39[13] = v6;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_185_0();
  v39[9] = v8;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_27_10();
  v39[11] = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProxyRepresentation<SearchEntity, SearchSpotlightEntity>);
  OUTLINED_FUNCTION_1();
  v39[7] = v11;
  v39[8] = v12;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_184_0();
  v39[5] = v13;
  v39[19] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchSpotlightEntity>>);
  OUTLINED_FUNCTION_1();
  v39[6] = v14;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_185_0();
  v39[4] = v16;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_27_10();
  v39[18] = v18;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProxyRepresentation<SearchEntity, AnswerMetadata>);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_12_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, AnswerMetadata>>);
  OUTLINED_FUNCTION_1();
  v39[3] = v20;
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_3_18();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v39 - v23;
  uint64_t v25 = type metadata accessor for SearchEntity(0);
  uint64_t v26 = _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchEntity and conformance SearchEntity, (void (*)(uint64_t))type metadata accessor for SearchEntity);
  lazy protocol witness table accessor for type AnswerMetadata and conformance AnswerMetadata();
  ProxyRepresentation.init(exporting:)();
  lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type ProxyRepresentation<SearchEntity, AnswerMetadata> and conformance ProxyRepresentation<A, B>, &demangling cache variable for type metadata for ProxyRepresentation<SearchEntity, AnswerMetadata>);
  TransferRepresentation.exportingCondition(_:)();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_100_4();
  v27();
  v39[0] = v24;
  OUTLINED_FUNCTION_58_1();
  v28();
  type metadata accessor for SearchSpotlightEntity(0);
  _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
  v39[1] = v26;
  v39[2] = v25;
  ProxyRepresentation.init(exporting:)();
  lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type ProxyRepresentation<SearchEntity, SearchSpotlightEntity> and conformance ProxyRepresentation<A, B>, &demangling cache variable for type metadata for ProxyRepresentation<SearchEntity, SearchSpotlightEntity>);
  TransferRepresentation.exportingCondition(_:)();
  OUTLINED_FUNCTION_16_1();
  v29();
  OUTLINED_FUNCTION_58_1();
  v30();
  type metadata accessor for SearchGlobalEntity();
  _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchGlobalEntity and conformance SearchGlobalEntity, MEMORY[0x263F5B7E0]);
  ProxyRepresentation.init(exporting:)();
  lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type ProxyRepresentation<SearchEntity, SearchGlobalEntity> and conformance ProxyRepresentation<A, B>, &demangling cache variable for type metadata for ProxyRepresentation<SearchEntity, SearchGlobalEntity>);
  TransferRepresentation.exportingCondition(_:)();
  OUTLINED_FUNCTION_16_1();
  v31();
  OUTLINED_FUNCTION_115_3();
  OUTLINED_FUNCTION_58_1();
  v32();
  OUTLINED_FUNCTION_64_0();
  v33();
  OUTLINED_FUNCTION_64_0();
  v34();
  OUTLINED_FUNCTION_64_0();
  v35();
  TupleTransferRepresentation.init(_:)();
  OUTLINED_FUNCTION_16_1();
  v36();
  OUTLINED_FUNCTION_26_2();
  v37();
  OUTLINED_FUNCTION_100_4();
  v38();
  OUTLINED_FUNCTION_119_0();
}

uint64_t specialized implicit closure #1 in static SearchEntity.transferRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  EntityProperty.wrappedValue.getter();
  outlined init with take of SearchResultItem?((uint64_t)&v3, (uint64_t)v4, &demangling cache variable for type metadata for AnswerMetadata?);
  uint64_t result = getEnumTag for DataFilter.FilterResult(v4);
  if (result != 1) {
    return outlined init with take of SearchResultItem?((uint64_t)v4, a1, &demangling cache variable for type metadata for AnswerMetadata?);
  }
  __break(1u);
  return result;
}

BOOL closure #1 in static SearchEntity.transferRepresentation.getter()
{
  EntityProperty.wrappedValue.getter();
  outlined init with take of SearchResultItem?((uint64_t)&v2, (uint64_t)v3, &demangling cache variable for type metadata for AnswerMetadata?);
  outlined init with take of SearchResultItem?((uint64_t)v3, (uint64_t)v4, &demangling cache variable for type metadata for AnswerMetadata?);
  int Enum = getEnumTag for DataFilter.FilterResult(v4);
  if (Enum != 1) {
    outlined release of AnswerMetadata?(v3);
  }
  return Enum != 1;
}

uint64_t specialized implicit closure #2 in static SearchEntity.transferRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v10 - v6;
  EntityProperty.wrappedValue.getter();
  uint64_t v8 = type metadata accessor for SearchSpotlightEntity(0);
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    outlined init with copy of SearchAppEntity?((uint64_t)v7, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
    outlined init with take of SearchSpotlightEntity((uint64_t)v5, a1, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
    return outlined destroy of PQAVerificationModelProtocol?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
  }
  return result;
}

BOOL closure #2 in static SearchEntity.transferRepresentation.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  EntityProperty.wrappedValue.getter();
  uint64_t v3 = type metadata accessor for SearchSpotlightEntity(0);
  BOOL v4 = __swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) != 1;
  outlined destroy of PQAVerificationModelProtocol?((uint64_t)v2, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
  return v4;
}

uint64_t specialized implicit closure #3 in static SearchEntity.transferRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - v6;
  EntityProperty.wrappedValue.getter();
  uint64_t v8 = type metadata accessor for SearchGlobalEntity();
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    outlined init with copy of SearchAppEntity?((uint64_t)v7, (uint64_t)v5, &demangling cache variable for type metadata for SearchGlobalEntity?);
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, v5, v8);
    return outlined destroy of PQAVerificationModelProtocol?((uint64_t)v7, &demangling cache variable for type metadata for SearchGlobalEntity?);
  }
  return result;
}

BOOL closure #3 in static SearchEntity.transferRepresentation.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  EntityProperty.wrappedValue.getter();
  uint64_t v3 = type metadata accessor for SearchGlobalEntity();
  BOOL v4 = __swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) != 1;
  outlined destroy of PQAVerificationModelProtocol?((uint64_t)v2, &demangling cache variable for type metadata for SearchGlobalEntity?);
  return v4;
}

uint64_t SearchEntity.debugDescription.getter()
{
  uint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for SearchEntity(0);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_62_5();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_18_8();
  EntityProperty.wrappedValue.getter();
  SearchEntity.entityForType(_:)(v2, v16);
  uint64_t v7 = OUTLINED_FUNCTION_97_2();
  v8(v7);
  outlined init with copy of SearchAppEntity?((uint64_t)v16, (uint64_t)&v13, &demangling cache variable for type metadata for Encodable?);
  if (v14)
  {
    outlined init with take of SageSearchClient(&v13, (uint64_t)v15);
    uint64_t v9 = SearchEntity.oms_jsonString(from:)(v15);
    uint64_t v11 = v10;
    outlined init with copy of SearchEntity(v3, v0, (void (*)(void))type metadata accessor for SearchEntity);
    if (!v11) {
      uint64_t v9 = SearchEntity.defaultDescription.getter();
    }
    outlined destroy of SearchEntity(v0, (void (*)(void))type metadata accessor for SearchEntity);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
  else
  {
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)&v13, &demangling cache variable for type metadata for Encodable?);
    uint64_t v9 = SearchEntity.defaultDescription.getter();
  }
  outlined destroy of PQAVerificationModelProtocol?((uint64_t)v16, &demangling cache variable for type metadata for Encodable?);
  return v9;
}

uint64_t SearchEntity.entityForType(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SearchResultType();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v46 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v44 - v16;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v18((char *)&v44 - v16, a1, v12);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v17, v12);
  if (result == *MEMORY[0x263F5B7B0])
  {
    EntityProperty.wrappedValue.getter();
    uint64_t v20 = type metadata accessor for SearchAppEntity(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v20) == 1)
    {
      uint64_t v21 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
      uint64_t v22 = (uint64_t)v11;
LABEL_11:
      uint64_t result = outlined destroy of PQAVerificationModelProtocol?(v22, v21);
      uint64_t v29 = v47;
      *(_OWORD *)unint64_t v47 = 0u;
      *((_OWORD *)v29 + 1) = 0u;
      v29[4] = 0;
      return result;
    }
    uint64_t v24 = v47;
    v47[3] = v20;
    v24[4] = _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
    boxed_opaque_existential_1Tm_0 = __swift_allocate_boxed_opaque_existential_1Tm_0(v24);
    uint64_t v26 = type metadata accessor for SearchAppEntity;
    uint64_t v27 = (uint64_t)v11;
    return outlined init with take of SearchSpotlightEntity(v27, (uint64_t)boxed_opaque_existential_1Tm_0, (void (*)(void))v26);
  }
  if (result == *MEMORY[0x263F5B7A0])
  {
    EntityProperty.wrappedValue.getter();
    uint64_t v23 = type metadata accessor for SearchGlobalEntity();
    if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v23) == 1)
    {
      uint64_t v21 = &demangling cache variable for type metadata for SearchGlobalEntity?;
      uint64_t v22 = (uint64_t)v5;
      goto LABEL_11;
    }
    uint64_t v30 = v47;
    v47[3] = v23;
    v30[4] = _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchGlobalEntity and conformance SearchGlobalEntity, MEMORY[0x263F5B7E0]);
    unint64_t v31 = __swift_allocate_boxed_opaque_existential_1Tm_0(v30);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v31, v5, v23);
  }
  else
  {
    if (result == *MEMORY[0x263F5B7B8])
    {
      EntityProperty.wrappedValue.getter();
      uint64_t v28 = type metadata accessor for SearchSpotlightEntity(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v28) == 1)
      {
        uint64_t v21 = (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?;
        uint64_t v22 = (uint64_t)v8;
        goto LABEL_11;
      }
      unint64_t v33 = v47;
      v47[3] = v28;
      v33[4] = _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
      boxed_opaque_existential_1Tm_0 = __swift_allocate_boxed_opaque_existential_1Tm_0(v33);
      uint64_t v26 = type metadata accessor for SearchSpotlightEntity;
      uint64_t v27 = (uint64_t)v8;
      return outlined init with take of SearchSpotlightEntity(v27, (uint64_t)boxed_opaque_existential_1Tm_0, (void (*)(void))v26);
    }
    if (result == *MEMORY[0x263F5B790]
      || result == *MEMORY[0x263F5B7A8]
      || result == *MEMORY[0x263F5B798])
    {
      uint64_t v32 = v47;
      v47[4] = 0;
      *(_OWORD *)uint64_t v32 = 0u;
      *((_OWORD *)v32 + 1) = 0u;
    }
    else
    {
      if (one-time initialization token for stextension != -1) {
        swift_once();
      }
      uint64_t v34 = type metadata accessor for Logger();
      __swift_project_value_buffer(v34, (uint64_t)static Logging.stextension);
      uint64_t v35 = v46;
      v18(v46, a1, v12);
      uint64_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v49 = v45;
        *(_DWORD *)uint64_t v38 = 136315138;
        uint64_t v39 = SearchResultType.rawValue.getter();
        uint64_t v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v40, &v49);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v41 = *(void (**)(char *, uint64_t))(v13 + 8);
        v41(v35, v12);
        _os_log_impl(&dword_257DC6000, v36, v37, "Unhandled entity type: %s", v38, 0xCu);
        uint64_t v42 = v45;
        swift_arrayDestroy();
        MEMORY[0x25A2C94B0](v42, -1, -1);
        MEMORY[0x25A2C94B0](v38, -1, -1);
      }
      else
      {
        uint64_t v41 = *(void (**)(char *, uint64_t))(v13 + 8);
        v41(v35, v12);
      }

      uint64_t v43 = v47;
      v47[4] = 0;
      *(_OWORD *)uint64_t v43 = 0u;
      *((_OWORD *)v43 + 1) = 0u;
      return ((uint64_t (*)(char *, uint64_t))v41)(v17, v12);
    }
  }
  return result;
}

uint64_t SearchEntity.oms_jsonString(from:)(void *a1)
{
  uint64_t v2 = type metadata accessor for String.Encoding();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = type metadata accessor for JSONEncoder.OutputFormatting();
  MEMORY[0x270FA5388](v3 - 8);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  static JSONEncoder.OutputFormatting.prettyPrinted.getter();
  dispatch thunk of JSONEncoder.outputFormatting.setter();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v4 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v6 = v5;
  static String.Encoding.utf8.getter();
  uint64_t v7 = String.init(data:encoding:)();
  outlined consume of Data._Representation(v4, v6);
  swift_release();
  return v7;
}

uint64_t SearchEntity.defaultDescription.getter()
{
  uint64_t v1 = type metadata accessor for SearchResultType();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SearchEntity(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  SearchEntity.representedEntity.getter();
  if (v21)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppEntity);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CardDisplayable);
    if (swift_dynamicCast())
    {
      uint64_t v8 = *((void *)&v23 + 1);
      if (*((void *)&v23 + 1))
      {
        uint64_t v9 = v24;
        __swift_project_boxed_opaque_existential_1(&v22, *((uint64_t *)&v23 + 1));
        uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
        uint64_t v12 = v11;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v24 = 0;
      long long v22 = 0u;
      long long v23 = 0u;
    }
  }
  else
  {
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)&v20, &demangling cache variable for type metadata for AppEntity?);
    long long v22 = 0u;
    long long v23 = 0u;
    uint64_t v24 = 0;
  }
  outlined destroy of PQAVerificationModelProtocol?((uint64_t)&v22, &demangling cache variable for type metadata for CardDisplayable?);
  uint64_t v10 = 0;
  uint64_t v12 = 0;
LABEL_8:
  outlined init with copy of SearchEntity(v0, (uint64_t)v7, (void (*)(void))type metadata accessor for SearchEntity);
  if (!v12)
  {
    EntityProperty.wrappedValue.getter();
    uint64_t v10 = SearchResultType.rawValue.getter();
    uint64_t v12 = v13;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  outlined destroy of SearchEntity((uint64_t)v7, (void (*)(void))type metadata accessor for SearchEntity);
  *(void *)&long long v22 = 0;
  *((void *)&v22 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  *(void *)&long long v22 = 91;
  *((void *)&v22 + 1) = 0xE100000000000000;
  v14._countAndFlagsBits = v10;
  v14._object = v12;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0x72756F53202D205DLL;
  v15._object = (void *)0xEB000000003A6563;
  String.append(_:)(v15);
  EntityProperty.wrappedValue.getter();
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 979650848;
  v16._object = (void *)0xE400000000000000;
  String.append(_:)(v16);
  EntityProperty.wrappedValue.getter();
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 93;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  return v22;
}

void AppEntity.propertyDescription.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for Mirror();
  OUTLINED_FUNCTION_1();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_12_7();
  *((void *)&v23 + 1) = v2;
  __swift_allocate_boxed_opaque_existential_1Tm_0((uint64_t *)&v22);
  OUTLINED_FUNCTION_51_2();
  v7();
  Mirror.init(reflecting:)();
  Mirror.children.getter();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  swift_retain();
  dispatch thunk of _AnySequenceBox._makeIterator()();
  swift_release();
  dispatch thunk of _AnyIteratorBoxBase.next()();
  if (*((void *)&v24 + 1))
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    do
    {
      long long v20 = v22;
      v21[0] = v23;
      v21[1] = v24;
      long long v9 = v22;
      outlined init with copy of Any((uint64_t)v21, (uint64_t)v19);
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
      outlined destroy of PQAVerificationModelProtocol?((uint64_t)&v20, &demangling cache variable for type metadata for (label: String?, value: Any));
      if (*((void *)&v9 + 1))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v8 = v11;
        }
        unint64_t v10 = *(void *)(v8 + 16);
        if (v10 >= *(void *)(v8 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v8 = v12;
        }
        *(void *)(v8 + 16) = v10 + 1;
        *(_OWORD *)(v8 + 16 * v10 + 32) = v9;
      }
      dispatch thunk of _AnyIteratorBoxBase.next()();
    }
    while (*((void *)&v24 + 1));
  }
  else
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
  }
  swift_release();
  swift_release();
  *(void *)&long long v22 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
  uint64_t v13 = BidirectionalCollection<>.joined(separator:)();
  Swift::String v15 = v14;
  swift_bridgeObjectRelease();
  *(void *)&long long v22 = swift_getDynamicType();
  swift_getMetatypeMetadata();
  *(void *)&long long v22 = String.init<A>(describing:)();
  *((void *)&v22 + 1) = v16;
  v17._countAndFlagsBits = 2314;
  v17._object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  v18._countAndFlagsBits = v13;
  v18._object = v15;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_119_0();
}

double SearchEntity.asNLGEntity.getter@<D0>(void *a1@<X8>)
{
  SearchEntity.representedEntity.getter();
  if (!v13)
  {
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)&v11, &demangling cache variable for type metadata for AppEntity?);
    memset(v10, 0, 40);
    goto LABEL_15;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppEntity);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchNLGEntityConvertible);
  if ((swift_dynamicCast() & 1) == 0)
  {
    memset(v10, 0, 40);
    goto LABEL_15;
  }
  if (!*((void *)&v10[1] + 1))
  {
LABEL_15:
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)v10, &demangling cache variable for type metadata for SearchNLGEntityConvertible?);
    return SearchNLGEntity.init()((uint64_t)a1);
  }
  outlined init with take of SageSearchClient(v10, (uint64_t)v14);
  __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  uint64_t v2 = OUTLINED_FUNCTION_113_4();
  v3(v2);
  SearchEntity.representedEntity.getter();
  outlined assign with take of SearchResultItem?((uint64_t)&v11, (uint64_t)&v10[7] + 8, &demangling cache variable for type metadata for AppEntity?);
  EntityProperty.wrappedValue.getter();
  unint64_t v4 = v12;
  if (!v12) {
    goto LABEL_8;
  }
  uint64_t v5 = v11;
  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
LABEL_8:
    uint64_t v11 = specialized SearchNLGEntityConvertible.documentSource.getter();
    unint64_t v12 = v7;
    EntityProperty.wrappedValue.setter();
  }
  EntityProperty.wrappedValue.getter();
  if (!v11 || (uint64_t v8 = *(void *)(v11 + 16), swift_bridgeObjectRelease(), !v8))
  {
    uint64_t v11 = specialized SearchNLGEntityConvertible.senderNames.getter();
    EntityProperty.wrappedValue.setter();
  }
  memcpy(a1, v10, 0xA0uLL);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return result;
}

uint64_t specialized SearchNLGEntityConvertible.documentSource.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SearchEntity(0);
  outlined init with copy of SearchAppEntity?(v0 + *(int *)(v4 + 84), (uint64_t)v3, &demangling cache variable for type metadata for SearchResult?);
  uint64_t v5 = type metadata accessor for SearchResult(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v5) == 1)
  {
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)v3, &demangling cache variable for type metadata for SearchResult?);
  }
  else
  {
    id v6 = *(id *)&v3[*(int *)(v5 + 20)];
    outlined destroy of SearchEntity((uint64_t)v3, (void (*)(void))type metadata accessor for SearchResult);
    id v7 = objc_msgSend(v6, sel_bundleID);

    if (v7)
    {
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v10 = v9;

      goto LABEL_6;
    }
  }
  uint64_t v8 = 0;
  unint64_t v10 = 0xE000000000000000;
LABEL_6:
  type metadata accessor for LocalIndexClient();
  swift_bridgeObjectRetain();
  uint64_t v11 = static LocalIndexClient.displayName(for:)(v8, v10);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    __swift_project_value_buffer(v14, (uint64_t)static Logging.search);
    swift_bridgeObjectRetain();
    Swift::String v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      Swift::String v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v21 = v18;
      *(_DWORD *)Swift::String v17 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v20 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v10, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_arrayDestroy();
      MEMORY[0x25A2C94B0](v18, -1, -1);
      MEMORY[0x25A2C94B0](v17, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  return v11;
}

uint64_t specialized SearchNLGEntityConvertible.senderNames.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SearchEntity(0);
  outlined init with copy of SearchAppEntity?(v0 + *(int *)(v4 + 84), (uint64_t)v3, &demangling cache variable for type metadata for SearchResult?);
  uint64_t v5 = type metadata accessor for SearchResult(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v5) == 1)
  {
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)v3, &demangling cache variable for type metadata for SearchResult?);
    return 0;
  }
  else
  {
    id v7 = *(id *)&v3[*(int *)(v5 + 20)];
    outlined destroy of SearchEntity((uint64_t)v3, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v6 = CSSearchableItem.senderNames.getter();
  }
  return v6;
}

void SearchEntity.asCATEntity.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for SearchEntity(0);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_16();
  SearchEntity.representedEntity.getter();
  if (v23[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppEntity);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCATEntityConvertible);
    if (swift_dynamicCast())
    {
      if (*((void *)&v25 + 1))
      {
        outlined init with take of SageSearchClient(&v24, (uint64_t)v27);
        uint64_t v6 = v28;
        uint64_t v7 = v29;
        __swift_project_boxed_opaque_existential_1(v27, v28);
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
        SearchEntity.fullSearchEntityDescription.getter();
        uint64_t v9 = v8;
        uint64_t v11 = v10;
        type metadata accessor for SearchCATEntity();
        *(void *)&long long v24 = v9;
        *((void *)&v24 + 1) = v11;
        EntityProperty.wrappedValue.setter();
        SearchEntity.supportSearchEntityDescription.getter();
        *(void *)&long long v24 = v12;
        *((void *)&v24 + 1) = v13;
        EntityProperty.wrappedValue.setter();
        *(void *)&long long v24 = SearchEntity.resultSourceDialogDisplayName.getter();
        *((void *)&v24 + 1) = v14;
        EntityProperty.wrappedValue.setter();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v26 = 0;
      long long v24 = 0u;
      long long v25 = 0u;
    }
  }
  else
  {
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)v23, &demangling cache variable for type metadata for AppEntity?);
    long long v24 = 0u;
    long long v25 = 0u;
    uint64_t v26 = 0;
  }
  outlined destroy of PQAVerificationModelProtocol?((uint64_t)&v24, &demangling cache variable for type metadata for SearchCATEntityConvertible?);
  if (one-time initialization token for stextension != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  __swift_project_value_buffer(v15, (uint64_t)static Logging.stextension);
  outlined init with copy of SearchEntity(v0, v1, (void (*)(void))type metadata accessor for SearchEntity);
  os_log_type_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (_DWORD *)OUTLINED_FUNCTION_52_6();
    *(void *)&long long v24 = OUTLINED_FUNCTION_13_1();
    *uint64_t v18 = 136315138;
    SearchEntity.representedEntity.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppEntity?);
    uint64_t v19 = String.init<A>(describing:)();
    v27[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, (uint64_t *)&v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of SearchEntity(v1, (void (*)(void))type metadata accessor for SearchEntity);
    OUTLINED_FUNCTION_106_3(&dword_257DC6000, v21, v22, "%s does not conform to SearchCATEntityConvertible.");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    outlined destroy of SearchEntity(v1, (void (*)(void))type metadata accessor for SearchEntity);
  }

  SearchCATEntity.init()(v3);
LABEL_13:
  OUTLINED_FUNCTION_119_0();
}

void SearchEntity.fullSearchEntityDescription.getter()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(void);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43[10];

  OUTLINED_FUNCTION_104_0();
  uint64_t v41 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_18();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v11 = type metadata accessor for SearchAppEntity(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_39();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IdCardEntity?);
  uint64_t v14 = OUTLINED_FUNCTION_81(v13);
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_67_5();
  MEMORY[0x270FA5388](v15);
  os_log_type_t v17 = (char *)&v39 - v16;
  uint64_t v18 = type metadata accessor for IdCardEntity();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_97_1();
  uint64_t v42 = v0;
  EntityProperty.wrappedValue.getter();
  unint64_t v20 = v43[0];
  if (!v43[0])
  {
    uint64_t v29 = v41;
    EntityProperty.wrappedValue.getter();
    OUTLINED_FUNCTION_53_2((uint64_t)v17, 1, v18);
    if (v30)
    {
      outlined destroy of PQAVerificationModelProtocol?((uint64_t)v17, &demangling cache variable for type metadata for IdCardEntity?);
      EntityProperty.wrappedValue.getter();
      OUTLINED_FUNCTION_53_2((uint64_t)v10, 1, v11);
      if (v30)
      {
        outlined destroy of PQAVerificationModelProtocol?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
        goto LABEL_9;
      }
      outlined init with take of SearchSpotlightEntity((uint64_t)v10, v2, (void (*)(void))type metadata accessor for SearchAppEntity);
      outlined init with copy of SearchEntity(v2, v1, (void (*)(void))type metadata accessor for SearchAppEntity);
      OUTLINED_FUNCTION_120_3();
      __swift_storeEnumTagSinglePayload(v36, v37, v38, v11);
      SearchEntity.appEntityDescription(appEntity:isFullDescription:)(v1, v29 & 1);
      outlined destroy of PQAVerificationModelProtocol?(v1, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      uint64_t v34 = (void (*)(void))type metadata accessor for SearchAppEntity;
      uint64_t v35 = v2;
    }
    else
    {
      outlined init with take of SearchSpotlightEntity((uint64_t)v17, v4, (void (*)(void))type metadata accessor for IdCardEntity);
      outlined init with copy of SearchEntity(v4, v3, (void (*)(void))type metadata accessor for IdCardEntity);
      OUTLINED_FUNCTION_120_3();
      __swift_storeEnumTagSinglePayload(v31, v32, v33, v18);
      SearchEntity.idCardEntityDescription(idCard:isFullDescription:)(v3);
      outlined destroy of PQAVerificationModelProtocol?(v3, &demangling cache variable for type metadata for IdCardEntity?);
      uint64_t v34 = (void (*)(void))type metadata accessor for IdCardEntity;
      uint64_t v35 = v4;
    }
    outlined destroy of SearchEntity(v35, v34);
    goto LABEL_9;
  }
  uint64_t v22 = v43[8];
  uint64_t v21 = v43[9];
  long long v23 = v43[6];
  unint64_t v40 = v43[7];
  long long v25 = v43[4];
  long long v24 = v43[5];
  uint64_t v27 = v43[2];
  uint64_t v26 = v43[3];
  uint64_t v28 = v43[1];
  SearchEntity.eventEntityDescription(event:isFullDescription:)(v43, v41 & 1);
  outlined consume of EventEntity?(v20, v28, v27, v26, v25, v24, v23, v40, v22, v21);
LABEL_9:
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_119_0();
}

void SearchEntity.supportSearchEntityDescription.getter()
{
}

uint64_t SearchEntity.resultSourceDialogDisplayName.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for SearchResult(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for SearchEntity(0);
  outlined init with copy of SearchAppEntity?(v0 + *(int *)(v7 + 84), (uint64_t)v3, &demangling cache variable for type metadata for SearchResult?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4) == 1)
  {
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)v3, &demangling cache variable for type metadata for SearchResult?);
    return 0;
  }
  else
  {
    outlined init with take of SearchSpotlightEntity((uint64_t)v3, (uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
    SearchResultItem.type.getter(&v12);
    switch(v12)
    {
      case 1:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        return 0x736567617373656DLL;
      case 2:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        return 0x73746E657665;
      case 3:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        return 0x736F746F6870;
      case 4:
      case 7:
      case 8:
      case 19:
      case 20:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        return 0;
      case 5:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        uint64_t v10 = 1702129518;
        goto LABEL_28;
      case 6:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        return 0x7265646E696D6572;
      case 9:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        return 0x206C616E72756F6ALL;
      case 10:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        return 0x656D206563696F76;
      case 11:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        return 0x6C20697261666173;
      case 12:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        uint64_t v10 = 1701603686;
        goto LABEL_28;
      case 13:
      case 16:
        unint64_t v8 = 0xD000000000000013;
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        return v8;
      case 14:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        return 0x702074656C6C6177;
      case 15:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        return 0x73746361746E6F63;
      case 17:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        return 0xD000000000000012;
      case 18:
      case 21:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        return 0xD000000000000017;
      case 22:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        return 0xD000000000000018;
      case 23:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        return 0x646574656B636974;
      case 24:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        return 0x6D746E696F707061;
      case 25:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        return 32481125921350000;
      case 26:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        uint64_t v10 = 1885958772;
LABEL_28:
        unint64_t v8 = v10 & 0xFFFF0000FFFFFFFFLL | 0x7300000000;
        break;
      default:
        outlined destroy of SearchEntity((uint64_t)v6, (void (*)(void))type metadata accessor for SearchResult);
        unint64_t v8 = 0x736C69616D65;
        break;
    }
  }
  return v8;
}

uint64_t static HydratedEntityType.typeDisplayRepresentation.getter()
{
  return static SearchEntity.typeDisplayRepresentation.getter(&one-time initialization token for typeDisplayRepresentation, (uint64_t)static HydratedEntityType.typeDisplayRepresentation);
}

uint64_t static SearchEntity.typeDisplayRepresentation.getter(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for TypeDisplayRepresentation();
  __swift_project_value_buffer(v3, a2);
  swift_beginAccess();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_51_2();
  return v4();
}

uint64_t static HydratedEntityType.typeDisplayRepresentation.setter(uint64_t a1)
{
  return static EventEntity.typeDisplayRepresentation.setter(a1, &one-time initialization token for typeDisplayRepresentation, (uint64_t)static HydratedEntityType.typeDisplayRepresentation);
}

uint64_t (*static HydratedEntityType.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  __swift_project_value_buffer(v0, (uint64_t)static HydratedEntityType.typeDisplayRepresentation);
  OUTLINED_FUNCTION_94_4();
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

void static HydratedEntityType.caseDisplayRepresentations.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_17_1();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_12_7();
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(HydratedEntityType, DisplayRepresentation)>);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (HydratedEntityType, DisplayRepresentation))
     - 8;
  uint64_t v9 = *(void *)(*(void *)v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(*(void *)v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_258661C80;
  unint64_t v12 = v11 + v10;
  *(unsigned char *)(v11 + v10) = 0;
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_34_10(v1);
  uint64_t v13 = type metadata accessor for DisplayRepresentation.Image();
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v13);
  DisplayRepresentation.init(title:subtitle:image:)();
  OUTLINED_FUNCTION_116_4((unsigned char *)(v12 + v9));
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_6_16();
  OUTLINED_FUNCTION_116_4((unsigned char *)(v12 + 2 * v9));
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_6_16();
  OUTLINED_FUNCTION_116_4((unsigned char *)(v12 + 3 * v9));
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_6_16();
  OUTLINED_FUNCTION_116_4((unsigned char *)(v12 + 4 * v9));
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v6);
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v13);
  DisplayRepresentation.init(title:subtitle:image:)();
  type metadata accessor for DisplayRepresentation();
  lazy protocol witness table accessor for type HydratedEntityType and conformance HydratedEntityType();
  Dictionary.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_119_0();
}

OmniSearch::HydratedEntityType_optional __swiftcall HydratedEntityType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v4 = v1;
  v3._object = object;
  unint64_t v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of HydratedEntityType.init(rawValue:), v3);
  result.value = swift_bridgeObjectRelease();
  char v7 = 5;
  if (v5 < 5) {
    char v7 = v5;
  }
  *uint64_t v4 = v7;
  return result;
}

void *static HydratedEntityType.allCases.getter()
{
  return &outlined read-only object #0 of static HydratedEntityType.allCases.getter;
}

uint64_t HydratedEntityType.rawValue.getter()
{
  uint64_t result = 0x6C69616D65;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701603686;
      break;
    case 2:
      uint64_t result = 0x6567617373656DLL;
      break;
    case 3:
      uint64_t result = 1702129518;
      break;
    case 4:
      uint64_t result = 0x6F746F6870;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance HydratedEntityType()
{
  return specialized == infix<A>(_:_:)();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance HydratedEntityType()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance HydratedEntityType()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance HydratedEntityType()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

OmniSearch::HydratedEntityType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance HydratedEntityType(Swift::String *a1)
{
  return HydratedEntityType.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance HydratedEntityType@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HydratedEntityType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance HydratedEntityType(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type HydratedEntityType and conformance HydratedEntityType();
  return MEMORY[0x270EE0C40](a1, v2);
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance HydratedEntityType(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type HydratedEntityType and conformance HydratedEntityType();
  return MEMORY[0x270EE1C28](a1, v2);
}

void protocol witness for static CaseIterable.allCases.getter in conformance HydratedEntityType(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static HydratedEntityType.allCases.getter;
}

unint64_t SearchEntity.eventEntityDescription(event:isFullDescription:)(uint64_t *a1, int a2)
{
  LODWORD(v432) = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  long long v421 = (char *)&v399 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v422 = (unint64_t)&v399 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v430 = (uint64_t)&v399 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v420 = (void (*)(char *, char *, uint64_t))((char *)&v399 - v11);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v429 = (uint64_t)&v399 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  long long v424 = (char *)&v399 - v15;
  MEMORY[0x270FA5388](v14);
  unint64_t v428 = (unint64_t)&v399 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  long long v409 = (char *)&v399 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  long long v410 = (char *)&v399 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v416 = (char *)&v399 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  long long v408 = (char *)&v399 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v414 = (char *)&v399 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v404 = (char *)&v399 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v412 = (char *)&v399 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v419 = (char *)&v399 - v32;
  uint64_t v441 = type metadata accessor for Date();
  uint64_t v431 = *(void *)(v441 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v441);
  uint64_t v401 = (char *)&v399 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  v402 = (char *)&v399 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  long long v405 = (char *)&v399 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  long long v407 = (char *)&v399 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v411 = (char *)&v399 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v400 = (char *)&v399 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v403 = (char *)&v399 - v46;
  MEMORY[0x270FA5388](v45);
  uint64_t v417 = (char *)&v399 - v47;
  uint64_t v442 = type metadata accessor for DateComponents();
  uint64_t v440 = *(void *)(v442 - 8);
  uint64_t v48 = MEMORY[0x270FA5388](v442);
  uint64_t v426 = (uint64_t)&v399 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  unint64_t v427 = (unint64_t)&v399 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v415 = (char *)&v399 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  uint64_t v425 = (uint64_t)&v399 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  uint64_t v413 = (char *)&v399 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  long long v406 = (char *)&v399 - v59;
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  long long v423 = (char *)&v399 - v61;
  MEMORY[0x270FA5388](v60);
  v418 = (char *)&v399 - v62;
  uint64_t v63 = type metadata accessor for Calendar();
  uint64_t v64 = MEMORY[0x270FA5388](v63);
  uint64_t v67 = (char *)&v399 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = *a1;
  uint64_t v69 = a1[1];
  uint64_t v70 = a1[2];
  uint64_t v71 = a1[3];
  uint64_t v72 = a1[4];
  uint64_t v73 = a1[5];
  uint64_t v75 = (void *)a1[6];
  uint64_t v74 = a1[7];
  uint64_t v76 = a1[8];
  unint64_t v77 = a1[9];
  v464._uint64_t countAndFlagsBits = 0;
  v464._object = (void *)0xE000000000000000;
  if (!v68) {
    return 0;
  }
  uint64_t v433 = v64;
  uint64_t v434 = v65;
  uint64_t countAndFlagsBits = v74;
  uint64_t v446 = v67;
  object = v75;
  uint64_t v78 = v68;
  uint64_t v79 = v70;
  uint64_t v80 = v76;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v81 = countAndFlagsBits;
  swift_retain();
  outlined copy of Data?(v80, v77);
  EntityProperty.wrappedValue.getter();
  unint64_t v436 = v77;
  unint64_t v398 = v77;
  uint64_t v437 = v80;
  uint64_t v82 = v78;
  uint64_t v443 = v69;
  uint64_t v438 = v71;
  uint64_t v439 = v73;
  uint64_t v83 = v71;
  uint64_t v84 = v72;
  outlined consume of EventEntity?(v78, v69, v79, v83, v72, v73, (uint64_t)object, v81, v80, v398);
  uint64_t countAndFlagsBits_low = LOBYTE(v449._countAndFlagsBits);
  static Calendar.current.getter();
  uint64_t v435 = v82;
  switch(countAndFlagsBits_low)
  {
    case 1:
      swift_retain();
      swift_retain();
      uint64_t v94 = v79;
      swift_retain();
      uint64_t v95 = v438;
      swift_retain();
      swift_retain();
      uint64_t v96 = v439;
      swift_retain();
      uint64_t v97 = (uint64_t)object;
      swift_retain();
      uint64_t v98 = countAndFlagsBits;
      swift_retain();
      unint64_t v100 = v436;
      uint64_t v99 = v437;
      outlined copy of Data?(v437, v436);
      EntityProperty.wrappedValue.getter();
      outlined consume of EventEntity?(v435, v443, v94, v95, v84, v96, v97, v98, v99, v100);
      if (v449._countAndFlagsBits)
      {
        object = v449._object;
        uint64_t countAndFlagsBits = v449._countAndFlagsBits;
        uint64_t v426 = v450;
        uint64_t v101 = v451;
        uint64_t v102 = v452;
        uint64_t v438 = v453;
        uint64_t v439 = v454;
        uint64_t v103 = v455;
        uint64_t v104 = v456;
        uint64_t v105 = v457;
        uint64_t v106 = v458;
        unint64_t v107 = v459;
        strcpy((char *)&v464, "reservation");
        HIDWORD(v464._object) = -352321536;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v108 = v101;
        swift_retain();
        swift_retain();
        uint64_t v109 = v438;
        swift_retain();
        uint64_t v110 = v439;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        outlined copy of Data?(v106, v107);
        EntityProperty.wrappedValue.getter();
        uint64_t v111 = v102;
        uint64_t v112 = v104;
        uint64_t v113 = v426;
        unint64_t v428 = v107;
        uint64_t v430 = v106;
        uint64_t v435 = v105;
        uint64_t v443 = v108;
        unint64_t v436 = v103;
        uint64_t v437 = v111;
        outlined consume of RestaurantReservationEntity?(countAndFlagsBits, (uint64_t)object, v426, v108, v111, v109, v110, v103, v112, v105, v106, v107);
        if (v449._object)
        {
          if (v432)
          {
            v114._uint64_t countAndFlagsBits = 0x6176726573657220;
            v114._object = (void *)0xEC0000006E6F6974;
            String.append(_:)(v114);
            uint64_t v115 = v449._countAndFlagsBits;
            uint64_t v116 = v449._object;
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v115 = 0x7461767265736572;
            uint64_t v116 = (void *)0xEB000000006E6F69;
          }
          v464._uint64_t countAndFlagsBits = v115;
          v464._object = v116;
        }
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v250 = v437;
        swift_retain();
        uint64_t v251 = v438;
        swift_retain();
        swift_retain();
        uint64_t v252 = v436;
        swift_retain();
        swift_retain();
        uint64_t v253 = v435;
        swift_retain();
        uint64_t v254 = v112;
        uint64_t v255 = v113;
        uint64_t v256 = v430;
        unint64_t v257 = v428;
        outlined copy of Data?(v430, v428);
        EntityProperty.wrappedValue.getter();
        uint64_t v397 = v256;
        uint64_t v258 = v255;
        unint64_t v427 = v254;
        outlined consume of RestaurantReservationEntity?(countAndFlagsBits, (uint64_t)object, v255, v443, v250, v251, v439, v252, v254, v253, v397, v257);
        uint64_t v259 = v449._object;
        if (v449._object)
        {
          v260._uint64_t countAndFlagsBits = v449._countAndFlagsBits;
          v449._uint64_t countAndFlagsBits = 544497952;
          v449._object = (void *)0xE400000000000000;
          v260._object = v259;
          String.append(_:)(v260);
          swift_bridgeObjectRelease();
          String.append(_:)(v449);
          swift_bridgeObjectRelease();
        }
        uint64_t v261 = countAndFlagsBits;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v262 = v438;
        swift_retain();
        swift_retain();
        uint64_t v263 = v436;
        swift_retain();
        uint64_t v264 = v427;
        swift_retain();
        uint64_t v265 = v435;
        swift_retain();
        uint64_t v266 = v430;
        unint64_t v267 = v428;
        outlined copy of Data?(v430, v428);
        uint64_t v144 = v429;
        EntityProperty.wrappedValue.getter();
        uint64_t v268 = v261;
        uint64_t v269 = v439;
        outlined consume of RestaurantReservationEntity?(v268, (uint64_t)object, v258, v443, v437, v262, v439, v263, v264, v265, v266, v267);
        uint64_t v270 = v442;
        if (__swift_getEnumTagSinglePayload(v144, 1, v442) == 1)
        {
          (*(void (**)(char *, uint64_t))(v434 + 8))(v446, v433);
          outlined consume of RestaurantReservationEntity?(countAndFlagsBits, (uint64_t)object, v426, v443, v437, v438, v269, v436, v427, v265, v266, v267);
          goto LABEL_53;
        }
        uint64_t v271 = v440;
        uint64_t v272 = v413;
        (*(void (**)(char *, uint64_t, uint64_t))(v440 + 32))(v413, v144, v270);
        uint64_t v144 = (uint64_t)v414;
        uint64_t v273 = v446;
        Calendar.date(from:)();
        uint64_t v274 = v441;
        if (__swift_getEnumTagSinglePayload(v144, 1, v441) == 1)
        {
          outlined consume of RestaurantReservationEntity?(countAndFlagsBits, (uint64_t)object, v426, v443, v437, v438, v439, v436, v427, v435, v430, v428);
          (*(void (**)(char *, uint64_t))(v271 + 8))(v272, v270);
          (*(void (**)(char *, uint64_t))(v434 + 8))(v273, v433);
          goto LABEL_94;
        }
        uint64_t v337 = v431;
        (*(void (**)(char *, uint64_t, uint64_t))(v431 + 32))(v411, v144, v274);
        SearchEntity.eventDateFormatter.getter();
        uint64_t v339 = v338;
        Class isa = Date._bridgeToObjectiveC()().super.isa;
        uint64_t v341 = v339;
        id v342 = objc_msgSend(v339, sel_stringFromDate_, isa);

        uint64_t v432 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v344 = v343;

        v449._uint64_t countAndFlagsBits = 544497952;
        v449._object = (void *)0xE400000000000000;
        v345._uint64_t countAndFlagsBits = v432;
        v345._object = v344;
        String.append(_:)(v345);
        swift_bridgeObjectRelease();
        String.append(_:)(v449);
        swift_bridgeObjectRelease();
        outlined consume of RestaurantReservationEntity?(countAndFlagsBits, (uint64_t)object, v426, v443, v437, v438, v439, v436, v427, v435, v430, v428);
        (*(void (**)(char *, uint64_t))(v337 + 8))(v411, v274);
        (*(void (**)(char *, uint64_t))(v271 + 8))(v272, v270);
        goto LABEL_101;
      }
      unint64_t v93 = 0xD000000000000016;
      (*(void (**)(char *, uint64_t))(v434 + 8))(v446, v433);
      return v93;
    case 2:
      swift_retain();
      swift_retain();
      uint64_t v117 = v79;
      swift_retain();
      uint64_t v118 = v438;
      swift_retain();
      swift_retain();
      uint64_t v119 = v439;
      swift_retain();
      uint64_t v120 = (uint64_t)object;
      swift_retain();
      uint64_t v121 = countAndFlagsBits;
      swift_retain();
      unint64_t v123 = v436;
      uint64_t v122 = v437;
      outlined copy of Data?(v437, v436);
      EntityProperty.wrappedValue.getter();
      outlined consume of EventEntity?(v435, v443, v117, v118, v72, v119, v120, v121, v122, v123);
      if (v449._countAndFlagsBits)
      {
        uint64_t v124 = v450;
        uint64_t v438 = v449._countAndFlagsBits;
        uint64_t v439 = v451;
        uint64_t v432 = v452;
        uint64_t v443 = v453;
        object = v449._object;
        uint64_t v125 = v454;
        uint64_t countAndFlagsBits = v455;
        uint64_t v126 = v457;
        uint64_t v127 = v458;
        uint64_t v128 = v459;
        unint64_t v436 = v460;
        uint64_t v437 = v456;
        uint64_t v129 = v461;
        unint64_t v130 = v462;
        v464._uint64_t countAndFlagsBits = 2036429939;
        v464._object = (void *)0xE400000000000000;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v131 = v437;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v132 = v436;
        swift_retain();
        outlined copy of Data?(v129, v130);
        EntityProperty.wrappedValue.getter();
        unint64_t v422 = v130;
        unint64_t v394 = v130;
        uint64_t v425 = v129;
        uint64_t v133 = v125;
        unint64_t v427 = v128;
        uint64_t v429 = v127;
        uint64_t v430 = v126;
        uint64_t v435 = v124;
        outlined consume of HotelReservationEntity?(v438, (uint64_t)object, v124, v439, v432, v443, v125, countAndFlagsBits, v131, v126, v127, v128, v132, v129, v394);
        id v134 = v449._object;
        if (v449._object)
        {
          v135._uint64_t countAndFlagsBits = v449._countAndFlagsBits;
          v449._uint64_t countAndFlagsBits = 0x2074612079617473;
          v449._object = (void *)0xE800000000000000;
          v135._object = v134;
          String.append(_:)(v135);
          swift_bridgeObjectRelease();
          Swift::String v464 = v449;
        }
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v136 = v437;
        swift_retain();
        uint64_t v137 = v430;
        swift_retain();
        uint64_t v138 = v429;
        swift_retain();
        uint64_t v139 = v427;
        swift_retain();
        uint64_t v426 = v133;
        unint64_t v140 = v436;
        swift_retain();
        uint64_t v141 = v425;
        unint64_t v142 = v422;
        outlined copy of Data?(v425, v422);
        uint64_t v143 = v439;
        uint64_t v144 = v428;
        EntityProperty.wrappedValue.getter();
        unint64_t v395 = v142;
        uint64_t v390 = v140;
        uint64_t v387 = v138;
        uint64_t v145 = v426;
        uint64_t v386 = v137;
        uint64_t v146 = v443;
        uint64_t v147 = v432;
        uint64_t v148 = v435;
        outlined consume of HotelReservationEntity?(v438, (uint64_t)object, v435, v143, v432, v443, v426, countAndFlagsBits, v136, v386, v387, v139, v390, v141, v395);
        uint64_t v149 = v442;
        if (__swift_getEnumTagSinglePayload(v144, 1, v442) == 1)
        {
          (*(void (**)(char *, uint64_t))(v434 + 8))(v446, v433);
          outlined consume of HotelReservationEntity?(v438, (uint64_t)object, v148, v143, v147, v146, v145, countAndFlagsBits, v437, v430, v429, v427, v436, v425, v422);
LABEL_53:
          uint64_t v190 = &demangling cache variable for type metadata for DateComponents?;
LABEL_95:
          uint64_t v191 = v144;
          goto LABEL_96;
        }
        uint64_t v246 = (char *)(v440 + 32);
        uint64_t v245 = *(void (**)(char *, uint64_t, uint64_t))(v440 + 32);
        v245(v423, v144, v149);
        uint64_t v247 = (uint64_t)v412;
        Calendar.date(from:)();
        uint64_t v248 = v441;
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v247, 1, v441);
        uint64_t v420 = (void (*)(char *, char *, uint64_t))v245;
        long long v421 = v246;
        if (EnumTagSinglePayload == 1)
        {
          outlined destroy of PQAVerificationModelProtocol?(v247, &demangling cache variable for type metadata for Date?);
        }
        else
        {
          uint64_t v315 = v431;
          uint64_t v316 = v403;
          (*(void (**)(char *, uint64_t, uint64_t))(v431 + 32))(v403, v247, v248);
          SearchEntity.eventDateFormatter.getter();
          uint64_t v318 = v317;
          Class v319 = Date._bridgeToObjectiveC()().super.isa;
          id v320 = objc_msgSend(v318, sel_stringFromDate_, v319);

          uint64_t v321 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v323 = v322;

          v449._uint64_t countAndFlagsBits = 0x206D6F726620;
          v449._object = (void *)0xE600000000000000;
          v324._uint64_t countAndFlagsBits = v321;
          v324._object = v323;
          String.append(_:)(v324);
          swift_bridgeObjectRelease();
          String.append(_:)(v449);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v315 + 8))(v316, v248);
        }
        uint64_t v325 = v432;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v326 = v437;
        swift_retain();
        uint64_t v327 = v430;
        swift_retain();
        uint64_t v328 = v429;
        swift_retain();
        uint64_t v329 = v427;
        swift_retain();
        unint64_t v330 = v436;
        swift_retain();
        uint64_t v331 = v425;
        unint64_t v332 = v422;
        outlined copy of Data?(v425, v422);
        uint64_t v333 = (uint64_t)v424;
        EntityProperty.wrappedValue.getter();
        uint64_t v392 = v330;
        uint64_t v388 = v328;
        uint64_t v334 = v439;
        uint64_t v335 = v426;
        outlined consume of HotelReservationEntity?(v438, (uint64_t)object, v435, v439, v325, v443, v426, countAndFlagsBits, v326, v327, v388, v329, v392, v331, v332);
        uint64_t v336 = v442;
        if (__swift_getEnumTagSinglePayload(v333, 1, v442) == 1)
        {
          outlined consume of HotelReservationEntity?(v438, (uint64_t)object, v435, v334, v325, v443, v335, countAndFlagsBits, v437, v430, v429, v427, v436, v331, v332);
          (*(void (**)(char *, uint64_t))(v440 + 8))(v423, v336);
          (*(void (**)(char *, uint64_t))(v434 + 8))(v446, v433);
          uint64_t v190 = &demangling cache variable for type metadata for DateComponents?;
          uint64_t v191 = (uint64_t)v424;
          goto LABEL_96;
        }
        uint64_t v346 = v406;
        v420(v406, v424, v336);
        uint64_t v144 = (uint64_t)v404;
        uint64_t v347 = v446;
        Calendar.date(from:)();
        uint64_t v348 = v441;
        if (__swift_getEnumTagSinglePayload(v144, 1, v441) == 1)
        {
          outlined consume of HotelReservationEntity?(v438, (uint64_t)object, v435, v439, v432, v443, v426, countAndFlagsBits, v437, v430, v429, v427, v436, v425, v422);
          uint64_t v349 = *(void (**)(char *, uint64_t))(v440 + 8);
          v349(v346, v336);
          v349(v423, v336);
          (*(void (**)(char *, uint64_t))(v434 + 8))(v347, v433);
LABEL_94:
          uint64_t v190 = &demangling cache variable for type metadata for Date?;
          goto LABEL_95;
        }
        uint64_t v374 = v431;
        v375 = v400;
        (*(void (**)(char *, uint64_t, uint64_t))(v431 + 32))(v400, v144, v348);
        SearchEntity.eventDateFormatter.getter();
        long long v377 = v376;
        Class v378 = Date._bridgeToObjectiveC()().super.isa;
        id v379 = objc_msgSend(v377, sel_stringFromDate_, v378);

        uint64_t v380 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        long long v382 = v381;

        v449._uint64_t countAndFlagsBits = 544175136;
        v449._object = (void *)0xE400000000000000;
        v383._uint64_t countAndFlagsBits = v380;
        v383._object = v382;
        String.append(_:)(v383);
        swift_bridgeObjectRelease();
        String.append(_:)(v449);
        swift_bridgeObjectRelease();
        outlined consume of HotelReservationEntity?(v438, (uint64_t)object, v435, v439, v432, v443, v426, countAndFlagsBits, v437, v430, v429, v427, v436, v425, v422);
        (*(void (**)(char *, uint64_t))(v374 + 8))(v375, v348);
        uint64_t v384 = *(void (**)(char *, uint64_t))(v440 + 8);
        uint64_t v385 = v442;
        v384(v406, v442);
        v384(v423, v385);
        (*(void (**)(char *, uint64_t))(v434 + 8))(v347, v433);
LABEL_102:
        unint64_t v93 = v464._countAndFlagsBits;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v434 + 8))(v446, v433);
        unint64_t v93 = 0xD000000000000011;
      }
      break;
    case 3:
      swift_retain();
      swift_retain();
      uint64_t v150 = v79;
      swift_retain();
      uint64_t v151 = v438;
      swift_retain();
      swift_retain();
      uint64_t v152 = v439;
      swift_retain();
      uint64_t v153 = (uint64_t)object;
      swift_retain();
      uint64_t v154 = countAndFlagsBits;
      swift_retain();
      unint64_t v156 = v436;
      uint64_t v155 = v437;
      outlined copy of Data?(v437, v436);
      EntityProperty.wrappedValue.getter();
      outlined consume of EventEntity?(v435, v443, v150, v151, v72, v152, v153, v154, v155, v156);
      outlined init with take of SearchResultItem?((uint64_t)v447, (uint64_t)v448, &demangling cache variable for type metadata for VehicleReservationEntity?);
      outlined init with take of SearchResultItem?((uint64_t)v448, (uint64_t)&v449, &demangling cache variable for type metadata for VehicleReservationEntity?);
      if (getEnumTag for DataFilter.FilterResult(&v449._countAndFlagsBits) == 1)
      {
        (*(void (**)(char *, uint64_t))(v434 + 8))(v446, v433);
        return 0xD000000000000016;
      }
      v464._uint64_t countAndFlagsBits = 0xD000000000000016;
      v464._object = (void *)0x800000025867FCD0;
      outlined retain of VehicleReservationEntity((uint64_t)&v449);
      EntityProperty.wrappedValue.getter();
      outlined release of VehicleReservationEntity?((uint64_t)v448);
      uint64_t v216 = v447[0]._object;
      uint64_t v217 = v440;
      uint64_t v218 = v441;
      uint64_t v219 = v442;
      uint64_t v220 = 0xD000000000000016;
      if (v447[0]._object)
      {
        if (v432)
        {
          uint64_t v221 = v447[0]._countAndFlagsBits;
          v447[0]._uint64_t countAndFlagsBits = 0;
          v447[0]._object = (void *)0xE000000000000000;
          _StringGuts.grow(_:)(25);
          swift_bridgeObjectRelease();
          v447[0]._uint64_t countAndFlagsBits = v221;
          v447[0]._object = v216;
          v222._uint64_t countAndFlagsBits = 0xD000000000000017;
          v222._object = (void *)0x800000025867FCF0;
          String.append(_:)(v222);
          uint64_t v220 = v447[0]._countAndFlagsBits;
          uint64_t v223 = v447[0]._object;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v223 = (void *)0x800000025867FCD0;
        }
        v464._uint64_t countAndFlagsBits = v220;
        v464._object = v223;
      }
      outlined retain of VehicleReservationEntity((uint64_t)&v449);
      EntityProperty.wrappedValue.getter();
      outlined release of VehicleReservationEntity?((uint64_t)v448);
      uint64_t v299 = v447[0]._object;
      if (v447[0]._object)
      {
        v300._uint64_t countAndFlagsBits = v447[0]._countAndFlagsBits;
        v447[0]._uint64_t countAndFlagsBits = 544497952;
        v447[0]._object = (void *)0xE400000000000000;
        v300._object = v299;
        String.append(_:)(v300);
        swift_bridgeObjectRelease();
        String.append(_:)(v447[0]);
        swift_bridgeObjectRelease();
      }
      outlined init with take of SearchResultItem?((uint64_t)v448, (uint64_t)v447, &demangling cache variable for type metadata for VehicleReservationEntity?);
      outlined retain of VehicleReservationEntity((uint64_t)v447);
      uint64_t v287 = v422;
      EntityProperty.wrappedValue.getter();
      outlined release of VehicleReservationEntity?((uint64_t)v448);
      int v301 = __swift_getEnumTagSinglePayload(v287, 1, v219);
      unint64_t v302 = v427;
      if (v301 == 1)
      {
        (*(void (**)(char *, uint64_t))(v434 + 8))(v446, v433);
        outlined release of VehicleReservationEntity?((uint64_t)v448);
        goto LABEL_82;
      }
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v217 + 32))(v427, v287, v219);
      uint64_t v287 = (uint64_t)v410;
      uint64_t v273 = v446;
      Calendar.date(from:)();
      if (__swift_getEnumTagSinglePayload(v287, 1, v218) == 1)
      {
        outlined release of VehicleReservationEntity?((uint64_t)v448);
        (*(void (**)(unint64_t, uint64_t))(v217 + 8))(v302, v219);
        goto LABEL_85;
      }
      uint64_t v351 = v218;
      uint64_t v352 = v431;
      uint64_t v353 = v402;
      (*(void (**)(char *, uint64_t, uint64_t))(v431 + 32))(v402, v287, v351);
      SearchEntity.eventDateFormatter.getter();
      uint64_t v355 = v354;
      Class v356 = Date._bridgeToObjectiveC()().super.isa;
      id v357 = objc_msgSend(v355, sel_stringFromDate_, v356);

      uint64_t v358 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      long long v360 = v359;

      v463._uint64_t countAndFlagsBits = 544497952;
      v463._object = (void *)0xE400000000000000;
      v361._uint64_t countAndFlagsBits = v358;
      v361._object = v360;
      String.append(_:)(v361);
      swift_bridgeObjectRelease();
      String.append(_:)(v463);
      swift_bridgeObjectRelease();
      outlined release of VehicleReservationEntity?((uint64_t)v448);
      (*(void (**)(char *, uint64_t))(v352 + 8))(v353, v441);
      (*(void (**)(unint64_t, uint64_t))(v217 + 8))(v427, v219);
      goto LABEL_101;
    case 4:
      swift_retain();
      swift_retain();
      uint64_t v157 = v79;
      swift_retain();
      uint64_t v158 = v438;
      swift_retain();
      swift_retain();
      uint64_t v159 = v439;
      swift_retain();
      uint64_t v160 = (uint64_t)object;
      swift_retain();
      uint64_t v161 = countAndFlagsBits;
      swift_retain();
      unint64_t v163 = v436;
      uint64_t v162 = v437;
      outlined copy of Data?(v437, v436);
      EntityProperty.wrappedValue.getter();
      outlined consume of EventEntity?(v435, v443, v157, v158, v72, v159, v160, v161, v162, v163);
      uint64_t v164 = v449._countAndFlagsBits;
      if (!v449._countAndFlagsBits)
      {
        (*(void (**)(char *, uint64_t))(v434 + 8))(v446, v433);
        return 0xD000000000000017;
      }
      object = v449._object;
      uint64_t countAndFlagsBits = v451;
      uint64_t v443 = v452;
      uint64_t v426 = v453;
      uint64_t v165 = v454;
      uint64_t v432 = v455;
      uint64_t v438 = v456;
      uint64_t v439 = v450;
      unint64_t v436 = v457;
      uint64_t v166 = v458;
      uint64_t v167 = v459;
      unint64_t v168 = v460;
      v464._uint64_t countAndFlagsBits = 0xD000000000000017;
      v464._object = (void *)0x800000025867FD10;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v169 = v165;
      swift_retain();
      uint64_t v170 = v432;
      swift_retain();
      uint64_t v171 = v438;
      swift_retain();
      unint64_t v172 = v436;
      swift_retain();
      swift_retain();
      outlined copy of Data?(v167, v168);
      EntityProperty.wrappedValue.getter();
      unint64_t v427 = v168;
      unint64_t v396 = v168;
      unint64_t v428 = v167;
      uint64_t v429 = v166;
      uint64_t v389 = v172;
      uint64_t v173 = v426;
      uint64_t v437 = v164;
      uint64_t v174 = v170;
      outlined consume of TicketedTransportationEntity?(v164, (uint64_t)object, v439, countAndFlagsBits, v443, v426, v169, v170, v171, v389, v166, v167, v396);
      uint64_t v175 = v449._object;
      uint64_t v435 = v169;
      if (v449._object)
      {
        v176._uint64_t countAndFlagsBits = v449._countAndFlagsBits;
        v449._uint64_t countAndFlagsBits = 0x742074656B636974;
        v449._object = (void *)0xEA0000000000206FLL;
        v176._object = v175;
        String.append(_:)(v176);
        swift_bridgeObjectRelease();
        Swift::String v464 = v449;
      }
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v177 = countAndFlagsBits;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v178 = v173;
      uint64_t v179 = v438;
      swift_retain();
      uint64_t v180 = v436;
      swift_retain();
      uint64_t v181 = v429;
      swift_retain();
      unint64_t v183 = v427;
      unint64_t v182 = v428;
      outlined copy of Data?(v428, v427);
      uint64_t v184 = v430;
      EntityProperty.wrappedValue.getter();
      uint64_t v393 = v182;
      uint64_t v391 = v181;
      uint64_t v185 = v435;
      uint64_t v186 = v439;
      uint64_t v187 = v177;
      uint64_t v188 = v443;
      outlined consume of TicketedTransportationEntity?(v437, (uint64_t)object, v439, v187, v443, v178, v435, v174, v179, v180, v391, v393, v183);
      uint64_t v189 = v442;
      if (__swift_getEnumTagSinglePayload(v184, 1, v442) == 1)
      {
        (*(void (**)(char *, uint64_t))(v434 + 8))(v446, v433);
        outlined consume of TicketedTransportationEntity?(v437, (uint64_t)object, v186, countAndFlagsBits, v188, v178, v185, v432, v438, v436, v429, v428, v183);
        uint64_t v190 = &demangling cache variable for type metadata for DateComponents?;
        uint64_t v191 = v184;
        goto LABEL_96;
      }
      uint64_t v237 = v440;
      uint64_t v238 = v415;
      uint64_t v239 = v189;
      (*(void (**)(char *, uint64_t, uint64_t))(v440 + 32))(v415, v184, v189);
      uint64_t v240 = v416;
      uint64_t v241 = v446;
      Calendar.date(from:)();
      uint64_t v242 = (uint64_t)v240;
      uint64_t v243 = (uint64_t)v240;
      uint64_t v244 = v441;
      if (__swift_getEnumTagSinglePayload(v243, 1, v441) == 1)
      {
        outlined consume of TicketedTransportationEntity?(v437, (uint64_t)object, v439, countAndFlagsBits, v443, v426, v435, v432, v438, v436, v429, v428, v427);
        (*(void (**)(char *, uint64_t))(v237 + 8))(v238, v239);
        (*(void (**)(char *, uint64_t))(v434 + 8))(v241, v433);
        uint64_t v190 = &demangling cache variable for type metadata for Date?;
        uint64_t v191 = v242;
        goto LABEL_96;
      }
      uint64_t v275 = v431;
      uint64_t v276 = v405;
      (*(void (**)(char *, uint64_t, uint64_t))(v431 + 32))(v405, v242, v244);
      SearchEntity.eventDateFormatter.getter();
      uint64_t v278 = v277;
      Class v279 = Date._bridgeToObjectiveC()().super.isa;
      id v280 = objc_msgSend(v278, sel_stringFromDate_, v279);

      uint64_t v281 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v283 = v282;

      v449._uint64_t countAndFlagsBits = 544497952;
      v449._object = (void *)0xE400000000000000;
      v284._uint64_t countAndFlagsBits = v281;
      v284._object = v283;
      String.append(_:)(v284);
      swift_bridgeObjectRelease();
      String.append(_:)(v449);
      swift_bridgeObjectRelease();
      outlined consume of TicketedTransportationEntity?(v437, (uint64_t)object, v439, countAndFlagsBits, v443, v426, v435, v432, v438, v436, v429, v428, v427);
      (*(void (**)(char *, uint64_t))(v275 + 8))(v276, v441);
      (*(void (**)(char *, uint64_t))(v440 + 8))(v238, v239);
      (*(void (**)(char *, uint64_t))(v434 + 8))(v241, v433);
      goto LABEL_102;
    case 5:
      swift_retain();
      swift_retain();
      uint64_t v192 = v79;
      swift_retain();
      uint64_t v193 = v438;
      swift_retain();
      swift_retain();
      uint64_t v194 = v439;
      swift_retain();
      uint64_t v195 = (uint64_t)object;
      swift_retain();
      uint64_t v196 = countAndFlagsBits;
      swift_retain();
      unint64_t v198 = v436;
      uint64_t v197 = v437;
      outlined copy of Data?(v437, v436);
      EntityProperty.wrappedValue.getter();
      outlined consume of EventEntity?(v435, v443, v192, v193, v72, v194, v195, v196, v197, v198);
      outlined init with take of SearchResultItem?((uint64_t)v447, (uint64_t)v448, &demangling cache variable for type metadata for TicketedShowEntity?);
      outlined init with take of SearchResultItem?((uint64_t)v448, (uint64_t)&v449, &demangling cache variable for type metadata for TicketedShowEntity?);
      if (getEnumTag for DataFilter.FilterResult(&v449._countAndFlagsBits) == 1)
      {
        unint64_t v93 = 0x646574656B636974;
        (*(void (**)(char *, uint64_t))(v434 + 8))(v446, v433);
        return v93;
      }
      strcpy((char *)&v464, "ticketed show");
      HIWORD(v464._object) = -4864;
      outlined retain of GenericEventEntity((uint64_t)&v449);
      EntityProperty.wrappedValue.getter();
      _s10OmniSearch18TicketedShowEntityVSgWOsTm_0(v448);
      if (v447[0]._object) {
        Swift::String v464 = v447[0];
      }
      outlined retain of GenericEventEntity((uint64_t)&v449);
      EntityProperty.wrappedValue.getter();
      _s10OmniSearch18TicketedShowEntityVSgWOsTm_0(v448);
      uint64_t v224 = v447[0]._object;
      uint64_t v225 = v440;
      uint64_t v226 = v441;
      uint64_t v227 = v442;
      uint64_t v228 = v425;
      if (v447[0]._object)
      {
        if (v432)
        {
          v229._uint64_t countAndFlagsBits = v447[0]._countAndFlagsBits;
          v447[0]._uint64_t countAndFlagsBits = 544497952;
          v447[0]._object = (void *)0xE400000000000000;
          v229._object = v224;
          String.append(_:)(v229);
          swift_bridgeObjectRelease();
          uint64_t v230 = v447[0]._countAndFlagsBits;
          uint64_t v231 = v447[0]._object;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v230 = 0;
          uint64_t v231 = (void *)0xE000000000000000;
        }
        uint64_t v303 = v231;
        String.append(_:)(*(Swift::String *)&v230);
        swift_bridgeObjectRelease();
      }
      outlined init with take of SearchResultItem?((uint64_t)v448, (uint64_t)v447, &demangling cache variable for type metadata for TicketedShowEntity?);
      outlined retain of GenericEventEntity((uint64_t)v447);
      uint64_t v287 = (uint64_t)v420;
      EntityProperty.wrappedValue.getter();
      _s10OmniSearch18TicketedShowEntityVSgWOsTm_0(v448);
      if (__swift_getEnumTagSinglePayload(v287, 1, v227) == 1) {
        goto LABEL_81;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v225 + 32))(v228, v287, v227);
      uint64_t v287 = (uint64_t)v408;
      uint64_t v273 = v446;
      Calendar.date(from:)();
      if (__swift_getEnumTagSinglePayload(v287, 1, v226) == 1) {
        goto LABEL_84;
      }
      uint64_t v304 = v431;
      (*(void (**)(char *, uint64_t, uint64_t))(v431 + 32))(v407, v287, v226);
      SearchEntity.eventDateFormatter.getter();
      long long v306 = v305;
      Class v307 = Date._bridgeToObjectiveC()().super.isa;
      id v308 = objc_msgSend(v306, sel_stringFromDate_, v307);

      uint64_t v309 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v311 = v310;

      v463._uint64_t countAndFlagsBits = 544497952;
      v463._object = (void *)0xE400000000000000;
      v312._uint64_t countAndFlagsBits = v309;
      v312._object = v311;
      String.append(_:)(v312);
      swift_bridgeObjectRelease();
      String.append(_:)(v463);
      swift_bridgeObjectRelease();
      _s10OmniSearch18TicketedShowEntityVSgWOsTm_0(v448);
      (*(void (**)(char *, uint64_t))(v304 + 8))(v407, v226);
      (*(void (**)(uint64_t, uint64_t))(v225 + 8))(v425, v227);
      goto LABEL_101;
    case 6:
      swift_retain();
      swift_retain();
      uint64_t v199 = v79;
      swift_retain();
      uint64_t v200 = v438;
      swift_retain();
      swift_retain();
      uint64_t v201 = v439;
      swift_retain();
      uint64_t v202 = (uint64_t)object;
      swift_retain();
      uint64_t v203 = countAndFlagsBits;
      swift_retain();
      unint64_t v205 = v436;
      uint64_t v204 = v437;
      outlined copy of Data?(v437, v436);
      EntityProperty.wrappedValue.getter();
      outlined consume of EventEntity?(v435, v443, v199, v200, v72, v201, v202, v203, v204, v205);
      outlined init with take of SearchResultItem?((uint64_t)v447, (uint64_t)v448, &demangling cache variable for type metadata for GenericEventEntity?);
      outlined init with take of SearchResultItem?((uint64_t)v448, (uint64_t)&v449, &demangling cache variable for type metadata for GenericEventEntity?);
      if (getEnumTag for DataFilter.FilterResult(&v449._countAndFlagsBits) == 1)
      {
        unint64_t v93 = 0x746E657665;
        (*(void (**)(char *, uint64_t))(v434 + 8))(v446, v433);
        return v93;
      }
      v464._uint64_t countAndFlagsBits = 0x746E657665;
      v464._object = (void *)0xE500000000000000;
      outlined retain of GenericEventEntity((uint64_t)&v449);
      EntityProperty.wrappedValue.getter();
      _s10OmniSearch18TicketedShowEntityVSgWOsTm_0(v448);
      os_log_type_t v232 = v447[0]._object;
      uint64_t v225 = v440;
      uint64_t v233 = v441;
      uint64_t v227 = v442;
      uint64_t v228 = v426;
      if (v447[0]._object)
      {
        uint64_t v234 = v447[0]._countAndFlagsBits;
        if (v432)
        {
          v447[0]._uint64_t countAndFlagsBits = 0;
          v447[0]._object = (void *)0xE000000000000000;
          _StringGuts.grow(_:)(20);
          swift_bridgeObjectRelease();
          uint64_t v235 = 0xD000000000000011;
          uint64_t v236 = (void *)0x800000025867FCB0;
        }
        else
        {
          uint64_t v235 = 39;
          uint64_t v236 = (void *)0xE100000000000000;
        }
        v447[0]._uint64_t countAndFlagsBits = v235;
        v447[0]._object = v236;
        v313._uint64_t countAndFlagsBits = v234;
        v313._object = v232;
        String.append(_:)(v313);
        swift_bridgeObjectRelease();
        v314._uint64_t countAndFlagsBits = 39;
        v314._object = (void *)0xE100000000000000;
        String.append(_:)(v314);
        Swift::String v464 = v447[0];
      }
      outlined init with take of SearchResultItem?((uint64_t)v448, (uint64_t)v447, &demangling cache variable for type metadata for GenericEventEntity?);
      outlined retain of GenericEventEntity((uint64_t)v447);
      uint64_t v287 = (uint64_t)v421;
      EntityProperty.wrappedValue.getter();
      _s10OmniSearch18TicketedShowEntityVSgWOsTm_0(v448);
      if (__swift_getEnumTagSinglePayload(v287, 1, v227) == 1)
      {
LABEL_81:
        (*(void (**)(char *, uint64_t))(v434 + 8))(v446, v433);
        _s10OmniSearch18TicketedShowEntityVSgWOsTm_0(v448);
LABEL_82:
        uint64_t v190 = &demangling cache variable for type metadata for DateComponents?;
        goto LABEL_87;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v225 + 32))(v228, v287, v227);
      uint64_t v287 = (uint64_t)v409;
      uint64_t v273 = v446;
      Calendar.date(from:)();
      if (__swift_getEnumTagSinglePayload(v287, 1, v233) == 1)
      {
LABEL_84:
        _s10OmniSearch18TicketedShowEntityVSgWOsTm_0(v448);
        (*(void (**)(uint64_t, uint64_t))(v225 + 8))(v228, v227);
LABEL_85:
        (*(void (**)(char *, uint64_t))(v434 + 8))(v273, v433);
        goto LABEL_86;
      }
      uint64_t v362 = v233;
      uint64_t v363 = v431;
      uint64_t v364 = v401;
      (*(void (**)(char *, uint64_t, uint64_t))(v431 + 32))(v401, v287, v362);
      SearchEntity.eventDateFormatter.getter();
      long long v366 = v365;
      Class v367 = Date._bridgeToObjectiveC()().super.isa;
      id v368 = objc_msgSend(v366, sel_stringFromDate_, v367);

      uint64_t v369 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      long long v371 = v370;

      v463._uint64_t countAndFlagsBits = 544497952;
      v463._object = (void *)0xE400000000000000;
      v372._uint64_t countAndFlagsBits = v369;
      v372._object = v371;
      String.append(_:)(v372);
      swift_bridgeObjectRelease();
      String.append(_:)(v463);
      swift_bridgeObjectRelease();
      _s10OmniSearch18TicketedShowEntityVSgWOsTm_0(v448);
      (*(void (**)(char *, uint64_t))(v363 + 8))(v364, v441);
      (*(void (**)(uint64_t, uint64_t))(v225 + 8))(v426, v227);
LABEL_101:
      (*(void (**)(char *, uint64_t))(v434 + 8))(v273, v433);
      goto LABEL_102;
    default:
      swift_retain();
      uint64_t v86 = v443;
      swift_retain();
      uint64_t v399 = v79;
      swift_retain();
      uint64_t v87 = v438;
      swift_retain();
      swift_retain();
      uint64_t v88 = v439;
      swift_retain();
      uint64_t v89 = (uint64_t)object;
      swift_retain();
      uint64_t v90 = countAndFlagsBits;
      swift_retain();
      unint64_t v92 = v436;
      uint64_t v91 = v437;
      outlined copy of Data?(v437, v436);
      EntityProperty.wrappedValue.getter();
      outlined consume of EventEntity?(v435, v86, v399, v87, v72, v88, v89, v90, v91, v92);
      outlined init with take of SearchResultItem?((uint64_t)v447, (uint64_t)v448, &demangling cache variable for type metadata for FlightReservationEntity?);
      outlined init with take of SearchResultItem?((uint64_t)v448, (uint64_t)&v449, &demangling cache variable for type metadata for FlightReservationEntity?);
      if (getEnumTag for DataFilter.FilterResult(&v449._countAndFlagsBits) == 1)
      {
        (*(void (**)(char *, uint64_t))(v434 + 8))(v446, v433);
        return 0xD000000000000012;
      }
      os_log_type_t v206 = (void *)0xEA00000000007468;
      strcpy((char *)&v464, "the flight");
      BYTE3(v464._object) = 0;
      HIDWORD(v464._object) = -369098752;
      outlined retain of FlightReservationEntity((uint64_t)&v449);
      EntityProperty.wrappedValue.getter();
      outlined release of FlightReservationEntity?((uint64_t)v448);
      uint64_t v207 = v447[0]._object;
      uint64_t v208 = v440;
      uint64_t v209 = v441;
      uint64_t v210 = v442;
      char v211 = v432;
      uint64_t v212 = v418;
      if (v447[0]._object)
      {
        if (v432)
        {
          v213._uint64_t countAndFlagsBits = v447[0]._countAndFlagsBits;
          v447[0]._uint64_t countAndFlagsBits = 543516788;
          v447[0]._object = (void *)0xE400000000000000;
          v213._object = v207;
          String.append(_:)(v213);
          swift_bridgeObjectRelease();
          v214._uint64_t countAndFlagsBits = 0x746867696C6620;
          v214._object = (void *)0xE700000000000000;
          String.append(_:)(v214);
          uint64_t v215 = v447[0]._countAndFlagsBits;
          os_log_type_t v206 = v447[0]._object;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v215 = 0x67696C6620656874;
        }
        v464._uint64_t countAndFlagsBits = v215;
        v464._object = v206;
      }
      outlined retain of FlightReservationEntity((uint64_t)&v449);
      EntityProperty.wrappedValue.getter();
      outlined release of FlightReservationEntity?((uint64_t)v448);
      uint64_t v285 = v447[0]._object;
      if (v447[0]._object)
      {
        v286._uint64_t countAndFlagsBits = v447[0]._countAndFlagsBits;
        v447[0]._uint64_t countAndFlagsBits = 544175136;
        v447[0]._object = (void *)0xE400000000000000;
        v286._object = v285;
        String.append(_:)(v286);
        swift_bridgeObjectRelease();
        String.append(_:)(v447[0]);
        swift_bridgeObjectRelease();
      }
      outlined init with take of SearchResultItem?((uint64_t)v448, (uint64_t)v447, &demangling cache variable for type metadata for FlightReservationEntity?);
      outlined retain of FlightReservationEntity((uint64_t)v447);
      EntityProperty.wrappedValue.getter();
      outlined release of FlightReservationEntity?((uint64_t)v448);
      uint64_t v287 = (uint64_t)v419;
      uint64_t v288 = v446;
      Calendar.date(from:)();
      if (__swift_getEnumTagSinglePayload(v287, 1, v209) == 1)
      {
        outlined release of FlightReservationEntity?((uint64_t)v448);
        (*(void (**)(char *, uint64_t))(v208 + 8))(v212, v210);
        (*(void (**)(char *, uint64_t))(v434 + 8))(v288, v433);
LABEL_86:
        uint64_t v190 = &demangling cache variable for type metadata for Date?;
LABEL_87:
        uint64_t v191 = v287;
LABEL_96:
        outlined destroy of PQAVerificationModelProtocol?(v191, v190);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v431 + 32))(v417, v287, v209);
        SearchEntity.eventDateFormatter.getter();
        uint64_t v290 = v289;
        Class v291 = Date._bridgeToObjectiveC()().super.isa;
        id v292 = objc_msgSend(v290, sel_stringFromDate_, v291);

        uint64_t v293 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v295 = v294;

        if (v211)
        {
          v463._uint64_t countAndFlagsBits = 544108320;
          v463._object = (void *)0xE400000000000000;
          v296._uint64_t countAndFlagsBits = v293;
          v296._object = v295;
          String.append(_:)(v296);
          swift_bridgeObjectRelease();
          uint64_t v297 = v463._countAndFlagsBits;
          uint64_t v298 = v463._object;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v297 = 0;
          uint64_t v298 = (void *)0xE000000000000000;
        }
        uint64_t v350 = v298;
        String.append(_:)(*(Swift::String *)&v297);
        swift_bridgeObjectRelease();
        outlined release of FlightReservationEntity?((uint64_t)v448);
        (*(void (**)(char *, uint64_t))(v431 + 8))(v417, v209);
        (*(void (**)(char *, uint64_t))(v208 + 8))(v212, v210);
        (*(void (**)(char *, uint64_t))(v434 + 8))(v446, v433);
      }
      goto LABEL_102;
  }
  return v93;
}

uint64_t SearchEntity.idCardEntityDescription(idCard:isFullDescription:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IdCardEntity?);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v98 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v98 - v9;
  outlined init with copy of SearchAppEntity?(a1, (uint64_t)&v98 - v9, &demangling cache variable for type metadata for IdCardEntity?);
  uint64_t v11 = type metadata accessor for IdCardEntity();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)v10, &demangling cache variable for type metadata for IdCardEntity?);
    return 0x64726163206469;
  }
  EntityProperty.wrappedValue.getter();
  char v13 = v113;
  outlined destroy of SearchEntity((uint64_t)v10, (void (*)(void))type metadata accessor for IdCardEntity);
  if (v13)
  {
    outlined init with copy of SearchAppEntity?(a1, (uint64_t)v5, &demangling cache variable for type metadata for IdCardEntity?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v11) == 1)
    {
      uint64_t v12 = 0x7373656E69737562;
      uint64_t v14 = (uint64_t)v5;
LABEL_8:
      outlined destroy of PQAVerificationModelProtocol?(v14, &demangling cache variable for type metadata for IdCardEntity?);
      return v12;
    }
    uint64_t v12 = 0x7373656E69737562;
    EntityProperty.wrappedValue.getter();
    uint64_t v17 = v113;
    unint64_t v16 = v114;
    uint64_t v18 = v115;
    uint64_t v19 = v116;
    uint64_t v20 = v119;
    uint64_t v108 = v117;
    uint64_t v109 = v118;
    uint64_t v21 = v120;
    uint64_t v107 = v122;
    uint64_t v105 = v121;
    unint64_t v106 = v123;
    outlined destroy of SearchEntity((uint64_t)v5, (void (*)(void))type metadata accessor for IdCardEntity);
    if (!v17) {
      return v12;
    }
    uint64_t v103 = v17;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v104 = v19;
    swift_retain();
    uint64_t v22 = v18;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v23 = v21;
    uint64_t v24 = v16;
    uint64_t v25 = v105;
    swift_retain();
    uint64_t v26 = v20;
    unint64_t v28 = v106;
    uint64_t v27 = v107;
    outlined copy of Data?(v107, v106);
    EntityProperty.wrappedValue.getter();
    uint64_t v91 = v27;
    unint64_t v95 = v28;
    uint64_t v29 = v103;
    uint64_t v89 = v25;
    uint64_t v30 = v24;
    uint64_t v102 = v22;
    uint64_t v31 = v104;
    outlined consume of BusinessCardEntity?(v103, v24, v22, v104, v108, v109, v26, v23, v89, v91, v95);
    unint64_t v32 = v114;
    uint64_t v33 = v23;
    if (!v114)
    {
      unint64_t v96 = v106;
      uint64_t v93 = v107;
      uint64_t v90 = v105;
      uint64_t v61 = v29;
      uint64_t v62 = v30;
      uint64_t v63 = v102;
      uint64_t v64 = v31;
      uint64_t v65 = v108;
      uint64_t v66 = v109;
      uint64_t v67 = v26;
LABEL_30:
      outlined consume of BusinessCardEntity?(v61, v62, v63, v64, v65, v66, v67, v33, v90, v93, v96);
      return v12;
    }
    uint64_t v34 = v102;
    uint64_t v35 = v108;
    uint64_t v100 = v26;
    uint64_t v101 = v33;
    uint64_t v36 = v113;
    BOOL v37 = v113 == 0x68737265626D656DLL && v114 == 0xEF647261635F7069;
    uint64_t v99 = v30;
    if (v37 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = v29;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v39 = v35;
      swift_retain();
      uint64_t v40 = v109;
      swift_retain();
      uint64_t v41 = v100;
      swift_retain();
      uint64_t v42 = v101;
      swift_retain();
      uint64_t v43 = v105;
      swift_retain();
      unint64_t v45 = v106;
      uint64_t v44 = v107;
      outlined copy of Data?(v107, v106);
      EntityProperty.wrappedValue.getter();
      uint64_t v46 = v41;
      uint64_t v47 = v99;
      uint64_t v48 = v102;
      uint64_t v92 = v44;
      uint64_t v49 = v40;
      uint64_t v50 = v46;
      uint64_t v51 = v38;
      uint64_t v52 = v104;
      outlined consume of BusinessCardEntity?(v51, v99, v102, v104, v39, v49, v46, v42, v43, v92, v45);
      unint64_t v53 = v114;
      if (!v114)
      {
        outlined consume of BusinessCardEntity?(v103, v47, v48, v52, v39, v49, v50, v101, v43, v107, v106);
        return 0x68737265626D656DLL;
      }
      uint64_t v54 = v113;
      uint64_t v113 = 0;
      unint64_t v114 = 0xE000000000000000;
      _StringGuts.grow(_:)(18);
      swift_bridgeObjectRelease();
      uint64_t v113 = v54;
      unint64_t v114 = v53;
      v55._uint64_t countAndFlagsBits = 0xD000000000000010;
      v55._object = (void *)0x800000025867FDB0;
      String.append(_:)(v55);
      outlined consume of BusinessCardEntity?(v103, v47, v48, v52, v108, v109, v50, v101, v43, v107, v106);
      return v113;
    }
    if (v36 == 0x7373656E69737562 && v32 == 0xED0000647261635FLL)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v69 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v69 & 1) == 0)
      {
        unint64_t v96 = v106;
        uint64_t v93 = v107;
        uint64_t v90 = v105;
        uint64_t v61 = v29;
        uint64_t v62 = v30;
        uint64_t v63 = v34;
        uint64_t v64 = v104;
        uint64_t v65 = v35;
        uint64_t v66 = v109;
        uint64_t v67 = v100;
LABEL_50:
        uint64_t v33 = v101;
        goto LABEL_30;
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v72 = v35;
    uint64_t v73 = v109;
    swift_retain();
    uint64_t v74 = v100;
    swift_retain();
    uint64_t v75 = v101;
    swift_retain();
    uint64_t v76 = v105;
    swift_retain();
    unint64_t v78 = v106;
    uint64_t v77 = v107;
    outlined copy of Data?(v107, v106);
    EntityProperty.wrappedValue.getter();
    uint64_t v79 = v73;
    uint64_t v80 = v99;
    uint64_t v94 = v77;
    unint64_t v97 = v78;
    uint64_t v81 = v102;
    uint64_t v82 = v104;
    outlined consume of BusinessCardEntity?(v103, v99, v102, v104, v72, v79, v74, v75, v76, v94, v97);
    unint64_t v83 = v114;
    if (v114)
    {
      uint64_t v84 = v113;
      uint64_t v113 = 0;
      unint64_t v114 = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease();
      uint64_t v113 = v84;
      unint64_t v114 = v83;
      v85._uint64_t countAndFlagsBits = 0x73656E6973756220;
      v85._object = (void *)0xEE00647261632073;
      String.append(_:)(v85);
      outlined consume of BusinessCardEntity?(v103, v80, v81, v82, v72, v109, v74, v101, v105, v107, v106);
      return v113;
    }
    unint64_t v96 = v106;
    uint64_t v93 = v107;
    uint64_t v90 = v105;
    uint64_t v61 = v103;
    uint64_t v62 = v80;
    uint64_t v63 = v81;
    uint64_t v64 = v82;
    uint64_t v65 = v72;
    uint64_t v66 = v109;
    uint64_t v67 = v74;
    goto LABEL_50;
  }
  outlined init with copy of SearchAppEntity?(a1, (uint64_t)v8, &demangling cache variable for type metadata for IdCardEntity?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v11) == 1)
  {
    uint64_t v12 = 0x6C616E6F73726570;
    uint64_t v14 = (uint64_t)v8;
    goto LABEL_8;
  }
  EntityProperty.wrappedValue.getter();
  outlined init with take of SearchResultItem?((uint64_t)&v110, (uint64_t)v112, &demangling cache variable for type metadata for PersonalCardEntity?);
  outlined destroy of SearchEntity((uint64_t)v8, (void (*)(void))type metadata accessor for IdCardEntity);
  outlined init with take of SearchResultItem?((uint64_t)v112, (uint64_t)&v113, &demangling cache variable for type metadata for PersonalCardEntity?);
  if (getEnumTag for DataFilter.FilterResult(&v113) == 1) {
    return 0x6C616E6F73726570;
  }
  outlined retain of PersonalCardEntity((uint64_t)&v113);
  EntityProperty.wrappedValue.getter();
  outlined release of PersonalCardEntity?((uint64_t)v112);
  unint64_t v56 = v111;
  if (v111)
  {
    uint64_t v57 = v110;
    BOOL v58 = v110 == 0x70737361705F6469 && v111 == 0xEB0000000074726FLL;
    if (v58 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      outlined retain of PersonalCardEntity((uint64_t)&v113);
      EntityProperty.wrappedValue.getter();
      outlined release of PersonalCardEntity?((uint64_t)v112);
      if (!v111)
      {
        outlined release of PersonalCardEntity?((uint64_t)v112);
        return 0x74726F7073736170;
      }
      unint64_t v59 = 0x726F707373617020;
      unint64_t v60 = 0xE900000000000074;
    }
    else if (v57 == 0xD000000000000011 && v56 == 0x800000025867F730 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      outlined retain of PersonalCardEntity((uint64_t)&v113);
      EntityProperty.wrappedValue.getter();
      outlined release of PersonalCardEntity?((uint64_t)v112);
      unint64_t v70 = v111;
      if (!v111)
      {
        outlined release of PersonalCardEntity?((uint64_t)v112);
        return 0xD000000000000010;
      }
      uint64_t v71 = v110;
      uint64_t v110 = 0;
      unint64_t v111 = 0xE000000000000000;
      _StringGuts.grow(_:)(19);
      swift_bridgeObjectRelease();
      uint64_t v110 = v71;
      unint64_t v111 = v70;
      unint64_t v60 = 0x800000025867FDF0;
      unint64_t v59 = 0xD000000000000011;
    }
    else
    {
      BOOL v86 = v57 == 0x6E656572675F6469 && v56 == 0xED0000647261635FLL;
      if (v86 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        outlined retain of PersonalCardEntity((uint64_t)&v113);
        EntityProperty.wrappedValue.getter();
        outlined release of PersonalCardEntity?((uint64_t)v112);
        if (!v111)
        {
          outlined release of PersonalCardEntity?((uint64_t)v112);
          return 0x6163206E65657267;
        }
        unint64_t v59 = 0x63206E6565726720;
        unint64_t v60 = 0xEB00000000647261;
      }
      else
      {
        if (v57 == 0x6E73735F6469 && v56 == 0xE600000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v88 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v88 & 1) == 0)
          {
            outlined release of PersonalCardEntity?((uint64_t)v112);
            return 0x206C616E6F726570;
          }
        }
        outlined retain of PersonalCardEntity((uint64_t)&v113);
        EntityProperty.wrappedValue.getter();
        outlined release of PersonalCardEntity?((uint64_t)v112);
        if (!v111)
        {
          outlined release of PersonalCardEntity?((uint64_t)v112);
          return 7238515;
        }
        unint64_t v59 = 1853059872;
        unint64_t v60 = 0xE400000000000000;
      }
    }
    String.append(_:)(*(Swift::String *)&v59);
    outlined release of PersonalCardEntity?((uint64_t)v112);
    return v110;
  }
  uint64_t v12 = 0x6C616E6F73726570;
  outlined release of PersonalCardEntity?((uint64_t)v112);
  return v12;
}

uint64_t SearchEntity.appEntityDescription(appEntity:isFullDescription:)(uint64_t a1, int a2)
{
  int v343 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v311 = (uint64_t)&v303 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v303 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v320 = (uint64_t)&v303 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v323 = (uint64_t)&v303 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v321 = (uint64_t)&v303 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v328 = (uint64_t)&v303 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v327 = (uint64_t)&v303 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v334 = (uint64_t)&v303 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v333 = (uint64_t)&v303 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v341 = (uint64_t)&v303 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  uint64_t v315 = (uint64_t)&v303 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v319 = (uint64_t)&v303 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v326 = (char *)&v303 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v332 = (uint64_t)&v303 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v337 = (uint64_t)&v303 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v344 = (uint64_t)&v303 - v35;
  uint64_t v345 = type metadata accessor for Date();
  uint64_t v340 = *(void *)(v345 - 8);
  uint64_t v36 = MEMORY[0x270FA5388](v345);
  uint64_t v309 = (char *)&v303 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  Swift::String v312 = (char *)&v303 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v318 = (char *)&v303 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v322 = (char *)&v303 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v329 = (char *)&v303 - v45;
  MEMORY[0x270FA5388](v44);
  uint64_t v338 = (char *)&v303 - v46;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  uint64_t v48 = MEMORY[0x270FA5388](v47 - 8);
  uint64_t v307 = (uint64_t)&v303 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v306 = (uint64_t)&v303 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v308 = (uint64_t)&v303 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  uint64_t v310 = (uint64_t)&v303 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  uint64_t v314 = (uint64_t)&v303 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  uint64_t v313 = (uint64_t)&v303 - v59;
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  uint64_t v317 = (uint64_t)&v303 - v61;
  uint64_t v62 = MEMORY[0x270FA5388](v60);
  uint64_t v316 = (uint64_t)&v303 - v63;
  uint64_t v64 = MEMORY[0x270FA5388](v62);
  uint64_t v66 = (char *)&v303 - v65;
  uint64_t v67 = MEMORY[0x270FA5388](v64);
  uint64_t v325 = (uint64_t)&v303 - v68;
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  uint64_t v324 = (uint64_t)&v303 - v70;
  uint64_t v71 = MEMORY[0x270FA5388](v69);
  uint64_t v331 = (char *)&v303 - v72;
  uint64_t v73 = MEMORY[0x270FA5388](v71);
  uint64_t v330 = (uint64_t)&v303 - v74;
  uint64_t v75 = MEMORY[0x270FA5388](v73);
  uint64_t v336 = (uint64_t)&v303 - v76;
  uint64_t v77 = MEMORY[0x270FA5388](v75);
  uint64_t v335 = (uint64_t)&v303 - v78;
  uint64_t v79 = MEMORY[0x270FA5388](v77);
  uint64_t v81 = (char *)&v303 - v80;
  uint64_t v82 = MEMORY[0x270FA5388](v79);
  uint64_t v84 = (char *)&v303 - v83;
  uint64_t v85 = MEMORY[0x270FA5388](v82);
  uint64_t v87 = (char *)&v303 - v86;
  uint64_t v88 = MEMORY[0x270FA5388](v85);
  uint64_t v90 = (char *)&v303 - v89;
  uint64_t v91 = MEMORY[0x270FA5388](v88);
  uint64_t v93 = (char *)&v303 - v92;
  MEMORY[0x270FA5388](v91);
  unint64_t v95 = (char *)&v303 - v94;
  v348._uint64_t countAndFlagsBits = 0;
  v348._object = (void *)0xE000000000000000;
  uint64_t v346 = a1;
  outlined init with copy of SearchAppEntity?(a1, (uint64_t)&v303 - v94, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  uint64_t v96 = type metadata accessor for SearchAppEntity(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v96) == 1)
  {
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)v95, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
    return 0;
  }
  uint64_t v305 = v66;
  uint64_t v304 = v8;
  EntityProperty.wrappedValue.getter();
  uint64_t countAndFlagsBits = v347._countAndFlagsBits;
  object = v347._object;
  outlined destroy of SearchEntity((uint64_t)v95, (void (*)(void))type metadata accessor for SearchAppEntity);
  if ((countAndFlagsBits != 0xD000000000000013 || object != (void *)0x800000025867FE10)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (countAndFlagsBits == 0xD000000000000013 && object == (void *)0x800000025867FE30
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if (v343) {
        uint64_t v113 = 0x646E696D65722061;
      }
      else {
        uint64_t v113 = 0x7265646E696D6572;
      }
      if (v343) {
        unint64_t v114 = 0xEA00000000007265;
      }
      else {
        unint64_t v114 = 0xE800000000000000;
      }
      unint64_t v115 = v114;
      String.append(_:)(*(Swift::String *)&v113);
      swift_bridgeObjectRelease();
      outlined init with copy of SearchAppEntity?(v346, (uint64_t)v87, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      if (__swift_getEnumTagSinglePayload((uint64_t)v87, 1, v96) == 1)
      {
        unint64_t v111 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
        uint64_t v112 = (uint64_t)v87;
        goto LABEL_20;
      }
      uint64_t v129 = *((void *)v87 + 5);
      uint64_t v128 = (void *)*((void *)v87 + 6);
      swift_bridgeObjectRetain();
      uint64_t v130 = (uint64_t)v87;
      goto LABEL_37;
    }
    if (countAndFlagsBits == 0xD00000000000001BLL && object == (void *)0x800000025867FE50
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v134._object = (void *)0x800000025867FFD0;
      v134._uint64_t countAndFlagsBits = 0xD000000000000013;
      String.append(_:)(v134);
      outlined init with copy of SearchAppEntity?(v346, (uint64_t)v84, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v96) != 1)
      {
        uint64_t v136 = *((void *)v84 + 5);
        Swift::String v135 = (void *)*((void *)v84 + 6);
        swift_bridgeObjectRetain();
        outlined destroy of SearchEntity((uint64_t)v84, (void (*)(void))type metadata accessor for SearchAppEntity);
        if (v135)
        {
          swift_bridgeObjectRelease();
          v347._uint64_t countAndFlagsBits = 0;
          v347._object = (void *)0xE000000000000000;
          _StringGuts.grow(_:)(24);
          swift_bridgeObjectRelease();
          v347._uint64_t countAndFlagsBits = v136;
          v347._object = v135;
          v137._uint64_t countAndFlagsBits = 0xD000000000000016;
          v137._object = (void *)0x800000025867FFF0;
          String.append(_:)(v137);
          Swift::String v348 = v347;
        }
        return v348._countAndFlagsBits;
      }
      unint64_t v111 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
      goto LABEL_46;
    }
    if (countAndFlagsBits == 0xD000000000000014 && object == (void *)0x800000025867C750)
    {
      swift_bridgeObjectRelease();
      uint64_t v138 = v346;
      goto LABEL_54;
    }
    char v139 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v138 = v346;
    if (v139)
    {
      swift_bridgeObjectRelease();
LABEL_54:
      if (v343) {
        uint64_t v140 = 0x6C69616D65206E61;
      }
      else {
        uint64_t v140 = 0x6C69616D65;
      }
      if (v343) {
        unint64_t v141 = 0xE800000000000000;
      }
      else {
        unint64_t v141 = 0xE500000000000000;
      }
      unint64_t v142 = v141;
      String.append(_:)(*(Swift::String *)&v140);
      swift_bridgeObjectRelease();
      outlined init with copy of SearchAppEntity?(v138, (uint64_t)v81, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v81, 1, v96);
      uint64_t v106 = v345;
      if (EnumTagSinglePayload == 1)
      {
        outlined destroy of PQAVerificationModelProtocol?((uint64_t)v81, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      }
      else
      {
        uint64_t v145 = *((void *)v81 + 5);
        uint64_t v144 = (void *)*((void *)v81 + 6);
        swift_bridgeObjectRetain();
        outlined destroy of SearchEntity((uint64_t)v81, (void (*)(void))type metadata accessor for SearchAppEntity);
        if (v144)
        {
          v347._uint64_t countAndFlagsBits = 0x2064656C6C616320;
          v347._object = (void *)0xE800000000000000;
          v146._uint64_t countAndFlagsBits = v145;
          v146._object = v144;
          String.append(_:)(v146);
          swift_bridgeObjectRelease();
          String.append(_:)(v347);
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v147 = v335;
      outlined init with copy of SearchAppEntity?(v138, v335, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      if (__swift_getEnumTagSinglePayload(v147, 1, v96) == 1)
      {
        uint64_t v148 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
        uint64_t v149 = v147;
      }
      else
      {
        uint64_t v150 = v333;
        outlined init with copy of SearchAppEntity?(v147 + *(int *)(v96 + 40), v333, &demangling cache variable for type metadata for SearchResult?);
        outlined destroy of SearchEntity(v147, (void (*)(void))type metadata accessor for SearchAppEntity);
        uint64_t v151 = type metadata accessor for SearchResult(0);
        if (__swift_getEnumTagSinglePayload(v150, 1, v151) != 1)
        {
          id v164 = *(id *)(v150 + *(int *)(v151 + 20));
          outlined destroy of SearchEntity(v150, (void (*)(void))type metadata accessor for SearchResult);
          uint64_t v165 = CSSearchableItem.senderNames.getter();

          if (v165)
          {
            v347._uint64_t countAndFlagsBits = 0x206D6F726620;
            v347._object = (void *)0xE600000000000000;
            specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, 1, v165);
            uint64_t v166 = *(void *)(v165 + 32);
            uint64_t v167 = *(void **)(v165 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v168._uint64_t countAndFlagsBits = v166;
            v168._object = v167;
            String.append(_:)(v168);
            swift_bridgeObjectRelease();
            String.append(_:)(v347);
            swift_bridgeObjectRelease();
          }
LABEL_69:
          uint64_t v152 = v336;
          outlined init with copy of SearchAppEntity?(v138, v336, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
          if (__swift_getEnumTagSinglePayload(v152, 1, v96) == 1)
          {
            uint64_t v153 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
            uint64_t v154 = v152;
          }
          else
          {
            uint64_t v155 = v334;
            outlined init with copy of SearchAppEntity?(v152 + *(int *)(v96 + 40), v334, &demangling cache variable for type metadata for SearchResult?);
            outlined destroy of SearchEntity(v152, (void (*)(void))type metadata accessor for SearchAppEntity);
            uint64_t v156 = type metadata accessor for SearchResult(0);
            if (__swift_getEnumTagSinglePayload(v155, 1, v156) != 1)
            {
              id v169 = *(id *)(v155 + *(int *)(v156 + 20));
              outlined destroy of SearchEntity(v155, (void (*)(void))type metadata accessor for SearchResult);
              uint64_t v110 = v337;
              CSSearchableItem.contentCreationDate.getter(v337);

              if (__swift_getEnumTagSinglePayload(v110, 1, v106) == 1) {
                goto LABEL_18;
              }
              uint64_t v117 = v340;
              uint64_t v118 = v329;
              (*(void (**)(char *, uint64_t, uint64_t))(v340 + 32))(v329, v110, v106);
              SearchEntity.eventDateFormatter.getter();
              uint64_t v120 = v170;
              v121.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
              id v122 = objc_msgSend(v120, sel_stringFromDate_, v121.super.isa);
              goto LABEL_35;
            }
            uint64_t v153 = &demangling cache variable for type metadata for SearchResult?;
            uint64_t v154 = v155;
          }
          outlined destroy of PQAVerificationModelProtocol?(v154, v153);
          uint64_t v110 = v337;
          goto LABEL_17;
        }
        uint64_t v148 = &demangling cache variable for type metadata for SearchResult?;
        uint64_t v149 = v150;
      }
      outlined destroy of PQAVerificationModelProtocol?(v149, v148);
      goto LABEL_69;
    }
    if (countAndFlagsBits == 0xD000000000000013 && object == (void *)0x800000025867FE70
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if (v343) {
        uint64_t v157 = 0x67617373656D2061;
      }
      else {
        uint64_t v157 = 0x6567617373656DLL;
      }
      if (v343) {
        unint64_t v158 = 0xE900000000000065;
      }
      else {
        unint64_t v158 = 0xE700000000000000;
      }
      unint64_t v159 = v158;
      String.append(_:)(*(Swift::String *)&v157);
      swift_bridgeObjectRelease();
      uint64_t v160 = v330;
      outlined init with copy of SearchAppEntity?(v138, v330, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      int v161 = __swift_getEnumTagSinglePayload(v160, 1, v96);
      uint64_t v106 = v345;
      if (v161 == 1)
      {
        uint64_t v162 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
        uint64_t v163 = v160;
      }
      else
      {
        uint64_t v171 = v327;
        outlined init with copy of SearchAppEntity?(v160 + *(int *)(v96 + 40), v327, &demangling cache variable for type metadata for SearchResult?);
        outlined destroy of SearchEntity(v160, (void (*)(void))type metadata accessor for SearchAppEntity);
        uint64_t v172 = type metadata accessor for SearchResult(0);
        if (__swift_getEnumTagSinglePayload(v171, 1, v172) != 1)
        {
          id v184 = *(id *)(v171 + *(int *)(v172 + 20));
          uint64_t v185 = v171;
          id v186 = v184;
          outlined destroy of SearchEntity(v185, (void (*)(void))type metadata accessor for SearchResult);
          uint64_t v187 = CSSearchableItem.senderNames.getter();

          uint64_t v173 = (uint64_t)v331;
          if (v187)
          {
            v347._uint64_t countAndFlagsBits = 0x206D6F726620;
            v347._object = (void *)0xE600000000000000;
            specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, 1, v187);
            uint64_t v188 = *(void *)(v187 + 32);
            uint64_t v189 = *(void **)(v187 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v190._uint64_t countAndFlagsBits = v188;
            v190._object = v189;
            String.append(_:)(v190);
            swift_bridgeObjectRelease();
            String.append(_:)(v347);
            swift_bridgeObjectRelease();
          }
LABEL_92:
          outlined init with copy of SearchAppEntity?(v138, v173, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
          if (__swift_getEnumTagSinglePayload(v173, 1, v96) == 1)
          {
            uint64_t v174 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
            uint64_t v175 = v173;
          }
          else
          {
            uint64_t v176 = v328;
            outlined init with copy of SearchAppEntity?(v173 + *(int *)(v96 + 40), v328, &demangling cache variable for type metadata for SearchResult?);
            outlined destroy of SearchEntity(v173, (void (*)(void))type metadata accessor for SearchAppEntity);
            uint64_t v177 = type metadata accessor for SearchResult(0);
            if (__swift_getEnumTagSinglePayload(v176, 1, v177) != 1)
            {
              id v191 = *(id *)(v176 + *(int *)(v177 + 20));
              outlined destroy of SearchEntity(v176, (void (*)(void))type metadata accessor for SearchResult);
              uint64_t v110 = v332;
              CSSearchableItem.contentCreationDate.getter(v332);

              if (__swift_getEnumTagSinglePayload(v110, 1, v106) == 1) {
                goto LABEL_18;
              }
              uint64_t v117 = v340;
              uint64_t v118 = v322;
              (*(void (**)(char *, uint64_t, uint64_t))(v340 + 32))(v322, v110, v106);
              SearchEntity.eventDateFormatter.getter();
              uint64_t v120 = v192;
              v121.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
              id v122 = objc_msgSend(v120, sel_stringFromDate_, v121.super.isa);
              goto LABEL_35;
            }
            uint64_t v174 = &demangling cache variable for type metadata for SearchResult?;
            uint64_t v175 = v176;
          }
          outlined destroy of PQAVerificationModelProtocol?(v175, v174);
          uint64_t v110 = v332;
          goto LABEL_17;
        }
        uint64_t v162 = &demangling cache variable for type metadata for SearchResult?;
        uint64_t v163 = v171;
      }
      outlined destroy of PQAVerificationModelProtocol?(v163, v162);
      uint64_t v173 = (uint64_t)v331;
      goto LABEL_92;
    }
    if (countAndFlagsBits == 0xD000000000000014 && object == (void *)0x800000025867FE90
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if (v343) {
        uint64_t v178 = 0x206563696F762061;
      }
      else {
        uint64_t v178 = 0x656D206563696F76;
      }
      if (v343) {
        unint64_t v179 = 0xEC0000006F6D656DLL;
      }
      else {
        unint64_t v179 = 0xEA00000000006F6DLL;
      }
      unint64_t v180 = v179;
      String.append(_:)(*(Swift::String *)&v178);
      swift_bridgeObjectRelease();
      uint64_t v181 = v324;
      outlined init with copy of SearchAppEntity?(v138, v324, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      if (__swift_getEnumTagSinglePayload(v181, 1, v96) == 1)
      {
        unint64_t v182 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
        uint64_t v183 = v181;
      }
      else
      {
        uint64_t v193 = v321;
        outlined init with copy of SearchAppEntity?(v181 + *(int *)(v96 + 40), v321, &demangling cache variable for type metadata for SearchResult?);
        outlined destroy of SearchEntity(v181, (void (*)(void))type metadata accessor for SearchAppEntity);
        uint64_t v194 = type metadata accessor for SearchResult(0);
        if (__swift_getEnumTagSinglePayload(v193, 1, v194) != 1)
        {
          id v200 = *(id *)(v193 + *(int *)(v194 + 20));
          uint64_t v201 = v193;
          id v202 = v200;
          outlined destroy of SearchEntity(v201, (void (*)(void))type metadata accessor for SearchResult);
          uint64_t v203 = CSSearchableItem.senderNames.getter();

          uint64_t v195 = v345;
          if (v203)
          {
            v347._uint64_t countAndFlagsBits = 0x206D6F726620;
            v347._object = (void *)0xE600000000000000;
            specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, 1, v203);
            uint64_t v204 = *(void *)(v203 + 32);
            unint64_t v205 = *(void **)(v203 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v206._uint64_t countAndFlagsBits = v204;
            v206._object = v205;
            String.append(_:)(v206);
            swift_bridgeObjectRelease();
            String.append(_:)(v347);
            swift_bridgeObjectRelease();
          }
LABEL_115:
          uint64_t v196 = v325;
          outlined init with copy of SearchAppEntity?(v138, v325, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
          if (__swift_getEnumTagSinglePayload(v196, 1, v96) == 1)
          {
            outlined destroy of PQAVerificationModelProtocol?(v196, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
            uint64_t v84 = v326;
          }
          else
          {
            uint64_t v197 = v323;
            outlined init with copy of SearchAppEntity?(v196 + *(int *)(v96 + 40), v323, &demangling cache variable for type metadata for SearchResult?);
            outlined destroy of SearchEntity(v196, (void (*)(void))type metadata accessor for SearchAppEntity);
            uint64_t v198 = type metadata accessor for SearchResult(0);
            int v199 = __swift_getEnumTagSinglePayload(v197, 1, v198);
            uint64_t v84 = v326;
            if (v199 != 1)
            {
              id v207 = *(id *)(v197 + *(int *)(v198 + 20));
              outlined destroy of SearchEntity(v197, (void (*)(void))type metadata accessor for SearchResult);
              CSSearchableItem.contentCreationDate.getter((uint64_t)v84);

              if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v195) != 1)
              {
                uint64_t v208 = v340;
                uint64_t v209 = v318;
                (*(void (**)(char *, char *, uint64_t))(v340 + 32))(v318, v84, v195);
                SearchEntity.eventDateFormatter.getter();
                char v211 = v210;
                Class isa = Date._bridgeToObjectiveC()().super.isa;
                id v213 = objc_msgSend(v211, sel_stringFromDate_, isa);

                uint64_t v214 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v216 = v215;

                v347._uint64_t countAndFlagsBits = 544108320;
                v347._object = (void *)0xE400000000000000;
                v217._uint64_t countAndFlagsBits = v214;
                v217._object = v216;
                String.append(_:)(v217);
                swift_bridgeObjectRelease();
                String.append(_:)(v347);
                swift_bridgeObjectRelease();
                (*(void (**)(char *, uint64_t))(v208 + 8))(v209, v195);
                return v348._countAndFlagsBits;
              }
              goto LABEL_120;
            }
            outlined destroy of PQAVerificationModelProtocol?(v197, &demangling cache variable for type metadata for SearchResult?);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v84, 1, 1, v195);
LABEL_120:
          unint64_t v111 = &demangling cache variable for type metadata for Date?;
LABEL_46:
          uint64_t v112 = (uint64_t)v84;
          goto LABEL_20;
        }
        unint64_t v182 = &demangling cache variable for type metadata for SearchResult?;
        uint64_t v183 = v193;
      }
      outlined destroy of PQAVerificationModelProtocol?(v183, v182);
      uint64_t v195 = v345;
      goto LABEL_115;
    }
    if (countAndFlagsBits == 0xD000000000000015 && object == (void *)0x800000025867FEB0)
    {
      swift_bridgeObjectRelease();
LABEL_130:
      v218._uint64_t countAndFlagsBits = 0x616320656E6F6870;
      v218._object = (void *)0xEA00000000006C6CLL;
      String.append(_:)(v218);
      uint64_t v110 = (uint64_t)v305;
      outlined init with copy of SearchAppEntity?(v138, (uint64_t)v305, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      if (__swift_getEnumTagSinglePayload(v110, 1, v96) == 1)
      {
        unint64_t v111 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
        goto LABEL_19;
      }
      uint64_t v219 = v320;
      outlined init with copy of SearchAppEntity?(v110 + *(int *)(v96 + 40), v320, &demangling cache variable for type metadata for SearchResult?);
      outlined destroy of SearchEntity(v110, (void (*)(void))type metadata accessor for SearchAppEntity);
      uint64_t v220 = type metadata accessor for SearchResult(0);
      if (__swift_getEnumTagSinglePayload(v219, 1, v220) != 1)
      {
        uint64_t v224 = *(int *)(v220 + 20);
        uint64_t v225 = v320;
        id v226 = *(id *)(v320 + v224);
        outlined destroy of SearchEntity(v225, (void (*)(void))type metadata accessor for SearchResult);
        uint64_t v227 = CSSearchableItem.senderNames.getter();

        if (!v227) {
          return v348._countAndFlagsBits;
        }
        v347._uint64_t countAndFlagsBits = 0x206D6F726620;
        v347._object = (void *)0xE600000000000000;
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, 1, v227);
        uint64_t v228 = *(void *)(v227 + 32);
        Swift::String v229 = *(void **)(v227 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v230._uint64_t countAndFlagsBits = v228;
        v230._object = v229;
        String.append(_:)(v230);
        goto LABEL_40;
      }
      unint64_t v111 = &demangling cache variable for type metadata for SearchResult?;
      uint64_t v221 = (void **)&v350;
      goto LABEL_157;
    }
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
      swift_bridgeObjectRelease();
      uint64_t v138 = v346;
      goto LABEL_130;
    }
    if (countAndFlagsBits == 0xD000000000000015 && object == (void *)0x800000025867FED0
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v222._uint64_t countAndFlagsBits = 0x65746F6E2061;
      v222._object = (void *)0xE600000000000000;
      String.append(_:)(v222);
      uint64_t v223 = v316;
      outlined init with copy of SearchAppEntity?(v346, v316, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      if (__swift_getEnumTagSinglePayload(v223, 1, v96) == 1)
      {
        outlined destroy of PQAVerificationModelProtocol?(v316, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      }
      else
      {
        uint64_t v231 = v316;
        uint64_t v233 = *(void *)(v316 + 40);
        os_log_type_t v232 = *(void **)(v316 + 48);
        swift_bridgeObjectRetain();
        outlined destroy of SearchEntity(v231, (void (*)(void))type metadata accessor for SearchAppEntity);
        if (v232)
        {
          swift_bridgeObjectRelease();
          if (v343)
          {
            v347._uint64_t countAndFlagsBits = 0;
            v347._object = (void *)0xE000000000000000;
            _StringGuts.grow(_:)(18);
            swift_bridgeObjectRelease();
            v347._uint64_t countAndFlagsBits = 0x632065746F6E2061;
            v347._object = (void *)0xEF272064656C6C61;
            v234._uint64_t countAndFlagsBits = v233;
            v234._object = v232;
            String.append(_:)(v234);
            swift_bridgeObjectRelease();
            uint64_t v235 = 39;
            unint64_t v236 = 0xE100000000000000;
          }
          else
          {
            v347._uint64_t countAndFlagsBits = 0x2720656874;
            v347._object = (void *)0xE500000000000000;
            v239._uint64_t countAndFlagsBits = v233;
            v239._object = v232;
            String.append(_:)(v239);
            swift_bridgeObjectRelease();
            uint64_t v235 = 0x65746F6E2027;
            unint64_t v236 = 0xE600000000000000;
          }
          String.append(_:)(*(Swift::String *)&v235);
          Swift::String v348 = v347;
        }
      }
      uint64_t v240 = v317;
      outlined init with copy of SearchAppEntity?(v346, v317, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
      if (__swift_getEnumTagSinglePayload(v240, 1, v96) == 1)
      {
        uint64_t v241 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
        p_object = (uint64_t *)&v348._object;
      }
      else
      {
        uint64_t v243 = v317;
        uint64_t v244 = (uint64_t)v304;
        outlined init with copy of SearchAppEntity?(v317 + *(int *)(v96 + 40), (uint64_t)v304, &demangling cache variable for type metadata for SearchResult?);
        outlined destroy of SearchEntity(v243, (void (*)(void))type metadata accessor for SearchAppEntity);
        uint64_t v245 = type metadata accessor for SearchResult(0);
        if (__swift_getEnumTagSinglePayload(v244, 1, v245) != 1)
        {
          uint64_t v246 = *(int *)(v245 + 20);
          uint64_t v247 = (uint64_t)v304;
          id v248 = *(id *)&v304[v246];
          outlined destroy of SearchEntity(v247, (void (*)(void))type metadata accessor for SearchResult);
          uint64_t v249 = v319;
          CSSearchableItem.contentCreationDate.getter(v319);

          if (__swift_getEnumTagSinglePayload(v249, 1, v345) != 1)
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v340 + 32))(v312, v319, v345);
            SearchEntity.eventDateFormatter.getter();
            uint64_t v251 = v250;
            Class v252 = Date._bridgeToObjectiveC()().super.isa;
            id v253 = objc_msgSend(v251, sel_stringFromDate_, v252);

            uint64_t v254 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v256 = v255;

            if (v343)
            {
              v347._uint64_t countAndFlagsBits = 544108320;
              v347._object = (void *)0xE400000000000000;
              v257._uint64_t countAndFlagsBits = v254;
              v257._object = v256;
              String.append(_:)(v257);
              swift_bridgeObjectRelease();
              uint64_t v258 = v347._countAndFlagsBits;
              uint64_t v259 = v347._object;
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v258 = 0;
              uint64_t v259 = (void *)0xE000000000000000;
            }
            uint64_t v270 = v259;
            String.append(_:)(*(Swift::String *)&v258);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v340 + 8))(v312, v345);
            return v348._countAndFlagsBits;
          }
          goto LABEL_156;
        }
        uint64_t v241 = &demangling cache variable for type metadata for SearchResult?;
        p_object = &v336;
      }
      outlined destroy of PQAVerificationModelProtocol?(*(p_object - 32), v241);
      __swift_storeEnumTagSinglePayload(v319, 1, 1, v345);
LABEL_156:
      unint64_t v111 = &demangling cache variable for type metadata for Date?;
      uint64_t v221 = (void **)&v349;
      goto LABEL_157;
    }
    if ((countAndFlagsBits != 0xD000000000000011 || object != (void *)0x800000025867FEF0)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      if (countAndFlagsBits == 0xD00000000000002BLL && object == (void *)0x800000025867FF10
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
        || countAndFlagsBits == 0xD000000000000023 && object == (void *)0x800000025867FF40
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v285._uint64_t countAndFlagsBits = 0x656C69662061;
        v285._object = (void *)0xE600000000000000;
        String.append(_:)(v285);
        uint64_t v286 = v310;
        outlined init with copy of SearchAppEntity?(v346, v310, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
        if (__swift_getEnumTagSinglePayload(v286, 1, v96) != 1)
        {
          uint64_t v287 = v310;
          uint64_t v129 = *(void *)(v310 + 40);
          uint64_t v128 = *(void **)(v310 + 48);
          swift_bridgeObjectRetain();
          uint64_t v130 = v287;
LABEL_37:
          outlined destroy of SearchEntity(v130, (void (*)(void))type metadata accessor for SearchAppEntity);
          if (!v128) {
            return v348._countAndFlagsBits;
          }
          goto LABEL_38;
        }
        unint64_t v111 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
        uint64_t v221 = (void **)&v342;
      }
      else
      {
        if ((countAndFlagsBits != 0xD000000000000019 || object != (void *)0x800000025867FF70)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          if (countAndFlagsBits == 0xD000000000000012 && object == (void *)0x800000025867FF90
            || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v292._uint64_t countAndFlagsBits = 0x74656C6C61772061;
            v292._object = (void *)0xED00006472616320;
            String.append(_:)(v292);
            uint64_t v293 = v306;
            outlined init with copy of SearchAppEntity?(v346, v306, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
            if (__swift_getEnumTagSinglePayload(v293, 1, v96) == 1)
            {
              unint64_t v111 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
              uint64_t v221 = (void **)&v338;
              goto LABEL_157;
            }
            uint64_t v294 = &v338;
          }
          else
          {
            if (countAndFlagsBits == 0xD000000000000016 && object == (void *)0x800000025867FFB0)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v295 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if ((v295 & 1) == 0)
              {
                if (one-time initialization token for search != -1) {
                  swift_once();
                }
                uint64_t v299 = type metadata accessor for Logger();
                __swift_project_value_buffer(v299, (uint64_t)static Logging.search);
                Swift::String v300 = Logger.logObject.getter();
                os_log_type_t v301 = static os_log_type_t.debug.getter();
                if (os_log_type_enabled(v300, v301))
                {
                  unint64_t v302 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)unint64_t v302 = 0;
                  _os_log_impl(&dword_257DC6000, v300, v301, "No appEntity description for appEntity type", v302, 2u);
                  MEMORY[0x25A2C94B0](v302, -1, -1);
                }

                return v348._countAndFlagsBits;
              }
            }
            v296._uint64_t countAndFlagsBits = 0x6972616661732061;
            v296._object = (void *)0xED00006B6E696C20;
            String.append(_:)(v296);
            uint64_t v297 = v307;
            outlined init with copy of SearchAppEntity?(v346, v307, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
            if (__swift_getEnumTagSinglePayload(v297, 1, v96) == 1)
            {
              unint64_t v111 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
              uint64_t v221 = (void **)&v339;
              goto LABEL_157;
            }
            uint64_t v294 = (char **)&v339;
          }
          uint64_t v298 = (uint64_t)*(v294 - 32);
          uint64_t v129 = *(void *)(v298 + 40);
          uint64_t v128 = *(void **)(v298 + 48);
          swift_bridgeObjectRetain();
          outlined destroy of SearchEntity(v298, (void (*)(void))type metadata accessor for SearchAppEntity);
          if (!v128) {
            return v348._countAndFlagsBits;
          }
          static String._createEmpty(withInitialCapacity:)(10);
          swift_bridgeObjectRelease();
LABEL_38:
          uint64_t v131 = 0x2064656C6C616320;
          uint64_t v132 = (void *)0xE800000000000000;
LABEL_39:
          v347._uint64_t countAndFlagsBits = v131;
          v347._object = v132;
          v133._uint64_t countAndFlagsBits = v129;
          v133._object = v128;
          String.append(_:)(v133);
LABEL_40:
          swift_bridgeObjectRelease();
          String.append(_:)(v347);
          swift_bridgeObjectRelease();
          return v348._countAndFlagsBits;
        }
        swift_bridgeObjectRelease();
        v289._uint64_t countAndFlagsBits = 0x6F746F68702061;
        v289._object = (void *)0xE700000000000000;
        String.append(_:)(v289);
        uint64_t v290 = v308;
        outlined init with copy of SearchAppEntity?(v346, v308, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
        if (__swift_getEnumTagSinglePayload(v290, 1, v96) != 1)
        {
          uint64_t v291 = v308;
          uint64_t v129 = *(void *)(v308 + 40);
          uint64_t v128 = *(void **)(v308 + 48);
          swift_bridgeObjectRetain();
          outlined destroy of SearchEntity(v291, (void (*)(void))type metadata accessor for SearchAppEntity);
          if (!v128) {
            return v348._countAndFlagsBits;
          }
          uint64_t v131 = 543584032;
          uint64_t v132 = (void *)0xE400000000000000;
          goto LABEL_39;
        }
        unint64_t v111 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
        uint64_t v221 = (void **)&v340;
      }
LABEL_157:
      uint64_t v112 = (uint64_t)*(v221 - 32);
      goto LABEL_20;
    }
    swift_bridgeObjectRelease();
    v237._uint64_t countAndFlagsBits = 0x616E72756F4A2061;
    v237._object = (void *)0xEF7972746E65206CLL;
    String.append(_:)(v237);
    uint64_t v238 = v313;
    outlined init with copy of SearchAppEntity?(v346, v313, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
    if (__swift_getEnumTagSinglePayload(v238, 1, v96) == 1)
    {
      outlined destroy of PQAVerificationModelProtocol?(v313, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
    }
    else
    {
      uint64_t v260 = v313;
      uint64_t v262 = *(void *)(v313 + 40);
      uint64_t v261 = *(void **)(v313 + 48);
      swift_bridgeObjectRetain();
      outlined destroy of SearchEntity(v260, (void (*)(void))type metadata accessor for SearchAppEntity);
      if (v261)
      {
        v347._uint64_t countAndFlagsBits = 0x2064656C6C616320;
        v347._object = (void *)0xE800000000000000;
        v263._uint64_t countAndFlagsBits = v262;
        v263._object = v261;
        String.append(_:)(v263);
        swift_bridgeObjectRelease();
        String.append(_:)(v347);
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v264 = v314;
    outlined init with copy of SearchAppEntity?(v346, v314, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
    if (__swift_getEnumTagSinglePayload(v264, 1, v96) == 1)
    {
      uint64_t v265 = (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?;
      uint64_t v266 = &v347;
    }
    else
    {
      uint64_t v267 = v314;
      uint64_t v268 = v311;
      outlined init with copy of SearchAppEntity?(v314 + *(int *)(v96 + 40), v311, &demangling cache variable for type metadata for SearchResult?);
      outlined destroy of SearchEntity(v267, (void (*)(void))type metadata accessor for SearchAppEntity);
      uint64_t v269 = type metadata accessor for SearchResult(0);
      if (__swift_getEnumTagSinglePayload(v268, 1, v269) != 1)
      {
        uint64_t v271 = *(int *)(v269 + 20);
        uint64_t v272 = v311;
        id v273 = *(id *)(v311 + v271);
        outlined destroy of SearchEntity(v272, (void (*)(void))type metadata accessor for SearchResult);
        uint64_t v274 = v315;
        CSSearchableItem.contentCreationDate.getter(v315);

        if (__swift_getEnumTagSinglePayload(v274, 1, v345) != 1)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v340 + 32))(v309, v315, v345);
          SearchEntity.eventDateFormatter.getter();
          uint64_t v276 = v275;
          Class v277 = Date._bridgeToObjectiveC()().super.isa;
          id v278 = objc_msgSend(v276, sel_stringFromDate_, v277);

          uint64_t v279 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v281 = v280;

          if (v343)
          {
            v347._uint64_t countAndFlagsBits = 544108320;
            v347._object = (void *)0xE400000000000000;
            v282._uint64_t countAndFlagsBits = v279;
            v282._object = v281;
            String.append(_:)(v282);
            swift_bridgeObjectRelease();
            uint64_t v283 = v347._countAndFlagsBits;
            Swift::String v284 = v347._object;
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v283 = 0;
            Swift::String v284 = (void *)0xE000000000000000;
          }
          uint64_t v288 = v284;
          String.append(_:)(*(Swift::String *)&v283);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v340 + 8))(v309, v345);
          return v348._countAndFlagsBits;
        }
        goto LABEL_168;
      }
      uint64_t v265 = &demangling cache variable for type metadata for SearchResult?;
      uint64_t v266 = (Swift::String *)&v344;
    }
    outlined destroy of PQAVerificationModelProtocol?(v266[-16]._countAndFlagsBits, v265);
    __swift_storeEnumTagSinglePayload(v315, 1, 1, v345);
LABEL_168:
    unint64_t v111 = &demangling cache variable for type metadata for Date?;
    uint64_t v221 = &v347._object;
    goto LABEL_157;
  }
  swift_bridgeObjectRelease();
  v100._uint64_t countAndFlagsBits = 0x746E657665206E61;
  v100._object = (void *)0xE800000000000000;
  String.append(_:)(v100);
  uint64_t v101 = v346;
  outlined init with copy of SearchAppEntity?(v346, (uint64_t)v93, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  uint64_t v102 = v96;
  if (__swift_getEnumTagSinglePayload((uint64_t)v93, 1, v96) == 1)
  {
    outlined destroy of PQAVerificationModelProtocol?((uint64_t)v93, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  }
  else
  {
    uint64_t v104 = *((void *)v93 + 5);
    uint64_t v103 = (void *)*((void *)v93 + 6);
    swift_bridgeObjectRetain();
    outlined destroy of SearchEntity((uint64_t)v93, (void (*)(void))type metadata accessor for SearchAppEntity);
    if (v103)
    {
      swift_bridgeObjectRelease();
      if (v343)
      {
        v347._uint64_t countAndFlagsBits = 0;
        v347._object = (void *)0xE000000000000000;
        _StringGuts.grow(_:)(18);
        swift_bridgeObjectRelease();
        v347._uint64_t countAndFlagsBits = 0xD000000000000010;
        v347._object = (void *)0x8000000258680010;
        v105._uint64_t countAndFlagsBits = v104;
        v105._object = v103;
        String.append(_:)(v105);
        swift_bridgeObjectRelease();
        uint64_t v104 = v347._countAndFlagsBits;
        uint64_t v103 = v347._object;
      }
      v348._uint64_t countAndFlagsBits = v104;
      v348._object = v103;
    }
  }
  outlined init with copy of SearchAppEntity?(v101, (uint64_t)v90, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, v102) != 1)
  {
    uint64_t v107 = v341;
    outlined init with copy of SearchAppEntity?((uint64_t)&v90[*(int *)(v102 + 40)], v341, &demangling cache variable for type metadata for SearchResult?);
    outlined destroy of SearchEntity((uint64_t)v90, (void (*)(void))type metadata accessor for SearchAppEntity);
    uint64_t v108 = type metadata accessor for SearchResult(0);
    int v109 = __swift_getEnumTagSinglePayload(v107, 1, v108);
    uint64_t v106 = v345;
    if (v109 == 1)
    {
      outlined destroy of PQAVerificationModelProtocol?(v107, &demangling cache variable for type metadata for SearchResult?);
      goto LABEL_16;
    }
    id v116 = *(id *)(v107 + *(int *)(v108 + 20));
    outlined destroy of SearchEntity(v107, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v110 = v344;
    CSSearchableItem.contentCreationDate.getter(v344);

    if (__swift_getEnumTagSinglePayload(v110, 1, v106) == 1) {
      goto LABEL_18;
    }
    uint64_t v117 = v340;
    uint64_t v118 = v338;
    (*(void (**)(char *, uint64_t, uint64_t))(v340 + 32))(v338, v110, v106);
    SearchEntity.eventDateFormatter.getter();
    uint64_t v120 = v119;
    v121.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v122 = objc_msgSend(v120, sel_stringFromDate_, v121.super.isa);
LABEL_35:
    id v123 = v122;

    uint64_t v124 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v126 = v125;

    v347._uint64_t countAndFlagsBits = 544108320;
    v347._object = (void *)0xE400000000000000;
    v127._uint64_t countAndFlagsBits = v124;
    v127._object = v126;
    String.append(_:)(v127);
    swift_bridgeObjectRelease();
    String.append(_:)(v347);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v118, v106);
    return v348._countAndFlagsBits;
  }
  outlined destroy of PQAVerificationModelProtocol?((uint64_t)v90, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  uint64_t v106 = v345;
LABEL_16:
  uint64_t v110 = v344;
LABEL_17:
  __swift_storeEnumTagSinglePayload(v110, 1, 1, v106);
LABEL_18:
  unint64_t v111 = &demangling cache variable for type metadata for Date?;
LABEL_19:
  uint64_t v112 = v110;
LABEL_20:
  outlined destroy of PQAVerificationModelProtocol?(v112, v111);
  return v348._countAndFlagsBits;
}

void SearchEntity.eventDateFormatter.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  type metadata accessor for Locale();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_5_8();
  type metadata accessor for TimeZone();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_12_7();
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  static TimeZone.current.getter();
  Class isa = TimeZone._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_26_2();
  v8();
  objc_msgSend(v6, sel_setTimeZone_, isa);

  Locale.init(identifier:)();
  Class v9 = Locale._bridgeToObjectiveC()().super.isa;
  uint64_t v10 = OUTLINED_FUNCTION_105_4();
  v11(v10);
  objc_msgSend(v6, sel_setLocale_, v9);

  outlined bridged method (mbnn) of @objc NSDateFormatter.dateFormat.setter(v3, v1, v6);
  OUTLINED_FUNCTION_119_0();
}

uint64_t _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2580C7F40()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v1 = *(void *)(v0 + 88);
  if (v1 >> 60 != 15) {
    outlined consume of Data._Representation(*(void *)(v0 + 80), v1);
  }
  return MEMORY[0x270FA0238](v0, 96, 7);
}

uint64_t outlined init with take of SearchSpotlightEntity(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_211();
  v5(v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type AnswerMetadata and conformance AnswerMetadata()
{
  unint64_t result = lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata;
  if (!lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata;
  if (!lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata;
  if (!lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata;
  if (!lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata;
  if (!lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata;
  if (!lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata;
  if (!lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata;
  if (!lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata;
  if (!lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata;
  if (!lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata;
  if (!lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnswerMetadata and conformance AnswerMetadata);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type HydratedEntityType and conformance HydratedEntityType()
{
  unint64_t result = lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType;
  if (!lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType;
  if (!lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType;
  if (!lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType;
  if (!lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType;
  if (!lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType;
  if (!lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType;
  if (!lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType;
  if (!lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType;
  if (!lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType;
  if (!lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType;
  if (!lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType;
  if (!lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HydratedEntityType and conformance HydratedEntityType);
  }
  return result;
}

uint64_t outlined init with copy of SearchEntity(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_51_2();
  v4();
  return a2;
}

uint64_t outlined destroy of SearchEntity(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_16_1();
  v3();
  return a1;
}

uint64_t outlined consume of AnswerMetadata?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    outlined consume of Data?(a11, a12);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for SearchEntity.Builder(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for SearchEntity.Builder);
}

uint64_t outlined release of AnswerMetadata?(__n128 *a1)
{
  OUTLINED_FUNCTION_95_2(a1);
  v10(v2, v3, v4, v5, v6, v7, v8, v9);
  return v1;
}

uint64_t outlined copy of AnswerMetadata?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    outlined copy of Data?(a11, a12);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t outlined copy of EventEntity?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return outlined copy of Data?(a9, a10);
  }
  return result;
}

uint64_t outlined copy of MediaEntity?(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result)
  {
    swift_retain();
    return outlined copy of Data?(a2, a3);
  }
  return result;
}

uint64_t outlined consume of EventEntity?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return outlined consume of Data?(a9, a10);
  }
  return result;
}

uint64_t outlined consume of MediaEntity?(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result)
  {
    swift_release();
    return outlined consume of Data?(a2, a3);
  }
  return result;
}

uint64_t *outlined release of (EventEntity?, EventEntity?)(uint64_t *a1)
{
  uint64_t v12 = a1[10];
  uint64_t v2 = a1[11];
  uint64_t v3 = a1[12];
  uint64_t v4 = a1[13];
  uint64_t v5 = a1[14];
  uint64_t v6 = a1[15];
  uint64_t v7 = a1[16];
  uint64_t v8 = a1[17];
  uint64_t v9 = a1[18];
  unint64_t v10 = a1[19];
  outlined consume of EventEntity?(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  outlined consume of EventEntity?(v12, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t outlined release of (AnswerMetadata?, AnswerMetadata?)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v12 = *(void *)(a1 + 128);
  uint64_t v3 = *(void *)(a1 + 144);
  uint64_t v4 = *(void *)(a1 + 152);
  uint64_t v5 = *(void *)(a1 + 160);
  uint64_t v6 = *(void *)(a1 + 168);
  uint64_t v7 = *(void *)(a1 + 176);
  uint64_t v8 = *(void *)(a1 + 184);
  long long v10 = *(_OWORD *)(a1 + 208);
  long long v11 = *(_OWORD *)(a1 + 192);
  outlined consume of AnswerMetadata?(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88));
  outlined consume of AnswerMetadata?(v12, v2, v3, v4, v5, v6, v7, v8, v11, *((uint64_t *)&v11 + 1), v10, *((unint64_t *)&v10 + 1));
  return a1;
}

uint64_t outlined retain of AnswerMetadata(uint64_t a1)
{
  unint64_t v3 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(a1 + 80);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  outlined copy of Data?(v4, v3);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t outlined release of AnswerMetadata(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  unint64_t v3 = *(void *)(a1 + 88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v2, v3);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

void partial apply for closure #1 in SearchEntity.init(result:card:searchString:)()
{
}

uint64_t *__swift_allocate_boxed_opaque_existential_1Tm_0(uint64_t *a1)
{
  OUTLINED_FUNCTION_29_3();
  if ((*(unsigned char *)(v2 + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v3;
  }
  return a1;
}

unint64_t lazy protocol witness table accessor for type SearchEntity.Query and conformance SearchEntity.Query()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchEntity.Query and conformance SearchEntity.Query);
  }
  return result;
}

uint64_t associated type witness table accessor for EntityQuery.Entity : AppEntity in SearchEntity.Query()
{
  return _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchEntity and conformance SearchEntity, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

uint64_t associated type witness table accessor for DynamicOptionsProvider.DefaultValue : _IntentValue in SearchEntity.Query()
{
  return _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchEntity and conformance SearchEntity, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

unint64_t lazy protocol witness table accessor for type [SearchEntity] and conformance <A> [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [SearchEntity] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [SearchEntity] and conformance <A> [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SearchEntity]);
    _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchEntity and conformance SearchEntity, (void (*)(uint64_t))type metadata accessor for SearchEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [SearchEntity] and conformance <A> [A]);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type [SearchEntity] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [SearchEntity] and conformance <A> [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SearchEntity]);
    lazy protocol witness table accessor for type StructuredQueryEntity and conformance StructuredQueryEntity(&lazy protocol witness table cache variable for type SearchEntity and conformance SearchEntity, (void (*)(uint64_t))type metadata accessor for SearchEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [SearchEntity] and conformance <A> [A]);
  }
  return result;
}

uint64_t base witness table accessor for AppValue in SearchEntity()
{
  return _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchEntity and conformance SearchEntity, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

uint64_t base witness table accessor for DisplayRepresentable in SearchEntity()
{
  return _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchEntity and conformance SearchEntity, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

uint64_t base witness table accessor for Identifiable in SearchEntity()
{
  return _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchEntity and conformance SearchEntity, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

uint64_t base witness table accessor for PersistentlyIdentifiable in SearchEntity()
{
  return _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchEntity and conformance SearchEntity, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

uint64_t base witness table accessor for TypeDisplayRepresentable in SearchEntity()
{
  return _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchEntity and conformance SearchEntity, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

uint64_t base witness table accessor for InstanceDisplayRepresentable in SearchEntity()
{
  return _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchEntity and conformance SearchEntity, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

uint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in SearchEntity()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type EmptyResolverSpecification<SearchEntity> and conformance EmptyResolverSpecification<A>, &demangling cache variable for type metadata for EmptyResolverSpecification<SearchEntity>);
}

uint64_t base witness table accessor for CustomLocalizedStringResourceConvertible in SearchEntity()
{
  return _s10OmniSearch0B15SpotlightEntityVAC10AppIntents0eD0AAWlTm_0(&lazy protocol witness table cache variable for type SearchEntity and conformance SearchEntity, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

uint64_t associated type witness table accessor for Transferable.Representation : TransferRepresentation in SearchEntity()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in HydratedEntityType()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in HydratedEntityType()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [HydratedEntityType] and conformance [A], &demangling cache variable for type metadata for [HydratedEntityType]);
}

uint64_t sub_2580C926C()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchEntity.source.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2580C9298()
{
  return SearchEntity.type.getter();
}

uint64_t sub_2580C92C0()
{
  return SearchEntity.appEntity.getter();
}

uint64_t sub_2580C92E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchEntity.appEntity : SearchEntity(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?, SearchEntity.appEntity.setter);
}

uint64_t sub_2580C9318()
{
  return SearchEntity.globalResult.getter();
}

uint64_t sub_2580C933C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchEntity.appEntity : SearchEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for SearchGlobalEntity?, SearchEntity.globalResult.setter);
}

uint64_t sub_2580C9370()
{
  return SearchEntity.spotlightResult.getter();
}

uint64_t sub_2580C9394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchEntity.appEntity : SearchEntity(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?, SearchEntity.spotlightResult.setter);
}

uint64_t sub_2580C93D0()
{
  return SearchEntity.idCard.getter();
}

uint64_t sub_2580C93F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchEntity.appEntity : SearchEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for IdCardEntity?, SearchEntity.idCard.setter);
}

uint64_t sub_2580C9438()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchEntity.shouldOpen.getter();
  *uint64_t v0 = result & 1;
  return result;
}

uint64_t sub_2580C9464()
{
  return SearchEntity.shouldOpen.setter();
}

uint64_t sub_2580C948C()
{
  return SearchEntity.experienceFile.getter();
}

uint64_t sub_2580C94B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchEntity.appEntity : SearchEntity(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for IntentFile?, SearchEntity.experienceFile.setter);
}

uint64_t sub_2580C94EC()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchEntity.hydratedContent.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2580C9514(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchEntity.hydratedContent : SearchEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))SearchEntity.hydratedContent.setter);
}

uint64_t sub_2580C9540()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchEntity.supportedTypeIdentifiersForExport.getter();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_2580C956C()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchEntity.inAppSearchString.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2580C9594(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchEntity.hydratedContent : SearchEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))SearchEntity.inAppSearchString.setter);
}

uint64_t sub_2580C95C0()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchEntity.requestedProperties.getter();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_2580C95EC()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchEntity.associatedQuery.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2580C9614(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchEntity.hydratedContent : SearchEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))SearchEntity.associatedQuery.setter);
}

uint64_t sub_2580C9640()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchEntity.id.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t dispatch thunk of ValidatableEntity.validateParameters()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchEntity(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v16 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    uint64_t v6 = a2[4];
    a1[3] = a2[3];
    a1[4] = v6;
    uint64_t v7 = a2[6];
    a1[5] = a2[5];
    a1[6] = v7;
    uint64_t v8 = a2[8];
    a1[7] = a2[7];
    a1[8] = v8;
    uint64_t v9 = a2[10];
    a1[9] = a2[9];
    a1[10] = v9;
    uint64_t v2673 = a2[12];
    a1[11] = a2[11];
    a1[12] = v2673;
    uint64_t v10 = a2[14];
    a1[13] = a2[13];
    a1[14] = v10;
    uint64_t v2706 = a2[16];
    uint64_t v11 = a3[21];
    v2713 = (uint64_t *)((char *)a1 + v11);
    uint64_t v12 = (uint64_t *)((char *)a2 + v11);
    a1[15] = a2[15];
    a1[16] = v2706;
    uint64_t v13 = type metadata accessor for SearchResult(0);
    uint64_t v14 = v12;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
      memcpy(v2713, v12, *(void *)(*(void *)(v15 - 8) + 64));
      uint64_t v16 = a1;
    }
    else
    {
      type metadata accessor for SearchResultItem(0);
      uint64_t v17 = (uint64_t)v2713;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v2700 = v13;
          uint64_t v42 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v42;
          uint64_t v43 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v43;
          uint64_t v44 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v44;
          uint64_t v45 = v12[7];
          v2713[6] = v12[6];
          v2713[7] = v45;
          uint64_t v46 = v12[9];
          v2713[8] = v12[8];
          v2713[9] = v46;
          v2687 = (int *)type metadata accessor for MobileSMSDocument(0);
          uint64_t v47 = v2687[10];
          uint64_t v2662 = (char *)v2713 + v47;
          uint64_t v48 = (char *)v12 + v47;
          uint64_t v49 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49))
          {
            uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2662, v48, *(void *)(*(void *)(v50 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v2662, v48, v49);
            __swift_storeEnumTagSinglePayload((uint64_t)v2662, 0, 1, v49);
          }
          Swift::String v348 = v2687;
          uint64_t v349 = v2687[11];
          uint64_t v350 = (char *)v2713 + v349;
          uint64_t v351 = (char *)v14 + v349;
          uint64_t v352 = type metadata accessor for URL();
          uint64_t v2668 = v352;
          uint64_t v2683 = v49;
          if (__swift_getEnumTagSinglePayload((uint64_t)v351, 1, v352))
          {
            uint64_t v353 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v350, v351, *(void *)(*(void *)(v353 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v352 - 8) + 16))(v350, v351, v352);
            __swift_storeEnumTagSinglePayload((uint64_t)v350, 0, 1, v352);
          }
          *(void *)((char *)v2713 + v2687[12]) = *(void *)((char *)v14 + v2687[12]);
          uint64_t v508 = v2687[13];
          uint64_t v509 = (void *)((char *)v2713 + v508);
          uint64_t v510 = (void *)((char *)v14 + v508);
          uint64_t v511 = v510[1];
          void *v509 = *v510;
          v509[1] = v511;
          uint64_t v512 = v2687[14];
          uint64_t v513 = (void *)((char *)v2713 + v512);
          uint64_t v514 = (void *)((char *)v14 + v512);
          uint64_t v515 = v514[1];
          *uint64_t v513 = *v514;
          v513[1] = v515;
          *(void *)((char *)v2713 + v2687[15]) = *(void *)((char *)v14 + v2687[15]);
          *(void *)((char *)v2713 + v2687[16]) = *(void *)((char *)v14 + v2687[16]);
          uint64_t v516 = v2687[17];
          uint64_t v517 = (void *)((char *)v2713 + v516);
          uint64_t v518 = (char *)v14 + v516;
          uint64_t v519 = *(void *)((char *)v14 + v516);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v519)
          {
            uint64_t v520 = *((void *)v518 + 1);
            uint64_t v521 = *((void *)v518 + 2);
            *uint64_t v517 = v519;
            v517[1] = v520;
            uint64_t v522 = *((void *)v518 + 3);
            uint64_t v523 = *((void *)v518 + 4);
            v517[2] = v521;
            v517[3] = v522;
            v517[4] = v523;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v686 = *((_OWORD *)v518 + 1);
            *(_OWORD *)uint64_t v517 = *(_OWORD *)v518;
            *((_OWORD *)v517 + 1) = v686;
            v517[4] = *((void *)v518 + 4);
          }
          uint64_t v687 = v2687[18];
          uint64_t v688 = (void *)((char *)v2713 + v687);
          uint64_t v689 = (void *)((char *)v14 + v687);
          uint64_t v690 = v689[1];
          *uint64_t v688 = *v689;
          v688[1] = v690;
          uint64_t v691 = v2687[19];
          uint64_t v692 = (void *)((char *)v2713 + v691);
          uint64_t v693 = (void *)((char *)v14 + v691);
          long long v694 = (int *)type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          v2596 = v14;
          if (__swift_getEnumTagSinglePayload((uint64_t)v693, 1, (uint64_t)v694))
          {
            uint64_t v695 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v692, v693, *(void *)(*(void *)(v695 - 8) + 64));
          }
          else
          {
            uint64_t v732 = v693[1];
            *uint64_t v692 = *v693;
            v692[1] = v732;
            uint64_t v733 = v694[5];
            uint64_t v734 = (void *)((char *)v692 + v733);
            uint64_t v735 = (void *)((char *)v693 + v733);
            uint64_t v736 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            uint64_t v2637 = v693;
            if (__swift_getEnumTagSinglePayload((uint64_t)v735, 1, v736))
            {
              uint64_t v737 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v734, v735, *(void *)(*(void *)(v737 - 8) + 64));
            }
            else
            {
              uint64_t v792 = v735[1];
              *uint64_t v734 = *v735;
              v734[1] = v792;
              uint64_t v793 = v735[3];
              v734[2] = v735[2];
              v734[3] = v793;
              uint64_t v794 = v735[5];
              v734[4] = v735[4];
              v734[5] = v794;
              uint64_t v795 = v735[7];
              v734[6] = v735[6];
              v734[7] = v795;
              uint64_t v796 = v735[9];
              v734[8] = v735[8];
              v734[9] = v796;
              uint64_t v797 = v735[11];
              v734[10] = v735[10];
              v734[11] = v797;
              uint64_t v798 = v735[13];
              v734[12] = v735[12];
              v734[13] = v798;
              uint64_t v799 = v735[15];
              v734[14] = v735[14];
              v734[15] = v799;
              *((unsigned char *)v734 + 128) = *((unsigned char *)v735 + 128);
              *(_WORD *)((char *)v734 + 129) = *(_WORD *)((char *)v735 + 129);
              uint64_t v800 = v735[18];
              v734[17] = v735[17];
              v734[18] = v800;
              uint64_t v801 = v735[20];
              v734[19] = v735[19];
              v734[20] = v801;
              uint64_t v802 = v735[22];
              v734[21] = v735[21];
              v734[22] = v802;
              uint64_t v2515 = v735[24];
              v734[23] = v735[23];
              v734[24] = v2515;
              uint64_t v803 = v735[26];
              v734[25] = v735[25];
              v734[26] = v803;
              uint64_t v804 = v735[28];
              v734[27] = v735[27];
              v734[28] = v804;
              uint64_t v805 = v735[30];
              v734[29] = v735[29];
              v734[30] = v805;
              uint64_t v806 = v735[32];
              v734[31] = v735[31];
              v734[32] = v806;
              uint64_t v2615 = v735[34];
              v734[33] = v735[33];
              v734[34] = v2615;
              uint64_t v807 = v735[36];
              v734[35] = v735[35];
              v734[36] = v807;
              uint64_t v808 = v735[38];
              v734[37] = v735[37];
              v734[38] = v808;
              uint64_t v809 = v735[40];
              v734[39] = v735[39];
              v734[40] = v809;
              uint64_t v810 = v735[42];
              v734[41] = v735[41];
              v734[42] = v810;
              uint64_t v811 = v735[44];
              v734[43] = v735[43];
              v734[44] = v811;
              uint64_t v812 = v735[46];
              v734[45] = v735[45];
              v734[46] = v812;
              uint64_t v813 = v735[47];
              *((unsigned char *)v734 + 384) = *((unsigned char *)v735 + 384);
              v734[47] = v813;
              uint64_t v814 = v735[50];
              v734[49] = v735[49];
              v734[50] = v814;
              uint64_t v815 = v735[52];
              v734[51] = v735[51];
              v734[52] = v815;
              uint64_t v816 = *(int *)(v736 + 140);
              uint64_t v2655 = (char *)v734 + v816;
              uint64_t v817 = (char *)v735 + v816;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v817, 1, v2683))
              {
                uint64_t v818 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2655, v817, *(void *)(*(void *)(v818 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v2655, v817, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v2655, 0, 1, v2683);
              }
              uint64_t v827 = *(int *)(v736 + 144);
              uint64_t v828 = (char *)v734 + v827;
              uint64_t v829 = (char *)v735 + v827;
              Swift::String v348 = v2687;
              if (__swift_getEnumTagSinglePayload((uint64_t)v735 + v827, 1, v2683))
              {
                uint64_t v830 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v828, v829, *(void *)(*(void *)(v830 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v828, v829, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v828, 0, 1, v2683);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v734, 0, 1, v736);
              uint64_t v693 = v2637;
            }
            uint64_t v883 = v694[6];
            uint64_t v884 = (void *)((char *)v692 + v883);
            uint64_t v885 = (void *)((char *)v693 + v883);
            uint64_t v886 = type metadata accessor for TicketedTransportation(0);
            uint64_t v2657 = v694;
            if (__swift_getEnumTagSinglePayload((uint64_t)v885, 1, v886))
            {
              uint64_t v887 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v884, v885, *(void *)(*(void *)(v887 - 8) + 64));
            }
            else
            {
              uint64_t v888 = v885[1];
              *uint64_t v884 = *v885;
              v884[1] = v888;
              uint64_t v889 = v885[3];
              v884[2] = v885[2];
              v884[3] = v889;
              uint64_t v890 = v885[5];
              v884[4] = v885[4];
              v884[5] = v890;
              uint64_t v891 = v885[7];
              v884[6] = v885[6];
              v884[7] = v891;
              uint64_t v892 = v885[9];
              v884[8] = v885[8];
              v884[9] = v892;
              uint64_t v893 = v885[11];
              v884[10] = v885[10];
              v884[11] = v893;
              uint64_t v894 = v885[13];
              v884[12] = v885[12];
              v884[13] = v894;
              uint64_t v895 = v885[15];
              v884[14] = v885[14];
              v884[15] = v895;
              *((unsigned char *)v884 + 128) = *((unsigned char *)v885 + 128);
              *(_WORD *)((char *)v884 + 129) = *(_WORD *)((char *)v885 + 129);
              uint64_t v896 = v885[18];
              v884[17] = v885[17];
              v884[18] = v896;
              uint64_t v897 = v885[20];
              v884[19] = v885[19];
              v884[20] = v897;
              uint64_t v898 = v885[22];
              v884[21] = v885[21];
              v884[22] = v898;
              uint64_t v899 = v885[24];
              v884[23] = v885[23];
              v884[24] = v899;
              uint64_t v2581 = (void *)v885[26];
              v884[25] = v885[25];
              v884[26] = v2581;
              uint64_t v900 = v885[28];
              v884[27] = v885[27];
              v884[28] = v900;
              uint64_t v901 = v885[30];
              v884[29] = v885[29];
              v884[30] = v901;
              uint64_t v902 = v885[32];
              v884[31] = v885[31];
              v884[32] = v902;
              uint64_t v903 = v885[34];
              v884[33] = v885[33];
              v884[34] = v903;
              uint64_t v904 = v885[36];
              uint64_t v905 = v885[35];
              *((unsigned char *)v884 + 296) = *((unsigned char *)v885 + 296);
              v884[35] = v905;
              v884[36] = v904;
              uint64_t v906 = *(int *)(v886 + 112);
              v2617 = (char *)v884 + v906;
              uint64_t v907 = (char *)v885 + v906;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v907, 1, v2683))
              {
                uint64_t v908 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2617, v907, *(void *)(*(void *)(v908 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v2617, v907, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v2617, 0, 1, v2683);
              }
              uint64_t v919 = v886;
              uint64_t v920 = *(int *)(v886 + 116);
              uint64_t v921 = (char *)v884 + v920;
              uint64_t v922 = (char *)v885 + v920;
              Swift::String v348 = v2687;
              long long v694 = v2657;
              if (__swift_getEnumTagSinglePayload((uint64_t)v885 + v920, 1, v2683))
              {
                uint64_t v923 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v921, v922, *(void *)(*(void *)(v923 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v921, v922, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v921, 0, 1, v2683);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v884, 0, 1, v919);
              uint64_t v693 = v2637;
            }
            uint64_t v978 = v694[7];
            uint64_t v979 = (void *)((char *)v692 + v978);
            uint64_t v980 = (void *)((char *)v693 + v978);
            uint64_t v981 = type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v980, 1, v981))
            {
              uint64_t v982 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v979, v980, *(void *)(*(void *)(v982 - 8) + 64));
            }
            else
            {
              uint64_t v983 = v980[1];
              *uint64_t v979 = *v980;
              v979[1] = v983;
              uint64_t v984 = v980[3];
              v979[2] = v980[2];
              v979[3] = v984;
              uint64_t v985 = v980[5];
              v979[4] = v980[4];
              v979[5] = v985;
              uint64_t v986 = v980[7];
              v979[6] = v980[6];
              v979[7] = v986;
              uint64_t v987 = v980[9];
              v979[8] = v980[8];
              v979[9] = v987;
              uint64_t v988 = v980[11];
              v979[10] = v980[10];
              v979[11] = v988;
              uint64_t v989 = v980[13];
              v979[12] = v980[12];
              v979[13] = v989;
              uint64_t v990 = v980[15];
              v979[14] = v980[14];
              v979[15] = v990;
              *((unsigned char *)v979 + 128) = *((unsigned char *)v980 + 128);
              *(_WORD *)((char *)v979 + 129) = *(_WORD *)((char *)v980 + 129);
              uint64_t v991 = v980[18];
              v979[17] = v980[17];
              v979[18] = v991;
              uint64_t v992 = v980[20];
              v979[19] = v980[19];
              v979[20] = v992;
              uint64_t v993 = v980[22];
              v979[21] = v980[21];
              v979[22] = v993;
              uint64_t v994 = v980[24];
              v979[23] = v980[23];
              v979[24] = v994;
              uint64_t v995 = v980[26];
              v979[25] = v980[25];
              v979[26] = v995;
              uint64_t v996 = v980[28];
              v979[27] = v980[27];
              v979[28] = v996;
              uint64_t v2565 = (void *)v980[30];
              v979[29] = v980[29];
              v979[30] = v2565;
              uint64_t v997 = v980[32];
              v979[31] = v980[31];
              v979[32] = v997;
              uint64_t v998 = v980[34];
              v979[33] = v980[33];
              v979[34] = v998;
              uint64_t v999 = v980[36];
              uint64_t v1000 = v980[35];
              *((unsigned char *)v979 + 296) = *((unsigned char *)v980 + 296);
              v979[35] = v1000;
              v979[36] = v999;
              uint64_t v1001 = v980[39];
              v979[38] = v980[38];
              v979[39] = v1001;
              v2619 = (int *)v981;
              uint64_t v1002 = *(int *)(v981 + 116);
              uint64_t v2583 = (char *)v979 + v1002;
              uint64_t v1003 = (char *)v980 + v1002;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1003, 1, v2668))
              {
                uint64_t v1004 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2583, v1003, *(void *)(*(void *)(v1004 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2668 - 8) + 16))(v2583, v1003, v2668);
                __swift_storeEnumTagSinglePayload((uint64_t)v2583, 0, 1, v2668);
              }
              uint64_t v1021 = v2619[30];
              long long v1022 = (void *)((char *)v979 + v1021);
              uint64_t v1023 = (void *)((char *)v980 + v1021);
              uint64_t v1024 = v1023[1];
              *long long v1022 = *v1023;
              v1022[1] = v1024;
              uint64_t v1025 = v2619[31];
              uint64_t v1026 = (char *)v979 + v1025;
              uint64_t v1027 = (char *)v980 + v1025;
              swift_bridgeObjectRetain();
              Swift::String v348 = v2687;
              long long v694 = v2657;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1027, 1, v2683))
              {
                uint64_t v1028 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1026, v1027, *(void *)(*(void *)(v1028 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v1026, v1027, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v1026, 0, 1, v2683);
              }
              uint64_t v1037 = v2619[32];
              uint64_t v1038 = (char *)v979 + v1037;
              uint64_t v1039 = (char *)v980 + v1037;
              if (__swift_getEnumTagSinglePayload((uint64_t)v980 + v1037, 1, v2683))
              {
                uint64_t v1040 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1038, v1039, *(void *)(*(void *)(v1040 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v1038, v1039, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v1038, 0, 1, v2683);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v979, 0, 1, (uint64_t)v2619);
              uint64_t v693 = v2637;
            }
            uint64_t v1095 = v694[8];
            uint64_t v1096 = (void *)((char *)v692 + v1095);
            uint64_t v1097 = (void *)((char *)v693 + v1095);
            uint64_t v1098 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1097, 1, v1098))
            {
              uint64_t v1099 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v1096, v1097, *(void *)(*(void *)(v1099 - 8) + 64));
              uint64_t v1100 = v2683;
            }
            else
            {
              uint64_t v1101 = v1097[1];
              *uint64_t v1096 = *v1097;
              v1096[1] = v1101;
              uint64_t v1102 = v1097[3];
              v1096[2] = v1097[2];
              v1096[3] = v1102;
              uint64_t v1103 = v1097[5];
              v1096[4] = v1097[4];
              v1096[5] = v1103;
              uint64_t v1104 = v1097[7];
              v1096[6] = v1097[6];
              v1096[7] = v1104;
              uint64_t v1105 = v1097[9];
              v1096[8] = v1097[8];
              v1096[9] = v1105;
              uint64_t v1106 = v1097[11];
              v1096[10] = v1097[10];
              v1096[11] = v1106;
              uint64_t v1107 = v1097[13];
              v1096[12] = v1097[12];
              v1096[13] = v1107;
              uint64_t v1108 = v1097[15];
              v1096[14] = v1097[14];
              v1096[15] = v1108;
              *((unsigned char *)v1096 + 128) = *((unsigned char *)v1097 + 128);
              *(_WORD *)((char *)v1096 + 129) = *(_WORD *)((char *)v1097 + 129);
              uint64_t v1109 = v1097[18];
              v1096[17] = v1097[17];
              v1096[18] = v1109;
              uint64_t v1110 = v1097[20];
              v1096[19] = v1097[19];
              v1096[20] = v1110;
              uint64_t v1111 = v1097[22];
              v1096[21] = v1097[21];
              v1096[22] = v1111;
              uint64_t v1112 = v1097[24];
              v1096[23] = v1097[23];
              v1096[24] = v1112;
              uint64_t v1113 = v1097[26];
              v1096[25] = v1097[25];
              v1096[26] = v1113;
              uint64_t v1114 = v1097[28];
              v1096[27] = v1097[27];
              v1096[28] = v1114;
              uint64_t v1115 = v1097[30];
              v1096[29] = v1097[29];
              v1096[30] = v1115;
              uint64_t v1116 = v1097[32];
              v1096[31] = v1097[31];
              v1096[32] = v1116;
              uint64_t v1117 = v1097[34];
              uint64_t v1118 = v1097[33];
              *((unsigned char *)v1096 + 280) = *((unsigned char *)v1097 + 280);
              v1096[33] = v1118;
              v1096[34] = v1117;
              uint64_t v1119 = v1097[37];
              v1096[36] = v1097[36];
              v1096[37] = v1119;
              uint64_t v1120 = *(int *)(v1098 + 108);
              uint64_t v2620 = (char *)v1096 + v1120;
              uint64_t v1121 = (char *)v1097 + v1120;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v1100 = v2683;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1121, 1, v2683))
              {
                uint64_t v1122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2620, v1121, *(void *)(*(void *)(v1122 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v2620, v1121, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v2620, 0, 1, v2683);
              }
              uint64_t v1133 = v1098;
              uint64_t v1134 = *(int *)(v1098 + 112);
              uint64_t v1135 = (char *)v1096 + v1134;
              uint64_t v1136 = (char *)v1097 + v1134;
              Swift::String v348 = v2687;
              long long v694 = v2657;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1097 + v1134, 1, v2683))
              {
                uint64_t v1137 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1135, v1136, *(void *)(*(void *)(v1137 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v1135, v1136, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v1135, 0, 1, v2683);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v1096, 0, 1, v1133);
              uint64_t v693 = v2637;
            }
            uint64_t v1187 = v694[9];
            uint64_t v1188 = (void *)((char *)v692 + v1187);
            uint64_t v1189 = (void *)((char *)v693 + v1187);
            uint64_t v1190 = type metadata accessor for Party(0);
            uint64_t v2622 = v692;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1189, 1, v1190))
            {
              uint64_t v1191 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v1188, v1189, *(void *)(*(void *)(v1191 - 8) + 64));
            }
            else
            {
              uint64_t v1192 = v1189[1];
              *uint64_t v1188 = *v1189;
              v1188[1] = v1192;
              uint64_t v1193 = v1189[3];
              v1188[2] = v1189[2];
              v1188[3] = v1193;
              uint64_t v1194 = v1189[5];
              v1188[4] = v1189[4];
              v1188[5] = v1194;
              uint64_t v1195 = v1189[7];
              v1188[6] = v1189[6];
              v1188[7] = v1195;
              uint64_t v1196 = v1189[9];
              v1188[8] = v1189[8];
              v1188[9] = v1196;
              uint64_t v1197 = v1189[11];
              v1188[10] = v1189[10];
              v1188[11] = v1197;
              uint64_t v1198 = v1189[13];
              v1188[12] = v1189[12];
              v1188[13] = v1198;
              uint64_t v1199 = v1189[15];
              v1188[14] = v1189[14];
              v1188[15] = v1199;
              *((unsigned char *)v1188 + 128) = *((unsigned char *)v1189 + 128);
              *(_WORD *)((char *)v1188 + 129) = *(_WORD *)((char *)v1189 + 129);
              uint64_t v1200 = v1189[18];
              v1188[17] = v1189[17];
              v1188[18] = v1200;
              uint64_t v1201 = v1189[20];
              v1188[19] = v1189[19];
              v1188[20] = v1201;
              uint64_t v1202 = v1189[22];
              v1188[21] = v1189[21];
              v1188[22] = v1202;
              uint64_t v1203 = v1189[24];
              v1188[23] = v1189[23];
              v1188[24] = v1203;
              uint64_t v1204 = v1189[26];
              v1188[25] = v1189[25];
              v1188[26] = v1204;
              uint64_t v1205 = v1189[28];
              v1188[27] = v1189[27];
              v1188[28] = v1205;
              uint64_t v1206 = v1189[30];
              v1188[29] = v1189[29];
              v1188[30] = v1206;
              v1188[31] = v1189[31];
              uint64_t v1207 = *(int *)(v1190 + 96);
              uint64_t v2586 = (char *)v1188 + v1207;
              uint64_t v1208 = (char *)v1189 + v1207;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1208, 1, v1100))
              {
                uint64_t v1209 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2586, v1208, *(void *)(*(void *)(v1209 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1100 - 8) + 16))(v2586, v1208, v1100);
                __swift_storeEnumTagSinglePayload((uint64_t)v2586, 0, 1, v1100);
              }
              uint64_t v1220 = v1190;
              uint64_t v1221 = *(int *)(v1190 + 100);
              uint64_t v1222 = (char *)v1188 + v1221;
              v1223 = (char *)v1189 + v1221;
              Swift::String v348 = v2687;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1189 + v1221, 1, v1100))
              {
                uint64_t v1224 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1222, v1223, *(void *)(*(void *)(v1224 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1100 - 8) + 16))(v1222, v1223, v1100);
                __swift_storeEnumTagSinglePayload((uint64_t)v1222, 0, 1, v1100);
              }
              uint64_t v1235 = *(int *)(v1220 + 104);
              uint64_t v1236 = (char *)v1188 + v1235;
              uint64_t v1237 = (char *)v1189 + v1235;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1189 + v1235, 1, v2668))
              {
                uint64_t v1238 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1236, v1237, *(void *)(*(void *)(v1238 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2668 - 8) + 16))(v1236, v1237, v2668);
                __swift_storeEnumTagSinglePayload((uint64_t)v1236, 0, 1, v2668);
              }
              long long v694 = v2657;
              __swift_storeEnumTagSinglePayload((uint64_t)v1188, 0, 1, v1220);
              uint64_t v693 = v2637;
            }
            uint64_t v1279 = v694[10];
            uint64_t v1280 = (void *)((char *)v692 + v1279);
            uint64_t v1281 = (void *)((char *)v693 + v1279);
            uint64_t v1282 = type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1281, 1, v1282))
            {
              uint64_t v1283 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1280, v1281, *(void *)(*(void *)(v1283 - 8) + 64));
            }
            else
            {
              uint64_t v1284 = v1281[1];
              *uint64_t v1280 = *v1281;
              v1280[1] = v1284;
              uint64_t v1285 = v1281[3];
              v1280[2] = v1281[2];
              v1280[3] = v1285;
              uint64_t v1286 = v1281[5];
              v1280[4] = v1281[4];
              v1280[5] = v1286;
              uint64_t v1287 = v1281[7];
              v1280[6] = v1281[6];
              v1280[7] = v1287;
              uint64_t v1288 = v1281[9];
              v1280[8] = v1281[8];
              v1280[9] = v1288;
              uint64_t v1289 = v1281[11];
              v1280[10] = v1281[10];
              v1280[11] = v1289;
              uint64_t v1290 = v1281[13];
              v1280[12] = v1281[12];
              v1280[13] = v1290;
              uint64_t v1291 = v1281[15];
              v1280[14] = v1281[14];
              v1280[15] = v1291;
              *((unsigned char *)v1280 + 128) = *((unsigned char *)v1281 + 128);
              *(_WORD *)((char *)v1280 + 129) = *(_WORD *)((char *)v1281 + 129);
              uint64_t v1292 = v1281[18];
              v1280[17] = v1281[17];
              v1280[18] = v1292;
              uint64_t v1293 = v1281[20];
              v1280[19] = v1281[19];
              v1280[20] = v1293;
              uint64_t v1294 = v1281[22];
              v1280[21] = v1281[21];
              v1280[22] = v1294;
              uint64_t v1295 = v1281[24];
              v1280[23] = v1281[23];
              v1280[24] = v1295;
              uint64_t v1296 = v1281[26];
              v1280[25] = v1281[25];
              v1280[26] = v1296;
              v1280[27] = v1281[27];
              uint64_t v2588 = (int *)v1282;
              uint64_t v1297 = *(int *)(v1282 + 88);
              uint64_t v2568 = (char *)v1280 + v1297;
              uint64_t v2525 = (char *)v1281 + v1297;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2525, 1, v2683))
              {
                uint64_t v1298 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2568, v2525, *(void *)(*(void *)(v1298 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v2568, v2525, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v2568, 0, 1, v2683);
              }
              uint64_t v1307 = *(int *)(v1282 + 92);
              uint64_t v1308 = (char *)v1280 + v1307;
              uint64_t v1309 = (char *)v1281 + v1307;
              Swift::String v348 = v2687;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1281 + v1307, 1, v2683))
              {
                uint64_t v1310 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1308, v1309, *(void *)(*(void *)(v1310 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v1308, v1309, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v1308, 0, 1, v2683);
              }
              uint64_t v1327 = v2588[24];
              uint64_t v1328 = (char *)v1280 + v1327;
              v1329 = (char *)v1281 + v1327;
              *(void *)uint64_t v1328 = *(void *)v1329;
              v1328[8] = v1329[8];
              uint64_t v1330 = v2588[25];
              uint64_t v1331 = (char *)v1280 + v1330;
              uint64_t v1332 = (char *)v1281 + v1330;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1281 + v1330, 1, v2668))
              {
                uint64_t v1333 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1331, v1332, *(void *)(*(void *)(v1333 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2668 - 8) + 16))(v1331, v1332, v2668);
                __swift_storeEnumTagSinglePayload((uint64_t)v1331, 0, 1, v2668);
              }
              long long v694 = v2657;
              __swift_storeEnumTagSinglePayload((uint64_t)v1280, 0, 1, (uint64_t)v2588);
              uint64_t v693 = v2637;
            }
            uint64_t v1364 = v694[11];
            uint64_t v1365 = (void *)((char *)v692 + v1364);
            v1366 = (void *)((char *)v693 + v1364);
            v1367 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1366, 1, (uint64_t)v1367))
            {
              uint64_t v1368 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1365, v1366, *(void *)(*(void *)(v1368 - 8) + 64));
            }
            else
            {
              uint64_t v1369 = v1366[1];
              *uint64_t v1365 = *v1366;
              v1365[1] = v1369;
              uint64_t v1370 = v1366[3];
              v1365[2] = v1366[2];
              v1365[3] = v1370;
              uint64_t v1371 = v1366[5];
              v1365[4] = v1366[4];
              v1365[5] = v1371;
              uint64_t v1372 = v1366[7];
              v1365[6] = v1366[6];
              v1365[7] = v1372;
              uint64_t v1373 = v1366[9];
              v1365[8] = v1366[8];
              v1365[9] = v1373;
              uint64_t v1374 = v1366[11];
              v1365[10] = v1366[10];
              v1365[11] = v1374;
              *((unsigned char *)v1365 + 96) = *((unsigned char *)v1366 + 96);
              uint64_t v1375 = v1366[14];
              v1365[13] = v1366[13];
              v1365[14] = v1375;
              uint64_t v1376 = v1367[13];
              uint64_t v2589 = (char *)v1365 + v1376;
              uint64_t v1377 = (char *)v1366 + v1376;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1377, 1, v2668))
              {
                uint64_t v1378 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2589, v1377, *(void *)(*(void *)(v1378 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2668 - 8) + 16))(v2589, v1377, v2668);
                __swift_storeEnumTagSinglePayload((uint64_t)v2589, 0, 1, v2668);
              }
              uint64_t v1387 = v1367[14];
              v1388 = (char *)v1365 + v1387;
              uint64_t v1389 = (char *)v1366 + v1387;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1366 + v1387, 1, v2668))
              {
                uint64_t v1390 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1388, v1389, *(void *)(*(void *)(v1390 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2668 - 8) + 16))(v1388, v1389, v2668);
                __swift_storeEnumTagSinglePayload((uint64_t)v1388, 0, 1, v2668);
              }
              uint64_t v1538 = v1367[15];
              uint64_t v1539 = (void *)((char *)v1365 + v1538);
              uint64_t v1540 = (void *)((char *)v1366 + v1538);
              uint64_t v1541 = v1540[1];
              void *v1539 = *v1540;
              v1539[1] = v1541;
              uint64_t v1542 = v1367[16];
              uint64_t v1543 = (void *)((char *)v1365 + v1542);
              uint64_t v1544 = (void *)((char *)v1366 + v1542);
              uint64_t v1545 = v1544[1];
              *uint64_t v1543 = *v1544;
              v1543[1] = v1545;
              uint64_t v1546 = v1367[17];
              uint64_t v1547 = (void *)((char *)v1365 + v1546);
              uint64_t v1548 = (void *)((char *)v1366 + v1546);
              uint64_t v1549 = v1548[1];
              *uint64_t v1547 = *v1548;
              v1547[1] = v1549;
              uint64_t v1550 = v1367[18];
              uint64_t v2591 = (char *)v1365 + v1550;
              uint64_t v1551 = (char *)v1366 + v1550;
              uint64_t v1552 = type metadata accessor for DateComponents();
              v1553 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1552 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1553(v2591, v1551, v1552);
              v1553((char *)v1365 + v1367[19], (char *)v1366 + v1367[19], v1552);
              uint64_t v1554 = v1367[20];
              uint64_t v1555 = (void *)((char *)v1365 + v1554);
              uint64_t v1556 = (void *)((char *)v1366 + v1554);
              uint64_t v1557 = v1556[1];
              *uint64_t v1555 = *v1556;
              v1555[1] = v1557;
              uint64_t v1558 = v1367[21];
              uint64_t v1559 = (void *)((char *)v1365 + v1558);
              v1560 = (void *)((char *)v1366 + v1558);
              uint64_t v1561 = v1560[1];
              *uint64_t v1559 = *v1560;
              v1559[1] = v1561;
              uint64_t v1562 = v1367[22];
              uint64_t v1563 = (void *)((char *)v1365 + v1562);
              v1564 = (void *)((char *)v1366 + v1562);
              uint64_t v1565 = v1564[1];
              void *v1563 = *v1564;
              v1563[1] = v1565;
              uint64_t v1566 = v1367[23];
              uint64_t v1567 = (void *)((char *)v1365 + v1566);
              v1568 = (void *)((char *)v1366 + v1566);
              uint64_t v1569 = v1568[1];
              void *v1567 = *v1568;
              v1567[1] = v1569;
              uint64_t v1570 = v1367[24];
              uint64_t v1571 = (void *)((char *)v1365 + v1570);
              v1572 = (void *)((char *)v1366 + v1570);
              v2592 = (void *)v1572[1];
              void *v1571 = *v1572;
              v1571[1] = v2592;
              uint64_t v1573 = v1367[25];
              uint64_t v1574 = (void *)((char *)v1365 + v1573);
              uint64_t v1575 = (void *)((char *)v1366 + v1573);
              uint64_t v2558 = (void *)v1575[1];
              *uint64_t v1574 = *v1575;
              v1574[1] = v2558;
              uint64_t v1576 = v1367[26];
              uint64_t v1577 = (void *)((char *)v1365 + v1576);
              uint64_t v1578 = (void *)((char *)v1366 + v1576);
              uint64_t v2549 = v1578[1];
              *uint64_t v1577 = *v1578;
              v1577[1] = v2549;
              uint64_t v1579 = v1367[27];
              uint64_t v1580 = (void *)((char *)v1365 + v1579);
              uint64_t v1581 = (void *)((char *)v1366 + v1579);
              __dstf = (void *)v1581[1];
              void *v1580 = *v1581;
              v1580[1] = __dstf;
              uint64_t v1582 = v1367[28];
              uint64_t v1583 = (void *)((char *)v1365 + v1582);
              uint64_t v1584 = (void *)((char *)v1366 + v1582);
              uint64_t v2537 = v1584[1];
              *uint64_t v1583 = *v1584;
              v1583[1] = v2537;
              uint64_t v1585 = v1367[29];
              uint64_t v1586 = (void *)((char *)v1365 + v1585);
              uint64_t v1587 = (void *)((char *)v1366 + v1585);
              uint64_t v2534 = v1587[1];
              *uint64_t v1586 = *v1587;
              v1586[1] = v2534;
              uint64_t v1588 = v1367[30];
              uint64_t v1589 = (void *)((char *)v1365 + v1588);
              uint64_t v1590 = (void *)((char *)v1366 + v1588);
              uint64_t v2531 = v1590[1];
              *uint64_t v1589 = *v1590;
              v1589[1] = v2531;
              uint64_t v1591 = v1367[31];
              uint64_t v1592 = (void *)((char *)v1365 + v1591);
              uint64_t v1593 = (void *)((char *)v1366 + v1591);
              uint64_t v2527 = v1593[1];
              *uint64_t v1592 = *v1593;
              v1592[1] = v2527;
              uint64_t v1594 = v1367[32];
              v1595 = (void *)((char *)v1365 + v1594);
              uint64_t v1596 = (void *)((char *)v1366 + v1594);
              uint64_t v2520 = v1596[1];
              void *v1595 = *v1596;
              v1595[1] = v2520;
              *(void *)((char *)v1365 + v1367[33]) = *(void *)((char *)v1366 + v1367[33]);
              *(void *)((char *)v1365 + v1367[34]) = *(void *)((char *)v1366 + v1367[34]);
              uint64_t v1597 = v1367[35];
              uint64_t v1598 = (void *)((char *)v1365 + v1597);
              v1599 = (void *)((char *)v1366 + v1597);
              uint64_t v1600 = v1599[1];
              void *v1598 = *v1599;
              v1598[1] = v1600;
              uint64_t v1601 = v1367[36];
              v1602 = (void *)((char *)v1365 + v1601);
              v1603 = (void *)((char *)v1366 + v1601);
              uint64_t v1604 = v1603[1];
              void *v1602 = *v1603;
              v1602[1] = v1604;
              uint64_t v1605 = v1367[37];
              v1606 = (void *)((char *)v1365 + v1605);
              uint64_t v1607 = (void *)((char *)v1366 + v1605);
              uint64_t v1608 = v1607[1];
              void *v1606 = *v1607;
              v1606[1] = v1608;
              uint64_t v1609 = v1367[38];
              uint64_t v2573 = (char *)v1365 + v1609;
              v1610 = (char *)v1366 + v1609;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1610, 1, v2683))
              {
                uint64_t v1611 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2573, v1610, *(void *)(*(void *)(v1611 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v2573, v1610, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v2573, 0, 1, v2683);
              }
              Swift::String v348 = v2687;
              uint64_t v1712 = v1367[39];
              uint64_t v1713 = (void *)((char *)v1365 + v1712);
              v1714 = (void *)((char *)v1366 + v1712);
              uint64_t v1715 = v1714[1];
              *uint64_t v1713 = *v1714;
              v1713[1] = v1715;
              uint64_t v1716 = v1367[40];
              v1717 = (void *)((char *)v1365 + v1716);
              v1718 = (void *)((char *)v1366 + v1716);
              uint64_t v1719 = v1718[1];
              void *v1717 = *v1718;
              v1717[1] = v1719;
              uint64_t v1720 = v1367[41];
              v1721 = (char *)v1365 + v1720;
              uint64_t v1722 = (char *)v1366 + v1720;
              v1721[8] = v1722[8];
              *(void *)v1721 = *(void *)v1722;
              uint64_t v1723 = v1367[42];
              v1724 = (void *)((char *)v1365 + v1723);
              uint64_t v1725 = (void *)((char *)v1366 + v1723);
              uint64_t v1726 = v1725[1];
              void *v1724 = *v1725;
              v1724[1] = v1726;
              uint64_t v1727 = v1367[43];
              uint64_t v1728 = (char *)v1365 + v1727;
              uint64_t v1729 = (char *)v1366 + v1727;
              *(_OWORD *)uint64_t v1728 = *(_OWORD *)v1729;
              *(void *)(v1728 + 13) = *(void *)(v1729 + 13);
              uint64_t v1730 = v1367[44];
              v1731 = (void *)((char *)v1365 + v1730);
              uint64_t v1732 = (void *)((char *)v1366 + v1730);
              uint64_t v1733 = v1732[1];
              void *v1731 = *v1732;
              v1731[1] = v1733;
              uint64_t v1734 = v1367[45];
              v1735 = (void *)((char *)v1365 + v1734);
              uint64_t v1736 = (void *)((char *)v1366 + v1734);
              uint64_t v1737 = v1736[1];
              void *v1735 = *v1736;
              v1735[1] = v1737;
              uint64_t v1738 = v1367[46];
              v1739 = (void *)((char *)v1365 + v1738);
              uint64_t v1740 = (void *)((char *)v1366 + v1738);
              uint64_t v1741 = v1740[1];
              void *v1739 = *v1740;
              v1739[1] = v1741;
              uint64_t v1742 = v1367[47];
              v1743 = (void *)((char *)v1365 + v1742);
              uint64_t v1744 = (void *)((char *)v1366 + v1742);
              uint64_t v1745 = v1744[1];
              void *v1743 = *v1744;
              v1743[1] = v1745;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1365, 0, 1, (uint64_t)v1367);
              uint64_t v692 = v2622;
              uint64_t v693 = v2637;
              long long v694 = v2657;
            }
            uint64_t v1746 = v694[12];
            uint64_t v1747 = (void *)((char *)v692 + v1746);
            uint64_t v1748 = (void *)((char *)v693 + v1746);
            uint64_t v1749 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1748, 1, (uint64_t)v1749))
            {
              uint64_t v1750 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1747, v1748, *(void *)(*(void *)(v1750 - 8) + 64));
            }
            else
            {
              uint64_t v1751 = v1748[1];
              void *v1747 = *v1748;
              v1747[1] = v1751;
              uint64_t v1752 = v1748[3];
              v1747[2] = v1748[2];
              v1747[3] = v1752;
              uint64_t v1753 = v1748[5];
              v1747[4] = v1748[4];
              v1747[5] = v1753;
              uint64_t v1754 = v1748[7];
              v1747[6] = v1748[6];
              v1747[7] = v1754;
              uint64_t v1755 = v1748[9];
              v1747[8] = v1748[8];
              v1747[9] = v1755;
              uint64_t v1756 = v1748[11];
              v1747[10] = v1748[10];
              v1747[11] = v1756;
              *((unsigned char *)v1747 + 96) = *((unsigned char *)v1748 + 96);
              uint64_t v1757 = v1748[14];
              v1747[13] = v1748[13];
              v1747[14] = v1757;
              uint64_t v1758 = v1748[16];
              v1747[15] = v1748[15];
              v1747[16] = v1758;
              uint64_t v1759 = v1749[14];
              v2593 = (char *)v1747 + v1759;
              v1760 = (char *)v1748 + v1759;
              __dstb = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1760, 1, (uint64_t)__dstb))
              {
                uint64_t v1761 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2593, v1760, *(void *)(*(void *)(v1761 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(__dstb - 1) + 16))(v2593, v1760, __dstb);
                __swift_storeEnumTagSinglePayload((uint64_t)v2593, 0, 1, (uint64_t)__dstb);
              }
              uint64_t v1770 = v1749[15];
              v1771 = (char *)v1747 + v1770;
              uint64_t v1772 = (char *)v1748 + v1770;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1748 + v1770, 1, (uint64_t)__dstb))
              {
                uint64_t v1773 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1771, v1772, *(void *)(*(void *)(v1773 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(__dstb - 1) + 16))(v1771, v1772, __dstb);
                __swift_storeEnumTagSinglePayload((uint64_t)v1771, 0, 1, (uint64_t)__dstb);
              }
              uint64_t v1889 = v1749[16];
              uint64_t v1890 = (void *)((char *)v1747 + v1889);
              uint64_t v1891 = (void *)((char *)v1748 + v1889);
              uint64_t v1892 = v1891[1];
              *uint64_t v1890 = *v1891;
              v1890[1] = v1892;
              uint64_t v1893 = v1749[17];
              uint64_t v1894 = (void *)((char *)v1747 + v1893);
              uint64_t v1895 = (void *)((char *)v1748 + v1893);
              v2595 = (void *)v1895[1];
              *uint64_t v1894 = *v1895;
              v1894[1] = v2595;
              uint64_t v1896 = v1749[18];
              uint64_t v1897 = (void *)((char *)v1747 + v1896);
              uint64_t v1898 = (void *)((char *)v1748 + v1896);
              v2577 = (void *)v1898[1];
              *uint64_t v1897 = *v1898;
              v1897[1] = v2577;
              uint64_t v1899 = v1749[19];
              uint64_t v1900 = (void *)((char *)v1747 + v1899);
              uint64_t v1901 = (void *)((char *)v1748 + v1899);
              uint64_t v2561 = (void *)v1901[1];
              void *v1900 = *v1901;
              v1900[1] = v2561;
              uint64_t v1902 = v1749[20];
              uint64_t v1903 = (void *)((char *)v1747 + v1902);
              uint64_t v1904 = (void *)((char *)v1748 + v1902);
              uint64_t v1905 = v1904[1];
              *uint64_t v1903 = *v1904;
              v1903[1] = v1905;
              *(void *)((char *)v1747 + v1749[21]) = *(void *)((char *)v1748 + v1749[21]);
              *(void *)((char *)v1747 + v1749[22]) = *(void *)((char *)v1748 + v1749[22]);
              uint64_t v1906 = v1749[23];
              uint64_t v1907 = (char *)v1747 + v1906;
              uint64_t v1908 = (char *)v1748 + v1906;
              *(void *)uint64_t v1907 = *(void *)v1908;
              v1907[8] = v1908[8];
              uint64_t v1909 = v1749[24];
              uint64_t v1910 = (char *)v1747 + v1909;
              v1911 = (char *)v1748 + v1909;
              *(void *)uint64_t v1910 = *(void *)v1911;
              v1910[8] = v1911[8];
              uint64_t v1912 = v1749[25];
              uint64_t v1913 = (void *)((char *)v1747 + v1912);
              uint64_t v1914 = (void *)((char *)v1748 + v1912);
              uint64_t v1915 = v1914[1];
              *uint64_t v1913 = *v1914;
              v1913[1] = v1915;
              uint64_t v1916 = v1749[26];
              uint64_t v1917 = (void *)((char *)v1747 + v1916);
              uint64_t v1918 = (void *)((char *)v1748 + v1916);
              uint64_t v1919 = v1918[1];
              *uint64_t v1917 = *v1918;
              v1917[1] = v1919;
              uint64_t v1920 = v1749[27];
              uint64_t v1921 = (void *)((char *)v1747 + v1920);
              uint64_t v1922 = (void *)((char *)v1748 + v1920);
              uint64_t v1923 = v1922[1];
              *uint64_t v1921 = *v1922;
              v1921[1] = v1923;
              uint64_t v1924 = v1749[28];
              uint64_t v1925 = (void *)((char *)v1747 + v1924);
              uint64_t v1926 = (void *)((char *)v1748 + v1924);
              uint64_t v1927 = v1926[1];
              *uint64_t v1925 = *v1926;
              v1925[1] = v1927;
              uint64_t v1928 = v1749[29];
              uint64_t v1929 = (char *)v1747 + v1928;
              uint64_t v1930 = (char *)v1748 + v1928;
              *(void *)uint64_t v1929 = *(void *)v1930;
              v1929[8] = v1930[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1747, 0, 1, (uint64_t)v1749);
              Swift::String v348 = v2687;
              uint64_t v692 = v2622;
              uint64_t v693 = v2637;
              long long v694 = v2657;
            }
            uint64_t v1931 = v694[13];
            uint64_t v1932 = (void *)((char *)v692 + v1931);
            uint64_t v1933 = (void *)((char *)v693 + v1931);
            uint64_t v1934 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1933, 1, (uint64_t)v1934))
            {
              uint64_t v1935 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1932, v1933, *(void *)(*(void *)(v1935 - 8) + 64));
            }
            else
            {
              uint64_t v1936 = v1933[1];
              *uint64_t v1932 = *v1933;
              v1932[1] = v1936;
              uint64_t v1937 = v1933[3];
              v1932[2] = v1933[2];
              v1932[3] = v1937;
              uint64_t v1938 = v1933[5];
              v1932[4] = v1933[4];
              v1932[5] = v1938;
              uint64_t v1939 = v1933[7];
              v1932[6] = v1933[6];
              v1932[7] = v1939;
              uint64_t v1940 = v1933[9];
              v1932[8] = v1933[8];
              v1932[9] = v1940;
              uint64_t v1941 = v1933[11];
              v1932[10] = v1933[10];
              v1932[11] = v1941;
              *((unsigned char *)v1932 + 96) = *((unsigned char *)v1933 + 96);
              uint64_t v1942 = v1933[14];
              v1932[13] = v1933[13];
              v1932[14] = v1942;
              uint64_t v1943 = v1933[16];
              v1932[15] = v1933[15];
              v1932[16] = v1943;
              uint64_t v1944 = v1934[14];
              uint64_t v2643 = (char *)v1932 + v1944;
              uint64_t v1945 = (char *)v1933 + v1944;
              uint64_t v2552 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1945, 1, v2552))
              {
                uint64_t v1946 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2643, v1945, *(void *)(*(void *)(v1946 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2552 - 8) + 16))(v2643, v1945, v2552);
                __swift_storeEnumTagSinglePayload((uint64_t)v2643, 0, 1, v2552);
              }
              uint64_t v2312 = v1934[15];
              uint64_t v2313 = (void *)((char *)v1932 + v2312);
              uint64_t v2314 = (void *)((char *)v1933 + v2312);
              uint64_t v2315 = v2314[1];
              *uint64_t v2313 = *v2314;
              v2313[1] = v2315;
              uint64_t v2316 = v1934[16];
              uint64_t v2317 = (void *)((char *)v1932 + v2316);
              uint64_t v2318 = (void *)((char *)v1933 + v2316);
              uint64_t v2319 = v2318[1];
              *uint64_t v2317 = *v2318;
              v2317[1] = v2319;
              uint64_t v2320 = v1934[17];
              uint64_t v2321 = (void *)((char *)v1932 + v2320);
              uint64_t v2322 = (void *)((char *)v1933 + v2320);
              uint64_t v2323 = v2322[1];
              void *v2321 = *v2322;
              v2321[1] = v2323;
              uint64_t v2324 = v1934[18];
              uint64_t v2325 = (void *)((char *)v1932 + v2324);
              uint64_t v2326 = (void *)((char *)v1933 + v2324);
              uint64_t v2327 = v2326[1];
              *uint64_t v2325 = *v2326;
              v2325[1] = v2327;
              uint64_t v2328 = v1934[19];
              uint64_t v2329 = (void *)((char *)v1932 + v2328);
              uint64_t v2330 = (void *)((char *)v1933 + v2328);
              uint64_t v2331 = v2330[1];
              *uint64_t v2329 = *v2330;
              v2329[1] = v2331;
              *(void *)((char *)v1932 + v1934[20]) = *(void *)((char *)v1933 + v1934[20]);
              uint64_t v2332 = v1934[21];
              uint64_t v2333 = (void *)((char *)v1932 + v2332);
              uint64_t v2334 = (void *)((char *)v1933 + v2332);
              uint64_t v2335 = v2334[1];
              *uint64_t v2333 = *v2334;
              v2333[1] = v2335;
              uint64_t v2336 = v1934[22];
              uint64_t v2337 = (void *)((char *)v1932 + v2336);
              uint64_t v2338 = (void *)((char *)v1933 + v2336);
              uint64_t v2339 = v2338[1];
              *uint64_t v2337 = *v2338;
              v2337[1] = v2339;
              uint64_t v2340 = v1934[23];
              uint64_t v2341 = (void *)((char *)v1932 + v2340);
              uint64_t v2342 = (void *)((char *)v1933 + v2340);
              uint64_t v2343 = v2342[1];
              *uint64_t v2341 = *v2342;
              v2341[1] = v2343;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1932, 0, 1, (uint64_t)v1934);
              Swift::String v348 = v2687;
              uint64_t v692 = v2622;
              long long v694 = v2657;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v692, 0, 1, (uint64_t)v694);
            uint64_t v17 = (uint64_t)v2713;
            uint64_t v14 = v2596;
          }
          uint64_t v2344 = v348[20];
          uint64_t v2345 = (void *)(v17 + v2344);
          uint64_t v2346 = (void *)((char *)v14 + v2344);
          uint64_t v2347 = (int *)type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2346, 1, (uint64_t)v2347))
          {
            uint64_t v2348 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v2345, v2346, *(void *)(*(void *)(v2348 - 8) + 64));
          }
          else
          {
            uint64_t v2349 = v2346[1];
            void *v2345 = *v2346;
            v2345[1] = v2349;
            uint64_t v2350 = v2346[3];
            v2345[2] = v2346[2];
            v2345[3] = v2350;
            uint64_t v2351 = v2346[5];
            v2345[4] = v2346[4];
            v2345[5] = v2351;
            uint64_t v2352 = v2346[7];
            v2345[6] = v2346[6];
            v2345[7] = v2352;
            uint64_t v2353 = v2346[9];
            v2345[8] = v2346[8];
            v2345[9] = v2353;
            uint64_t v2354 = v2346[11];
            v2345[10] = v2346[10];
            v2345[11] = v2354;
            uint64_t v2355 = v2347[10];
            uint64_t v2356 = (char *)v2345 + v2355;
            v2357 = (char *)v2346 + v2355;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2357, 1, v2683))
            {
              uint64_t v2358 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2356, v2357, *(void *)(*(void *)(v2358 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v2356, v2357, v2683);
              __swift_storeEnumTagSinglePayload((uint64_t)v2356, 0, 1, v2683);
            }
            uint64_t v2359 = v2347[11];
            uint64_t v2360 = (char *)v2345 + v2359;
            v2361 = (char *)v2346 + v2359;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2346 + v2359, 1, v2683))
            {
              uint64_t v2362 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2360, v2361, *(void *)(*(void *)(v2362 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v2360, v2361, v2683);
              __swift_storeEnumTagSinglePayload((uint64_t)v2360, 0, 1, v2683);
            }
            uint64_t v2363 = v2347[12];
            uint64_t v2364 = (void *)((char *)v2345 + v2363);
            v2365 = (void *)((char *)v2346 + v2363);
            uint64_t v2366 = v2365[1];
            void *v2364 = *v2365;
            v2364[1] = v2366;
            uint64_t v2367 = v2347[13];
            uint64_t v2368 = (void *)((char *)v2345 + v2367);
            v2369 = (void *)((char *)v2346 + v2367);
            uint64_t v2370 = v2369[1];
            void *v2368 = *v2369;
            v2368[1] = v2370;
            uint64_t v2371 = v2347[14];
            uint64_t v2372 = (void *)((char *)v2345 + v2371);
            v2373 = (void *)((char *)v2346 + v2371);
            uint64_t v2374 = v2373[1];
            void *v2372 = *v2373;
            v2372[1] = v2374;
            uint64_t v2375 = v2347[15];
            v2376 = (char *)v2345 + v2375;
            v2377 = (char *)v2346 + v2375;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2377, 1, v2683))
            {
              uint64_t v2378 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2376, v2377, *(void *)(*(void *)(v2378 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v2376, v2377, v2683);
              __swift_storeEnumTagSinglePayload((uint64_t)v2376, 0, 1, v2683);
            }
            uint64_t v2379 = v2347[16];
            v2380 = (void *)((char *)v2345 + v2379);
            uint64_t v2381 = (void *)((char *)v2346 + v2379);
            uint64_t v2382 = v2381[1];
            void *v2380 = *v2381;
            v2380[1] = v2382;
            uint64_t v2383 = v2347[17];
            v2384 = (void *)((char *)v2345 + v2383);
            uint64_t v2385 = (void *)((char *)v2346 + v2383);
            uint64_t v2386 = v2385[1];
            void *v2384 = *v2385;
            v2384[1] = v2386;
            uint64_t v2387 = v2347[18];
            v2388 = (void *)((char *)v2345 + v2387);
            uint64_t v2389 = (void *)((char *)v2346 + v2387);
            uint64_t v2390 = v2389[1];
            void *v2388 = *v2389;
            v2388[1] = v2390;
            uint64_t v2391 = v2347[19];
            v2392 = (void *)((char *)v2345 + v2391);
            uint64_t v2393 = (void *)((char *)v2346 + v2391);
            uint64_t v2394 = v2393[1];
            void *v2392 = *v2393;
            v2392[1] = v2394;
            uint64_t v2395 = v2347[20];
            v2396 = (void *)((char *)v2345 + v2395);
            uint64_t v2397 = (void *)((char *)v2346 + v2395);
            uint64_t v2398 = v2397[1];
            void *v2396 = *v2397;
            v2396[1] = v2398;
            uint64_t v2399 = v2347[21];
            uint64_t v2400 = (void *)((char *)v2345 + v2399);
            uint64_t v2401 = (void *)((char *)v2346 + v2399);
            uint64_t v2402 = v2401[1];
            *uint64_t v2400 = *v2401;
            v2400[1] = v2402;
            uint64_t v2403 = v2347[22];
            uint64_t v2404 = (void *)((char *)v2345 + v2403);
            uint64_t v2405 = (void *)((char *)v2346 + v2403);
            uint64_t v2406 = v2405[1];
            *uint64_t v2404 = *v2405;
            v2404[1] = v2406;
            uint64_t v2407 = v2347[23];
            v2408 = (void *)((char *)v2345 + v2407);
            uint64_t v2409 = (void *)((char *)v2346 + v2407);
            uint64_t v2410 = v2409[1];
            void *v2408 = *v2409;
            v2408[1] = v2410;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2345, 0, 1, (uint64_t)v2347);
            Swift::String v348 = v2687;
          }
          uint64_t v2411 = v348[21];
          uint64_t v2412 = (void *)((char *)v2713 + v2411);
          uint64_t v2413 = (void *)((char *)v2596 + v2411);
          v2414 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2413, 1, (uint64_t)v2414))
          {
            uint64_t v2415 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v2412, v2413, *(void *)(*(void *)(v2415 - 8) + 64));
          }
          else
          {
            uint64_t v2416 = v2413[1];
            *uint64_t v2412 = *v2413;
            v2412[1] = v2416;
            uint64_t v2417 = v2413[3];
            v2412[2] = v2413[2];
            v2412[3] = v2417;
            uint64_t v2418 = v2413[5];
            v2412[4] = v2413[4];
            v2412[5] = v2418;
            uint64_t v2419 = v2413[7];
            v2412[6] = v2413[6];
            v2412[7] = v2419;
            uint64_t v2420 = v2413[9];
            v2412[8] = v2413[8];
            v2412[9] = v2420;
            uint64_t v2421 = v2413[11];
            v2412[10] = v2413[10];
            v2412[11] = v2421;
            uint64_t v2422 = v2414[11];
            uint64_t v2659 = (char *)v2412 + v2422;
            v2423 = (char *)v2413 + v2422;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2423, 1, v2683))
            {
              uint64_t v2424 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2659, v2423, *(void *)(*(void *)(v2424 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v2659, v2423, v2683);
              __swift_storeEnumTagSinglePayload((uint64_t)v2659, 0, 1, v2683);
            }
            uint64_t v2425 = v2414[12];
            v2426 = (void *)((char *)v2412 + v2425);
            v2427 = (void *)((char *)v2413 + v2425);
            uint64_t v2428 = v2427[1];
            void *v2426 = *v2427;
            v2426[1] = v2428;
            *(void *)((char *)v2412 + v2414[13]) = *(void *)((char *)v2413 + v2414[13]);
            uint64_t v2429 = v2414[14];
            v2430 = (char *)v2412 + v2429;
            v2431 = (char *)v2413 + v2429;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            Swift::String v348 = v2687;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2431, 1, v2683))
            {
              uint64_t v2432 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2430, v2431, *(void *)(*(void *)(v2432 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v2430, v2431, v2683);
              __swift_storeEnumTagSinglePayload((uint64_t)v2430, 0, 1, v2683);
            }
            *(void *)((char *)v2412 + v2414[15]) = *(void *)((char *)v2413 + v2414[15]);
            *(void *)((char *)v2412 + v2414[16]) = *(void *)((char *)v2413 + v2414[16]);
            uint64_t v2433 = v2414[17];
            v2434 = (void *)((char *)v2412 + v2433);
            v2435 = (void *)((char *)v2413 + v2433);
            uint64_t v2436 = v2435[1];
            void *v2434 = *v2435;
            v2434[1] = v2436;
            *(void *)((char *)v2412 + v2414[18]) = *(void *)((char *)v2413 + v2414[18]);
            *(void *)((char *)v2412 + v2414[19]) = *(void *)((char *)v2413 + v2414[19]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2412, 0, 1, (uint64_t)v2414);
          }
          uint64_t v2437 = v348[22];
          uint64_t v2438 = (void *)((char *)v2713 + v2437);
          uint64_t v2439 = (void *)((char *)v2596 + v2437);
          v2440 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2439, 1, (uint64_t)v2440))
          {
            uint64_t v2441 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v2438, v2439, *(void *)(*(void *)(v2441 - 8) + 64));
          }
          else
          {
            uint64_t v2442 = v2439[1];
            *uint64_t v2438 = *v2439;
            v2438[1] = v2442;
            uint64_t v2443 = v2439[3];
            v2438[2] = v2439[2];
            v2438[3] = v2443;
            uint64_t v2444 = v2439[5];
            v2438[4] = v2439[4];
            v2438[5] = v2444;
            uint64_t v2445 = v2439[7];
            v2438[6] = v2439[6];
            v2438[7] = v2445;
            uint64_t v2446 = v2440[8];
            uint64_t v2447 = (char *)v2438 + v2446;
            uint64_t v2448 = (char *)v2439 + v2446;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2448, 1, v2668))
            {
              uint64_t v2449 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2447, v2448, *(void *)(*(void *)(v2449 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2668 - 8) + 16))(v2447, v2448, v2668);
              __swift_storeEnumTagSinglePayload((uint64_t)v2447, 0, 1, v2668);
            }
            uint64_t v2450 = v2440[9];
            uint64_t v2451 = (void *)((char *)v2438 + v2450);
            uint64_t v2452 = (void *)((char *)v2439 + v2450);
            uint64_t v2453 = v2452[1];
            *uint64_t v2451 = *v2452;
            v2451[1] = v2453;
            uint64_t v2454 = v2440[10];
            uint64_t v2455 = (void *)((char *)v2438 + v2454);
            uint64_t v2456 = (void *)((char *)v2439 + v2454);
            uint64_t v2457 = v2456[1];
            *uint64_t v2455 = *v2456;
            v2455[1] = v2457;
            uint64_t v2458 = v2440[11];
            uint64_t v2459 = (void *)((char *)v2438 + v2458);
            uint64_t v2460 = (void *)((char *)v2439 + v2458);
            uint64_t v2461 = v2460[1];
            void *v2459 = *v2460;
            v2459[1] = v2461;
            uint64_t v2462 = v2440[12];
            uint64_t v2463 = (char *)v2438 + v2462;
            v2464 = (char *)v2439 + v2462;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2464, 1, v2683))
            {
              uint64_t v2465 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2463, v2464, *(void *)(*(void *)(v2465 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v2463, v2464, v2683);
              __swift_storeEnumTagSinglePayload((uint64_t)v2463, 0, 1, v2683);
            }
            uint64_t v2466 = v2440[13];
            v2467 = (char *)v2438 + v2466;
            v2468 = (char *)v2439 + v2466;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2439 + v2466, 1, v2683))
            {
              uint64_t v2469 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2467, v2468, *(void *)(*(void *)(v2469 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2683 - 8) + 16))(v2467, v2468, v2683);
              __swift_storeEnumTagSinglePayload((uint64_t)v2467, 0, 1, v2683);
            }
            uint64_t v2470 = v2440[14];
            uint64_t v2471 = (char *)v2438 + v2470;
            v2472 = (char *)v2439 + v2470;
            *(void *)uint64_t v2471 = *(void *)v2472;
            v2471[8] = v2472[8];
            uint64_t v2473 = v2440[15];
            uint64_t v2474 = (void *)((char *)v2438 + v2473);
            uint64_t v2475 = (void *)((char *)v2439 + v2473);
            uint64_t v2476 = v2475[1];
            *uint64_t v2474 = *v2475;
            v2474[1] = v2476;
            uint64_t v2477 = v2440[16];
            uint64_t v2478 = (void *)((char *)v2438 + v2477);
            uint64_t v2479 = (void *)((char *)v2439 + v2477);
            uint64_t v2480 = v2479[1];
            void *v2478 = *v2479;
            v2478[1] = v2480;
            uint64_t v2481 = v2440[17];
            v2482 = (void *)((char *)v2438 + v2481);
            v2483 = (void *)((char *)v2439 + v2481);
            uint64_t v2484 = v2483[1];
            void *v2482 = *v2483;
            v2482[1] = v2484;
            uint64_t v2485 = v2440[18];
            v2486 = (void *)((char *)v2438 + v2485);
            v2487 = (void *)((char *)v2439 + v2485);
            uint64_t v2488 = v2487[1];
            void *v2486 = *v2487;
            v2486[1] = v2488;
            uint64_t v2489 = v2440[19];
            v2490 = (void *)((char *)v2438 + v2489);
            v2491 = (void *)((char *)v2439 + v2489);
            uint64_t v2492 = v2491[1];
            void *v2490 = *v2491;
            v2490[1] = v2492;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2438, 0, 1, (uint64_t)v2440);
          }
          uint64_t v2129 = v348[23];
          goto LABEL_544;
        case 2u:
          uint64_t v51 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v51;
          uint64_t v52 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v52;
          uint64_t v53 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v53;
          uint64_t v54 = (int *)type metadata accessor for CalendarEvent(0);
          uint64_t v55 = v54[7];
          uint64_t v56 = (char *)v2713 + v55;
          uint64_t v57 = (char *)v12 + v55;
          uint64_t v58 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, v58))
          {
            uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
            __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v58);
          }
          uint64_t v354 = v54[8];
          uint64_t v355 = (char *)v2713 + v354;
          Class v356 = (char *)v14 + v354;
          if (__swift_getEnumTagSinglePayload((uint64_t)v14 + v354, 1, v58))
          {
            uint64_t v357 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v355, v356, *(void *)(*(void *)(v357 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v355, v356, v58);
            __swift_storeEnumTagSinglePayload((uint64_t)v355, 0, 1, v58);
          }
          uint64_t v524 = v54[9];
          uint64_t v525 = (void *)((char *)v2713 + v524);
          uint64_t v526 = (void *)((char *)v14 + v524);
          uint64_t v527 = v526[1];
          void *v525 = *v526;
          v525[1] = v527;
          *(void *)((char *)v2713 + v54[10]) = *(void *)((char *)v14 + v54[10]);
          *(void *)((char *)v2713 + v54[11]) = *(void *)((char *)v14 + v54[11]);
          uint64_t v528 = v54[12];
          uint64_t v529 = (void *)((char *)v2713 + v528);
          uint64_t v530 = (void *)((char *)v14 + v528);
          uint64_t v531 = v530[1];
          void *v529 = *v530;
          v529[1] = v531;
          uint64_t v532 = v54[13];
          uint64_t v533 = (void *)((char *)v2713 + v532);
          uint64_t v534 = (char *)v14 + v532;
          uint64_t v535 = *(void *)((char *)v14 + v532);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v535)
          {
            uint64_t v536 = *((void *)v534 + 1);
            uint64_t v537 = *((void *)v534 + 2);
            void *v533 = v535;
            v533[1] = v536;
            uint64_t v538 = *((void *)v534 + 3);
            uint64_t v539 = *((void *)v534 + 4);
            v533[2] = v537;
            v533[3] = v538;
            v533[4] = v539;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_168:
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v696 = *((_OWORD *)v534 + 1);
            *(_OWORD *)uint64_t v533 = *(_OWORD *)v534;
            *((_OWORD *)v533 + 1) = v696;
            v533[4] = *((void *)v534 + 4);
          }
LABEL_169:
          uint64_t v16 = a1;
          goto LABEL_549;
        case 3u:
          uint64_t v2700 = v13;
          uint64_t v60 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v60;
          uint64_t v61 = v12[3];
          v2713[2] = v14[2];
          v2713[3] = v61;
          uint64_t v62 = v14[5];
          v2713[4] = v14[4];
          v2713[5] = v62;
          uint64_t v63 = v14[7];
          v2713[6] = v14[6];
          v2713[7] = v63;
          uint64_t v64 = v14[9];
          v2713[8] = v14[8];
          v2713[9] = v64;
          v2713[10] = v14[10];
          v2688 = (int *)type metadata accessor for Photo(0);
          uint64_t v65 = v2688[11];
          uint64_t v2663 = (char *)v2713 + v65;
          v2596 = v14;
          uint64_t v66 = (char *)v14 + v65;
          uint64_t v67 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v2675 = v67;
          if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, v67))
          {
            uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2663, v66, *(void *)(*(void *)(v68 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v2663, v66, v67);
            __swift_storeEnumTagSinglePayload((uint64_t)v2663, 0, 1, v67);
          }
          uint64_t v358 = v14;
          *(void *)((char *)v2713 + v2688[12]) = *(void *)((char *)v14 + v2688[12]);
          *(void *)((char *)v2713 + v2688[13]) = *(void *)((char *)v14 + v2688[13]);
          *(void *)((char *)v2713 + v2688[14]) = *(void *)((char *)v14 + v2688[14]);
          *(void *)((char *)v2713 + v2688[15]) = *(void *)((char *)v14 + v2688[15]);
          uint64_t v359 = v2688[16];
          long long v360 = (void *)((char *)v2713 + v359);
          Swift::String v361 = (void *)((char *)v14 + v359);
          uint64_t v362 = v361[1];
          void *v360 = *v361;
          v360[1] = v362;
          uint64_t v363 = v2688[17];
          uint64_t v364 = (void *)((char *)v2713 + v363);
          long long v365 = (void *)((char *)v14 + v363);
          uint64_t v366 = type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          Class v367 = v365;
          swift_bridgeObjectRetain();
          id v368 = (int *)v366;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v365, 1, v366))
          {
            uint64_t v369 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v364, v365, *(void *)(*(void *)(v369 - 8) + 64));
          }
          else
          {
            uint64_t v540 = v365[1];
            void *v364 = *v365;
            v364[1] = v540;
            uint64_t v541 = *(int *)(v366 + 20);
            long long v542 = (void *)((char *)v364 + v541);
            long long v543 = (void *)((char *)v365 + v541);
            uint64_t v544 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            uint64_t v2669 = v364;
            if (__swift_getEnumTagSinglePayload((uint64_t)v543, 1, v544))
            {
              uint64_t v545 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v542, v543, *(void *)(*(void *)(v545 - 8) + 64));
              uint64_t v546 = v2675;
            }
            else
            {
              uint64_t v766 = v543[1];
              void *v542 = *v543;
              v542[1] = v766;
              uint64_t v767 = v543[3];
              v542[2] = v543[2];
              v542[3] = v767;
              uint64_t v768 = v543[5];
              v542[4] = v543[4];
              v542[5] = v768;
              uint64_t v769 = v543[7];
              v542[6] = v543[6];
              v542[7] = v769;
              uint64_t v770 = v543[9];
              v542[8] = v543[8];
              v542[9] = v770;
              uint64_t v771 = v543[11];
              v542[10] = v543[10];
              v542[11] = v771;
              uint64_t v772 = v543[13];
              v542[12] = v543[12];
              v542[13] = v772;
              uint64_t v773 = v543[15];
              v542[14] = v543[14];
              v542[15] = v773;
              *((unsigned char *)v542 + 128) = *((unsigned char *)v543 + 128);
              *(_WORD *)((char *)v542 + 129) = *(_WORD *)((char *)v543 + 129);
              uint64_t v774 = v543[18];
              v542[17] = v543[17];
              v542[18] = v774;
              uint64_t v775 = v543[20];
              v542[19] = v543[19];
              v542[20] = v775;
              uint64_t v776 = v543[22];
              v542[21] = v543[21];
              v542[22] = v776;
              uint64_t v2516 = v543[24];
              v542[23] = v543[23];
              v542[24] = v2516;
              uint64_t v777 = v543[26];
              v542[25] = v543[25];
              v542[26] = v777;
              uint64_t v778 = v543[28];
              v542[27] = v543[27];
              v542[28] = v778;
              uint64_t v779 = v543[30];
              v542[29] = v543[29];
              v542[30] = v779;
              uint64_t v780 = v543[32];
              v542[31] = v543[31];
              v542[32] = v780;
              uint64_t v781 = v543[34];
              v542[33] = v543[33];
              v542[34] = v781;
              uint64_t v2638 = v543[36];
              v542[35] = v543[35];
              v542[36] = v2638;
              uint64_t v2614 = v543[38];
              v542[37] = v543[37];
              v542[38] = v2614;
              uint64_t v782 = v543[40];
              v542[39] = v543[39];
              v542[40] = v782;
              uint64_t v783 = v543[42];
              v542[41] = v543[41];
              v542[42] = v783;
              uint64_t v784 = v543[44];
              v542[43] = v543[43];
              v542[44] = v784;
              uint64_t v785 = v543[46];
              v542[45] = v543[45];
              v542[46] = v785;
              uint64_t v786 = v543[47];
              *((unsigned char *)v542 + 384) = *((unsigned char *)v543 + 384);
              v542[47] = v786;
              uint64_t v787 = v543[50];
              v542[49] = v543[49];
              v542[50] = v787;
              uint64_t v788 = v543[52];
              v542[51] = v543[51];
              v542[52] = v788;
              uint64_t v789 = *(int *)(v544 + 140);
              uint64_t v2654 = (char *)v542 + v789;
              uint64_t v790 = (char *)v543 + v789;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v546 = v2675;
              if (__swift_getEnumTagSinglePayload((uint64_t)v790, 1, v2675))
              {
                uint64_t v791 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2654, v790, *(void *)(*(void *)(v791 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2675 - 8) + 16))(v2654, v790, v2675);
                __swift_storeEnumTagSinglePayload((uint64_t)v2654, 0, 1, v2675);
              }
              uint64_t v823 = *(int *)(v544 + 144);
              uint64_t v824 = (char *)v542 + v823;
              uint64_t v825 = (char *)v543 + v823;
              if (__swift_getEnumTagSinglePayload((uint64_t)v543 + v823, 1, v2675))
              {
                uint64_t v826 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v824, v825, *(void *)(*(void *)(v826 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2675 - 8) + 16))(v824, v825, v2675);
                __swift_storeEnumTagSinglePayload((uint64_t)v824, 0, 1, v2675);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v542, 0, 1, v544);
            }
            uint64_t v857 = v368[6];
            uint64_t v858 = (void *)((char *)v364 + v857);
            uint64_t v859 = (void *)((char *)v367 + v857);
            uint64_t v860 = type metadata accessor for TicketedTransportation(0);
            uint64_t v2656 = v367;
            if (__swift_getEnumTagSinglePayload((uint64_t)v859, 1, v860))
            {
              uint64_t v861 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v858, v859, *(void *)(*(void *)(v861 - 8) + 64));
            }
            else
            {
              uint64_t v862 = v859[1];
              *uint64_t v858 = *v859;
              v858[1] = v862;
              uint64_t v863 = v859[3];
              v858[2] = v859[2];
              v858[3] = v863;
              uint64_t v864 = v859[5];
              v858[4] = v859[4];
              v858[5] = v864;
              uint64_t v865 = v859[7];
              v858[6] = v859[6];
              v858[7] = v865;
              uint64_t v866 = v859[9];
              v858[8] = v859[8];
              v858[9] = v866;
              uint64_t v867 = v859[11];
              v858[10] = v859[10];
              v858[11] = v867;
              uint64_t v868 = v859[13];
              v858[12] = v859[12];
              v858[13] = v868;
              uint64_t v869 = v859[15];
              v858[14] = v859[14];
              v858[15] = v869;
              *((unsigned char *)v858 + 128) = *((unsigned char *)v859 + 128);
              *(_WORD *)((char *)v858 + 129) = *(_WORD *)((char *)v859 + 129);
              uint64_t v870 = v859[18];
              v858[17] = v859[17];
              v858[18] = v870;
              uint64_t v871 = v859[20];
              v858[19] = v859[19];
              v858[20] = v871;
              uint64_t v872 = v859[22];
              v858[21] = v859[21];
              v858[22] = v872;
              uint64_t v873 = v859[24];
              v858[23] = v859[23];
              v858[24] = v873;
              uint64_t v2616 = v859[26];
              v858[25] = v859[25];
              v858[26] = v2616;
              uint64_t v874 = v859[28];
              v858[27] = v859[27];
              v858[28] = v874;
              uint64_t v875 = v859[30];
              v858[29] = v859[29];
              v858[30] = v875;
              uint64_t v876 = v859[32];
              v858[31] = v859[31];
              v858[32] = v876;
              uint64_t v877 = v859[34];
              v858[33] = v859[33];
              v858[34] = v877;
              uint64_t v878 = v859[36];
              uint64_t v879 = v859[35];
              *((unsigned char *)v858 + 296) = *((unsigned char *)v859 + 296);
              v858[35] = v879;
              v858[36] = v878;
              uint64_t v880 = *(int *)(v860 + 112);
              uint64_t v2639 = (char *)v858 + v880;
              uint64_t v881 = (char *)v859 + v880;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v881, 1, v546))
              {
                uint64_t v882 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2639, v881, *(void *)(*(void *)(v882 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v546 - 8) + 16))(v2639, v881, v546);
                __swift_storeEnumTagSinglePayload((uint64_t)v2639, 0, 1, v546);
              }
              uint64_t v914 = v860;
              uint64_t v915 = *(int *)(v860 + 116);
              uint64_t v916 = (char *)v858 + v915;
              uint64_t v917 = (char *)v859 + v915;
              Class v367 = v2656;
              if (__swift_getEnumTagSinglePayload((uint64_t)v859 + v915, 1, v546))
              {
                uint64_t v918 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v916, v917, *(void *)(*(void *)(v918 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v546 - 8) + 16))(v916, v917, v546);
                __swift_storeEnumTagSinglePayload((uint64_t)v916, 0, 1, v546);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v858, 0, 1, v914);
            }
            uint64_t v951 = v368[7];
            uint64_t v952 = (void *)((char *)v364 + v951);
            uint64_t v953 = (void *)((char *)v367 + v951);
            uint64_t v954 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v953, 1, (uint64_t)v954))
            {
              uint64_t v955 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v952, v953, *(void *)(*(void *)(v955 - 8) + 64));
            }
            else
            {
              uint64_t v956 = v953[1];
              *uint64_t v952 = *v953;
              v952[1] = v956;
              uint64_t v957 = v953[3];
              v952[2] = v953[2];
              v952[3] = v957;
              uint64_t v958 = v953[5];
              v952[4] = v953[4];
              v952[5] = v958;
              uint64_t v959 = v953[7];
              v952[6] = v953[6];
              v952[7] = v959;
              uint64_t v960 = v953[9];
              v952[8] = v953[8];
              v952[9] = v960;
              uint64_t v961 = v953[11];
              v952[10] = v953[10];
              v952[11] = v961;
              uint64_t v962 = v953[13];
              v952[12] = v953[12];
              v952[13] = v962;
              uint64_t v963 = v953[15];
              v952[14] = v953[14];
              v952[15] = v963;
              *((unsigned char *)v952 + 128) = *((unsigned char *)v953 + 128);
              *(_WORD *)((char *)v952 + 129) = *(_WORD *)((char *)v953 + 129);
              uint64_t v964 = v953[18];
              v952[17] = v953[17];
              v952[18] = v964;
              uint64_t v965 = v953[20];
              v952[19] = v953[19];
              v952[20] = v965;
              uint64_t v966 = v953[22];
              v952[21] = v953[21];
              v952[22] = v966;
              uint64_t v2518 = v953[24];
              v952[23] = v953[23];
              v952[24] = v2518;
              uint64_t v967 = v953[26];
              v952[25] = v953[25];
              v952[26] = v967;
              uint64_t v968 = v953[28];
              v952[27] = v953[27];
              v952[28] = v968;
              uint64_t v2618 = v953[30];
              v952[29] = v953[29];
              v952[30] = v2618;
              uint64_t v969 = v953[32];
              v952[31] = v953[31];
              v952[32] = v969;
              uint64_t v970 = v953[34];
              v952[33] = v953[33];
              v952[34] = v970;
              uint64_t v971 = v953[36];
              uint64_t v972 = v953[35];
              *((unsigned char *)v952 + 296) = *((unsigned char *)v953 + 296);
              v952[35] = v972;
              v952[36] = v971;
              uint64_t v973 = v953[39];
              v952[38] = v953[38];
              v952[39] = v973;
              uint64_t v974 = v954[29];
              uint64_t v2640 = (char *)v952 + v974;
              uint64_t v975 = (char *)v953 + v974;
              uint64_t v976 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v975, 1, v976))
              {
                uint64_t v977 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2640, v975, *(void *)(*(void *)(v977 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v976 - 8) + 16))(v2640, v975, v976);
                __swift_storeEnumTagSinglePayload((uint64_t)v2640, 0, 1, v976);
              }
              uint64_t v546 = v2675;
              uint64_t v1013 = v954[30];
              uint64_t v1014 = (void *)((char *)v952 + v1013);
              uint64_t v1015 = (void *)((char *)v953 + v1013);
              uint64_t v1016 = v1015[1];
              *uint64_t v1014 = *v1015;
              v1014[1] = v1016;
              uint64_t v1017 = v954[31];
              uint64_t v1018 = (char *)v952 + v1017;
              uint64_t v1019 = (char *)v953 + v1017;
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1019, 1, v2675))
              {
                uint64_t v1020 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1018, v1019, *(void *)(*(void *)(v1020 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2675 - 8) + 16))(v1018, v1019, v2675);
                __swift_storeEnumTagSinglePayload((uint64_t)v1018, 0, 1, v2675);
              }
              uint64_t v1033 = v954[32];
              uint64_t v1034 = (char *)v952 + v1033;
              uint64_t v1035 = (char *)v953 + v1033;
              if (__swift_getEnumTagSinglePayload((uint64_t)v953 + v1033, 1, v2675))
              {
                uint64_t v1036 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1034, v1035, *(void *)(*(void *)(v1036 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2675 - 8) + 16))(v1034, v1035, v2675);
                __swift_storeEnumTagSinglePayload((uint64_t)v1034, 0, 1, v2675);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v952, 0, 1, (uint64_t)v954);
            }
            uint64_t v1068 = v368[8];
            uint64_t v1069 = (void *)((char *)v364 + v1068);
            uint64_t v1070 = (void *)((char *)v367 + v1068);
            uint64_t v1071 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1070, 1, v1071))
            {
              uint64_t v1072 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v1069, v1070, *(void *)(*(void *)(v1072 - 8) + 64));
            }
            else
            {
              uint64_t v1073 = v1070[1];
              *uint64_t v1069 = *v1070;
              v1069[1] = v1073;
              uint64_t v1074 = v1070[3];
              v1069[2] = v1070[2];
              v1069[3] = v1074;
              uint64_t v1075 = v1070[5];
              v1069[4] = v1070[4];
              v1069[5] = v1075;
              uint64_t v1076 = v1070[7];
              v1069[6] = v1070[6];
              v1069[7] = v1076;
              uint64_t v1077 = v1070[9];
              v1069[8] = v1070[8];
              v1069[9] = v1077;
              uint64_t v1078 = v1070[11];
              v1069[10] = v1070[10];
              v1069[11] = v1078;
              uint64_t v1079 = v1070[13];
              v1069[12] = v1070[12];
              v1069[13] = v1079;
              uint64_t v1080 = v1070[15];
              v1069[14] = v1070[14];
              v1069[15] = v1080;
              *((unsigned char *)v1069 + 128) = *((unsigned char *)v1070 + 128);
              *(_WORD *)((char *)v1069 + 129) = *(_WORD *)((char *)v1070 + 129);
              uint64_t v1081 = v1070[18];
              v1069[17] = v1070[17];
              v1069[18] = v1081;
              uint64_t v1082 = v1070[20];
              v1069[19] = v1070[19];
              v1069[20] = v1082;
              uint64_t v1083 = v1070[22];
              v1069[21] = v1070[21];
              v1069[22] = v1083;
              uint64_t v1084 = v1070[24];
              v1069[23] = v1070[23];
              v1069[24] = v1084;
              uint64_t v1085 = v1070[26];
              v1069[25] = v1070[25];
              v1069[26] = v1085;
              uint64_t v1086 = v1070[28];
              v1069[27] = v1070[27];
              v1069[28] = v1086;
              uint64_t v1087 = v1070[30];
              v1069[29] = v1070[29];
              v1069[30] = v1087;
              uint64_t v1088 = v1070[32];
              v1069[31] = v1070[31];
              v1069[32] = v1088;
              uint64_t v1090 = v1070[33];
              uint64_t v1089 = v1070[34];
              *((unsigned char *)v1069 + 280) = *((unsigned char *)v1070 + 280);
              v1069[33] = v1090;
              v1069[34] = v1089;
              uint64_t v1091 = v1070[37];
              v1069[36] = v1070[36];
              v1069[37] = v1091;
              uint64_t v1092 = *(int *)(v1071 + 108);
              uint64_t v2641 = (char *)v1069 + v1092;
              uint64_t v1093 = (char *)v1070 + v1092;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1093, 1, v546))
              {
                uint64_t v1094 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2641, v1093, *(void *)(*(void *)(v1094 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v546 - 8) + 16))(v2641, v1093, v546);
                __swift_storeEnumTagSinglePayload((uint64_t)v2641, 0, 1, v546);
              }
              uint64_t v1128 = v1071;
              uint64_t v1129 = *(int *)(v1071 + 112);
              uint64_t v1130 = (char *)v1069 + v1129;
              uint64_t v1131 = (char *)v1070 + v1129;
              Class v367 = v2656;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1070 + v1129, 1, v546))
              {
                uint64_t v1132 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1130, v1131, *(void *)(*(void *)(v1132 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v546 - 8) + 16))(v1130, v1131, v546);
                __swift_storeEnumTagSinglePayload((uint64_t)v1130, 0, 1, v546);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v1069, 0, 1, v1128);
            }
            uint64_t v1161 = v368[9];
            uint64_t v1162 = (void *)((char *)v364 + v1161);
            uint64_t v1163 = (void *)((char *)v367 + v1161);
            uint64_t v1164 = type metadata accessor for Party(0);
            uint64_t v2642 = v368;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1163, 1, v1164))
            {
              uint64_t v1165 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v1162, v1163, *(void *)(*(void *)(v1165 - 8) + 64));
            }
            else
            {
              uint64_t v1166 = v1163[1];
              *uint64_t v1162 = *v1163;
              v1162[1] = v1166;
              uint64_t v1167 = v1163[3];
              v1162[2] = v1163[2];
              v1162[3] = v1167;
              uint64_t v1168 = v1163[5];
              v1162[4] = v1163[4];
              v1162[5] = v1168;
              uint64_t v1169 = v1163[7];
              v1162[6] = v1163[6];
              v1162[7] = v1169;
              uint64_t v1170 = v1163[9];
              v1162[8] = v1163[8];
              v1162[9] = v1170;
              uint64_t v1171 = v1163[11];
              v1162[10] = v1163[10];
              v1162[11] = v1171;
              uint64_t v1172 = v1163[13];
              v1162[12] = v1163[12];
              v1162[13] = v1172;
              uint64_t v1173 = v1163[15];
              v1162[14] = v1163[14];
              v1162[15] = v1173;
              *((unsigned char *)v1162 + 128) = *((unsigned char *)v1163 + 128);
              *(_WORD *)((char *)v1162 + 129) = *(_WORD *)((char *)v1163 + 129);
              uint64_t v1174 = v1163[18];
              v1162[17] = v1163[17];
              v1162[18] = v1174;
              uint64_t v1175 = v1163[20];
              v1162[19] = v1163[19];
              v1162[20] = v1175;
              uint64_t v1176 = v1163[22];
              v1162[21] = v1163[21];
              v1162[22] = v1176;
              uint64_t v1177 = v1163[24];
              v1162[23] = v1163[23];
              v1162[24] = v1177;
              uint64_t v1178 = v1163[26];
              v1162[25] = v1163[25];
              v1162[26] = v1178;
              uint64_t v1179 = v1163[28];
              v1162[27] = v1163[27];
              v1162[28] = v1179;
              uint64_t v1180 = v1163[30];
              v1162[29] = v1163[29];
              v1162[30] = v1180;
              v1162[31] = v1163[31];
              uint64_t v1181 = *(int *)(v1164 + 96);
              uint64_t v2621 = (char *)v1162 + v1181;
              uint64_t v1182 = v546;
              uint64_t v1183 = (char *)v1163 + v1181;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v1184 = v1183;
              uint64_t v1185 = v1182;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1184, 1, v1182))
              {
                uint64_t v1186 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2621, v1184, *(void *)(*(void *)(v1186 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, const void *, uint64_t))(*(void *)(v1182 - 8) + 16))(v2621, v1184, v1182);
                __swift_storeEnumTagSinglePayload((uint64_t)v2621, 0, 1, v1182);
              }
              uint64_t v1215 = v1164;
              uint64_t v1216 = *(int *)(v1164 + 100);
              uint64_t v1217 = (char *)v1162 + v1216;
              uint64_t v1218 = (char *)v1163 + v1216;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1163 + v1216, 1, v1185))
              {
                uint64_t v1219 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1217, v1218, *(void *)(*(void *)(v1219 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1185 - 8) + 16))(v1217, v1218, v1185);
                __swift_storeEnumTagSinglePayload((uint64_t)v1217, 0, 1, v1185);
              }
              uint64_t v1230 = *(int *)(v1215 + 104);
              uint64_t v1231 = (char *)v1162 + v1230;
              uint64_t v1232 = (char *)v1163 + v1230;
              uint64_t v1233 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1232, 1, v1233))
              {
                uint64_t v1234 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1231, v1232, *(void *)(*(void *)(v1234 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1233 - 8) + 16))(v1231, v1232, v1233);
                __swift_storeEnumTagSinglePayload((uint64_t)v1231, 0, 1, v1233);
              }
              Class v367 = v2656;
              __swift_storeEnumTagSinglePayload((uint64_t)v1162, 0, 1, v1215);
            }
            uint64_t v1259 = v368[10];
            uint64_t v1260 = (void *)((char *)v364 + v1259);
            uint64_t v1261 = (void *)((char *)v367 + v1259);
            uint64_t v1262 = type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1261, 1, v1262))
            {
              uint64_t v1263 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1260, v1261, *(void *)(*(void *)(v1263 - 8) + 64));
            }
            else
            {
              uint64_t v1264 = v1261[1];
              *uint64_t v1260 = *v1261;
              v1260[1] = v1264;
              uint64_t v1265 = v1261[3];
              v1260[2] = v1261[2];
              v1260[3] = v1265;
              uint64_t v1266 = v1261[5];
              v1260[4] = v1261[4];
              v1260[5] = v1266;
              uint64_t v1267 = v1261[7];
              v1260[6] = v1261[6];
              v1260[7] = v1267;
              uint64_t v1268 = v1261[9];
              v1260[8] = v1261[8];
              v1260[9] = v1268;
              uint64_t v1269 = v1261[11];
              v1260[10] = v1261[10];
              v1260[11] = v1269;
              uint64_t v1270 = v1261[13];
              v1260[12] = v1261[12];
              v1260[13] = v1270;
              uint64_t v1271 = v1261[15];
              v1260[14] = v1261[14];
              v1260[15] = v1271;
              *((unsigned char *)v1260 + 128) = *((unsigned char *)v1261 + 128);
              *(_WORD *)((char *)v1260 + 129) = *(_WORD *)((char *)v1261 + 129);
              uint64_t v1272 = v1261[18];
              v1260[17] = v1261[17];
              v1260[18] = v1272;
              uint64_t v1273 = v1261[20];
              v1260[19] = v1261[19];
              v1260[20] = v1273;
              uint64_t v1274 = v1261[22];
              v1260[21] = v1261[21];
              v1260[22] = v1274;
              uint64_t v1275 = v1261[24];
              v1260[23] = v1261[23];
              v1260[24] = v1275;
              uint64_t v1276 = v1261[26];
              v1260[25] = v1261[25];
              v1260[26] = v1276;
              v1260[27] = v1261[27];
              uint64_t v2623 = v1262;
              uint64_t v1277 = *(int *)(v1262 + 88);
              uint64_t v2587 = (char *)v1260 + v1277;
              uint64_t v2528 = (char *)v1261 + v1277;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2528, 1, v2675))
              {
                uint64_t v1278 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2587, v2528, *(void *)(*(void *)(v1278 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2675 - 8) + 16))(v2587, v2528, v2675);
                __swift_storeEnumTagSinglePayload((uint64_t)v2587, 0, 1, v2675);
              }
              uint64_t v1303 = *(int *)(v1262 + 92);
              uint64_t v1304 = (char *)v1260 + v1303;
              uint64_t v1305 = (char *)v1261 + v1303;
              uint64_t v364 = v2669;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1261 + v1303, 1, v2675))
              {
                uint64_t v1306 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1304, v1305, *(void *)(*(void *)(v1306 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2675 - 8) + 16))(v1304, v1305, v2675);
                __swift_storeEnumTagSinglePayload((uint64_t)v1304, 0, 1, v2675);
              }
              uint64_t v1319 = *(int *)(v2623 + 96);
              uint64_t v1320 = (char *)v1260 + v1319;
              uint64_t v1321 = (char *)v1261 + v1319;
              *(void *)uint64_t v1320 = *(void *)v1321;
              v1320[8] = v1321[8];
              uint64_t v1322 = *(int *)(v2623 + 100);
              uint64_t v1323 = (char *)v1260 + v1322;
              uint64_t v1324 = (char *)v1261 + v1322;
              uint64_t v1325 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1324, 1, v1325))
              {
                uint64_t v1326 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1323, v1324, *(void *)(*(void *)(v1326 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1325 - 8) + 16))(v1323, v1324, v1325);
                __swift_storeEnumTagSinglePayload((uint64_t)v1323, 0, 1, v1325);
              }
              Class v367 = v2656;
              __swift_storeEnumTagSinglePayload((uint64_t)v1260, 0, 1, v2623);
            }
            uint64_t v1349 = v368[11];
            uint64_t v1350 = (void *)((char *)v364 + v1349);
            v1351 = (void *)((char *)v367 + v1349);
            uint64_t v1352 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1351, 1, (uint64_t)v1352))
            {
              uint64_t v1353 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1350, v1351, *(void *)(*(void *)(v1353 - 8) + 64));
            }
            else
            {
              uint64_t v1354 = v1351[1];
              void *v1350 = *v1351;
              v1350[1] = v1354;
              uint64_t v1355 = v1351[3];
              v1350[2] = v1351[2];
              v1350[3] = v1355;
              uint64_t v1356 = v1351[5];
              v1350[4] = v1351[4];
              v1350[5] = v1356;
              uint64_t v1357 = v1351[7];
              v1350[6] = v1351[6];
              v1350[7] = v1357;
              uint64_t v1358 = v1351[9];
              v1350[8] = v1351[8];
              v1350[9] = v1358;
              uint64_t v1359 = v1351[11];
              v1350[10] = v1351[10];
              v1350[11] = v1359;
              *((unsigned char *)v1350 + 96) = *((unsigned char *)v1351 + 96);
              uint64_t v1360 = v1351[14];
              v1350[13] = v1351[13];
              v1350[14] = v1360;
              uint64_t v1361 = v1352[13];
              uint64_t v2624 = (char *)v1350 + v1361;
              uint64_t v1362 = (char *)v1351 + v1361;
              v2555 = (void *)type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1362, 1, (uint64_t)v2555))
              {
                uint64_t v1363 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2624, v1362, *(void *)(*(void *)(v1363 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2555 - 1) + 16))(v2624, v1362, v2555);
                __swift_storeEnumTagSinglePayload((uint64_t)v2624, 0, 1, (uint64_t)v2555);
              }
              uint64_t v1383 = v1352[14];
              v1384 = (char *)v1350 + v1383;
              v1385 = (char *)v1351 + v1383;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1351 + v1383, 1, (uint64_t)v2555))
              {
                uint64_t v1386 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1384, v1385, *(void *)(*(void *)(v1386 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2555 - 1) + 16))(v1384, v1385, v2555);
                __swift_storeEnumTagSinglePayload((uint64_t)v1384, 0, 1, (uint64_t)v2555);
              }
              uint64_t v1464 = v1352[15];
              uint64_t v1465 = (void *)((char *)v1350 + v1464);
              v1466 = (void *)((char *)v1351 + v1464);
              uint64_t v1467 = v1466[1];
              void *v1465 = *v1466;
              v1465[1] = v1467;
              uint64_t v1468 = v1352[16];
              uint64_t v1469 = (void *)((char *)v1350 + v1468);
              v1470 = (void *)((char *)v1351 + v1468);
              uint64_t v1471 = v1470[1];
              void *v1469 = *v1470;
              v1469[1] = v1471;
              uint64_t v1472 = v1352[17];
              v1473 = (void *)((char *)v1350 + v1472);
              uint64_t v1474 = (void *)((char *)v1351 + v1472);
              uint64_t v1475 = v1474[1];
              void *v1473 = *v1474;
              v1473[1] = v1475;
              uint64_t v1476 = v1352[18];
              uint64_t v2625 = (char *)v1350 + v1476;
              v1477 = (char *)v1351 + v1476;
              uint64_t v1478 = type metadata accessor for DateComponents();
              uint64_t v1479 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1478 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1479(v2625, v1477, v1478);
              v1479((char *)v1350 + v1352[19], (char *)v1351 + v1352[19], v1478);
              uint64_t v1480 = v1352[20];
              v1481 = (void *)((char *)v1350 + v1480);
              uint64_t v1482 = (void *)((char *)v1351 + v1480);
              uint64_t v1483 = v1482[1];
              void *v1481 = *v1482;
              v1481[1] = v1483;
              uint64_t v1484 = v1352[21];
              uint64_t v1485 = (void *)((char *)v1350 + v1484);
              uint64_t v1486 = (void *)((char *)v1351 + v1484);
              uint64_t v1487 = v1486[1];
              *uint64_t v1485 = *v1486;
              v1485[1] = v1487;
              uint64_t v1488 = v1352[22];
              uint64_t v1489 = (void *)((char *)v1350 + v1488);
              uint64_t v1490 = (void *)((char *)v1351 + v1488);
              uint64_t v1491 = v1490[1];
              *uint64_t v1489 = *v1490;
              v1489[1] = v1491;
              uint64_t v1492 = v1352[23];
              uint64_t v1493 = (void *)((char *)v1350 + v1492);
              v1494 = (void *)((char *)v1351 + v1492);
              uint64_t v1495 = v1494[1];
              *uint64_t v1493 = *v1494;
              v1493[1] = v1495;
              uint64_t v1496 = v1352[24];
              v1497 = (void *)((char *)v1350 + v1496);
              v1498 = (void *)((char *)v1351 + v1496);
              uint64_t v2626 = v1498[1];
              void *v1497 = *v1498;
              v1497[1] = v2626;
              uint64_t v1499 = v1352[25];
              v1500 = (void *)((char *)v1350 + v1499);
              v1501 = (void *)((char *)v1351 + v1499);
              v2572 = (void *)v1501[1];
              void *v1500 = *v1501;
              v1500[1] = v2572;
              uint64_t v1502 = v1352[26];
              v1503 = (void *)((char *)v1350 + v1502);
              v1504 = (void *)((char *)v1351 + v1502);
              uint64_t v2557 = (void *)v1504[1];
              void *v1503 = *v1504;
              v1503[1] = v2557;
              uint64_t v1505 = v1352[27];
              v1506 = (void *)((char *)v1350 + v1505);
              v1507 = (void *)((char *)v1351 + v1505);
              uint64_t v2548 = v1507[1];
              void *v1506 = *v1507;
              v1506[1] = v2548;
              uint64_t v1508 = v1352[28];
              v1509 = (void *)((char *)v1350 + v1508);
              v1510 = (void *)((char *)v1351 + v1508);
              __dste = (void *)v1510[1];
              void *v1509 = *v1510;
              v1509[1] = __dste;
              uint64_t v1511 = v1352[29];
              v1512 = (void *)((char *)v1350 + v1511);
              v1513 = (void *)((char *)v1351 + v1511);
              uint64_t v2536 = v1513[1];
              void *v1512 = *v1513;
              v1512[1] = v2536;
              uint64_t v1514 = v1352[30];
              v1515 = (void *)((char *)v1350 + v1514);
              v1516 = (void *)((char *)v1351 + v1514);
              uint64_t v2533 = v1516[1];
              void *v1515 = *v1516;
              v1515[1] = v2533;
              uint64_t v1517 = v1352[31];
              v1518 = (void *)((char *)v1350 + v1517);
              v1519 = (void *)((char *)v1351 + v1517);
              uint64_t v2530 = v1519[1];
              void *v1518 = *v1519;
              v1518[1] = v2530;
              uint64_t v1520 = v1352[32];
              v1521 = (void *)((char *)v1350 + v1520);
              v1522 = (void *)((char *)v1351 + v1520);
              uint64_t v2522 = v1522[1];
              void *v1521 = *v1522;
              v1521[1] = v2522;
              *(void *)((char *)v1350 + v1352[33]) = *(void *)((char *)v1351 + v1352[33]);
              *(void *)((char *)v1350 + v1352[34]) = *(void *)((char *)v1351 + v1352[34]);
              uint64_t v1523 = v1352[35];
              v1524 = (void *)((char *)v1350 + v1523);
              v1525 = (void *)((char *)v1351 + v1523);
              uint64_t v1526 = v1525[1];
              void *v1524 = *v1525;
              v1524[1] = v1526;
              uint64_t v1527 = v1352[36];
              v1528 = (void *)((char *)v1350 + v1527);
              uint64_t v1529 = (void *)((char *)v1351 + v1527);
              uint64_t v1530 = v1529[1];
              void *v1528 = *v1529;
              v1528[1] = v1530;
              uint64_t v1531 = v1352[37];
              v1532 = (void *)((char *)v1350 + v1531);
              uint64_t v1533 = (void *)((char *)v1351 + v1531);
              uint64_t v1534 = v1533[1];
              void *v1532 = *v1533;
              v1532[1] = v1534;
              uint64_t v1535 = v1352[38];
              uint64_t v2590 = (char *)v1350 + v1535;
              v1536 = (char *)v1351 + v1535;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1536, 1, v2675))
              {
                uint64_t v1537 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2590, v1536, *(void *)(*(void *)(v1537 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2675 - 8) + 16))(v2590, v1536, v2675);
                __swift_storeEnumTagSinglePayload((uint64_t)v2590, 0, 1, v2675);
              }
              uint64_t v364 = v2669;
              uint64_t v1662 = v1352[39];
              v1663 = (void *)((char *)v1350 + v1662);
              uint64_t v1664 = (void *)((char *)v1351 + v1662);
              uint64_t v1665 = v1664[1];
              void *v1663 = *v1664;
              v1663[1] = v1665;
              uint64_t v1666 = v1352[40];
              v1667 = (void *)((char *)v1350 + v1666);
              uint64_t v1668 = (void *)((char *)v1351 + v1666);
              uint64_t v1669 = v1668[1];
              void *v1667 = *v1668;
              v1667[1] = v1669;
              uint64_t v1670 = v1352[41];
              v1671 = (char *)v1350 + v1670;
              uint64_t v1672 = (char *)v1351 + v1670;
              v1671[8] = v1672[8];
              *(void *)v1671 = *(void *)v1672;
              uint64_t v1673 = v1352[42];
              uint64_t v1674 = (void *)((char *)v1350 + v1673);
              v1675 = (void *)((char *)v1351 + v1673);
              uint64_t v1676 = v1675[1];
              void *v1674 = *v1675;
              v1674[1] = v1676;
              uint64_t v1677 = v1352[43];
              uint64_t v1678 = (char *)v1350 + v1677;
              uint64_t v1679 = (char *)v1351 + v1677;
              *(_OWORD *)uint64_t v1678 = *(_OWORD *)v1679;
              *(void *)(v1678 + 13) = *(void *)(v1679 + 13);
              uint64_t v1680 = v1352[44];
              uint64_t v1681 = (void *)((char *)v1350 + v1680);
              uint64_t v1682 = (void *)((char *)v1351 + v1680);
              uint64_t v1683 = v1682[1];
              *uint64_t v1681 = *v1682;
              v1681[1] = v1683;
              uint64_t v1684 = v1352[45];
              uint64_t v1685 = (void *)((char *)v1350 + v1684);
              uint64_t v1686 = (void *)((char *)v1351 + v1684);
              uint64_t v1687 = v1686[1];
              *uint64_t v1685 = *v1686;
              v1685[1] = v1687;
              uint64_t v1688 = v1352[46];
              uint64_t v1689 = (void *)((char *)v1350 + v1688);
              uint64_t v1690 = (void *)((char *)v1351 + v1688);
              uint64_t v1691 = v1690[1];
              *uint64_t v1689 = *v1690;
              v1689[1] = v1691;
              uint64_t v1692 = v1352[47];
              v1693 = (void *)((char *)v1350 + v1692);
              uint64_t v1694 = (void *)((char *)v1351 + v1692);
              uint64_t v1695 = v1694[1];
              void *v1693 = *v1694;
              v1693[1] = v1695;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1350, 0, 1, (uint64_t)v1352);
              id v368 = v2642;
              Class v367 = v2656;
            }
            uint64_t v1696 = v368[12];
            v1697 = (void *)((char *)v364 + v1696);
            uint64_t v1698 = (void *)((char *)v367 + v1696);
            uint64_t v1699 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1698, 1, (uint64_t)v1699))
            {
              uint64_t v1700 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1697, v1698, *(void *)(*(void *)(v1700 - 8) + 64));
            }
            else
            {
              uint64_t v1701 = v1698[1];
              void *v1697 = *v1698;
              v1697[1] = v1701;
              uint64_t v1702 = v1698[3];
              v1697[2] = v1698[2];
              v1697[3] = v1702;
              uint64_t v1703 = v1698[5];
              v1697[4] = v1698[4];
              v1697[5] = v1703;
              uint64_t v1704 = v1698[7];
              v1697[6] = v1698[6];
              v1697[7] = v1704;
              uint64_t v1705 = v1698[9];
              v1697[8] = v1698[8];
              v1697[9] = v1705;
              uint64_t v1706 = v1698[11];
              v1697[10] = v1698[10];
              v1697[11] = v1706;
              *((unsigned char *)v1697 + 96) = *((unsigned char *)v1698 + 96);
              uint64_t v1707 = v1698[14];
              v1697[13] = v1698[13];
              v1697[14] = v1707;
              uint64_t v1708 = v1698[16];
              v1697[15] = v1698[15];
              v1697[16] = v1708;
              uint64_t v1709 = v1699[14];
              uint64_t v2627 = (char *)v1697 + v1709;
              uint64_t v1710 = (char *)v1698 + v1709;
              uint64_t v2550 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1710, 1, v2550))
              {
                uint64_t v1711 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2627, v1710, *(void *)(*(void *)(v1711 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2550 - 8) + 16))(v2627, v1710, v2550);
                __swift_storeEnumTagSinglePayload((uint64_t)v2627, 0, 1, v2550);
              }
              uint64_t v1766 = v1699[15];
              v1767 = (char *)v1697 + v1766;
              v1768 = (char *)v1698 + v1766;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1698 + v1766, 1, v2550))
              {
                uint64_t v1769 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1767, v1768, *(void *)(*(void *)(v1769 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2550 - 8) + 16))(v1767, v1768, v2550);
                __swift_storeEnumTagSinglePayload((uint64_t)v1767, 0, 1, v2550);
              }
              uint64_t v1832 = v1699[16];
              uint64_t v1833 = (void *)((char *)v1697 + v1832);
              v1834 = (void *)((char *)v1698 + v1832);
              uint64_t v1835 = v1834[1];
              *uint64_t v1833 = *v1834;
              v1833[1] = v1835;
              uint64_t v1836 = v1699[17];
              uint64_t v1837 = (void *)((char *)v1697 + v1836);
              v1838 = (void *)((char *)v1698 + v1836);
              uint64_t v2629 = v1838[1];
              void *v1837 = *v1838;
              v1837[1] = v2629;
              uint64_t v1839 = v1699[18];
              uint64_t v1840 = (void *)((char *)v1697 + v1839);
              uint64_t v1841 = (void *)((char *)v1698 + v1839);
              uint64_t v2594 = (void *)v1841[1];
              *uint64_t v1840 = *v1841;
              v1840[1] = v2594;
              uint64_t v1842 = v1699[19];
              uint64_t v1843 = (void *)((char *)v1697 + v1842);
              uint64_t v1844 = (void *)((char *)v1698 + v1842);
              uint64_t v2576 = (void *)v1844[1];
              *uint64_t v1843 = *v1844;
              v1843[1] = v2576;
              uint64_t v1845 = v1699[20];
              v1846 = (void *)((char *)v1697 + v1845);
              uint64_t v1847 = (void *)((char *)v1698 + v1845);
              uint64_t v1848 = v1847[1];
              void *v1846 = *v1847;
              v1846[1] = v1848;
              *(void *)((char *)v1697 + v1699[21]) = *(void *)((char *)v1698 + v1699[21]);
              *(void *)((char *)v1697 + v1699[22]) = *(void *)((char *)v1698 + v1699[22]);
              uint64_t v1849 = v1699[23];
              v1850 = (char *)v1697 + v1849;
              uint64_t v1851 = (char *)v1698 + v1849;
              *(void *)v1850 = *(void *)v1851;
              v1850[8] = v1851[8];
              uint64_t v1852 = v1699[24];
              v1853 = (char *)v1697 + v1852;
              v1854 = (char *)v1698 + v1852;
              *(void *)v1853 = *(void *)v1854;
              v1853[8] = v1854[8];
              uint64_t v1855 = v1699[25];
              uint64_t v1856 = (void *)((char *)v1697 + v1855);
              uint64_t v1857 = (void *)((char *)v1698 + v1855);
              uint64_t v1858 = v1857[1];
              void *v1856 = *v1857;
              v1856[1] = v1858;
              uint64_t v1859 = v1699[26];
              uint64_t v1860 = (void *)((char *)v1697 + v1859);
              uint64_t v1861 = (void *)((char *)v1698 + v1859);
              uint64_t v1862 = v1861[1];
              *uint64_t v1860 = *v1861;
              v1860[1] = v1862;
              uint64_t v1863 = v1699[27];
              uint64_t v1864 = (void *)((char *)v1697 + v1863);
              uint64_t v1865 = (void *)((char *)v1698 + v1863);
              uint64_t v1866 = v1865[1];
              *uint64_t v1864 = *v1865;
              v1864[1] = v1866;
              uint64_t v1867 = v1699[28];
              uint64_t v1868 = (void *)((char *)v1697 + v1867);
              uint64_t v1869 = (void *)((char *)v1698 + v1867);
              uint64_t v1870 = v1869[1];
              *uint64_t v1868 = *v1869;
              v1868[1] = v1870;
              uint64_t v1871 = v1699[29];
              uint64_t v1872 = (char *)v1697 + v1871;
              uint64_t v1873 = (char *)v1698 + v1871;
              *(void *)uint64_t v1872 = *(void *)v1873;
              v1872[8] = v1873[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1697, 0, 1, (uint64_t)v1699);
              Class v367 = v2656;
              uint64_t v364 = v2669;
              id v368 = v2642;
            }
            uint64_t v1874 = v368[13];
            uint64_t v1875 = (void *)((char *)v364 + v1874);
            uint64_t v1876 = (void *)((char *)v367 + v1874);
            v1877 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1876, 1, (uint64_t)v1877))
            {
              uint64_t v1878 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1875, v1876, *(void *)(*(void *)(v1878 - 8) + 64));
            }
            else
            {
              uint64_t v1879 = v1876[1];
              *uint64_t v1875 = *v1876;
              v1875[1] = v1879;
              uint64_t v2630 = v1876[3];
              v1875[2] = v1876[2];
              v1875[3] = v2630;
              uint64_t v1880 = v1876[5];
              v1875[4] = v1876[4];
              v1875[5] = v1880;
              uint64_t v1881 = v1876[7];
              v1875[6] = v1876[6];
              v1875[7] = v1881;
              uint64_t v1882 = v1876[9];
              v1875[8] = v1876[8];
              v1875[9] = v1882;
              uint64_t v1883 = v1876[11];
              v1875[10] = v1876[10];
              v1875[11] = v1883;
              *((unsigned char *)v1875 + 96) = *((unsigned char *)v1876 + 96);
              uint64_t v1884 = v1876[14];
              v1875[13] = v1876[13];
              v1875[14] = v1884;
              uint64_t v1885 = v1876[16];
              v1875[15] = v1876[15];
              v1875[16] = v1885;
              uint64_t v1886 = v1877[14];
              uint64_t v2658 = (char *)v1875 + v1886;
              uint64_t v1887 = (char *)v1876 + v1886;
              uint64_t v2560 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1887, 1, (uint64_t)v2560))
              {
                uint64_t v1888 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2658, v1887, *(void *)(*(void *)(v1888 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2560 - 1) + 16))(v2658, v1887, v2560);
                __swift_storeEnumTagSinglePayload((uint64_t)v2658, 0, 1, (uint64_t)v2560);
              }
              uint64_t v2130 = v1877[15];
              v2131 = (void *)((char *)v1875 + v2130);
              uint64_t v2132 = (void *)((char *)v1876 + v2130);
              uint64_t v2133 = v2132[1];
              void *v2131 = *v2132;
              v2131[1] = v2133;
              uint64_t v2134 = v1877[16];
              v2135 = (void *)((char *)v1875 + v2134);
              uint64_t v2136 = (void *)((char *)v1876 + v2134);
              uint64_t v2137 = v2136[1];
              void *v2135 = *v2136;
              v2135[1] = v2137;
              uint64_t v2138 = v1877[17];
              v2139 = (void *)((char *)v1875 + v2138);
              uint64_t v2140 = (void *)((char *)v1876 + v2138);
              uint64_t v2141 = v2140[1];
              void *v2139 = *v2140;
              v2139[1] = v2141;
              uint64_t v2142 = v1877[18];
              uint64_t v2143 = (void *)((char *)v1875 + v2142);
              uint64_t v2144 = (void *)((char *)v1876 + v2142);
              uint64_t v2145 = v2144[1];
              void *v2143 = *v2144;
              v2143[1] = v2145;
              uint64_t v2146 = v1877[19];
              uint64_t v2147 = (void *)((char *)v1875 + v2146);
              uint64_t v2148 = (void *)((char *)v1876 + v2146);
              uint64_t v2149 = v2148[1];
              *uint64_t v2147 = *v2148;
              v2147[1] = v2149;
              *(void *)((char *)v1875 + v1877[20]) = *(void *)((char *)v1876 + v1877[20]);
              uint64_t v2150 = v1877[21];
              uint64_t v2151 = (void *)((char *)v1875 + v2150);
              v2152 = (void *)((char *)v1876 + v2150);
              uint64_t v2153 = v2152[1];
              *uint64_t v2151 = *v2152;
              v2151[1] = v2153;
              uint64_t v2154 = v1877[22];
              uint64_t v2155 = (void *)((char *)v1875 + v2154);
              v2156 = (void *)((char *)v1876 + v2154);
              uint64_t v2157 = v2156[1];
              void *v2155 = *v2156;
              v2155[1] = v2157;
              uint64_t v2158 = v1877[23];
              uint64_t v2159 = (void *)((char *)v1875 + v2158);
              v2160 = (void *)((char *)v1876 + v2158);
              uint64_t v2161 = v2160[1];
              void *v2159 = *v2160;
              v2159[1] = v2161;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1875, 0, 1, (uint64_t)v1877);
              uint64_t v364 = v2669;
              id v368 = v2642;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v364, 0, 1, (uint64_t)v368);
            uint64_t v17 = (uint64_t)v2713;
            uint64_t v358 = v2596;
          }
          uint64_t v2162 = v2688[18];
          uint64_t v2163 = (void *)(v17 + v2162);
          v2164 = (void *)((char *)v358 + v2162);
          uint64_t v2165 = (int *)type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2164, 1, (uint64_t)v2165))
          {
            uint64_t v2166 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v2163, v2164, *(void *)(*(void *)(v2166 - 8) + 64));
          }
          else
          {
            uint64_t v2167 = v2164[1];
            void *v2163 = *v2164;
            v2163[1] = v2167;
            uint64_t v2168 = v2164[3];
            v2163[2] = v2164[2];
            v2163[3] = v2168;
            uint64_t v2169 = v2164[5];
            v2163[4] = v2164[4];
            v2163[5] = v2169;
            uint64_t v2170 = v2164[7];
            v2163[6] = v2164[6];
            v2163[7] = v2170;
            uint64_t v2171 = v2164[9];
            v2163[8] = v2164[8];
            v2163[9] = v2171;
            uint64_t v2172 = v2164[11];
            v2163[10] = v2164[10];
            v2163[11] = v2172;
            uint64_t v2173 = v2165[10];
            uint64_t v2174 = (char *)v2163 + v2173;
            uint64_t v2175 = (char *)v2164 + v2173;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2175, 1, v2675))
            {
              uint64_t v2176 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2174, v2175, *(void *)(*(void *)(v2176 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2675 - 8) + 16))(v2174, v2175, v2675);
              __swift_storeEnumTagSinglePayload((uint64_t)v2174, 0, 1, v2675);
            }
            uint64_t v2177 = v2165[11];
            uint64_t v2178 = (char *)v2163 + v2177;
            uint64_t v2179 = (char *)v2164 + v2177;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2164 + v2177, 1, v2675))
            {
              uint64_t v2180 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2178, v2179, *(void *)(*(void *)(v2180 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2675 - 8) + 16))(v2178, v2179, v2675);
              __swift_storeEnumTagSinglePayload((uint64_t)v2178, 0, 1, v2675);
            }
            uint64_t v2181 = v2165[12];
            uint64_t v2182 = (void *)((char *)v2163 + v2181);
            uint64_t v2183 = (void *)((char *)v2164 + v2181);
            uint64_t v2184 = v2183[1];
            *uint64_t v2182 = *v2183;
            v2182[1] = v2184;
            uint64_t v2185 = v2165[13];
            uint64_t v2186 = (void *)((char *)v2163 + v2185);
            uint64_t v2187 = (void *)((char *)v2164 + v2185);
            uint64_t v2188 = v2187[1];
            *uint64_t v2186 = *v2187;
            v2186[1] = v2188;
            uint64_t v2189 = v2165[14];
            uint64_t v2190 = (void *)((char *)v2163 + v2189);
            uint64_t v2191 = (void *)((char *)v2164 + v2189);
            uint64_t v2192 = v2191[1];
            *uint64_t v2190 = *v2191;
            v2190[1] = v2192;
            uint64_t v2193 = v2165[15];
            uint64_t v2194 = (char *)v2163 + v2193;
            uint64_t v2195 = (char *)v2164 + v2193;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2195, 1, v2675))
            {
              uint64_t v2196 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2194, v2195, *(void *)(*(void *)(v2196 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2675 - 8) + 16))(v2194, v2195, v2675);
              __swift_storeEnumTagSinglePayload((uint64_t)v2194, 0, 1, v2675);
            }
            uint64_t v2197 = v2165[16];
            uint64_t v2198 = (void *)((char *)v2163 + v2197);
            uint64_t v2199 = (void *)((char *)v2164 + v2197);
            uint64_t v2200 = v2199[1];
            *uint64_t v2198 = *v2199;
            v2198[1] = v2200;
            uint64_t v2201 = v2165[17];
            uint64_t v2202 = (void *)((char *)v2163 + v2201);
            uint64_t v2203 = (void *)((char *)v2164 + v2201);
            uint64_t v2204 = v2203[1];
            *uint64_t v2202 = *v2203;
            v2202[1] = v2204;
            uint64_t v2205 = v2165[18];
            uint64_t v2206 = (void *)((char *)v2163 + v2205);
            uint64_t v2207 = (void *)((char *)v2164 + v2205);
            uint64_t v2208 = v2207[1];
            *uint64_t v2206 = *v2207;
            v2206[1] = v2208;
            uint64_t v2209 = v2165[19];
            uint64_t v2210 = (void *)((char *)v2163 + v2209);
            uint64_t v2211 = (void *)((char *)v2164 + v2209);
            uint64_t v2212 = v2211[1];
            *uint64_t v2210 = *v2211;
            v2210[1] = v2212;
            uint64_t v2213 = v2165[20];
            uint64_t v2214 = (void *)((char *)v2163 + v2213);
            uint64_t v2215 = (void *)((char *)v2164 + v2213);
            uint64_t v2216 = v2215[1];
            *uint64_t v2214 = *v2215;
            v2214[1] = v2216;
            uint64_t v2217 = v2165[21];
            uint64_t v2218 = (void *)((char *)v2163 + v2217);
            uint64_t v2219 = (void *)((char *)v2164 + v2217);
            uint64_t v2220 = v2219[1];
            *uint64_t v2218 = *v2219;
            v2218[1] = v2220;
            uint64_t v2221 = v2165[22];
            uint64_t v2222 = (void *)((char *)v2163 + v2221);
            uint64_t v2223 = (void *)((char *)v2164 + v2221);
            uint64_t v2224 = v2223[1];
            *uint64_t v2222 = *v2223;
            v2222[1] = v2224;
            uint64_t v2225 = v2165[23];
            uint64_t v2226 = (void *)((char *)v2163 + v2225);
            uint64_t v2227 = (void *)((char *)v2164 + v2225);
            uint64_t v2228 = v2227[1];
            *uint64_t v2226 = *v2227;
            v2226[1] = v2228;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2163, 0, 1, (uint64_t)v2165);
          }
          uint64_t v2229 = v2688[19];
          uint64_t v2230 = (void *)((char *)v2713 + v2229);
          v2231 = (void *)((char *)v2596 + v2229);
          v2232 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2231, 1, (uint64_t)v2232))
          {
            uint64_t v2233 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v2230, v2231, *(void *)(*(void *)(v2233 - 8) + 64));
          }
          else
          {
            uint64_t v2234 = v2231[1];
            *uint64_t v2230 = *v2231;
            v2230[1] = v2234;
            uint64_t v2235 = v2231[3];
            v2230[2] = v2231[2];
            v2230[3] = v2235;
            uint64_t v2236 = v2231[5];
            v2230[4] = v2231[4];
            v2230[5] = v2236;
            uint64_t v2237 = v2231[7];
            v2230[6] = v2231[6];
            v2230[7] = v2237;
            uint64_t v2238 = v2231[9];
            v2230[8] = v2231[8];
            v2230[9] = v2238;
            uint64_t v2239 = v2231[11];
            v2230[10] = v2231[10];
            v2230[11] = v2239;
            uint64_t v2240 = v2232[11];
            uint64_t v2671 = (char *)v2230 + v2240;
            uint64_t v2241 = (char *)v2231 + v2240;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2241, 1, v2675))
            {
              uint64_t v2242 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2671, v2241, *(void *)(*(void *)(v2242 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2675 - 8) + 16))(v2671, v2241, v2675);
              __swift_storeEnumTagSinglePayload((uint64_t)v2671, 0, 1, v2675);
            }
            uint64_t v2243 = v2232[12];
            uint64_t v2244 = (void *)((char *)v2230 + v2243);
            uint64_t v2245 = (void *)((char *)v2231 + v2243);
            uint64_t v2246 = v2245[1];
            *uint64_t v2244 = *v2245;
            v2244[1] = v2246;
            *(void *)((char *)v2230 + v2232[13]) = *(void *)((char *)v2231 + v2232[13]);
            uint64_t v2247 = v2232[14];
            uint64_t v2248 = (char *)v2230 + v2247;
            uint64_t v2249 = (char *)v2231 + v2247;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2249, 1, v2675))
            {
              uint64_t v2250 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2248, v2249, *(void *)(*(void *)(v2250 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2675 - 8) + 16))(v2248, v2249, v2675);
              __swift_storeEnumTagSinglePayload((uint64_t)v2248, 0, 1, v2675);
            }
            *(void *)((char *)v2230 + v2232[15]) = *(void *)((char *)v2231 + v2232[15]);
            *(void *)((char *)v2230 + v2232[16]) = *(void *)((char *)v2231 + v2232[16]);
            uint64_t v2251 = v2232[17];
            uint64_t v2252 = (void *)((char *)v2230 + v2251);
            uint64_t v2253 = (void *)((char *)v2231 + v2251);
            uint64_t v2254 = v2253[1];
            *uint64_t v2252 = *v2253;
            v2252[1] = v2254;
            *(void *)((char *)v2230 + v2232[18]) = *(void *)((char *)v2231 + v2232[18]);
            *(void *)((char *)v2230 + v2232[19]) = *(void *)((char *)v2231 + v2232[19]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2230, 0, 1, (uint64_t)v2232);
          }
          uint64_t v2255 = v2688[20];
          uint64_t v2256 = (void *)((char *)v2713 + v2255);
          uint64_t v2257 = (void *)((char *)v2596 + v2255);
          uint64_t v2258 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2257, 1, (uint64_t)v2258))
          {
            uint64_t v2259 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v2256, v2257, *(void *)(*(void *)(v2259 - 8) + 64));
          }
          else
          {
            uint64_t v2260 = v2257[1];
            *uint64_t v2256 = *v2257;
            v2256[1] = v2260;
            uint64_t v2261 = v2257[3];
            v2256[2] = v2257[2];
            v2256[3] = v2261;
            uint64_t v2262 = v2257[5];
            v2256[4] = v2257[4];
            v2256[5] = v2262;
            uint64_t v2263 = v2257[7];
            v2256[6] = v2257[6];
            v2256[7] = v2263;
            uint64_t v2264 = v2258[8];
            v2265 = (char *)v2256 + v2264;
            uint64_t v2266 = (char *)v2257 + v2264;
            uint64_t v2267 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2266, 1, v2267))
            {
              uint64_t v2268 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2265, v2266, *(void *)(*(void *)(v2268 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2267 - 8) + 16))(v2265, v2266, v2267);
              __swift_storeEnumTagSinglePayload((uint64_t)v2265, 0, 1, v2267);
            }
            uint64_t v2269 = v2258[9];
            uint64_t v2270 = (void *)((char *)v2256 + v2269);
            uint64_t v2271 = (void *)((char *)v2257 + v2269);
            uint64_t v2272 = v2271[1];
            *uint64_t v2270 = *v2271;
            v2270[1] = v2272;
            uint64_t v2273 = v2258[10];
            uint64_t v2274 = (void *)((char *)v2256 + v2273);
            uint64_t v2275 = (void *)((char *)v2257 + v2273);
            uint64_t v2276 = v2275[1];
            *uint64_t v2274 = *v2275;
            v2274[1] = v2276;
            uint64_t v2277 = v2258[11];
            uint64_t v2278 = (void *)((char *)v2256 + v2277);
            uint64_t v2279 = (void *)((char *)v2257 + v2277);
            uint64_t v2280 = v2279[1];
            *uint64_t v2278 = *v2279;
            v2278[1] = v2280;
            uint64_t v2281 = v2258[12];
            uint64_t v2282 = (char *)v2256 + v2281;
            uint64_t v2283 = (char *)v2257 + v2281;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2283, 1, v2675))
            {
              uint64_t v2284 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2282, v2283, *(void *)(*(void *)(v2284 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2675 - 8) + 16))(v2282, v2283, v2675);
              __swift_storeEnumTagSinglePayload((uint64_t)v2282, 0, 1, v2675);
            }
            uint64_t v2285 = v2258[13];
            uint64_t v2286 = (char *)v2256 + v2285;
            uint64_t v2287 = (char *)v2257 + v2285;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2257 + v2285, 1, v2675))
            {
              uint64_t v2288 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2286, v2287, *(void *)(*(void *)(v2288 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2675 - 8) + 16))(v2286, v2287, v2675);
              __swift_storeEnumTagSinglePayload((uint64_t)v2286, 0, 1, v2675);
            }
            uint64_t v2289 = v2258[14];
            uint64_t v2290 = (char *)v2256 + v2289;
            uint64_t v2291 = (char *)v2257 + v2289;
            *(void *)uint64_t v2290 = *(void *)v2291;
            v2290[8] = v2291[8];
            uint64_t v2292 = v2258[15];
            v2293 = (void *)((char *)v2256 + v2292);
            uint64_t v2294 = (void *)((char *)v2257 + v2292);
            uint64_t v2295 = v2294[1];
            void *v2293 = *v2294;
            v2293[1] = v2295;
            uint64_t v2296 = v2258[16];
            v2297 = (void *)((char *)v2256 + v2296);
            uint64_t v2298 = (void *)((char *)v2257 + v2296);
            uint64_t v2299 = v2298[1];
            void *v2297 = *v2298;
            v2297[1] = v2299;
            uint64_t v2300 = v2258[17];
            uint64_t v2301 = (void *)((char *)v2256 + v2300);
            uint64_t v2302 = (void *)((char *)v2257 + v2300);
            uint64_t v2303 = v2302[1];
            *uint64_t v2301 = *v2302;
            v2301[1] = v2303;
            uint64_t v2304 = v2258[18];
            uint64_t v2305 = (void *)((char *)v2256 + v2304);
            uint64_t v2306 = (void *)((char *)v2257 + v2304);
            uint64_t v2307 = v2306[1];
            *uint64_t v2305 = *v2306;
            v2305[1] = v2307;
            uint64_t v2308 = v2258[19];
            uint64_t v2309 = (void *)((char *)v2256 + v2308);
            uint64_t v2310 = (void *)((char *)v2257 + v2308);
            uint64_t v2311 = v2310[1];
            *uint64_t v2309 = *v2310;
            v2309[1] = v2311;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2256, 0, 1, (uint64_t)v2258);
          }
          uint64_t v2129 = v2688[21];
          goto LABEL_544;
        case 4u:
          uint64_t v2701 = v13;
          uint64_t v69 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v69;
          uint64_t v70 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v70;
          uint64_t v71 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v71;
          uint64_t v72 = v12[7];
          v2713[6] = v12[6];
          v2713[7] = v72;
          uint64_t v73 = type metadata accessor for NoteDocument(0);
          uint64_t v74 = *(int *)(v73 + 32);
          uint64_t v75 = (char *)v2713 + v74;
          uint64_t v76 = (char *)v14 + v74;
          uint64_t v77 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v76, 1, v77))
          {
            uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
            __swift_storeEnumTagSinglePayload((uint64_t)v75, 0, 1, v77);
          }
          uint64_t v370 = *(int *)(v73 + 36);
          long long v371 = (char *)v2713 + v370;
          Swift::String v372 = (char *)v14 + v370;
          uint64_t v13 = v2701;
          if (!__swift_getEnumTagSinglePayload((uint64_t)v14 + v370, 1, v77)) {
            goto LABEL_150;
          }
          goto LABEL_149;
        case 5u:
          uint64_t v79 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v79;
          uint64_t v80 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v80;
          uint64_t v81 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v81;
          uint64_t v82 = (int *)type metadata accessor for Reminder(0);
          uint64_t v83 = v82[7];
          uint64_t v84 = (char *)v2713 + v83;
          uint64_t v85 = (char *)v12 + v83;
          uint64_t v86 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v85, 1, v86))
          {
            uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
            __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v86);
          }
          uint64_t v373 = v82[8];
          uint64_t v374 = (char *)v2713 + v373;
          v375 = (char *)v14 + v373;
          if (__swift_getEnumTagSinglePayload((uint64_t)v14 + v373, 1, v86))
          {
            uint64_t v376 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v374, v375, *(void *)(*(void *)(v376 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v374, v375, v86);
            __swift_storeEnumTagSinglePayload((uint64_t)v374, 0, 1, v86);
          }
          *((unsigned char *)v2713 + v82[9]) = *((unsigned char *)v14 + v82[9]);
          uint64_t v547 = v82[10];
          long long v548 = (void *)((char *)v2713 + v547);
          long long v549 = (void *)((char *)v14 + v547);
          uint64_t v550 = v549[1];
          void *v548 = *v549;
          v548[1] = v550;
          uint64_t v551 = v82[11];
          v552 = (void *)((char *)v2713 + v551);
          uint64_t v553 = (void *)((char *)v14 + v551);
          uint64_t v554 = v553[1];
          void *v552 = *v553;
          v552[1] = v554;
          uint64_t v555 = v82[12];
          uint64_t v386 = (char *)v2713 + v555;
          uint64_t v387 = (char *)v14 + v555;
          uint64_t v388 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (!__swift_getEnumTagSinglePayload((uint64_t)v387, 1, v388)) {
            goto LABEL_141;
          }
          goto LABEL_77;
        case 6u:
          uint64_t v88 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v88;
          uint64_t v89 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v89;
          uint64_t v90 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v90;
          uint64_t v91 = v12[7];
          v2713[6] = v12[6];
          v2713[7] = v91;
          uint64_t v92 = (int *)type metadata accessor for PhoneHistory(0);
          uint64_t v93 = v92[10];
          uint64_t v94 = (char *)v2713 + v93;
          v2597 = v12;
          unint64_t v95 = (char *)v12 + v93;
          uint64_t v96 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v96))
          {
            uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16))(v94, v95, v96);
            __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v96);
          }
          uint64_t v377 = v92[11];
          uint64_t v17 = (uint64_t)v2713;
          Class v378 = (void *)((char *)v2713 + v377);
          uint64_t v14 = v2597;
          id v379 = (void *)((char *)v2597 + v377);
          uint64_t v380 = v379[1];
          *Class v378 = *v379;
          v378[1] = v380;
          uint64_t v381 = v92[12];
          long long v382 = (void *)((char *)v2713 + v381);
          Swift::String v383 = (void *)((char *)v2597 + v381);
          uint64_t v384 = v383[1];
          *long long v382 = *v383;
          v382[1] = v384;
          uint64_t v385 = v92[13];
          uint64_t v386 = (char *)v2713 + v385;
          uint64_t v387 = (char *)v2597 + v385;
          uint64_t v388 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v387, 1, v388))
          {
LABEL_77:
            uint64_t v389 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v386, v387, *(void *)(*(void *)(v389 - 8) + 64));
          }
          else
          {
LABEL_141:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v388 - 8) + 16))(v386, v387, v388);
            __swift_storeEnumTagSinglePayload((uint64_t)v386, 0, 1, v388);
          }
          goto LABEL_169;
        case 7u:
          uint64_t v98 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v98;
          uint64_t v99 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v99;
          uint64_t v100 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v100;
          uint64_t v101 = type metadata accessor for VoicemailTranscript(0);
          uint64_t v102 = *(int *)(v101 + 28);
          uint64_t v103 = (char *)v2713 + v102;
          uint64_t v104 = (char *)v12 + v102;
          uint64_t v105 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v104, 1, v105))
          {
            uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v103, v104, *(void *)(*(void *)(v106 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16))(v103, v104, v105);
            __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, v105);
          }
          uint64_t v390 = *(int *)(v101 + 32);
          long long v371 = (char *)v2713 + v390;
          Swift::String v372 = (char *)v14 + v390;
          uint64_t v391 = type metadata accessor for URL();
          int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v372, 1, v391);
          goto LABEL_84;
        case 8u:
          uint64_t v107 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v107;
          uint64_t v108 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v108;
          uint64_t v109 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v109;
          uint64_t v110 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
          unint64_t v111 = (char *)v2713 + v110;
          uint64_t v112 = (char *)v12 + v110;
          uint64_t v113 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v112, 1, v113))
          {
            uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v111, v112, *(void *)(*(void *)(v114 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16))(v111, v112, v113);
            __swift_storeEnumTagSinglePayload((uint64_t)v111, 0, 1, v113);
          }
          uint64_t v16 = a1;
          goto LABEL_549;
        case 9u:
          uint64_t v115 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v115;
          uint64_t v116 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v116;
          uint64_t v117 = (int *)type metadata accessor for VoiceMemo(0);
          uint64_t v118 = v117[6];
          uint64_t v119 = (char *)v2713 + v118;
          uint64_t v120 = (char *)v12 + v118;
          uint64_t v121 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v120, 1, v121))
          {
            uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v119, v120, *(void *)(*(void *)(v122 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16))(v119, v120, v121);
            __swift_storeEnumTagSinglePayload((uint64_t)v119, 0, 1, v121);
          }
          uint64_t v393 = v117[7];
          unint64_t v394 = (char *)v2713 + v393;
          unint64_t v395 = (char *)v14 + v393;
          *(void *)unint64_t v394 = *(void *)v395;
          v394[8] = v395[8];
          uint64_t v396 = v117[8];
          long long v371 = (char *)v2713 + v396;
          Swift::String v372 = (char *)v14 + v396;
          uint64_t v391 = type metadata accessor for URL();
          int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v372, 1, v391);
LABEL_84:
          if (!EnumTagSinglePayload) {
            goto LABEL_159;
          }
          goto LABEL_157;
        case 0xAu:
          uint64_t v123 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v123;
          uint64_t v124 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v124;
          uint64_t v125 = (int *)type metadata accessor for Safari(0);
          uint64_t v126 = v125[6];
          Swift::String v127 = (char *)v2713 + v126;
          uint64_t v128 = (char *)v12 + v126;
          uint64_t v77 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v128, 1, v77))
          {
            uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v127, v128, *(void *)(*(void *)(v129 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v127, v128, v77);
            __swift_storeEnumTagSinglePayload((uint64_t)v127, 0, 1, v77);
          }
          uint64_t v397 = v125[7];
          unint64_t v398 = (void *)((char *)v2713 + v397);
          uint64_t v399 = (void *)((char *)v14 + v397);
          uint64_t v400 = v399[1];
          void *v398 = *v399;
          v398[1] = v400;
          uint64_t v401 = v125[8];
          v402 = (void *)((char *)v2713 + v401);
          uint64_t v403 = (void *)((char *)v14 + v401);
          uint64_t v404 = v403[1];
          void *v402 = *v403;
          v402[1] = v404;
          uint64_t v405 = v125[9];
          long long v371 = (char *)v2713 + v405;
          Swift::String v372 = (char *)v14 + v405;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (!__swift_getEnumTagSinglePayload((uint64_t)v372, 1, v77)) {
            goto LABEL_150;
          }
          goto LABEL_157;
        case 0xBu:
          uint64_t v130 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v130;
          uint64_t v131 = (void *)v12[2];
          v2713[2] = v131;
          swift_bridgeObjectRetain();
          id v132 = v131;
          goto LABEL_161;
        case 0xCu:
          uint64_t v133 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v133;
          uint64_t v134 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v134;
          uint64_t v135 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v135;
          uint64_t v136 = (int *)type metadata accessor for WalletTransaction(0);
          uint64_t v137 = v136[7];
          uint64_t v138 = (char *)v2713 + v137;
          char v139 = (char *)v12 + v137;
          uint64_t v140 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v140))
          {
            uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v138, v139, *(void *)(*(void *)(v141 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v140);
          }
          uint64_t v406 = v136[8];
          long long v407 = (void *)((char *)v2713 + v406);
          long long v408 = (void *)((char *)v14 + v406);
          uint64_t v409 = v408[1];
          void *v407 = *v408;
          v407[1] = v409;
          uint64_t v410 = v136[9];
          uint64_t v411 = (void *)((char *)v2713 + v410);
          uint64_t v412 = (void *)((char *)v14 + v410);
          uint64_t v413 = v412[1];
          void *v411 = *v412;
          v411[1] = v413;
          uint64_t v414 = v136[10];
          uint64_t v415 = (void *)((char *)v2713 + v414);
          uint64_t v416 = (void *)((char *)v14 + v414);
          uint64_t v417 = v416[1];
          void *v415 = *v416;
          v415[1] = v417;
          uint64_t v418 = v136[11];
          uint64_t v419 = (char *)v2713 + v418;
          uint64_t v420 = (char *)v14 + v418;
          *(_OWORD *)uint64_t v419 = *(_OWORD *)v420;
          *(void *)(v419 + 13) = *(void *)(v420 + 13);
          uint64_t v421 = v136[12];
          unint64_t v422 = (void *)((char *)v2713 + v421);
          long long v423 = (void *)((char *)v14 + v421);
          uint64_t v424 = v423[1];
          void *v422 = *v423;
          v422[1] = v424;
          goto LABEL_91;
        case 0xDu:
          uint64_t v142 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v142;
          uint64_t v143 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v143;
          uint64_t v144 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v144;
          uint64_t v145 = (int *)type metadata accessor for WalletPass(0);
          uint64_t v146 = v145[7];
          uint64_t v147 = (char *)v2713 + v146;
          uint64_t v148 = (char *)v12 + v146;
          uint64_t v149 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v148, 1, v149))
          {
            uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v147, v148, *(void *)(*(void *)(v150 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16))(v147, v148, v149);
            __swift_storeEnumTagSinglePayload((uint64_t)v147, 0, 1, v149);
          }
          uint64_t v425 = v145[8];
          uint64_t v426 = (void *)((char *)v2713 + v425);
          unint64_t v427 = (void *)((char *)v14 + v425);
          uint64_t v428 = v427[1];
          void *v426 = *v427;
          v426[1] = v428;
          *(void *)((char *)v2713 + v145[9]) = *(void *)((char *)v14 + v145[9]);
          swift_bridgeObjectRetain();
          goto LABEL_94;
        case 0xEu:
          uint64_t v151 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v151;
          uint64_t v152 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v152;
          uint64_t v153 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v153;
          uint64_t v154 = v12[7];
          v2713[6] = v12[6];
          v2713[7] = v154;
          uint64_t v155 = v12[9];
          v2713[8] = v12[8];
          v2713[9] = v155;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_94;
        case 0xFu:
          uint64_t v2702 = v13;
          uint64_t v156 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v156;
          uint64_t v157 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v157;
          uint64_t v158 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v158;
          uint64_t v2689 = v12[7];
          v2713[6] = v12[6];
          v2713[7] = v2689;
          uint64_t v159 = v12[9];
          v2713[8] = v12[8];
          v2713[9] = v159;
          uint64_t v160 = v12[11];
          v2713[10] = v12[10];
          v2713[11] = v160;
          *((unsigned char *)v2713 + 96) = *((unsigned char *)v12 + 96);
          uint64_t v161 = v12[14];
          v2713[13] = v12[13];
          v2713[14] = v161;
          uint64_t v162 = (int *)type metadata accessor for FlightReservation(0);
          uint64_t v163 = v162[13];
          uint64_t v2676 = (char *)v2713 + v163;
          uint64_t v2598 = (char *)v12;
          id v164 = (char *)v12 + v163;
          uint64_t v165 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v164, 1, v165))
          {
            uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2676, v164, *(void *)(*(void *)(v166 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 16))(v2676, v164, v165);
            __swift_storeEnumTagSinglePayload((uint64_t)v2676, 0, 1, v165);
          }
          uint64_t v429 = v162[14];
          uint64_t v430 = (char *)v2713 + v429;
          uint64_t v431 = (char *)v12 + v429;
          if (__swift_getEnumTagSinglePayload((uint64_t)&v2598[v429], 1, v165))
          {
            uint64_t v432 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v430, v431, *(void *)(*(void *)(v432 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 16))(v430, v431, v165);
            __swift_storeEnumTagSinglePayload((uint64_t)v430, 0, 1, v165);
          }
          uint64_t v556 = v162[15];
          uint64_t v557 = (void *)((char *)v2713 + v556);
          uint64_t v558 = &v2598[v556];
          uint64_t v559 = v558[1];
          void *v557 = *v558;
          v557[1] = v559;
          uint64_t v560 = v162[16];
          long long v561 = (void *)((char *)v2713 + v560);
          long long v562 = &v2598[v560];
          uint64_t v563 = v562[1];
          void *v561 = *v562;
          v561[1] = v563;
          uint64_t v564 = v162[17];
          long long v565 = (void *)((char *)v2713 + v564);
          long long v566 = &v2598[v564];
          uint64_t v567 = v566[1];
          *long long v565 = *v566;
          v565[1] = v567;
          uint64_t v568 = v162[18];
          v2696 = (char *)v2713 + v568;
          v569 = &v2598[v568];
          uint64_t v570 = type metadata accessor for DateComponents();
          uint64_t v571 = *(void (**)(char *, char *, uint64_t))(*(void *)(v570 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v571(v2696, v569, v570);
          v571((char *)v2713 + v162[19], &v2598[v162[19]], v570);
          uint64_t v572 = v162[20];
          v573 = (void *)((char *)v2713 + v572);
          uint64_t v574 = &v2598[v572];
          uint64_t v575 = v574[1];
          void *v573 = *v574;
          v573[1] = v575;
          uint64_t v576 = v162[21];
          long long v577 = (void *)((char *)v2713 + v576);
          long long v578 = &v2598[v576];
          uint64_t v579 = v578[1];
          *long long v577 = *v578;
          v577[1] = v579;
          uint64_t v580 = v162[22];
          long long v581 = (void *)((char *)v2713 + v580);
          long long v582 = &v2598[v580];
          uint64_t v2697 = v582[1];
          *long long v581 = *v582;
          v581[1] = v2697;
          uint64_t v583 = v162[23];
          uint64_t v584 = (void *)((char *)v2713 + v583);
          uint64_t v585 = &v2598[v583];
          uint64_t v2684 = v585[1];
          void *v584 = *v585;
          v584[1] = v2684;
          uint64_t v586 = v162[24];
          uint64_t v587 = (void *)((char *)v2713 + v586);
          uint64_t v588 = &v2598[v586];
          uint64_t v2670 = v588[1];
          void *v587 = *v588;
          v587[1] = v2670;
          uint64_t v589 = v162[25];
          uint64_t v590 = (void *)((char *)v2713 + v589);
          uint64_t v591 = &v2598[v589];
          uint64_t v2653 = v591[1];
          *uint64_t v590 = *v591;
          v590[1] = v2653;
          uint64_t v592 = v162[26];
          uint64_t v593 = (void *)((char *)v2713 + v592);
          uint64_t v594 = &v2598[v592];
          uint64_t v2636 = v594[1];
          *uint64_t v593 = *v594;
          v593[1] = v2636;
          uint64_t v595 = v162[27];
          uint64_t v596 = (void *)((char *)v2713 + v595);
          uint64_t v597 = &v2598[v595];
          uint64_t v2613 = v597[1];
          *uint64_t v596 = *v597;
          v596[1] = v2613;
          uint64_t v598 = v162[28];
          uint64_t v599 = (void *)((char *)v2713 + v598);
          uint64_t v600 = &v2598[v598];
          uint64_t v2578 = (void *)v600[1];
          void *v599 = *v600;
          v599[1] = v2578;
          uint64_t v601 = v162[29];
          v602 = (void *)((char *)v2713 + v601);
          uint64_t v603 = &v2598[v601];
          uint64_t v2562 = (void *)v603[1];
          void *v602 = *v603;
          v602[1] = v2562;
          uint64_t v604 = v162[30];
          long long v605 = (void *)((char *)v2713 + v604);
          long long v606 = &v2598[v604];
          uint64_t v2553 = (void *)v606[1];
          void *v605 = *v606;
          v605[1] = v2553;
          uint64_t v607 = v162[31];
          long long v608 = (void *)((char *)v2713 + v607);
          long long v609 = &v2598[v607];
          uint64_t v2546 = v609[1];
          void *v608 = *v609;
          v608[1] = v2546;
          uint64_t v610 = v162[32];
          long long v611 = (void *)((char *)v2713 + v610);
          uint64_t v612 = &v2598[v610];
          uint64_t v613 = v612[1];
          void *v611 = *v612;
          v611[1] = v613;
          *(void *)((char *)v2713 + v162[33]) = *(void *)&v2598[v162[33]];
          *(void *)((char *)v2713 + v162[34]) = *(void *)&v2598[v162[34]];
          uint64_t v614 = v162[35];
          uint64_t v615 = (void *)((char *)v2713 + v614);
          uint64_t v616 = &v2598[v614];
          uint64_t v617 = v616[1];
          void *v615 = *v616;
          v615[1] = v617;
          uint64_t v618 = v162[36];
          uint64_t v619 = (void *)((char *)v2713 + v618);
          uint64_t v620 = &v2598[v618];
          uint64_t v621 = v620[1];
          *uint64_t v619 = *v620;
          v619[1] = v621;
          uint64_t v622 = v162[37];
          long long v623 = (void *)((char *)v2713 + v622);
          long long v624 = &v2598[v622];
          uint64_t v625 = v624[1];
          *long long v623 = *v624;
          v623[1] = v625;
          uint64_t v626 = v162[38];
          __dst = (char *)v2713 + v626;
          long long v627 = &v2598[v626];
          uint64_t v628 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v627, 1, v628))
          {
            uint64_t v629 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(__dst, v627, *(void *)(*(void *)(v629 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v628 - 8) + 16))(__dst, v627, v628);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v628);
          }
          uint64_t v13 = v2702;
          uint64_t v697 = v162[39];
          uint64_t v17 = (uint64_t)v2713;
          long long v698 = (void *)((char *)v2713 + v697);
          uint64_t v14 = v2598;
          long long v699 = &v2598[v697];
          uint64_t v700 = v699[1];
          *long long v698 = *v699;
          v698[1] = v700;
          uint64_t v701 = v162[40];
          uint64_t v702 = (void *)((char *)v2713 + v701);
          uint64_t v703 = &v2598[v701];
          uint64_t v704 = v703[1];
          *uint64_t v702 = *v703;
          v702[1] = v704;
          uint64_t v705 = v162[41];
          uint64_t v706 = (char *)v2713 + v705;
          uint64_t v707 = &v2598[v705];
          v706[8] = v707[8];
          *(void *)uint64_t v706 = *(void *)v707;
          uint64_t v708 = v162[42];
          long long v709 = (void *)((char *)v2713 + v708);
          long long v710 = &v2598[v708];
          uint64_t v711 = v710[1];
          *long long v709 = *v710;
          v709[1] = v711;
          uint64_t v712 = v162[43];
          long long v713 = (char *)v2713 + v712;
          long long v714 = &v2598[v712];
          *(_OWORD *)long long v713 = *(_OWORD *)v714;
          *(void *)(v713 + 13) = *(void *)(v714 + 13);
          uint64_t v715 = v162[44];
          uint64_t v716 = (void *)((char *)v2713 + v715);
          uint64_t v717 = &v2598[v715];
          uint64_t v718 = v717[1];
          *uint64_t v716 = *v717;
          v716[1] = v718;
          uint64_t v719 = v162[45];
          uint64_t v720 = (void *)((char *)v2713 + v719);
          uint64_t v721 = &v2598[v719];
          uint64_t v722 = v721[1];
          *uint64_t v720 = *v721;
          v720[1] = v722;
          uint64_t v723 = v162[46];
          uint64_t v724 = (void *)((char *)v2713 + v723);
          uint64_t v725 = &v2598[v723];
          uint64_t v726 = v725[1];
          *uint64_t v724 = *v725;
          v724[1] = v726;
          uint64_t v727 = v162[47];
          uint64_t v728 = (void *)((char *)v2713 + v727);
          uint64_t v729 = &v2598[v727];
          uint64_t v730 = v729[1];
          *uint64_t v728 = *v729;
          v728[1] = v730;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v731 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
          *(void *)((char *)v2713 + *(int *)(v731 + 48)) = *(void *)&v2598[*(int *)(v731 + 48)];
          goto LABEL_168;
        case 0x10u:
          uint64_t v2700 = v13;
          uint64_t v167 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v167;
          uint64_t v168 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v168;
          uint64_t v169 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v169;
          uint64_t v2690 = v12[7];
          v2713[6] = v12[6];
          v2713[7] = v2690;
          uint64_t v2677 = v12[9];
          v2713[8] = v12[8];
          v2713[9] = v2677;
          uint64_t v2664 = v12[11];
          v2713[10] = v12[10];
          v2713[11] = v2664;
          *((unsigned char *)v2713 + 96) = *((unsigned char *)v12 + 96);
          uint64_t v170 = v12[14];
          v2713[13] = v12[13];
          v2713[14] = v170;
          uint64_t v171 = v12[16];
          v2713[15] = v12[15];
          v2713[16] = v171;
          uint64_t v172 = (int *)type metadata accessor for HotelReservation(0);
          uint64_t v173 = v172[14];
          uint64_t v174 = (char *)v2713 + v173;
          v2599 = v12;
          uint64_t v175 = (char *)v12 + v173;
          uint64_t v176 = type metadata accessor for DateComponents();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v175, 1, v176))
          {
            uint64_t v177 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v174, v175, *(void *)(*(void *)(v177 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
            __swift_storeEnumTagSinglePayload((uint64_t)v174, 0, 1, v176);
          }
          uint64_t v433 = v172[15];
          uint64_t v434 = (char *)v2713 + v433;
          uint64_t v435 = (char *)v12 + v433;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2599 + v433, 1, v176))
          {
            uint64_t v436 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v434, v435, *(void *)(*(void *)(v436 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v434, v435, v176);
            __swift_storeEnumTagSinglePayload((uint64_t)v434, 0, 1, v176);
          }
          uint64_t v630 = v172[16];
          uint64_t v631 = (void *)((char *)v2713 + v630);
          uint64_t v632 = (void *)((char *)v2599 + v630);
          uint64_t v633 = v632[1];
          *uint64_t v631 = *v632;
          v631[1] = v633;
          uint64_t v634 = v172[17];
          uint64_t v635 = (void *)((char *)v2713 + v634);
          uint64_t v636 = (void *)((char *)v2599 + v634);
          uint64_t v637 = v636[1];
          *uint64_t v635 = *v636;
          v635[1] = v637;
          uint64_t v638 = v172[18];
          long long v639 = (void *)((char *)v2713 + v638);
          long long v640 = (void *)((char *)v2599 + v638);
          uint64_t v2698 = v640[1];
          void *v639 = *v640;
          v639[1] = v2698;
          uint64_t v641 = v172[19];
          long long v642 = (void *)((char *)v2713 + v641);
          long long v643 = (void *)((char *)v2599 + v641);
          uint64_t v644 = v643[1];
          *long long v642 = *v643;
          v642[1] = v644;
          uint64_t v645 = v172[20];
          uint64_t v646 = (void *)((char *)v2713 + v645);
          uint64_t v647 = (void *)((char *)v2599 + v645);
          uint64_t v648 = v647[1];
          *uint64_t v646 = *v647;
          v646[1] = v648;
          *(void *)((char *)v2713 + v172[21]) = *(void *)((char *)v2599 + v172[21]);
          *(void *)((char *)v2713 + v172[22]) = *(void *)((char *)v2599 + v172[22]);
          uint64_t v649 = v172[23];
          uint64_t v650 = (char *)v2713 + v649;
          uint64_t v651 = (char *)v2599 + v649;
          *(void *)uint64_t v650 = *(void *)v651;
          v650[8] = v651[8];
          uint64_t v652 = v172[24];
          uint64_t v653 = (char *)v2713 + v652;
          v654 = (char *)v2599 + v652;
          *(void *)uint64_t v653 = *(void *)v654;
          v653[8] = v654[8];
          uint64_t v655 = v172[25];
          uint64_t v656 = (void *)((char *)v2713 + v655);
          uint64_t v657 = (void *)((char *)v2599 + v655);
          uint64_t v658 = v657[1];
          *uint64_t v656 = *v657;
          v656[1] = v658;
          uint64_t v659 = v172[26];
          uint64_t v660 = (void *)((char *)v2713 + v659);
          v661 = (void *)((char *)v2599 + v659);
          uint64_t v662 = v661[1];
          *uint64_t v660 = *v661;
          v660[1] = v662;
          uint64_t v663 = v172[27];
          uint64_t v664 = (void *)((char *)v2713 + v663);
          uint64_t v665 = (void *)((char *)v2599 + v663);
          uint64_t v666 = v665[1];
          void *v664 = *v665;
          v664[1] = v666;
          uint64_t v667 = v172[28];
          uint64_t v668 = (void *)((char *)v2713 + v667);
          uint64_t v669 = (void *)((char *)v2599 + v667);
          uint64_t v670 = v669[1];
          void *v668 = *v669;
          v668[1] = v670;
          uint64_t v671 = v172[29];
          v672 = (char *)v2713 + v671;
          uint64_t v673 = (char *)v2599 + v671;
          *(void *)v672 = *(void *)v673;
          v672[8] = v673[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v17 = (uint64_t)v2713;
          swift_bridgeObjectRetain();
          uint64_t v14 = v2599;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_546;
        case 0x11u:
          uint64_t v2700 = v13;
          uint64_t v178 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v178;
          uint64_t v179 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v179;
          uint64_t v180 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v180;
          uint64_t v2691 = v12[7];
          v2713[6] = v12[6];
          v2713[7] = v2691;
          uint64_t v2678 = v12[9];
          v2713[8] = v12[8];
          v2713[9] = v2678;
          uint64_t v181 = v12[11];
          v2713[10] = v12[10];
          v2713[11] = v181;
          *((unsigned char *)v2713 + 96) = *((unsigned char *)v12 + 96);
          uint64_t v182 = v12[14];
          v2713[13] = v12[13];
          v2713[14] = v182;
          uint64_t v183 = v12[16];
          v2713[15] = v12[15];
          v2713[16] = v183;
          id v184 = (int *)type metadata accessor for RestaurantReservation(0);
          uint64_t v185 = v184[14];
          id v186 = (char *)v2713 + v185;
          uint64_t v2600 = v12;
          uint64_t v187 = (char *)v12 + v185;
          uint64_t v188 = type metadata accessor for DateComponents();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v187, 1, v188))
          {
            uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v186, v187, *(void *)(*(void *)(v189 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 16))(v186, v187, v188);
            __swift_storeEnumTagSinglePayload((uint64_t)v186, 0, 1, v188);
          }
          uint64_t v437 = v184[15];
          uint64_t v17 = (uint64_t)v2713;
          uint64_t v438 = (void *)((char *)v2713 + v437);
          uint64_t v14 = v12;
          uint64_t v439 = (void *)((char *)v12 + v437);
          uint64_t v440 = v439[1];
          *uint64_t v438 = *v439;
          v438[1] = v440;
          uint64_t v441 = v184[16];
          uint64_t v442 = (void *)((char *)v2713 + v441);
          uint64_t v443 = (void *)((char *)v12 + v441);
          uint64_t v444 = v443[1];
          *uint64_t v442 = *v443;
          v442[1] = v444;
          uint64_t v445 = v184[17];
          uint64_t v446 = (void *)((char *)v2713 + v445);
          uint64_t v447 = (void *)((char *)v12 + v445);
          uint64_t v448 = v447[1];
          void *v446 = *v447;
          v446[1] = v448;
          uint64_t v449 = v184[18];
          uint64_t v450 = (void *)((char *)v2713 + v449);
          uint64_t v451 = (void *)((char *)v2600 + v449);
          uint64_t v452 = v451[1];
          *uint64_t v450 = *v451;
          v450[1] = v452;
          uint64_t v453 = v184[19];
          uint64_t v454 = (void *)((char *)v2713 + v453);
          uint64_t v455 = (void *)((char *)v2600 + v453);
          uint64_t v456 = v455[1];
          *uint64_t v454 = *v455;
          v454[1] = v456;
          *(void *)((char *)v2713 + v184[20]) = *(void *)((char *)v2600 + v184[20]);
          uint64_t v457 = v184[21];
          uint64_t v458 = (void *)((char *)v2713 + v457);
          unint64_t v459 = (void *)((char *)v2600 + v457);
          uint64_t v460 = v459[1];
          *uint64_t v458 = *v459;
          v458[1] = v460;
          uint64_t v461 = v184[22];
          unint64_t v462 = (void *)((char *)v2713 + v461);
          Swift::String v463 = (void *)((char *)v2600 + v461);
          uint64_t v464 = v463[1];
          *unint64_t v462 = *v463;
          v462[1] = v464;
          uint64_t v465 = v184[23];
          long long v466 = (void *)((char *)v2713 + v465);
          long long v467 = (void *)((char *)v2600 + v465);
          uint64_t v468 = v467[1];
          void *v466 = *v467;
          v466[1] = v468;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_546;
        case 0x12u:
          uint64_t v2703 = v13;
          uint64_t v190 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v190;
          uint64_t v191 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v191;
          uint64_t v192 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v192;
          uint64_t v193 = v12[7];
          v2713[6] = v12[6];
          v2713[7] = v193;
          uint64_t v194 = v12[9];
          v2713[8] = v12[8];
          v2713[9] = v194;
          uint64_t v195 = v12[11];
          v2713[10] = v12[10];
          v2713[11] = v195;
          uint64_t v196 = v12[13];
          v2713[12] = v12[12];
          v2713[13] = v196;
          uint64_t v197 = v12[15];
          v2713[14] = v12[14];
          v2713[15] = v197;
          *((unsigned char *)v2713 + 128) = *((unsigned char *)v12 + 128);
          *(_WORD *)((char *)v2713 + 129) = *(_WORD *)((char *)v12 + 129);
          uint64_t v198 = v12[18];
          v2713[17] = v12[17];
          v2713[18] = v198;
          uint64_t v199 = v12[20];
          v2713[19] = v12[19];
          v2713[20] = v199;
          id v200 = v12;
          uint64_t v201 = v12[22];
          v2713[21] = v12[21];
          v2713[22] = v201;
          uint64_t v202 = v12[24];
          v2713[23] = v12[23];
          v2713[24] = v202;
          uint64_t v203 = v12[26];
          v2713[25] = v12[25];
          v2713[26] = v203;
          uint64_t v204 = v12[28];
          v2713[27] = v12[27];
          v2713[28] = v204;
          uint64_t v205 = v12[30];
          v2713[29] = v12[29];
          v2713[30] = v205;
          uint64_t v206 = v12[32];
          v2713[31] = v12[31];
          v2713[32] = v206;
          uint64_t v207 = v12[34];
          v2713[33] = v12[33];
          v2713[34] = v207;
          uint64_t v2692 = v12[36];
          v2713[35] = v12[35];
          v2713[36] = v2692;
          uint64_t v2679 = v12[38];
          v2713[37] = v12[37];
          v2713[38] = v2679;
          uint64_t v2665 = v12[40];
          v2713[39] = v12[39];
          v2713[40] = v2665;
          uint64_t v2647 = v12[42];
          v2713[41] = v12[41];
          v2713[42] = v2647;
          uint64_t v2631 = v12[44];
          v2713[43] = v12[43];
          v2713[44] = v2631;
          uint64_t v2607 = v12[46];
          v2713[45] = v12[45];
          v2713[46] = v2607;
          uint64_t v208 = v12[47];
          *((unsigned char *)v2713 + 384) = *((unsigned char *)v12 + 384);
          v2713[47] = v208;
          uint64_t v209 = v12[50];
          v2713[49] = v200[49];
          v2713[50] = v209;
          uint64_t v210 = v200[52];
          v2713[51] = v200[51];
          v2713[52] = v210;
          uint64_t v2707 = type metadata accessor for RentalCarReservation(0);
          uint64_t v211 = *(int *)(v2707 + 140);
          uint64_t v212 = (char *)v2713 + v211;
          uint64_t v2601 = v200;
          id v213 = (char *)v200 + v211;
          uint64_t v214 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v213, 1, v214))
          {
            uint64_t v215 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v212, v213, *(void *)(*(void *)(v215 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 16))(v212, v213, v214);
            __swift_storeEnumTagSinglePayload((uint64_t)v212, 0, 1, v214);
          }
          uint64_t v469 = *(int *)(v2707 + 144);
          goto LABEL_112;
        case 0x13u:
          uint64_t v2703 = v13;
          uint64_t v2608 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v2608;
          uint64_t v216 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v216;
          uint64_t v217 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v217;
          uint64_t v218 = v12[7];
          v2713[6] = v12[6];
          v2713[7] = v218;
          uint64_t v219 = v12[9];
          v2713[8] = v12[8];
          v2713[9] = v219;
          uint64_t v220 = v12[11];
          v2713[10] = v12[10];
          v2713[11] = v220;
          uint64_t v221 = v12[13];
          v2713[12] = v12[12];
          v2713[13] = v221;
          uint64_t v222 = v12[15];
          v2713[14] = v12[14];
          v2713[15] = v222;
          *((unsigned char *)v2713 + 128) = *((unsigned char *)v12 + 128);
          *(_WORD *)((char *)v2713 + 129) = *(_WORD *)((char *)v12 + 129);
          uint64_t v223 = v12[18];
          v2713[17] = v12[17];
          v2713[18] = v223;
          uint64_t v224 = v12[20];
          v2713[19] = v12[19];
          v2713[20] = v224;
          uint64_t v225 = v12;
          uint64_t v226 = v12[22];
          v2713[21] = v12[21];
          v2713[22] = v226;
          uint64_t v227 = v12[24];
          v2713[23] = v12[23];
          v2713[24] = v227;
          uint64_t v228 = v12[25];
          uint64_t v229 = v12[26];
          v2713[25] = v228;
          v2713[26] = v229;
          uint64_t v2693 = v225[28];
          v2713[27] = v225[27];
          v2713[28] = v2693;
          uint64_t v2680 = v225[30];
          v2713[29] = v225[29];
          v2713[30] = v2680;
          uint64_t v2666 = v225[32];
          v2713[31] = v225[31];
          v2713[32] = v2666;
          uint64_t v2648 = v225[34];
          v2713[33] = v225[33];
          v2713[34] = v2648;
          uint64_t v231 = v225[35];
          uint64_t v230 = v225[36];
          *((unsigned char *)v2713 + 296) = *((unsigned char *)v225 + 296);
          v2713[35] = v231;
          v2713[36] = v230;
          uint64_t v2708 = type metadata accessor for TicketedTransportation(0);
          uint64_t v232 = *(int *)(v2708 + 112);
          uint64_t v233 = (char *)v2713 + v232;
          uint64_t v2601 = v225;
          Swift::String v234 = (char *)v225 + v232;
          uint64_t v214 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v234, 1, v214))
          {
            uint64_t v235 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v233, v234, *(void *)(*(void *)(v235 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 16))(v233, v234, v214);
            __swift_storeEnumTagSinglePayload((uint64_t)v233, 0, 1, v214);
          }
          uint64_t v469 = *(int *)(v2708 + 116);
          goto LABEL_112;
        case 0x14u:
          uint64_t v236 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v236;
          uint64_t v237 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v237;
          uint64_t v238 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v238;
          uint64_t v239 = v12[7];
          v2713[6] = v12[6];
          v2713[7] = v239;
          uint64_t v240 = v12[9];
          v2713[8] = v12[8];
          v2713[9] = v240;
          uint64_t v241 = v12[11];
          v2713[10] = v12[10];
          v2713[11] = v241;
          uint64_t v242 = v12[13];
          v2713[12] = v12[12];
          v2713[13] = v242;
          uint64_t v243 = v12[15];
          v2713[14] = v12[14];
          v2713[15] = v243;
          *((unsigned char *)v2713 + 128) = *((unsigned char *)v12 + 128);
          *(_WORD *)((char *)v2713 + 129) = *(_WORD *)((char *)v12 + 129);
          uint64_t v244 = v12[18];
          v2713[17] = v12[17];
          v2713[18] = v244;
          uint64_t v245 = v12[20];
          v2713[19] = v12[19];
          v2713[20] = v245;
          uint64_t v246 = v12[22];
          v2713[21] = v12[21];
          v2713[22] = v246;
          uint64_t v248 = v12[25];
          uint64_t v247 = v12[24];
          v2713[23] = v12[23];
          v2713[24] = v247;
          uint64_t v249 = v12[26];
          v2713[25] = v248;
          v2713[26] = v249;
          uint64_t v250 = v12[28];
          v2713[27] = v12[27];
          v2713[28] = v250;
          uint64_t v2694 = v12[30];
          v2713[29] = v12[29];
          v2713[30] = v2694;
          uint64_t v2681 = v12[32];
          v2713[31] = v12[31];
          v2713[32] = v2681;
          uint64_t v251 = v12[34];
          v2713[33] = v12[33];
          v2713[34] = v251;
          uint64_t v252 = v12[36];
          uint64_t v2649 = v12[35];
          *((unsigned char *)v2713 + 296) = *((unsigned char *)v12 + 296);
          v2713[35] = v2649;
          v2713[36] = v252;
          uint64_t v253 = v12[39];
          v2713[38] = v12[38];
          v2713[39] = v253;
          v2709 = (int *)type metadata accessor for TicketedShow(0);
          uint64_t v254 = v2709[29];
          uint64_t v255 = (char *)v2713 + v254;
          uint64_t v2602 = v12;
          uint64_t v256 = (char *)v12 + v254;
          uint64_t v257 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v256, 1, v257))
          {
            uint64_t v258 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v255, v256, *(void *)(*(void *)(v258 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v257 - 8) + 16))(v255, v256, v257);
            __swift_storeEnumTagSinglePayload((uint64_t)v255, 0, 1, v257);
          }
          uint64_t v470 = v2709[30];
          uint64_t v17 = (uint64_t)v2713;
          long long v471 = (void *)((char *)v2713 + v470);
          uint64_t v14 = v2602;
          uint64_t v472 = (void *)((char *)v2602 + v470);
          uint64_t v473 = v472[1];
          void *v471 = *v472;
          v471[1] = v473;
          uint64_t v474 = v2709[31];
          uint64_t v475 = (char *)v2713 + v474;
          uint64_t v476 = (char *)v2602 + v474;
          uint64_t v77 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v476, 1, v77))
          {
            uint64_t v477 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v475, v476, *(void *)(*(void *)(v477 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v475, v476, v77);
            __swift_storeEnumTagSinglePayload((uint64_t)v475, 0, 1, v77);
          }
          uint64_t v674 = v2709[32];
          long long v371 = (char *)v2713 + v674;
          Swift::String v372 = (char *)v2602 + v674;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2602 + v674, 1, v77))
          {
LABEL_149:
            uint64_t v675 = &demangling cache variable for type metadata for Date?;
            goto LABEL_158;
          }
LABEL_150:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v371, v372, v77);
          uint64_t v676 = (uint64_t)v371;
          uint64_t v677 = v77;
          goto LABEL_160;
        case 0x15u:
          uint64_t v2703 = v13;
          uint64_t v2650 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v2650;
          uint64_t v2632 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v2632;
          uint64_t v2609 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v2609;
          uint64_t v259 = v12[7];
          v2713[6] = v12[6];
          v2713[7] = v259;
          uint64_t v260 = v12[9];
          v2713[8] = v12[8];
          v2713[9] = v260;
          uint64_t v261 = v12[11];
          v2713[10] = v12[10];
          v2713[11] = v261;
          uint64_t v262 = v12[13];
          v2713[12] = v12[12];
          v2713[13] = v262;
          uint64_t v263 = v12[15];
          v2713[14] = v12[14];
          v2713[15] = v263;
          *((unsigned char *)v2713 + 128) = *((unsigned char *)v12 + 128);
          *(_WORD *)((char *)v2713 + 129) = *(_WORD *)((char *)v12 + 129);
          uint64_t v264 = v12[18];
          v2713[17] = v12[17];
          v2713[18] = v264;
          uint64_t v265 = v12[20];
          v2713[19] = v12[19];
          v2713[20] = v265;
          uint64_t v266 = v12;
          uint64_t v267 = v12[22];
          v2713[21] = v12[21];
          v2713[22] = v267;
          uint64_t v268 = v12[24];
          v2713[23] = v12[23];
          v2713[24] = v268;
          uint64_t v269 = v12[26];
          v2713[25] = v12[25];
          v2713[26] = v269;
          uint64_t v270 = v12[28];
          v2713[27] = v12[27];
          v2713[28] = v270;
          uint64_t v271 = v12[30];
          v2713[29] = v12[29];
          v2713[30] = v271;
          uint64_t v272 = v12[32];
          v2713[31] = v12[31];
          v2713[32] = v272;
          uint64_t v274 = v12[33];
          uint64_t v273 = v266[34];
          *((unsigned char *)v2713 + 280) = *((unsigned char *)v266 + 280);
          v2713[33] = v274;
          v2713[34] = v273;
          uint64_t v275 = v266[37];
          v2713[36] = v266[36];
          v2713[37] = v275;
          uint64_t v2710 = type metadata accessor for Appointment(0);
          uint64_t v276 = *(int *)(v2710 + 108);
          Class v277 = (char *)v2713 + v276;
          uint64_t v2601 = v266;
          id v278 = (char *)v266 + v276;
          uint64_t v214 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v278, 1, v214))
          {
            uint64_t v279 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v277, v278, *(void *)(*(void *)(v279 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 16))(v277, v278, v214);
            __swift_storeEnumTagSinglePayload((uint64_t)v277, 0, 1, v214);
          }
          uint64_t v469 = *(int *)(v2710 + 112);
LABEL_112:
          uint64_t v17 = (uint64_t)v2713;
          uint64_t v478 = (char *)v2713 + v469;
          uint64_t v14 = v2601;
          uint64_t v479 = (char *)v2601 + v469;
          uint64_t v13 = v2703;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2601 + v469, 1, v214))
          {
            v480 = &demangling cache variable for type metadata for Date?;
            goto LABEL_154;
          }
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 16))(v478, v479, v214);
          uint64_t v481 = (uint64_t)v478;
          uint64_t v482 = v214;
          goto LABEL_171;
        case 0x16u:
          uint64_t v2651 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v2651;
          uint64_t v2633 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v2633;
          uint64_t v2610 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v2610;
          uint64_t v280 = v12[7];
          v2713[6] = v12[6];
          v2713[7] = v280;
          uint64_t v281 = v12[9];
          v2713[8] = v12[8];
          v2713[9] = v281;
          uint64_t v282 = v12[11];
          v2713[10] = v12[10];
          v2713[11] = v282;
          uint64_t v283 = v12[13];
          v2713[12] = v12[12];
          v2713[13] = v283;
          uint64_t v284 = v12[15];
          v2713[14] = v12[14];
          v2713[15] = v284;
          *((unsigned char *)v2713 + 128) = *((unsigned char *)v12 + 128);
          *(_WORD *)((char *)v2713 + 129) = *(_WORD *)((char *)v12 + 129);
          uint64_t v285 = v12[18];
          v2713[17] = v12[17];
          v2713[18] = v285;
          uint64_t v286 = v12[20];
          v2713[19] = v12[19];
          v2713[20] = v286;
          uint64_t v287 = v12[22];
          v2713[21] = v12[21];
          v2713[22] = v287;
          uint64_t v288 = v12[24];
          v2713[23] = v12[23];
          v2713[24] = v288;
          uint64_t v289 = v12[26];
          v2713[25] = v12[25];
          v2713[26] = v289;
          uint64_t v290 = v12[28];
          v2713[27] = v12[27];
          v2713[28] = v290;
          uint64_t v291 = v12[30];
          v2713[29] = v12[29];
          v2713[30] = v291;
          v2713[31] = v12[31];
          uint64_t v292 = type metadata accessor for Party(0);
          uint64_t v293 = *(int *)(v292 + 96);
          uint64_t v294 = (char *)v2713 + v293;
          v2603 = v14;
          char v295 = (char *)v14 + v293;
          uint64_t v296 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v295, 1, v296))
          {
            uint64_t v297 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v294, v295, *(void *)(*(void *)(v297 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v296 - 8) + 16))(v294, v295, v296);
            __swift_storeEnumTagSinglePayload((uint64_t)v294, 0, 1, v296);
          }
          uint64_t v483 = v292;
          uint64_t v484 = *(int *)(v292 + 100);
          uint64_t v17 = (uint64_t)v2713;
          long long v485 = (char *)v2713 + v484;
          long long v486 = (char *)v2603 + v484;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2603 + v484, 1, v296))
          {
            uint64_t v487 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v485, v486, *(void *)(*(void *)(v487 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v296 - 8) + 16))(v485, v486, v296);
            __swift_storeEnumTagSinglePayload((uint64_t)v485, 0, 1, v296);
          }
          uint64_t v678 = *(int *)(v483 + 104);
          uint64_t v478 = (char *)v2713 + v678;
          uint64_t v14 = v2603;
          uint64_t v479 = (char *)v2603 + v678;
          uint64_t v679 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v479, 1, v679))
          {
            v480 = &demangling cache variable for type metadata for URL?;
LABEL_154:
            uint64_t v680 = __swift_instantiateConcreteTypeFromMangledName(v480);
            memcpy(v478, v479, *(void *)(*(void *)(v680 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v679 - 8) + 16))(v478, v479, v679);
            uint64_t v481 = (uint64_t)v478;
            uint64_t v482 = v679;
LABEL_171:
            __swift_storeEnumTagSinglePayload(v481, 0, 1, v482);
          }
          uint64_t v16 = a1;
LABEL_549:
          swift_storeEnumTagMultiPayload();
          uint64_t v2501 = *(int *)(v13 + 20);
          uint64_t v2502 = *(void **)((char *)v14 + v2501);
          *(void *)(v17 + v2501) = v2502;
          uint64_t v2503 = *(int *)(v13 + 24);
          v2504 = (void *)(v17 + v2503);
          uint64_t v2505 = (void *)((char *)v14 + v2503);
          uint64_t v2506 = v2505[1];
          void *v2504 = *v2505;
          v2504[1] = v2506;
          id v2507 = v2502;
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload(v17, 0, 1, v13);
          break;
        case 0x17u:
          uint64_t v2704 = v13;
          uint64_t v2682 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v2682;
          uint64_t v2667 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v2667;
          uint64_t v2652 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v2652;
          uint64_t v2634 = v12[7];
          v2713[6] = v12[6];
          v2713[7] = v2634;
          uint64_t v298 = v12[9];
          v2713[8] = v12[8];
          v2713[9] = v298;
          uint64_t v2611 = v12[11];
          v2713[10] = v12[10];
          v2713[11] = v2611;
          uint64_t v299 = v12[13];
          v2713[12] = v12[12];
          v2713[13] = v299;
          uint64_t v300 = v12[15];
          v2713[14] = v12[14];
          v2713[15] = v300;
          *((unsigned char *)v2713 + 128) = *((unsigned char *)v12 + 128);
          *(_WORD *)((char *)v2713 + 129) = *(_WORD *)((char *)v12 + 129);
          uint64_t v301 = v12[18];
          v2713[17] = v12[17];
          v2713[18] = v301;
          uint64_t v302 = v12[20];
          v2713[19] = v12[19];
          v2713[20] = v302;
          uint64_t v303 = v12[22];
          v2713[21] = v12[21];
          v2713[22] = v303;
          uint64_t v304 = v12;
          uint64_t v305 = v12[23];
          uint64_t v307 = v12[25];
          uint64_t v306 = v304[24];
          v2713[23] = v305;
          v2713[24] = v306;
          uint64_t v308 = v304[26];
          uint64_t v309 = v304[27];
          v2713[25] = v307;
          v2713[26] = v308;
          v2713[27] = v309;
          v2695 = (int *)type metadata accessor for Trip(0);
          uint64_t v310 = v2695[22];
          uint64_t v311 = (char *)v2713 + v310;
          uint64_t v2604 = v304;
          Swift::String v312 = (char *)v304 + v310;
          uint64_t v313 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v312, 1, v313))
          {
            uint64_t v314 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v311, v312, *(void *)(*(void *)(v314 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v313 - 8) + 16))(v311, v312, v313);
            __swift_storeEnumTagSinglePayload((uint64_t)v311, 0, 1, v313);
          }
          uint64_t v488 = v2695[23];
          uint64_t v17 = (uint64_t)v2713;
          long long v489 = (char *)v2713 + v488;
          uint64_t v14 = v2604;
          uint64_t v490 = (char *)v2604 + v488;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2604 + v488, 1, v313))
          {
            uint64_t v491 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v489, v490, *(void *)(*(void *)(v491 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v313 - 8) + 16))(v489, v490, v313);
            __swift_storeEnumTagSinglePayload((uint64_t)v489, 0, 1, v313);
          }
          uint64_t v13 = v2704;
          uint64_t v681 = v2695[24];
          long long v682 = (char *)v2713 + v681;
          long long v683 = (char *)v2604 + v681;
          *(void *)long long v682 = *(void *)v683;
          v682[8] = v683[8];
          uint64_t v684 = v2695[25];
          long long v371 = (char *)v2713 + v684;
          Swift::String v372 = (char *)v2604 + v684;
          uint64_t v391 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v372, 1, v391))
          {
LABEL_157:
            uint64_t v675 = &demangling cache variable for type metadata for URL?;
LABEL_158:
            uint64_t v685 = __swift_instantiateConcreteTypeFromMangledName(v675);
            memcpy(v371, v372, *(void *)(*(void *)(v685 - 8) + 64));
          }
          else
          {
LABEL_159:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v391 - 8) + 16))(v371, v372, v391);
            uint64_t v676 = (uint64_t)v371;
            uint64_t v677 = v391;
LABEL_160:
            __swift_storeEnumTagSinglePayload(v676, 0, 1, v677);
          }
LABEL_161:
          uint64_t v16 = a1;
          goto LABEL_549;
        case 0x18u:
          uint64_t v315 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v315;
          uint64_t v316 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v316;
          uint64_t v317 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v317;
          uint64_t v318 = (int *)type metadata accessor for GlobalItem();
          uint64_t v319 = v318[7];
          uint64_t v320 = (char *)v2713 + v319;
          uint64_t v321 = (char *)v12 + v319;
          uint64_t v322 = type metadata accessor for GlobalDialog();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v321, 1, v322))
          {
            uint64_t v323 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
            memcpy(v320, v321, *(void *)(*(void *)(v323 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v322 - 8) + 16))(v320, v321, v322);
            __swift_storeEnumTagSinglePayload((uint64_t)v320, 0, 1, v322);
          }
          uint64_t v492 = v318[8];
          uint64_t v493 = (char *)v2713 + v492;
          uint64_t v494 = (char *)v14 + v492;
          unint64_t v495 = *((void *)v494 + 1);
          if (v495 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v493 = *(_OWORD *)v494;
          }
          else
          {
            uint64_t v496 = *(void *)v494;
            outlined copy of Data._Representation(*(void *)v494, *((void *)v494 + 1));
            *(void *)uint64_t v493 = v496;
            *((void *)v493 + 1) = v495;
          }
          uint64_t v16 = a1;
          *((unsigned char *)v2713 + v318[9]) = *((unsigned char *)v14 + v318[9]);
          uint64_t v497 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
          *(void *)((char *)v2713 + *(int *)(v497 + 48)) = *(void *)((char *)v14 + *(int *)(v497 + 48));
          goto LABEL_128;
        case 0x19u:
          uint64_t v324 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v324;
          uint64_t v325 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v325;
          uint64_t v326 = v12[5];
          v2713[4] = v14[4];
          v2713[5] = v326;
          uint64_t v327 = v14[7];
          v2713[6] = v14[6];
          v2713[7] = v327;
LABEL_91:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_94:
          swift_bridgeObjectRetain();
          goto LABEL_161;
        case 0x1Au:
          uint64_t v2705 = v13;
          uint64_t v328 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v328;
          uint64_t v329 = v12[3];
          v2713[2] = v12[2];
          v2713[3] = v329;
          uint64_t v330 = v12[5];
          v2713[4] = v12[4];
          v2713[5] = v330;
          v2713[6] = v12[6];
          uint64_t v331 = (int *)type metadata accessor for Answer(0);
          uint64_t v332 = v331[9];
          uint64_t v333 = (char *)v2713 + v332;
          uint64_t v2605 = v12;
          uint64_t v334 = (char *)v12 + v332;
          uint64_t v335 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v334, 1, v335))
          {
            uint64_t v336 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v333, v334, *(void *)(*(void *)(v336 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v335 - 8) + 16))(v333, v334, v335);
            __swift_storeEnumTagSinglePayload((uint64_t)v333, 0, 1, v335);
          }
          uint64_t v14 = v2605;
          uint64_t v16 = a1;
          uint64_t v13 = v2705;
          *((unsigned char *)v2713 + v331[10]) = *((unsigned char *)v2605 + v331[10]);
          uint64_t v498 = v331[11];
          uint64_t v499 = (void *)((char *)v2713 + v498);
          uint64_t v500 = (void *)((char *)v2605 + v498);
          uint64_t v501 = v500[1];
          void *v499 = *v500;
          v499[1] = v501;
LABEL_128:
          swift_bridgeObjectRetain();
          goto LABEL_549;
        default:
          uint64_t v2700 = v13;
          uint64_t v18 = v12[1];
          void *v2713 = *v12;
          v2713[1] = v18;
          uint64_t v19 = v12[3];
          v2713[2] = v14[2];
          v2713[3] = v19;
          uint64_t v20 = v14[5];
          v2713[4] = v14[4];
          v2713[5] = v20;
          uint64_t v21 = v14[7];
          v2713[6] = v14[6];
          v2713[7] = v21;
          uint64_t v22 = v14[9];
          v2713[8] = v14[8];
          v2713[9] = v22;
          uint64_t v2685 = v14[11];
          v2713[10] = v14[10];
          v2713[11] = v2685;
          uint64_t v23 = (int *)type metadata accessor for EmailDocument(0);
          uint64_t v24 = v23[12];
          v2596 = v14;
          uint64_t v2660 = (char *)v2713 + v24;
          v2646 = (char *)v14 + v24;
          uint64_t v25 = type metadata accessor for Date();
          uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v27 = v2660;
          uint64_t v28 = v2596;
          uint64_t v29 = v2713;
          uint64_t v2661 = v26;
          uint64_t v2674 = v25;
          v26(v27, v2646, v25);
          *(void *)((char *)v2713 + v23[13]) = *(void *)((char *)v2596 + v23[13]);
          *(void *)((char *)v2713 + v23[14]) = *(void *)((char *)v2596 + v23[14]);
          *(void *)((char *)v2713 + v23[15]) = *(void *)((char *)v2596 + v23[15]);
          *((unsigned char *)v2713 + v23[16]) = *((unsigned char *)v2596 + v23[16]);
          *((unsigned char *)v2713 + v23[17]) = *((unsigned char *)v2596 + v23[17]);
          uint64_t v30 = v23[18];
          uint64_t v31 = (void *)((char *)v2713 + v30);
          uint64_t v32 = (void *)((char *)v2596 + v30);
          uint64_t v33 = v32[1];
          *uint64_t v31 = *v32;
          v31[1] = v33;
          v2686 = v23;
          uint64_t v34 = v23[19];
          uint64_t v35 = (void *)((char *)v2713 + v34);
          uint64_t v36 = (char *)v2596 + v34;
          uint64_t v37 = *(void *)((char *)v2596 + v34);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v37)
          {
            uint64_t v38 = *((void *)v36 + 1);
            uint64_t v39 = *((void *)v36 + 2);
            *uint64_t v35 = v37;
            v35[1] = v38;
            uint64_t v40 = *((void *)v36 + 3);
            uint64_t v41 = *((void *)v36 + 4);
            v35[2] = v39;
            v35[3] = v40;
            v35[4] = v41;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v337 = *((_OWORD *)v36 + 1);
            *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
            *((_OWORD *)v35 + 1) = v337;
            v35[4] = *((void *)v36 + 4);
          }
          uint64_t v338 = v2686;
          uint64_t v339 = v2686[20];
          uint64_t v340 = (void *)((char *)v2713 + v339);
          uint64_t v341 = (void *)((char *)v2596 + v339);
          uint64_t v342 = v341[1];
          *uint64_t v340 = *v341;
          v340[1] = v342;
          uint64_t v343 = v2686[21];
          uint64_t v344 = (void *)((char *)v2713 + v343);
          uint64_t v345 = (void *)((char *)v2596 + v343);
          uint64_t v346 = (int *)type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v345, 1, (uint64_t)v346))
          {
            uint64_t v347 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v344, v345, *(void *)(*(void *)(v347 - 8) + 64));
          }
          else
          {
            uint64_t v502 = v345[1];
            *uint64_t v344 = *v345;
            v344[1] = v502;
            uint64_t v503 = v346[5];
            long long v504 = (void *)((char *)v344 + v503);
            long long v505 = (void *)((char *)v345 + v503);
            uint64_t v506 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            uint64_t v2612 = v345;
            uint64_t v2635 = v346;
            if (__swift_getEnumTagSinglePayload((uint64_t)v505, 1, v506))
            {
              uint64_t v507 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v504, v505, *(void *)(*(void *)(v507 - 8) + 64));
            }
            else
            {
              uint64_t v738 = v505[1];
              *long long v504 = *v505;
              v504[1] = v738;
              uint64_t v739 = v505[3];
              v504[2] = v505[2];
              v504[3] = v739;
              uint64_t v740 = v505[5];
              v504[4] = v505[4];
              v504[5] = v740;
              uint64_t v741 = v505[7];
              v504[6] = v505[6];
              v504[7] = v741;
              uint64_t v742 = v505[9];
              v504[8] = v505[8];
              v504[9] = v742;
              uint64_t v743 = v505[11];
              v504[10] = v505[10];
              v504[11] = v743;
              uint64_t v744 = v505[13];
              v504[12] = v505[12];
              v504[13] = v744;
              uint64_t v745 = v505[15];
              v504[14] = v505[14];
              v504[15] = v745;
              *((unsigned char *)v504 + 128) = *((unsigned char *)v505 + 128);
              *(_WORD *)((char *)v504 + 129) = *(_WORD *)((char *)v505 + 129);
              uint64_t v746 = v505[18];
              v504[17] = v505[17];
              v504[18] = v746;
              uint64_t v747 = v505[20];
              v504[19] = v505[19];
              v504[20] = v747;
              uint64_t v748 = v505[22];
              v504[21] = v505[21];
              v504[22] = v748;
              uint64_t v2514 = v505[24];
              v504[23] = v505[23];
              v504[24] = v2514;
              uint64_t v749 = v505[26];
              v504[25] = v505[25];
              v504[26] = v749;
              uint64_t v750 = v505[28];
              v504[27] = v505[27];
              v504[28] = v750;
              uint64_t v751 = v505[30];
              v504[29] = v505[29];
              v504[30] = v751;
              uint64_t v752 = v505[32];
              v504[31] = v505[31];
              v504[32] = v752;
              uint64_t v753 = v505[34];
              v504[33] = v505[33];
              v504[34] = v753;
              uint64_t v754 = v505[36];
              v504[35] = v505[35];
              v504[36] = v754;
              uint64_t v755 = v505[38];
              v504[37] = v505[37];
              v504[38] = v755;
              uint64_t v756 = v505[40];
              v504[39] = v505[39];
              v504[40] = v756;
              uint64_t v757 = v505[42];
              v504[41] = v505[41];
              v504[42] = v757;
              uint64_t v758 = v505[44];
              v504[43] = v505[43];
              v504[44] = v758;
              uint64_t v759 = v505[46];
              v504[45] = v505[45];
              v504[46] = v759;
              uint64_t v760 = v505[47];
              *((unsigned char *)v504 + 384) = *((unsigned char *)v505 + 384);
              v504[47] = v760;
              uint64_t v761 = v505[50];
              v504[49] = v505[49];
              v504[50] = v761;
              uint64_t v762 = v505[52];
              v504[51] = v505[51];
              v504[52] = v762;
              uint64_t v763 = *(int *)(v506 + 140);
              uint64_t v2579 = (char *)v504 + v763;
              uint64_t v764 = (char *)v505 + v763;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v764, 1, v2674))
              {
                uint64_t v765 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2579, v764, *(void *)(*(void *)(v765 - 8) + 64));
              }
              else
              {
                v2661(v2579, v764, v2674);
                __swift_storeEnumTagSinglePayload((uint64_t)v2579, 0, 1, v2674);
              }
              uint64_t v819 = *(int *)(v506 + 144);
              uint64_t v820 = (char *)v504 + v819;
              uint64_t v821 = (char *)v505 + v819;
              if (__swift_getEnumTagSinglePayload((uint64_t)v505 + v819, 1, v2674))
              {
                uint64_t v822 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v820, v821, *(void *)(*(void *)(v822 - 8) + 64));
              }
              else
              {
                v2661(v820, v821, v2674);
                __swift_storeEnumTagSinglePayload((uint64_t)v820, 0, 1, v2674);
              }
              uint64_t v345 = v2612;
              __swift_storeEnumTagSinglePayload((uint64_t)v504, 0, 1, v506);
              uint64_t v346 = v2635;
            }
            uint64_t v831 = v346[6];
            uint64_t v832 = (void *)((char *)v344 + v831);
            uint64_t v833 = (void *)((char *)v345 + v831);
            uint64_t v834 = type metadata accessor for TicketedTransportation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v833, 1, v834))
            {
              uint64_t v835 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v832, v833, *(void *)(*(void *)(v835 - 8) + 64));
            }
            else
            {
              uint64_t v836 = v833[1];
              *uint64_t v832 = *v833;
              v832[1] = v836;
              uint64_t v837 = v833[3];
              v832[2] = v833[2];
              v832[3] = v837;
              uint64_t v838 = v833[5];
              v832[4] = v833[4];
              v832[5] = v838;
              uint64_t v839 = v833[7];
              v832[6] = v833[6];
              v832[7] = v839;
              uint64_t v840 = v833[9];
              v832[8] = v833[8];
              v832[9] = v840;
              uint64_t v841 = v833[11];
              v832[10] = v833[10];
              v832[11] = v841;
              uint64_t v842 = v833[13];
              v832[12] = v833[12];
              v832[13] = v842;
              uint64_t v843 = v833[15];
              v832[14] = v833[14];
              v832[15] = v843;
              *((unsigned char *)v832 + 128) = *((unsigned char *)v833 + 128);
              *(_WORD *)((char *)v832 + 129) = *(_WORD *)((char *)v833 + 129);
              uint64_t v844 = v833[18];
              v832[17] = v833[17];
              v832[18] = v844;
              uint64_t v845 = v833[20];
              v832[19] = v833[19];
              v832[20] = v845;
              uint64_t v846 = v833[22];
              v832[21] = v833[21];
              v832[22] = v846;
              uint64_t v847 = v833[24];
              v832[23] = v833[23];
              v832[24] = v847;
              uint64_t v2563 = (void *)v833[26];
              v832[25] = v833[25];
              v832[26] = v2563;
              uint64_t v848 = v833[28];
              v832[27] = v833[27];
              v832[28] = v848;
              uint64_t v849 = v833[30];
              v832[29] = v833[29];
              v832[30] = v849;
              uint64_t v850 = v833[32];
              v832[31] = v833[31];
              v832[32] = v850;
              uint64_t v851 = v833[34];
              v832[33] = v833[33];
              v832[34] = v851;
              uint64_t v852 = v833[36];
              uint64_t v853 = v833[35];
              *((unsigned char *)v832 + 296) = *((unsigned char *)v833 + 296);
              v832[35] = v853;
              v832[36] = v852;
              uint64_t v854 = *(int *)(v834 + 112);
              uint64_t v2580 = (char *)v832 + v854;
              long long v855 = (char *)v833 + v854;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v855, 1, v2674))
              {
                uint64_t v856 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2580, v855, *(void *)(*(void *)(v856 - 8) + 64));
              }
              else
              {
                v2661(v2580, v855, v2674);
                __swift_storeEnumTagSinglePayload((uint64_t)v2580, 0, 1, v2674);
              }
              uint64_t v909 = v834;
              uint64_t v910 = *(int *)(v834 + 116);
              uint64_t v911 = (char *)v832 + v910;
              uint64_t v912 = (char *)v833 + v910;
              if (__swift_getEnumTagSinglePayload((uint64_t)v833 + v910, 1, v2674))
              {
                uint64_t v913 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v911, v912, *(void *)(*(void *)(v913 - 8) + 64));
              }
              else
              {
                v2661(v911, v912, v2674);
                __swift_storeEnumTagSinglePayload((uint64_t)v911, 0, 1, v2674);
              }
              uint64_t v345 = v2612;
              __swift_storeEnumTagSinglePayload((uint64_t)v832, 0, 1, v909);
              uint64_t v346 = v2635;
            }
            uint64_t v924 = v346[7];
            uint64_t v925 = (void *)((char *)v344 + v924);
            long long v926 = (void *)((char *)v345 + v924);
            long long v927 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v926, 1, (uint64_t)v927))
            {
              uint64_t v928 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v925, v926, *(void *)(*(void *)(v928 - 8) + 64));
            }
            else
            {
              uint64_t v929 = v926[1];
              *uint64_t v925 = *v926;
              v925[1] = v929;
              uint64_t v930 = v926[3];
              v925[2] = v926[2];
              v925[3] = v930;
              uint64_t v931 = v926[5];
              v925[4] = v926[4];
              v925[5] = v931;
              uint64_t v932 = v926[7];
              v925[6] = v926[6];
              v925[7] = v932;
              uint64_t v933 = v926[9];
              v925[8] = v926[8];
              v925[9] = v933;
              uint64_t v934 = v926[11];
              v925[10] = v926[10];
              v925[11] = v934;
              uint64_t v935 = v926[13];
              v925[12] = v926[12];
              v925[13] = v935;
              uint64_t v936 = v926[15];
              v925[14] = v926[14];
              v925[15] = v936;
              *((unsigned char *)v925 + 128) = *((unsigned char *)v926 + 128);
              *(_WORD *)((char *)v925 + 129) = *(_WORD *)((char *)v926 + 129);
              uint64_t v937 = v926[18];
              v925[17] = v926[17];
              v925[18] = v937;
              uint64_t v938 = v926[20];
              v925[19] = v926[19];
              v925[20] = v938;
              uint64_t v939 = v926[22];
              v925[21] = v926[21];
              v925[22] = v939;
              uint64_t v2517 = v926[24];
              v925[23] = v926[23];
              v925[24] = v2517;
              uint64_t v940 = v926[26];
              v925[25] = v926[25];
              v925[26] = v940;
              uint64_t v941 = v926[28];
              v925[27] = v926[27];
              v925[28] = v941;
              uint64_t v2564 = (void *)v926[30];
              v925[29] = v926[29];
              v925[30] = v2564;
              uint64_t v942 = v926[32];
              v925[31] = v926[31];
              v925[32] = v942;
              uint64_t v943 = v926[34];
              v925[33] = v926[33];
              v925[34] = v943;
              uint64_t v944 = v926[36];
              uint64_t v945 = v926[35];
              *((unsigned char *)v925 + 296) = *((unsigned char *)v926 + 296);
              v925[35] = v945;
              v925[36] = v944;
              uint64_t v946 = v926[39];
              v925[38] = v926[38];
              v925[39] = v946;
              uint64_t v947 = v927[29];
              uint64_t v2582 = (char *)v925 + v947;
              long long v948 = (char *)v926 + v947;
              uint64_t v949 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v948, 1, v949))
              {
                uint64_t v950 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2582, v948, *(void *)(*(void *)(v950 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v949 - 8) + 16))(v2582, v948, v949);
                __swift_storeEnumTagSinglePayload((uint64_t)v2582, 0, 1, v949);
              }
              uint64_t v1005 = v927[30];
              uint64_t v1006 = (void *)((char *)v925 + v1005);
              uint64_t v1007 = (void *)((char *)v926 + v1005);
              uint64_t v1008 = v1007[1];
              *uint64_t v1006 = *v1007;
              v1006[1] = v1008;
              uint64_t v1009 = v927[31];
              uint64_t v1010 = (char *)v925 + v1009;
              uint64_t v1011 = (char *)v926 + v1009;
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1011, 1, v2674))
              {
                uint64_t v1012 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1010, v1011, *(void *)(*(void *)(v1012 - 8) + 64));
              }
              else
              {
                v2661(v1010, v1011, v2674);
                __swift_storeEnumTagSinglePayload((uint64_t)v1010, 0, 1, v2674);
              }
              uint64_t v1029 = v927[32];
              uint64_t v1030 = (char *)v925 + v1029;
              uint64_t v1031 = (char *)v926 + v1029;
              if (__swift_getEnumTagSinglePayload((uint64_t)v926 + v1029, 1, v2674))
              {
                uint64_t v1032 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1030, v1031, *(void *)(*(void *)(v1032 - 8) + 64));
              }
              else
              {
                v2661(v1030, v1031, v2674);
                __swift_storeEnumTagSinglePayload((uint64_t)v1030, 0, 1, v2674);
              }
              uint64_t v345 = v2612;
              __swift_storeEnumTagSinglePayload((uint64_t)v925, 0, 1, (uint64_t)v927);
              uint64_t v346 = v2635;
            }
            uint64_t v1041 = v346[8];
            long long v1042 = (void *)((char *)v344 + v1041);
            uint64_t v1043 = (void *)((char *)v345 + v1041);
            uint64_t v1044 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1043, 1, v1044))
            {
              uint64_t v1045 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v1042, v1043, *(void *)(*(void *)(v1045 - 8) + 64));
            }
            else
            {
              uint64_t v1046 = v1043[1];
              *long long v1042 = *v1043;
              v1042[1] = v1046;
              uint64_t v1047 = v1043[3];
              v1042[2] = v1043[2];
              v1042[3] = v1047;
              uint64_t v1048 = v1043[5];
              v1042[4] = v1043[4];
              v1042[5] = v1048;
              uint64_t v1049 = v1043[7];
              v1042[6] = v1043[6];
              v1042[7] = v1049;
              uint64_t v1050 = v1043[9];
              v1042[8] = v1043[8];
              v1042[9] = v1050;
              uint64_t v1051 = v1043[11];
              v1042[10] = v1043[10];
              v1042[11] = v1051;
              uint64_t v1052 = v1043[13];
              v1042[12] = v1043[12];
              v1042[13] = v1052;
              uint64_t v1053 = v1043[15];
              v1042[14] = v1043[14];
              v1042[15] = v1053;
              *((unsigned char *)v1042 + 128) = *((unsigned char *)v1043 + 128);
              *(_WORD *)((char *)v1042 + 129) = *(_WORD *)((char *)v1043 + 129);
              uint64_t v1054 = v1043[18];
              v1042[17] = v1043[17];
              v1042[18] = v1054;
              uint64_t v1055 = v1043[20];
              v1042[19] = v1043[19];
              v1042[20] = v1055;
              uint64_t v1056 = v1043[22];
              v1042[21] = v1043[21];
              v1042[22] = v1056;
              uint64_t v1057 = v1043[24];
              v1042[23] = v1043[23];
              v1042[24] = v1057;
              uint64_t v1058 = v1043[26];
              v1042[25] = v1043[25];
              v1042[26] = v1058;
              uint64_t v1059 = v1043[28];
              v1042[27] = v1043[27];
              v1042[28] = v1059;
              uint64_t v1060 = v1043[30];
              v1042[29] = v1043[29];
              v1042[30] = v1060;
              uint64_t v1061 = v1043[32];
              v1042[31] = v1043[31];
              v1042[32] = v1061;
              uint64_t v1063 = v1043[33];
              uint64_t v1062 = v1043[34];
              *((unsigned char *)v1042 + 280) = *((unsigned char *)v1043 + 280);
              v1042[33] = v1063;
              v1042[34] = v1062;
              uint64_t v1064 = v1043[37];
              v1042[36] = v1043[36];
              v1042[37] = v1064;
              uint64_t v1065 = *(int *)(v1044 + 108);
              uint64_t v2584 = (char *)v1042 + v1065;
              uint64_t v1066 = (char *)v1043 + v1065;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1066, 1, v2674))
              {
                uint64_t v1067 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2584, v1066, *(void *)(*(void *)(v1067 - 8) + 64));
              }
              else
              {
                v2661(v2584, v1066, v2674);
                __swift_storeEnumTagSinglePayload((uint64_t)v2584, 0, 1, v2674);
              }
              uint64_t v1123 = v1044;
              uint64_t v1124 = *(int *)(v1044 + 112);
              uint64_t v1125 = (char *)v1042 + v1124;
              uint64_t v1126 = (char *)v1043 + v1124;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1043 + v1124, 1, v2674))
              {
                uint64_t v1127 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1125, v1126, *(void *)(*(void *)(v1127 - 8) + 64));
              }
              else
              {
                v2661(v1125, v1126, v2674);
                __swift_storeEnumTagSinglePayload((uint64_t)v1125, 0, 1, v2674);
              }
              uint64_t v345 = v2612;
              __swift_storeEnumTagSinglePayload((uint64_t)v1042, 0, 1, v1123);
              uint64_t v346 = v2635;
            }
            uint64_t v1138 = v346[9];
            uint64_t v1139 = (void *)((char *)v344 + v1138);
            uint64_t v1140 = (void *)((char *)v345 + v1138);
            uint64_t v1141 = type metadata accessor for Party(0);
            uint64_t v2585 = v344;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1140, 1, v1141))
            {
              uint64_t v1142 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v1139, v1140, *(void *)(*(void *)(v1142 - 8) + 64));
            }
            else
            {
              uint64_t v1143 = v1140[1];
              *uint64_t v1139 = *v1140;
              v1139[1] = v1143;
              uint64_t v1144 = v1140[3];
              v1139[2] = v1140[2];
              v1139[3] = v1144;
              uint64_t v1145 = v1140[5];
              v1139[4] = v1140[4];
              v1139[5] = v1145;
              uint64_t v1146 = v1140[7];
              v1139[6] = v1140[6];
              v1139[7] = v1146;
              uint64_t v1147 = v1140[9];
              v1139[8] = v1140[8];
              v1139[9] = v1147;
              uint64_t v1148 = v1140[11];
              v1139[10] = v1140[10];
              v1139[11] = v1148;
              uint64_t v1149 = v1140[13];
              v1139[12] = v1140[12];
              v1139[13] = v1149;
              uint64_t v1150 = v1140[15];
              v1139[14] = v1140[14];
              v1139[15] = v1150;
              *((unsigned char *)v1139 + 128) = *((unsigned char *)v1140 + 128);
              *(_WORD *)((char *)v1139 + 129) = *(_WORD *)((char *)v1140 + 129);
              uint64_t v1151 = v1140[18];
              v1139[17] = v1140[17];
              v1139[18] = v1151;
              uint64_t v1152 = v1140[20];
              v1139[19] = v1140[19];
              v1139[20] = v1152;
              uint64_t v1153 = v1140[22];
              v1139[21] = v1140[21];
              v1139[22] = v1153;
              uint64_t v1154 = v1140[24];
              v1139[23] = v1140[23];
              v1139[24] = v1154;
              uint64_t v1155 = v1140[26];
              v1139[25] = v1140[25];
              v1139[26] = v1155;
              uint64_t v1156 = v1140[28];
              v1139[27] = v1140[27];
              v1139[28] = v1156;
              uint64_t v1157 = v1140[30];
              v1139[29] = v1140[29];
              v1139[30] = v1157;
              v1139[31] = v1140[31];
              uint64_t v1158 = *(int *)(v1141 + 96);
              uint64_t v2566 = (char *)v1139 + v1158;
              uint64_t v1159 = (char *)v1140 + v1158;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1159, 1, v2674))
              {
                uint64_t v1160 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2566, v1159, *(void *)(*(void *)(v1160 - 8) + 64));
              }
              else
              {
                v2661(v2566, v1159, v2674);
                __swift_storeEnumTagSinglePayload((uint64_t)v2566, 0, 1, v2674);
              }
              uint64_t v1210 = v1141;
              uint64_t v1211 = *(int *)(v1141 + 100);
              uint64_t v1212 = (char *)v1139 + v1211;
              uint64_t v1213 = (char *)v1140 + v1211;
              uint64_t v344 = v2585;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1140 + v1211, 1, v2674))
              {
                uint64_t v1214 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1212, v1213, *(void *)(*(void *)(v1214 - 8) + 64));
              }
              else
              {
                v2661(v1212, v1213, v2674);
                __swift_storeEnumTagSinglePayload((uint64_t)v1212, 0, 1, v2674);
              }
              uint64_t v1225 = *(int *)(v1210 + 104);
              uint64_t v1226 = (char *)v1139 + v1225;
              uint64_t v1227 = (char *)v1140 + v1225;
              uint64_t v1228 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1227, 1, v1228))
              {
                uint64_t v1229 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1226, v1227, *(void *)(*(void *)(v1229 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1228 - 8) + 16))(v1226, v1227, v1228);
                __swift_storeEnumTagSinglePayload((uint64_t)v1226, 0, 1, v1228);
              }
              uint64_t v345 = v2612;
              __swift_storeEnumTagSinglePayload((uint64_t)v1139, 0, 1, v1210);
              uint64_t v346 = v2635;
            }
            uint64_t v1239 = v346[10];
            uint64_t v1240 = (void *)((char *)v344 + v1239);
            uint64_t v1241 = (void *)((char *)v345 + v1239);
            uint64_t v1242 = type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1241, 1, v1242))
            {
              uint64_t v1243 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1240, v1241, *(void *)(*(void *)(v1243 - 8) + 64));
            }
            else
            {
              uint64_t v1244 = v1241[1];
              *uint64_t v1240 = *v1241;
              v1240[1] = v1244;
              uint64_t v1245 = v1241[3];
              v1240[2] = v1241[2];
              v1240[3] = v1245;
              uint64_t v1246 = v1241[5];
              v1240[4] = v1241[4];
              v1240[5] = v1246;
              uint64_t v1247 = v1241[7];
              v1240[6] = v1241[6];
              v1240[7] = v1247;
              uint64_t v1248 = v1241[9];
              v1240[8] = v1241[8];
              v1240[9] = v1248;
              uint64_t v1249 = v1241[11];
              v1240[10] = v1241[10];
              v1240[11] = v1249;
              uint64_t v1250 = v1241[13];
              v1240[12] = v1241[12];
              v1240[13] = v1250;
              uint64_t v1251 = v1241[15];
              v1240[14] = v1241[14];
              v1240[15] = v1251;
              *((unsigned char *)v1240 + 128) = *((unsigned char *)v1241 + 128);
              *(_WORD *)((char *)v1240 + 129) = *(_WORD *)((char *)v1241 + 129);
              uint64_t v1252 = v1241[18];
              v1240[17] = v1241[17];
              v1240[18] = v1252;
              uint64_t v1253 = v1241[20];
              v1240[19] = v1241[19];
              v1240[20] = v1253;
              uint64_t v1254 = v1241[22];
              v1240[21] = v1241[21];
              v1240[22] = v1254;
              uint64_t v1255 = v1241[24];
              v1240[23] = v1241[23];
              v1240[24] = v1255;
              uint64_t v1256 = v1241[26];
              v1240[25] = v1241[25];
              v1240[26] = v1256;
              v1240[27] = v1241[27];
              uint64_t v2567 = (int *)v1242;
              uint64_t v1257 = *(int *)(v1242 + 88);
              uint64_t v2554 = (char *)v1240 + v1257;
              uint64_t v2523 = (char *)v1241 + v1257;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2523, 1, v2674))
              {
                uint64_t v1258 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2554, v2523, *(void *)(*(void *)(v1258 - 8) + 64));
              }
              else
              {
                v2661(v2554, v2523, v2674);
                __swift_storeEnumTagSinglePayload((uint64_t)v2554, 0, 1, v2674);
              }
              uint64_t v1299 = *(int *)(v1242 + 92);
              uint64_t v1300 = (char *)v1240 + v1299;
              uint64_t v1301 = (char *)v1241 + v1299;
              uint64_t v338 = v2686;
              uint64_t v344 = v2585;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1241 + v1299, 1, v2674))
              {
                uint64_t v1302 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1300, v1301, *(void *)(*(void *)(v1302 - 8) + 64));
              }
              else
              {
                v2661(v1300, v1301, v2674);
                __swift_storeEnumTagSinglePayload((uint64_t)v1300, 0, 1, v2674);
              }
              uint64_t v1311 = v2567[24];
              uint64_t v1312 = (char *)v1240 + v1311;
              uint64_t v1313 = (char *)v1241 + v1311;
              *(void *)uint64_t v1312 = *(void *)v1313;
              v1312[8] = v1313[8];
              uint64_t v1314 = v2567[25];
              uint64_t v1315 = (char *)v1240 + v1314;
              uint64_t v1316 = (char *)v1241 + v1314;
              uint64_t v1317 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1316, 1, v1317))
              {
                uint64_t v1318 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1315, v1316, *(void *)(*(void *)(v1318 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1317 - 8) + 16))(v1315, v1316, v1317);
                __swift_storeEnumTagSinglePayload((uint64_t)v1315, 0, 1, v1317);
              }
              uint64_t v345 = v2612;
              __swift_storeEnumTagSinglePayload((uint64_t)v1240, 0, 1, (uint64_t)v2567);
              uint64_t v346 = v2635;
            }
            uint64_t v1334 = v346[11];
            uint64_t v1335 = (void *)((char *)v344 + v1334);
            uint64_t v1336 = (void *)((char *)v345 + v1334);
            v1337 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1336, 1, (uint64_t)v1337))
            {
              uint64_t v1338 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1335, v1336, *(void *)(*(void *)(v1338 - 8) + 64));
            }
            else
            {
              uint64_t v1339 = v1336[1];
              *uint64_t v1335 = *v1336;
              v1335[1] = v1339;
              uint64_t v1340 = v1336[3];
              v1335[2] = v1336[2];
              v1335[3] = v1340;
              uint64_t v1341 = v1336[5];
              v1335[4] = v1336[4];
              v1335[5] = v1341;
              uint64_t v1342 = v1336[7];
              v1335[6] = v1336[6];
              v1335[7] = v1342;
              uint64_t v1343 = v1336[9];
              v1335[8] = v1336[8];
              v1335[9] = v1343;
              uint64_t v1344 = v1336[11];
              v1335[10] = v1336[10];
              v1335[11] = v1344;
              *((unsigned char *)v1335 + 96) = *((unsigned char *)v1336 + 96);
              uint64_t v1345 = v1336[14];
              v1335[13] = v1336[13];
              v1335[14] = v1345;
              uint64_t v1346 = v1337[13];
              uint64_t v2569 = (char *)v1335 + v1346;
              uint64_t v1347 = (char *)v1336 + v1346;
              __dsta = (void *)type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1347, 1, (uint64_t)__dsta))
              {
                uint64_t v1348 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2569, v1347, *(void *)(*(void *)(v1348 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(__dsta - 1) + 16))(v2569, v1347, __dsta);
                __swift_storeEnumTagSinglePayload((uint64_t)v2569, 0, 1, (uint64_t)__dsta);
              }
              uint64_t v1379 = v1337[14];
              uint64_t v1380 = (char *)v1335 + v1379;
              v1381 = (char *)v1336 + v1379;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1336 + v1379, 1, (uint64_t)__dsta))
              {
                uint64_t v1382 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1380, v1381, *(void *)(*(void *)(v1382 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(__dsta - 1) + 16))(v1380, v1381, __dsta);
                __swift_storeEnumTagSinglePayload((uint64_t)v1380, 0, 1, (uint64_t)__dsta);
              }
              uint64_t v1391 = v1337[15];
              v1392 = (void *)((char *)v1335 + v1391);
              uint64_t v1393 = (void *)((char *)v1336 + v1391);
              uint64_t v1394 = v1393[1];
              void *v1392 = *v1393;
              v1392[1] = v1394;
              uint64_t v1395 = v1337[16];
              v1396 = (void *)((char *)v1335 + v1395);
              uint64_t v1397 = (void *)((char *)v1336 + v1395);
              uint64_t v1398 = v1397[1];
              void *v1396 = *v1397;
              v1396[1] = v1398;
              uint64_t v1399 = v1337[17];
              uint64_t v1400 = (void *)((char *)v1335 + v1399);
              uint64_t v1401 = (void *)((char *)v1336 + v1399);
              uint64_t v1402 = v1401[1];
              void *v1400 = *v1401;
              v1400[1] = v1402;
              uint64_t v1403 = v1337[18];
              uint64_t v2570 = (char *)v1335 + v1403;
              uint64_t v1404 = (char *)v1336 + v1403;
              uint64_t v1405 = type metadata accessor for DateComponents();
              v1406 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1405 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1406(v2570, v1404, v1405);
              v1406((char *)v1335 + v1337[19], (char *)v1336 + v1337[19], v1405);
              uint64_t v1407 = v1337[20];
              uint64_t v1408 = (void *)((char *)v1335 + v1407);
              uint64_t v1409 = (void *)((char *)v1336 + v1407);
              uint64_t v1410 = v1409[1];
              *uint64_t v1408 = *v1409;
              v1408[1] = v1410;
              uint64_t v1411 = v1337[21];
              uint64_t v1412 = (void *)((char *)v1335 + v1411);
              uint64_t v1413 = (void *)((char *)v1336 + v1411);
              uint64_t v1414 = v1413[1];
              *uint64_t v1412 = *v1413;
              v1412[1] = v1414;
              uint64_t v1415 = v1337[22];
              uint64_t v1416 = (void *)((char *)v1335 + v1415);
              uint64_t v1417 = (void *)((char *)v1336 + v1415);
              uint64_t v2547 = v1417[1];
              *uint64_t v1416 = *v1417;
              v1416[1] = v2547;
              uint64_t v1418 = v1337[23];
              uint64_t v1419 = (void *)((char *)v1335 + v1418);
              uint64_t v1420 = (void *)((char *)v1336 + v1418);
              uint64_t v1421 = v1420[1];
              *uint64_t v1419 = *v1420;
              v1419[1] = v1421;
              uint64_t v1422 = v1337[24];
              uint64_t v1423 = (void *)((char *)v1335 + v1422);
              v1424 = (void *)((char *)v1336 + v1422);
              v2571 = (void *)v1424[1];
              *uint64_t v1423 = *v1424;
              v1423[1] = v2571;
              uint64_t v1425 = v1337[25];
              uint64_t v1426 = (void *)((char *)v1335 + v1425);
              v1427 = (void *)((char *)v1336 + v1425);
              uint64_t v2556 = (void *)v1427[1];
              *uint64_t v1426 = *v1427;
              v1426[1] = v2556;
              uint64_t v1428 = v1337[26];
              uint64_t v1429 = (void *)((char *)v1335 + v1428);
              v1430 = (void *)((char *)v1336 + v1428);
              __dstd = (void *)v1430[1];
              *uint64_t v1429 = *v1430;
              v1429[1] = __dstd;
              uint64_t v1431 = v1337[27];
              uint64_t v1432 = (void *)((char *)v1335 + v1431);
              v1433 = (void *)((char *)v1336 + v1431);
              uint64_t v2535 = v1433[1];
              *uint64_t v1432 = *v1433;
              v1432[1] = v2535;
              uint64_t v1434 = v1337[28];
              uint64_t v1435 = (void *)((char *)v1335 + v1434);
              v1436 = (void *)((char *)v1336 + v1434);
              uint64_t v2532 = v1436[1];
              *uint64_t v1435 = *v1436;
              v1435[1] = v2532;
              uint64_t v1437 = v1337[29];
              uint64_t v1438 = (void *)((char *)v1335 + v1437);
              v1439 = (void *)((char *)v1336 + v1437);
              uint64_t v2529 = v1439[1];
              *uint64_t v1438 = *v1439;
              v1438[1] = v2529;
              uint64_t v1440 = v1337[30];
              uint64_t v1441 = (void *)((char *)v1335 + v1440);
              v1442 = (void *)((char *)v1336 + v1440);
              uint64_t v2526 = v1442[1];
              *uint64_t v1441 = *v1442;
              v1441[1] = v2526;
              uint64_t v1443 = v1337[31];
              uint64_t v1444 = (void *)((char *)v1335 + v1443);
              v1445 = (void *)((char *)v1336 + v1443);
              uint64_t v2521 = v1445[1];
              *uint64_t v1444 = *v1445;
              v1444[1] = v2521;
              uint64_t v1446 = v1337[32];
              uint64_t v1447 = (void *)((char *)v1335 + v1446);
              v1448 = (void *)((char *)v1336 + v1446);
              uint64_t v2519 = v1448[1];
              *uint64_t v1447 = *v1448;
              v1447[1] = v2519;
              *(void *)((char *)v1335 + v1337[33]) = *(void *)((char *)v1336 + v1337[33]);
              *(void *)((char *)v1335 + v1337[34]) = *(void *)((char *)v1336 + v1337[34]);
              uint64_t v1449 = v1337[35];
              uint64_t v1450 = (void *)((char *)v1335 + v1449);
              v1451 = (void *)((char *)v1336 + v1449);
              uint64_t v1452 = v1451[1];
              *uint64_t v1450 = *v1451;
              v1450[1] = v1452;
              uint64_t v1453 = v1337[36];
              v1454 = (void *)((char *)v1335 + v1453);
              v1455 = (void *)((char *)v1336 + v1453);
              uint64_t v1456 = v1455[1];
              void *v1454 = *v1455;
              v1454[1] = v1456;
              uint64_t v1457 = v1337[37];
              v1458 = (void *)((char *)v1335 + v1457);
              uint64_t v1459 = (void *)((char *)v1336 + v1457);
              uint64_t v1460 = v1459[1];
              void *v1458 = *v1459;
              v1458[1] = v1460;
              uint64_t v1461 = v1337[38];
              uint64_t v2524 = (char *)v1335 + v1461;
              v1462 = (char *)v1336 + v1461;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1462, 1, v2674))
              {
                uint64_t v1463 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2524, v1462, *(void *)(*(void *)(v1463 - 8) + 64));
              }
              else
              {
                v2661(v2524, v1462, v2674);
                __swift_storeEnumTagSinglePayload((uint64_t)v2524, 0, 1, v2674);
              }
              uint64_t v1612 = v1337[39];
              v1613 = (void *)((char *)v1335 + v1612);
              uint64_t v1614 = (void *)((char *)v1336 + v1612);
              uint64_t v1615 = v1614[1];
              void *v1613 = *v1614;
              v1613[1] = v1615;
              uint64_t v1616 = v1337[40];
              v1617 = (void *)((char *)v1335 + v1616);
              uint64_t v1618 = (void *)((char *)v1336 + v1616);
              uint64_t v1619 = v1618[1];
              void *v1617 = *v1618;
              v1617[1] = v1619;
              uint64_t v1620 = v1337[41];
              v1621 = (char *)v1335 + v1620;
              uint64_t v1622 = (char *)v1336 + v1620;
              v1621[8] = v1622[8];
              *(void *)v1621 = *(void *)v1622;
              uint64_t v1623 = v1337[42];
              uint64_t v1624 = (void *)((char *)v1335 + v1623);
              v1625 = (void *)((char *)v1336 + v1623);
              uint64_t v1626 = v1625[1];
              void *v1624 = *v1625;
              v1624[1] = v1626;
              uint64_t v1627 = v1337[43];
              uint64_t v1628 = (char *)v1335 + v1627;
              uint64_t v1629 = (char *)v1336 + v1627;
              *(_OWORD *)uint64_t v1628 = *(_OWORD *)v1629;
              *(void *)(v1628 + 13) = *(void *)(v1629 + 13);
              uint64_t v1630 = v1337[44];
              uint64_t v1631 = (void *)((char *)v1335 + v1630);
              uint64_t v1632 = (void *)((char *)v1336 + v1630);
              uint64_t v1633 = v1632[1];
              *uint64_t v1631 = *v1632;
              v1631[1] = v1633;
              uint64_t v1634 = v1337[45];
              uint64_t v1635 = (void *)((char *)v1335 + v1634);
              uint64_t v1636 = (void *)((char *)v1336 + v1634);
              uint64_t v1637 = v1636[1];
              *uint64_t v1635 = *v1636;
              v1635[1] = v1637;
              uint64_t v1638 = v1337[46];
              uint64_t v1639 = (void *)((char *)v1335 + v1638);
              uint64_t v1640 = (void *)((char *)v1336 + v1638);
              uint64_t v1641 = v1640[1];
              *uint64_t v1639 = *v1640;
              v1639[1] = v1641;
              uint64_t v1642 = v1337[47];
              uint64_t v1643 = (void *)((char *)v1335 + v1642);
              uint64_t v1644 = (void *)((char *)v1336 + v1642);
              uint64_t v1645 = v1644[1];
              *uint64_t v1643 = *v1644;
              v1643[1] = v1645;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1335, 0, 1, (uint64_t)v1337);
              uint64_t v338 = v2686;
              uint64_t v344 = v2585;
              uint64_t v345 = v2612;
              uint64_t v346 = v2635;
            }
            uint64_t v1646 = v346[12];
            uint64_t v1647 = (void *)((char *)v344 + v1646);
            uint64_t v1648 = (void *)((char *)v345 + v1646);
            v1649 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1648, 1, (uint64_t)v1649))
            {
              uint64_t v1650 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1647, v1648, *(void *)(*(void *)(v1650 - 8) + 64));
            }
            else
            {
              uint64_t v1651 = v1648[1];
              *uint64_t v1647 = *v1648;
              v1647[1] = v1651;
              uint64_t v1652 = v1648[3];
              v1647[2] = v1648[2];
              v1647[3] = v1652;
              uint64_t v1653 = v1648[5];
              v1647[4] = v1648[4];
              v1647[5] = v1653;
              uint64_t v1654 = v1648[7];
              v1647[6] = v1648[6];
              v1647[7] = v1654;
              uint64_t v1655 = v1648[9];
              v1647[8] = v1648[8];
              v1647[9] = v1655;
              uint64_t v1656 = v1648[11];
              v1647[10] = v1648[10];
              v1647[11] = v1656;
              *((unsigned char *)v1647 + 96) = *((unsigned char *)v1648 + 96);
              uint64_t v1657 = v1648[14];
              v1647[13] = v1648[13];
              v1647[14] = v1657;
              uint64_t v1658 = v1648[16];
              v1647[15] = v1648[15];
              v1647[16] = v1658;
              uint64_t v1659 = v1649[14];
              v2574 = (char *)v1647 + v1659;
              v1660 = (char *)v1648 + v1659;
              uint64_t v2538 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1660, 1, v2538))
              {
                uint64_t v1661 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2574, v1660, *(void *)(*(void *)(v1661 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2538 - 8) + 16))(v2574, v1660, v2538);
                __swift_storeEnumTagSinglePayload((uint64_t)v2574, 0, 1, v2538);
              }
              uint64_t v1762 = v1649[15];
              uint64_t v1763 = (char *)v1647 + v1762;
              v1764 = (char *)v1648 + v1762;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1648 + v1762, 1, v2538))
              {
                uint64_t v1765 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1763, v1764, *(void *)(*(void *)(v1765 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2538 - 8) + 16))(v1763, v1764, v2538);
                __swift_storeEnumTagSinglePayload((uint64_t)v1763, 0, 1, v2538);
              }
              uint64_t v1774 = v1649[16];
              uint64_t v1775 = (void *)((char *)v1647 + v1774);
              v1776 = (void *)((char *)v1648 + v1774);
              uint64_t v1777 = v1776[1];
              *uint64_t v1775 = *v1776;
              v1775[1] = v1777;
              uint64_t v1778 = v1649[17];
              v1779 = (void *)((char *)v1647 + v1778);
              v1780 = (void *)((char *)v1648 + v1778);
              uint64_t v2575 = (void *)v1780[1];
              void *v1779 = *v1780;
              v1779[1] = v2575;
              uint64_t v1781 = v1649[18];
              uint64_t v1782 = (void *)((char *)v1647 + v1781);
              v1783 = (void *)((char *)v1648 + v1781);
              uint64_t v2559 = (void *)v1783[1];
              void *v1782 = *v1783;
              v1782[1] = v2559;
              uint64_t v1784 = v1649[19];
              uint64_t v1785 = (void *)((char *)v1647 + v1784);
              uint64_t v1786 = (void *)((char *)v1648 + v1784);
              uint64_t v2551 = v1786[1];
              *uint64_t v1785 = *v1786;
              v1785[1] = v2551;
              uint64_t v1787 = v1649[20];
              uint64_t v1788 = (void *)((char *)v1647 + v1787);
              uint64_t v1789 = (void *)((char *)v1648 + v1787);
              uint64_t v1790 = v1789[1];
              *uint64_t v1788 = *v1789;
              v1788[1] = v1790;
              *(void *)((char *)v1647 + v1649[21]) = *(void *)((char *)v1648 + v1649[21]);
              *(void *)((char *)v1647 + v1649[22]) = *(void *)((char *)v1648 + v1649[22]);
              uint64_t v1791 = v1649[23];
              uint64_t v1792 = (char *)v1647 + v1791;
              uint64_t v1793 = (char *)v1648 + v1791;
              *(void *)uint64_t v1792 = *(void *)v1793;
              v1792[8] = v1793[8];
              uint64_t v1794 = v1649[24];
              v1795 = (char *)v1647 + v1794;
              uint64_t v1796 = (char *)v1648 + v1794;
              *(void *)v1795 = *(void *)v1796;
              v1795[8] = v1796[8];
              uint64_t v1797 = v1649[25];
              v1798 = (void *)((char *)v1647 + v1797);
              v1799 = (void *)((char *)v1648 + v1797);
              uint64_t v1800 = v1799[1];
              void *v1798 = *v1799;
              v1798[1] = v1800;
              uint64_t v1801 = v1649[26];
              uint64_t v1802 = (void *)((char *)v1647 + v1801);
              uint64_t v1803 = (void *)((char *)v1648 + v1801);
              uint64_t v1804 = v1803[1];
              void *v1802 = *v1803;
              v1802[1] = v1804;
              uint64_t v1805 = v1649[27];
              uint64_t v1806 = (void *)((char *)v1647 + v1805);
              uint64_t v1807 = (void *)((char *)v1648 + v1805);
              uint64_t v1808 = v1807[1];
              *uint64_t v1806 = *v1807;
              v1806[1] = v1808;
              uint64_t v1809 = v1649[28];
              uint64_t v1810 = (void *)((char *)v1647 + v1809);
              uint64_t v1811 = (void *)((char *)v1648 + v1809);
              uint64_t v1812 = v1811[1];
              *uint64_t v1810 = *v1811;
              v1810[1] = v1812;
              uint64_t v1813 = v1649[29];
              uint64_t v1814 = (char *)v1647 + v1813;
              uint64_t v1815 = (char *)v1648 + v1813;
              *(void *)uint64_t v1814 = *(void *)v1815;
              v1814[8] = v1815[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1647, 0, 1, (uint64_t)v1649);
              uint64_t v338 = v2686;
              uint64_t v344 = v2585;
              uint64_t v345 = v2612;
              uint64_t v346 = v2635;
            }
            uint64_t v1816 = v346[13];
            uint64_t v1817 = (void *)((char *)v344 + v1816);
            uint64_t v1818 = (void *)((char *)v345 + v1816);
            v1819 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1818, 1, (uint64_t)v1819))
            {
              uint64_t v1820 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1817, v1818, *(void *)(*(void *)(v1820 - 8) + 64));
            }
            else
            {
              uint64_t v1821 = v1818[1];
              *uint64_t v1817 = *v1818;
              v1817[1] = v1821;
              uint64_t v1822 = v1818[3];
              v1817[2] = v1818[2];
              v1817[3] = v1822;
              uint64_t v1823 = v1818[5];
              v1817[4] = v1818[4];
              v1817[5] = v1823;
              uint64_t v1824 = v1818[7];
              v1817[6] = v1818[6];
              v1817[7] = v1824;
              uint64_t v1825 = v1818[9];
              v1817[8] = v1818[8];
              v1817[9] = v1825;
              uint64_t v1826 = v1818[11];
              v1817[10] = v1818[10];
              v1817[11] = v1826;
              *((unsigned char *)v1817 + 96) = *((unsigned char *)v1818 + 96);
              uint64_t v1827 = v1818[14];
              v1817[13] = v1818[13];
              v1817[14] = v1827;
              uint64_t v1828 = v1818[16];
              v1817[15] = v1818[15];
              v1817[16] = v1828;
              uint64_t v1829 = v1819[14];
              uint64_t v2628 = (char *)v1817 + v1829;
              uint64_t v1830 = (char *)v1818 + v1829;
              __dstc = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1830, 1, (uint64_t)__dstc))
              {
                uint64_t v1831 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2628, v1830, *(void *)(*(void *)(v1831 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(__dstc - 1) + 16))(v2628, v1830, __dstc);
                __swift_storeEnumTagSinglePayload((uint64_t)v2628, 0, 1, (uint64_t)__dstc);
              }
              uint64_t v1947 = v1819[15];
              uint64_t v1948 = (void *)((char *)v1817 + v1947);
              uint64_t v1949 = (void *)((char *)v1818 + v1947);
              uint64_t v1950 = v1949[1];
              *uint64_t v1948 = *v1949;
              v1948[1] = v1950;
              uint64_t v1951 = v1819[16];
              uint64_t v1952 = (void *)((char *)v1817 + v1951);
              uint64_t v1953 = (void *)((char *)v1818 + v1951);
              uint64_t v1954 = v1953[1];
              *uint64_t v1952 = *v1953;
              v1952[1] = v1954;
              uint64_t v1955 = v1819[17];
              uint64_t v1956 = (void *)((char *)v1817 + v1955);
              uint64_t v1957 = (void *)((char *)v1818 + v1955);
              uint64_t v1958 = v1957[1];
              *uint64_t v1956 = *v1957;
              v1956[1] = v1958;
              uint64_t v1959 = v1819[18];
              uint64_t v1960 = (void *)((char *)v1817 + v1959);
              uint64_t v1961 = (void *)((char *)v1818 + v1959);
              uint64_t v1962 = v1961[1];
              *uint64_t v1960 = *v1961;
              v1960[1] = v1962;
              uint64_t v1963 = v1819[19];
              uint64_t v1964 = (void *)((char *)v1817 + v1963);
              uint64_t v1965 = (void *)((char *)v1818 + v1963);
              uint64_t v1966 = v1965[1];
              *uint64_t v1964 = *v1965;
              v1964[1] = v1966;
              *(void *)((char *)v1817 + v1819[20]) = *(void *)((char *)v1818 + v1819[20]);
              uint64_t v1967 = v1819[21];
              uint64_t v1968 = (void *)((char *)v1817 + v1967);
              uint64_t v1969 = (void *)((char *)v1818 + v1967);
              uint64_t v1970 = v1969[1];
              *uint64_t v1968 = *v1969;
              v1968[1] = v1970;
              uint64_t v1971 = v1819[22];
              uint64_t v1972 = (void *)((char *)v1817 + v1971);
              uint64_t v1973 = (void *)((char *)v1818 + v1971);
              uint64_t v1974 = v1973[1];
              *uint64_t v1972 = *v1973;
              v1972[1] = v1974;
              uint64_t v1975 = v1819[23];
              uint64_t v1976 = (void *)((char *)v1817 + v1975);
              uint64_t v1977 = (void *)((char *)v1818 + v1975);
              uint64_t v1978 = v1977[1];
              *uint64_t v1976 = *v1977;
              v1976[1] = v1978;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1817, 0, 1, (uint64_t)v1819);
              uint64_t v338 = v2686;
              uint64_t v344 = v2585;
              uint64_t v346 = v2635;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v344, 0, 1, (uint64_t)v346);
            uint64_t v29 = v2713;
            uint64_t v28 = v2596;
          }
          uint64_t v1979 = v338[22];
          uint64_t v1980 = (void *)((char *)v29 + v1979);
          uint64_t v1981 = (void *)((char *)v28 + v1979);
          v1982 = (int *)type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1981, 1, (uint64_t)v1982))
          {
            uint64_t v1983 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v1980, v1981, *(void *)(*(void *)(v1983 - 8) + 64));
          }
          else
          {
            uint64_t v1984 = v1981[1];
            *uint64_t v1980 = *v1981;
            v1980[1] = v1984;
            uint64_t v1985 = v1981[3];
            v1980[2] = v1981[2];
            v1980[3] = v1985;
            uint64_t v1986 = v1981[5];
            v1980[4] = v1981[4];
            v1980[5] = v1986;
            uint64_t v1987 = v1981[7];
            v1980[6] = v1981[6];
            v1980[7] = v1987;
            uint64_t v1988 = v1981[9];
            v1980[8] = v1981[8];
            v1980[9] = v1988;
            uint64_t v1989 = v1981[11];
            v1980[10] = v1981[10];
            v1980[11] = v1989;
            uint64_t v1990 = v1982[10];
            uint64_t v1991 = (char *)v1980 + v1990;
            uint64_t v1992 = (char *)v1981 + v1990;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1992, 1, v2674))
            {
              uint64_t v1993 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1991, v1992, *(void *)(*(void *)(v1993 - 8) + 64));
            }
            else
            {
              v2661(v1991, v1992, v2674);
              __swift_storeEnumTagSinglePayload((uint64_t)v1991, 0, 1, v2674);
            }
            uint64_t v1994 = v1982[11];
            uint64_t v1995 = (char *)v1980 + v1994;
            uint64_t v1996 = (char *)v1981 + v1994;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1981 + v1994, 1, v2674))
            {
              uint64_t v1997 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1995, v1996, *(void *)(*(void *)(v1997 - 8) + 64));
            }
            else
            {
              v2661(v1995, v1996, v2674);
              __swift_storeEnumTagSinglePayload((uint64_t)v1995, 0, 1, v2674);
            }
            uint64_t v1998 = v1982[12];
            uint64_t v1999 = (void *)((char *)v1980 + v1998);
            uint64_t v2000 = (void *)((char *)v1981 + v1998);
            uint64_t v2001 = v2000[1];
            *uint64_t v1999 = *v2000;
            v1999[1] = v2001;
            uint64_t v2002 = v1982[13];
            uint64_t v2003 = (void *)((char *)v1980 + v2002);
            uint64_t v2004 = (void *)((char *)v1981 + v2002);
            uint64_t v2005 = v2004[1];
            *uint64_t v2003 = *v2004;
            v2003[1] = v2005;
            uint64_t v2006 = v1982[14];
            uint64_t v2007 = (void *)((char *)v1980 + v2006);
            uint64_t v2008 = (void *)((char *)v1981 + v2006);
            uint64_t v2009 = v2008[1];
            *uint64_t v2007 = *v2008;
            v2007[1] = v2009;
            uint64_t v2010 = v1982[15];
            uint64_t v2011 = (char *)v1980 + v2010;
            uint64_t v2012 = (char *)v1981 + v2010;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2012, 1, v2674))
            {
              uint64_t v2013 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2011, v2012, *(void *)(*(void *)(v2013 - 8) + 64));
            }
            else
            {
              v2661(v2011, v2012, v2674);
              __swift_storeEnumTagSinglePayload((uint64_t)v2011, 0, 1, v2674);
            }
            uint64_t v2014 = v1982[16];
            uint64_t v2015 = (void *)((char *)v1980 + v2014);
            uint64_t v2016 = (void *)((char *)v1981 + v2014);
            uint64_t v2017 = v2016[1];
            *uint64_t v2015 = *v2016;
            v2015[1] = v2017;
            uint64_t v2018 = v1982[17];
            uint64_t v2019 = (void *)((char *)v1980 + v2018);
            uint64_t v2020 = (void *)((char *)v1981 + v2018);
            uint64_t v2021 = v2020[1];
            *uint64_t v2019 = *v2020;
            v2019[1] = v2021;
            uint64_t v2022 = v1982[18];
            uint64_t v2023 = (void *)((char *)v1980 + v2022);
            uint64_t v2024 = (void *)((char *)v1981 + v2022);
            uint64_t v2025 = v2024[1];
            *uint64_t v2023 = *v2024;
            v2023[1] = v2025;
            uint64_t v2026 = v1982[19];
            uint64_t v2027 = (void *)((char *)v1980 + v2026);
            uint64_t v2028 = (void *)((char *)v1981 + v2026);
            uint64_t v2029 = v2028[1];
            *uint64_t v2027 = *v2028;
            v2027[1] = v2029;
            uint64_t v2030 = v1982[20];
            uint64_t v2031 = (void *)((char *)v1980 + v2030);
            uint64_t v2032 = (void *)((char *)v1981 + v2030);
            uint64_t v2033 = v2032[1];
            *uint64_t v2031 = *v2032;
            v2031[1] = v2033;
            uint64_t v2034 = v1982[21];
            uint64_t v2035 = (void *)((char *)v1980 + v2034);
            uint64_t v2036 = (void *)((char *)v1981 + v2034);
            uint64_t v2037 = v2036[1];
            *uint64_t v2035 = *v2036;
            v2035[1] = v2037;
            uint64_t v2038 = v1982[22];
            uint64_t v2039 = (void *)((char *)v1980 + v2038);
            uint64_t v2040 = (void *)((char *)v1981 + v2038);
            uint64_t v2041 = v2040[1];
            *uint64_t v2039 = *v2040;
            v2039[1] = v2041;
            uint64_t v2042 = v1982[23];
            uint64_t v2043 = (void *)((char *)v1980 + v2042);
            uint64_t v2044 = (void *)((char *)v1981 + v2042);
            uint64_t v2045 = v2044[1];
            *uint64_t v2043 = *v2044;
            v2043[1] = v2045;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1980, 0, 1, (uint64_t)v1982);
            uint64_t v338 = v2686;
          }
          uint64_t v2046 = v338[23];
          uint64_t v2047 = (void *)((char *)v2713 + v2046);
          uint64_t v2048 = (void *)((char *)v2596 + v2046);
          uint64_t v2049 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2048, 1, (uint64_t)v2049))
          {
            uint64_t v2050 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v2047, v2048, *(void *)(*(void *)(v2050 - 8) + 64));
          }
          else
          {
            uint64_t v2051 = v2048[1];
            *uint64_t v2047 = *v2048;
            v2047[1] = v2051;
            uint64_t v2052 = v2048[3];
            v2047[2] = v2048[2];
            v2047[3] = v2052;
            uint64_t v2053 = v2048[5];
            v2047[4] = v2048[4];
            v2047[5] = v2053;
            uint64_t v2054 = v2048[7];
            v2047[6] = v2048[6];
            v2047[7] = v2054;
            uint64_t v2055 = v2048[9];
            v2047[8] = v2048[8];
            v2047[9] = v2055;
            uint64_t v2056 = v2048[11];
            v2047[10] = v2048[10];
            v2047[11] = v2056;
            uint64_t v2057 = v2049[11];
            uint64_t v2644 = (char *)v2047 + v2057;
            v2058 = (char *)v2048 + v2057;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2058, 1, v2674))
            {
              uint64_t v2059 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2644, v2058, *(void *)(*(void *)(v2059 - 8) + 64));
            }
            else
            {
              v2661(v2644, v2058, v2674);
              __swift_storeEnumTagSinglePayload((uint64_t)v2644, 0, 1, v2674);
            }
            uint64_t v2060 = v2049[12];
            v2061 = (void *)((char *)v2047 + v2060);
            uint64_t v2062 = (void *)((char *)v2048 + v2060);
            uint64_t v2063 = v2062[1];
            void *v2061 = *v2062;
            v2061[1] = v2063;
            *(void *)((char *)v2047 + v2049[13]) = *(void *)((char *)v2048 + v2049[13]);
            uint64_t v2064 = v2049[14];
            v2065 = (char *)v2047 + v2064;
            uint64_t v2066 = (char *)v2048 + v2064;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v338 = v2686;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2066, 1, v2674))
            {
              uint64_t v2067 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2065, v2066, *(void *)(*(void *)(v2067 - 8) + 64));
            }
            else
            {
              v2661(v2065, v2066, v2674);
              __swift_storeEnumTagSinglePayload((uint64_t)v2065, 0, 1, v2674);
            }
            *(void *)((char *)v2047 + v2049[15]) = *(void *)((char *)v2048 + v2049[15]);
            *(void *)((char *)v2047 + v2049[16]) = *(void *)((char *)v2048 + v2049[16]);
            uint64_t v2068 = v2049[17];
            v2069 = (void *)((char *)v2047 + v2068);
            uint64_t v2070 = (void *)((char *)v2048 + v2068);
            uint64_t v2071 = v2070[1];
            void *v2069 = *v2070;
            v2069[1] = v2071;
            *(void *)((char *)v2047 + v2049[18]) = *(void *)((char *)v2048 + v2049[18]);
            *(void *)((char *)v2047 + v2049[19]) = *(void *)((char *)v2048 + v2049[19]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2047, 0, 1, (uint64_t)v2049);
          }
          uint64_t v2072 = v338[24];
          v2073 = (void *)((char *)v2713 + v2072);
          uint64_t v2074 = (void *)((char *)v2596 + v2072);
          uint64_t v2075 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2074, 1, (uint64_t)v2075))
          {
            uint64_t v2076 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v2073, v2074, *(void *)(*(void *)(v2076 - 8) + 64));
          }
          else
          {
            uint64_t v2077 = v2074[1];
            void *v2073 = *v2074;
            v2073[1] = v2077;
            uint64_t v2078 = v2074[3];
            v2073[2] = v2074[2];
            v2073[3] = v2078;
            uint64_t v2079 = v2074[5];
            v2073[4] = v2074[4];
            v2073[5] = v2079;
            uint64_t v2080 = v2074[7];
            v2073[6] = v2074[6];
            v2073[7] = v2080;
            uint64_t v2081 = v2075[8];
            uint64_t v2082 = (char *)v2073 + v2081;
            uint64_t v2083 = (char *)v2074 + v2081;
            uint64_t v2084 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2083, 1, v2084))
            {
              uint64_t v2085 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2082, v2083, *(void *)(*(void *)(v2085 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2084 - 8) + 16))(v2082, v2083, v2084);
              __swift_storeEnumTagSinglePayload((uint64_t)v2082, 0, 1, v2084);
            }
            uint64_t v2086 = v2075[9];
            v2087 = (void *)((char *)v2073 + v2086);
            uint64_t v2088 = (void *)((char *)v2074 + v2086);
            uint64_t v2089 = v2088[1];
            void *v2087 = *v2088;
            v2087[1] = v2089;
            uint64_t v2090 = v2075[10];
            v2091 = (void *)((char *)v2073 + v2090);
            uint64_t v2092 = (void *)((char *)v2074 + v2090);
            uint64_t v2093 = v2092[1];
            void *v2091 = *v2092;
            v2091[1] = v2093;
            uint64_t v2094 = v2075[11];
            v2095 = (void *)((char *)v2073 + v2094);
            uint64_t v2096 = (void *)((char *)v2074 + v2094);
            uint64_t v2097 = v2096[1];
            void *v2095 = *v2096;
            v2095[1] = v2097;
            uint64_t v2098 = v2075[12];
            v2099 = (char *)v2073 + v2098;
            uint64_t v2100 = (char *)v2074 + v2098;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v338 = v2686;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2100, 1, v2674))
            {
              uint64_t v2101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2099, v2100, *(void *)(*(void *)(v2101 - 8) + 64));
            }
            else
            {
              v2661(v2099, v2100, v2674);
              __swift_storeEnumTagSinglePayload((uint64_t)v2099, 0, 1, v2674);
            }
            uint64_t v2102 = v2075[13];
            v2103 = (char *)v2073 + v2102;
            uint64_t v2104 = (char *)v2074 + v2102;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2074 + v2102, 1, v2674))
            {
              uint64_t v2105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2103, v2104, *(void *)(*(void *)(v2105 - 8) + 64));
            }
            else
            {
              v2661(v2103, v2104, v2674);
              __swift_storeEnumTagSinglePayload((uint64_t)v2103, 0, 1, v2674);
            }
            uint64_t v2106 = v2075[14];
            v2107 = (char *)v2073 + v2106;
            uint64_t v2108 = (char *)v2074 + v2106;
            *(void *)v2107 = *(void *)v2108;
            v2107[8] = v2108[8];
            uint64_t v2109 = v2075[15];
            uint64_t v2110 = (void *)((char *)v2073 + v2109);
            v2111 = (void *)((char *)v2074 + v2109);
            uint64_t v2112 = v2111[1];
            void *v2110 = *v2111;
            v2110[1] = v2112;
            uint64_t v2113 = v2075[16];
            uint64_t v2114 = (void *)((char *)v2073 + v2113);
            v2115 = (void *)((char *)v2074 + v2113);
            uint64_t v2116 = v2115[1];
            void *v2114 = *v2115;
            v2114[1] = v2116;
            uint64_t v2117 = v2075[17];
            uint64_t v2118 = (void *)((char *)v2073 + v2117);
            v2119 = (void *)((char *)v2074 + v2117);
            uint64_t v2120 = v2119[1];
            void *v2118 = *v2119;
            v2118[1] = v2120;
            uint64_t v2121 = v2075[18];
            uint64_t v2122 = (void *)((char *)v2073 + v2121);
            v2123 = (void *)((char *)v2074 + v2121);
            uint64_t v2124 = v2123[1];
            void *v2122 = *v2123;
            v2122[1] = v2124;
            uint64_t v2125 = v2075[19];
            uint64_t v2126 = (void *)((char *)v2073 + v2125);
            v2127 = (void *)((char *)v2074 + v2125);
            uint64_t v2128 = v2127[1];
            void *v2126 = *v2127;
            v2126[1] = v2128;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2073, 0, 1, (uint64_t)v2075);
          }
          uint64_t v2129 = v338[25];
LABEL_544:
          uint64_t v17 = (uint64_t)v2713;
          v2493 = (void *)((char *)v2713 + v2129);
          uint64_t v14 = v2596;
          v2494 = (void *)((char *)v2596 + v2129);
          uint64_t v2495 = *(void *)((char *)v2596 + v2129 + 8);
          if (v2495)
          {
            void *v2493 = *v2494;
            v2493[1] = v2495;
            uint64_t v2496 = v2494[3];
            v2493[2] = v2494[2];
            v2493[3] = v2496;
            uint64_t v2497 = v2494[5];
            v2493[4] = v2494[4];
            v2493[5] = v2497;
            uint64_t v2498 = v2494[7];
            v2493[6] = v2494[6];
            v2493[7] = v2498;
            uint64_t v2499 = v2494[9];
            v2493[8] = v2494[8];
            v2493[9] = v2499;
            uint64_t v2500 = v2494[11];
            v2493[10] = v2494[10];
            v2493[11] = v2500;
            uint64_t v2645 = v2494[13];
            v2493[12] = v2494[12];
            v2493[13] = v2645;
            uint64_t v2672 = v2494[15];
            v2493[14] = v2494[14];
            v2493[15] = v2672;
            uint64_t v2699 = v2494[17];
            v2493[16] = v2494[16];
            v2493[17] = v2699;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v14 = v2596;
            swift_bridgeObjectRetain();
            uint64_t v17 = (uint64_t)v2713;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_546:
            swift_bridgeObjectRetain();
          }
          else
          {
            memcpy(v2493, v2494, 0x90uLL);
          }
          uint64_t v16 = a1;
          uint64_t v13 = v2700;
          goto LABEL_549;
      }
    }
    uint64_t v2508 = a3[22];
    uint64_t v2509 = a3[23];
    v2510 = (uint64_t *)((char *)v16 + v2508);
    v2511 = (uint64_t *)((char *)a2 + v2508);
    uint64_t v2512 = v2511[1];
    void *v2510 = *v2511;
    v2510[1] = v2512;
    *(uint64_t *)((char *)v16 + v2509) = *(uint64_t *)((char *)a2 + v2509);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v16;
}

uint64_t destroy for SearchEntity(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 84);
  uint64_t v5 = type metadata accessor for SearchResult(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v6 = (int *)type metadata accessor for EmailDocument(0);
        uint64_t v7 = v4 + v6[12];
        uint64_t v8 = type metadata accessor for Date();
        uint64_t v288 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
        v288(v7, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v4 + v6[19]))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v9 = v4 + v6[21];
        uint64_t v10 = type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v9, 1, v10))
        {
          swift_bridgeObjectRelease();
          uint64_t v291 = (int *)v10;
          uint64_t v11 = v9 + *(int *)(v10 + 20);
          uint64_t v12 = type metadata accessor for RentalCarReservation(0);
          if (!__swift_getEnumTagSinglePayload(v11, 1, v12))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v13 = v11 + *(int *)(v12 + 140);
            if (!__swift_getEnumTagSinglePayload(v13, 1, v8)) {
              v288(v13, v8);
            }
            uint64_t v14 = v11 + *(int *)(v12 + 144);
            if (!__swift_getEnumTagSinglePayload(v14, 1, v8)) {
              v288(v14, v8);
            }
          }
          uint64_t v15 = v9 + v291[6];
          uint64_t v16 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v15, 1, v16))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v17 = v15 + *(int *)(v16 + 112);
            if (!__swift_getEnumTagSinglePayload(v17, 1, v8)) {
              v288(v17, v8);
            }
            uint64_t v18 = v15 + *(int *)(v16 + 116);
            if (!__swift_getEnumTagSinglePayload(v18, 1, v8)) {
              v288(v18, v8);
            }
          }
          uint64_t v19 = v9 + v291[7];
          uint64_t v20 = (int *)type metadata accessor for TicketedShow(0);
          uint64_t v284 = v9;
          if (!__swift_getEnumTagSinglePayload(v19, 1, (uint64_t)v20))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v21 = v19 + v20[29];
            uint64_t v22 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v21, 1, v22)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
            }
            swift_bridgeObjectRelease();
            uint64_t v23 = v19 + v20[31];
            if (!__swift_getEnumTagSinglePayload(v23, 1, v8)) {
              v288(v23, v8);
            }
            uint64_t v24 = v19 + v20[32];
            uint64_t v9 = v284;
            if (!__swift_getEnumTagSinglePayload(v24, 1, v8)) {
              v288(v24, v8);
            }
          }
          uint64_t v25 = v9 + v291[8];
          uint64_t v26 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v25, 1, v26))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v27 = v25 + *(int *)(v26 + 108);
            if (!__swift_getEnumTagSinglePayload(v27, 1, v8)) {
              v288(v27, v8);
            }
            uint64_t v28 = v25 + *(int *)(v26 + 112);
            if (!__swift_getEnumTagSinglePayload(v28, 1, v8)) {
              v288(v28, v8);
            }
          }
          uint64_t v29 = v9 + v291[9];
          uint64_t v30 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v29, 1, (uint64_t)v30))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v31 = v29 + v30[24];
            if (!__swift_getEnumTagSinglePayload(v31, 1, v8)) {
              v288(v31, v8);
            }
            uint64_t v32 = v29 + v30[25];
            if (!__swift_getEnumTagSinglePayload(v32, 1, v8)) {
              v288(v32, v8);
            }
            uint64_t v33 = v29 + v30[26];
            uint64_t v34 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v33, 1, v34)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
            }
          }
          uint64_t v35 = v284 + v291[10];
          uint64_t v36 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v35, 1, (uint64_t)v36))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v37 = v35 + v36[22];
            if (!__swift_getEnumTagSinglePayload(v37, 1, v8)) {
              v288(v37, v8);
            }
            uint64_t v38 = v35 + v36[23];
            if (!__swift_getEnumTagSinglePayload(v38, 1, v8)) {
              v288(v38, v8);
            }
            uint64_t v39 = v35 + v36[25];
            uint64_t v40 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v39, 1, v40)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
            }
          }
          uint64_t v41 = v291;
          uint64_t v42 = v284;
          uint64_t v43 = v284 + v291[11];
          uint64_t v44 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v43, 1, (uint64_t)v44))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v45 = v43 + v44[13];
            uint64_t v46 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v45, 1, v46)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v45, v46);
            }
            uint64_t v282 = v8;
            uint64_t v47 = v43 + v44[14];
            if (!__swift_getEnumTagSinglePayload(v47, 1, v46)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v47, v46);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v48 = v43 + v44[18];
            uint64_t v49 = type metadata accessor for DateComponents();
            uint64_t v50 = *(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8);
            v50(v48, v49);
            v50(v43 + v44[19], v49);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v51 = v43 + v44[38];
            uint64_t v8 = v282;
            if (!__swift_getEnumTagSinglePayload(v51, 1, v282)) {
              v288(v51, v282);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v42 = v284;
            uint64_t v41 = v291;
          }
          uint64_t v52 = v42 + v41[12];
          uint64_t v53 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v52, 1, v53))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v54 = v52 + *(int *)(v53 + 56);
            uint64_t v55 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v54, 1, v55)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v54, v55);
            }
            uint64_t v56 = v52 + *(int *)(v53 + 60);
            if (!__swift_getEnumTagSinglePayload(v56, 1, v55)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v56, v55);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v42 = v284;
            uint64_t v41 = v291;
          }
          uint64_t v57 = v42 + v41[13];
          uint64_t v58 = type metadata accessor for RestaurantReservation(0);
          if (!__swift_getEnumTagSinglePayload(v57, 1, v58))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v59 = v57 + *(int *)(v58 + 56);
            uint64_t v60 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v59, 1, v60)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v59, v60);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v61 = v4 + v6[22];
        uint64_t v62 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v61, 1, (uint64_t)v62))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v63 = v61 + v62[10];
          if (!__swift_getEnumTagSinglePayload(v63, 1, v8)) {
            v288(v63, v8);
          }
          uint64_t v64 = v61 + v62[11];
          if (!__swift_getEnumTagSinglePayload(v64, 1, v8)) {
            v288(v64, v8);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v65 = v61 + v62[15];
          if (!__swift_getEnumTagSinglePayload(v65, 1, v8)) {
            v288(v65, v8);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v66 = v4 + v6[23];
        uint64_t v67 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v66, 1, v67))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v68 = v66 + *(int *)(v67 + 44);
          if (!__swift_getEnumTagSinglePayload(v68, 1, v8)) {
            v288(v68, v8);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v69 = v66 + *(int *)(v67 + 56);
          if (!__swift_getEnumTagSinglePayload(v69, 1, v8)) {
            v288(v69, v8);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v70 = v4 + v6[24];
        uint64_t v71 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v70, 1, (uint64_t)v71))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v72 = v70 + v71[8];
          uint64_t v73 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v72, 1, v73)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v73 - 8) + 8))(v72, v73);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v74 = v70 + v71[12];
          if (!__swift_getEnumTagSinglePayload(v74, 1, v8)) {
            v288(v74, v8);
          }
          uint64_t v75 = v70 + v71[13];
          if (!__swift_getEnumTagSinglePayload(v75, 1, v8)) {
            v288(v75, v8);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v76 = v6[25];
        goto LABEL_253;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v77 = (int *)type metadata accessor for MobileSMSDocument(0);
        uint64_t v78 = v4 + v77[10];
        uint64_t v79 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v78, 1, v79)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v78, v79);
        }
        uint64_t v80 = v4 + v77[11];
        uint64_t v81 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v80, 1, v81)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v80, v81);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v4 + v77[17]))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v82 = v4 + v77[19];
        uint64_t v83 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v82, 1, (uint64_t)v83))
        {
          uint64_t v292 = v81;
          swift_bridgeObjectRelease();
          uint64_t v84 = v82 + v83[5];
          uint64_t v85 = type metadata accessor for RentalCarReservation(0);
          uint64_t v289 = v83;
          if (!__swift_getEnumTagSinglePayload(v84, 1, v85))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v86 = v84 + *(int *)(v85 + 140);
            if (!__swift_getEnumTagSinglePayload(v86, 1, v79)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v86, v79);
            }
            uint64_t v87 = v84 + *(int *)(v85 + 144);
            uint64_t v83 = v289;
            if (!__swift_getEnumTagSinglePayload(v87, 1, v79)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v87, v79);
            }
          }
          uint64_t v88 = v82 + v83[6];
          uint64_t v89 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v88, 1, v89))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v90 = v88 + *(int *)(v89 + 112);
            if (!__swift_getEnumTagSinglePayload(v90, 1, v79)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v90, v79);
            }
            uint64_t v91 = v88 + *(int *)(v89 + 116);
            uint64_t v83 = v289;
            if (!__swift_getEnumTagSinglePayload(v91, 1, v79)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v91, v79);
            }
          }
          uint64_t v92 = v82 + v83[7];
          uint64_t v93 = (int *)type metadata accessor for TicketedShow(0);
          if (!__swift_getEnumTagSinglePayload(v92, 1, (uint64_t)v93))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v94 = v92 + v93[29];
            if (!__swift_getEnumTagSinglePayload(v94, 1, v292)) {
              (*(void (**)(uint64_t))(*(void *)(v292 - 8) + 8))(v94);
            }
            swift_bridgeObjectRelease();
            uint64_t v95 = v92 + v93[31];
            if (!__swift_getEnumTagSinglePayload(v95, 1, v79)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v95, v79);
            }
            uint64_t v96 = v92 + v93[32];
            uint64_t v83 = v289;
            if (!__swift_getEnumTagSinglePayload(v96, 1, v79)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v96, v79);
            }
          }
          uint64_t v97 = v82 + v83[8];
          uint64_t v98 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v97, 1, v98))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v99 = v97 + *(int *)(v98 + 108);
            if (!__swift_getEnumTagSinglePayload(v99, 1, v79)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v99, v79);
            }
            uint64_t v100 = v97 + *(int *)(v98 + 112);
            uint64_t v83 = v289;
            if (!__swift_getEnumTagSinglePayload(v100, 1, v79)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v100, v79);
            }
          }
          uint64_t v101 = v82 + v83[9];
          uint64_t v102 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v101, 1, (uint64_t)v102))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v103 = v101 + v102[24];
            if (!__swift_getEnumTagSinglePayload(v103, 1, v79)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v103, v79);
            }
            uint64_t v104 = v101 + v102[25];
            if (!__swift_getEnumTagSinglePayload(v104, 1, v79)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v104, v79);
            }
            uint64_t v105 = v101 + v102[26];
            uint64_t v83 = v289;
            if (!__swift_getEnumTagSinglePayload(v105, 1, v292)) {
              (*(void (**)(uint64_t))(*(void *)(v292 - 8) + 8))(v105);
            }
          }
          uint64_t v106 = v82 + v83[10];
          uint64_t v107 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v106, 1, (uint64_t)v107))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v108 = v106 + v107[22];
            if (!__swift_getEnumTagSinglePayload(v108, 1, v79)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v108, v79);
            }
            uint64_t v109 = v106 + v107[23];
            if (!__swift_getEnumTagSinglePayload(v109, 1, v79)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v109, v79);
            }
            uint64_t v110 = v106 + v107[25];
            uint64_t v83 = v289;
            if (!__swift_getEnumTagSinglePayload(v110, 1, v292)) {
              (*(void (**)(uint64_t))(*(void *)(v292 - 8) + 8))(v110);
            }
          }
          uint64_t v111 = v82 + v83[11];
          uint64_t v112 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v111, 1, (uint64_t)v112))
          {
            uint64_t v286 = v82;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v113 = v111 + v112[13];
            if (!__swift_getEnumTagSinglePayload(v113, 1, v292)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v292 - 8) + 8))(v113, v292);
            }
            uint64_t v283 = v79;
            uint64_t v114 = v111 + v112[14];
            if (!__swift_getEnumTagSinglePayload(v114, 1, v292)) {
              (*(void (**)(uint64_t))(*(void *)(v292 - 8) + 8))(v114);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v115 = v111 + v112[18];
            uint64_t v116 = type metadata accessor for DateComponents();
            uint64_t v117 = *(void (**)(uint64_t, uint64_t))(*(void *)(v116 - 8) + 8);
            v117(v115, v116);
            v117(v111 + v112[19], v116);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v118 = v111 + v112[38];
            uint64_t v79 = v283;
            if (!__swift_getEnumTagSinglePayload(v118, 1, v283)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v283 - 8) + 8))(v118, v283);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v82 = v286;
            uint64_t v83 = v289;
          }
          uint64_t v119 = v82 + v83[12];
          uint64_t v120 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v119, 1, v120))
          {
            uint64_t v287 = v82;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v121 = v119 + *(int *)(v120 + 56);
            uint64_t v122 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v121, 1, v122)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v122 - 8) + 8))(v121, v122);
            }
            uint64_t v123 = v119 + *(int *)(v120 + 60);
            if (!__swift_getEnumTagSinglePayload(v123, 1, v122)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v122 - 8) + 8))(v123, v122);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v82 = v287;
            uint64_t v83 = v289;
          }
          uint64_t v124 = v82 + v83[13];
          uint64_t v125 = type metadata accessor for RestaurantReservation(0);
          uint64_t v81 = v292;
          if (!__swift_getEnumTagSinglePayload(v124, 1, v125))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v126 = v124 + *(int *)(v125 + 56);
            uint64_t v127 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v126, 1, v127)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v127 - 8) + 8))(v126, v127);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v81 = v292;
          }
        }
        uint64_t v128 = v4 + v77[20];
        uint64_t v129 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v128, 1, (uint64_t)v129))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v130 = v128 + v129[10];
          if (!__swift_getEnumTagSinglePayload(v130, 1, v79)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v130, v79);
          }
          uint64_t v131 = v128 + v129[11];
          if (!__swift_getEnumTagSinglePayload(v131, 1, v79)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v131, v79);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v132 = v128 + v129[15];
          if (!__swift_getEnumTagSinglePayload(v132, 1, v79)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v132, v79);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v133 = v4 + v77[21];
        uint64_t v134 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v133, 1, v134))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v135 = v133 + *(int *)(v134 + 44);
          if (!__swift_getEnumTagSinglePayload(v135, 1, v79)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v135, v79);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v136 = v133 + *(int *)(v134 + 56);
          if (!__swift_getEnumTagSinglePayload(v136, 1, v79)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v136, v79);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v137 = v4 + v77[22];
        uint64_t v138 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v137, 1, (uint64_t)v138))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v139 = v137 + v138[8];
          if (!__swift_getEnumTagSinglePayload(v139, 1, v81)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v139, v81);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v140 = v137 + v138[12];
          if (!__swift_getEnumTagSinglePayload(v140, 1, v79)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v140, v79);
          }
          uint64_t v141 = v137 + v138[13];
          if (!__swift_getEnumTagSinglePayload(v141, 1, v79)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v141, v79);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v76 = v77[23];
        goto LABEL_253;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v142 = (int *)type metadata accessor for CalendarEvent(0);
        uint64_t v143 = v4 + v142[7];
        uint64_t v144 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v143, 1, v144)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v144 - 8) + 8))(v143, v144);
        }
        uint64_t v145 = v4 + v142[8];
        if (!__swift_getEnumTagSinglePayload(v145, 1, v144)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v144 - 8) + 8))(v145, v144);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!*(void *)(v4 + v142[13])) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v146 = (int *)type metadata accessor for Photo(0);
        uint64_t v147 = v4 + v146[11];
        uint64_t v148 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v147, 1, v148)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v147, v148);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v149 = v4 + v146[17];
        uint64_t v150 = type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v149, 1, v150))
        {
          swift_bridgeObjectRelease();
          uint64_t v293 = (int *)v150;
          uint64_t v151 = v149 + *(int *)(v150 + 20);
          uint64_t v152 = type metadata accessor for RentalCarReservation(0);
          if (!__swift_getEnumTagSinglePayload(v151, 1, v152))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v153 = v151 + *(int *)(v152 + 140);
            if (!__swift_getEnumTagSinglePayload(v153, 1, v148)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v153, v148);
            }
            uint64_t v154 = v151 + *(int *)(v152 + 144);
            if (!__swift_getEnumTagSinglePayload(v154, 1, v148)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v154, v148);
            }
          }
          uint64_t v155 = v149 + v293[6];
          uint64_t v156 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v155, 1, v156))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v157 = v155 + *(int *)(v156 + 112);
            if (!__swift_getEnumTagSinglePayload(v157, 1, v148)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v157, v148);
            }
            uint64_t v158 = v155 + *(int *)(v156 + 116);
            if (!__swift_getEnumTagSinglePayload(v158, 1, v148)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v158, v148);
            }
          }
          uint64_t v159 = v149 + v293[7];
          uint64_t v160 = (int *)type metadata accessor for TicketedShow(0);
          uint64_t v290 = v149;
          if (!__swift_getEnumTagSinglePayload(v159, 1, (uint64_t)v160))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v161 = v159 + v160[29];
            uint64_t v162 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v161, 1, v162)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v162 - 8) + 8))(v161, v162);
            }
            swift_bridgeObjectRelease();
            uint64_t v163 = v159 + v160[31];
            if (!__swift_getEnumTagSinglePayload(v163, 1, v148)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v163, v148);
            }
            uint64_t v164 = v159 + v160[32];
            uint64_t v149 = v290;
            if (!__swift_getEnumTagSinglePayload(v164, 1, v148)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v164, v148);
            }
          }
          uint64_t v165 = v149 + v293[8];
          uint64_t v166 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v165, 1, v166))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v167 = v165 + *(int *)(v166 + 108);
            if (!__swift_getEnumTagSinglePayload(v167, 1, v148)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v167, v148);
            }
            uint64_t v168 = v165 + *(int *)(v166 + 112);
            if (!__swift_getEnumTagSinglePayload(v168, 1, v148)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v168, v148);
            }
          }
          uint64_t v169 = v149 + v293[9];
          uint64_t v170 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v169, 1, (uint64_t)v170))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v171 = v169 + v170[24];
            if (!__swift_getEnumTagSinglePayload(v171, 1, v148)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v171, v148);
            }
            uint64_t v172 = v169 + v170[25];
            if (!__swift_getEnumTagSinglePayload(v172, 1, v148)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v172, v148);
            }
            uint64_t v173 = v169 + v170[26];
            uint64_t v174 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v173, 1, v174)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v174 - 8) + 8))(v173, v174);
            }
          }
          uint64_t v175 = v290 + v293[10];
          uint64_t v176 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v175, 1, (uint64_t)v176))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v177 = v175 + v176[22];
            if (!__swift_getEnumTagSinglePayload(v177, 1, v148)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v177, v148);
            }
            uint64_t v178 = v175 + v176[23];
            if (!__swift_getEnumTagSinglePayload(v178, 1, v148)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v178, v148);
            }
            uint64_t v179 = v175 + v176[25];
            uint64_t v180 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v179, 1, v180)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v180 - 8) + 8))(v179, v180);
            }
          }
          uint64_t v181 = v290;
          uint64_t v182 = v293;
          uint64_t v183 = v290 + v293[11];
          id v184 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v183, 1, (uint64_t)v184))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v185 = v183 + v184[13];
            uint64_t v186 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v185, 1, v186)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v186 - 8) + 8))(v185, v186);
            }
            uint64_t v285 = v148;
            uint64_t v187 = v183 + v184[14];
            if (!__swift_getEnumTagSinglePayload(v187, 1, v186)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v186 - 8) + 8))(v187, v186);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v188 = v183 + v184[18];
            uint64_t v189 = type metadata accessor for DateComponents();
            uint64_t v190 = *(void (**)(uint64_t, uint64_t))(*(void *)(v189 - 8) + 8);
            v190(v188, v189);
            v190(v183 + v184[19], v189);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v191 = v183 + v184[38];
            uint64_t v148 = v285;
            if (!__swift_getEnumTagSinglePayload(v191, 1, v285)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v285 - 8) + 8))(v191, v285);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v181 = v290;
            uint64_t v182 = v293;
          }
          uint64_t v192 = v181 + v182[12];
          uint64_t v193 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v192, 1, v193))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v194 = v192 + *(int *)(v193 + 56);
            uint64_t v195 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v194, 1, v195)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v195 - 8) + 8))(v194, v195);
            }
            uint64_t v196 = v192 + *(int *)(v193 + 60);
            if (!__swift_getEnumTagSinglePayload(v196, 1, v195)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v195 - 8) + 8))(v196, v195);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v181 = v290;
            uint64_t v182 = v293;
          }
          uint64_t v197 = v181 + v182[13];
          uint64_t v198 = type metadata accessor for RestaurantReservation(0);
          if (!__swift_getEnumTagSinglePayload(v197, 1, v198))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v199 = v197 + *(int *)(v198 + 56);
            uint64_t v200 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v199, 1, v200)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v200 - 8) + 8))(v199, v200);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v201 = v4 + v146[18];
        uint64_t v202 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v201, 1, (uint64_t)v202))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v203 = v201 + v202[10];
          if (!__swift_getEnumTagSinglePayload(v203, 1, v148)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v203, v148);
          }
          uint64_t v204 = v201 + v202[11];
          if (!__swift_getEnumTagSinglePayload(v204, 1, v148)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v204, v148);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v205 = v201 + v202[15];
          if (!__swift_getEnumTagSinglePayload(v205, 1, v148)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v205, v148);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v206 = v4 + v146[19];
        uint64_t v207 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v206, 1, v207))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v208 = v206 + *(int *)(v207 + 44);
          if (!__swift_getEnumTagSinglePayload(v208, 1, v148)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v208, v148);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v209 = v206 + *(int *)(v207 + 56);
          if (!__swift_getEnumTagSinglePayload(v209, 1, v148)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v209, v148);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v210 = v4 + v146[20];
        uint64_t v211 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v210, 1, (uint64_t)v211))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v212 = v210 + v211[8];
          uint64_t v213 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v212, 1, v213)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v213 - 8) + 8))(v212, v213);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v214 = v210 + v211[12];
          if (!__swift_getEnumTagSinglePayload(v214, 1, v148)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v214, v148);
          }
          uint64_t v215 = v210 + v211[13];
          if (!__swift_getEnumTagSinglePayload(v215, 1, v148)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v215, v148);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v76 = v146[21];
LABEL_253:
        if (!*(void *)(v4 + v76 + 8)) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v216 = (int *)type metadata accessor for NoteDocument(0);
        uint64_t v217 = v4 + v216[8];
        uint64_t v218 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v217, 1, v218)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v218 - 8) + 8))(v217, v218);
        }
        goto LABEL_274;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v219 = (int *)type metadata accessor for Reminder(0);
        uint64_t v220 = v4 + v219[7];
        uint64_t v221 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v220, 1, v221)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v221 - 8) + 8))(v220, v221);
        }
        uint64_t v222 = v4 + v219[8];
        if (!__swift_getEnumTagSinglePayload(v222, 1, v221)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v221 - 8) + 8))(v222, v221);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v223 = v219[12];
        goto LABEL_324;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v224 = type metadata accessor for PhoneHistory(0);
        uint64_t v225 = v4 + *(int *)(v224 + 40);
        uint64_t v226 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v225, 1, v226)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v226 - 8) + 8))(v225, v226);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v223 = *(int *)(v224 + 52);
        goto LABEL_324;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v227 = (int *)type metadata accessor for VoicemailTranscript(0);
        uint64_t v228 = v227[7];
        goto LABEL_268;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v223 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
        goto LABEL_324;
      case 9u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v227 = (int *)type metadata accessor for VoiceMemo(0);
        uint64_t v228 = v227[6];
LABEL_268:
        uint64_t v229 = v4 + v228;
        uint64_t v230 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v229, 1, v230)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v230 - 8) + 8))(v229, v230);
        }
        uint64_t v223 = v227[8];
        goto LABEL_324;
      case 0xAu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v216 = (int *)type metadata accessor for Safari(0);
        uint64_t v231 = v4 + v216[6];
        uint64_t v218 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v231, 1, v218)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v218 - 8) + 8))(v231, v218);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_274:
        uint64_t v232 = v216[9];
        goto LABEL_312;
      case 0xBu:
        swift_bridgeObjectRelease();

        break;
      case 0xCu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v233 = v4 + *(int *)(type metadata accessor for WalletTransaction(0) + 28);
        uint64_t v234 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v233, 1, v234)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v234 - 8) + 8))(v233, v234);
        }
        goto LABEL_278;
      case 0xDu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v235 = v4 + *(int *)(type metadata accessor for WalletPass(0) + 28);
        uint64_t v236 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v235, 1, v236)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v236 - 8) + 8))(v235, v236);
        }
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 0xEu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 0xFu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v237 = (int *)type metadata accessor for FlightReservation(0);
        uint64_t v238 = v4 + v237[13];
        uint64_t v239 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v238, 1, v239)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v239 - 8) + 8))(v238, v239);
        }
        uint64_t v240 = v4 + v237[14];
        if (!__swift_getEnumTagSinglePayload(v240, 1, v239)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v239 - 8) + 8))(v240, v239);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v241 = v4 + v237[18];
        uint64_t v242 = type metadata accessor for DateComponents();
        uint64_t v243 = *(void (**)(uint64_t, uint64_t))(*(void *)(v242 - 8) + 8);
        v243(v241, v242);
        v243(v4 + v237[19], v242);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v244 = v4 + v237[38];
        uint64_t v245 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v244, 1, v245)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v245 - 8) + 8))(v244, v245);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v246 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
        goto LABEL_332;
      case 0x10u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v247 = type metadata accessor for HotelReservation(0);
        uint64_t v248 = v4 + *(int *)(v247 + 56);
        uint64_t v249 = type metadata accessor for DateComponents();
        if (!__swift_getEnumTagSinglePayload(v248, 1, v249)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v249 - 8) + 8))(v248, v249);
        }
        uint64_t v250 = v4 + *(int *)(v247 + 60);
        if (!__swift_getEnumTagSinglePayload(v250, 1, v249)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v249 - 8) + 8))(v250, v249);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 0x11u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v251 = v4 + *(int *)(type metadata accessor for RestaurantReservation(0) + 56);
        uint64_t v252 = type metadata accessor for DateComponents();
        if (!__swift_getEnumTagSinglePayload(v251, 1, v252)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v252 - 8) + 8))(v251, v252);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 0x12u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v253 = type metadata accessor for RentalCarReservation(0);
        uint64_t v254 = v4 + *(int *)(v253 + 140);
        uint64_t v218 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v254, 1, v218)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v218 - 8) + 8))(v254, v218);
        }
        uint64_t v232 = *(int *)(v253 + 144);
        goto LABEL_312;
      case 0x13u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v255 = type metadata accessor for TicketedTransportation(0);
        uint64_t v256 = v4 + *(int *)(v255 + 112);
        uint64_t v218 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v256, 1, v218)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v218 - 8) + 8))(v256, v218);
        }
        uint64_t v232 = *(int *)(v255 + 116);
        goto LABEL_312;
      case 0x14u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v257 = (int *)type metadata accessor for TicketedShow(0);
        uint64_t v258 = v4 + v257[29];
        uint64_t v259 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v258, 1, v259)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v259 - 8) + 8))(v258, v259);
        }
        swift_bridgeObjectRelease();
        uint64_t v260 = v4 + v257[31];
        uint64_t v261 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v260, 1, v261)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v261 - 8) + 8))(v260, v261);
        }
        uint64_t v262 = v4 + v257[32];
        goto LABEL_325;
      case 0x15u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v263 = type metadata accessor for Appointment(0);
        uint64_t v264 = v4 + *(int *)(v263 + 108);
        uint64_t v218 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v264, 1, v218)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v218 - 8) + 8))(v264, v218);
        }
        uint64_t v232 = *(int *)(v263 + 112);
LABEL_312:
        uint64_t v265 = v4 + v232;
        if (!__swift_getEnumTagSinglePayload(v4 + v232, 1, v218)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v218 - 8) + 8))(v265, v218);
        }
        break;
      case 0x16u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v266 = (int *)type metadata accessor for Party(0);
        uint64_t v267 = v4 + v266[24];
        uint64_t v268 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v267, 1, v268)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v268 - 8) + 8))(v267, v268);
        }
        uint64_t v269 = v4 + v266[25];
        if (!__swift_getEnumTagSinglePayload(v269, 1, v268)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v268 - 8) + 8))(v269, v268);
        }
        uint64_t v223 = v266[26];
        goto LABEL_324;
      case 0x17u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v270 = (int *)type metadata accessor for Trip(0);
        uint64_t v271 = v4 + v270[22];
        uint64_t v272 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v271, 1, v272)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v272 - 8) + 8))(v271, v272);
        }
        uint64_t v273 = v4 + v270[23];
        if (!__swift_getEnumTagSinglePayload(v273, 1, v272)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v272 - 8) + 8))(v273, v272);
        }
        uint64_t v223 = v270[25];
LABEL_324:
        uint64_t v262 = v4 + v223;
        uint64_t v261 = type metadata accessor for URL();
LABEL_325:
        if (!__swift_getEnumTagSinglePayload(v262, 1, v261)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v261 - 8) + 8))(v262, v261);
        }
        break;
      case 0x18u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v274 = type metadata accessor for GlobalItem();
        uint64_t v275 = v4 + *(int *)(v274 + 28);
        uint64_t v276 = type metadata accessor for GlobalDialog();
        if (!__swift_getEnumTagSinglePayload(v275, 1, v276)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v276 - 8) + 8))(v275, v276);
        }
        Class v277 = (uint64_t *)(v4 + *(int *)(v274 + 32));
        unint64_t v278 = v277[1];
        if (v278 >> 60 != 15) {
          outlined consume of Data._Representation(*v277, v278);
        }
        uint64_t v246 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_332:
        __swift_instantiateConcreteTypeFromMangledName(v246);
        goto LABEL_335;
      case 0x19u:
LABEL_278:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 0x1Au:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v279 = v4 + *(int *)(type metadata accessor for Answer(0) + 36);
        uint64_t v280 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v279, 1, v280)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v280 - 8) + 8))(v279, v280);
        }
LABEL_335:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

void *initializeWithCopy for SearchEntity(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[16];
  uint64_t v2690 = a2[15];
  a1[14] = a2[14];
  a1[15] = v2690;
  uint64_t v11 = *(int *)(a3 + 84);
  uint64_t v2691 = (void *)((char *)a1 + v11);
  uint64_t v2692 = (void *)((char *)a2 + v11);
  a1[16] = v10;
  uint64_t v12 = type metadata accessor for SearchResult(0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v13 = v2692;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v2692, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v2691, v2692, *(void *)(*(void *)(v14 - 8) + 64));
    uint64_t v16 = a1;
    uint64_t v15 = a2;
    uint64_t v17 = a3;
  }
  else
  {
    type metadata accessor for SearchResultItem(0);
    uint64_t v18 = (uint64_t)v2691;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v2682 = v12;
        uint64_t v41 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v41;
        uint64_t v42 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v42;
        uint64_t v43 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v43;
        uint64_t v44 = v2692[7];
        v2691[6] = v2692[6];
        v2691[7] = v44;
        uint64_t v45 = v2692[9];
        v2691[8] = v2692[8];
        v2691[9] = v45;
        uint64_t v2671 = (int *)type metadata accessor for MobileSMSDocument(0);
        uint64_t v46 = v2671[10];
        uint64_t v47 = (char *)v2691 + v46;
        uint64_t v48 = (char *)v2692 + v46;
        uint64_t v49 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v2658 = v49;
        if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49))
        {
          uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
          __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
        }
        uint64_t v346 = v2671;
        uint64_t v347 = v2671[11];
        Swift::String v348 = (char *)v2691 + v347;
        uint64_t v349 = (char *)v2692 + v347;
        uint64_t v350 = type metadata accessor for URL();
        uint64_t v2653 = v350;
        if (__swift_getEnumTagSinglePayload((uint64_t)v349, 1, v350))
        {
          uint64_t v351 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v348, v349, *(void *)(*(void *)(v351 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v350 - 8) + 16))(v348, v349, v350);
          __swift_storeEnumTagSinglePayload((uint64_t)v348, 0, 1, v350);
        }
        *(void *)((char *)v2691 + v2671[12]) = *(void *)((char *)v2692 + v2671[12]);
        uint64_t v503 = v2671[13];
        long long v504 = (void *)((char *)v2691 + v503);
        long long v505 = (void *)((char *)v2692 + v503);
        uint64_t v506 = v505[1];
        *long long v504 = *v505;
        v504[1] = v506;
        uint64_t v507 = v2671[14];
        uint64_t v508 = (void *)((char *)v2691 + v507);
        uint64_t v509 = (void *)((char *)v2692 + v507);
        uint64_t v510 = v509[1];
        void *v508 = *v509;
        v508[1] = v510;
        *(void *)((char *)v2691 + v2671[15]) = *(void *)((char *)v2692 + v2671[15]);
        *(void *)((char *)v2691 + v2671[16]) = *(void *)((char *)v2692 + v2671[16]);
        uint64_t v511 = v2671[17];
        uint64_t v512 = (void *)((char *)v2691 + v511);
        uint64_t v513 = (char *)v2692 + v511;
        uint64_t v514 = *(void *)((char *)v2692 + v511);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v514)
        {
          uint64_t v515 = *((void *)v513 + 1);
          uint64_t v516 = *((void *)v513 + 2);
          *uint64_t v512 = v514;
          v512[1] = v515;
          uint64_t v517 = *((void *)v513 + 3);
          uint64_t v518 = *((void *)v513 + 4);
          v512[2] = v516;
          v512[3] = v517;
          v512[4] = v518;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v677 = *((_OWORD *)v513 + 1);
          *(_OWORD *)uint64_t v512 = *(_OWORD *)v513;
          *((_OWORD *)v512 + 1) = v677;
          v512[4] = *((void *)v513 + 4);
        }
        uint64_t v13 = v2692;
        uint64_t v678 = v2671[18];
        uint64_t v679 = (void *)((char *)v2691 + v678);
        uint64_t v680 = (void *)((char *)v2692 + v678);
        uint64_t v681 = v680[1];
        void *v679 = *v680;
        v679[1] = v681;
        uint64_t v682 = v2671[19];
        long long v683 = (void *)((char *)v2691 + v682);
        uint64_t v684 = (void *)((char *)v2692 + v682);
        uint64_t v685 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v684, 1, (uint64_t)v685))
        {
          uint64_t v686 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v683, v684, *(void *)(*(void *)(v686 - 8) + 64));
        }
        else
        {
          uint64_t v723 = v684[1];
          void *v683 = *v684;
          v683[1] = v723;
          uint64_t v724 = v685[5];
          uint64_t v725 = (void *)((char *)v683 + v724);
          uint64_t v726 = (void *)((char *)v684 + v724);
          uint64_t v727 = type metadata accessor for RentalCarReservation(0);
          swift_bridgeObjectRetain();
          uint64_t v2628 = v684;
          uint64_t v2644 = v685;
          if (__swift_getEnumTagSinglePayload((uint64_t)v726, 1, v727))
          {
            uint64_t v728 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v725, v726, *(void *)(*(void *)(v728 - 8) + 64));
          }
          else
          {
            uint64_t v785 = v726[1];
            *uint64_t v725 = *v726;
            v725[1] = v785;
            uint64_t v786 = v726[3];
            v725[2] = v726[2];
            v725[3] = v786;
            uint64_t v787 = v726[5];
            v725[4] = v726[4];
            v725[5] = v787;
            uint64_t v788 = v726[7];
            v725[6] = v726[6];
            v725[7] = v788;
            uint64_t v789 = v726[9];
            v725[8] = v726[8];
            v725[9] = v789;
            uint64_t v790 = v726[11];
            v725[10] = v726[10];
            v725[11] = v790;
            uint64_t v791 = v726[13];
            v725[12] = v726[12];
            v725[13] = v791;
            uint64_t v792 = v726[15];
            v725[14] = v726[14];
            v725[15] = v792;
            *((unsigned char *)v725 + 128) = *((unsigned char *)v726 + 128);
            *(_WORD *)((char *)v725 + 129) = *(_WORD *)((char *)v726 + 129);
            uint64_t v793 = v726[18];
            v725[17] = v726[17];
            v725[18] = v793;
            uint64_t v794 = v726[20];
            v725[19] = v726[19];
            v725[20] = v794;
            uint64_t v795 = v726[22];
            v725[21] = v726[21];
            v725[22] = v795;
            uint64_t v2512 = v726[24];
            v725[23] = v726[23];
            v725[24] = v2512;
            uint64_t v796 = v726[26];
            v725[25] = v726[25];
            v725[26] = v796;
            uint64_t v797 = v726[28];
            v725[27] = v726[27];
            v725[28] = v797;
            uint64_t v798 = v726[30];
            v725[29] = v726[29];
            v725[30] = v798;
            uint64_t v799 = v726[32];
            v725[31] = v726[31];
            v725[32] = v799;
            uint64_t v800 = v726[34];
            v725[33] = v726[33];
            v725[34] = v800;
            uint64_t v801 = v726[36];
            v725[35] = v726[35];
            v725[36] = v801;
            uint64_t v802 = v726[38];
            v725[37] = v726[37];
            v725[38] = v802;
            uint64_t v803 = v726[40];
            v725[39] = v726[39];
            v725[40] = v803;
            uint64_t v804 = v726[42];
            v725[41] = v726[41];
            v725[42] = v804;
            uint64_t v805 = v726[44];
            v725[43] = v726[43];
            v725[44] = v805;
            uint64_t v806 = v726[46];
            v725[45] = v726[45];
            v725[46] = v806;
            uint64_t v807 = v726[47];
            *((unsigned char *)v725 + 384) = *((unsigned char *)v726 + 384);
            v725[47] = v807;
            uint64_t v808 = v726[50];
            v725[49] = v726[49];
            v725[50] = v808;
            uint64_t v809 = v726[52];
            v725[51] = v726[51];
            v725[52] = v809;
            uint64_t v810 = *(int *)(v727 + 140);
            uint64_t v2602 = (char *)v725 + v810;
            uint64_t v811 = (char *)v726 + v810;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v811, 1, v2658))
            {
              uint64_t v812 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2602, v811, *(void *)(*(void *)(v812 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v2602, v811, v2658);
              __swift_storeEnumTagSinglePayload((uint64_t)v2602, 0, 1, v2658);
            }
            uint64_t v821 = *(int *)(v727 + 144);
            uint64_t v822 = (char *)v725 + v821;
            uint64_t v823 = (char *)v726 + v821;
            uint64_t v346 = v2671;
            if (__swift_getEnumTagSinglePayload((uint64_t)v726 + v821, 1, v2658))
            {
              uint64_t v824 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v822, v823, *(void *)(*(void *)(v824 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v822, v823, v2658);
              __swift_storeEnumTagSinglePayload((uint64_t)v822, 0, 1, v2658);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v725, 0, 1, v727);
            uint64_t v685 = v2644;
          }
          uint64_t v877 = v685[6];
          uint64_t v878 = (void *)((char *)v683 + v877);
          uint64_t v879 = (void *)((char *)v684 + v877);
          uint64_t v880 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v879, 1, v880))
          {
            uint64_t v881 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v878, v879, *(void *)(*(void *)(v881 - 8) + 64));
          }
          else
          {
            uint64_t v882 = v879[1];
            void *v878 = *v879;
            v878[1] = v882;
            uint64_t v883 = v879[3];
            v878[2] = v879[2];
            v878[3] = v883;
            uint64_t v884 = v879[5];
            v878[4] = v879[4];
            v878[5] = v884;
            uint64_t v885 = v879[7];
            v878[6] = v879[6];
            v878[7] = v885;
            uint64_t v886 = v879[9];
            v878[8] = v879[8];
            v878[9] = v886;
            uint64_t v887 = v879[11];
            v878[10] = v879[10];
            v878[11] = v887;
            uint64_t v888 = v879[13];
            v878[12] = v879[12];
            v878[13] = v888;
            uint64_t v889 = v879[15];
            v878[14] = v879[14];
            v878[15] = v889;
            *((unsigned char *)v878 + 128) = *((unsigned char *)v879 + 128);
            *(_WORD *)((char *)v878 + 129) = *(_WORD *)((char *)v879 + 129);
            uint64_t v890 = v879[18];
            v878[17] = v879[17];
            v878[18] = v890;
            uint64_t v891 = v879[20];
            v878[19] = v879[19];
            v878[20] = v891;
            uint64_t v892 = v879[22];
            v878[21] = v879[21];
            v878[22] = v892;
            uint64_t v893 = v879[24];
            v878[23] = v879[23];
            v878[24] = v893;
            uint64_t v2588 = (void *)v879[26];
            v878[25] = v879[25];
            v878[26] = v2588;
            uint64_t v894 = v879[28];
            v878[27] = v879[27];
            v878[28] = v894;
            uint64_t v895 = v879[30];
            v878[29] = v879[29];
            v878[30] = v895;
            uint64_t v896 = v879[32];
            v878[31] = v879[31];
            v878[32] = v896;
            uint64_t v897 = v879[34];
            v878[33] = v879[33];
            v878[34] = v897;
            uint64_t v898 = v879[36];
            uint64_t v899 = v879[35];
            *((unsigned char *)v878 + 296) = *((unsigned char *)v879 + 296);
            v878[35] = v899;
            v878[36] = v898;
            uint64_t v900 = *(int *)(v880 + 112);
            uint64_t v2604 = (char *)v878 + v900;
            uint64_t v901 = (char *)v879 + v900;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v901, 1, v2658))
            {
              uint64_t v902 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2604, v901, *(void *)(*(void *)(v902 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v2604, v901, v2658);
              __swift_storeEnumTagSinglePayload((uint64_t)v2604, 0, 1, v2658);
            }
            uint64_t v913 = v880;
            uint64_t v914 = *(int *)(v880 + 116);
            uint64_t v915 = (char *)v878 + v914;
            uint64_t v916 = (char *)v879 + v914;
            uint64_t v346 = v2671;
            if (__swift_getEnumTagSinglePayload((uint64_t)v879 + v914, 1, v2658))
            {
              uint64_t v917 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v915, v916, *(void *)(*(void *)(v917 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v915, v916, v2658);
              __swift_storeEnumTagSinglePayload((uint64_t)v915, 0, 1, v2658);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v878, 0, 1, v913);
            uint64_t v685 = v2644;
          }
          uint64_t v972 = v685[7];
          uint64_t v973 = (void *)((char *)v683 + v972);
          uint64_t v974 = (void *)((char *)v684 + v972);
          uint64_t v975 = type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v974, 1, v975))
          {
            uint64_t v976 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v973, v974, *(void *)(*(void *)(v976 - 8) + 64));
          }
          else
          {
            uint64_t v977 = v974[1];
            void *v973 = *v974;
            v973[1] = v977;
            uint64_t v978 = v974[3];
            v973[2] = v974[2];
            v973[3] = v978;
            uint64_t v979 = v974[5];
            v973[4] = v974[4];
            v973[5] = v979;
            uint64_t v980 = v974[7];
            v973[6] = v974[6];
            v973[7] = v980;
            uint64_t v981 = v974[9];
            v973[8] = v974[8];
            v973[9] = v981;
            uint64_t v982 = v974[11];
            v973[10] = v974[10];
            v973[11] = v982;
            uint64_t v983 = v974[13];
            v973[12] = v974[12];
            v973[13] = v983;
            uint64_t v984 = v974[15];
            v973[14] = v974[14];
            v973[15] = v984;
            *((unsigned char *)v973 + 128) = *((unsigned char *)v974 + 128);
            *(_WORD *)((char *)v973 + 129) = *(_WORD *)((char *)v974 + 129);
            uint64_t v985 = v974[18];
            v973[17] = v974[17];
            v973[18] = v985;
            uint64_t v986 = v974[20];
            v973[19] = v974[19];
            v973[20] = v986;
            uint64_t v987 = v974[22];
            v973[21] = v974[21];
            v973[22] = v987;
            uint64_t v988 = v974[24];
            v973[23] = v974[23];
            v973[24] = v988;
            uint64_t v989 = v974[26];
            v973[25] = v974[25];
            v973[26] = v989;
            uint64_t v990 = v974[28];
            v973[27] = v974[27];
            v973[28] = v990;
            v2572 = (void *)v974[30];
            v973[29] = v974[29];
            v973[30] = v2572;
            uint64_t v991 = v974[32];
            v973[31] = v974[31];
            v973[32] = v991;
            uint64_t v992 = v974[34];
            v973[33] = v974[33];
            v973[34] = v992;
            uint64_t v993 = v974[36];
            uint64_t v994 = v974[35];
            *((unsigned char *)v973 + 296) = *((unsigned char *)v974 + 296);
            v973[35] = v994;
            v973[36] = v993;
            uint64_t v995 = v974[39];
            v973[38] = v974[38];
            v973[39] = v995;
            uint64_t v996 = *(int *)(v975 + 116);
            uint64_t v2589 = (char *)v973 + v996;
            uint64_t v2606 = (int *)v975;
            uint64_t v997 = (char *)v974 + v996;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v997, 1, v2653))
            {
              uint64_t v998 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2589, v997, *(void *)(*(void *)(v998 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2653 - 8) + 16))(v2589, v997, v2653);
              __swift_storeEnumTagSinglePayload((uint64_t)v2589, 0, 1, v2653);
            }
            uint64_t v1015 = v2606[30];
            uint64_t v1016 = (void *)((char *)v973 + v1015);
            uint64_t v1017 = (void *)((char *)v974 + v1015);
            uint64_t v1018 = v1017[1];
            *uint64_t v1016 = *v1017;
            v1016[1] = v1018;
            uint64_t v1019 = v2606[31];
            uint64_t v1020 = (char *)v973 + v1019;
            uint64_t v1021 = (char *)v974 + v1019;
            swift_bridgeObjectRetain();
            uint64_t v346 = v2671;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1021, 1, v2658))
            {
              uint64_t v1022 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1020, v1021, *(void *)(*(void *)(v1022 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v1020, v1021, v2658);
              __swift_storeEnumTagSinglePayload((uint64_t)v1020, 0, 1, v2658);
            }
            uint64_t v1031 = v2606[32];
            uint64_t v1032 = (char *)v973 + v1031;
            uint64_t v1033 = (char *)v974 + v1031;
            if (__swift_getEnumTagSinglePayload((uint64_t)v974 + v1031, 1, v2658))
            {
              uint64_t v1034 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1032, v1033, *(void *)(*(void *)(v1034 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v1032, v1033, v2658);
              __swift_storeEnumTagSinglePayload((uint64_t)v1032, 0, 1, v2658);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v973, 0, 1, (uint64_t)v2606);
            uint64_t v685 = v2644;
          }
          uint64_t v1089 = v685[8];
          uint64_t v1090 = (void *)((char *)v683 + v1089);
          uint64_t v1091 = (void *)((char *)v684 + v1089);
          uint64_t v1092 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1091, 1, v1092))
          {
            uint64_t v1093 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v1090, v1091, *(void *)(*(void *)(v1093 - 8) + 64));
          }
          else
          {
            uint64_t v1094 = v1091[1];
            void *v1090 = *v1091;
            v1090[1] = v1094;
            uint64_t v1095 = v1091[3];
            v1090[2] = v1091[2];
            v1090[3] = v1095;
            uint64_t v1096 = v1091[5];
            v1090[4] = v1091[4];
            v1090[5] = v1096;
            uint64_t v1097 = v1091[7];
            v1090[6] = v1091[6];
            v1090[7] = v1097;
            uint64_t v1098 = v1091[9];
            v1090[8] = v1091[8];
            v1090[9] = v1098;
            uint64_t v1099 = v1091[11];
            v1090[10] = v1091[10];
            v1090[11] = v1099;
            uint64_t v1100 = v1091[13];
            v1090[12] = v1091[12];
            v1090[13] = v1100;
            uint64_t v1101 = v1091[15];
            v1090[14] = v1091[14];
            v1090[15] = v1101;
            *((unsigned char *)v1090 + 128) = *((unsigned char *)v1091 + 128);
            *(_WORD *)((char *)v1090 + 129) = *(_WORD *)((char *)v1091 + 129);
            uint64_t v1102 = v1091[18];
            v1090[17] = v1091[17];
            v1090[18] = v1102;
            uint64_t v1103 = v1091[20];
            v1090[19] = v1091[19];
            v1090[20] = v1103;
            uint64_t v1104 = v1091[22];
            v1090[21] = v1091[21];
            v1090[22] = v1104;
            uint64_t v1105 = v1091[24];
            v1090[23] = v1091[23];
            v1090[24] = v1105;
            uint64_t v1106 = v1091[26];
            v1090[25] = v1091[25];
            v1090[26] = v1106;
            uint64_t v1107 = v1091[28];
            v1090[27] = v1091[27];
            v1090[28] = v1107;
            uint64_t v1108 = v1091[30];
            v1090[29] = v1091[29];
            v1090[30] = v1108;
            uint64_t v1109 = v1091[32];
            v1090[31] = v1091[31];
            v1090[32] = v1109;
            uint64_t v1111 = v1091[33];
            uint64_t v1110 = v1091[34];
            *((unsigned char *)v1090 + 280) = *((unsigned char *)v1091 + 280);
            v1090[33] = v1111;
            v1090[34] = v1110;
            uint64_t v1112 = v1091[37];
            v1090[36] = v1091[36];
            v1090[37] = v1112;
            uint64_t v1113 = *(int *)(v1092 + 108);
            uint64_t v2607 = (char *)v1090 + v1113;
            uint64_t v1114 = (char *)v1091 + v1113;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1114, 1, v2658))
            {
              uint64_t v1115 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2607, v1114, *(void *)(*(void *)(v1115 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v2607, v1114, v2658);
              __swift_storeEnumTagSinglePayload((uint64_t)v2607, 0, 1, v2658);
            }
            uint64_t v1126 = v1092;
            uint64_t v1127 = *(int *)(v1092 + 112);
            uint64_t v1128 = (char *)v1090 + v1127;
            uint64_t v1129 = (char *)v1091 + v1127;
            uint64_t v346 = v2671;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1091 + v1127, 1, v2658))
            {
              uint64_t v1130 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1128, v1129, *(void *)(*(void *)(v1130 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v1128, v1129, v2658);
              __swift_storeEnumTagSinglePayload((uint64_t)v1128, 0, 1, v2658);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v1090, 0, 1, v1126);
            uint64_t v685 = v2644;
          }
          uint64_t v1177 = v685[9];
          uint64_t v1178 = (void *)((char *)v683 + v1177);
          uint64_t v1179 = (void *)((char *)v684 + v1177);
          uint64_t v1180 = type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1179, 1, v1180))
          {
            uint64_t v1181 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v1178, v1179, *(void *)(*(void *)(v1181 - 8) + 64));
          }
          else
          {
            uint64_t v1182 = v1179[1];
            *uint64_t v1178 = *v1179;
            v1178[1] = v1182;
            uint64_t v1183 = v1179[3];
            v1178[2] = v1179[2];
            v1178[3] = v1183;
            uint64_t v1184 = v1179[5];
            v1178[4] = v1179[4];
            v1178[5] = v1184;
            uint64_t v1185 = v1179[7];
            v1178[6] = v1179[6];
            v1178[7] = v1185;
            uint64_t v1186 = v1179[9];
            v1178[8] = v1179[8];
            v1178[9] = v1186;
            uint64_t v1187 = v1179[11];
            v1178[10] = v1179[10];
            v1178[11] = v1187;
            uint64_t v1188 = v1179[13];
            v1178[12] = v1179[12];
            v1178[13] = v1188;
            uint64_t v1189 = v1179[15];
            v1178[14] = v1179[14];
            v1178[15] = v1189;
            *((unsigned char *)v1178 + 128) = *((unsigned char *)v1179 + 128);
            *(_WORD *)((char *)v1178 + 129) = *(_WORD *)((char *)v1179 + 129);
            uint64_t v1190 = v1179[18];
            v1178[17] = v1179[17];
            v1178[18] = v1190;
            uint64_t v1191 = v1179[20];
            v1178[19] = v1179[19];
            v1178[20] = v1191;
            uint64_t v1192 = v1179[22];
            v1178[21] = v1179[21];
            v1178[22] = v1192;
            uint64_t v1193 = v1179[24];
            v1178[23] = v1179[23];
            v1178[24] = v1193;
            uint64_t v1194 = v1179[26];
            v1178[25] = v1179[25];
            v1178[26] = v1194;
            uint64_t v1195 = v1179[28];
            v1178[27] = v1179[27];
            v1178[28] = v1195;
            uint64_t v1196 = v1179[30];
            v1178[29] = v1179[29];
            v1178[30] = v1196;
            v1178[31] = v1179[31];
            uint64_t v1197 = *(int *)(v1180 + 96);
            uint64_t v2608 = (char *)v1178 + v1197;
            uint64_t v1198 = (char *)v1179 + v1197;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1198, 1, v2658))
            {
              uint64_t v1199 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2608, v1198, *(void *)(*(void *)(v1199 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v2608, v1198, v2658);
              __swift_storeEnumTagSinglePayload((uint64_t)v2608, 0, 1, v2658);
            }
            uint64_t v1210 = v1180;
            uint64_t v1211 = *(int *)(v1180 + 100);
            uint64_t v1212 = (char *)v1178 + v1211;
            uint64_t v1213 = (char *)v1179 + v1211;
            uint64_t v346 = v2671;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1179 + v1211, 1, v2658))
            {
              uint64_t v1214 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1212, v1213, *(void *)(*(void *)(v1214 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v1212, v1213, v2658);
              __swift_storeEnumTagSinglePayload((uint64_t)v1212, 0, 1, v2658);
            }
            uint64_t v1225 = *(int *)(v1210 + 104);
            uint64_t v1226 = (char *)v1178 + v1225;
            uint64_t v1227 = (char *)v1179 + v1225;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1179 + v1225, 1, v2653))
            {
              uint64_t v1228 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1226, v1227, *(void *)(*(void *)(v1228 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2653 - 8) + 16))(v1226, v1227, v2653);
              __swift_storeEnumTagSinglePayload((uint64_t)v1226, 0, 1, v2653);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v1178, 0, 1, v1210);
            uint64_t v685 = v2644;
          }
          uint64_t v1269 = v685[10];
          uint64_t v1270 = (void *)((char *)v683 + v1269);
          uint64_t v1271 = (void *)((char *)v684 + v1269);
          uint64_t v1272 = type metadata accessor for Trip(0);
          uint64_t v2610 = v683;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1271, 1, v1272))
          {
            uint64_t v1273 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v1270, v1271, *(void *)(*(void *)(v1273 - 8) + 64));
          }
          else
          {
            uint64_t v1274 = v1271[1];
            void *v1270 = *v1271;
            v1270[1] = v1274;
            uint64_t v1275 = v1271[3];
            v1270[2] = v1271[2];
            v1270[3] = v1275;
            uint64_t v1276 = v1271[5];
            v1270[4] = v1271[4];
            v1270[5] = v1276;
            uint64_t v1277 = v1271[7];
            v1270[6] = v1271[6];
            v1270[7] = v1277;
            uint64_t v1278 = v1271[9];
            v1270[8] = v1271[8];
            v1270[9] = v1278;
            uint64_t v1279 = v1271[11];
            v1270[10] = v1271[10];
            v1270[11] = v1279;
            uint64_t v1280 = v1271[13];
            v1270[12] = v1271[12];
            v1270[13] = v1280;
            uint64_t v1281 = v1271[15];
            v1270[14] = v1271[14];
            v1270[15] = v1281;
            *((unsigned char *)v1270 + 128) = *((unsigned char *)v1271 + 128);
            *(_WORD *)((char *)v1270 + 129) = *(_WORD *)((char *)v1271 + 129);
            uint64_t v1282 = v1271[18];
            v1270[17] = v1271[17];
            v1270[18] = v1282;
            uint64_t v1283 = v1271[20];
            v1270[19] = v1271[19];
            v1270[20] = v1283;
            uint64_t v1284 = v1271[22];
            v1270[21] = v1271[21];
            v1270[22] = v1284;
            uint64_t v1285 = v1271[24];
            v1270[23] = v1271[23];
            v1270[24] = v1285;
            uint64_t v1286 = v1271[26];
            v1270[25] = v1271[25];
            v1270[26] = v1286;
            v1270[27] = v1271[27];
            uint64_t v2591 = (int *)v1272;
            uint64_t v1287 = *(int *)(v1272 + 88);
            uint64_t v2576 = (char *)v1270 + v1287;
            uint64_t v2524 = (char *)v1271 + v1287;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2524, 1, v2658))
            {
              uint64_t v1288 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2576, v2524, *(void *)(*(void *)(v1288 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v2576, v2524, v2658);
              __swift_storeEnumTagSinglePayload((uint64_t)v2576, 0, 1, v2658);
            }
            uint64_t v1297 = *(int *)(v1272 + 92);
            uint64_t v1298 = (char *)v1270 + v1297;
            uint64_t v1299 = (char *)v1271 + v1297;
            uint64_t v13 = v2692;
            uint64_t v346 = v2671;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1271 + v1297, 1, v2658))
            {
              uint64_t v1300 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1298, v1299, *(void *)(*(void *)(v1300 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v1298, v1299, v2658);
              __swift_storeEnumTagSinglePayload((uint64_t)v1298, 0, 1, v2658);
            }
            uint64_t v1317 = v2591[24];
            uint64_t v1318 = (char *)v1270 + v1317;
            uint64_t v1319 = (char *)v1271 + v1317;
            *(void *)uint64_t v1318 = *(void *)v1319;
            v1318[8] = v1319[8];
            uint64_t v1320 = v2591[25];
            uint64_t v1321 = (char *)v1270 + v1320;
            uint64_t v1322 = (char *)v1271 + v1320;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1271 + v1320, 1, v2653))
            {
              uint64_t v1323 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1321, v1322, *(void *)(*(void *)(v1323 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2653 - 8) + 16))(v1321, v1322, v2653);
              __swift_storeEnumTagSinglePayload((uint64_t)v1321, 0, 1, v2653);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v1270, 0, 1, (uint64_t)v2591);
            uint64_t v685 = v2644;
          }
          uint64_t v1354 = v685[11];
          uint64_t v1355 = (void *)((char *)v683 + v1354);
          uint64_t v1356 = (void *)((char *)v684 + v1354);
          uint64_t v1357 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1356, 1, (uint64_t)v1357))
          {
            uint64_t v1358 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v1355, v1356, *(void *)(*(void *)(v1358 - 8) + 64));
          }
          else
          {
            uint64_t v1359 = v1356[1];
            void *v1355 = *v1356;
            v1355[1] = v1359;
            uint64_t v1360 = v1356[3];
            v1355[2] = v1356[2];
            v1355[3] = v1360;
            uint64_t v1361 = v1356[5];
            v1355[4] = v1356[4];
            v1355[5] = v1361;
            uint64_t v1362 = v1356[7];
            v1355[6] = v1356[6];
            v1355[7] = v1362;
            uint64_t v1363 = v1356[9];
            v1355[8] = v1356[8];
            v1355[9] = v1363;
            uint64_t v1364 = v1356[11];
            v1355[10] = v1356[10];
            v1355[11] = v1364;
            *((unsigned char *)v1355 + 96) = *((unsigned char *)v1356 + 96);
            uint64_t v1365 = v1356[14];
            v1355[13] = v1356[13];
            v1355[14] = v1365;
            uint64_t v1366 = v1357[13];
            v2592 = (char *)v1355 + v1366;
            v1367 = (char *)v1356 + v1366;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1367, 1, v2653))
            {
              uint64_t v1368 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2592, v1367, *(void *)(*(void *)(v1368 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2653 - 8) + 16))(v2592, v1367, v2653);
              __swift_storeEnumTagSinglePayload((uint64_t)v2592, 0, 1, v2653);
            }
            uint64_t v1377 = v1357[14];
            uint64_t v1378 = (char *)v1355 + v1377;
            uint64_t v1379 = (char *)v1356 + v1377;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1356 + v1377, 1, v2653))
            {
              uint64_t v1380 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1378, v1379, *(void *)(*(void *)(v1380 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2653 - 8) + 16))(v1378, v1379, v2653);
              __swift_storeEnumTagSinglePayload((uint64_t)v1378, 0, 1, v2653);
            }
            uint64_t v1528 = v1357[15];
            uint64_t v1529 = (void *)((char *)v1355 + v1528);
            uint64_t v1530 = (void *)((char *)v1356 + v1528);
            uint64_t v1531 = v1530[1];
            *uint64_t v1529 = *v1530;
            v1529[1] = v1531;
            uint64_t v1532 = v1357[16];
            uint64_t v1533 = (void *)((char *)v1355 + v1532);
            uint64_t v1534 = (void *)((char *)v1356 + v1532);
            uint64_t v1535 = v1534[1];
            *uint64_t v1533 = *v1534;
            v1533[1] = v1535;
            uint64_t v1536 = v1357[17];
            uint64_t v1537 = (void *)((char *)v1355 + v1536);
            uint64_t v1538 = (void *)((char *)v1356 + v1536);
            uint64_t v1539 = v1538[1];
            *uint64_t v1537 = *v1538;
            v1537[1] = v1539;
            uint64_t v1540 = v1357[18];
            uint64_t v2594 = (char *)v1355 + v1540;
            uint64_t v1541 = (char *)v1356 + v1540;
            uint64_t v1542 = type metadata accessor for DateComponents();
            uint64_t v1543 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1542 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1543(v2594, v1541, v1542);
            v1543((char *)v1355 + v1357[19], (char *)v1356 + v1357[19], v1542);
            uint64_t v1544 = v1357[20];
            uint64_t v1545 = (void *)((char *)v1355 + v1544);
            uint64_t v1546 = (void *)((char *)v1356 + v1544);
            uint64_t v1547 = v1546[1];
            void *v1545 = *v1546;
            v1545[1] = v1547;
            uint64_t v1548 = v1357[21];
            uint64_t v1549 = (void *)((char *)v1355 + v1548);
            uint64_t v1550 = (void *)((char *)v1356 + v1548);
            uint64_t v1551 = v1550[1];
            void *v1549 = *v1550;
            v1549[1] = v1551;
            uint64_t v1552 = v1357[22];
            v1553 = (void *)((char *)v1355 + v1552);
            uint64_t v1554 = (void *)((char *)v1356 + v1552);
            uint64_t v1555 = v1554[1];
            void *v1553 = *v1554;
            v1553[1] = v1555;
            uint64_t v1556 = v1357[23];
            uint64_t v1557 = (void *)((char *)v1355 + v1556);
            uint64_t v1558 = (void *)((char *)v1356 + v1556);
            uint64_t v1559 = v1558[1];
            void *v1557 = *v1558;
            v1557[1] = v1559;
            uint64_t v1560 = v1357[24];
            uint64_t v1561 = (void *)((char *)v1355 + v1560);
            uint64_t v1562 = (void *)((char *)v1356 + v1560);
            v2595 = (void *)v1562[1];
            void *v1561 = *v1562;
            v1561[1] = v2595;
            uint64_t v1563 = v1357[25];
            v1564 = (void *)((char *)v1355 + v1563);
            uint64_t v1565 = (void *)((char *)v1356 + v1563);
            uint64_t v2564 = (void *)v1565[1];
            void *v1564 = *v1565;
            v1564[1] = v2564;
            uint64_t v1566 = v1357[26];
            uint64_t v1567 = (void *)((char *)v1355 + v1566);
            v1568 = (void *)((char *)v1356 + v1566);
            uint64_t v2553 = v1568[1];
            void *v1567 = *v1568;
            v1567[1] = v2553;
            uint64_t v1569 = v1357[27];
            uint64_t v1570 = (void *)((char *)v1355 + v1569);
            uint64_t v1571 = (void *)((char *)v1356 + v1569);
            uint64_t v2546 = v1571[1];
            *uint64_t v1570 = *v1571;
            v1570[1] = v2546;
            uint64_t v1572 = v1357[28];
            uint64_t v1573 = (void *)((char *)v1355 + v1572);
            uint64_t v1574 = (void *)((char *)v1356 + v1572);
            uint64_t v2540 = v1574[1];
            *uint64_t v1573 = *v1574;
            v1573[1] = v2540;
            uint64_t v1575 = v1357[29];
            uint64_t v1576 = (void *)((char *)v1355 + v1575);
            uint64_t v1577 = (void *)((char *)v1356 + v1575);
            __dstc = (void *)v1577[1];
            void *v1576 = *v1577;
            v1576[1] = __dstc;
            uint64_t v1578 = v1357[30];
            uint64_t v1579 = (void *)((char *)v1355 + v1578);
            uint64_t v1580 = (void *)((char *)v1356 + v1578);
            uint64_t v2531 = v1580[1];
            void *v1579 = *v1580;
            v1579[1] = v2531;
            uint64_t v1581 = v1357[31];
            uint64_t v1582 = (void *)((char *)v1355 + v1581);
            uint64_t v1583 = (void *)((char *)v1356 + v1581);
            uint64_t v2526 = v1583[1];
            *uint64_t v1582 = *v1583;
            v1582[1] = v2526;
            uint64_t v1584 = v1357[32];
            uint64_t v1585 = (void *)((char *)v1355 + v1584);
            uint64_t v1586 = (void *)((char *)v1356 + v1584);
            uint64_t v2518 = v1586[1];
            *uint64_t v1585 = *v1586;
            v1585[1] = v2518;
            *(void *)((char *)v1355 + v1357[33]) = *(void *)((char *)v1356 + v1357[33]);
            *(void *)((char *)v1355 + v1357[34]) = *(void *)((char *)v1356 + v1357[34]);
            uint64_t v1587 = v1357[35];
            uint64_t v1588 = (void *)((char *)v1355 + v1587);
            uint64_t v1589 = (void *)((char *)v1356 + v1587);
            uint64_t v1590 = v1589[1];
            *uint64_t v1588 = *v1589;
            v1588[1] = v1590;
            uint64_t v1591 = v1357[36];
            uint64_t v1592 = (void *)((char *)v1355 + v1591);
            uint64_t v1593 = (void *)((char *)v1356 + v1591);
            uint64_t v1594 = v1593[1];
            *uint64_t v1592 = *v1593;
            v1592[1] = v1594;
            uint64_t v1595 = v1357[37];
            uint64_t v1596 = (void *)((char *)v1355 + v1595);
            uint64_t v1597 = (void *)((char *)v1356 + v1595);
            uint64_t v1598 = v1597[1];
            *uint64_t v1596 = *v1597;
            v1596[1] = v1598;
            uint64_t v1599 = v1357[38];
            uint64_t v2581 = (char *)v1355 + v1599;
            uint64_t v1600 = (char *)v1356 + v1599;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1600, 1, v2658))
            {
              uint64_t v1601 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2581, v1600, *(void *)(*(void *)(v1601 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v2581, v1600, v2658);
              __swift_storeEnumTagSinglePayload((uint64_t)v2581, 0, 1, v2658);
            }
            uint64_t v346 = v2671;
            uint64_t v1702 = v1357[39];
            uint64_t v1703 = (void *)((char *)v1355 + v1702);
            uint64_t v1704 = (void *)((char *)v1356 + v1702);
            uint64_t v1705 = v1704[1];
            *uint64_t v1703 = *v1704;
            v1703[1] = v1705;
            uint64_t v1706 = v1357[40];
            uint64_t v1707 = (void *)((char *)v1355 + v1706);
            uint64_t v1708 = (void *)((char *)v1356 + v1706);
            uint64_t v1709 = v1708[1];
            *uint64_t v1707 = *v1708;
            v1707[1] = v1709;
            uint64_t v1710 = v1357[41];
            uint64_t v1711 = (char *)v1355 + v1710;
            uint64_t v1712 = (char *)v1356 + v1710;
            v1711[8] = v1712[8];
            *(void *)uint64_t v1711 = *(void *)v1712;
            uint64_t v1713 = v1357[42];
            v1714 = (void *)((char *)v1355 + v1713);
            uint64_t v1715 = (void *)((char *)v1356 + v1713);
            uint64_t v1716 = v1715[1];
            void *v1714 = *v1715;
            v1714[1] = v1716;
            uint64_t v1717 = v1357[43];
            v1718 = (char *)v1355 + v1717;
            uint64_t v1719 = (char *)v1356 + v1717;
            *(_OWORD *)v1718 = *(_OWORD *)v1719;
            *(void *)(v1718 + 13) = *(void *)(v1719 + 13);
            uint64_t v1720 = v1357[44];
            v1721 = (void *)((char *)v1355 + v1720);
            uint64_t v1722 = (void *)((char *)v1356 + v1720);
            uint64_t v1723 = v1722[1];
            void *v1721 = *v1722;
            v1721[1] = v1723;
            uint64_t v1724 = v1357[45];
            uint64_t v1725 = (void *)((char *)v1355 + v1724);
            uint64_t v1726 = (void *)((char *)v1356 + v1724);
            uint64_t v1727 = v1726[1];
            *uint64_t v1725 = *v1726;
            v1725[1] = v1727;
            uint64_t v1728 = v1357[46];
            uint64_t v1729 = (void *)((char *)v1355 + v1728);
            uint64_t v1730 = (void *)((char *)v1356 + v1728);
            uint64_t v1731 = v1730[1];
            *uint64_t v1729 = *v1730;
            v1729[1] = v1731;
            uint64_t v1732 = v1357[47];
            uint64_t v1733 = (void *)((char *)v1355 + v1732);
            uint64_t v1734 = (void *)((char *)v1356 + v1732);
            uint64_t v1735 = v1734[1];
            *uint64_t v1733 = *v1734;
            v1733[1] = v1735;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1355, 0, 1, (uint64_t)v1357);
            uint64_t v13 = v2692;
            long long v683 = v2610;
            uint64_t v684 = v2628;
            uint64_t v685 = v2644;
          }
          uint64_t v1736 = v685[12];
          uint64_t v1737 = (void *)((char *)v683 + v1736);
          uint64_t v1738 = (void *)((char *)v684 + v1736);
          v1739 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1738, 1, (uint64_t)v1739))
          {
            uint64_t v1740 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v1737, v1738, *(void *)(*(void *)(v1740 - 8) + 64));
          }
          else
          {
            uint64_t v1741 = v1738[1];
            *uint64_t v1737 = *v1738;
            v1737[1] = v1741;
            uint64_t v1742 = v1738[3];
            v1737[2] = v1738[2];
            v1737[3] = v1742;
            uint64_t v1743 = v1738[5];
            v1737[4] = v1738[4];
            v1737[5] = v1743;
            uint64_t v1744 = v1738[7];
            v1737[6] = v1738[6];
            v1737[7] = v1744;
            uint64_t v1745 = v1738[9];
            v1737[8] = v1738[8];
            v1737[9] = v1745;
            uint64_t v1746 = v1738[11];
            v1737[10] = v1738[10];
            v1737[11] = v1746;
            *((unsigned char *)v1737 + 96) = *((unsigned char *)v1738 + 96);
            uint64_t v1747 = v1738[14];
            v1737[13] = v1738[13];
            v1737[14] = v1747;
            uint64_t v1748 = v1738[16];
            v1737[15] = v1738[15];
            v1737[16] = v1748;
            uint64_t v1749 = v1739[14];
            v2596 = (char *)v1737 + v1749;
            uint64_t v1750 = (char *)v1738 + v1749;
            uint64_t v2547 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1750, 1, v2547))
            {
              uint64_t v1751 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2596, v1750, *(void *)(*(void *)(v1751 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2547 - 8) + 16))(v2596, v1750, v2547);
              __swift_storeEnumTagSinglePayload((uint64_t)v2596, 0, 1, v2547);
            }
            uint64_t v1760 = v1739[15];
            uint64_t v1761 = (char *)v1737 + v1760;
            uint64_t v1762 = (char *)v1738 + v1760;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1738 + v1760, 1, v2547))
            {
              uint64_t v1763 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1761, v1762, *(void *)(*(void *)(v1763 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2547 - 8) + 16))(v1761, v1762, v2547);
              __swift_storeEnumTagSinglePayload((uint64_t)v1761, 0, 1, v2547);
            }
            uint64_t v1880 = v1739[16];
            uint64_t v1881 = (void *)((char *)v1737 + v1880);
            uint64_t v1882 = (void *)((char *)v1738 + v1880);
            uint64_t v1883 = v1882[1];
            void *v1881 = *v1882;
            v1881[1] = v1883;
            uint64_t v1884 = v1739[17];
            uint64_t v1885 = (void *)((char *)v1737 + v1884);
            uint64_t v1886 = (void *)((char *)v1738 + v1884);
            v2599 = (void *)v1886[1];
            *uint64_t v1885 = *v1886;
            v1885[1] = v2599;
            uint64_t v1887 = v1739[18];
            uint64_t v1888 = (void *)((char *)v1737 + v1887);
            uint64_t v1889 = (void *)((char *)v1738 + v1887);
            uint64_t v2585 = (void *)v1889[1];
            void *v1888 = *v1889;
            v1888[1] = v2585;
            uint64_t v1890 = v1739[19];
            uint64_t v1891 = (void *)((char *)v1737 + v1890);
            uint64_t v1892 = (void *)((char *)v1738 + v1890);
            uint64_t v2567 = (void *)v1892[1];
            void *v1891 = *v1892;
            v1891[1] = v2567;
            uint64_t v1893 = v1739[20];
            uint64_t v1894 = (void *)((char *)v1737 + v1893);
            uint64_t v1895 = (void *)((char *)v1738 + v1893);
            uint64_t v1896 = v1895[1];
            *uint64_t v1894 = *v1895;
            v1894[1] = v1896;
            *(void *)((char *)v1737 + v1739[21]) = *(void *)((char *)v1738 + v1739[21]);
            *(void *)((char *)v1737 + v1739[22]) = *(void *)((char *)v1738 + v1739[22]);
            uint64_t v1897 = v1739[23];
            uint64_t v1898 = (char *)v1737 + v1897;
            uint64_t v1899 = (char *)v1738 + v1897;
            *(void *)uint64_t v1898 = *(void *)v1899;
            v1898[8] = v1899[8];
            uint64_t v1900 = v1739[24];
            uint64_t v1901 = (char *)v1737 + v1900;
            uint64_t v1902 = (char *)v1738 + v1900;
            *(void *)uint64_t v1901 = *(void *)v1902;
            v1901[8] = v1902[8];
            uint64_t v1903 = v1739[25];
            uint64_t v1904 = (void *)((char *)v1737 + v1903);
            uint64_t v1905 = (void *)((char *)v1738 + v1903);
            uint64_t v1906 = v1905[1];
            *uint64_t v1904 = *v1905;
            v1904[1] = v1906;
            uint64_t v1907 = v1739[26];
            uint64_t v1908 = (void *)((char *)v1737 + v1907);
            uint64_t v1909 = (void *)((char *)v1738 + v1907);
            uint64_t v1910 = v1909[1];
            *uint64_t v1908 = *v1909;
            v1908[1] = v1910;
            uint64_t v1911 = v1739[27];
            uint64_t v1912 = (void *)((char *)v1737 + v1911);
            uint64_t v1913 = (void *)((char *)v1738 + v1911);
            uint64_t v1914 = v1913[1];
            *uint64_t v1912 = *v1913;
            v1912[1] = v1914;
            uint64_t v1915 = v1739[28];
            uint64_t v1916 = (void *)((char *)v1737 + v1915);
            uint64_t v1917 = (void *)((char *)v1738 + v1915);
            uint64_t v1918 = v1917[1];
            *uint64_t v1916 = *v1917;
            v1916[1] = v1918;
            uint64_t v1919 = v1739[29];
            uint64_t v1920 = (char *)v1737 + v1919;
            uint64_t v1921 = (char *)v1738 + v1919;
            *(void *)uint64_t v1920 = *(void *)v1921;
            v1920[8] = v1921[8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1737, 0, 1, (uint64_t)v1739);
            uint64_t v13 = v2692;
            uint64_t v346 = v2671;
            long long v683 = v2610;
            uint64_t v684 = v2628;
            uint64_t v685 = v2644;
          }
          uint64_t v1922 = v685[13];
          uint64_t v1923 = (void *)((char *)v683 + v1922);
          uint64_t v1924 = (void *)((char *)v684 + v1922);
          uint64_t v1925 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1924, 1, (uint64_t)v1925))
          {
            uint64_t v1926 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v1923, v1924, *(void *)(*(void *)(v1926 - 8) + 64));
          }
          else
          {
            uint64_t v1927 = v1924[1];
            void *v1923 = *v1924;
            v1923[1] = v1927;
            uint64_t v1928 = v1924[3];
            v1923[2] = v1924[2];
            v1923[3] = v1928;
            uint64_t v1929 = v1924[5];
            v1923[4] = v1924[4];
            v1923[5] = v1929;
            uint64_t v1930 = v1924[7];
            v1923[6] = v1924[6];
            v1923[7] = v1930;
            uint64_t v1931 = v1924[9];
            v1923[8] = v1924[8];
            v1923[9] = v1931;
            uint64_t v1932 = v1924[11];
            v1923[10] = v1924[10];
            v1923[11] = v1932;
            *((unsigned char *)v1923 + 96) = *((unsigned char *)v1924 + 96);
            uint64_t v1933 = v1924[14];
            v1923[13] = v1924[13];
            v1923[14] = v1933;
            uint64_t v1934 = v1924[16];
            v1923[15] = v1924[15];
            v1923[16] = v1934;
            uint64_t v1935 = v1925[14];
            uint64_t v2635 = (char *)v1923 + v1935;
            uint64_t v1936 = (char *)v1924 + v1935;
            uint64_t v2556 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1936, 1, v2556))
            {
              uint64_t v1937 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2635, v1936, *(void *)(*(void *)(v1937 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2556 - 8) + 16))(v2635, v1936, v2556);
              __swift_storeEnumTagSinglePayload((uint64_t)v2635, 0, 1, v2556);
            }
            uint64_t v2306 = v1925[15];
            uint64_t v2307 = (void *)((char *)v1923 + v2306);
            uint64_t v2308 = (void *)((char *)v1924 + v2306);
            uint64_t v2309 = v2308[1];
            void *v2307 = *v2308;
            v2307[1] = v2309;
            uint64_t v2310 = v1925[16];
            uint64_t v2311 = (void *)((char *)v1923 + v2310);
            uint64_t v2312 = (void *)((char *)v1924 + v2310);
            uint64_t v2313 = v2312[1];
            void *v2311 = *v2312;
            v2311[1] = v2313;
            uint64_t v2314 = v1925[17];
            uint64_t v2315 = (void *)((char *)v1923 + v2314);
            uint64_t v2316 = (void *)((char *)v1924 + v2314);
            uint64_t v2317 = v2316[1];
            void *v2315 = *v2316;
            v2315[1] = v2317;
            uint64_t v2318 = v1925[18];
            uint64_t v2319 = (void *)((char *)v1923 + v2318);
            uint64_t v2320 = (void *)((char *)v1924 + v2318);
            uint64_t v2321 = v2320[1];
            void *v2319 = *v2320;
            v2319[1] = v2321;
            uint64_t v2322 = v1925[19];
            uint64_t v2323 = (void *)((char *)v1923 + v2322);
            uint64_t v2324 = (void *)((char *)v1924 + v2322);
            uint64_t v2325 = v2324[1];
            *uint64_t v2323 = *v2324;
            v2323[1] = v2325;
            *(void *)((char *)v1923 + v1925[20]) = *(void *)((char *)v1924 + v1925[20]);
            uint64_t v2326 = v1925[21];
            uint64_t v2327 = (void *)((char *)v1923 + v2326);
            uint64_t v2328 = (void *)((char *)v1924 + v2326);
            uint64_t v2329 = v2328[1];
            *uint64_t v2327 = *v2328;
            v2327[1] = v2329;
            uint64_t v2330 = v1925[22];
            uint64_t v2331 = (void *)((char *)v1923 + v2330);
            uint64_t v2332 = (void *)((char *)v1924 + v2330);
            uint64_t v2333 = v2332[1];
            void *v2331 = *v2332;
            v2331[1] = v2333;
            uint64_t v2334 = v1925[23];
            uint64_t v2335 = (void *)((char *)v1923 + v2334);
            uint64_t v2336 = (void *)((char *)v1924 + v2334);
            uint64_t v2337 = v2336[1];
            void *v2335 = *v2336;
            v2335[1] = v2337;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1923, 0, 1, (uint64_t)v1925);
            uint64_t v13 = v2692;
            uint64_t v346 = v2671;
            long long v683 = v2610;
            uint64_t v685 = v2644;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v683, 0, 1, (uint64_t)v685);
          uint64_t v18 = (uint64_t)v2691;
        }
        uint64_t v2338 = v346[20];
        uint64_t v2339 = (void *)(v18 + v2338);
        uint64_t v2340 = (void *)((char *)v13 + v2338);
        uint64_t v2341 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2340, 1, (uint64_t)v2341))
        {
          uint64_t v2342 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v2339, v2340, *(void *)(*(void *)(v2342 - 8) + 64));
          uint64_t v2343 = v2691;
        }
        else
        {
          uint64_t v2344 = v2340[1];
          void *v2339 = *v2340;
          v2339[1] = v2344;
          uint64_t v2345 = v2340[3];
          v2339[2] = v2340[2];
          v2339[3] = v2345;
          uint64_t v2346 = v2340[5];
          v2339[4] = v2340[4];
          v2339[5] = v2346;
          uint64_t v2347 = v2340[7];
          v2339[6] = v2340[6];
          v2339[7] = v2347;
          uint64_t v2348 = v2340[9];
          v2339[8] = v2340[8];
          v2339[9] = v2348;
          uint64_t v2349 = v2340[11];
          v2339[10] = v2340[10];
          v2339[11] = v2349;
          uint64_t v2350 = v2341[10];
          uint64_t v2351 = (char *)v2339 + v2350;
          uint64_t v2352 = (char *)v2340 + v2350;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2352, 1, v2658))
          {
            uint64_t v2353 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2351, v2352, *(void *)(*(void *)(v2353 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v2351, v2352, v2658);
            __swift_storeEnumTagSinglePayload((uint64_t)v2351, 0, 1, v2658);
          }
          uint64_t v2354 = v2341[11];
          uint64_t v2355 = (char *)v2339 + v2354;
          uint64_t v2356 = (char *)v2340 + v2354;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2340 + v2354, 1, v2658))
          {
            uint64_t v2357 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2355, v2356, *(void *)(*(void *)(v2357 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v2355, v2356, v2658);
            __swift_storeEnumTagSinglePayload((uint64_t)v2355, 0, 1, v2658);
          }
          uint64_t v2358 = v2341[12];
          uint64_t v2359 = (void *)((char *)v2339 + v2358);
          uint64_t v2360 = (void *)((char *)v2340 + v2358);
          uint64_t v2361 = v2360[1];
          *uint64_t v2359 = *v2360;
          v2359[1] = v2361;
          uint64_t v2362 = v2341[13];
          uint64_t v2363 = (void *)((char *)v2339 + v2362);
          uint64_t v2364 = (void *)((char *)v2340 + v2362);
          uint64_t v2365 = v2364[1];
          *uint64_t v2363 = *v2364;
          v2363[1] = v2365;
          uint64_t v2366 = v2341[14];
          uint64_t v2367 = (void *)((char *)v2339 + v2366);
          uint64_t v2368 = (void *)((char *)v2340 + v2366);
          uint64_t v2369 = v2368[1];
          *uint64_t v2367 = *v2368;
          v2367[1] = v2369;
          uint64_t v2370 = v2341[15];
          uint64_t v2371 = (char *)v2339 + v2370;
          uint64_t v2372 = (char *)v2340 + v2370;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2372, 1, v2658))
          {
            uint64_t v2373 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2371, v2372, *(void *)(*(void *)(v2373 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v2371, v2372, v2658);
            __swift_storeEnumTagSinglePayload((uint64_t)v2371, 0, 1, v2658);
          }
          uint64_t v2374 = v2341[16];
          uint64_t v2375 = (void *)((char *)v2339 + v2374);
          v2376 = (void *)((char *)v2340 + v2374);
          uint64_t v2377 = v2376[1];
          *uint64_t v2375 = *v2376;
          v2375[1] = v2377;
          uint64_t v2378 = v2341[17];
          uint64_t v2379 = (void *)((char *)v2339 + v2378);
          v2380 = (void *)((char *)v2340 + v2378);
          uint64_t v2381 = v2380[1];
          void *v2379 = *v2380;
          v2379[1] = v2381;
          uint64_t v2382 = v2341[18];
          uint64_t v2383 = (void *)((char *)v2339 + v2382);
          v2384 = (void *)((char *)v2340 + v2382);
          uint64_t v2385 = v2384[1];
          void *v2383 = *v2384;
          v2383[1] = v2385;
          uint64_t v2386 = v2341[19];
          uint64_t v2387 = (void *)((char *)v2339 + v2386);
          v2388 = (void *)((char *)v2340 + v2386);
          uint64_t v2389 = v2388[1];
          void *v2387 = *v2388;
          v2387[1] = v2389;
          uint64_t v2390 = v2341[20];
          uint64_t v2391 = (void *)((char *)v2339 + v2390);
          v2392 = (void *)((char *)v2340 + v2390);
          uint64_t v2393 = v2392[1];
          void *v2391 = *v2392;
          v2391[1] = v2393;
          uint64_t v2394 = v2341[21];
          uint64_t v2395 = (void *)((char *)v2339 + v2394);
          v2396 = (void *)((char *)v2340 + v2394);
          uint64_t v2397 = v2396[1];
          void *v2395 = *v2396;
          v2395[1] = v2397;
          uint64_t v2398 = v2341[22];
          uint64_t v2399 = (void *)((char *)v2339 + v2398);
          uint64_t v2400 = (void *)((char *)v2340 + v2398);
          uint64_t v2401 = v2400[1];
          void *v2399 = *v2400;
          v2399[1] = v2401;
          uint64_t v2402 = v2341[23];
          uint64_t v2403 = (void *)((char *)v2339 + v2402);
          uint64_t v2404 = (void *)((char *)v2340 + v2402);
          uint64_t v2405 = v2404[1];
          *uint64_t v2403 = *v2404;
          v2403[1] = v2405;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2339, 0, 1, (uint64_t)v2341);
          uint64_t v2343 = v2691;
          uint64_t v13 = v2692;
          uint64_t v346 = v2671;
        }
        uint64_t v2406 = v346[21];
        uint64_t v2407 = (void *)((char *)v2343 + v2406);
        v2408 = (void *)((char *)v13 + v2406);
        uint64_t v2409 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2408, 1, (uint64_t)v2409))
        {
          uint64_t v2410 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v2407, v2408, *(void *)(*(void *)(v2410 - 8) + 64));
        }
        else
        {
          uint64_t v2411 = v2408[1];
          *uint64_t v2407 = *v2408;
          v2407[1] = v2411;
          uint64_t v2412 = v2408[3];
          v2407[2] = v2408[2];
          v2407[3] = v2412;
          uint64_t v2413 = v2408[5];
          v2407[4] = v2408[4];
          v2407[5] = v2413;
          uint64_t v2414 = v2408[7];
          v2407[6] = v2408[6];
          v2407[7] = v2414;
          uint64_t v2415 = v2408[9];
          v2407[8] = v2408[8];
          v2407[9] = v2415;
          uint64_t v2416 = v2408[11];
          v2407[10] = v2408[10];
          v2407[11] = v2416;
          uint64_t v2417 = v2409[11];
          v2646 = (char *)v2407 + v2417;
          uint64_t v2418 = (char *)v2408 + v2417;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2418, 1, v2658))
          {
            uint64_t v2419 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2646, v2418, *(void *)(*(void *)(v2419 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v2646, v2418, v2658);
            __swift_storeEnumTagSinglePayload((uint64_t)v2646, 0, 1, v2658);
          }
          uint64_t v2420 = v2409[12];
          uint64_t v2421 = (void *)((char *)v2407 + v2420);
          uint64_t v2422 = (void *)((char *)v2408 + v2420);
          uint64_t v2423 = v2422[1];
          *uint64_t v2421 = *v2422;
          v2421[1] = v2423;
          *(void *)((char *)v2407 + v2409[13]) = *(void *)((char *)v2408 + v2409[13]);
          uint64_t v2424 = v2409[14];
          uint64_t v2425 = (char *)v2407 + v2424;
          v2426 = (char *)v2408 + v2424;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v13 = v2692;
          uint64_t v346 = v2671;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2426, 1, v2658))
          {
            uint64_t v2427 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2425, v2426, *(void *)(*(void *)(v2427 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v2425, v2426, v2658);
            __swift_storeEnumTagSinglePayload((uint64_t)v2425, 0, 1, v2658);
          }
          *(void *)((char *)v2407 + v2409[15]) = *(void *)((char *)v2408 + v2409[15]);
          *(void *)((char *)v2407 + v2409[16]) = *(void *)((char *)v2408 + v2409[16]);
          uint64_t v2428 = v2409[17];
          uint64_t v2429 = (void *)((char *)v2407 + v2428);
          v2430 = (void *)((char *)v2408 + v2428);
          uint64_t v2431 = v2430[1];
          void *v2429 = *v2430;
          v2429[1] = v2431;
          *(void *)((char *)v2407 + v2409[18]) = *(void *)((char *)v2408 + v2409[18]);
          *(void *)((char *)v2407 + v2409[19]) = *(void *)((char *)v2408 + v2409[19]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2407, 0, 1, (uint64_t)v2409);
        }
        uint64_t v2432 = v346[22];
        uint64_t v2433 = (void *)((char *)v2691 + v2432);
        v2434 = (void *)((char *)v13 + v2432);
        v2435 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2434, 1, (uint64_t)v2435))
        {
          uint64_t v2436 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v2433, v2434, *(void *)(*(void *)(v2436 - 8) + 64));
        }
        else
        {
          uint64_t v2437 = v2434[1];
          void *v2433 = *v2434;
          v2433[1] = v2437;
          uint64_t v2438 = v2434[3];
          v2433[2] = v2434[2];
          v2433[3] = v2438;
          uint64_t v2439 = v2434[5];
          v2433[4] = v2434[4];
          v2433[5] = v2439;
          uint64_t v2440 = v2434[7];
          v2433[6] = v2434[6];
          v2433[7] = v2440;
          uint64_t v2441 = v2435[8];
          uint64_t v2442 = (char *)v2433 + v2441;
          uint64_t v2443 = (char *)v2434 + v2441;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2443, 1, v2653))
          {
            uint64_t v2444 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2442, v2443, *(void *)(*(void *)(v2444 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2653 - 8) + 16))(v2442, v2443, v2653);
            __swift_storeEnumTagSinglePayload((uint64_t)v2442, 0, 1, v2653);
          }
          uint64_t v2445 = v2435[9];
          uint64_t v2446 = (void *)((char *)v2433 + v2445);
          uint64_t v2447 = (void *)((char *)v2434 + v2445);
          uint64_t v2448 = v2447[1];
          *uint64_t v2446 = *v2447;
          v2446[1] = v2448;
          uint64_t v2449 = v2435[10];
          uint64_t v2450 = (void *)((char *)v2433 + v2449);
          uint64_t v2451 = (void *)((char *)v2434 + v2449);
          uint64_t v2452 = v2451[1];
          void *v2450 = *v2451;
          v2450[1] = v2452;
          uint64_t v2453 = v2435[11];
          uint64_t v2454 = (void *)((char *)v2433 + v2453);
          uint64_t v2455 = (void *)((char *)v2434 + v2453);
          uint64_t v2456 = v2455[1];
          *uint64_t v2454 = *v2455;
          v2454[1] = v2456;
          uint64_t v2457 = v2435[12];
          uint64_t v2458 = (char *)v2433 + v2457;
          uint64_t v2459 = (char *)v2434 + v2457;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v13 = v2692;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2459, 1, v2658))
          {
            uint64_t v2460 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2458, v2459, *(void *)(*(void *)(v2460 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v2458, v2459, v2658);
            __swift_storeEnumTagSinglePayload((uint64_t)v2458, 0, 1, v2658);
          }
          uint64_t v2461 = v2435[13];
          uint64_t v2462 = (char *)v2433 + v2461;
          uint64_t v2463 = (char *)v2434 + v2461;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2434 + v2461, 1, v2658))
          {
            uint64_t v2464 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2462, v2463, *(void *)(*(void *)(v2464 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v2462, v2463, v2658);
            __swift_storeEnumTagSinglePayload((uint64_t)v2462, 0, 1, v2658);
          }
          uint64_t v2465 = v2435[14];
          uint64_t v2466 = (char *)v2433 + v2465;
          v2467 = (char *)v2434 + v2465;
          *(void *)uint64_t v2466 = *(void *)v2467;
          v2466[8] = v2467[8];
          uint64_t v2468 = v2435[15];
          uint64_t v2469 = (void *)((char *)v2433 + v2468);
          uint64_t v2470 = (void *)((char *)v2434 + v2468);
          uint64_t v2471 = v2470[1];
          void *v2469 = *v2470;
          v2469[1] = v2471;
          uint64_t v2472 = v2435[16];
          uint64_t v2473 = (void *)((char *)v2433 + v2472);
          uint64_t v2474 = (void *)((char *)v2434 + v2472);
          uint64_t v2475 = v2474[1];
          void *v2473 = *v2474;
          v2473[1] = v2475;
          uint64_t v2476 = v2435[17];
          uint64_t v2477 = (void *)((char *)v2433 + v2476);
          uint64_t v2478 = (void *)((char *)v2434 + v2476);
          uint64_t v2479 = v2478[1];
          *uint64_t v2477 = *v2478;
          v2477[1] = v2479;
          uint64_t v2480 = v2435[18];
          uint64_t v2481 = (void *)((char *)v2433 + v2480);
          v2482 = (void *)((char *)v2434 + v2480);
          uint64_t v2483 = v2482[1];
          void *v2481 = *v2482;
          v2481[1] = v2483;
          uint64_t v2484 = v2435[19];
          uint64_t v2485 = (void *)((char *)v2433 + v2484);
          v2486 = (void *)((char *)v2434 + v2484);
          uint64_t v2487 = v2486[1];
          void *v2485 = *v2486;
          v2485[1] = v2487;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2433, 0, 1, (uint64_t)v2435);
        }
        uint64_t v18 = (uint64_t)v2691;
        uint64_t v2122 = v346[23];
        goto LABEL_541;
      case 2u:
        uint64_t v2682 = v12;
        uint64_t v51 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v51;
        uint64_t v52 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v52;
        uint64_t v53 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v53;
        uint64_t v54 = (int *)type metadata accessor for CalendarEvent(0);
        uint64_t v55 = v54[7];
        uint64_t v56 = (char *)v2691 + v55;
        uint64_t v57 = (char *)v2692 + v55;
        uint64_t v58 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, v58))
        {
          uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
          __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v58);
        }
        uint64_t v352 = v54[8];
        uint64_t v353 = (char *)v2691 + v352;
        uint64_t v354 = (char *)v2692 + v352;
        if (__swift_getEnumTagSinglePayload((uint64_t)v2692 + v352, 1, v58))
        {
          uint64_t v355 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v353, v354, *(void *)(*(void *)(v355 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v353, v354, v58);
          __swift_storeEnumTagSinglePayload((uint64_t)v353, 0, 1, v58);
        }
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        uint64_t v519 = v54[9];
        uint64_t v520 = (void *)((char *)v2691 + v519);
        uint64_t v521 = (void *)((char *)v2692 + v519);
        uint64_t v522 = v521[1];
        *uint64_t v520 = *v521;
        v520[1] = v522;
        *(void *)((char *)v2691 + v54[10]) = *(void *)((char *)v2692 + v54[10]);
        *(void *)((char *)v2691 + v54[11]) = *(void *)((char *)v2692 + v54[11]);
        uint64_t v523 = v54[12];
        uint64_t v524 = (void *)((char *)v2691 + v523);
        uint64_t v525 = (void *)((char *)v2692 + v523);
        uint64_t v526 = v525[1];
        void *v524 = *v525;
        v524[1] = v526;
        uint64_t v527 = v54[13];
        uint64_t v528 = (void *)((char *)v2691 + v527);
        uint64_t v529 = (char *)v2692 + v527;
        uint64_t v530 = *(void *)((char *)v2692 + v527);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v530)
        {
          uint64_t v531 = *((void *)v529 + 1);
          uint64_t v532 = *((void *)v529 + 2);
          void *v528 = v530;
          v528[1] = v531;
          uint64_t v533 = *((void *)v529 + 3);
          uint64_t v534 = *((void *)v529 + 4);
          v528[2] = v532;
          v528[3] = v533;
          v528[4] = v534;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v687 = *((_OWORD *)v529 + 1);
          *(_OWORD *)uint64_t v528 = *(_OWORD *)v529;
          *((_OWORD *)v528 + 1) = v687;
          v528[4] = *((void *)v529 + 4);
        }
        uint64_t v17 = a3;
        uint64_t v13 = v2692;
        goto LABEL_548;
      case 3u:
        uint64_t v2682 = v12;
        uint64_t v60 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v60;
        uint64_t v61 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v61;
        uint64_t v62 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v62;
        uint64_t v63 = v2692[7];
        v2691[6] = v2692[6];
        v2691[7] = v63;
        uint64_t v64 = v2692[9];
        v2691[8] = v2692[8];
        v2691[9] = v64;
        v2691[10] = v2692[10];
        uint64_t v65 = type metadata accessor for Photo(0);
        uint64_t v66 = *(int *)(v65 + 44);
        uint64_t v2659 = (char *)v2691 + v66;
        uint64_t v2672 = (int *)v65;
        uint64_t v67 = (char *)v2692 + v66;
        uint64_t v68 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v67, 1, v68))
        {
          uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2659, v67, *(void *)(*(void *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v2659, v67, v68);
          __swift_storeEnumTagSinglePayload((uint64_t)v2659, 0, 1, v68);
        }
        *(void *)((char *)v2691 + v2672[12]) = *(void *)((char *)v2692 + v2672[12]);
        *(void *)((char *)v2691 + v2672[13]) = *(void *)((char *)v2692 + v2672[13]);
        *(void *)((char *)v2691 + v2672[14]) = *(void *)((char *)v2692 + v2672[14]);
        *(void *)((char *)v2691 + v2672[15]) = *(void *)((char *)v2692 + v2672[15]);
        uint64_t v356 = v2672[16];
        uint64_t v357 = (void *)((char *)v2691 + v356);
        uint64_t v358 = (void *)((char *)v2692 + v356);
        uint64_t v359 = v358[1];
        void *v357 = *v358;
        v357[1] = v359;
        uint64_t v360 = v2672[17];
        Swift::String v361 = (void *)((char *)v2691 + v360);
        uint64_t v362 = (void *)((char *)v2692 + v360);
        uint64_t v363 = type metadata accessor for PartialExtractedAttributes(0);
        swift_bridgeObjectRetain();
        uint64_t v364 = v362;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v365 = (int *)v363;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v2667 = v68;
        if (__swift_getEnumTagSinglePayload((uint64_t)v362, 1, v363))
        {
          uint64_t v366 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v361, v362, *(void *)(*(void *)(v366 - 8) + 64));
          uint64_t v13 = v2692;
        }
        else
        {
          uint64_t v535 = v362[1];
          *Swift::String v361 = *v362;
          v361[1] = v535;
          uint64_t v536 = *(int *)(v363 + 20);
          uint64_t v537 = (void *)((char *)v361 + v536);
          uint64_t v538 = (void *)((char *)v362 + v536);
          uint64_t v539 = type metadata accessor for RentalCarReservation(0);
          swift_bridgeObjectRetain();
          uint64_t v2642 = v364;
          uint64_t v2654 = v361;
          if (__swift_getEnumTagSinglePayload((uint64_t)v538, 1, v539))
          {
            uint64_t v540 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v537, v538, *(void *)(*(void *)(v540 - 8) + 64));
            uint64_t v13 = v2692;
          }
          else
          {
            uint64_t v757 = v538[1];
            void *v537 = *v538;
            v537[1] = v757;
            uint64_t v758 = v538[3];
            v537[2] = v538[2];
            v537[3] = v758;
            uint64_t v759 = v538[5];
            v537[4] = v538[4];
            v537[5] = v759;
            uint64_t v760 = v538[7];
            v537[6] = v538[6];
            v537[7] = v760;
            uint64_t v761 = v538[9];
            v537[8] = v538[8];
            v537[9] = v761;
            uint64_t v762 = v538[11];
            v537[10] = v538[10];
            v537[11] = v762;
            uint64_t v763 = v538[13];
            v537[12] = v538[12];
            v537[13] = v763;
            uint64_t v764 = v538[15];
            v537[14] = v538[14];
            v537[15] = v764;
            *((unsigned char *)v537 + 128) = *((unsigned char *)v538 + 128);
            *(_WORD *)((char *)v537 + 129) = *(_WORD *)((char *)v538 + 129);
            uint64_t v765 = v538[18];
            v537[17] = v538[17];
            v537[18] = v765;
            uint64_t v766 = v538[20];
            v537[19] = v538[19];
            v537[20] = v766;
            uint64_t v767 = v538[22];
            v537[21] = v538[21];
            v537[22] = v767;
            uint64_t v2514 = v538[24];
            v537[23] = v538[23];
            v537[24] = v2514;
            uint64_t v768 = v538[26];
            v537[25] = v538[25];
            v537[26] = v768;
            uint64_t v769 = v538[28];
            v537[27] = v538[27];
            v537[28] = v769;
            uint64_t v770 = v538[30];
            v537[29] = v538[29];
            v537[30] = v770;
            uint64_t v771 = v538[32];
            v537[31] = v538[31];
            v537[32] = v771;
            uint64_t v772 = v538[34];
            v537[33] = v538[33];
            v537[34] = v772;
            uint64_t v773 = v538[36];
            v537[35] = v538[35];
            v537[36] = v773;
            uint64_t v774 = v538[38];
            v537[37] = v538[37];
            v537[38] = v774;
            uint64_t v775 = v538[40];
            v537[39] = v538[39];
            v537[40] = v775;
            uint64_t v776 = v538[42];
            v537[41] = v538[41];
            v537[42] = v776;
            uint64_t v777 = v538[44];
            v537[43] = v538[43];
            v537[44] = v777;
            uint64_t v778 = v538[46];
            v537[45] = v538[45];
            v537[46] = v778;
            uint64_t v779 = v538[47];
            *((unsigned char *)v537 + 384) = *((unsigned char *)v538 + 384);
            v537[47] = v779;
            uint64_t v780 = v538[50];
            v537[49] = v538[49];
            v537[50] = v780;
            uint64_t v781 = v538[52];
            v537[51] = v538[51];
            v537[52] = v781;
            uint64_t v782 = *(int *)(v539 + 140);
            uint64_t v2629 = (char *)v537 + v782;
            uint64_t v783 = (char *)v538 + v782;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v13 = v2692;
            if (__swift_getEnumTagSinglePayload((uint64_t)v783, 1, v68))
            {
              uint64_t v784 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2629, v783, *(void *)(*(void *)(v784 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v2629, v783, v68);
              __swift_storeEnumTagSinglePayload((uint64_t)v2629, 0, 1, v68);
            }
            uint64_t v817 = *(int *)(v539 + 144);
            uint64_t v818 = (char *)v537 + v817;
            uint64_t v819 = (char *)v538 + v817;
            if (__swift_getEnumTagSinglePayload((uint64_t)v538 + v817, 1, v68))
            {
              uint64_t v820 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v818, v819, *(void *)(*(void *)(v820 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v818, v819, v68);
              __swift_storeEnumTagSinglePayload((uint64_t)v818, 0, 1, v68);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v537, 0, 1, v539);
            uint64_t v364 = v2642;
          }
          uint64_t v851 = *(int *)(v363 + 24);
          uint64_t v852 = (void *)((char *)v361 + v851);
          uint64_t v853 = (void *)((char *)v364 + v851);
          uint64_t v854 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v853, 1, v854))
          {
            uint64_t v855 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v852, v853, *(void *)(*(void *)(v855 - 8) + 64));
          }
          else
          {
            uint64_t v856 = v853[1];
            *uint64_t v852 = *v853;
            v852[1] = v856;
            uint64_t v857 = v853[3];
            v852[2] = v853[2];
            v852[3] = v857;
            uint64_t v858 = v853[5];
            v852[4] = v853[4];
            v852[5] = v858;
            uint64_t v859 = v853[7];
            v852[6] = v853[6];
            v852[7] = v859;
            uint64_t v860 = v853[9];
            v852[8] = v853[8];
            v852[9] = v860;
            uint64_t v861 = v853[11];
            v852[10] = v853[10];
            v852[11] = v861;
            uint64_t v862 = v853[13];
            v852[12] = v853[12];
            v852[13] = v862;
            uint64_t v863 = v853[15];
            v852[14] = v853[14];
            v852[15] = v863;
            *((unsigned char *)v852 + 128) = *((unsigned char *)v853 + 128);
            *(_WORD *)((char *)v852 + 129) = *(_WORD *)((char *)v853 + 129);
            uint64_t v864 = v853[18];
            v852[17] = v853[17];
            v852[18] = v864;
            uint64_t v865 = v853[20];
            v852[19] = v853[19];
            v852[20] = v865;
            uint64_t v866 = v853[22];
            v852[21] = v853[21];
            v852[22] = v866;
            uint64_t v867 = v853[24];
            v852[23] = v853[23];
            v852[24] = v867;
            v2603 = (void *)v853[26];
            v852[25] = v853[25];
            v852[26] = v2603;
            uint64_t v868 = v853[28];
            v852[27] = v853[27];
            v852[28] = v868;
            uint64_t v869 = v853[30];
            v852[29] = v853[29];
            v852[30] = v869;
            uint64_t v870 = v853[32];
            v852[31] = v853[31];
            v852[32] = v870;
            uint64_t v871 = v853[34];
            v852[33] = v853[33];
            v852[34] = v871;
            uint64_t v872 = v853[36];
            uint64_t v873 = v853[35];
            *((unsigned char *)v852 + 296) = *((unsigned char *)v853 + 296);
            v852[35] = v873;
            v852[36] = v872;
            uint64_t v874 = *(int *)(v854 + 112);
            uint64_t v2630 = (char *)v852 + v874;
            uint64_t v875 = (char *)v853 + v874;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v875, 1, v68))
            {
              uint64_t v876 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2630, v875, *(void *)(*(void *)(v876 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v2630, v875, v68);
              __swift_storeEnumTagSinglePayload((uint64_t)v2630, 0, 1, v68);
            }
            uint64_t v908 = v854;
            uint64_t v909 = *(int *)(v854 + 116);
            uint64_t v910 = (char *)v852 + v909;
            uint64_t v911 = (char *)v853 + v909;
            Swift::String v361 = v2654;
            if (__swift_getEnumTagSinglePayload((uint64_t)v853 + v909, 1, v68))
            {
              uint64_t v912 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v910, v911, *(void *)(*(void *)(v912 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v910, v911, v68);
              __swift_storeEnumTagSinglePayload((uint64_t)v910, 0, 1, v68);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v852, 0, 1, v908);
            uint64_t v364 = v2642;
          }
          uint64_t v945 = v365[7];
          uint64_t v946 = (void *)((char *)v361 + v945);
          uint64_t v947 = (void *)((char *)v364 + v945);
          long long v948 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v947, 1, (uint64_t)v948))
          {
            uint64_t v949 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v946, v947, *(void *)(*(void *)(v949 - 8) + 64));
          }
          else
          {
            uint64_t v950 = v947[1];
            *uint64_t v946 = *v947;
            v946[1] = v950;
            uint64_t v951 = v947[3];
            v946[2] = v947[2];
            v946[3] = v951;
            uint64_t v952 = v947[5];
            v946[4] = v947[4];
            v946[5] = v952;
            uint64_t v953 = v947[7];
            v946[6] = v947[6];
            v946[7] = v953;
            uint64_t v954 = v947[9];
            v946[8] = v947[8];
            v946[9] = v954;
            uint64_t v955 = v947[11];
            v946[10] = v947[10];
            v946[11] = v955;
            uint64_t v956 = v947[13];
            v946[12] = v947[12];
            v946[13] = v956;
            uint64_t v957 = v947[15];
            v946[14] = v947[14];
            v946[15] = v957;
            *((unsigned char *)v946 + 128) = *((unsigned char *)v947 + 128);
            *(_WORD *)((char *)v946 + 129) = *(_WORD *)((char *)v947 + 129);
            uint64_t v958 = v947[18];
            v946[17] = v947[17];
            v946[18] = v958;
            uint64_t v959 = v947[20];
            v946[19] = v947[19];
            v946[20] = v959;
            uint64_t v960 = v947[22];
            v946[21] = v947[21];
            v946[22] = v960;
            uint64_t v2516 = v947[24];
            v946[23] = v947[23];
            v946[24] = v2516;
            uint64_t v961 = v947[26];
            v946[25] = v947[25];
            v946[26] = v961;
            uint64_t v962 = v947[28];
            v946[27] = v947[27];
            v946[28] = v962;
            uint64_t v2605 = (void *)v947[30];
            v946[29] = v947[29];
            v946[30] = v2605;
            uint64_t v963 = v947[32];
            v946[31] = v947[31];
            v946[32] = v963;
            uint64_t v964 = v947[34];
            v946[33] = v947[33];
            v946[34] = v964;
            uint64_t v965 = v947[36];
            uint64_t v966 = v947[35];
            *((unsigned char *)v946 + 296) = *((unsigned char *)v947 + 296);
            v946[35] = v966;
            v946[36] = v965;
            uint64_t v967 = v947[39];
            v946[38] = v947[38];
            v946[39] = v967;
            uint64_t v968 = v948[29];
            uint64_t v2631 = (char *)v946 + v968;
            uint64_t v969 = (char *)v947 + v968;
            uint64_t v970 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v969, 1, v970))
            {
              uint64_t v971 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2631, v969, *(void *)(*(void *)(v971 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v970 - 8) + 16))(v2631, v969, v970);
              __swift_storeEnumTagSinglePayload((uint64_t)v2631, 0, 1, v970);
            }
            uint64_t v1007 = v948[30];
            uint64_t v1008 = (void *)((char *)v946 + v1007);
            uint64_t v1009 = (void *)((char *)v947 + v1007);
            uint64_t v1010 = v1009[1];
            *uint64_t v1008 = *v1009;
            v1008[1] = v1010;
            uint64_t v1011 = v948[31];
            uint64_t v1012 = (char *)v946 + v1011;
            uint64_t v1013 = (char *)v947 + v1011;
            swift_bridgeObjectRetain();
            Swift::String v361 = v2654;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1013, 1, v2667))
            {
              uint64_t v1014 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1012, v1013, *(void *)(*(void *)(v1014 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2667 - 8) + 16))(v1012, v1013, v2667);
              __swift_storeEnumTagSinglePayload((uint64_t)v1012, 0, 1, v2667);
            }
            uint64_t v1027 = v948[32];
            uint64_t v1028 = (char *)v946 + v1027;
            uint64_t v1029 = (char *)v947 + v1027;
            if (__swift_getEnumTagSinglePayload((uint64_t)v947 + v1027, 1, v2667))
            {
              uint64_t v1030 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1028, v1029, *(void *)(*(void *)(v1030 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2667 - 8) + 16))(v1028, v1029, v2667);
              __swift_storeEnumTagSinglePayload((uint64_t)v1028, 0, 1, v2667);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v946, 0, 1, (uint64_t)v948);
            uint64_t v364 = v2642;
          }
          uint64_t v1062 = v365[8];
          uint64_t v1063 = (void *)((char *)v361 + v1062);
          uint64_t v1064 = (void *)((char *)v364 + v1062);
          uint64_t v1065 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1064, 1, v1065))
          {
            uint64_t v1066 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v1063, v1064, *(void *)(*(void *)(v1066 - 8) + 64));
          }
          else
          {
            uint64_t v1067 = v1064[1];
            *uint64_t v1063 = *v1064;
            v1063[1] = v1067;
            uint64_t v1068 = v1064[3];
            v1063[2] = v1064[2];
            v1063[3] = v1068;
            uint64_t v1069 = v1064[5];
            v1063[4] = v1064[4];
            v1063[5] = v1069;
            uint64_t v1070 = v1064[7];
            v1063[6] = v1064[6];
            v1063[7] = v1070;
            uint64_t v1071 = v1064[9];
            v1063[8] = v1064[8];
            v1063[9] = v1071;
            uint64_t v1072 = v1064[11];
            v1063[10] = v1064[10];
            v1063[11] = v1072;
            uint64_t v1073 = v1064[13];
            v1063[12] = v1064[12];
            v1063[13] = v1073;
            uint64_t v1074 = v1064[15];
            v1063[14] = v1064[14];
            v1063[15] = v1074;
            *((unsigned char *)v1063 + 128) = *((unsigned char *)v1064 + 128);
            *(_WORD *)((char *)v1063 + 129) = *(_WORD *)((char *)v1064 + 129);
            uint64_t v1075 = v1064[18];
            v1063[17] = v1064[17];
            v1063[18] = v1075;
            uint64_t v1076 = v1064[20];
            v1063[19] = v1064[19];
            v1063[20] = v1076;
            uint64_t v1077 = v1064[22];
            v1063[21] = v1064[21];
            v1063[22] = v1077;
            uint64_t v1078 = v1064[24];
            v1063[23] = v1064[23];
            v1063[24] = v1078;
            uint64_t v1079 = v1064[26];
            v1063[25] = v1064[25];
            v1063[26] = v1079;
            uint64_t v1080 = v1064[28];
            v1063[27] = v1064[27];
            v1063[28] = v1080;
            uint64_t v1081 = v1064[30];
            v1063[29] = v1064[29];
            v1063[30] = v1081;
            uint64_t v1082 = v1064[32];
            v1063[31] = v1064[31];
            v1063[32] = v1082;
            uint64_t v1084 = v1064[33];
            uint64_t v1083 = v1064[34];
            *((unsigned char *)v1063 + 280) = *((unsigned char *)v1064 + 280);
            v1063[33] = v1084;
            v1063[34] = v1083;
            uint64_t v1085 = v1064[37];
            v1063[36] = v1064[36];
            v1063[37] = v1085;
            uint64_t v1086 = *(int *)(v1065 + 108);
            uint64_t v2632 = (char *)v1063 + v1086;
            uint64_t v1087 = (char *)v1064 + v1086;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1087, 1, v2667))
            {
              uint64_t v1088 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2632, v1087, *(void *)(*(void *)(v1088 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2667 - 8) + 16))(v2632, v1087, v2667);
              __swift_storeEnumTagSinglePayload((uint64_t)v2632, 0, 1, v2667);
            }
            uint64_t v1121 = v1065;
            uint64_t v1122 = *(int *)(v1065 + 112);
            uint64_t v1123 = (char *)v1063 + v1122;
            uint64_t v1124 = (char *)v1064 + v1122;
            Swift::String v361 = v2654;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1064 + v1122, 1, v2667))
            {
              uint64_t v1125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1123, v1124, *(void *)(*(void *)(v1125 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2667 - 8) + 16))(v1123, v1124, v2667);
              __swift_storeEnumTagSinglePayload((uint64_t)v1123, 0, 1, v2667);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v1063, 0, 1, v1121);
            uint64_t v364 = v2642;
          }
          uint64_t v1154 = v365[9];
          uint64_t v1155 = (void *)((char *)v361 + v1154);
          uint64_t v1156 = (void *)((char *)v364 + v1154);
          uint64_t v1157 = type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1156, 1, v1157))
          {
            uint64_t v1158 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v1155, v1156, *(void *)(*(void *)(v1158 - 8) + 64));
          }
          else
          {
            uint64_t v1159 = v1156[1];
            *uint64_t v1155 = *v1156;
            v1155[1] = v1159;
            uint64_t v1160 = v1156[3];
            v1155[2] = v1156[2];
            v1155[3] = v1160;
            uint64_t v1161 = v1156[5];
            v1155[4] = v1156[4];
            v1155[5] = v1161;
            uint64_t v1162 = v1156[7];
            v1155[6] = v1156[6];
            v1155[7] = v1162;
            uint64_t v1163 = v1156[9];
            v1155[8] = v1156[8];
            v1155[9] = v1163;
            uint64_t v1164 = v1156[11];
            v1155[10] = v1156[10];
            v1155[11] = v1164;
            uint64_t v1165 = v1156[13];
            v1155[12] = v1156[12];
            v1155[13] = v1165;
            uint64_t v1166 = v1156[15];
            v1155[14] = v1156[14];
            v1155[15] = v1166;
            *((unsigned char *)v1155 + 128) = *((unsigned char *)v1156 + 128);
            *(_WORD *)((char *)v1155 + 129) = *(_WORD *)((char *)v1156 + 129);
            uint64_t v1167 = v1156[18];
            v1155[17] = v1156[17];
            v1155[18] = v1167;
            uint64_t v1168 = v1156[20];
            v1155[19] = v1156[19];
            v1155[20] = v1168;
            uint64_t v1169 = v1156[22];
            v1155[21] = v1156[21];
            v1155[22] = v1169;
            uint64_t v1170 = v1156[24];
            v1155[23] = v1156[23];
            v1155[24] = v1170;
            uint64_t v1171 = v1156[26];
            v1155[25] = v1156[25];
            v1155[26] = v1171;
            uint64_t v1172 = v1156[28];
            v1155[27] = v1156[27];
            v1155[28] = v1172;
            uint64_t v1173 = v1156[30];
            v1155[29] = v1156[29];
            v1155[30] = v1173;
            v1155[31] = v1156[31];
            uint64_t v1174 = *(int *)(v1157 + 96);
            uint64_t v2633 = (char *)v1155 + v1174;
            uint64_t v1175 = (char *)v1156 + v1174;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1175, 1, v2667))
            {
              uint64_t v1176 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2633, v1175, *(void *)(*(void *)(v1176 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2667 - 8) + 16))(v2633, v1175, v2667);
              __swift_storeEnumTagSinglePayload((uint64_t)v2633, 0, 1, v2667);
            }
            uint64_t v1205 = v1157;
            uint64_t v1206 = *(int *)(v1157 + 100);
            uint64_t v1207 = (char *)v1155 + v1206;
            uint64_t v1208 = (char *)v1156 + v1206;
            Swift::String v361 = v2654;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1156 + v1206, 1, v2667))
            {
              uint64_t v1209 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1207, v1208, *(void *)(*(void *)(v1209 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2667 - 8) + 16))(v1207, v1208, v2667);
              __swift_storeEnumTagSinglePayload((uint64_t)v1207, 0, 1, v2667);
            }
            uint64_t v1220 = *(int *)(v1205 + 104);
            uint64_t v1221 = (char *)v1155 + v1220;
            uint64_t v1222 = (char *)v1156 + v1220;
            uint64_t v1223 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1222, 1, v1223))
            {
              uint64_t v1224 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1221, v1222, *(void *)(*(void *)(v1224 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1223 - 8) + 16))(v1221, v1222, v1223);
              __swift_storeEnumTagSinglePayload((uint64_t)v1221, 0, 1, v1223);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v1155, 0, 1, v1205);
            uint64_t v364 = v2642;
          }
          uint64_t v1249 = v365[10];
          uint64_t v1250 = (void *)((char *)v361 + v1249);
          uint64_t v1251 = (void *)((char *)v364 + v1249);
          uint64_t v1252 = type metadata accessor for Trip(0);
          uint64_t v2634 = v365;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1251, 1, v1252))
          {
            uint64_t v1253 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v1250, v1251, *(void *)(*(void *)(v1253 - 8) + 64));
          }
          else
          {
            uint64_t v1254 = v1251[1];
            void *v1250 = *v1251;
            v1250[1] = v1254;
            uint64_t v1255 = v1251[3];
            v1250[2] = v1251[2];
            v1250[3] = v1255;
            uint64_t v1256 = v1251[5];
            v1250[4] = v1251[4];
            v1250[5] = v1256;
            uint64_t v1257 = v1251[7];
            v1250[6] = v1251[6];
            v1250[7] = v1257;
            uint64_t v1258 = v1251[9];
            v1250[8] = v1251[8];
            v1250[9] = v1258;
            uint64_t v1259 = v1251[11];
            v1250[10] = v1251[10];
            v1250[11] = v1259;
            uint64_t v1260 = v1251[13];
            v1250[12] = v1251[12];
            v1250[13] = v1260;
            uint64_t v1261 = v1251[15];
            v1250[14] = v1251[14];
            v1250[15] = v1261;
            *((unsigned char *)v1250 + 128) = *((unsigned char *)v1251 + 128);
            *(_WORD *)((char *)v1250 + 129) = *(_WORD *)((char *)v1251 + 129);
            uint64_t v1262 = v1251[18];
            v1250[17] = v1251[17];
            v1250[18] = v1262;
            uint64_t v1263 = v1251[20];
            v1250[19] = v1251[19];
            v1250[20] = v1263;
            uint64_t v1264 = v1251[22];
            v1250[21] = v1251[21];
            v1250[22] = v1264;
            uint64_t v1265 = v1251[24];
            v1250[23] = v1251[23];
            v1250[24] = v1265;
            uint64_t v1266 = v1251[26];
            v1250[25] = v1251[25];
            v1250[26] = v1266;
            v1250[27] = v1251[27];
            uint64_t v2609 = (int *)v1252;
            uint64_t v1267 = *(int *)(v1252 + 88);
            uint64_t v2590 = (char *)v1250 + v1267;
            uint64_t v2528 = (char *)v1251 + v1267;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2528, 1, v2667))
            {
              uint64_t v1268 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2590, v2528, *(void *)(*(void *)(v1268 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2667 - 8) + 16))(v2590, v2528, v2667);
              __swift_storeEnumTagSinglePayload((uint64_t)v2590, 0, 1, v2667);
            }
            uint64_t v1293 = *(int *)(v1252 + 92);
            uint64_t v1294 = (char *)v1250 + v1293;
            uint64_t v1295 = (char *)v1251 + v1293;
            uint64_t v13 = v2692;
            Swift::String v361 = v2654;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1251 + v1293, 1, v2667))
            {
              uint64_t v1296 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1294, v1295, *(void *)(*(void *)(v1296 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2667 - 8) + 16))(v1294, v1295, v2667);
              __swift_storeEnumTagSinglePayload((uint64_t)v1294, 0, 1, v2667);
            }
            uint64_t v1309 = v2609[24];
            uint64_t v1310 = (char *)v1250 + v1309;
            uint64_t v1311 = (char *)v1251 + v1309;
            *(void *)uint64_t v1310 = *(void *)v1311;
            v1310[8] = v1311[8];
            uint64_t v1312 = v2609[25];
            uint64_t v1313 = (char *)v1250 + v1312;
            uint64_t v1314 = (char *)v1251 + v1312;
            uint64_t v1315 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1314, 1, v1315))
            {
              uint64_t v1316 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1313, v1314, *(void *)(*(void *)(v1316 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1315 - 8) + 16))(v1313, v1314, v1315);
              __swift_storeEnumTagSinglePayload((uint64_t)v1313, 0, 1, v1315);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v1250, 0, 1, (uint64_t)v2609);
            uint64_t v364 = v2642;
          }
          uint64_t v1339 = v365[11];
          uint64_t v1340 = (void *)((char *)v361 + v1339);
          uint64_t v1341 = (void *)((char *)v364 + v1339);
          uint64_t v1342 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1341, 1, (uint64_t)v1342))
          {
            uint64_t v1343 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v1340, v1341, *(void *)(*(void *)(v1343 - 8) + 64));
          }
          else
          {
            uint64_t v1344 = v1341[1];
            void *v1340 = *v1341;
            v1340[1] = v1344;
            uint64_t v1345 = v1341[3];
            v1340[2] = v1341[2];
            v1340[3] = v1345;
            uint64_t v1346 = v1341[5];
            v1340[4] = v1341[4];
            v1340[5] = v1346;
            uint64_t v1347 = v1341[7];
            v1340[6] = v1341[6];
            v1340[7] = v1347;
            uint64_t v1348 = v1341[9];
            v1340[8] = v1341[8];
            v1340[9] = v1348;
            uint64_t v1349 = v1341[11];
            v1340[10] = v1341[10];
            v1340[11] = v1349;
            *((unsigned char *)v1340 + 96) = *((unsigned char *)v1341 + 96);
            uint64_t v1350 = v1341[14];
            v1340[13] = v1341[13];
            v1340[14] = v1350;
            uint64_t v1351 = v1342[13];
            uint64_t v2611 = (char *)v1340 + v1351;
            uint64_t v1352 = (char *)v1341 + v1351;
            uint64_t v2561 = (void *)type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1352, 1, (uint64_t)v2561))
            {
              uint64_t v1353 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2611, v1352, *(void *)(*(void *)(v1353 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v2561 - 1) + 16))(v2611, v1352, v2561);
              __swift_storeEnumTagSinglePayload((uint64_t)v2611, 0, 1, (uint64_t)v2561);
            }
            uint64_t v1373 = v1342[14];
            uint64_t v1374 = (char *)v1340 + v1373;
            uint64_t v1375 = (char *)v1341 + v1373;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1341 + v1373, 1, (uint64_t)v2561))
            {
              uint64_t v1376 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1374, v1375, *(void *)(*(void *)(v1376 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v2561 - 1) + 16))(v1374, v1375, v2561);
              __swift_storeEnumTagSinglePayload((uint64_t)v1374, 0, 1, (uint64_t)v2561);
            }
            uint64_t v1454 = v1342[15];
            v1455 = (void *)((char *)v1340 + v1454);
            uint64_t v1456 = (void *)((char *)v1341 + v1454);
            uint64_t v1457 = v1456[1];
            void *v1455 = *v1456;
            v1455[1] = v1457;
            uint64_t v1458 = v1342[16];
            uint64_t v1459 = (void *)((char *)v1340 + v1458);
            uint64_t v1460 = (void *)((char *)v1341 + v1458);
            uint64_t v1461 = v1460[1];
            *uint64_t v1459 = *v1460;
            v1459[1] = v1461;
            uint64_t v1462 = v1342[17];
            uint64_t v1463 = (void *)((char *)v1340 + v1462);
            uint64_t v1464 = (void *)((char *)v1341 + v1462);
            uint64_t v1465 = v1464[1];
            *uint64_t v1463 = *v1464;
            v1463[1] = v1465;
            uint64_t v1466 = v1342[18];
            uint64_t v2612 = (char *)v1340 + v1466;
            uint64_t v1467 = (char *)v1341 + v1466;
            uint64_t v1468 = type metadata accessor for DateComponents();
            uint64_t v1469 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1468 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1469(v2612, v1467, v1468);
            v1469((char *)v1340 + v1342[19], (char *)v1341 + v1342[19], v1468);
            uint64_t v1470 = v1342[20];
            uint64_t v1471 = (void *)((char *)v1340 + v1470);
            uint64_t v1472 = (void *)((char *)v1341 + v1470);
            uint64_t v1473 = v1472[1];
            *uint64_t v1471 = *v1472;
            v1471[1] = v1473;
            uint64_t v1474 = v1342[21];
            uint64_t v1475 = (void *)((char *)v1340 + v1474);
            uint64_t v1476 = (void *)((char *)v1341 + v1474);
            uint64_t v1477 = v1476[1];
            *uint64_t v1475 = *v1476;
            v1475[1] = v1477;
            uint64_t v1478 = v1342[22];
            uint64_t v1479 = (void *)((char *)v1340 + v1478);
            uint64_t v1480 = (void *)((char *)v1341 + v1478);
            uint64_t v1481 = v1480[1];
            *uint64_t v1479 = *v1480;
            v1479[1] = v1481;
            uint64_t v1482 = v1342[23];
            uint64_t v1483 = (void *)((char *)v1340 + v1482);
            uint64_t v1484 = (void *)((char *)v1341 + v1482);
            uint64_t v1485 = v1484[1];
            void *v1483 = *v1484;
            v1483[1] = v1485;
            uint64_t v1486 = v1342[24];
            uint64_t v1487 = (void *)((char *)v1340 + v1486);
            uint64_t v1488 = (void *)((char *)v1341 + v1486);
            uint64_t v2613 = (void *)v1488[1];
            *uint64_t v1487 = *v1488;
            v1487[1] = v2613;
            uint64_t v1489 = v1342[25];
            uint64_t v1490 = (void *)((char *)v1340 + v1489);
            uint64_t v1491 = (void *)((char *)v1341 + v1489);
            uint64_t v2580 = (void *)v1491[1];
            void *v1490 = *v1491;
            v1490[1] = v2580;
            uint64_t v1492 = v1342[26];
            uint64_t v1493 = (void *)((char *)v1340 + v1492);
            v1494 = (void *)((char *)v1341 + v1492);
            uint64_t v2563 = (void *)v1494[1];
            *uint64_t v1493 = *v1494;
            v1493[1] = v2563;
            uint64_t v1495 = v1342[27];
            uint64_t v1496 = (void *)((char *)v1340 + v1495);
            v1497 = (void *)((char *)v1341 + v1495);
            uint64_t v2552 = v1497[1];
            *uint64_t v1496 = *v1497;
            v1496[1] = v2552;
            uint64_t v1498 = v1342[28];
            uint64_t v1499 = (void *)((char *)v1340 + v1498);
            v1500 = (void *)((char *)v1341 + v1498);
            uint64_t v2545 = v1500[1];
            *uint64_t v1499 = *v1500;
            v1499[1] = v2545;
            uint64_t v1501 = v1342[29];
            uint64_t v1502 = (void *)((char *)v1340 + v1501);
            v1503 = (void *)((char *)v1341 + v1501);
            uint64_t v2539 = v1503[1];
            *uint64_t v1502 = *v1503;
            v1502[1] = v2539;
            uint64_t v1504 = v1342[30];
            uint64_t v1505 = (void *)((char *)v1340 + v1504);
            v1506 = (void *)((char *)v1341 + v1504);
            __dstb = (void *)v1506[1];
            *uint64_t v1505 = *v1506;
            v1505[1] = __dstb;
            uint64_t v1507 = v1342[31];
            uint64_t v1508 = (void *)((char *)v1340 + v1507);
            v1509 = (void *)((char *)v1341 + v1507);
            uint64_t v2530 = v1509[1];
            *uint64_t v1508 = *v1509;
            v1508[1] = v2530;
            uint64_t v1510 = v1342[32];
            uint64_t v1511 = (void *)((char *)v1340 + v1510);
            v1512 = (void *)((char *)v1341 + v1510);
            uint64_t v2520 = v1512[1];
            *uint64_t v1511 = *v1512;
            v1511[1] = v2520;
            *(void *)((char *)v1340 + v1342[33]) = *(void *)((char *)v1341 + v1342[33]);
            *(void *)((char *)v1340 + v1342[34]) = *(void *)((char *)v1341 + v1342[34]);
            uint64_t v1513 = v1342[35];
            uint64_t v1514 = (void *)((char *)v1340 + v1513);
            v1515 = (void *)((char *)v1341 + v1513);
            uint64_t v1516 = v1515[1];
            *uint64_t v1514 = *v1515;
            v1514[1] = v1516;
            uint64_t v1517 = v1342[36];
            v1518 = (void *)((char *)v1340 + v1517);
            v1519 = (void *)((char *)v1341 + v1517);
            uint64_t v1520 = v1519[1];
            void *v1518 = *v1519;
            v1518[1] = v1520;
            uint64_t v1521 = v1342[37];
            v1522 = (void *)((char *)v1340 + v1521);
            uint64_t v1523 = (void *)((char *)v1341 + v1521);
            uint64_t v1524 = v1523[1];
            void *v1522 = *v1523;
            v1522[1] = v1524;
            uint64_t v1525 = v1342[38];
            v2593 = (char *)v1340 + v1525;
            uint64_t v1526 = (char *)v1341 + v1525;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1526, 1, v2667))
            {
              uint64_t v1527 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2593, v1526, *(void *)(*(void *)(v1527 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2667 - 8) + 16))(v2593, v1526, v2667);
              __swift_storeEnumTagSinglePayload((uint64_t)v2593, 0, 1, v2667);
            }
            uint64_t v1652 = v1342[39];
            uint64_t v1653 = (void *)((char *)v1340 + v1652);
            uint64_t v1654 = (void *)((char *)v1341 + v1652);
            uint64_t v1655 = v1654[1];
            void *v1653 = *v1654;
            v1653[1] = v1655;
            uint64_t v1656 = v1342[40];
            uint64_t v1657 = (void *)((char *)v1340 + v1656);
            uint64_t v1658 = (void *)((char *)v1341 + v1656);
            uint64_t v1659 = v1658[1];
            *uint64_t v1657 = *v1658;
            v1657[1] = v1659;
            uint64_t v1660 = v1342[41];
            uint64_t v1661 = (char *)v1340 + v1660;
            uint64_t v1662 = (char *)v1341 + v1660;
            v1661[8] = v1662[8];
            *(void *)uint64_t v1661 = *(void *)v1662;
            uint64_t v1663 = v1342[42];
            uint64_t v1664 = (void *)((char *)v1340 + v1663);
            uint64_t v1665 = (void *)((char *)v1341 + v1663);
            uint64_t v1666 = v1665[1];
            *uint64_t v1664 = *v1665;
            v1664[1] = v1666;
            uint64_t v1667 = v1342[43];
            uint64_t v1668 = (char *)v1340 + v1667;
            uint64_t v1669 = (char *)v1341 + v1667;
            *(_OWORD *)uint64_t v1668 = *(_OWORD *)v1669;
            *(void *)(v1668 + 13) = *(void *)(v1669 + 13);
            uint64_t v1670 = v1342[44];
            v1671 = (void *)((char *)v1340 + v1670);
            uint64_t v1672 = (void *)((char *)v1341 + v1670);
            uint64_t v1673 = v1672[1];
            void *v1671 = *v1672;
            v1671[1] = v1673;
            uint64_t v1674 = v1342[45];
            v1675 = (void *)((char *)v1340 + v1674);
            uint64_t v1676 = (void *)((char *)v1341 + v1674);
            uint64_t v1677 = v1676[1];
            void *v1675 = *v1676;
            v1675[1] = v1677;
            uint64_t v1678 = v1342[46];
            uint64_t v1679 = (void *)((char *)v1340 + v1678);
            uint64_t v1680 = (void *)((char *)v1341 + v1678);
            uint64_t v1681 = v1680[1];
            void *v1679 = *v1680;
            v1679[1] = v1681;
            uint64_t v1682 = v1342[47];
            uint64_t v1683 = (void *)((char *)v1340 + v1682);
            uint64_t v1684 = (void *)((char *)v1341 + v1682);
            uint64_t v1685 = v1684[1];
            *uint64_t v1683 = *v1684;
            v1683[1] = v1685;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1340, 0, 1, (uint64_t)v1342);
            uint64_t v13 = v2692;
            uint64_t v364 = v2642;
            Swift::String v361 = v2654;
            long long v365 = v2634;
          }
          uint64_t v1686 = v365[12];
          uint64_t v1687 = (void *)((char *)v361 + v1686);
          uint64_t v1688 = (void *)((char *)v364 + v1686);
          uint64_t v1689 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1688, 1, (uint64_t)v1689))
          {
            uint64_t v1690 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v1687, v1688, *(void *)(*(void *)(v1690 - 8) + 64));
          }
          else
          {
            uint64_t v1691 = v1688[1];
            *uint64_t v1687 = *v1688;
            v1687[1] = v1691;
            uint64_t v1692 = v1688[3];
            v1687[2] = v1688[2];
            v1687[3] = v1692;
            uint64_t v1693 = v1688[5];
            v1687[4] = v1688[4];
            v1687[5] = v1693;
            uint64_t v1694 = v1688[7];
            v1687[6] = v1688[6];
            v1687[7] = v1694;
            uint64_t v1695 = v1688[9];
            v1687[8] = v1688[8];
            v1687[9] = v1695;
            uint64_t v1696 = v1688[11];
            v1687[10] = v1688[10];
            v1687[11] = v1696;
            *((unsigned char *)v1687 + 96) = *((unsigned char *)v1688 + 96);
            uint64_t v1697 = v1688[14];
            v1687[13] = v1688[13];
            v1687[14] = v1697;
            uint64_t v1698 = v1688[16];
            v1687[15] = v1688[15];
            v1687[16] = v1698;
            uint64_t v1699 = v1689[14];
            uint64_t v2614 = (char *)v1687 + v1699;
            uint64_t v1700 = (char *)v1688 + v1699;
            uint64_t v2554 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1700, 1, v2554))
            {
              uint64_t v1701 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2614, v1700, *(void *)(*(void *)(v1701 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2554 - 8) + 16))(v2614, v1700, v2554);
              __swift_storeEnumTagSinglePayload((uint64_t)v2614, 0, 1, v2554);
            }
            uint64_t v1756 = v1689[15];
            uint64_t v1757 = (char *)v1687 + v1756;
            uint64_t v1758 = (char *)v1688 + v1756;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1688 + v1756, 1, v2554))
            {
              uint64_t v1759 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1757, v1758, *(void *)(*(void *)(v1759 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2554 - 8) + 16))(v1757, v1758, v2554);
              __swift_storeEnumTagSinglePayload((uint64_t)v1757, 0, 1, v2554);
            }
            uint64_t v1822 = v1689[16];
            uint64_t v1823 = (void *)((char *)v1687 + v1822);
            uint64_t v1824 = (void *)((char *)v1688 + v1822);
            uint64_t v1825 = v1824[1];
            void *v1823 = *v1824;
            v1823[1] = v1825;
            uint64_t v1826 = v1689[17];
            uint64_t v1827 = (void *)((char *)v1687 + v1826);
            uint64_t v1828 = (void *)((char *)v1688 + v1826);
            uint64_t v2615 = (void *)v1828[1];
            *uint64_t v1827 = *v1828;
            v1827[1] = v2615;
            uint64_t v1829 = v1689[18];
            uint64_t v1830 = (void *)((char *)v1687 + v1829);
            uint64_t v1831 = (void *)((char *)v1688 + v1829);
            uint64_t v2598 = (void *)v1831[1];
            *uint64_t v1830 = *v1831;
            v1830[1] = v2598;
            uint64_t v1832 = v1689[19];
            uint64_t v1833 = (void *)((char *)v1687 + v1832);
            v1834 = (void *)((char *)v1688 + v1832);
            uint64_t v2584 = (void *)v1834[1];
            *uint64_t v1833 = *v1834;
            v1833[1] = v2584;
            uint64_t v1835 = v1689[20];
            uint64_t v1836 = (void *)((char *)v1687 + v1835);
            uint64_t v1837 = (void *)((char *)v1688 + v1835);
            uint64_t v1838 = v1837[1];
            *uint64_t v1836 = *v1837;
            v1836[1] = v1838;
            *(void *)((char *)v1687 + v1689[21]) = *(void *)((char *)v1688 + v1689[21]);
            *(void *)((char *)v1687 + v1689[22]) = *(void *)((char *)v1688 + v1689[22]);
            uint64_t v1839 = v1689[23];
            uint64_t v1840 = (char *)v1687 + v1839;
            uint64_t v1841 = (char *)v1688 + v1839;
            *(void *)uint64_t v1840 = *(void *)v1841;
            v1840[8] = v1841[8];
            uint64_t v1842 = v1689[24];
            uint64_t v1843 = (char *)v1687 + v1842;
            uint64_t v1844 = (char *)v1688 + v1842;
            *(void *)uint64_t v1843 = *(void *)v1844;
            v1843[8] = v1844[8];
            uint64_t v1845 = v1689[25];
            v1846 = (void *)((char *)v1687 + v1845);
            uint64_t v1847 = (void *)((char *)v1688 + v1845);
            uint64_t v1848 = v1847[1];
            void *v1846 = *v1847;
            v1846[1] = v1848;
            uint64_t v1849 = v1689[26];
            v1850 = (void *)((char *)v1687 + v1849);
            uint64_t v1851 = (void *)((char *)v1688 + v1849);
            uint64_t v1852 = v1851[1];
            void *v1850 = *v1851;
            v1850[1] = v1852;
            uint64_t v1853 = v1689[27];
            v1854 = (void *)((char *)v1687 + v1853);
            uint64_t v1855 = (void *)((char *)v1688 + v1853);
            uint64_t v1856 = v1855[1];
            void *v1854 = *v1855;
            v1854[1] = v1856;
            uint64_t v1857 = v1689[28];
            uint64_t v1858 = (void *)((char *)v1687 + v1857);
            uint64_t v1859 = (void *)((char *)v1688 + v1857);
            uint64_t v1860 = v1859[1];
            void *v1858 = *v1859;
            v1858[1] = v1860;
            uint64_t v1861 = v1689[29];
            uint64_t v1862 = (char *)v1687 + v1861;
            uint64_t v1863 = (char *)v1688 + v1861;
            *(void *)uint64_t v1862 = *(void *)v1863;
            v1862[8] = v1863[8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1687, 0, 1, (uint64_t)v1689);
            uint64_t v13 = v2692;
            uint64_t v364 = v2642;
            Swift::String v361 = v2654;
            long long v365 = v2634;
          }
          uint64_t v1864 = v365[13];
          uint64_t v1865 = (void *)((char *)v361 + v1864);
          uint64_t v1866 = (void *)((char *)v364 + v1864);
          uint64_t v1867 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1866, 1, (uint64_t)v1867))
          {
            uint64_t v1868 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v1865, v1866, *(void *)(*(void *)(v1868 - 8) + 64));
          }
          else
          {
            uint64_t v1869 = v1866[1];
            *uint64_t v1865 = *v1866;
            v1865[1] = v1869;
            uint64_t v1870 = v1866[3];
            v1865[2] = v1866[2];
            v1865[3] = v1870;
            uint64_t v1871 = v1866[5];
            v1865[4] = v1866[4];
            v1865[5] = v1871;
            uint64_t v1872 = v1866[7];
            v1865[6] = v1866[6];
            v1865[7] = v1872;
            uint64_t v1873 = v1866[9];
            v1865[8] = v1866[8];
            v1865[9] = v1873;
            uint64_t v1874 = v1866[11];
            v1865[10] = v1866[10];
            v1865[11] = v1874;
            *((unsigned char *)v1865 + 96) = *((unsigned char *)v1866 + 96);
            uint64_t v1875 = v1866[14];
            v1865[13] = v1866[13];
            v1865[14] = v1875;
            uint64_t v1876 = v1866[16];
            v1865[15] = v1866[15];
            v1865[16] = v1876;
            uint64_t v1877 = v1867[14];
            uint64_t v2645 = (char *)v1865 + v1877;
            uint64_t v1878 = (char *)v1866 + v1877;
            uint64_t v2566 = (void *)type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1878, 1, (uint64_t)v2566))
            {
              uint64_t v1879 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2645, v1878, *(void *)(*(void *)(v1879 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v2566 - 1) + 16))(v2645, v1878, v2566);
              __swift_storeEnumTagSinglePayload((uint64_t)v2645, 0, 1, (uint64_t)v2566);
            }
            uint64_t v2123 = v1867[15];
            uint64_t v2124 = (void *)((char *)v1865 + v2123);
            uint64_t v2125 = (void *)((char *)v1866 + v2123);
            uint64_t v2126 = v2125[1];
            *uint64_t v2124 = *v2125;
            v2124[1] = v2126;
            uint64_t v2127 = v1867[16];
            uint64_t v2128 = (void *)((char *)v1865 + v2127);
            uint64_t v2129 = (void *)((char *)v1866 + v2127);
            uint64_t v2130 = v2129[1];
            *uint64_t v2128 = *v2129;
            v2128[1] = v2130;
            uint64_t v2131 = v1867[17];
            uint64_t v2132 = (void *)((char *)v1865 + v2131);
            uint64_t v2133 = (void *)((char *)v1866 + v2131);
            uint64_t v2134 = v2133[1];
            *uint64_t v2132 = *v2133;
            v2132[1] = v2134;
            uint64_t v2135 = v1867[18];
            uint64_t v2136 = (void *)((char *)v1865 + v2135);
            uint64_t v2137 = (void *)((char *)v1866 + v2135);
            uint64_t v2138 = v2137[1];
            *uint64_t v2136 = *v2137;
            v2136[1] = v2138;
            uint64_t v2139 = v1867[19];
            uint64_t v2140 = (void *)((char *)v1865 + v2139);
            uint64_t v2141 = (void *)((char *)v1866 + v2139);
            uint64_t v2142 = v2141[1];
            *uint64_t v2140 = *v2141;
            v2140[1] = v2142;
            *(void *)((char *)v1865 + v1867[20]) = *(void *)((char *)v1866 + v1867[20]);
            uint64_t v2143 = v1867[21];
            uint64_t v2144 = (void *)((char *)v1865 + v2143);
            uint64_t v2145 = (void *)((char *)v1866 + v2143);
            uint64_t v2146 = v2145[1];
            void *v2144 = *v2145;
            v2144[1] = v2146;
            uint64_t v2147 = v1867[22];
            uint64_t v2148 = (void *)((char *)v1865 + v2147);
            uint64_t v2149 = (void *)((char *)v1866 + v2147);
            uint64_t v2150 = v2149[1];
            *uint64_t v2148 = *v2149;
            v2148[1] = v2150;
            uint64_t v2151 = v1867[23];
            v2152 = (void *)((char *)v1865 + v2151);
            uint64_t v2153 = (void *)((char *)v1866 + v2151);
            uint64_t v2154 = v2153[1];
            void *v2152 = *v2153;
            v2152[1] = v2154;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1865, 0, 1, (uint64_t)v1867);
            uint64_t v13 = v2692;
            Swift::String v361 = v2654;
            long long v365 = v2634;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v361, 0, 1, (uint64_t)v365);
          uint64_t v18 = (uint64_t)v2691;
        }
        uint64_t v2155 = v2672[18];
        v2156 = (void *)(v18 + v2155);
        uint64_t v2157 = (void *)((char *)v13 + v2155);
        uint64_t v2158 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2157, 1, (uint64_t)v2158))
        {
          uint64_t v2159 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v2156, v2157, *(void *)(*(void *)(v2159 - 8) + 64));
          v2160 = v2691;
        }
        else
        {
          uint64_t v2161 = v2157[1];
          void *v2156 = *v2157;
          v2156[1] = v2161;
          uint64_t v2162 = v2157[3];
          v2156[2] = v2157[2];
          v2156[3] = v2162;
          uint64_t v2163 = v2157[5];
          v2156[4] = v2157[4];
          v2156[5] = v2163;
          uint64_t v2164 = v2157[7];
          v2156[6] = v2157[6];
          v2156[7] = v2164;
          uint64_t v2165 = v2157[9];
          v2156[8] = v2157[8];
          v2156[9] = v2165;
          uint64_t v2166 = v2157[11];
          v2156[10] = v2157[10];
          v2156[11] = v2166;
          uint64_t v2167 = v2158[10];
          uint64_t v2168 = (char *)v2156 + v2167;
          uint64_t v2169 = (char *)v2157 + v2167;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2169, 1, v2667))
          {
            uint64_t v2170 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2168, v2169, *(void *)(*(void *)(v2170 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2667 - 8) + 16))(v2168, v2169, v2667);
            __swift_storeEnumTagSinglePayload((uint64_t)v2168, 0, 1, v2667);
          }
          uint64_t v2171 = v2158[11];
          uint64_t v2172 = (char *)v2156 + v2171;
          uint64_t v2173 = (char *)v2157 + v2171;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2157 + v2171, 1, v2667))
          {
            uint64_t v2174 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2172, v2173, *(void *)(*(void *)(v2174 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2667 - 8) + 16))(v2172, v2173, v2667);
            __swift_storeEnumTagSinglePayload((uint64_t)v2172, 0, 1, v2667);
          }
          uint64_t v2175 = v2158[12];
          uint64_t v2176 = (void *)((char *)v2156 + v2175);
          uint64_t v2177 = (void *)((char *)v2157 + v2175);
          uint64_t v2178 = v2177[1];
          void *v2176 = *v2177;
          v2176[1] = v2178;
          uint64_t v2179 = v2158[13];
          uint64_t v2180 = (void *)((char *)v2156 + v2179);
          uint64_t v2181 = (void *)((char *)v2157 + v2179);
          uint64_t v2182 = v2181[1];
          void *v2180 = *v2181;
          v2180[1] = v2182;
          uint64_t v2183 = v2158[14];
          uint64_t v2184 = (void *)((char *)v2156 + v2183);
          uint64_t v2185 = (void *)((char *)v2157 + v2183);
          uint64_t v2186 = v2185[1];
          void *v2184 = *v2185;
          v2184[1] = v2186;
          uint64_t v2187 = v2158[15];
          uint64_t v2188 = (char *)v2156 + v2187;
          uint64_t v2189 = (char *)v2157 + v2187;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2189, 1, v2667))
          {
            uint64_t v2190 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2188, v2189, *(void *)(*(void *)(v2190 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2667 - 8) + 16))(v2188, v2189, v2667);
            __swift_storeEnumTagSinglePayload((uint64_t)v2188, 0, 1, v2667);
          }
          uint64_t v2191 = v2158[16];
          uint64_t v2192 = (void *)((char *)v2156 + v2191);
          uint64_t v2193 = (void *)((char *)v2157 + v2191);
          uint64_t v2194 = v2193[1];
          void *v2192 = *v2193;
          v2192[1] = v2194;
          uint64_t v2195 = v2158[17];
          uint64_t v2196 = (void *)((char *)v2156 + v2195);
          uint64_t v2197 = (void *)((char *)v2157 + v2195);
          uint64_t v2198 = v2197[1];
          void *v2196 = *v2197;
          v2196[1] = v2198;
          uint64_t v2199 = v2158[18];
          uint64_t v2200 = (void *)((char *)v2156 + v2199);
          uint64_t v2201 = (void *)((char *)v2157 + v2199);
          uint64_t v2202 = v2201[1];
          void *v2200 = *v2201;
          v2200[1] = v2202;
          uint64_t v2203 = v2158[19];
          uint64_t v2204 = (void *)((char *)v2156 + v2203);
          uint64_t v2205 = (void *)((char *)v2157 + v2203);
          uint64_t v2206 = v2205[1];
          void *v2204 = *v2205;
          v2204[1] = v2206;
          uint64_t v2207 = v2158[20];
          uint64_t v2208 = (void *)((char *)v2156 + v2207);
          uint64_t v2209 = (void *)((char *)v2157 + v2207);
          uint64_t v2210 = v2209[1];
          void *v2208 = *v2209;
          v2208[1] = v2210;
          uint64_t v2211 = v2158[21];
          uint64_t v2212 = (void *)((char *)v2156 + v2211);
          uint64_t v2213 = (void *)((char *)v2157 + v2211);
          uint64_t v2214 = v2213[1];
          void *v2212 = *v2213;
          v2212[1] = v2214;
          uint64_t v2215 = v2158[22];
          uint64_t v2216 = (void *)((char *)v2156 + v2215);
          uint64_t v2217 = (void *)((char *)v2157 + v2215);
          uint64_t v2218 = v2217[1];
          void *v2216 = *v2217;
          v2216[1] = v2218;
          uint64_t v2219 = v2158[23];
          uint64_t v2220 = (void *)((char *)v2156 + v2219);
          uint64_t v2221 = (void *)((char *)v2157 + v2219);
          uint64_t v2222 = v2221[1];
          void *v2220 = *v2221;
          v2220[1] = v2222;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2156, 0, 1, (uint64_t)v2158);
          v2160 = v2691;
          uint64_t v13 = v2692;
        }
        uint64_t v2223 = v2672[19];
        uint64_t v2224 = (void *)((char *)v2160 + v2223);
        uint64_t v2225 = (void *)((char *)v13 + v2223);
        uint64_t v2226 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2225, 1, (uint64_t)v2226))
        {
          uint64_t v2227 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v2224, v2225, *(void *)(*(void *)(v2227 - 8) + 64));
        }
        else
        {
          uint64_t v2228 = v2225[1];
          void *v2224 = *v2225;
          v2224[1] = v2228;
          uint64_t v2229 = v2225[3];
          v2224[2] = v2225[2];
          v2224[3] = v2229;
          uint64_t v2230 = v2225[5];
          v2224[4] = v2225[4];
          v2224[5] = v2230;
          uint64_t v2231 = v2225[7];
          v2224[6] = v2225[6];
          v2224[7] = v2231;
          uint64_t v2232 = v2225[9];
          v2224[8] = v2225[8];
          v2224[9] = v2232;
          uint64_t v2233 = v2225[11];
          v2224[10] = v2225[10];
          v2224[11] = v2233;
          uint64_t v2234 = v2226[11];
          uint64_t v2656 = (char *)v2224 + v2234;
          uint64_t v2235 = (char *)v2225 + v2234;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2235, 1, v2667))
          {
            uint64_t v2236 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2656, v2235, *(void *)(*(void *)(v2236 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2667 - 8) + 16))(v2656, v2235, v2667);
            __swift_storeEnumTagSinglePayload((uint64_t)v2656, 0, 1, v2667);
          }
          uint64_t v2237 = v2226[12];
          uint64_t v2238 = (void *)((char *)v2224 + v2237);
          uint64_t v2239 = (void *)((char *)v2225 + v2237);
          uint64_t v2240 = v2239[1];
          void *v2238 = *v2239;
          v2238[1] = v2240;
          *(void *)((char *)v2224 + v2226[13]) = *(void *)((char *)v2225 + v2226[13]);
          uint64_t v2241 = v2226[14];
          uint64_t v2242 = (char *)v2224 + v2241;
          uint64_t v2243 = (char *)v2225 + v2241;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v13 = v2692;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2243, 1, v2667))
          {
            uint64_t v2244 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2242, v2243, *(void *)(*(void *)(v2244 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2667 - 8) + 16))(v2242, v2243, v2667);
            __swift_storeEnumTagSinglePayload((uint64_t)v2242, 0, 1, v2667);
          }
          *(void *)((char *)v2224 + v2226[15]) = *(void *)((char *)v2225 + v2226[15]);
          *(void *)((char *)v2224 + v2226[16]) = *(void *)((char *)v2225 + v2226[16]);
          uint64_t v2245 = v2226[17];
          uint64_t v2246 = (void *)((char *)v2224 + v2245);
          uint64_t v2247 = (void *)((char *)v2225 + v2245);
          uint64_t v2248 = v2247[1];
          void *v2246 = *v2247;
          v2246[1] = v2248;
          *(void *)((char *)v2224 + v2226[18]) = *(void *)((char *)v2225 + v2226[18]);
          *(void *)((char *)v2224 + v2226[19]) = *(void *)((char *)v2225 + v2226[19]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2224, 0, 1, (uint64_t)v2226);
        }
        uint64_t v2249 = v2672[20];
        uint64_t v2250 = (void *)((char *)v2691 + v2249);
        uint64_t v2251 = (void *)((char *)v13 + v2249);
        uint64_t v2252 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2251, 1, (uint64_t)v2252))
        {
          uint64_t v2253 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v2250, v2251, *(void *)(*(void *)(v2253 - 8) + 64));
        }
        else
        {
          uint64_t v2254 = v2251[1];
          void *v2250 = *v2251;
          v2250[1] = v2254;
          uint64_t v2255 = v2251[3];
          v2250[2] = v2251[2];
          v2250[3] = v2255;
          uint64_t v2256 = v2251[5];
          v2250[4] = v2251[4];
          v2250[5] = v2256;
          uint64_t v2257 = v2251[7];
          v2250[6] = v2251[6];
          v2250[7] = v2257;
          uint64_t v2258 = v2252[8];
          uint64_t v2259 = (char *)v2250 + v2258;
          uint64_t v2260 = (char *)v2251 + v2258;
          uint64_t v2261 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2260, 1, v2261))
          {
            uint64_t v2262 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2259, v2260, *(void *)(*(void *)(v2262 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2261 - 8) + 16))(v2259, v2260, v2261);
            __swift_storeEnumTagSinglePayload((uint64_t)v2259, 0, 1, v2261);
          }
          uint64_t v2263 = v2252[9];
          uint64_t v2264 = (void *)((char *)v2250 + v2263);
          v2265 = (void *)((char *)v2251 + v2263);
          uint64_t v2266 = v2265[1];
          *uint64_t v2264 = *v2265;
          v2264[1] = v2266;
          uint64_t v2267 = v2252[10];
          uint64_t v2268 = (void *)((char *)v2250 + v2267);
          uint64_t v2269 = (void *)((char *)v2251 + v2267);
          uint64_t v2270 = v2269[1];
          void *v2268 = *v2269;
          v2268[1] = v2270;
          uint64_t v2271 = v2252[11];
          uint64_t v2272 = (void *)((char *)v2250 + v2271);
          uint64_t v2273 = (void *)((char *)v2251 + v2271);
          uint64_t v2274 = v2273[1];
          void *v2272 = *v2273;
          v2272[1] = v2274;
          uint64_t v2275 = v2252[12];
          uint64_t v2276 = (char *)v2250 + v2275;
          uint64_t v2277 = (char *)v2251 + v2275;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v13 = v2692;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2277, 1, v2667))
          {
            uint64_t v2278 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2276, v2277, *(void *)(*(void *)(v2278 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2667 - 8) + 16))(v2276, v2277, v2667);
            __swift_storeEnumTagSinglePayload((uint64_t)v2276, 0, 1, v2667);
          }
          uint64_t v2279 = v2252[13];
          uint64_t v2280 = (char *)v2250 + v2279;
          uint64_t v2281 = (char *)v2251 + v2279;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2251 + v2279, 1, v2667))
          {
            uint64_t v2282 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2280, v2281, *(void *)(*(void *)(v2282 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2667 - 8) + 16))(v2280, v2281, v2667);
            __swift_storeEnumTagSinglePayload((uint64_t)v2280, 0, 1, v2667);
          }
          uint64_t v2283 = v2252[14];
          uint64_t v2284 = (char *)v2250 + v2283;
          uint64_t v2285 = (char *)v2251 + v2283;
          *(void *)uint64_t v2284 = *(void *)v2285;
          v2284[8] = v2285[8];
          uint64_t v2286 = v2252[15];
          uint64_t v2287 = (void *)((char *)v2250 + v2286);
          uint64_t v2288 = (void *)((char *)v2251 + v2286);
          uint64_t v2289 = v2288[1];
          *uint64_t v2287 = *v2288;
          v2287[1] = v2289;
          uint64_t v2290 = v2252[16];
          uint64_t v2291 = (void *)((char *)v2250 + v2290);
          uint64_t v2292 = (void *)((char *)v2251 + v2290);
          uint64_t v2293 = v2292[1];
          *uint64_t v2291 = *v2292;
          v2291[1] = v2293;
          uint64_t v2294 = v2252[17];
          uint64_t v2295 = (void *)((char *)v2250 + v2294);
          uint64_t v2296 = (void *)((char *)v2251 + v2294);
          uint64_t v2297 = v2296[1];
          *uint64_t v2295 = *v2296;
          v2295[1] = v2297;
          uint64_t v2298 = v2252[18];
          uint64_t v2299 = (void *)((char *)v2250 + v2298);
          uint64_t v2300 = (void *)((char *)v2251 + v2298);
          uint64_t v2301 = v2300[1];
          void *v2299 = *v2300;
          v2299[1] = v2301;
          uint64_t v2302 = v2252[19];
          uint64_t v2303 = (void *)((char *)v2250 + v2302);
          uint64_t v2304 = (void *)((char *)v2251 + v2302);
          uint64_t v2305 = v2304[1];
          void *v2303 = *v2304;
          v2303[1] = v2305;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2250, 0, 1, (uint64_t)v2252);
        }
        uint64_t v18 = (uint64_t)v2691;
        uint64_t v2122 = v2672[21];
        goto LABEL_541;
      case 4u:
        uint64_t v2683 = v12;
        uint64_t v70 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v70;
        uint64_t v71 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v71;
        uint64_t v72 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v72;
        uint64_t v73 = v2692[7];
        v2691[6] = v2692[6];
        v2691[7] = v73;
        uint64_t v74 = type metadata accessor for NoteDocument(0);
        uint64_t v75 = *(int *)(v74 + 32);
        uint64_t v76 = (char *)v2691 + v75;
        uint64_t v77 = (char *)v2692 + v75;
        uint64_t v78 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v78))
        {
          uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
          __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v78);
        }
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        uint64_t v17 = a3;
        uint64_t v13 = v2692;
        uint64_t v12 = v2683;
        uint64_t v367 = *(int *)(v74 + 36);
        id v368 = (char *)v2691 + v367;
        uint64_t v369 = (char *)v2692 + v367;
        if (!__swift_getEnumTagSinglePayload((uint64_t)v2692 + v367, 1, v78)) {
          goto LABEL_136;
        }
        uint64_t v370 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
        memcpy(v368, v369, *(void *)(*(void *)(v370 - 8) + 64));
        break;
      case 5u:
        uint64_t v2684 = v12;
        uint64_t v80 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v80;
        uint64_t v81 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v81;
        uint64_t v82 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v82;
        uint64_t v83 = (int *)type metadata accessor for Reminder(0);
        uint64_t v84 = v83[7];
        uint64_t v85 = (char *)v2691 + v84;
        uint64_t v86 = (char *)v2692 + v84;
        uint64_t v87 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v87))
        {
          uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v85, v86, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
          __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v87);
        }
        uint64_t v371 = v83[8];
        Swift::String v372 = (char *)v2691 + v371;
        uint64_t v373 = (char *)v2692 + v371;
        if (__swift_getEnumTagSinglePayload((uint64_t)v2692 + v371, 1, v87))
        {
          uint64_t v374 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v372, v373, *(void *)(*(void *)(v374 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v372, v373, v87);
          __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v87);
        }
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        *((unsigned char *)v2691 + v83[9]) = *((unsigned char *)v2692 + v83[9]);
        uint64_t v541 = v83[10];
        long long v542 = (void *)((char *)v2691 + v541);
        long long v543 = (void *)((char *)v2692 + v541);
        uint64_t v544 = v543[1];
        void *v542 = *v543;
        v542[1] = v544;
        uint64_t v545 = v83[11];
        uint64_t v546 = (void *)((char *)v2691 + v545);
        uint64_t v547 = (void *)((char *)v2692 + v545);
        uint64_t v548 = v547[1];
        void *v546 = *v547;
        v546[1] = v548;
        uint64_t v549 = v83[12];
        uint64_t v550 = (char *)v2691 + v549;
        uint64_t v551 = (char *)v2692 + v549;
        uint64_t v552 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v551, 1, v552))
        {
          uint64_t v553 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v550, v551, *(void *)(*(void *)(v553 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v552 - 8) + 16))(v550, v551, v552);
          __swift_storeEnumTagSinglePayload((uint64_t)v550, 0, 1, v552);
        }
        uint64_t v17 = a3;
        uint64_t v13 = v2692;
        goto LABEL_167;
      case 6u:
        uint64_t v2685 = v12;
        uint64_t v89 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v89;
        uint64_t v90 = v2692[3];
        uint64_t v91 = v2692[4];
        v2691[2] = v2692[2];
        v2691[3] = v90;
        uint64_t v93 = v2692[5];
        uint64_t v92 = v2692[6];
        v2691[4] = v91;
        v2691[5] = v93;
        uint64_t v94 = v2692[7];
        v2691[6] = v92;
        v2691[7] = v94;
        uint64_t v95 = (int *)type metadata accessor for PhoneHistory(0);
        uint64_t v96 = v95[10];
        uint64_t v97 = (char *)v2691 + v96;
        uint64_t v98 = (char *)v2692 + v96;
        uint64_t v99 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v98, 1, v99))
        {
          uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v97, v98, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16))(v97, v98, v99);
          __swift_storeEnumTagSinglePayload((uint64_t)v97, 0, 1, v99);
        }
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        uint64_t v18 = (uint64_t)v2691;
        uint64_t v12 = v2685;
        uint64_t v375 = v95[11];
        uint64_t v376 = (void *)((char *)v2691 + v375);
        uint64_t v377 = (void *)((char *)v2692 + v375);
        uint64_t v378 = v377[1];
        void *v376 = *v377;
        v376[1] = v378;
        uint64_t v379 = v95[12];
        uint64_t v380 = (void *)((char *)v2691 + v379);
        uint64_t v381 = (void *)((char *)v2692 + v379);
        uint64_t v382 = v381[1];
        void *v380 = *v381;
        v380[1] = v382;
        uint64_t v383 = v95[13];
        uint64_t v384 = (char *)v2691 + v383;
        uint64_t v385 = (char *)v2692 + v383;
        uint64_t v386 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v385, 1, v386))
        {
          uint64_t v387 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v384, v385, *(void *)(*(void *)(v387 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v386 - 8) + 16))(v384, v385, v386);
          __swift_storeEnumTagSinglePayload((uint64_t)v384, 0, 1, v386);
        }
        uint64_t v17 = a3;
        uint64_t v13 = v2692;
        break;
      case 7u:
        uint64_t v2686 = v12;
        uint64_t v101 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v101;
        uint64_t v102 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v102;
        uint64_t v103 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v103;
        uint64_t v104 = (int *)type metadata accessor for VoicemailTranscript(0);
        uint64_t v105 = v104[7];
        uint64_t v106 = (char *)v2691 + v105;
        uint64_t v107 = (char *)v2692 + v105;
        uint64_t v108 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v107, 1, v108))
        {
          uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
          __swift_storeEnumTagSinglePayload((uint64_t)v106, 0, 1, v108);
        }
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        uint64_t v17 = a3;
        uint64_t v13 = v2692;
        uint64_t v12 = v2686;
        goto LABEL_84;
      case 8u:
        uint64_t v110 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v110;
        uint64_t v111 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v111;
        uint64_t v112 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v112;
        uint64_t v113 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
        uint64_t v114 = (char *)v2691 + v113;
        uint64_t v115 = (char *)v2692 + v113;
        uint64_t v116 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v115, 1, v116))
        {
          uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v114, v115, *(void *)(*(void *)(v117 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16))(v114, v115, v116);
          __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, v116);
        }
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        uint64_t v17 = a3;
        uint64_t v13 = v2692;
        break;
      case 9u:
        uint64_t v118 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v118;
        uint64_t v119 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v119;
        uint64_t v104 = (int *)type metadata accessor for VoiceMemo(0);
        uint64_t v120 = v104[6];
        uint64_t v121 = (char *)v2691 + v120;
        uint64_t v122 = (char *)v2692 + v120;
        uint64_t v123 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v122, 1, v123))
        {
          uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v121, v122, *(void *)(*(void *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16))(v121, v122, v123);
          __swift_storeEnumTagSinglePayload((uint64_t)v121, 0, 1, v123);
        }
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        uint64_t v17 = a3;
        uint64_t v13 = v2692;
        uint64_t v388 = v104[7];
        uint64_t v389 = (char *)v2691 + v388;
        uint64_t v390 = (char *)v2692 + v388;
        *(void *)uint64_t v389 = *(void *)v390;
        v389[8] = v390[8];
LABEL_84:
        uint64_t v391 = v104[8];
        goto LABEL_156;
      case 0xAu:
        uint64_t v125 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v125;
        uint64_t v126 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v126;
        uint64_t v127 = (int *)type metadata accessor for Safari(0);
        uint64_t v128 = v127[6];
        uint64_t v129 = (char *)v2691 + v128;
        uint64_t v130 = (char *)v2692 + v128;
        uint64_t v131 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v131))
        {
          uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v129, v130, *(void *)(*(void *)(v132 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16))(v129, v130, v131);
          __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v131);
        }
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        uint64_t v13 = v2692;
        uint64_t v392 = v127[7];
        uint64_t v393 = (void *)((char *)v2691 + v392);
        unint64_t v394 = (void *)((char *)v2692 + v392);
        uint64_t v395 = v394[1];
        *uint64_t v393 = *v394;
        v393[1] = v395;
        uint64_t v396 = v127[8];
        uint64_t v397 = (void *)((char *)v2691 + v396);
        unint64_t v398 = (void *)((char *)v2692 + v396);
        uint64_t v399 = v398[1];
        *uint64_t v397 = *v398;
        v397[1] = v399;
        uint64_t v400 = v127[9];
        uint64_t v401 = (char *)v2691 + v400;
        v402 = (char *)v2692 + v400;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v402, 1, v131))
        {
          uint64_t v403 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v401, v402, *(void *)(*(void *)(v403 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16))(v401, v402, v131);
          __swift_storeEnumTagSinglePayload((uint64_t)v401, 0, 1, v131);
        }
        uint64_t v17 = a3;
        break;
      case 0xBu:
        uint64_t v133 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v133;
        uint64_t v134 = (void *)v2692[2];
        v2691[2] = v134;
        swift_bridgeObjectRetain();
        id v135 = v134;
        goto LABEL_54;
      case 0xCu:
        uint64_t v2687 = v12;
        uint64_t v136 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v136;
        uint64_t v137 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v137;
        uint64_t v138 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v138;
        uint64_t v139 = (int *)type metadata accessor for WalletTransaction(0);
        uint64_t v140 = v139[7];
        uint64_t v141 = (char *)v2691 + v140;
        uint64_t v142 = (char *)v2692 + v140;
        uint64_t v143 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v143))
        {
          uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v141, v142, *(void *)(*(void *)(v144 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16))(v141, v142, v143);
          __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v143);
        }
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        uint64_t v17 = a3;
        uint64_t v13 = v2692;
        uint64_t v12 = v2687;
        uint64_t v404 = v139[8];
        uint64_t v405 = (void *)((char *)v2691 + v404);
        uint64_t v406 = (void *)((char *)v2692 + v404);
        uint64_t v407 = v406[1];
        *uint64_t v405 = *v406;
        v405[1] = v407;
        uint64_t v408 = v139[9];
        uint64_t v409 = (void *)((char *)v2691 + v408);
        uint64_t v410 = (void *)((char *)v2692 + v408);
        uint64_t v411 = v410[1];
        *uint64_t v409 = *v410;
        v409[1] = v411;
        uint64_t v412 = v139[10];
        uint64_t v413 = (void *)((char *)v2691 + v412);
        uint64_t v414 = (void *)((char *)v2692 + v412);
        uint64_t v415 = v414[1];
        *uint64_t v413 = *v414;
        v413[1] = v415;
        uint64_t v416 = v139[11];
        uint64_t v417 = (char *)v2691 + v416;
        uint64_t v418 = (char *)v2692 + v416;
        *(_OWORD *)uint64_t v417 = *(_OWORD *)v418;
        *(void *)(v417 + 13) = *(void *)(v418 + 13);
        uint64_t v419 = v139[12];
        uint64_t v420 = (void *)((char *)v2691 + v419);
        uint64_t v421 = (void *)((char *)v2692 + v419);
        uint64_t v422 = v421[1];
        *uint64_t v420 = *v421;
        v420[1] = v422;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 0xDu:
        uint64_t v2688 = v12;
        uint64_t v145 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v145;
        uint64_t v146 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v146;
        uint64_t v147 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v147;
        uint64_t v148 = (int *)type metadata accessor for WalletPass(0);
        uint64_t v149 = v148[7];
        uint64_t v150 = (char *)v2691 + v149;
        uint64_t v151 = (char *)v2692 + v149;
        uint64_t v152 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v151, 1, v152))
        {
          uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v150, v151, *(void *)(*(void *)(v153 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 16))(v150, v151, v152);
          __swift_storeEnumTagSinglePayload((uint64_t)v150, 0, 1, v152);
        }
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        uint64_t v17 = a3;
        uint64_t v13 = v2692;
        uint64_t v12 = v2688;
        uint64_t v423 = v148[8];
        uint64_t v424 = (void *)((char *)v2691 + v423);
        uint64_t v425 = (void *)((char *)v2692 + v423);
        uint64_t v426 = v425[1];
        *uint64_t v424 = *v425;
        v424[1] = v426;
        *(void *)((char *)v2691 + v148[9]) = *(void *)((char *)v2692 + v148[9]);
        swift_bridgeObjectRetain();
        goto LABEL_125;
      case 0xEu:
        uint64_t v154 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v154;
        uint64_t v155 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v155;
        uint64_t v156 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v156;
        uint64_t v157 = v2692[7];
        v2691[6] = v2692[6];
        v2691[7] = v157;
        uint64_t v158 = v2692[9];
        v2691[8] = v2692[8];
        v2691[9] = v158;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v13 = v2692;
        swift_bridgeObjectRetain();
        goto LABEL_53;
      case 0xFu:
        uint64_t v2682 = v12;
        uint64_t v159 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v159;
        uint64_t v160 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v160;
        uint64_t v2673 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v2673;
        uint64_t v161 = v2692[7];
        v2691[6] = v2692[6];
        v2691[7] = v161;
        uint64_t v162 = v2692[9];
        v2691[8] = v2692[8];
        v2691[9] = v162;
        uint64_t v163 = v2692[11];
        v2691[10] = v2692[10];
        v2691[11] = v163;
        *((unsigned char *)v2691 + 96) = *((unsigned char *)v2692 + 96);
        uint64_t v164 = v2692[14];
        v2691[13] = v2692[13];
        v2691[14] = v164;
        uint64_t v165 = (int *)type metadata accessor for FlightReservation(0);
        uint64_t v166 = v165[13];
        uint64_t v2660 = (char *)v2691 + v166;
        uint64_t v167 = (char *)v2692 + v166;
        uint64_t v168 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v168))
        {
          uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v2660, v167, *(void *)(*(void *)(v169 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v2660, v167, v168);
          __swift_storeEnumTagSinglePayload((uint64_t)v2660, 0, 1, v168);
        }
        uint64_t v427 = v165[14];
        uint64_t v428 = (char *)v2691 + v427;
        uint64_t v429 = (char *)v2692 + v427;
        if (__swift_getEnumTagSinglePayload((uint64_t)v2692 + v427, 1, v168))
        {
          uint64_t v430 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v428, v429, *(void *)(*(void *)(v430 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v428, v429, v168);
          __swift_storeEnumTagSinglePayload((uint64_t)v428, 0, 1, v168);
        }
        uint64_t v554 = v165[15];
        uint64_t v555 = (void *)((char *)v2691 + v554);
        uint64_t v556 = (void *)((char *)v2692 + v554);
        uint64_t v557 = v556[1];
        void *v555 = *v556;
        v555[1] = v557;
        uint64_t v558 = v165[16];
        uint64_t v559 = (void *)((char *)v2691 + v558);
        uint64_t v560 = (void *)((char *)v2692 + v558);
        uint64_t v561 = v560[1];
        *uint64_t v559 = *v560;
        v559[1] = v561;
        uint64_t v562 = v165[17];
        uint64_t v563 = (void *)((char *)v2691 + v562);
        uint64_t v564 = (void *)((char *)v2692 + v562);
        uint64_t v565 = v564[1];
        void *v563 = *v564;
        v563[1] = v565;
        uint64_t v566 = v165[18];
        uint64_t v567 = (char *)v2691 + v566;
        uint64_t v568 = (char *)v2692 + v566;
        uint64_t v569 = type metadata accessor for DateComponents();
        uint64_t v570 = *(void (**)(char *, char *, uint64_t))(*(void *)(v569 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v570(v567, v568, v569);
        v570((char *)v2691 + v165[19], (char *)v2692 + v165[19], v569);
        uint64_t v571 = v165[20];
        uint64_t v572 = (void *)((char *)v2691 + v571);
        v573 = (void *)((char *)v2692 + v571);
        uint64_t v2655 = v573[1];
        void *v572 = *v573;
        v572[1] = v2655;
        uint64_t v574 = v165[21];
        uint64_t v575 = (void *)((char *)v2691 + v574);
        uint64_t v576 = (void *)((char *)v2692 + v574);
        uint64_t v2587 = (void *)v576[1];
        void *v575 = *v576;
        v575[1] = v2587;
        uint64_t v577 = v165[22];
        long long v578 = (void *)((char *)v2691 + v577);
        uint64_t v579 = (void *)((char *)v2692 + v577);
        uint64_t v2679 = v579[1];
        *long long v578 = *v579;
        v578[1] = v2679;
        uint64_t v580 = v165[23];
        long long v581 = (void *)((char *)v2691 + v580);
        long long v582 = (void *)((char *)v2692 + v580);
        uint64_t v2668 = v582[1];
        *long long v581 = *v582;
        v581[1] = v2668;
        uint64_t v583 = v165[24];
        uint64_t v584 = (void *)((char *)v2691 + v583);
        uint64_t v585 = (void *)((char *)v2692 + v583);
        uint64_t v2643 = v585[1];
        void *v584 = *v585;
        v584[1] = v2643;
        uint64_t v586 = v165[25];
        uint64_t v587 = (void *)((char *)v2691 + v586);
        uint64_t v588 = (void *)((char *)v2692 + v586);
        uint64_t v2627 = v588[1];
        void *v587 = *v588;
        v587[1] = v2627;
        uint64_t v589 = v165[26];
        uint64_t v590 = (void *)((char *)v2691 + v589);
        uint64_t v591 = (void *)((char *)v2692 + v589);
        uint64_t v2601 = (void *)v591[1];
        *uint64_t v590 = *v591;
        v590[1] = v2601;
        uint64_t v592 = v165[27];
        uint64_t v593 = (void *)((char *)v2691 + v592);
        uint64_t v594 = (void *)((char *)v2692 + v592);
        uint64_t v2568 = (void *)v594[1];
        *uint64_t v593 = *v594;
        v593[1] = v2568;
        uint64_t v595 = v165[28];
        uint64_t v596 = (void *)((char *)v2691 + v595);
        uint64_t v597 = (void *)((char *)v2692 + v595);
        uint64_t v2557 = (void *)v597[1];
        *uint64_t v596 = *v597;
        v596[1] = v2557;
        uint64_t v598 = v165[29];
        uint64_t v599 = (void *)((char *)v2691 + v598);
        uint64_t v600 = (void *)((char *)v2692 + v598);
        uint64_t v2550 = v600[1];
        void *v599 = *v600;
        v599[1] = v2550;
        uint64_t v601 = v165[30];
        v602 = (void *)((char *)v2691 + v601);
        uint64_t v603 = (void *)((char *)v2692 + v601);
        uint64_t v2542 = v603[1];
        void *v602 = *v603;
        v602[1] = v2542;
        uint64_t v604 = v165[31];
        long long v605 = (void *)((char *)v2691 + v604);
        long long v606 = (void *)((char *)v2692 + v604);
        uint64_t v2537 = v606[1];
        void *v605 = *v606;
        v605[1] = v2537;
        uint64_t v607 = v165[32];
        long long v608 = (void *)((char *)v2691 + v607);
        long long v609 = (void *)((char *)v2692 + v607);
        uint64_t v610 = v609[1];
        void *v608 = *v609;
        v608[1] = v610;
        *(void *)((char *)v2691 + v165[33]) = *(void *)((char *)v2692 + v165[33]);
        *(void *)((char *)v2691 + v165[34]) = *(void *)((char *)v2692 + v165[34]);
        uint64_t v611 = v165[35];
        uint64_t v612 = (void *)((char *)v2691 + v611);
        uint64_t v613 = (void *)((char *)v2692 + v611);
        uint64_t v614 = v613[1];
        void *v612 = *v613;
        v612[1] = v614;
        uint64_t v615 = v165[36];
        uint64_t v616 = (void *)((char *)v2691 + v615);
        uint64_t v617 = (void *)((char *)v2692 + v615);
        uint64_t v618 = v617[1];
        *uint64_t v616 = *v617;
        v616[1] = v618;
        uint64_t v619 = v165[37];
        uint64_t v620 = (void *)((char *)v2691 + v619);
        uint64_t v621 = (void *)((char *)v2692 + v619);
        uint64_t v622 = v621[1];
        *uint64_t v620 = *v621;
        v620[1] = v622;
        uint64_t v623 = v165[38];
        __dst = (char *)v2691 + v623;
        long long v624 = (char *)v2692 + v623;
        uint64_t v625 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v624, 1, v625))
        {
          uint64_t v626 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(__dst, v624, *(void *)(*(void *)(v626 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v625 - 8) + 16))(__dst, v624, v625);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v625);
        }
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        uint64_t v18 = (uint64_t)v2691;
        uint64_t v688 = v165[39];
        uint64_t v689 = (void *)((char *)v2691 + v688);
        uint64_t v690 = (void *)((char *)v2692 + v688);
        uint64_t v691 = v690[1];
        void *v689 = *v690;
        v689[1] = v691;
        uint64_t v692 = v165[40];
        uint64_t v693 = (void *)((char *)v2691 + v692);
        long long v694 = (void *)((char *)v2692 + v692);
        uint64_t v695 = v694[1];
        *uint64_t v693 = *v694;
        v693[1] = v695;
        uint64_t v696 = v165[41];
        uint64_t v697 = (char *)v2691 + v696;
        long long v698 = (char *)v2692 + v696;
        v697[8] = v698[8];
        *(void *)uint64_t v697 = *(void *)v698;
        uint64_t v699 = v165[42];
        uint64_t v700 = (void *)((char *)v2691 + v699);
        uint64_t v701 = (void *)((char *)v2692 + v699);
        uint64_t v702 = v701[1];
        *uint64_t v700 = *v701;
        v700[1] = v702;
        uint64_t v703 = v165[43];
        uint64_t v704 = (char *)v2691 + v703;
        uint64_t v705 = (char *)v2692 + v703;
        *(_OWORD *)uint64_t v704 = *(_OWORD *)v705;
        *(void *)(v704 + 13) = *(void *)(v705 + 13);
        uint64_t v706 = v165[44];
        uint64_t v707 = (void *)((char *)v2691 + v706);
        uint64_t v708 = (void *)((char *)v2692 + v706);
        uint64_t v709 = v708[1];
        *uint64_t v707 = *v708;
        v707[1] = v709;
        uint64_t v710 = v165[45];
        uint64_t v711 = (void *)((char *)v2691 + v710);
        uint64_t v712 = (void *)((char *)v2692 + v710);
        uint64_t v713 = v712[1];
        *uint64_t v711 = *v712;
        v711[1] = v713;
        uint64_t v714 = v165[46];
        uint64_t v715 = (void *)((char *)v2691 + v714);
        uint64_t v716 = (void *)((char *)v2692 + v714);
        uint64_t v717 = v716[1];
        *uint64_t v715 = *v716;
        v715[1] = v717;
        uint64_t v718 = v165[47];
        uint64_t v719 = (void *)((char *)v2691 + v718);
        uint64_t v720 = (void *)((char *)v2692 + v718);
        uint64_t v721 = v720[1];
        *uint64_t v719 = *v720;
        v719[1] = v721;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v13 = v2692;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v722 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
        *(void *)((char *)v2691 + *(int *)(v722 + 48)) = *(void *)((char *)v2692 + *(int *)(v722 + 48));
        swift_bridgeObjectRetain();
        goto LABEL_547;
      case 0x10u:
        uint64_t v2682 = v12;
        uint64_t v170 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v170;
        uint64_t v171 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v171;
        uint64_t v2674 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v2674;
        uint64_t v172 = v2692[7];
        v2691[6] = v2692[6];
        v2691[7] = v172;
        uint64_t v2661 = v2692[9];
        v2691[8] = v2692[8];
        v2691[9] = v2661;
        uint64_t v173 = v2692[11];
        v2691[10] = v2692[10];
        v2691[11] = v173;
        *((unsigned char *)v2691 + 96) = *((unsigned char *)v2692 + 96);
        uint64_t v174 = v2692[14];
        v2691[13] = v2692[13];
        v2691[14] = v174;
        uint64_t v175 = v2692[16];
        v2691[15] = v2692[15];
        v2691[16] = v175;
        uint64_t v176 = (int *)type metadata accessor for HotelReservation(0);
        uint64_t v177 = v176[14];
        uint64_t v2648 = (char *)v2691 + v177;
        uint64_t v178 = (char *)v2692 + v177;
        uint64_t v179 = type metadata accessor for DateComponents();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v178, 1, v179))
        {
          uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v2648, v178, *(void *)(*(void *)(v180 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(v2648, v178, v179);
          __swift_storeEnumTagSinglePayload((uint64_t)v2648, 0, 1, v179);
        }
        uint64_t v431 = v176[15];
        uint64_t v432 = (char *)v2691 + v431;
        uint64_t v433 = (char *)v2692 + v431;
        if (__swift_getEnumTagSinglePayload((uint64_t)v2692 + v431, 1, v179))
        {
          uint64_t v434 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v432, v433, *(void *)(*(void *)(v434 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(v432, v433, v179);
          __swift_storeEnumTagSinglePayload((uint64_t)v432, 0, 1, v179);
        }
        uint64_t v627 = v176[16];
        uint64_t v628 = (void *)((char *)v2691 + v627);
        uint64_t v629 = (void *)((char *)v2692 + v627);
        uint64_t v630 = v629[1];
        *uint64_t v628 = *v629;
        v628[1] = v630;
        uint64_t v631 = v176[17];
        uint64_t v632 = (void *)((char *)v2691 + v631);
        uint64_t v633 = (void *)((char *)v2692 + v631);
        uint64_t v2680 = v633[1];
        *uint64_t v632 = *v633;
        v632[1] = v2680;
        uint64_t v634 = v176[18];
        uint64_t v635 = (void *)((char *)v2691 + v634);
        uint64_t v636 = (void *)((char *)v2692 + v634);
        uint64_t v637 = v636[1];
        *uint64_t v635 = *v636;
        v635[1] = v637;
        uint64_t v638 = v176[19];
        long long v639 = (void *)((char *)v2691 + v638);
        long long v640 = (void *)((char *)v2692 + v638);
        uint64_t v641 = v640[1];
        void *v639 = *v640;
        v639[1] = v641;
        uint64_t v642 = v176[20];
        long long v643 = (void *)((char *)v2691 + v642);
        uint64_t v644 = (void *)((char *)v2692 + v642);
        uint64_t v645 = v644[1];
        void *v643 = *v644;
        v643[1] = v645;
        *(void *)((char *)v2691 + v176[21]) = *(void *)((char *)v2692 + v176[21]);
        *(void *)((char *)v2691 + v176[22]) = *(void *)((char *)v2692 + v176[22]);
        uint64_t v646 = v176[23];
        uint64_t v647 = (char *)v2691 + v646;
        uint64_t v648 = (char *)v2692 + v646;
        *(void *)uint64_t v647 = *(void *)v648;
        v647[8] = v648[8];
        uint64_t v649 = v176[24];
        uint64_t v650 = (char *)v2691 + v649;
        uint64_t v651 = (char *)v2692 + v649;
        *(void *)uint64_t v650 = *(void *)v651;
        v650[8] = v651[8];
        uint64_t v652 = v176[25];
        uint64_t v653 = (void *)((char *)v2691 + v652);
        v654 = (void *)((char *)v2692 + v652);
        uint64_t v655 = v654[1];
        void *v653 = *v654;
        v653[1] = v655;
        uint64_t v656 = v176[26];
        uint64_t v657 = (void *)((char *)v2691 + v656);
        uint64_t v658 = (void *)((char *)v2692 + v656);
        uint64_t v659 = v658[1];
        void *v657 = *v658;
        v657[1] = v659;
        uint64_t v660 = v176[27];
        v661 = (void *)((char *)v2691 + v660);
        uint64_t v662 = (void *)((char *)v2692 + v660);
        uint64_t v663 = v662[1];
        void *v661 = *v662;
        v661[1] = v663;
        uint64_t v664 = v176[28];
        uint64_t v665 = (void *)((char *)v2691 + v664);
        uint64_t v666 = (void *)((char *)v2692 + v664);
        uint64_t v667 = v666[1];
        void *v665 = *v666;
        v665[1] = v667;
        uint64_t v668 = v176[29];
        uint64_t v669 = (char *)v2691 + v668;
        uint64_t v670 = (char *)v2692 + v668;
        *(void *)uint64_t v669 = *(void *)v670;
        v669[8] = v670[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v18 = (uint64_t)v2691;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v13 = v2692;
        goto LABEL_543;
      case 0x11u:
        uint64_t v2682 = v12;
        uint64_t v181 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v181;
        uint64_t v182 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v182;
        uint64_t v2675 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v2675;
        uint64_t v183 = v2692[7];
        v2691[6] = v2692[6];
        v2691[7] = v183;
        uint64_t v2662 = v2692[9];
        v2691[8] = v2692[8];
        v2691[9] = v2662;
        uint64_t v184 = v2692[11];
        v2691[10] = v2692[10];
        v2691[11] = v184;
        *((unsigned char *)v2691 + 96) = *((unsigned char *)v2692 + 96);
        uint64_t v185 = v2692[14];
        v2691[13] = v2692[13];
        v2691[14] = v185;
        uint64_t v186 = v2692[16];
        v2691[15] = v2692[15];
        v2691[16] = v186;
        uint64_t v187 = (int *)type metadata accessor for RestaurantReservation(0);
        uint64_t v188 = v187[14];
        uint64_t v189 = (char *)v2691 + v188;
        uint64_t v190 = (char *)v2692 + v188;
        uint64_t v191 = type metadata accessor for DateComponents();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v191))
        {
          uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v189, v190, *(void *)(*(void *)(v192 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16))(v189, v190, v191);
          __swift_storeEnumTagSinglePayload((uint64_t)v189, 0, 1, v191);
        }
        uint64_t v16 = a1;
        uint64_t v18 = (uint64_t)v2691;
        uint64_t v435 = v187[15];
        uint64_t v436 = (void *)((char *)v2691 + v435);
        uint64_t v437 = (void *)((char *)v2692 + v435);
        uint64_t v438 = v437[1];
        *uint64_t v436 = *v437;
        v436[1] = v438;
        uint64_t v439 = v187[16];
        uint64_t v440 = (void *)((char *)v2691 + v439);
        uint64_t v441 = (void *)((char *)v2692 + v439);
        uint64_t v442 = v441[1];
        void *v440 = *v441;
        v440[1] = v442;
        uint64_t v443 = v187[17];
        uint64_t v444 = (void *)((char *)v2691 + v443);
        uint64_t v445 = (void *)((char *)v2692 + v443);
        uint64_t v446 = v445[1];
        void *v444 = *v445;
        v444[1] = v446;
        uint64_t v447 = v187[18];
        uint64_t v448 = (void *)((char *)v2691 + v447);
        uint64_t v449 = (void *)((char *)v2692 + v447);
        uint64_t v450 = v449[1];
        *uint64_t v448 = *v449;
        v448[1] = v450;
        uint64_t v451 = v187[19];
        uint64_t v452 = (void *)((char *)v2691 + v451);
        uint64_t v453 = (void *)((char *)v2692 + v451);
        uint64_t v454 = v453[1];
        void *v452 = *v453;
        v452[1] = v454;
        *(void *)((char *)v2691 + v187[20]) = *(void *)((char *)v2692 + v187[20]);
        uint64_t v455 = v187[21];
        uint64_t v456 = (void *)((char *)v2691 + v455);
        uint64_t v457 = (void *)((char *)v2692 + v455);
        uint64_t v458 = v457[1];
        void *v456 = *v457;
        v456[1] = v458;
        uint64_t v459 = v187[22];
        uint64_t v460 = (void *)((char *)v2691 + v459);
        uint64_t v461 = (void *)((char *)v2692 + v459);
        uint64_t v462 = v461[1];
        void *v460 = *v461;
        v460[1] = v462;
        uint64_t v463 = v187[23];
        uint64_t v464 = (void *)((char *)v2691 + v463);
        uint64_t v465 = (void *)((char *)v2692 + v463);
        uint64_t v466 = v465[1];
        *uint64_t v464 = *v465;
        v464[1] = v466;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v13 = v2692;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_546;
      case 0x12u:
        uint64_t v2684 = v12;
        uint64_t v193 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v193;
        uint64_t v194 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v194;
        uint64_t v195 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v195;
        uint64_t v196 = v2692[7];
        v2691[6] = v2692[6];
        v2691[7] = v196;
        uint64_t v197 = v2692[9];
        v2691[8] = v2692[8];
        v2691[9] = v197;
        uint64_t v198 = v2692[11];
        v2691[10] = v2692[10];
        v2691[11] = v198;
        uint64_t v199 = v2692[13];
        v2691[12] = v2692[12];
        v2691[13] = v199;
        uint64_t v200 = v2692[15];
        v2691[14] = v2692[14];
        v2691[15] = v200;
        *((unsigned char *)v2691 + 128) = *((unsigned char *)v2692 + 128);
        *(_WORD *)((char *)v2691 + 129) = *(_WORD *)((char *)v2692 + 129);
        uint64_t v201 = v2692[18];
        v2691[17] = v2692[17];
        v2691[18] = v201;
        uint64_t v202 = v2692[20];
        v2691[19] = v2692[19];
        v2691[20] = v202;
        uint64_t v203 = v2692[22];
        v2691[21] = v2692[21];
        v2691[22] = v203;
        uint64_t v204 = v2692[24];
        v2691[23] = v2692[23];
        v2691[24] = v204;
        uint64_t v205 = v2692[26];
        v2691[25] = v2692[25];
        v2691[26] = v205;
        uint64_t v206 = v2692[28];
        v2691[27] = v2692[27];
        v2691[28] = v206;
        uint64_t v207 = v2692[30];
        v2691[29] = v2692[29];
        v2691[30] = v207;
        uint64_t v208 = v2692[32];
        v2691[31] = v2692[31];
        v2691[32] = v208;
        uint64_t v2676 = v2692[34];
        v2691[33] = v2692[33];
        v2691[34] = v2676;
        uint64_t v2663 = v2692[36];
        v2691[35] = v2692[35];
        v2691[36] = v2663;
        uint64_t v2649 = v2692[38];
        v2691[37] = v2692[37];
        v2691[38] = v2649;
        uint64_t v2638 = v2692[40];
        v2691[39] = v2692[39];
        v2691[40] = v2638;
        uint64_t v2620 = v2692[42];
        v2691[41] = v2692[41];
        v2691[42] = v2620;
        uint64_t v209 = v2692[44];
        v2691[43] = v2692[43];
        v2691[44] = v209;
        uint64_t v210 = v2692[46];
        v2691[45] = v2692[45];
        v2691[46] = v210;
        uint64_t v211 = v2692[47];
        *((unsigned char *)v2691 + 384) = *((unsigned char *)v2692 + 384);
        v2691[47] = v211;
        uint64_t v212 = v2692[50];
        v2691[49] = v2692[49];
        v2691[50] = v212;
        uint64_t v213 = v2692[52];
        v2691[51] = v2692[51];
        v2691[52] = v213;
        uint64_t v2515 = type metadata accessor for RentalCarReservation(0);
        uint64_t v214 = *(int *)(v2515 + 140);
        uint64_t v215 = (char *)v2691 + v214;
        uint64_t v216 = (char *)v2692 + v214;
        uint64_t v217 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v216, 1, v217))
        {
          uint64_t v218 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v215, v216, *(void *)(*(void *)(v218 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 16))(v215, v216, v217);
          __swift_storeEnumTagSinglePayload((uint64_t)v215, 0, 1, v217);
        }
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        uint64_t v17 = a3;
        uint64_t v18 = (uint64_t)v2691;
        uint64_t v467 = *(int *)(v2515 + 144);
        goto LABEL_109;
      case 0x13u:
        uint64_t v2684 = v12;
        uint64_t v219 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v219;
        uint64_t v220 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v220;
        uint64_t v221 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v221;
        uint64_t v222 = v2692[7];
        v2691[6] = v2692[6];
        v2691[7] = v222;
        uint64_t v223 = v2692[9];
        v2691[8] = v2692[8];
        v2691[9] = v223;
        uint64_t v224 = v2692[11];
        v2691[10] = v2692[10];
        v2691[11] = v224;
        uint64_t v225 = v2692[13];
        v2691[12] = v2692[12];
        v2691[13] = v225;
        uint64_t v226 = v2692[15];
        v2691[14] = v2692[14];
        v2691[15] = v226;
        *((unsigned char *)v2691 + 128) = *((unsigned char *)v2692 + 128);
        *(_WORD *)((char *)v2691 + 129) = *(_WORD *)((char *)v2692 + 129);
        uint64_t v227 = v2692[18];
        v2691[17] = v2692[17];
        v2691[18] = v227;
        uint64_t v228 = v2692[20];
        v2691[19] = v2692[19];
        v2691[20] = v228;
        uint64_t v229 = v2692[22];
        v2691[21] = v2692[21];
        v2691[22] = v229;
        uint64_t v230 = v2692[24];
        v2691[23] = v2692[23];
        v2691[24] = v230;
        uint64_t v2677 = v2692[26];
        v2691[25] = v2692[25];
        v2691[26] = v2677;
        uint64_t v2664 = v2692[28];
        v2691[27] = v2692[27];
        v2691[28] = v2664;
        uint64_t v2650 = v2692[30];
        v2691[29] = v2692[29];
        v2691[30] = v2650;
        uint64_t v2639 = v2692[32];
        v2691[31] = v2692[31];
        v2691[32] = v2639;
        uint64_t v2621 = v2692[34];
        v2691[33] = v2692[33];
        v2691[34] = v2621;
        uint64_t v232 = v2692[35];
        uint64_t v231 = v2692[36];
        *((unsigned char *)v2691 + 296) = *((unsigned char *)v2692 + 296);
        v2691[35] = v232;
        v2691[36] = v231;
        uint64_t v2523 = type metadata accessor for TicketedTransportation(0);
        uint64_t v233 = *(int *)(v2523 + 112);
        uint64_t v234 = (char *)v2691 + v233;
        uint64_t v235 = (char *)v2692 + v233;
        uint64_t v217 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v235, 1, v217))
        {
          uint64_t v236 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v234, v235, *(void *)(*(void *)(v236 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 16))(v234, v235, v217);
          __swift_storeEnumTagSinglePayload((uint64_t)v234, 0, 1, v217);
        }
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        uint64_t v17 = a3;
        uint64_t v18 = (uint64_t)v2691;
        uint64_t v467 = *(int *)(v2523 + 116);
        goto LABEL_109;
      case 0x14u:
        uint64_t v237 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v237;
        uint64_t v238 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v238;
        uint64_t v239 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v239;
        uint64_t v240 = v2692[7];
        v2691[6] = v2692[6];
        v2691[7] = v240;
        uint64_t v241 = v2692[9];
        v2691[8] = v2692[8];
        v2691[9] = v241;
        uint64_t v242 = v2692[11];
        v2691[10] = v2692[10];
        v2691[11] = v242;
        uint64_t v243 = v2692[13];
        v2691[12] = v2692[12];
        v2691[13] = v243;
        uint64_t v244 = v2692[15];
        v2691[14] = v2692[14];
        v2691[15] = v244;
        *((unsigned char *)v2691 + 128) = *((unsigned char *)v2692 + 128);
        *(_WORD *)((char *)v2691 + 129) = *(_WORD *)((char *)v2692 + 129);
        uint64_t v245 = v2692[18];
        v2691[17] = v2692[17];
        v2691[18] = v245;
        uint64_t v246 = v2692[20];
        v2691[19] = v2692[19];
        v2691[20] = v246;
        uint64_t v247 = v2692[22];
        v2691[21] = v2692[21];
        v2691[22] = v247;
        uint64_t v248 = v2692[24];
        v2691[23] = v2692[23];
        v2691[24] = v248;
        uint64_t v249 = v2692[26];
        v2691[25] = v2692[25];
        v2691[26] = v249;
        uint64_t v250 = v2692[28];
        v2691[27] = v2692[27];
        v2691[28] = v250;
        uint64_t v2665 = v2692[30];
        v2691[29] = v2692[29];
        v2691[30] = v2665;
        uint64_t v2651 = v2692[32];
        v2691[31] = v2692[31];
        v2691[32] = v2651;
        uint64_t v251 = v2692[34];
        v2691[33] = v2692[33];
        v2691[34] = v251;
        uint64_t v252 = v2692[36];
        uint64_t v2622 = v2692[35];
        *((unsigned char *)v2691 + 296) = *((unsigned char *)v2692 + 296);
        v2691[35] = v2622;
        v2691[36] = v252;
        uint64_t v253 = v2692[39];
        v2691[38] = v2692[38];
        v2691[39] = v253;
        uint64_t v2678 = (int *)type metadata accessor for TicketedShow(0);
        uint64_t v254 = v2678[29];
        uint64_t v255 = (char *)v2691 + v254;
        uint64_t v256 = (char *)v2692 + v254;
        uint64_t v257 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v256, 1, v257))
        {
          uint64_t v258 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v255, v256, *(void *)(*(void *)(v258 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v257 - 8) + 16))(v255, v256, v257);
          __swift_storeEnumTagSinglePayload((uint64_t)v255, 0, 1, v257);
        }
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        uint64_t v18 = (uint64_t)v2691;
        uint64_t v468 = v2678[30];
        uint64_t v469 = (void *)((char *)v2691 + v468);
        uint64_t v470 = (void *)((char *)v2692 + v468);
        uint64_t v471 = v470[1];
        *uint64_t v469 = *v470;
        v469[1] = v471;
        uint64_t v472 = v2678[31];
        uint64_t v473 = (char *)v2691 + v472;
        uint64_t v474 = (char *)v2692 + v472;
        uint64_t v78 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v474, 1, v78))
        {
          uint64_t v475 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v473, v474, *(void *)(*(void *)(v475 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v473, v474, v78);
          __swift_storeEnumTagSinglePayload((uint64_t)v473, 0, 1, v78);
        }
        uint64_t v17 = a3;
        uint64_t v671 = v2678[32];
        id v368 = (char *)v2691 + v671;
        uint64_t v369 = (char *)v2692 + v671;
        if (!__swift_getEnumTagSinglePayload((uint64_t)v2692 + v671, 1, v78)) {
          goto LABEL_136;
        }
        v672 = &demangling cache variable for type metadata for Date?;
        goto LABEL_158;
      case 0x15u:
        uint64_t v2684 = v12;
        uint64_t v2623 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v2623;
        uint64_t v259 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v259;
        uint64_t v260 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v260;
        uint64_t v261 = v2692[7];
        v2691[6] = v2692[6];
        v2691[7] = v261;
        uint64_t v262 = v2692[9];
        v2691[8] = v2692[8];
        v2691[9] = v262;
        uint64_t v263 = v2692[11];
        v2691[10] = v2692[10];
        v2691[11] = v263;
        uint64_t v264 = v2692[13];
        v2691[12] = v2692[12];
        v2691[13] = v264;
        uint64_t v265 = v2692[15];
        v2691[14] = v2692[14];
        v2691[15] = v265;
        *((unsigned char *)v2691 + 128) = *((unsigned char *)v2692 + 128);
        *(_WORD *)((char *)v2691 + 129) = *(_WORD *)((char *)v2692 + 129);
        uint64_t v266 = v2692[18];
        v2691[17] = v2692[17];
        v2691[18] = v266;
        uint64_t v267 = v2692[20];
        v2691[19] = v2692[19];
        v2691[20] = v267;
        uint64_t v268 = v2692[22];
        v2691[21] = v2692[21];
        v2691[22] = v268;
        uint64_t v269 = v2692[24];
        v2691[23] = v2692[23];
        v2691[24] = v269;
        uint64_t v270 = v2692[26];
        v2691[25] = v2692[25];
        v2691[26] = v270;
        uint64_t v271 = v2692[28];
        v2691[27] = v2692[27];
        v2691[28] = v271;
        uint64_t v272 = v2692[30];
        v2691[29] = v2692[29];
        v2691[30] = v272;
        uint64_t v273 = v2692[32];
        v2691[31] = v2692[31];
        v2691[32] = v273;
        uint64_t v275 = v2692[33];
        uint64_t v274 = v2692[34];
        *((unsigned char *)v2691 + 280) = *((unsigned char *)v2692 + 280);
        v2691[33] = v275;
        v2691[34] = v274;
        uint64_t v276 = v2692[37];
        v2691[36] = v2692[36];
        v2691[37] = v276;
        uint64_t v2527 = type metadata accessor for Appointment(0);
        uint64_t v277 = *(int *)(v2527 + 108);
        unint64_t v278 = (char *)v2691 + v277;
        uint64_t v279 = (char *)v2692 + v277;
        uint64_t v217 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v279, 1, v217))
        {
          uint64_t v280 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v278, v279, *(void *)(*(void *)(v280 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 16))(v278, v279, v217);
          __swift_storeEnumTagSinglePayload((uint64_t)v278, 0, 1, v217);
        }
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        uint64_t v17 = a3;
        uint64_t v18 = (uint64_t)v2691;
        uint64_t v467 = *(int *)(v2527 + 112);
LABEL_109:
        uint64_t v476 = (void *)(v18 + v467);
        uint64_t v477 = (char *)v2692 + v467;
        if (__swift_getEnumTagSinglePayload((uint64_t)v2692 + v467, 1, v217))
        {
          uint64_t v478 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v476, v477, *(void *)(*(void *)(v478 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v217 - 8) + 16))(v476, v477, v217);
          __swift_storeEnumTagSinglePayload((uint64_t)v476, 0, 1, v217);
        }
LABEL_167:
        uint64_t v12 = v2684;
        break;
      case 0x16u:
        uint64_t v2640 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v2640;
        uint64_t v2624 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v2624;
        uint64_t v281 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v281;
        uint64_t v282 = v2692[7];
        v2691[6] = v2692[6];
        v2691[7] = v282;
        uint64_t v283 = v2692[9];
        v2691[8] = v2692[8];
        v2691[9] = v283;
        uint64_t v284 = v2692[11];
        v2691[10] = v2692[10];
        v2691[11] = v284;
        uint64_t v285 = v2692[13];
        v2691[12] = v2692[12];
        v2691[13] = v285;
        uint64_t v286 = v2692[15];
        v2691[14] = v2692[14];
        v2691[15] = v286;
        *((unsigned char *)v2691 + 128) = *((unsigned char *)v2692 + 128);
        *(_WORD *)((char *)v2691 + 129) = *(_WORD *)((char *)v2692 + 129);
        uint64_t v287 = v2692[18];
        v2691[17] = v2692[17];
        v2691[18] = v287;
        uint64_t v288 = v2692[20];
        v2691[19] = v2692[19];
        v2691[20] = v288;
        uint64_t v289 = v2692[22];
        v2691[21] = v2692[21];
        v2691[22] = v289;
        uint64_t v290 = v2692[24];
        v2691[23] = v2692[23];
        v2691[24] = v290;
        uint64_t v291 = v2692[26];
        v2691[25] = v2692[25];
        v2691[26] = v291;
        uint64_t v292 = v2692[28];
        v2691[27] = v2692[27];
        v2691[28] = v292;
        uint64_t v293 = v2692[30];
        v2691[29] = v2692[29];
        v2691[30] = v293;
        v2691[31] = v2692[31];
        uint64_t v2536 = (int *)type metadata accessor for Party(0);
        uint64_t v294 = v2536[24];
        char v295 = (char *)v2691 + v294;
        uint64_t v296 = (char *)v2692 + v294;
        uint64_t v297 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v296, 1, v297))
        {
          uint64_t v298 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v295, v296, *(void *)(*(void *)(v298 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v297 - 8) + 16))(v295, v296, v297);
          __swift_storeEnumTagSinglePayload((uint64_t)v295, 0, 1, v297);
        }
        uint64_t v15 = a2;
        uint64_t v18 = (uint64_t)v2691;
        uint64_t v479 = v2536[25];
        v480 = (char *)v2691 + v479;
        uint64_t v481 = (char *)v2692 + v479;
        if (__swift_getEnumTagSinglePayload((uint64_t)v2692 + v479, 1, v297))
        {
          uint64_t v482 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v480, v481, *(void *)(*(void *)(v482 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v297 - 8) + 16))(v480, v481, v297);
          __swift_storeEnumTagSinglePayload((uint64_t)v480, 0, 1, v297);
        }
        uint64_t v16 = a1;
        uint64_t v17 = a3;
        uint64_t v391 = v2536[26];
        goto LABEL_156;
      case 0x17u:
        uint64_t v2666 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v2666;
        uint64_t v2652 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v2652;
        uint64_t v2641 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v2641;
        uint64_t v2625 = v2692[7];
        v2691[6] = v2692[6];
        v2691[7] = v2625;
        uint64_t v299 = v2692[9];
        v2691[8] = v2692[8];
        v2691[9] = v299;
        uint64_t v300 = v2692[11];
        v2691[10] = v2692[10];
        v2691[11] = v300;
        uint64_t v301 = v2692[13];
        v2691[12] = v2692[12];
        v2691[13] = v301;
        uint64_t v302 = v2692[15];
        v2691[14] = v2692[14];
        v2691[15] = v302;
        *((unsigned char *)v2691 + 128) = *((unsigned char *)v2692 + 128);
        *(_WORD *)((char *)v2691 + 129) = *(_WORD *)((char *)v2692 + 129);
        uint64_t v303 = v2692[18];
        v2691[17] = v2692[17];
        v2691[18] = v303;
        uint64_t v304 = v2692[20];
        v2691[19] = v2692[19];
        v2691[20] = v304;
        uint64_t v305 = v2692[22];
        v2691[21] = v2692[21];
        v2691[22] = v305;
        uint64_t v306 = v2692[24];
        v2691[23] = v2692[23];
        v2691[24] = v306;
        uint64_t v307 = v2692[26];
        v2691[25] = v2692[25];
        v2691[26] = v307;
        v2691[27] = v2692[27];
        uint64_t v2549 = (int *)type metadata accessor for Trip(0);
        uint64_t v308 = v2549[22];
        uint64_t v309 = (char *)v2691 + v308;
        uint64_t v310 = (char *)v2692 + v308;
        uint64_t v311 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v310, 1, v311))
        {
          uint64_t v312 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v309, v310, *(void *)(*(void *)(v312 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v311 - 8) + 16))(v309, v310, v311);
          __swift_storeEnumTagSinglePayload((uint64_t)v309, 0, 1, v311);
        }
        uint64_t v16 = a1;
        uint64_t v18 = (uint64_t)v2691;
        uint64_t v483 = v2549[23];
        uint64_t v484 = (char *)v2691 + v483;
        long long v485 = (char *)v2692 + v483;
        if (__swift_getEnumTagSinglePayload((uint64_t)v2692 + v483, 1, v311))
        {
          uint64_t v486 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v484, v485, *(void *)(*(void *)(v486 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v311 - 8) + 16))(v484, v485, v311);
          __swift_storeEnumTagSinglePayload((uint64_t)v484, 0, 1, v311);
        }
        uint64_t v15 = a2;
        uint64_t v17 = a3;
        uint64_t v673 = v2549[24];
        uint64_t v674 = (char *)v2691 + v673;
        uint64_t v675 = (char *)v2692 + v673;
        *(void *)uint64_t v674 = *(void *)v675;
        v674[8] = v675[8];
        uint64_t v391 = v2549[25];
LABEL_156:
        id v368 = (char *)(v18 + v391);
        uint64_t v369 = (char *)v13 + v391;
        uint64_t v78 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v369, 1, v78))
        {
          v672 = &demangling cache variable for type metadata for URL?;
LABEL_158:
          uint64_t v676 = __swift_instantiateConcreteTypeFromMangledName(v672);
          memcpy(v368, v369, *(void *)(*(void *)(v676 - 8) + 64));
        }
        else
        {
LABEL_136:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v368, v369, v78);
          __swift_storeEnumTagSinglePayload((uint64_t)v368, 0, 1, v78);
        }
        break;
      case 0x18u:
        uint64_t v2689 = v12;
        uint64_t v313 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v313;
        uint64_t v314 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v314;
        uint64_t v315 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v315;
        uint64_t v316 = (int *)type metadata accessor for GlobalItem();
        uint64_t v317 = v316[7];
        uint64_t v318 = (char *)v2691 + v317;
        uint64_t v319 = (char *)v2692 + v317;
        uint64_t v320 = type metadata accessor for GlobalDialog();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v319, 1, v320))
        {
          uint64_t v321 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
          memcpy(v318, v319, *(void *)(*(void *)(v321 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v320 - 8) + 16))(v318, v319, v320);
          __swift_storeEnumTagSinglePayload((uint64_t)v318, 0, 1, v320);
        }
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        uint64_t v13 = v2692;
        uint64_t v12 = v2689;
        uint64_t v487 = v316[8];
        uint64_t v488 = (char *)v2691 + v487;
        long long v489 = (char *)v2692 + v487;
        unint64_t v490 = *((void *)v489 + 1);
        if (v490 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v488 = *(_OWORD *)v489;
        }
        else
        {
          uint64_t v491 = *(void *)v489;
          outlined copy of Data._Representation(*(void *)v489, *((void *)v489 + 1));
          *(void *)uint64_t v488 = v491;
          *((void *)v488 + 1) = v490;
        }
        uint64_t v17 = a3;
        *((unsigned char *)v2691 + v316[9]) = *((unsigned char *)v2692 + v316[9]);
        uint64_t v492 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
        *(void *)((char *)v2691 + *(int *)(v492 + 48)) = *(void *)((char *)v2692 + *(int *)(v492 + 48));
        goto LABEL_125;
      case 0x19u:
        uint64_t v322 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v322;
        uint64_t v323 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v323;
        uint64_t v324 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v324;
        uint64_t v325 = v2692[7];
        v2691[6] = v2692[6];
        v2691[7] = v325;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_53:
        swift_bridgeObjectRetain();
LABEL_54:
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        uint64_t v17 = a3;
        break;
      case 0x1Au:
        uint64_t v326 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v326;
        uint64_t v327 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v327;
        uint64_t v328 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v328;
        v2691[6] = v2692[6];
        uint64_t v329 = (int *)type metadata accessor for Answer(0);
        uint64_t v330 = v329[9];
        uint64_t v331 = (char *)v2691 + v330;
        uint64_t v332 = (char *)v2692 + v330;
        uint64_t v333 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v332, 1, v333))
        {
          uint64_t v334 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v331, v332, *(void *)(*(void *)(v334 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v333 - 8) + 16))(v331, v332, v333);
          __swift_storeEnumTagSinglePayload((uint64_t)v331, 0, 1, v333);
        }
        uint64_t v16 = a1;
        uint64_t v15 = a2;
        uint64_t v17 = a3;
        uint64_t v13 = v2692;
        *((unsigned char *)v2691 + v329[10]) = *((unsigned char *)v2692 + v329[10]);
        uint64_t v493 = v329[11];
        uint64_t v494 = (void *)((char *)v2691 + v493);
        unint64_t v495 = (void *)((char *)v2692 + v493);
        uint64_t v496 = v495[1];
        *uint64_t v494 = *v495;
        v494[1] = v496;
LABEL_125:
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v2682 = v12;
        uint64_t v19 = v2692[1];
        *uint64_t v2691 = *v2692;
        v2691[1] = v19;
        uint64_t v20 = v2692[3];
        v2691[2] = v2692[2];
        v2691[3] = v20;
        uint64_t v21 = v2692[5];
        v2691[4] = v2692[4];
        v2691[5] = v21;
        uint64_t v22 = v2692[7];
        v2691[6] = v2692[6];
        v2691[7] = v22;
        uint64_t v23 = v2692[9];
        v2691[8] = v2692[8];
        v2691[9] = v23;
        uint64_t v2669 = v2692[11];
        v2691[10] = v2692[10];
        v2691[11] = v2669;
        uint64_t v24 = (int *)type metadata accessor for EmailDocument(0);
        uint64_t v25 = v24[12];
        v2619 = (char *)v2692 + v25;
        uint64_t v2637 = (char *)v2691 + v25;
        uint64_t v26 = type metadata accessor for Date();
        uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v28 = v2691;
        uint64_t v2647 = v27;
        uint64_t v2657 = v26;
        v27(v2637, v2619, v26);
        *(void *)((char *)v2691 + v24[13]) = *(void *)((char *)v2692 + v24[13]);
        *(void *)((char *)v2691 + v24[14]) = *(void *)((char *)v2692 + v24[14]);
        *(void *)((char *)v2691 + v24[15]) = *(void *)((char *)v2692 + v24[15]);
        *((unsigned char *)v2691 + v24[16]) = *((unsigned char *)v2692 + v24[16]);
        *((unsigned char *)v2691 + v24[17]) = *((unsigned char *)v2692 + v24[17]);
        uint64_t v29 = v24[18];
        uint64_t v30 = (void *)((char *)v2691 + v29);
        uint64_t v31 = (void *)((char *)v2692 + v29);
        uint64_t v32 = v31[1];
        *uint64_t v30 = *v31;
        v30[1] = v32;
        uint64_t v2670 = v24;
        uint64_t v33 = v24[19];
        uint64_t v34 = (void *)((char *)v2691 + v33);
        uint64_t v35 = (char *)v2692 + v33;
        uint64_t v36 = *(void *)((char *)v2692 + v33);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v36)
        {
          uint64_t v37 = *((void *)v35 + 1);
          uint64_t v38 = *((void *)v35 + 2);
          *uint64_t v34 = v36;
          v34[1] = v37;
          uint64_t v39 = *((void *)v35 + 3);
          uint64_t v40 = *((void *)v35 + 4);
          v34[2] = v38;
          v34[3] = v39;
          v34[4] = v40;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v335 = *((_OWORD *)v35 + 1);
          *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
          *((_OWORD *)v34 + 1) = v335;
          v34[4] = *((void *)v35 + 4);
        }
        uint64_t v13 = v2692;
        uint64_t v336 = v24;
        uint64_t v337 = v24[20];
        uint64_t v338 = (void *)((char *)v2691 + v337);
        uint64_t v339 = (void *)((char *)v2692 + v337);
        uint64_t v340 = v339[1];
        void *v338 = *v339;
        v338[1] = v340;
        uint64_t v341 = v24[21];
        uint64_t v342 = (void *)((char *)v2691 + v341);
        uint64_t v343 = (void *)((char *)v2692 + v341);
        uint64_t v344 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v343, 1, (uint64_t)v344))
        {
          uint64_t v345 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v342, v343, *(void *)(*(void *)(v345 - 8) + 64));
        }
        else
        {
          uint64_t v497 = v343[1];
          void *v342 = *v343;
          v342[1] = v497;
          uint64_t v498 = v344[5];
          uint64_t v499 = (void *)((char *)v342 + v498);
          uint64_t v500 = (void *)((char *)v343 + v498);
          uint64_t v501 = type metadata accessor for RentalCarReservation(0);
          swift_bridgeObjectRetain();
          uint64_t v2626 = v342;
          uint64_t v2586 = v343;
          uint64_t v2600 = v344;
          if (__swift_getEnumTagSinglePayload((uint64_t)v500, 1, v501))
          {
            uint64_t v502 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v499, v500, *(void *)(*(void *)(v502 - 8) + 64));
          }
          else
          {
            uint64_t v729 = v500[1];
            void *v499 = *v500;
            v499[1] = v729;
            uint64_t v730 = v500[3];
            v499[2] = v500[2];
            v499[3] = v730;
            uint64_t v731 = v500[5];
            v499[4] = v500[4];
            v499[5] = v731;
            uint64_t v732 = v500[7];
            v499[6] = v500[6];
            v499[7] = v732;
            uint64_t v733 = v500[9];
            v499[8] = v500[8];
            v499[9] = v733;
            uint64_t v734 = v500[11];
            v499[10] = v500[10];
            v499[11] = v734;
            uint64_t v735 = v500[13];
            v499[12] = v500[12];
            v499[13] = v735;
            uint64_t v736 = v500[15];
            v499[14] = v500[14];
            v499[15] = v736;
            *((unsigned char *)v499 + 128) = *((unsigned char *)v500 + 128);
            *(_WORD *)((char *)v499 + 129) = *(_WORD *)((char *)v500 + 129);
            uint64_t v737 = v500[18];
            v499[17] = v500[17];
            v499[18] = v737;
            uint64_t v738 = v500[20];
            v499[19] = v500[19];
            v499[20] = v738;
            uint64_t v739 = v500[22];
            v499[21] = v500[21];
            v499[22] = v739;
            uint64_t v2511 = v500[24];
            v499[23] = v500[23];
            v499[24] = v2511;
            uint64_t v740 = v500[26];
            v499[25] = v500[25];
            v499[26] = v740;
            uint64_t v741 = v500[28];
            v499[27] = v500[27];
            v499[28] = v741;
            uint64_t v742 = v500[30];
            v499[29] = v500[29];
            v499[30] = v742;
            uint64_t v743 = v500[32];
            v499[31] = v500[31];
            v499[32] = v743;
            uint64_t v744 = v500[34];
            v499[33] = v500[33];
            v499[34] = v744;
            uint64_t v745 = v500[36];
            v499[35] = v500[35];
            v499[36] = v745;
            uint64_t v746 = v500[38];
            v499[37] = v500[37];
            v499[38] = v746;
            uint64_t v747 = v500[40];
            v499[39] = v500[39];
            v499[40] = v747;
            uint64_t v748 = v500[42];
            v499[41] = v500[41];
            v499[42] = v748;
            uint64_t v749 = v500[44];
            v499[43] = v500[43];
            v499[44] = v749;
            uint64_t v750 = v500[46];
            v499[45] = v500[45];
            v499[46] = v750;
            uint64_t v751 = v500[47];
            *((unsigned char *)v499 + 384) = *((unsigned char *)v500 + 384);
            v499[47] = v751;
            uint64_t v752 = v500[50];
            v499[49] = v500[49];
            v499[50] = v752;
            uint64_t v753 = v500[52];
            v499[51] = v500[51];
            v499[52] = v753;
            uint64_t v754 = *(int *)(v501 + 140);
            uint64_t v2569 = (char *)v499 + v754;
            uint64_t v755 = (char *)v500 + v754;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v755, 1, v2657))
            {
              uint64_t v756 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2569, v755, *(void *)(*(void *)(v756 - 8) + 64));
            }
            else
            {
              v2647(v2569, v755, v2657);
              __swift_storeEnumTagSinglePayload((uint64_t)v2569, 0, 1, v2657);
            }
            uint64_t v813 = *(int *)(v501 + 144);
            uint64_t v814 = (char *)v499 + v813;
            uint64_t v815 = (char *)v500 + v813;
            if (__swift_getEnumTagSinglePayload((uint64_t)v500 + v813, 1, v2657))
            {
              uint64_t v816 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v814, v815, *(void *)(*(void *)(v816 - 8) + 64));
            }
            else
            {
              v2647(v814, v815, v2657);
              __swift_storeEnumTagSinglePayload((uint64_t)v814, 0, 1, v2657);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v499, 0, 1, v501);
            uint64_t v342 = v2626;
          }
          uint64_t v825 = v344[6];
          uint64_t v826 = (void *)((char *)v342 + v825);
          uint64_t v827 = (void *)((char *)v343 + v825);
          uint64_t v828 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v827, 1, v828))
          {
            uint64_t v829 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v826, v827, *(void *)(*(void *)(v829 - 8) + 64));
          }
          else
          {
            uint64_t v830 = v827[1];
            *uint64_t v826 = *v827;
            v826[1] = v830;
            uint64_t v831 = v827[3];
            v826[2] = v827[2];
            v826[3] = v831;
            uint64_t v832 = v827[5];
            v826[4] = v827[4];
            v826[5] = v832;
            uint64_t v833 = v827[7];
            v826[6] = v827[6];
            v826[7] = v833;
            uint64_t v834 = v827[9];
            v826[8] = v827[8];
            v826[9] = v834;
            uint64_t v835 = v827[11];
            v826[10] = v827[10];
            v826[11] = v835;
            uint64_t v836 = v827[13];
            v826[12] = v827[12];
            v826[13] = v836;
            uint64_t v837 = v827[15];
            v826[14] = v827[14];
            v826[15] = v837;
            *((unsigned char *)v826 + 128) = *((unsigned char *)v827 + 128);
            *(_WORD *)((char *)v826 + 129) = *(_WORD *)((char *)v827 + 129);
            uint64_t v838 = v827[18];
            v826[17] = v827[17];
            v826[18] = v838;
            uint64_t v839 = v827[20];
            v826[19] = v827[19];
            v826[20] = v839;
            uint64_t v840 = v827[22];
            v826[21] = v827[21];
            v826[22] = v840;
            uint64_t v841 = v827[24];
            v826[23] = v827[23];
            v826[24] = v841;
            uint64_t v2558 = (void *)v827[26];
            v826[25] = v827[25];
            v826[26] = v2558;
            uint64_t v842 = v827[28];
            v826[27] = v827[27];
            v826[28] = v842;
            uint64_t v843 = v827[30];
            v826[29] = v827[29];
            v826[30] = v843;
            uint64_t v844 = v827[32];
            v826[31] = v827[31];
            v826[32] = v844;
            uint64_t v845 = v827[34];
            v826[33] = v827[33];
            v826[34] = v845;
            uint64_t v846 = v827[36];
            uint64_t v847 = v827[35];
            *((unsigned char *)v826 + 296) = *((unsigned char *)v827 + 296);
            v826[35] = v847;
            v826[36] = v846;
            uint64_t v848 = *(int *)(v828 + 112);
            uint64_t v2570 = (char *)v826 + v848;
            uint64_t v849 = (char *)v827 + v848;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v849, 1, v2657))
            {
              uint64_t v850 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2570, v849, *(void *)(*(void *)(v850 - 8) + 64));
            }
            else
            {
              v2647(v2570, v849, v2657);
              __swift_storeEnumTagSinglePayload((uint64_t)v2570, 0, 1, v2657);
            }
            uint64_t v903 = v828;
            uint64_t v904 = *(int *)(v828 + 116);
            uint64_t v905 = (char *)v826 + v904;
            uint64_t v906 = (char *)v827 + v904;
            uint64_t v343 = v2586;
            if (__swift_getEnumTagSinglePayload((uint64_t)v827 + v904, 1, v2657))
            {
              uint64_t v907 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v905, v906, *(void *)(*(void *)(v907 - 8) + 64));
            }
            else
            {
              v2647(v905, v906, v2657);
              __swift_storeEnumTagSinglePayload((uint64_t)v905, 0, 1, v2657);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v826, 0, 1, v903);
            uint64_t v342 = v2626;
          }
          uint64_t v918 = v344[7];
          uint64_t v919 = (void *)((char *)v342 + v918);
          uint64_t v920 = (void *)((char *)v343 + v918);
          uint64_t v921 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v920, 1, (uint64_t)v921))
          {
            uint64_t v922 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v919, v920, *(void *)(*(void *)(v922 - 8) + 64));
          }
          else
          {
            uint64_t v923 = v920[1];
            *uint64_t v919 = *v920;
            v919[1] = v923;
            uint64_t v924 = v920[3];
            v919[2] = v920[2];
            v919[3] = v924;
            uint64_t v925 = v920[5];
            v919[4] = v920[4];
            v919[5] = v925;
            uint64_t v926 = v920[7];
            v919[6] = v920[6];
            v919[7] = v926;
            uint64_t v927 = v920[9];
            v919[8] = v920[8];
            v919[9] = v927;
            uint64_t v928 = v920[11];
            v919[10] = v920[10];
            v919[11] = v928;
            uint64_t v929 = v920[13];
            v919[12] = v920[12];
            v919[13] = v929;
            uint64_t v930 = v920[15];
            v919[14] = v920[14];
            v919[15] = v930;
            *((unsigned char *)v919 + 128) = *((unsigned char *)v920 + 128);
            *(_WORD *)((char *)v919 + 129) = *(_WORD *)((char *)v920 + 129);
            uint64_t v931 = v920[18];
            v919[17] = v920[17];
            v919[18] = v931;
            uint64_t v932 = v920[20];
            v919[19] = v920[19];
            v919[20] = v932;
            uint64_t v933 = v920[22];
            v919[21] = v920[21];
            v919[22] = v933;
            uint64_t v2513 = v920[24];
            v919[23] = v920[23];
            v919[24] = v2513;
            uint64_t v934 = v920[26];
            v919[25] = v920[25];
            v919[26] = v934;
            uint64_t v935 = v920[28];
            v919[27] = v920[27];
            v919[28] = v935;
            uint64_t v2559 = (void *)v920[30];
            v919[29] = v920[29];
            v919[30] = v2559;
            uint64_t v936 = v920[32];
            v919[31] = v920[31];
            v919[32] = v936;
            uint64_t v937 = v920[34];
            v919[33] = v920[33];
            v919[34] = v937;
            uint64_t v938 = v920[36];
            uint64_t v939 = v920[35];
            *((unsigned char *)v919 + 296) = *((unsigned char *)v920 + 296);
            v919[35] = v939;
            v919[36] = v938;
            uint64_t v940 = v920[39];
            v919[38] = v920[38];
            v919[39] = v940;
            uint64_t v941 = v921[29];
            v2571 = (char *)v919 + v941;
            uint64_t v942 = (char *)v920 + v941;
            uint64_t v943 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v942, 1, v943))
            {
              uint64_t v944 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2571, v942, *(void *)(*(void *)(v944 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v943 - 8) + 16))(v2571, v942, v943);
              __swift_storeEnumTagSinglePayload((uint64_t)v2571, 0, 1, v943);
            }
            uint64_t v999 = v921[30];
            uint64_t v1000 = (void *)((char *)v919 + v999);
            uint64_t v1001 = (void *)((char *)v920 + v999);
            uint64_t v1002 = v1001[1];
            *uint64_t v1000 = *v1001;
            v1000[1] = v1002;
            uint64_t v1003 = v921[31];
            uint64_t v1004 = (char *)v919 + v1003;
            uint64_t v1005 = (char *)v920 + v1003;
            swift_bridgeObjectRetain();
            uint64_t v343 = v2586;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1005, 1, v2657))
            {
              uint64_t v1006 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1004, v1005, *(void *)(*(void *)(v1006 - 8) + 64));
            }
            else
            {
              v2647(v1004, v1005, v2657);
              __swift_storeEnumTagSinglePayload((uint64_t)v1004, 0, 1, v2657);
            }
            uint64_t v1023 = v921[32];
            uint64_t v1024 = (char *)v919 + v1023;
            uint64_t v1025 = (char *)v920 + v1023;
            if (__swift_getEnumTagSinglePayload((uint64_t)v920 + v1023, 1, v2657))
            {
              uint64_t v1026 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1024, v1025, *(void *)(*(void *)(v1026 - 8) + 64));
            }
            else
            {
              v2647(v1024, v1025, v2657);
              __swift_storeEnumTagSinglePayload((uint64_t)v1024, 0, 1, v2657);
            }
            uint64_t v344 = v2600;
            __swift_storeEnumTagSinglePayload((uint64_t)v919, 0, 1, (uint64_t)v921);
            uint64_t v342 = v2626;
          }
          uint64_t v1035 = v344[8];
          uint64_t v1036 = (void *)((char *)v342 + v1035);
          uint64_t v1037 = (void *)((char *)v343 + v1035);
          uint64_t v1038 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1037, 1, v1038))
          {
            uint64_t v1039 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v1036, v1037, *(void *)(*(void *)(v1039 - 8) + 64));
          }
          else
          {
            uint64_t v1040 = v1037[1];
            *uint64_t v1036 = *v1037;
            v1036[1] = v1040;
            uint64_t v1041 = v1037[3];
            v1036[2] = v1037[2];
            v1036[3] = v1041;
            uint64_t v1042 = v1037[5];
            v1036[4] = v1037[4];
            v1036[5] = v1042;
            uint64_t v1043 = v1037[7];
            v1036[6] = v1037[6];
            v1036[7] = v1043;
            uint64_t v1044 = v1037[9];
            v1036[8] = v1037[8];
            v1036[9] = v1044;
            uint64_t v1045 = v1037[11];
            v1036[10] = v1037[10];
            v1036[11] = v1045;
            uint64_t v1046 = v1037[13];
            v1036[12] = v1037[12];
            v1036[13] = v1046;
            uint64_t v1047 = v1037[15];
            v1036[14] = v1037[14];
            v1036[15] = v1047;
            *((unsigned char *)v1036 + 128) = *((unsigned char *)v1037 + 128);
            *(_WORD *)((char *)v1036 + 129) = *(_WORD *)((char *)v1037 + 129);
            uint64_t v1048 = v1037[18];
            v1036[17] = v1037[17];
            v1036[18] = v1048;
            uint64_t v1049 = v1037[20];
            v1036[19] = v1037[19];
            v1036[20] = v1049;
            uint64_t v1050 = v1037[22];
            v1036[21] = v1037[21];
            v1036[22] = v1050;
            uint64_t v1051 = v1037[24];
            v1036[23] = v1037[23];
            v1036[24] = v1051;
            uint64_t v1052 = v1037[26];
            v1036[25] = v1037[25];
            v1036[26] = v1052;
            uint64_t v1053 = v1037[28];
            v1036[27] = v1037[27];
            v1036[28] = v1053;
            uint64_t v1054 = v1037[30];
            v1036[29] = v1037[29];
            v1036[30] = v1054;
            uint64_t v1055 = v1037[32];
            v1036[31] = v1037[31];
            v1036[32] = v1055;
            uint64_t v1057 = v1037[33];
            uint64_t v1056 = v1037[34];
            *((unsigned char *)v1036 + 280) = *((unsigned char *)v1037 + 280);
            v1036[33] = v1057;
            v1036[34] = v1056;
            uint64_t v1058 = v1037[37];
            v1036[36] = v1037[36];
            v1036[37] = v1058;
            uint64_t v1059 = *(int *)(v1038 + 108);
            uint64_t v2573 = (char *)v1036 + v1059;
            uint64_t v1060 = (char *)v1037 + v1059;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1060, 1, v2657))
            {
              uint64_t v1061 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2573, v1060, *(void *)(*(void *)(v1061 - 8) + 64));
            }
            else
            {
              v2647(v2573, v1060, v2657);
              __swift_storeEnumTagSinglePayload((uint64_t)v2573, 0, 1, v2657);
            }
            uint64_t v1116 = v1038;
            uint64_t v1117 = *(int *)(v1038 + 112);
            uint64_t v1118 = (char *)v1036 + v1117;
            uint64_t v1119 = (char *)v1037 + v1117;
            uint64_t v343 = v2586;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1037 + v1117, 1, v2657))
            {
              uint64_t v1120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1118, v1119, *(void *)(*(void *)(v1120 - 8) + 64));
            }
            else
            {
              v2647(v1118, v1119, v2657);
              __swift_storeEnumTagSinglePayload((uint64_t)v1118, 0, 1, v2657);
            }
            uint64_t v344 = v2600;
            __swift_storeEnumTagSinglePayload((uint64_t)v1036, 0, 1, v1116);
            uint64_t v342 = v2626;
          }
          uint64_t v1131 = v344[9];
          uint64_t v1132 = (void *)((char *)v342 + v1131);
          uint64_t v1133 = (void *)((char *)v343 + v1131);
          uint64_t v1134 = type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1133, 1, v1134))
          {
            uint64_t v1135 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v1132, v1133, *(void *)(*(void *)(v1135 - 8) + 64));
          }
          else
          {
            uint64_t v1136 = v1133[1];
            *uint64_t v1132 = *v1133;
            v1132[1] = v1136;
            uint64_t v1137 = v1133[3];
            v1132[2] = v1133[2];
            v1132[3] = v1137;
            uint64_t v1138 = v1133[5];
            v1132[4] = v1133[4];
            v1132[5] = v1138;
            uint64_t v1139 = v1133[7];
            v1132[6] = v1133[6];
            v1132[7] = v1139;
            uint64_t v1140 = v1133[9];
            v1132[8] = v1133[8];
            v1132[9] = v1140;
            uint64_t v1141 = v1133[11];
            v1132[10] = v1133[10];
            v1132[11] = v1141;
            uint64_t v1142 = v1133[13];
            v1132[12] = v1133[12];
            v1132[13] = v1142;
            uint64_t v1143 = v1133[15];
            v1132[14] = v1133[14];
            v1132[15] = v1143;
            *((unsigned char *)v1132 + 128) = *((unsigned char *)v1133 + 128);
            *(_WORD *)((char *)v1132 + 129) = *(_WORD *)((char *)v1133 + 129);
            uint64_t v1144 = v1133[18];
            v1132[17] = v1133[17];
            v1132[18] = v1144;
            uint64_t v1145 = v1133[20];
            v1132[19] = v1133[19];
            v1132[20] = v1145;
            uint64_t v1146 = v1133[22];
            v1132[21] = v1133[21];
            v1132[22] = v1146;
            uint64_t v1147 = v1133[24];
            v1132[23] = v1133[23];
            v1132[24] = v1147;
            uint64_t v1148 = v1133[26];
            v1132[25] = v1133[25];
            v1132[26] = v1148;
            uint64_t v1149 = v1133[28];
            v1132[27] = v1133[27];
            v1132[28] = v1149;
            uint64_t v1150 = v1133[30];
            v1132[29] = v1133[29];
            v1132[30] = v1150;
            v1132[31] = v1133[31];
            uint64_t v1151 = *(int *)(v1134 + 96);
            v2574 = (char *)v1132 + v1151;
            uint64_t v1152 = (char *)v1133 + v1151;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1152, 1, v2657))
            {
              uint64_t v1153 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2574, v1152, *(void *)(*(void *)(v1153 - 8) + 64));
            }
            else
            {
              v2647(v2574, v1152, v2657);
              __swift_storeEnumTagSinglePayload((uint64_t)v2574, 0, 1, v2657);
            }
            uint64_t v1200 = v1134;
            uint64_t v1201 = *(int *)(v1134 + 100);
            uint64_t v1202 = (char *)v1132 + v1201;
            uint64_t v1203 = (char *)v1133 + v1201;
            uint64_t v343 = v2586;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1133 + v1201, 1, v2657))
            {
              uint64_t v1204 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1202, v1203, *(void *)(*(void *)(v1204 - 8) + 64));
            }
            else
            {
              v2647(v1202, v1203, v2657);
              __swift_storeEnumTagSinglePayload((uint64_t)v1202, 0, 1, v2657);
            }
            uint64_t v1215 = *(int *)(v1200 + 104);
            uint64_t v1216 = (char *)v1132 + v1215;
            uint64_t v1217 = (char *)v1133 + v1215;
            uint64_t v1218 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1217, 1, v1218))
            {
              uint64_t v1219 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1216, v1217, *(void *)(*(void *)(v1219 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1218 - 8) + 16))(v1216, v1217, v1218);
              __swift_storeEnumTagSinglePayload((uint64_t)v1216, 0, 1, v1218);
            }
            uint64_t v344 = v2600;
            __swift_storeEnumTagSinglePayload((uint64_t)v1132, 0, 1, v1200);
            uint64_t v342 = v2626;
          }
          uint64_t v1229 = v344[10];
          uint64_t v1230 = (void *)((char *)v342 + v1229);
          uint64_t v1231 = (void *)((char *)v343 + v1229);
          uint64_t v1232 = type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1231, 1, v1232))
          {
            uint64_t v1233 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v1230, v1231, *(void *)(*(void *)(v1233 - 8) + 64));
          }
          else
          {
            uint64_t v1234 = v1231[1];
            *uint64_t v1230 = *v1231;
            v1230[1] = v1234;
            uint64_t v1235 = v1231[3];
            v1230[2] = v1231[2];
            v1230[3] = v1235;
            uint64_t v1236 = v1231[5];
            v1230[4] = v1231[4];
            v1230[5] = v1236;
            uint64_t v1237 = v1231[7];
            v1230[6] = v1231[6];
            v1230[7] = v1237;
            uint64_t v1238 = v1231[9];
            v1230[8] = v1231[8];
            v1230[9] = v1238;
            uint64_t v1239 = v1231[11];
            v1230[10] = v1231[10];
            v1230[11] = v1239;
            uint64_t v1240 = v1231[13];
            v1230[12] = v1231[12];
            v1230[13] = v1240;
            uint64_t v1241 = v1231[15];
            v1230[14] = v1231[14];
            v1230[15] = v1241;
            *((unsigned char *)v1230 + 128) = *((unsigned char *)v1231 + 128);
            *(_WORD *)((char *)v1230 + 129) = *(_WORD *)((char *)v1231 + 129);
            uint64_t v1242 = v1231[18];
            v1230[17] = v1231[17];
            v1230[18] = v1242;
            uint64_t v1243 = v1231[20];
            v1230[19] = v1231[19];
            v1230[20] = v1243;
            uint64_t v1244 = v1231[22];
            v1230[21] = v1231[21];
            v1230[22] = v1244;
            uint64_t v1245 = v1231[24];
            v1230[23] = v1231[23];
            v1230[24] = v1245;
            uint64_t v1246 = v1231[26];
            v1230[25] = v1231[25];
            v1230[26] = v1246;
            v1230[27] = v1231[27];
            uint64_t v2575 = (int *)v1232;
            uint64_t v1247 = *(int *)(v1232 + 88);
            uint64_t v2560 = (char *)v1230 + v1247;
            uint64_t v2521 = (char *)v1231 + v1247;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2521, 1, v2657))
            {
              uint64_t v1248 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2560, v2521, *(void *)(*(void *)(v1248 - 8) + 64));
            }
            else
            {
              v2647(v2560, v2521, v2657);
              __swift_storeEnumTagSinglePayload((uint64_t)v2560, 0, 1, v2657);
            }
            uint64_t v1289 = *(int *)(v1232 + 92);
            uint64_t v1290 = (char *)v1230 + v1289;
            uint64_t v1291 = (char *)v1231 + v1289;
            uint64_t v13 = v2692;
            uint64_t v336 = v2670;
            uint64_t v343 = v2586;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1231 + v1289, 1, v2657))
            {
              uint64_t v1292 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1290, v1291, *(void *)(*(void *)(v1292 - 8) + 64));
            }
            else
            {
              v2647(v1290, v1291, v2657);
              __swift_storeEnumTagSinglePayload((uint64_t)v1290, 0, 1, v2657);
            }
            uint64_t v1301 = v2575[24];
            uint64_t v1302 = (char *)v1230 + v1301;
            uint64_t v1303 = (char *)v1231 + v1301;
            *(void *)uint64_t v1302 = *(void *)v1303;
            v1302[8] = v1303[8];
            uint64_t v1304 = v2575[25];
            uint64_t v1305 = (char *)v1230 + v1304;
            uint64_t v1306 = (char *)v1231 + v1304;
            uint64_t v1307 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1306, 1, v1307))
            {
              uint64_t v1308 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1305, v1306, *(void *)(*(void *)(v1308 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1307 - 8) + 16))(v1305, v1306, v1307);
              __swift_storeEnumTagSinglePayload((uint64_t)v1305, 0, 1, v1307);
            }
            uint64_t v344 = v2600;
            __swift_storeEnumTagSinglePayload((uint64_t)v1230, 0, 1, (uint64_t)v2575);
            uint64_t v342 = v2626;
          }
          uint64_t v1324 = v344[11];
          uint64_t v1325 = (void *)((char *)v342 + v1324);
          uint64_t v1326 = (void *)((char *)v343 + v1324);
          uint64_t v1327 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1326, 1, (uint64_t)v1327))
          {
            uint64_t v1328 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v1325, v1326, *(void *)(*(void *)(v1328 - 8) + 64));
          }
          else
          {
            uint64_t v1329 = v1326[1];
            void *v1325 = *v1326;
            v1325[1] = v1329;
            uint64_t v1330 = v1326[3];
            v1325[2] = v1326[2];
            v1325[3] = v1330;
            uint64_t v1331 = v1326[5];
            v1325[4] = v1326[4];
            v1325[5] = v1331;
            uint64_t v1332 = v1326[7];
            v1325[6] = v1326[6];
            v1325[7] = v1332;
            uint64_t v1333 = v1326[9];
            v1325[8] = v1326[8];
            v1325[9] = v1333;
            uint64_t v1334 = v1326[11];
            v1325[10] = v1326[10];
            v1325[11] = v1334;
            *((unsigned char *)v1325 + 96) = *((unsigned char *)v1326 + 96);
            uint64_t v1335 = v1326[14];
            v1325[13] = v1326[13];
            v1325[14] = v1335;
            uint64_t v1336 = v1327[13];
            v2577 = (char *)v1325 + v1336;
            v1337 = (char *)v1326 + v1336;
            uint64_t v2543 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1337, 1, v2543))
            {
              uint64_t v1338 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2577, v1337, *(void *)(*(void *)(v1338 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2543 - 8) + 16))(v2577, v1337, v2543);
              __swift_storeEnumTagSinglePayload((uint64_t)v2577, 0, 1, v2543);
            }
            uint64_t v1369 = v1327[14];
            uint64_t v1370 = (char *)v1325 + v1369;
            uint64_t v1371 = (char *)v1326 + v1369;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1326 + v1369, 1, v2543))
            {
              uint64_t v1372 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1370, v1371, *(void *)(*(void *)(v1372 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2543 - 8) + 16))(v1370, v1371, v2543);
              __swift_storeEnumTagSinglePayload((uint64_t)v1370, 0, 1, v2543);
            }
            uint64_t v1381 = v1327[15];
            uint64_t v1382 = (void *)((char *)v1325 + v1381);
            uint64_t v1383 = (void *)((char *)v1326 + v1381);
            uint64_t v1384 = v1383[1];
            void *v1382 = *v1383;
            v1382[1] = v1384;
            uint64_t v1385 = v1327[16];
            uint64_t v1386 = (void *)((char *)v1325 + v1385);
            uint64_t v1387 = (void *)((char *)v1326 + v1385);
            uint64_t v1388 = v1387[1];
            *uint64_t v1386 = *v1387;
            v1386[1] = v1388;
            uint64_t v1389 = v1327[17];
            uint64_t v1390 = (void *)((char *)v1325 + v1389);
            uint64_t v1391 = (void *)((char *)v1326 + v1389);
            uint64_t v1392 = v1391[1];
            *uint64_t v1390 = *v1391;
            v1390[1] = v1392;
            uint64_t v1393 = v1327[18];
            uint64_t v2578 = (char *)v1325 + v1393;
            uint64_t v1394 = (char *)v1326 + v1393;
            uint64_t v1395 = type metadata accessor for DateComponents();
            v1396 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1395 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1396(v2578, v1394, v1395);
            v1396((char *)v1325 + v1327[19], (char *)v1326 + v1327[19], v1395);
            uint64_t v1397 = v1327[20];
            uint64_t v1398 = (void *)((char *)v1325 + v1397);
            uint64_t v1399 = (void *)((char *)v1326 + v1397);
            uint64_t v1400 = v1399[1];
            *uint64_t v1398 = *v1399;
            v1398[1] = v1400;
            uint64_t v1401 = v1327[21];
            uint64_t v1402 = (void *)((char *)v1325 + v1401);
            uint64_t v1403 = (void *)((char *)v1326 + v1401);
            uint64_t v1404 = v1403[1];
            *uint64_t v1402 = *v1403;
            v1402[1] = v1404;
            uint64_t v1405 = v1327[22];
            v1406 = (void *)((char *)v1325 + v1405);
            uint64_t v1407 = (void *)((char *)v1326 + v1405);
            uint64_t v2551 = v1407[1];
            void *v1406 = *v1407;
            v1406[1] = v2551;
            uint64_t v1408 = v1327[23];
            uint64_t v1409 = (void *)((char *)v1325 + v1408);
            uint64_t v1410 = (void *)((char *)v1326 + v1408);
            uint64_t v1411 = v1410[1];
            void *v1409 = *v1410;
            v1409[1] = v1411;
            uint64_t v1412 = v1327[24];
            uint64_t v1413 = (void *)((char *)v1325 + v1412);
            uint64_t v1414 = (void *)((char *)v1326 + v1412);
            uint64_t v2579 = (void *)v1414[1];
            void *v1413 = *v1414;
            v1413[1] = v2579;
            uint64_t v1415 = v1327[25];
            uint64_t v1416 = (void *)((char *)v1325 + v1415);
            uint64_t v1417 = (void *)((char *)v1326 + v1415);
            uint64_t v2562 = (void *)v1417[1];
            *uint64_t v1416 = *v1417;
            v1416[1] = v2562;
            uint64_t v1418 = v1327[26];
            uint64_t v1419 = (void *)((char *)v1325 + v1418);
            uint64_t v1420 = (void *)((char *)v1326 + v1418);
            uint64_t v2544 = v1420[1];
            *uint64_t v1419 = *v1420;
            v1419[1] = v2544;
            uint64_t v1421 = v1327[27];
            uint64_t v1422 = (void *)((char *)v1325 + v1421);
            uint64_t v1423 = (void *)((char *)v1326 + v1421);
            uint64_t v2538 = v1423[1];
            *uint64_t v1422 = *v1423;
            v1422[1] = v2538;
            uint64_t v1424 = v1327[28];
            uint64_t v1425 = (void *)((char *)v1325 + v1424);
            uint64_t v1426 = (void *)((char *)v1326 + v1424);
            __dsta = (void *)v1426[1];
            void *v1425 = *v1426;
            v1425[1] = __dsta;
            uint64_t v1427 = v1327[29];
            uint64_t v1428 = (void *)((char *)v1325 + v1427);
            uint64_t v1429 = (void *)((char *)v1326 + v1427);
            uint64_t v2529 = v1429[1];
            void *v1428 = *v1429;
            v1428[1] = v2529;
            uint64_t v1430 = v1327[30];
            uint64_t v1431 = (void *)((char *)v1325 + v1430);
            uint64_t v1432 = (void *)((char *)v1326 + v1430);
            uint64_t v2525 = v1432[1];
            void *v1431 = *v1432;
            v1431[1] = v2525;
            uint64_t v1433 = v1327[31];
            uint64_t v1434 = (void *)((char *)v1325 + v1433);
            uint64_t v1435 = (void *)((char *)v1326 + v1433);
            uint64_t v2519 = v1435[1];
            void *v1434 = *v1435;
            v1434[1] = v2519;
            uint64_t v1436 = v1327[32];
            uint64_t v1437 = (void *)((char *)v1325 + v1436);
            uint64_t v1438 = (void *)((char *)v1326 + v1436);
            uint64_t v2517 = v1438[1];
            void *v1437 = *v1438;
            v1437[1] = v2517;
            *(void *)((char *)v1325 + v1327[33]) = *(void *)((char *)v1326 + v1327[33]);
            *(void *)((char *)v1325 + v1327[34]) = *(void *)((char *)v1326 + v1327[34]);
            uint64_t v1439 = v1327[35];
            uint64_t v1440 = (void *)((char *)v1325 + v1439);
            uint64_t v1441 = (void *)((char *)v1326 + v1439);
            uint64_t v1442 = v1441[1];
            void *v1440 = *v1441;
            v1440[1] = v1442;
            uint64_t v1443 = v1327[36];
            uint64_t v1444 = (void *)((char *)v1325 + v1443);
            v1445 = (void *)((char *)v1326 + v1443);
            uint64_t v1446 = v1445[1];
            *uint64_t v1444 = *v1445;
            v1444[1] = v1446;
            uint64_t v1447 = v1327[37];
            v1448 = (void *)((char *)v1325 + v1447);
            uint64_t v1449 = (void *)((char *)v1326 + v1447);
            uint64_t v1450 = v1449[1];
            void *v1448 = *v1449;
            v1448[1] = v1450;
            uint64_t v1451 = v1327[38];
            uint64_t v2522 = (char *)v1325 + v1451;
            uint64_t v1452 = (char *)v1326 + v1451;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1452, 1, v2657))
            {
              uint64_t v1453 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2522, v1452, *(void *)(*(void *)(v1453 - 8) + 64));
            }
            else
            {
              v2647(v2522, v1452, v2657);
              __swift_storeEnumTagSinglePayload((uint64_t)v2522, 0, 1, v2657);
            }
            uint64_t v1602 = v1327[39];
            v1603 = (void *)((char *)v1325 + v1602);
            uint64_t v1604 = (void *)((char *)v1326 + v1602);
            uint64_t v1605 = v1604[1];
            void *v1603 = *v1604;
            v1603[1] = v1605;
            uint64_t v1606 = v1327[40];
            uint64_t v1607 = (void *)((char *)v1325 + v1606);
            uint64_t v1608 = (void *)((char *)v1326 + v1606);
            uint64_t v1609 = v1608[1];
            *uint64_t v1607 = *v1608;
            v1607[1] = v1609;
            uint64_t v1610 = v1327[41];
            uint64_t v1611 = (char *)v1325 + v1610;
            uint64_t v1612 = (char *)v1326 + v1610;
            v1611[8] = v1612[8];
            *(void *)uint64_t v1611 = *(void *)v1612;
            uint64_t v1613 = v1327[42];
            uint64_t v1614 = (void *)((char *)v1325 + v1613);
            uint64_t v1615 = (void *)((char *)v1326 + v1613);
            uint64_t v1616 = v1615[1];
            *uint64_t v1614 = *v1615;
            v1614[1] = v1616;
            uint64_t v1617 = v1327[43];
            uint64_t v1618 = (char *)v1325 + v1617;
            uint64_t v1619 = (char *)v1326 + v1617;
            *(_OWORD *)uint64_t v1618 = *(_OWORD *)v1619;
            *(void *)(v1618 + 13) = *(void *)(v1619 + 13);
            uint64_t v1620 = v1327[44];
            v1621 = (void *)((char *)v1325 + v1620);
            uint64_t v1622 = (void *)((char *)v1326 + v1620);
            uint64_t v1623 = v1622[1];
            void *v1621 = *v1622;
            v1621[1] = v1623;
            uint64_t v1624 = v1327[45];
            v1625 = (void *)((char *)v1325 + v1624);
            uint64_t v1626 = (void *)((char *)v1326 + v1624);
            uint64_t v1627 = v1626[1];
            void *v1625 = *v1626;
            v1625[1] = v1627;
            uint64_t v1628 = v1327[46];
            uint64_t v1629 = (void *)((char *)v1325 + v1628);
            uint64_t v1630 = (void *)((char *)v1326 + v1628);
            uint64_t v1631 = v1630[1];
            void *v1629 = *v1630;
            v1629[1] = v1631;
            uint64_t v1632 = v1327[47];
            uint64_t v1633 = (void *)((char *)v1325 + v1632);
            uint64_t v1634 = (void *)((char *)v1326 + v1632);
            uint64_t v1635 = v1634[1];
            *uint64_t v1633 = *v1634;
            v1633[1] = v1635;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1325, 0, 1, (uint64_t)v1327);
            uint64_t v13 = v2692;
            uint64_t v336 = v2670;
            uint64_t v342 = v2626;
            uint64_t v343 = v2586;
            uint64_t v344 = v2600;
          }
          uint64_t v1636 = v344[12];
          uint64_t v1637 = (void *)((char *)v342 + v1636);
          uint64_t v1638 = (void *)((char *)v343 + v1636);
          uint64_t v1639 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1638, 1, (uint64_t)v1639))
          {
            uint64_t v1640 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v1637, v1638, *(void *)(*(void *)(v1640 - 8) + 64));
          }
          else
          {
            uint64_t v1641 = v1638[1];
            *uint64_t v1637 = *v1638;
            v1637[1] = v1641;
            uint64_t v1642 = v1638[3];
            v1637[2] = v1638[2];
            v1637[3] = v1642;
            uint64_t v1643 = v1638[5];
            v1637[4] = v1638[4];
            v1637[5] = v1643;
            uint64_t v1644 = v1638[7];
            v1637[6] = v1638[6];
            v1637[7] = v1644;
            uint64_t v1645 = v1638[9];
            v1637[8] = v1638[8];
            v1637[9] = v1645;
            uint64_t v1646 = v1638[11];
            v1637[10] = v1638[10];
            v1637[11] = v1646;
            *((unsigned char *)v1637 + 96) = *((unsigned char *)v1638 + 96);
            uint64_t v1647 = v1638[14];
            v1637[13] = v1638[13];
            v1637[14] = v1647;
            uint64_t v1648 = v1638[16];
            v1637[15] = v1638[15];
            v1637[16] = v1648;
            uint64_t v1649 = v1639[14];
            uint64_t v2582 = (char *)v1637 + v1649;
            uint64_t v1650 = (char *)v1638 + v1649;
            uint64_t v2541 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1650, 1, v2541))
            {
              uint64_t v1651 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2582, v1650, *(void *)(*(void *)(v1651 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2541 - 8) + 16))(v2582, v1650, v2541);
              __swift_storeEnumTagSinglePayload((uint64_t)v2582, 0, 1, v2541);
            }
            uint64_t v1752 = v1639[15];
            uint64_t v1753 = (char *)v1637 + v1752;
            uint64_t v1754 = (char *)v1638 + v1752;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1638 + v1752, 1, v2541))
            {
              uint64_t v1755 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1753, v1754, *(void *)(*(void *)(v1755 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2541 - 8) + 16))(v1753, v1754, v2541);
              __swift_storeEnumTagSinglePayload((uint64_t)v1753, 0, 1, v2541);
            }
            uint64_t v1764 = v1639[16];
            uint64_t v1765 = (void *)((char *)v1637 + v1764);
            uint64_t v1766 = (void *)((char *)v1638 + v1764);
            uint64_t v1767 = v1766[1];
            *uint64_t v1765 = *v1766;
            v1765[1] = v1767;
            uint64_t v1768 = v1639[17];
            uint64_t v1769 = (void *)((char *)v1637 + v1768);
            uint64_t v1770 = (void *)((char *)v1638 + v1768);
            uint64_t v2583 = (void *)v1770[1];
            *uint64_t v1769 = *v1770;
            v1769[1] = v2583;
            uint64_t v1771 = v1639[18];
            uint64_t v1772 = (void *)((char *)v1637 + v1771);
            uint64_t v1773 = (void *)((char *)v1638 + v1771);
            uint64_t v2565 = (void *)v1773[1];
            *uint64_t v1772 = *v1773;
            v1772[1] = v2565;
            uint64_t v1774 = v1639[19];
            uint64_t v1775 = (void *)((char *)v1637 + v1774);
            v1776 = (void *)((char *)v1638 + v1774);
            uint64_t v2555 = v1776[1];
            *uint64_t v1775 = *v1776;
            v1775[1] = v2555;
            uint64_t v1777 = v1639[20];
            uint64_t v1778 = (void *)((char *)v1637 + v1777);
            v1779 = (void *)((char *)v1638 + v1777);
            uint64_t v1780 = v1779[1];
            *uint64_t v1778 = *v1779;
            v1778[1] = v1780;
            *(void *)((char *)v1637 + v1639[21]) = *(void *)((char *)v1638 + v1639[21]);
            *(void *)((char *)v1637 + v1639[22]) = *(void *)((char *)v1638 + v1639[22]);
            uint64_t v1781 = v1639[23];
            uint64_t v1782 = (char *)v1637 + v1781;
            v1783 = (char *)v1638 + v1781;
            *(void *)uint64_t v1782 = *(void *)v1783;
            v1782[8] = v1783[8];
            uint64_t v1784 = v1639[24];
            uint64_t v1785 = (char *)v1637 + v1784;
            uint64_t v1786 = (char *)v1638 + v1784;
            *(void *)uint64_t v1785 = *(void *)v1786;
            v1785[8] = v1786[8];
            uint64_t v1787 = v1639[25];
            uint64_t v1788 = (void *)((char *)v1637 + v1787);
            uint64_t v1789 = (void *)((char *)v1638 + v1787);
            uint64_t v1790 = v1789[1];
            *uint64_t v1788 = *v1789;
            v1788[1] = v1790;
            uint64_t v1791 = v1639[26];
            uint64_t v1792 = (void *)((char *)v1637 + v1791);
            uint64_t v1793 = (void *)((char *)v1638 + v1791);
            uint64_t v1794 = v1793[1];
            *uint64_t v1792 = *v1793;
            v1792[1] = v1794;
            uint64_t v1795 = v1639[27];
            uint64_t v1796 = (void *)((char *)v1637 + v1795);
            uint64_t v1797 = (void *)((char *)v1638 + v1795);
            uint64_t v1798 = v1797[1];
            *uint64_t v1796 = *v1797;
            v1796[1] = v1798;
            uint64_t v1799 = v1639[28];
            uint64_t v1800 = (void *)((char *)v1637 + v1799);
            uint64_t v1801 = (void *)((char *)v1638 + v1799);
            uint64_t v1802 = v1801[1];
            *uint64_t v1800 = *v1801;
            v1800[1] = v1802;
            uint64_t v1803 = v1639[29];
            uint64_t v1804 = (char *)v1637 + v1803;
            uint64_t v1805 = (char *)v1638 + v1803;
            *(void *)uint64_t v1804 = *(void *)v1805;
            v1804[8] = v1805[8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1637, 0, 1, (uint64_t)v1639);
            uint64_t v13 = v2692;
            uint64_t v336 = v2670;
            uint64_t v342 = v2626;
            uint64_t v343 = v2586;
            uint64_t v344 = v2600;
          }
          uint64_t v1806 = v344[13];
          uint64_t v1807 = (void *)((char *)v342 + v1806);
          uint64_t v1808 = (void *)((char *)v343 + v1806);
          uint64_t v1809 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1808, 1, (uint64_t)v1809))
          {
            uint64_t v1810 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v1807, v1808, *(void *)(*(void *)(v1810 - 8) + 64));
          }
          else
          {
            uint64_t v1811 = v1808[1];
            *uint64_t v1807 = *v1808;
            v1807[1] = v1811;
            uint64_t v1812 = v1808[3];
            v1807[2] = v1808[2];
            v1807[3] = v1812;
            uint64_t v1813 = v1808[5];
            v1807[4] = v1808[4];
            v1807[5] = v1813;
            uint64_t v1814 = v1808[7];
            v1807[6] = v1808[6];
            v1807[7] = v1814;
            uint64_t v1815 = v1808[9];
            v1807[8] = v1808[8];
            v1807[9] = v1815;
            uint64_t v1816 = v1808[11];
            v1807[10] = v1808[10];
            v1807[11] = v1816;
            *((unsigned char *)v1807 + 96) = *((unsigned char *)v1808 + 96);
            uint64_t v1817 = v1808[14];
            v1807[13] = v1808[13];
            v1807[14] = v1817;
            uint64_t v1818 = v1808[16];
            v1807[15] = v1808[15];
            v1807[16] = v1818;
            uint64_t v1819 = v1809[14];
            v2597 = (char *)v1807 + v1819;
            uint64_t v1820 = (char *)v1808 + v1819;
            uint64_t v2548 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1820, 1, v2548))
            {
              uint64_t v1821 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2597, v1820, *(void *)(*(void *)(v1821 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2548 - 8) + 16))(v2597, v1820, v2548);
              __swift_storeEnumTagSinglePayload((uint64_t)v2597, 0, 1, v2548);
            }
            uint64_t v1938 = v1809[15];
            uint64_t v1939 = (void *)((char *)v1807 + v1938);
            uint64_t v1940 = (void *)((char *)v1808 + v1938);
            uint64_t v1941 = v1940[1];
            void *v1939 = *v1940;
            v1939[1] = v1941;
            uint64_t v1942 = v1809[16];
            uint64_t v1943 = (void *)((char *)v1807 + v1942);
            uint64_t v1944 = (void *)((char *)v1808 + v1942);
            uint64_t v1945 = v1944[1];
            void *v1943 = *v1944;
            v1943[1] = v1945;
            uint64_t v1946 = v1809[17];
            uint64_t v1947 = (void *)((char *)v1807 + v1946);
            uint64_t v1948 = (void *)((char *)v1808 + v1946);
            uint64_t v1949 = v1948[1];
            *uint64_t v1947 = *v1948;
            v1947[1] = v1949;
            uint64_t v1950 = v1809[18];
            uint64_t v1951 = (void *)((char *)v1807 + v1950);
            uint64_t v1952 = (void *)((char *)v1808 + v1950);
            uint64_t v1953 = v1952[1];
            *uint64_t v1951 = *v1952;
            v1951[1] = v1953;
            uint64_t v1954 = v1809[19];
            uint64_t v1955 = (void *)((char *)v1807 + v1954);
            uint64_t v1956 = (void *)((char *)v1808 + v1954);
            uint64_t v1957 = v1956[1];
            *uint64_t v1955 = *v1956;
            v1955[1] = v1957;
            *(void *)((char *)v1807 + v1809[20]) = *(void *)((char *)v1808 + v1809[20]);
            uint64_t v1958 = v1809[21];
            uint64_t v1959 = (void *)((char *)v1807 + v1958);
            uint64_t v1960 = (void *)((char *)v1808 + v1958);
            uint64_t v1961 = v1960[1];
            *uint64_t v1959 = *v1960;
            v1959[1] = v1961;
            uint64_t v1962 = v1809[22];
            uint64_t v1963 = (void *)((char *)v1807 + v1962);
            uint64_t v1964 = (void *)((char *)v1808 + v1962);
            uint64_t v1965 = v1964[1];
            *uint64_t v1963 = *v1964;
            v1963[1] = v1965;
            uint64_t v1966 = v1809[23];
            uint64_t v1967 = (void *)((char *)v1807 + v1966);
            uint64_t v1968 = (void *)((char *)v1808 + v1966);
            uint64_t v1969 = v1968[1];
            void *v1967 = *v1968;
            v1967[1] = v1969;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1807, 0, 1, (uint64_t)v1809);
            uint64_t v13 = v2692;
            uint64_t v336 = v2670;
            uint64_t v342 = v2626;
            uint64_t v344 = v2600;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v342, 0, 1, (uint64_t)v344);
          uint64_t v28 = v2691;
        }
        uint64_t v1970 = v336[22];
        uint64_t v1971 = (void *)((char *)v28 + v1970);
        uint64_t v1972 = (void *)((char *)v13 + v1970);
        uint64_t v1973 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1972, 1, (uint64_t)v1973))
        {
          uint64_t v1974 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v1971, v1972, *(void *)(*(void *)(v1974 - 8) + 64));
          uint64_t v1975 = v2691;
        }
        else
        {
          uint64_t v1976 = v1972[1];
          *uint64_t v1971 = *v1972;
          v1971[1] = v1976;
          uint64_t v1977 = v1972[3];
          v1971[2] = v1972[2];
          v1971[3] = v1977;
          uint64_t v1978 = v1972[5];
          v1971[4] = v1972[4];
          v1971[5] = v1978;
          uint64_t v1979 = v1972[7];
          v1971[6] = v1972[6];
          v1971[7] = v1979;
          uint64_t v1980 = v1972[9];
          v1971[8] = v1972[8];
          v1971[9] = v1980;
          uint64_t v1981 = v1972[11];
          v1971[10] = v1972[10];
          v1971[11] = v1981;
          uint64_t v1982 = v1973[10];
          uint64_t v1983 = (char *)v1971 + v1982;
          uint64_t v1984 = (char *)v1972 + v1982;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1984, 1, v2657))
          {
            uint64_t v1985 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1983, v1984, *(void *)(*(void *)(v1985 - 8) + 64));
          }
          else
          {
            v2647(v1983, v1984, v2657);
            __swift_storeEnumTagSinglePayload((uint64_t)v1983, 0, 1, v2657);
          }
          uint64_t v1986 = v1973[11];
          uint64_t v1987 = (char *)v1971 + v1986;
          uint64_t v1988 = (char *)v1972 + v1986;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1972 + v1986, 1, v2657))
          {
            uint64_t v1989 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1987, v1988, *(void *)(*(void *)(v1989 - 8) + 64));
          }
          else
          {
            v2647(v1987, v1988, v2657);
            __swift_storeEnumTagSinglePayload((uint64_t)v1987, 0, 1, v2657);
          }
          uint64_t v1990 = v1973[12];
          uint64_t v1991 = (void *)((char *)v1971 + v1990);
          uint64_t v1992 = (void *)((char *)v1972 + v1990);
          uint64_t v1993 = v1992[1];
          void *v1991 = *v1992;
          v1991[1] = v1993;
          uint64_t v1994 = v1973[13];
          uint64_t v1995 = (void *)((char *)v1971 + v1994);
          uint64_t v1996 = (void *)((char *)v1972 + v1994);
          uint64_t v1997 = v1996[1];
          *uint64_t v1995 = *v1996;
          v1995[1] = v1997;
          uint64_t v1998 = v1973[14];
          uint64_t v1999 = (void *)((char *)v1971 + v1998);
          uint64_t v2000 = (void *)((char *)v1972 + v1998);
          uint64_t v2001 = v2000[1];
          *uint64_t v1999 = *v2000;
          v1999[1] = v2001;
          uint64_t v2002 = v1973[15];
          uint64_t v2003 = (char *)v1971 + v2002;
          uint64_t v2004 = (char *)v1972 + v2002;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2004, 1, v2657))
          {
            uint64_t v2005 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2003, v2004, *(void *)(*(void *)(v2005 - 8) + 64));
          }
          else
          {
            v2647(v2003, v2004, v2657);
            __swift_storeEnumTagSinglePayload((uint64_t)v2003, 0, 1, v2657);
          }
          uint64_t v2006 = v1973[16];
          uint64_t v2007 = (void *)((char *)v1971 + v2006);
          uint64_t v2008 = (void *)((char *)v1972 + v2006);
          uint64_t v2009 = v2008[1];
          *uint64_t v2007 = *v2008;
          v2007[1] = v2009;
          uint64_t v2010 = v1973[17];
          uint64_t v2011 = (void *)((char *)v1971 + v2010);
          uint64_t v2012 = (void *)((char *)v1972 + v2010);
          uint64_t v2013 = v2012[1];
          *uint64_t v2011 = *v2012;
          v2011[1] = v2013;
          uint64_t v2014 = v1973[18];
          uint64_t v2015 = (void *)((char *)v1971 + v2014);
          uint64_t v2016 = (void *)((char *)v1972 + v2014);
          uint64_t v2017 = v2016[1];
          *uint64_t v2015 = *v2016;
          v2015[1] = v2017;
          uint64_t v2018 = v1973[19];
          uint64_t v2019 = (void *)((char *)v1971 + v2018);
          uint64_t v2020 = (void *)((char *)v1972 + v2018);
          uint64_t v2021 = v2020[1];
          *uint64_t v2019 = *v2020;
          v2019[1] = v2021;
          uint64_t v2022 = v1973[20];
          uint64_t v2023 = (void *)((char *)v1971 + v2022);
          uint64_t v2024 = (void *)((char *)v1972 + v2022);
          uint64_t v2025 = v2024[1];
          *uint64_t v2023 = *v2024;
          v2023[1] = v2025;
          uint64_t v2026 = v1973[21];
          uint64_t v2027 = (void *)((char *)v1971 + v2026);
          uint64_t v2028 = (void *)((char *)v1972 + v2026);
          uint64_t v2029 = v2028[1];
          *uint64_t v2027 = *v2028;
          v2027[1] = v2029;
          uint64_t v2030 = v1973[22];
          uint64_t v2031 = (void *)((char *)v1971 + v2030);
          uint64_t v2032 = (void *)((char *)v1972 + v2030);
          uint64_t v2033 = v2032[1];
          *uint64_t v2031 = *v2032;
          v2031[1] = v2033;
          uint64_t v2034 = v1973[23];
          uint64_t v2035 = (void *)((char *)v1971 + v2034);
          uint64_t v2036 = (void *)((char *)v1972 + v2034);
          uint64_t v2037 = v2036[1];
          *uint64_t v2035 = *v2036;
          v2035[1] = v2037;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v1971, 0, 1, (uint64_t)v1973);
          uint64_t v1975 = v2691;
          uint64_t v13 = v2692;
          uint64_t v336 = v2670;
        }
        uint64_t v2038 = v336[23];
        uint64_t v2039 = (void *)((char *)v1975 + v2038);
        uint64_t v2040 = (void *)((char *)v13 + v2038);
        uint64_t v2041 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2040, 1, (uint64_t)v2041))
        {
          uint64_t v2042 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v2039, v2040, *(void *)(*(void *)(v2042 - 8) + 64));
          uint64_t v2043 = v2691;
        }
        else
        {
          uint64_t v2044 = v2040[1];
          *uint64_t v2039 = *v2040;
          v2039[1] = v2044;
          uint64_t v2045 = v2040[3];
          v2039[2] = v2040[2];
          v2039[3] = v2045;
          uint64_t v2046 = v2040[5];
          v2039[4] = v2040[4];
          v2039[5] = v2046;
          uint64_t v2047 = v2040[7];
          v2039[6] = v2040[6];
          v2039[7] = v2047;
          uint64_t v2048 = v2040[9];
          v2039[8] = v2040[8];
          v2039[9] = v2048;
          uint64_t v2049 = v2040[11];
          v2039[10] = v2040[10];
          v2039[11] = v2049;
          uint64_t v2050 = v2041[11];
          uint64_t v2636 = (char *)v2039 + v2050;
          uint64_t v2051 = (char *)v2040 + v2050;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2051, 1, v2657))
          {
            uint64_t v2052 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2636, v2051, *(void *)(*(void *)(v2052 - 8) + 64));
          }
          else
          {
            v2647(v2636, v2051, v2657);
            __swift_storeEnumTagSinglePayload((uint64_t)v2636, 0, 1, v2657);
          }
          uint64_t v2053 = v2041[12];
          uint64_t v2054 = (void *)((char *)v2039 + v2053);
          uint64_t v2055 = (void *)((char *)v2040 + v2053);
          uint64_t v2056 = v2055[1];
          void *v2054 = *v2055;
          v2054[1] = v2056;
          *(void *)((char *)v2039 + v2041[13]) = *(void *)((char *)v2040 + v2041[13]);
          uint64_t v2057 = v2041[14];
          v2058 = (char *)v2039 + v2057;
          uint64_t v2059 = (char *)v2040 + v2057;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v13 = v2692;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2059, 1, v2657))
          {
            uint64_t v2060 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2058, v2059, *(void *)(*(void *)(v2060 - 8) + 64));
          }
          else
          {
            v2647(v2058, v2059, v2657);
            __swift_storeEnumTagSinglePayload((uint64_t)v2058, 0, 1, v2657);
          }
          *(void *)((char *)v2039 + v2041[15]) = *(void *)((char *)v2040 + v2041[15]);
          *(void *)((char *)v2039 + v2041[16]) = *(void *)((char *)v2040 + v2041[16]);
          uint64_t v2061 = v2041[17];
          uint64_t v2062 = (void *)((char *)v2039 + v2061);
          uint64_t v2063 = (void *)((char *)v2040 + v2061);
          uint64_t v2064 = v2063[1];
          *uint64_t v2062 = *v2063;
          v2062[1] = v2064;
          *(void *)((char *)v2039 + v2041[18]) = *(void *)((char *)v2040 + v2041[18]);
          *(void *)((char *)v2039 + v2041[19]) = *(void *)((char *)v2040 + v2041[19]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2039, 0, 1, (uint64_t)v2041);
          uint64_t v2043 = v2691;
          uint64_t v336 = v2670;
        }
        uint64_t v2065 = v336[24];
        uint64_t v2066 = (void *)((char *)v2043 + v2065);
        uint64_t v2067 = (void *)((char *)v13 + v2065);
        uint64_t v2068 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2067, 1, (uint64_t)v2068))
        {
          uint64_t v2069 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v2066, v2067, *(void *)(*(void *)(v2069 - 8) + 64));
          uint64_t v18 = (uint64_t)v2691;
        }
        else
        {
          uint64_t v2070 = v2067[1];
          *uint64_t v2066 = *v2067;
          v2066[1] = v2070;
          uint64_t v2071 = v2067[3];
          v2066[2] = v2067[2];
          v2066[3] = v2071;
          uint64_t v2072 = v2067[5];
          v2066[4] = v2067[4];
          v2066[5] = v2072;
          uint64_t v2073 = v2067[7];
          v2066[6] = v2067[6];
          v2066[7] = v2073;
          uint64_t v2074 = v2068[8];
          uint64_t v2075 = (char *)v2066 + v2074;
          uint64_t v2076 = (char *)v2067 + v2074;
          uint64_t v2077 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2076, 1, v2077))
          {
            uint64_t v2078 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2075, v2076, *(void *)(*(void *)(v2078 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2077 - 8) + 16))(v2075, v2076, v2077);
            __swift_storeEnumTagSinglePayload((uint64_t)v2075, 0, 1, v2077);
          }
          uint64_t v2079 = v2068[9];
          uint64_t v2080 = (void *)((char *)v2066 + v2079);
          uint64_t v2081 = (void *)((char *)v2067 + v2079);
          uint64_t v2082 = v2081[1];
          *uint64_t v2080 = *v2081;
          v2080[1] = v2082;
          uint64_t v2083 = v2068[10];
          uint64_t v2084 = (void *)((char *)v2066 + v2083);
          uint64_t v2085 = (void *)((char *)v2067 + v2083);
          uint64_t v2086 = v2085[1];
          *uint64_t v2084 = *v2085;
          v2084[1] = v2086;
          uint64_t v2087 = v2068[11];
          uint64_t v2088 = (void *)((char *)v2066 + v2087);
          uint64_t v2089 = (void *)((char *)v2067 + v2087);
          uint64_t v2090 = v2089[1];
          *uint64_t v2088 = *v2089;
          v2088[1] = v2090;
          uint64_t v2091 = v2068[12];
          uint64_t v2092 = (char *)v2066 + v2091;
          uint64_t v2093 = (char *)v2067 + v2091;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v13 = v2692;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2093, 1, v2657))
          {
            uint64_t v2094 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2092, v2093, *(void *)(*(void *)(v2094 - 8) + 64));
          }
          else
          {
            v2647(v2092, v2093, v2657);
            __swift_storeEnumTagSinglePayload((uint64_t)v2092, 0, 1, v2657);
          }
          uint64_t v2095 = v2068[13];
          uint64_t v2096 = (char *)v2066 + v2095;
          uint64_t v2097 = (char *)v2067 + v2095;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2067 + v2095, 1, v2657))
          {
            uint64_t v2098 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2096, v2097, *(void *)(*(void *)(v2098 - 8) + 64));
          }
          else
          {
            v2647(v2096, v2097, v2657);
            __swift_storeEnumTagSinglePayload((uint64_t)v2096, 0, 1, v2657);
          }
          uint64_t v2099 = v2068[14];
          uint64_t v2100 = (char *)v2066 + v2099;
          uint64_t v2101 = (char *)v2067 + v2099;
          *(void *)uint64_t v2100 = *(void *)v2101;
          v2100[8] = v2101[8];
          uint64_t v2102 = v2068[15];
          v2103 = (void *)((char *)v2066 + v2102);
          uint64_t v2104 = (void *)((char *)v2067 + v2102);
          uint64_t v2105 = v2104[1];
          void *v2103 = *v2104;
          v2103[1] = v2105;
          uint64_t v2106 = v2068[16];
          v2107 = (void *)((char *)v2066 + v2106);
          uint64_t v2108 = (void *)((char *)v2067 + v2106);
          uint64_t v2109 = v2108[1];
          void *v2107 = *v2108;
          v2107[1] = v2109;
          uint64_t v2110 = v2068[17];
          v2111 = (void *)((char *)v2066 + v2110);
          uint64_t v2112 = (void *)((char *)v2067 + v2110);
          uint64_t v2113 = v2112[1];
          void *v2111 = *v2112;
          v2111[1] = v2113;
          uint64_t v2114 = v2068[18];
          v2115 = (void *)((char *)v2066 + v2114);
          uint64_t v2116 = (void *)((char *)v2067 + v2114);
          uint64_t v2117 = v2116[1];
          void *v2115 = *v2116;
          v2115[1] = v2117;
          uint64_t v2118 = v2068[19];
          v2119 = (void *)((char *)v2066 + v2118);
          uint64_t v2120 = (void *)((char *)v2067 + v2118);
          uint64_t v2121 = v2120[1];
          void *v2119 = *v2120;
          v2119[1] = v2121;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2066, 0, 1, (uint64_t)v2068);
          uint64_t v18 = (uint64_t)v2691;
          uint64_t v336 = v2670;
        }
        uint64_t v2122 = v336[25];
LABEL_541:
        uint64_t v2488 = (void *)(v18 + v2122);
        uint64_t v2489 = (void *)((char *)v13 + v2122);
        uint64_t v2490 = *(void *)((char *)v13 + v2122 + 8);
        if (v2490)
        {
          void *v2488 = *v2489;
          v2488[1] = v2490;
          uint64_t v2491 = v2489[3];
          v2488[2] = v2489[2];
          v2488[3] = v2491;
          uint64_t v2492 = v2489[5];
          v2488[4] = v2489[4];
          v2488[5] = v2492;
          uint64_t v2493 = v2489[7];
          v2488[6] = v2489[6];
          v2488[7] = v2493;
          uint64_t v2494 = v2489[9];
          v2488[8] = v2489[8];
          v2488[9] = v2494;
          uint64_t v2495 = v2489[11];
          v2488[10] = v2489[10];
          v2488[11] = v2495;
          uint64_t v2496 = v2489[13];
          v2488[12] = v2489[12];
          v2488[13] = v2496;
          uint64_t v2497 = v2489[15];
          v2488[14] = v2489[14];
          v2488[15] = v2497;
          uint64_t v2681 = v2489[17];
          v2488[16] = v2489[16];
          v2488[17] = v2681;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v18 = (uint64_t)v2691;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v13 = v2692;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_543:
          swift_bridgeObjectRetain();
        }
        else
        {
          memcpy(v2488, v2489, 0x90uLL);
        }
        uint64_t v16 = a1;
LABEL_546:
        uint64_t v15 = a2;
LABEL_547:
        uint64_t v17 = a3;
LABEL_548:
        uint64_t v12 = v2682;
        break;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v2498 = *(int *)(v12 + 20);
    uint64_t v2499 = *(void **)((char *)v13 + v2498);
    *(void *)(v18 + v2498) = v2499;
    uint64_t v2500 = *(int *)(v12 + 24);
    uint64_t v2501 = (void *)(v18 + v2500);
    uint64_t v2502 = (void *)((char *)v13 + v2500);
    uint64_t v2503 = v2502[1];
    *uint64_t v2501 = *v2502;
    v2501[1] = v2503;
    id v2504 = v2499;
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload(v18, 0, 1, v12);
  }
  uint64_t v2505 = *(int *)(v17 + 88);
  uint64_t v2506 = *(int *)(v17 + 92);
  id v2507 = (void *)((char *)v16 + v2505);
  uint64_t v2508 = (void *)((char *)v15 + v2505);
  uint64_t v2509 = v2508[1];
  void *v2507 = *v2508;
  v2507[1] = v2509;
  *(void *)((char *)v16 + v2506) = *(void *)((char *)v15 + v2506);
  swift_bridgeObjectRetain();
  swift_retain();
  return v16;
}

#error "2580E72C4: too big function (funcsize=0)"

uint64_t initializeWithTake for SearchEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  long long v9 = *(_OWORD *)(a2 + 96);
  long long v10 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v11 = *(int *)(a3 + 84);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  uint64_t v14 = type metadata accessor for SearchResult(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        long long v17 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v17;
        long long v18 = v13[3];
        v12[2] = v13[2];
        v12[3] = v18;
        long long v19 = v13[5];
        v12[4] = v13[4];
        v12[5] = v19;
        uint64_t v20 = (int *)type metadata accessor for EmailDocument(0);
        uint64_t v21 = v20[12];
        uint64_t v22 = (char *)v12 + v21;
        uint64_t v23 = (char *)v13 + v21;
        uint64_t v24 = type metadata accessor for Date();
        uint64_t v1151 = *(void (**)(char *, char *))(*(void *)(v24 - 8) + 32);
        uint64_t v1154 = v24;
        v1151(v22, v23);
        *(void *)((char *)v12 + v20[13]) = *(void *)((char *)v13 + v20[13]);
        *(void *)((char *)v12 + v20[14]) = *(void *)((char *)v13 + v20[14]);
        *(void *)((char *)v12 + v20[15]) = *(void *)((char *)v13 + v20[15]);
        *((unsigned char *)v12 + v20[16]) = *((unsigned char *)v13 + v20[16]);
        *((unsigned char *)v12 + v20[17]) = *((unsigned char *)v13 + v20[17]);
        *(_OWORD *)((char *)v12 + v20[18]) = *(_OWORD *)((char *)v13 + v20[18]);
        uint64_t v25 = v20[19];
        uint64_t v26 = (char *)v12 + v25;
        uint64_t v27 = (char *)v13 + v25;
        long long v28 = *((_OWORD *)v27 + 1);
        *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v28;
        *((void *)v26 + 4) = *((void *)v27 + 4);
        *(_OWORD *)((char *)v12 + v20[20]) = *(_OWORD *)((char *)v13 + v20[20]);
        uint64_t v1187 = v20;
        uint64_t v29 = v20[21];
        uint64_t v30 = (_OWORD *)((char *)v12 + v29);
        uint64_t v31 = (_OWORD *)((char *)v13 + v29);
        uint64_t v32 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        uint64_t v1190 = v14;
        if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, (uint64_t)v32))
        {
          uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          *uint64_t v30 = *v31;
          uint64_t v244 = v32[5];
          uint64_t v245 = (char *)v31;
          uint64_t v246 = (_OWORD *)((char *)v30 + v244);
          uint64_t v1157 = v245;
          uint64_t v247 = &v245[v244];
          uint64_t v248 = type metadata accessor for RentalCarReservation(0);
          __src = v30;
          uint64_t v1133 = v32;
          if (__swift_getEnumTagSinglePayload((uint64_t)v247, 1, v248))
          {
            uint64_t v249 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v246, v247, *(void *)(*(void *)(v249 - 8) + 64));
          }
          else
          {
            long long v371 = *((_OWORD *)v247 + 1);
            *uint64_t v246 = *(_OWORD *)v247;
            v246[1] = v371;
            long long v372 = *((_OWORD *)v247 + 3);
            v246[2] = *((_OWORD *)v247 + 2);
            v246[3] = v372;
            long long v373 = *((_OWORD *)v247 + 5);
            v246[4] = *((_OWORD *)v247 + 4);
            v246[5] = v373;
            long long v374 = *((_OWORD *)v247 + 7);
            v246[6] = *((_OWORD *)v247 + 6);
            v246[7] = v374;
            *((unsigned char *)v246 + 128) = v247[128];
            *(_WORD *)((char *)v246 + 129) = *(_WORD *)(v247 + 129);
            *((void *)v246 + 17) = *((void *)v247 + 17);
            long long v375 = *((_OWORD *)v247 + 10);
            v246[9] = *((_OWORD *)v247 + 9);
            v246[10] = v375;
            long long v376 = *((_OWORD *)v247 + 12);
            v246[11] = *((_OWORD *)v247 + 11);
            v246[12] = v376;
            long long v377 = *((_OWORD *)v247 + 14);
            v246[13] = *((_OWORD *)v247 + 13);
            v246[14] = v377;
            v246[15] = *((_OWORD *)v247 + 15);
            *((void *)v246 + 32) = *((void *)v247 + 32);
            *(_OWORD *)((char *)v246 + 264) = *(_OWORD *)(v247 + 264);
            *(_OWORD *)((char *)v246 + 280) = *(_OWORD *)(v247 + 280);
            *(_OWORD *)((char *)v246 + 296) = *(_OWORD *)(v247 + 296);
            *(_OWORD *)((char *)v246 + 312) = *(_OWORD *)(v247 + 312);
            *(_OWORD *)((char *)v246 + 328) = *(_OWORD *)(v247 + 328);
            *(_OWORD *)((char *)v246 + 344) = *(_OWORD *)(v247 + 344);
            *(_OWORD *)((char *)v246 + 360) = *(_OWORD *)(v247 + 360);
            *((unsigned char *)v246 + 384) = v247[384];
            *((void *)v246 + 47) = *((void *)v247 + 47);
            *(_OWORD *)((char *)v246 + 392) = *(_OWORD *)(v247 + 392);
            *(_OWORD *)((char *)v246 + 408) = *(_OWORD *)(v247 + 408);
            uint64_t v378 = *(int *)(v248 + 140);
            uint64_t v379 = (char *)v246 + v378;
            uint64_t v380 = &v247[v378];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v247[v378], 1, v1154))
            {
              uint64_t v381 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v379, v380, *(void *)(*(void *)(v381 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1151)(v379, v380, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v379, 0, 1, v1154);
            }
            uint64_t v404 = *(int *)(v248 + 144);
            uint64_t v405 = (char *)v246 + v404;
            uint64_t v406 = &v247[v404];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v247[v404], 1, v1154))
            {
              uint64_t v407 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v405, v406, *(void *)(*(void *)(v407 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1151)(v405, v406, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v405, 0, 1, v1154);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v246, 0, 1, v248);
            uint64_t v30 = __src;
            uint64_t v32 = v1133;
          }
          uint64_t v417 = v32[6];
          uint64_t v418 = (_OWORD *)((char *)v30 + v417);
          uint64_t v419 = &v1157[v417];
          uint64_t v420 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v419, 1, v420))
          {
            uint64_t v421 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v418, v419, *(void *)(*(void *)(v421 - 8) + 64));
          }
          else
          {
            long long v422 = *((_OWORD *)v419 + 1);
            _OWORD *v418 = *(_OWORD *)v419;
            v418[1] = v422;
            long long v423 = *((_OWORD *)v419 + 3);
            v418[2] = *((_OWORD *)v419 + 2);
            v418[3] = v423;
            long long v424 = *((_OWORD *)v419 + 5);
            v418[4] = *((_OWORD *)v419 + 4);
            v418[5] = v424;
            long long v425 = *((_OWORD *)v419 + 7);
            v418[6] = *((_OWORD *)v419 + 6);
            v418[7] = v425;
            *((unsigned char *)v418 + 128) = v419[128];
            *(_WORD *)((char *)v418 + 129) = *(_WORD *)(v419 + 129);
            *((void *)v418 + 17) = *((void *)v419 + 17);
            long long v426 = *((_OWORD *)v419 + 10);
            v418[9] = *((_OWORD *)v419 + 9);
            v418[10] = v426;
            long long v427 = *((_OWORD *)v419 + 12);
            v418[11] = *((_OWORD *)v419 + 11);
            v418[12] = v427;
            *((void *)v418 + 26) = *((void *)v419 + 26);
            *(_OWORD *)((char *)v418 + 216) = *(_OWORD *)(v419 + 216);
            *(_OWORD *)((char *)v418 + 232) = *(_OWORD *)(v419 + 232);
            *(_OWORD *)((char *)v418 + 248) = *(_OWORD *)(v419 + 248);
            *(_OWORD *)((char *)v418 + 264) = *(_OWORD *)(v419 + 264);
            *((unsigned char *)v418 + 296) = v419[296];
            uint64_t v428 = *((void *)v419 + 36);
            *((void *)v418 + 35) = *((void *)v419 + 35);
            *((void *)v418 + 36) = v428;
            uint64_t v429 = *(int *)(v420 + 112);
            __dst = (char *)v418 + v429;
            uint64_t v430 = &v419[v429];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v419[v429], 1, v1154))
            {
              uint64_t v431 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(__dst, v430, *(void *)(*(void *)(v431 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1151)(__dst, v430, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v1154);
            }
            uint64_t v463 = *(int *)(v420 + 116);
            __dsta = (char *)v418 + v463;
            uint64_t v464 = &v419[v463];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v419[v463], 1, v1154))
            {
              uint64_t v465 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(__dsta, v464, *(void *)(*(void *)(v465 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1151)(__dsta, v464, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v1154);
            }
            uint64_t v32 = v1133;
            __swift_storeEnumTagSinglePayload((uint64_t)v418, 0, 1, v420);
            uint64_t v30 = __src;
          }
          uint64_t v474 = v32[7];
          uint64_t v475 = (_OWORD *)((char *)v30 + v474);
          uint64_t v476 = &v1157[v474];
          uint64_t v477 = type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v476, 1, v477))
          {
            uint64_t v478 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v475, v476, *(void *)(*(void *)(v478 - 8) + 64));
          }
          else
          {
            long long v479 = *((_OWORD *)v476 + 1);
            _OWORD *v475 = *(_OWORD *)v476;
            v475[1] = v479;
            long long v480 = *((_OWORD *)v476 + 3);
            v475[2] = *((_OWORD *)v476 + 2);
            v475[3] = v480;
            long long v481 = *((_OWORD *)v476 + 5);
            v475[4] = *((_OWORD *)v476 + 4);
            v475[5] = v481;
            long long v482 = *((_OWORD *)v476 + 7);
            v475[6] = *((_OWORD *)v476 + 6);
            v475[7] = v482;
            *((unsigned char *)v475 + 128) = v476[128];
            *(_WORD *)((char *)v475 + 129) = *(_WORD *)(v476 + 129);
            *((void *)v475 + 17) = *((void *)v476 + 17);
            long long v483 = *((_OWORD *)v476 + 10);
            v475[9] = *((_OWORD *)v476 + 9);
            v475[10] = v483;
            long long v484 = *((_OWORD *)v476 + 12);
            v475[11] = *((_OWORD *)v476 + 11);
            v475[12] = v484;
            long long v485 = *((_OWORD *)v476 + 14);
            v475[13] = *((_OWORD *)v476 + 13);
            v475[14] = v485;
            *((void *)v475 + 30) = *((void *)v476 + 30);
            *(_OWORD *)((char *)v475 + 248) = *(_OWORD *)(v476 + 248);
            *(_OWORD *)((char *)v475 + 264) = *(_OWORD *)(v476 + 264);
            *((unsigned char *)v475 + 296) = v476[296];
            uint64_t v486 = *((void *)v476 + 36);
            *((void *)v475 + 35) = *((void *)v476 + 35);
            *((void *)v475 + 36) = v486;
            v475[19] = *((_OWORD *)v476 + 19);
            __dstb = (int *)v477;
            uint64_t v487 = *(int *)(v477 + 116);
            uint64_t v488 = (char *)v475 + v487;
            long long v489 = &v476[v487];
            uint64_t v490 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v489, 1, v490))
            {
              uint64_t v491 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v488, v489, *(void *)(*(void *)(v491 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v490 - 8) + 32))(v488, v489, v490);
              __swift_storeEnumTagSinglePayload((uint64_t)v488, 0, 1, v490);
            }
            *(_OWORD *)((char *)v475 + __dstb[30]) = *(_OWORD *)&v476[__dstb[30]];
            uint64_t v526 = __dstb[31];
            uint64_t v527 = (char *)v475 + v526;
            uint64_t v528 = &v476[v526];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v476[v526], 1, v1154))
            {
              uint64_t v529 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v527, v528, *(void *)(*(void *)(v529 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1151)(v527, v528, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v527, 0, 1, v1154);
            }
            uint64_t v537 = __dstb[32];
            uint64_t v538 = (char *)v475 + v537;
            uint64_t v539 = &v476[v537];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v476[v537], 1, v1154))
            {
              uint64_t v540 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v538, v539, *(void *)(*(void *)(v540 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1151)(v538, v539, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v538, 0, 1, v1154);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v475, 0, 1, (uint64_t)__dstb);
            uint64_t v30 = __src;
            uint64_t v32 = v1133;
          }
          uint64_t v549 = v32[8];
          uint64_t v550 = (_OWORD *)((char *)v30 + v549);
          uint64_t v551 = &v1157[v549];
          uint64_t v552 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v551, 1, v552))
          {
            uint64_t v553 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v550, v551, *(void *)(*(void *)(v553 - 8) + 64));
          }
          else
          {
            long long v554 = *((_OWORD *)v551 + 1);
            *uint64_t v550 = *(_OWORD *)v551;
            v550[1] = v554;
            long long v555 = *((_OWORD *)v551 + 3);
            v550[2] = *((_OWORD *)v551 + 2);
            v550[3] = v555;
            long long v556 = *((_OWORD *)v551 + 5);
            v550[4] = *((_OWORD *)v551 + 4);
            v550[5] = v556;
            long long v557 = *((_OWORD *)v551 + 7);
            v550[6] = *((_OWORD *)v551 + 6);
            v550[7] = v557;
            *((unsigned char *)v550 + 128) = v551[128];
            *(_WORD *)((char *)v550 + 129) = *(_WORD *)(v551 + 129);
            *((void *)v550 + 17) = *((void *)v551 + 17);
            long long v558 = *((_OWORD *)v551 + 10);
            v550[9] = *((_OWORD *)v551 + 9);
            v550[10] = v558;
            long long v559 = *((_OWORD *)v551 + 12);
            v550[11] = *((_OWORD *)v551 + 11);
            v550[12] = v559;
            long long v560 = *((_OWORD *)v551 + 14);
            v550[13] = *((_OWORD *)v551 + 13);
            v550[14] = v560;
            long long v561 = *((_OWORD *)v551 + 16);
            v550[15] = *((_OWORD *)v551 + 15);
            v550[16] = v561;
            *((unsigned char *)v550 + 280) = v551[280];
            *((void *)v550 + 34) = *((void *)v551 + 34);
            v550[18] = *((_OWORD *)v551 + 18);
            uint64_t v562 = *(int *)(v552 + 108);
            __dstc = (char *)v550 + v562;
            uint64_t v563 = &v551[v562];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v551[v562], 1, v1154))
            {
              uint64_t v564 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(__dstc, v563, *(void *)(*(void *)(v564 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1151)(__dstc, v563, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v1154);
            }
            uint64_t v598 = *(int *)(v552 + 112);
            __dstd = (char *)v550 + v598;
            uint64_t v599 = &v551[v598];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v551[v598], 1, v1154))
            {
              uint64_t v600 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(__dstd, v599, *(void *)(*(void *)(v600 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1151)(__dstd, v599, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstd, 0, 1, v1154);
            }
            uint64_t v32 = v1133;
            __swift_storeEnumTagSinglePayload((uint64_t)v550, 0, 1, v552);
            uint64_t v30 = __src;
          }
          uint64_t v609 = v32[9];
          uint64_t v610 = (_OWORD *)((char *)v30 + v609);
          uint64_t v611 = &v1157[v609];
          uint64_t v612 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v611, 1, (uint64_t)v612))
          {
            uint64_t v613 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v610, v611, *(void *)(*(void *)(v613 - 8) + 64));
          }
          else
          {
            long long v614 = *((_OWORD *)v611 + 1);
            *uint64_t v610 = *(_OWORD *)v611;
            v610[1] = v614;
            long long v615 = *((_OWORD *)v611 + 3);
            v610[2] = *((_OWORD *)v611 + 2);
            v610[3] = v615;
            long long v616 = *((_OWORD *)v611 + 5);
            v610[4] = *((_OWORD *)v611 + 4);
            v610[5] = v616;
            long long v617 = *((_OWORD *)v611 + 7);
            v610[6] = *((_OWORD *)v611 + 6);
            v610[7] = v617;
            *((unsigned char *)v610 + 128) = v611[128];
            *(_WORD *)((char *)v610 + 129) = *(_WORD *)(v611 + 129);
            *((void *)v610 + 17) = *((void *)v611 + 17);
            long long v618 = *((_OWORD *)v611 + 10);
            v610[9] = *((_OWORD *)v611 + 9);
            v610[10] = v618;
            long long v619 = *((_OWORD *)v611 + 12);
            v610[11] = *((_OWORD *)v611 + 11);
            v610[12] = v619;
            long long v620 = *((_OWORD *)v611 + 14);
            v610[13] = *((_OWORD *)v611 + 13);
            v610[14] = v620;
            v610[15] = *((_OWORD *)v611 + 15);
            uint64_t v621 = v612[24];
            uint64_t v622 = (char *)v610 + v621;
            uint64_t v623 = &v611[v621];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v611[v621], 1, v1154))
            {
              uint64_t v624 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v622, v623, *(void *)(*(void *)(v624 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1151)(v622, v623, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v622, 0, 1, v1154);
            }
            uint64_t v656 = v612[25];
            uint64_t v657 = (char *)v610 + v656;
            uint64_t v658 = &v611[v656];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v611[v656], 1, v1154))
            {
              uint64_t v659 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v657, v658, *(void *)(*(void *)(v659 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1151)(v657, v658, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)v657, 0, 1, v1154);
            }
            uint64_t v667 = v612[26];
            uint64_t v1103 = (char *)v610 + v667;
            uint64_t v668 = &v611[v667];
            uint64_t v669 = type metadata accessor for URL();
            uint64_t v30 = __src;
            if (__swift_getEnumTagSinglePayload((uint64_t)v668, 1, v669))
            {
              uint64_t v670 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1103, v668, *(void *)(*(void *)(v670 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v669 - 8) + 32))(v1103, v668, v669);
              __swift_storeEnumTagSinglePayload((uint64_t)v1103, 0, 1, v669);
            }
            uint64_t v32 = v1133;
            __swift_storeEnumTagSinglePayload((uint64_t)v610, 0, 1, (uint64_t)v612);
          }
          uint64_t v680 = v32[10];
          uint64_t v681 = (_OWORD *)((char *)v30 + v680);
          uint64_t v682 = &v1157[v680];
          long long v683 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v682, 1, (uint64_t)v683))
          {
            uint64_t v684 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v681, v682, *(void *)(*(void *)(v684 - 8) + 64));
          }
          else
          {
            long long v685 = *((_OWORD *)v682 + 1);
            *uint64_t v681 = *(_OWORD *)v682;
            v681[1] = v685;
            long long v686 = *((_OWORD *)v682 + 3);
            v681[2] = *((_OWORD *)v682 + 2);
            v681[3] = v686;
            long long v687 = *((_OWORD *)v682 + 5);
            v681[4] = *((_OWORD *)v682 + 4);
            v681[5] = v687;
            long long v688 = *((_OWORD *)v682 + 7);
            v681[6] = *((_OWORD *)v682 + 6);
            v681[7] = v688;
            *((unsigned char *)v681 + 128) = v682[128];
            *(_WORD *)((char *)v681 + 129) = *(_WORD *)(v682 + 129);
            *((void *)v681 + 17) = *((void *)v682 + 17);
            long long v689 = *((_OWORD *)v682 + 10);
            v681[9] = *((_OWORD *)v682 + 9);
            v681[10] = v689;
            long long v690 = *((_OWORD *)v682 + 12);
            v681[11] = *((_OWORD *)v682 + 11);
            v681[12] = v690;
            v681[13] = *((_OWORD *)v682 + 13);
            uint64_t v691 = v683[22];
            __dste = (char *)v681 + v691;
            uint64_t v692 = &v682[v691];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v682[v691], 1, v1154))
            {
              uint64_t v693 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(__dste, v692, *(void *)(*(void *)(v693 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1151)(__dste, v692, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)__dste, 0, 1, v1154);
            }
            uint64_t v723 = v683[23];
            __dstf = (char *)v681 + v723;
            uint64_t v724 = &v682[v723];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v682[v723], 1, v1154))
            {
              uint64_t v725 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(__dstf, v724, *(void *)(*(void *)(v725 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1151)(__dstf, v724, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstf, 0, 1, v1154);
            }
            uint64_t v733 = v683[24];
            uint64_t v734 = (char *)v681 + v733;
            uint64_t v735 = &v682[v733];
            *(void *)uint64_t v734 = *(void *)v735;
            v734[8] = v735[8];
            uint64_t v736 = v683[25];
            __dstg = (char *)v681 + v736;
            uint64_t v737 = &v682[v736];
            uint64_t v738 = type metadata accessor for URL();
            uint64_t v30 = __src;
            if (__swift_getEnumTagSinglePayload((uint64_t)v737, 1, v738))
            {
              uint64_t v739 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(__dstg, v737, *(void *)(*(void *)(v739 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v738 - 8) + 32))(__dstg, v737, v738);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstg, 0, 1, v738);
            }
            uint64_t v32 = v1133;
            __swift_storeEnumTagSinglePayload((uint64_t)v681, 0, 1, (uint64_t)v683);
          }
          uint64_t v755 = v32[11];
          uint64_t v756 = (_OWORD *)((char *)v30 + v755);
          uint64_t v757 = &v1157[v755];
          uint64_t v758 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v757, 1, (uint64_t)v758))
          {
            uint64_t v759 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v756, v757, *(void *)(*(void *)(v759 - 8) + 64));
          }
          else
          {
            long long v760 = *((_OWORD *)v757 + 1);
            *uint64_t v756 = *(_OWORD *)v757;
            v756[1] = v760;
            long long v761 = *((_OWORD *)v757 + 3);
            v756[2] = *((_OWORD *)v757 + 2);
            v756[3] = v761;
            long long v762 = *((_OWORD *)v757 + 5);
            v756[4] = *((_OWORD *)v757 + 4);
            v756[5] = v762;
            *((unsigned char *)v756 + 96) = v757[96];
            *(_OWORD *)((char *)v756 + 104) = *(_OWORD *)(v757 + 104);
            uint64_t v763 = v758[13];
            uint64_t v1104 = (char *)v756 + v763;
            uint64_t v764 = &v757[v763];
            uint64_t v765 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v764, 1, v765))
            {
              uint64_t v766 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1104, v764, *(void *)(*(void *)(v766 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v765 - 8) + 32))(v1104, v764, v765);
              __swift_storeEnumTagSinglePayload((uint64_t)v1104, 0, 1, v765);
            }
            uint64_t v791 = v758[14];
            __dsth = (char *)v756 + v791;
            uint64_t v792 = &v757[v791];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v757[v791], 1, v765))
            {
              uint64_t v793 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(__dsth, v792, *(void *)(*(void *)(v793 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v765 - 8) + 32))(__dsth, v792, v765);
              __swift_storeEnumTagSinglePayload((uint64_t)__dsth, 0, 1, v765);
            }
            *(_OWORD *)((char *)v756 + v758[15]) = *(_OWORD *)&v757[v758[15]];
            *(_OWORD *)((char *)v756 + v758[16]) = *(_OWORD *)&v757[v758[16]];
            *(_OWORD *)((char *)v756 + v758[17]) = *(_OWORD *)&v757[v758[17]];
            uint64_t v801 = v758[18];
            uint64_t v1102 = &v757[v801];
            uint64_t v1105 = (char *)v756 + v801;
            uint64_t v802 = type metadata accessor for DateComponents();
            uint64_t v803 = *(void (**)(char *, char *, uint64_t))(*(void *)(v802 - 8) + 32);
            v803(v1105, v1102, v802);
            v803((char *)v756 + v758[19], &v757[v758[19]], v802);
            *(_OWORD *)((char *)v756 + v758[20]) = *(_OWORD *)&v757[v758[20]];
            *(_OWORD *)((char *)v756 + v758[21]) = *(_OWORD *)&v757[v758[21]];
            *(_OWORD *)((char *)v756 + v758[22]) = *(_OWORD *)&v757[v758[22]];
            *(_OWORD *)((char *)v756 + v758[23]) = *(_OWORD *)&v757[v758[23]];
            *(_OWORD *)((char *)v756 + v758[24]) = *(_OWORD *)&v757[v758[24]];
            *(_OWORD *)((char *)v756 + v758[25]) = *(_OWORD *)&v757[v758[25]];
            *(_OWORD *)((char *)v756 + v758[26]) = *(_OWORD *)&v757[v758[26]];
            *(_OWORD *)((char *)v756 + v758[27]) = *(_OWORD *)&v757[v758[27]];
            *(_OWORD *)((char *)v756 + v758[28]) = *(_OWORD *)&v757[v758[28]];
            *(_OWORD *)((char *)v756 + v758[29]) = *(_OWORD *)&v757[v758[29]];
            *(_OWORD *)((char *)v756 + v758[30]) = *(_OWORD *)&v757[v758[30]];
            *(_OWORD *)((char *)v756 + v758[31]) = *(_OWORD *)&v757[v758[31]];
            *(_OWORD *)((char *)v756 + v758[32]) = *(_OWORD *)&v757[v758[32]];
            *(void *)((char *)v756 + v758[33]) = *(void *)&v757[v758[33]];
            *(void *)((char *)v756 + v758[34]) = *(void *)&v757[v758[34]];
            *(_OWORD *)((char *)v756 + v758[35]) = *(_OWORD *)&v757[v758[35]];
            *(_OWORD *)((char *)v756 + v758[36]) = *(_OWORD *)&v757[v758[36]];
            *(_OWORD *)((char *)v756 + v758[37]) = *(_OWORD *)&v757[v758[37]];
            uint64_t v804 = v758[38];
            __dsti = (char *)v756 + v804;
            uint64_t v805 = &v757[v804];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v757[v804], 1, v1154))
            {
              uint64_t v806 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(__dsti, v805, *(void *)(*(void *)(v806 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1151)(__dsti, v805, v1154);
              __swift_storeEnumTagSinglePayload((uint64_t)__dsti, 0, 1, v1154);
            }
            uint64_t v32 = v1133;
            *(_OWORD *)((char *)v756 + v758[39]) = *(_OWORD *)&v757[v758[39]];
            *(_OWORD *)((char *)v756 + v758[40]) = *(_OWORD *)&v757[v758[40]];
            uint64_t v820 = v758[41];
            uint64_t v821 = (char *)v756 + v820;
            uint64_t v822 = &v757[v820];
            *(void *)uint64_t v821 = *(void *)v822;
            v821[8] = v822[8];
            *(_OWORD *)((char *)v756 + v758[42]) = *(_OWORD *)&v757[v758[42]];
            uint64_t v823 = v758[43];
            uint64_t v824 = (char *)v756 + v823;
            uint64_t v825 = &v757[v823];
            *(_OWORD *)uint64_t v824 = *(_OWORD *)v825;
            *(void *)(v824 + 13) = *(void *)(v825 + 13);
            *(_OWORD *)((char *)v756 + v758[44]) = *(_OWORD *)&v757[v758[44]];
            *(_OWORD *)((char *)v756 + v758[45]) = *(_OWORD *)&v757[v758[45]];
            *(_OWORD *)((char *)v756 + v758[46]) = *(_OWORD *)&v757[v758[46]];
            *(_OWORD *)((char *)v756 + v758[47]) = *(_OWORD *)&v757[v758[47]];
            __swift_storeEnumTagSinglePayload((uint64_t)v756, 0, 1, (uint64_t)v758);
            uint64_t v30 = __src;
          }
          uint64_t v826 = v32[12];
          uint64_t v827 = (_OWORD *)((char *)v30 + v826);
          uint64_t v828 = &v1157[v826];
          uint64_t v829 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v828, 1, (uint64_t)v829))
          {
            uint64_t v830 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v827, v828, *(void *)(*(void *)(v830 - 8) + 64));
          }
          else
          {
            long long v831 = *((_OWORD *)v828 + 1);
            *uint64_t v827 = *(_OWORD *)v828;
            v827[1] = v831;
            long long v832 = *((_OWORD *)v828 + 3);
            v827[2] = *((_OWORD *)v828 + 2);
            v827[3] = v832;
            long long v833 = *((_OWORD *)v828 + 5);
            v827[4] = *((_OWORD *)v828 + 4);
            v827[5] = v833;
            *((unsigned char *)v827 + 96) = v828[96];
            *(_OWORD *)((char *)v827 + 104) = *(_OWORD *)(v828 + 104);
            *(_OWORD *)((char *)v827 + 120) = *(_OWORD *)(v828 + 120);
            uint64_t v834 = v829[14];
            __srcb = (char *)v827 + v834;
            uint64_t v835 = &v828[v834];
            uint64_t v836 = type metadata accessor for DateComponents();
            __dstj = v835;
            uint64_t v837 = (uint64_t)v835;
            uint64_t v838 = v836;
            if (__swift_getEnumTagSinglePayload(v837, 1, v836))
            {
              uint64_t v839 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(__srcb, __dstj, *(void *)(*(void *)(v839 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, void *, uint64_t))(*(void *)(v838 - 8) + 32))(__srcb, __dstj, v838);
              __swift_storeEnumTagSinglePayload((uint64_t)__srcb, 0, 1, v838);
            }
            uint64_t v876 = v829[15];
            __dstl = &v828[v876];
            __srce = (char *)v827 + v876;
            if (__swift_getEnumTagSinglePayload((uint64_t)&v828[v876], 1, v838))
            {
              uint64_t v877 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(__srce, __dstl, *(void *)(*(void *)(v877 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v838 - 8) + 32))(__srce, __dstl, v838);
              __swift_storeEnumTagSinglePayload((uint64_t)__srce, 0, 1, v838);
            }
            *(_OWORD *)((char *)v827 + v829[16]) = *(_OWORD *)&v828[v829[16]];
            *(_OWORD *)((char *)v827 + v829[17]) = *(_OWORD *)&v828[v829[17]];
            *(_OWORD *)((char *)v827 + v829[18]) = *(_OWORD *)&v828[v829[18]];
            *(_OWORD *)((char *)v827 + v829[19]) = *(_OWORD *)&v828[v829[19]];
            *(_OWORD *)((char *)v827 + v829[20]) = *(_OWORD *)&v828[v829[20]];
            *(void *)((char *)v827 + v829[21]) = *(void *)&v828[v829[21]];
            *(void *)((char *)v827 + v829[22]) = *(void *)&v828[v829[22]];
            uint64_t v883 = v829[23];
            uint64_t v884 = (char *)v827 + v883;
            uint64_t v885 = &v828[v883];
            v884[8] = v885[8];
            *(void *)uint64_t v884 = *(void *)v885;
            uint64_t v886 = v829[24];
            uint64_t v887 = (char *)v827 + v886;
            uint64_t v888 = &v828[v886];
            v887[8] = v888[8];
            *(void *)uint64_t v887 = *(void *)v888;
            *(_OWORD *)((char *)v827 + v829[25]) = *(_OWORD *)&v828[v829[25]];
            *(_OWORD *)((char *)v827 + v829[26]) = *(_OWORD *)&v828[v829[26]];
            *(_OWORD *)((char *)v827 + v829[27]) = *(_OWORD *)&v828[v829[27]];
            *(_OWORD *)((char *)v827 + v829[28]) = *(_OWORD *)&v828[v829[28]];
            uint64_t v889 = v829[29];
            uint64_t v890 = (char *)v827 + v889;
            uint64_t v891 = &v828[v889];
            *(void *)uint64_t v890 = *(void *)v891;
            v890[8] = v891[8];
            __swift_storeEnumTagSinglePayload((uint64_t)v827, 0, 1, (uint64_t)v829);
            uint64_t v32 = v1133;
          }
          uint64_t v892 = v32[13];
          uint64_t v893 = (_OWORD *)((char *)v30 + v892);
          uint64_t v894 = &v1157[v892];
          uint64_t v895 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v894, 1, (uint64_t)v895))
          {
            uint64_t v896 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v893, v894, *(void *)(*(void *)(v896 - 8) + 64));
          }
          else
          {
            long long v897 = *((_OWORD *)v894 + 1);
            *uint64_t v893 = *(_OWORD *)v894;
            v893[1] = v897;
            long long v898 = *((_OWORD *)v894 + 3);
            v893[2] = *((_OWORD *)v894 + 2);
            v893[3] = v898;
            long long v899 = *((_OWORD *)v894 + 5);
            v893[4] = *((_OWORD *)v894 + 4);
            v893[5] = v899;
            *((unsigned char *)v893 + 96) = v894[96];
            *(_OWORD *)((char *)v893 + 104) = *(_OWORD *)(v894 + 104);
            *(_OWORD *)((char *)v893 + 120) = *(_OWORD *)(v894 + 120);
            uint64_t v900 = v895[14];
            uint64_t v1160 = (char *)v893 + v900;
            uint64_t v901 = &v894[v900];
            uint64_t v902 = type metadata accessor for DateComponents();
            __srcg = v901;
            uint64_t v903 = (uint64_t)v901;
            uint64_t v904 = v902;
            if (__swift_getEnumTagSinglePayload(v903, 1, v902))
            {
              uint64_t v905 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1160, __srcg, *(void *)(*(void *)(v905 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, void *, uint64_t))(*(void *)(v904 - 8) + 32))(v1160, __srcg, v904);
              __swift_storeEnumTagSinglePayload((uint64_t)v1160, 0, 1, v904);
            }
            *(_OWORD *)((char *)v893 + v895[15]) = *(_OWORD *)&v894[v895[15]];
            *(_OWORD *)((char *)v893 + v895[16]) = *(_OWORD *)&v894[v895[16]];
            *(_OWORD *)((char *)v893 + v895[17]) = *(_OWORD *)&v894[v895[17]];
            *(_OWORD *)((char *)v893 + v895[18]) = *(_OWORD *)&v894[v895[18]];
            *(_OWORD *)((char *)v893 + v895[19]) = *(_OWORD *)&v894[v895[19]];
            *(void *)((char *)v893 + v895[20]) = *(void *)&v894[v895[20]];
            *(_OWORD *)((char *)v893 + v895[21]) = *(_OWORD *)&v894[v895[21]];
            *(_OWORD *)((char *)v893 + v895[22]) = *(_OWORD *)&v894[v895[22]];
            *(_OWORD *)((char *)v893 + v895[23]) = *(_OWORD *)&v894[v895[23]];
            __swift_storeEnumTagSinglePayload((uint64_t)v893, 0, 1, (uint64_t)v895);
            uint64_t v32 = v1133;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, (uint64_t)v32);
        }
        uint64_t v948 = v1187[22];
        uint64_t v949 = (_OWORD *)((char *)v12 + v948);
        uint64_t v950 = (_OWORD *)((char *)v13 + v948);
        uint64_t v951 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v950, 1, (uint64_t)v951))
        {
          uint64_t v952 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v949, v950, *(void *)(*(void *)(v952 - 8) + 64));
        }
        else
        {
          long long v953 = v950[1];
          *uint64_t v949 = *v950;
          v949[1] = v953;
          long long v954 = v950[3];
          v949[2] = v950[2];
          v949[3] = v954;
          long long v955 = v950[5];
          v949[4] = v950[4];
          v949[5] = v955;
          uint64_t v956 = v951[10];
          uint64_t v1162 = (char *)v949 + v956;
          uint64_t v957 = (char *)v950 + v956;
          if (__swift_getEnumTagSinglePayload((uint64_t)v950 + v956, 1, v1154))
          {
            uint64_t v958 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1162, v957, *(void *)(*(void *)(v958 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v1151)(v1162, v957, v1154);
            __swift_storeEnumTagSinglePayload((uint64_t)v1162, 0, 1, v1154);
          }
          uint64_t v959 = v951[11];
          uint64_t v1163 = (char *)v949 + v959;
          uint64_t v960 = (char *)v950 + v959;
          if (__swift_getEnumTagSinglePayload((uint64_t)v950 + v959, 1, v1154))
          {
            uint64_t v961 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1163, v960, *(void *)(*(void *)(v961 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v1151)(v1163, v960, v1154);
            __swift_storeEnumTagSinglePayload((uint64_t)v1163, 0, 1, v1154);
          }
          *(_OWORD *)((char *)v949 + v951[12]) = *(_OWORD *)((char *)v950 + v951[12]);
          *(_OWORD *)((char *)v949 + v951[13]) = *(_OWORD *)((char *)v950 + v951[13]);
          *(_OWORD *)((char *)v949 + v951[14]) = *(_OWORD *)((char *)v950 + v951[14]);
          uint64_t v962 = v951[15];
          uint64_t v1164 = (char *)v949 + v962;
          uint64_t v963 = (char *)v950 + v962;
          if (__swift_getEnumTagSinglePayload((uint64_t)v950 + v962, 1, v1154))
          {
            uint64_t v964 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1164, v963, *(void *)(*(void *)(v964 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v1151)(v1164, v963, v1154);
            __swift_storeEnumTagSinglePayload((uint64_t)v1164, 0, 1, v1154);
          }
          *(_OWORD *)((char *)v949 + v951[16]) = *(_OWORD *)((char *)v950 + v951[16]);
          *(_OWORD *)((char *)v949 + v951[17]) = *(_OWORD *)((char *)v950 + v951[17]);
          *(_OWORD *)((char *)v949 + v951[18]) = *(_OWORD *)((char *)v950 + v951[18]);
          *(_OWORD *)((char *)v949 + v951[19]) = *(_OWORD *)((char *)v950 + v951[19]);
          *(_OWORD *)((char *)v949 + v951[20]) = *(_OWORD *)((char *)v950 + v951[20]);
          *(_OWORD *)((char *)v949 + v951[21]) = *(_OWORD *)((char *)v950 + v951[21]);
          *(_OWORD *)((char *)v949 + v951[22]) = *(_OWORD *)((char *)v950 + v951[22]);
          *(_OWORD *)((char *)v949 + v951[23]) = *(_OWORD *)((char *)v950 + v951[23]);
          __swift_storeEnumTagSinglePayload((uint64_t)v949, 0, 1, (uint64_t)v951);
        }
        uint64_t v965 = v1187[23];
        uint64_t v966 = (_OWORD *)((char *)v12 + v965);
        uint64_t v967 = (_OWORD *)((char *)v13 + v965);
        uint64_t v968 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v967, 1, (uint64_t)v968))
        {
          uint64_t v969 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v966, v967, *(void *)(*(void *)(v969 - 8) + 64));
        }
        else
        {
          long long v970 = v967[1];
          *uint64_t v966 = *v967;
          v966[1] = v970;
          long long v971 = v967[3];
          v966[2] = v967[2];
          v966[3] = v971;
          long long v972 = v967[5];
          v966[4] = v967[4];
          v966[5] = v972;
          uint64_t v973 = v968[11];
          uint64_t v1165 = (char *)v966 + v973;
          uint64_t v974 = (char *)v967 + v973;
          if (__swift_getEnumTagSinglePayload((uint64_t)v967 + v973, 1, v1154))
          {
            uint64_t v975 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1165, v974, *(void *)(*(void *)(v975 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v1151)(v1165, v974, v1154);
            __swift_storeEnumTagSinglePayload((uint64_t)v1165, 0, 1, v1154);
          }
          *(_OWORD *)((char *)v966 + v968[12]) = *(_OWORD *)((char *)v967 + v968[12]);
          *(void *)((char *)v966 + v968[13]) = *(void *)((char *)v967 + v968[13]);
          uint64_t v976 = v968[14];
          uint64_t v1166 = (char *)v966 + v976;
          uint64_t v977 = (char *)v967 + v976;
          if (__swift_getEnumTagSinglePayload((uint64_t)v967 + v976, 1, v1154))
          {
            uint64_t v978 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1166, v977, *(void *)(*(void *)(v978 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v1151)(v1166, v977, v1154);
            __swift_storeEnumTagSinglePayload((uint64_t)v1166, 0, 1, v1154);
          }
          *(void *)((char *)v966 + v968[15]) = *(void *)((char *)v967 + v968[15]);
          *(void *)((char *)v966 + v968[16]) = *(void *)((char *)v967 + v968[16]);
          *(_OWORD *)((char *)v966 + v968[17]) = *(_OWORD *)((char *)v967 + v968[17]);
          *(void *)((char *)v966 + v968[18]) = *(void *)((char *)v967 + v968[18]);
          *(void *)((char *)v966 + v968[19]) = *(void *)((char *)v967 + v968[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v966, 0, 1, (uint64_t)v968);
        }
        uint64_t v979 = v1187[24];
        uint64_t v980 = (_OWORD *)((char *)v12 + v979);
        uint64_t v981 = (_OWORD *)((char *)v13 + v979);
        uint64_t v982 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v981, 1, (uint64_t)v982))
        {
          uint64_t v983 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v980, v981, *(void *)(*(void *)(v983 - 8) + 64));
        }
        else
        {
          long long v984 = v981[1];
          _OWORD *v980 = *v981;
          v980[1] = v984;
          long long v985 = v981[3];
          v980[2] = v981[2];
          v980[3] = v985;
          uint64_t v986 = v982[8];
          uint64_t v1167 = (char *)v980 + v986;
          uint64_t v987 = (char *)v981 + v986;
          uint64_t v988 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v987, 1, v988))
          {
            uint64_t v989 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v1167, v987, *(void *)(*(void *)(v989 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v988 - 8) + 32))(v1167, v987, v988);
            __swift_storeEnumTagSinglePayload((uint64_t)v1167, 0, 1, v988);
          }
          *(_OWORD *)((char *)v980 + v982[9]) = *(_OWORD *)((char *)v981 + v982[9]);
          *(_OWORD *)((char *)v980 + v982[10]) = *(_OWORD *)((char *)v981 + v982[10]);
          *(_OWORD *)((char *)v980 + v982[11]) = *(_OWORD *)((char *)v981 + v982[11]);
          uint64_t v990 = v982[12];
          uint64_t v1168 = (char *)v980 + v990;
          uint64_t v991 = (char *)v981 + v990;
          if (__swift_getEnumTagSinglePayload((uint64_t)v981 + v990, 1, v1154))
          {
            uint64_t v992 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1168, v991, *(void *)(*(void *)(v992 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v1151)(v1168, v991, v1154);
            __swift_storeEnumTagSinglePayload((uint64_t)v1168, 0, 1, v1154);
          }
          uint64_t v993 = v982[13];
          uint64_t v1169 = (char *)v980 + v993;
          uint64_t v994 = (char *)v981 + v993;
          if (__swift_getEnumTagSinglePayload((uint64_t)v981 + v993, 1, v1154))
          {
            uint64_t v995 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1169, v994, *(void *)(*(void *)(v995 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v1151)(v1169, v994, v1154);
            __swift_storeEnumTagSinglePayload((uint64_t)v1169, 0, 1, v1154);
          }
          uint64_t v996 = v982[14];
          uint64_t v997 = (char *)v980 + v996;
          uint64_t v998 = (char *)v981 + v996;
          *(void *)uint64_t v997 = *(void *)v998;
          v997[8] = v998[8];
          *(_OWORD *)((char *)v980 + v982[15]) = *(_OWORD *)((char *)v981 + v982[15]);
          *(_OWORD *)((char *)v980 + v982[16]) = *(_OWORD *)((char *)v981 + v982[16]);
          *(_OWORD *)((char *)v980 + v982[17]) = *(_OWORD *)((char *)v981 + v982[17]);
          *(_OWORD *)((char *)v980 + v982[18]) = *(_OWORD *)((char *)v981 + v982[18]);
          *(_OWORD *)((char *)v980 + v982[19]) = *(_OWORD *)((char *)v981 + v982[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v980, 0, 1, (uint64_t)v982);
        }
        uint64_t v14 = v1190;
        memcpy((char *)v12 + v1187[25], (char *)v13 + v1187[25], 0x90uLL);
        goto LABEL_524;
      case 1u:
        long long v34 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v34;
        long long v35 = v13[3];
        v12[2] = v13[2];
        v12[3] = v35;
        v12[4] = v13[4];
        uint64_t v1188 = (int *)type metadata accessor for MobileSMSDocument(0);
        uint64_t v36 = v1188[10];
        uint64_t v37 = (char *)v12 + v36;
        uint64_t v38 = (char *)v13 + v36;
        uint64_t v39 = type metadata accessor for Date();
        uint64_t v1149 = v39;
        if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
        {
          uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
          __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v39);
        }
        uint64_t v250 = v1188[11];
        uint64_t v251 = (char *)v12 + v250;
        uint64_t v252 = (char *)v13 + v250;
        uint64_t v253 = type metadata accessor for URL();
        uint64_t v1186 = v3;
        if (__swift_getEnumTagSinglePayload((uint64_t)v252, 1, v253))
        {
          uint64_t v254 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v251, v252, *(void *)(*(void *)(v254 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v253 - 8) + 32))(v251, v252, v253);
          __swift_storeEnumTagSinglePayload((uint64_t)v251, 0, 1, v253);
        }
        uint64_t v308 = v253;
        *(void *)((char *)v12 + v1188[12]) = *(void *)((char *)v13 + v1188[12]);
        *(_OWORD *)((char *)v12 + v1188[13]) = *(_OWORD *)((char *)v13 + v1188[13]);
        *(_OWORD *)((char *)v12 + v1188[14]) = *(_OWORD *)((char *)v13 + v1188[14]);
        *(void *)((char *)v12 + v1188[15]) = *(void *)((char *)v13 + v1188[15]);
        *(void *)((char *)v12 + v1188[16]) = *(void *)((char *)v13 + v1188[16]);
        uint64_t v309 = v1188[17];
        uint64_t v310 = (char *)v12 + v309;
        uint64_t v311 = (char *)v13 + v309;
        long long v312 = *((_OWORD *)v311 + 1);
        *(_OWORD *)uint64_t v310 = *(_OWORD *)v311;
        *((_OWORD *)v310 + 1) = v312;
        *((void *)v310 + 4) = *((void *)v311 + 4);
        *(_OWORD *)((char *)v12 + v1188[18]) = *(_OWORD *)((char *)v13 + v1188[18]);
        uint64_t v313 = v1188[19];
        uint64_t v314 = (_OWORD *)((char *)v12 + v313);
        uint64_t v315 = (_OWORD *)((char *)v13 + v313);
        uint64_t v316 = type metadata accessor for PartialExtractedAttributes(0);
        uint64_t v1152 = v308;
        uint64_t v1194 = v14;
        if (__swift_getEnumTagSinglePayload((uint64_t)v315, 1, v316))
        {
          uint64_t v317 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v314, v315, *(void *)(*(void *)(v317 - 8) + 64));
          uint64_t v3 = v1186;
          uint64_t v318 = v1188;
          uint64_t v319 = v1152;
        }
        else
        {
          _OWORD *v314 = *v315;
          uint64_t v1156 = (int *)v316;
          uint64_t v1159 = (char *)v314;
          uint64_t v357 = *(int *)(v316 + 20);
          uint64_t v358 = (_OWORD *)((char *)v314 + v357);
          uint64_t v359 = (_OWORD *)((char *)v315 + v357);
          uint64_t v360 = type metadata accessor for RentalCarReservation(0);
          uint64_t v1135 = v315;
          if (__swift_getEnumTagSinglePayload((uint64_t)v359, 1, v360))
          {
            Swift::String v361 = v315;
            uint64_t v362 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v358, v359, *(void *)(*(void *)(v362 - 8) + 64));
            uint64_t v363 = v1156;
            uint64_t v318 = v1188;
          }
          else
          {
            long long v393 = v359[1];
            *uint64_t v358 = *v359;
            v358[1] = v393;
            long long v394 = v359[3];
            v358[2] = v359[2];
            v358[3] = v394;
            long long v395 = v359[5];
            v358[4] = v359[4];
            v358[5] = v395;
            long long v396 = v359[7];
            v358[6] = v359[6];
            v358[7] = v396;
            *((unsigned char *)v358 + 128) = *((unsigned char *)v359 + 128);
            *(_WORD *)((char *)v358 + 129) = *(_WORD *)((char *)v359 + 129);
            *((void *)v358 + 17) = *((void *)v359 + 17);
            long long v397 = v359[10];
            v358[9] = v359[9];
            v358[10] = v397;
            long long v398 = v359[12];
            v358[11] = v359[11];
            v358[12] = v398;
            long long v399 = v359[14];
            v358[13] = v359[13];
            v358[14] = v399;
            v358[15] = v359[15];
            *((void *)v358 + 32) = *((void *)v359 + 32);
            *(_OWORD *)((char *)v358 + 264) = *(_OWORD *)((char *)v359 + 264);
            *(_OWORD *)((char *)v358 + 280) = *(_OWORD *)((char *)v359 + 280);
            *(_OWORD *)((char *)v358 + 296) = *(_OWORD *)((char *)v359 + 296);
            *(_OWORD *)((char *)v358 + 312) = *(_OWORD *)((char *)v359 + 312);
            *(_OWORD *)((char *)v358 + 328) = *(_OWORD *)((char *)v359 + 328);
            *(_OWORD *)((char *)v358 + 344) = *(_OWORD *)((char *)v359 + 344);
            *(_OWORD *)((char *)v358 + 360) = *(_OWORD *)((char *)v359 + 360);
            *((unsigned char *)v358 + 384) = *((unsigned char *)v359 + 384);
            *((void *)v358 + 47) = *((void *)v359 + 47);
            *(_OWORD *)((char *)v358 + 392) = *(_OWORD *)((char *)v359 + 392);
            *(_OWORD *)((char *)v358 + 408) = *(_OWORD *)((char *)v359 + 408);
            uint64_t v400 = *(int *)(v360 + 140);
            uint64_t v401 = (char *)v358 + v400;
            v402 = (char *)v359 + v400;
            if (__swift_getEnumTagSinglePayload((uint64_t)v359 + v400, 1, v1149))
            {
              uint64_t v403 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v401, v402, *(void *)(*(void *)(v403 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v401, v402, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v401, 0, 1, v1149);
            }
            uint64_t v412 = v360;
            uint64_t v413 = *(int *)(v360 + 144);
            uint64_t v414 = (char *)v358 + v413;
            uint64_t v415 = (char *)v359 + v413;
            if (__swift_getEnumTagSinglePayload((uint64_t)v359 + v413, 1, v1149))
            {
              uint64_t v416 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v414, v415, *(void *)(*(void *)(v416 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v414, v415, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v414, 0, 1, v1149);
            }
            Swift::String v361 = v1135;
            __swift_storeEnumTagSinglePayload((uint64_t)v358, 0, 1, v412);
            uint64_t v318 = v1188;
            uint64_t v363 = v1156;
          }
          uint64_t v447 = v363[6];
          uint64_t v448 = &v1159[v447];
          uint64_t v449 = (_OWORD *)((char *)v361 + v447);
          uint64_t v450 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v449, 1, v450))
          {
            uint64_t v451 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v448, v449, *(void *)(*(void *)(v451 - 8) + 64));
          }
          else
          {
            long long v452 = v449[1];
            *(_OWORD *)uint64_t v448 = *v449;
            *((_OWORD *)v448 + 1) = v452;
            long long v453 = v449[3];
            *((_OWORD *)v448 + 2) = v449[2];
            *((_OWORD *)v448 + 3) = v453;
            long long v454 = v449[5];
            *((_OWORD *)v448 + 4) = v449[4];
            *((_OWORD *)v448 + 5) = v454;
            long long v455 = v449[7];
            *((_OWORD *)v448 + 6) = v449[6];
            *((_OWORD *)v448 + 7) = v455;
            v448[128] = *((unsigned char *)v449 + 128);
            *(_WORD *)(v448 + 129) = *(_WORD *)((char *)v449 + 129);
            *((void *)v448 + 17) = *((void *)v449 + 17);
            long long v456 = v449[10];
            *((_OWORD *)v448 + 9) = v449[9];
            *((_OWORD *)v448 + 10) = v456;
            long long v457 = v449[12];
            *((_OWORD *)v448 + 11) = v449[11];
            *((_OWORD *)v448 + 12) = v457;
            *((void *)v448 + 26) = *((void *)v449 + 26);
            *(_OWORD *)(v448 + 216) = *(_OWORD *)((char *)v449 + 216);
            *(_OWORD *)(v448 + 232) = *(_OWORD *)((char *)v449 + 232);
            *(_OWORD *)(v448 + 248) = *(_OWORD *)((char *)v449 + 248);
            *(_OWORD *)(v448 + 264) = *(_OWORD *)((char *)v449 + 264);
            v448[296] = *((unsigned char *)v449 + 296);
            uint64_t v458 = *((void *)v449 + 36);
            *((void *)v448 + 35) = *((void *)v449 + 35);
            *((void *)v448 + 36) = v458;
            uint64_t v459 = *(int *)(v450 + 112);
            uint64_t v460 = &v448[v459];
            uint64_t v461 = (char *)v449 + v459;
            if (__swift_getEnumTagSinglePayload((uint64_t)v449 + v459, 1, v1149))
            {
              uint64_t v462 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v460, v461, *(void *)(*(void *)(v462 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v460, v461, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v460, 0, 1, v1149);
            }
            uint64_t v470 = *(int *)(v450 + 116);
            uint64_t v471 = &v448[v470];
            uint64_t v472 = (char *)v449 + v470;
            if (__swift_getEnumTagSinglePayload((uint64_t)v472, 1, v1149))
            {
              uint64_t v473 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v471, v472, *(void *)(*(void *)(v473 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v471, v472, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v471, 0, 1, v1149);
            }
            Swift::String v361 = v1135;
            __swift_storeEnumTagSinglePayload((uint64_t)v448, 0, 1, v450);
            uint64_t v318 = v1188;
          }
          uint64_t v509 = v1156[7];
          uint64_t v510 = &v1159[v509];
          uint64_t v511 = (_OWORD *)((char *)v361 + v509);
          uint64_t v512 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v511, 1, (uint64_t)v512))
          {
            uint64_t v513 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v510, v511, *(void *)(*(void *)(v513 - 8) + 64));
          }
          else
          {
            long long v514 = v511[1];
            *(_OWORD *)uint64_t v510 = *v511;
            *((_OWORD *)v510 + 1) = v514;
            long long v515 = v511[3];
            *((_OWORD *)v510 + 2) = v511[2];
            *((_OWORD *)v510 + 3) = v515;
            long long v516 = v511[5];
            *((_OWORD *)v510 + 4) = v511[4];
            *((_OWORD *)v510 + 5) = v516;
            long long v517 = v511[7];
            *((_OWORD *)v510 + 6) = v511[6];
            *((_OWORD *)v510 + 7) = v517;
            v510[128] = *((unsigned char *)v511 + 128);
            *(_WORD *)(v510 + 129) = *(_WORD *)((char *)v511 + 129);
            *((void *)v510 + 17) = *((void *)v511 + 17);
            long long v518 = v511[10];
            *((_OWORD *)v510 + 9) = v511[9];
            *((_OWORD *)v510 + 10) = v518;
            long long v519 = v511[12];
            *((_OWORD *)v510 + 11) = v511[11];
            *((_OWORD *)v510 + 12) = v519;
            long long v520 = v511[14];
            *((_OWORD *)v510 + 13) = v511[13];
            *((_OWORD *)v510 + 14) = v520;
            *((void *)v510 + 30) = *((void *)v511 + 30);
            *(_OWORD *)(v510 + 248) = *(_OWORD *)((char *)v511 + 248);
            *(_OWORD *)(v510 + 264) = *(_OWORD *)((char *)v511 + 264);
            v510[296] = *((unsigned char *)v511 + 296);
            uint64_t v521 = *((void *)v511 + 36);
            *((void *)v510 + 35) = *((void *)v511 + 35);
            *((void *)v510 + 36) = v521;
            *((_OWORD *)v510 + 19) = v511[19];
            uint64_t v522 = v512[29];
            uint64_t v523 = &v510[v522];
            uint64_t v524 = (char *)v511 + v522;
            if (__swift_getEnumTagSinglePayload((uint64_t)v511 + v522, 1, v1152))
            {
              uint64_t v525 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v523, v524, *(void *)(*(void *)(v525 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v523, v524, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v523, 0, 1, v1152);
            }
            *(_OWORD *)&v510[v512[30]] = *(_OWORD *)((char *)v511 + v512[30]);
            uint64_t v533 = v512[31];
            uint64_t v534 = &v510[v533];
            uint64_t v535 = (char *)v511 + v533;
            if (__swift_getEnumTagSinglePayload((uint64_t)v511 + v533, 1, v1149))
            {
              uint64_t v536 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v534, v535, *(void *)(*(void *)(v536 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v534, v535, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v534, 0, 1, v1149);
            }
            uint64_t v545 = v512[32];
            uint64_t v546 = &v510[v545];
            uint64_t v547 = (char *)v511 + v545;
            if (__swift_getEnumTagSinglePayload((uint64_t)v547, 1, v1149))
            {
              uint64_t v548 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v546, v547, *(void *)(*(void *)(v548 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v546, v547, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v546, 0, 1, v1149);
            }
            Swift::String v361 = v1135;
            __swift_storeEnumTagSinglePayload((uint64_t)v510, 0, 1, (uint64_t)v512);
            uint64_t v318 = v1188;
          }
          uint64_t v581 = v1156[8];
          long long v582 = &v1159[v581];
          uint64_t v583 = (_OWORD *)((char *)v361 + v581);
          uint64_t v584 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v583, 1, v584))
          {
            uint64_t v585 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v582, v583, *(void *)(*(void *)(v585 - 8) + 64));
          }
          else
          {
            long long v586 = v583[1];
            *(_OWORD *)long long v582 = *v583;
            *((_OWORD *)v582 + 1) = v586;
            long long v587 = v583[3];
            *((_OWORD *)v582 + 2) = v583[2];
            *((_OWORD *)v582 + 3) = v587;
            long long v588 = v583[5];
            *((_OWORD *)v582 + 4) = v583[4];
            *((_OWORD *)v582 + 5) = v588;
            long long v589 = v583[7];
            *((_OWORD *)v582 + 6) = v583[6];
            *((_OWORD *)v582 + 7) = v589;
            v582[128] = *((unsigned char *)v583 + 128);
            *(_WORD *)(v582 + 129) = *(_WORD *)((char *)v583 + 129);
            *((void *)v582 + 17) = *((void *)v583 + 17);
            long long v590 = v583[10];
            *((_OWORD *)v582 + 9) = v583[9];
            *((_OWORD *)v582 + 10) = v590;
            long long v591 = v583[12];
            *((_OWORD *)v582 + 11) = v583[11];
            *((_OWORD *)v582 + 12) = v591;
            long long v592 = v583[14];
            *((_OWORD *)v582 + 13) = v583[13];
            *((_OWORD *)v582 + 14) = v592;
            long long v593 = v583[16];
            *((_OWORD *)v582 + 15) = v583[15];
            *((_OWORD *)v582 + 16) = v593;
            v582[280] = *((unsigned char *)v583 + 280);
            *((void *)v582 + 34) = *((void *)v583 + 34);
            *((_OWORD *)v582 + 18) = v583[18];
            uint64_t v594 = *(int *)(v584 + 108);
            uint64_t v595 = &v582[v594];
            uint64_t v596 = (char *)v583 + v594;
            if (__swift_getEnumTagSinglePayload((uint64_t)v583 + v594, 1, v1149))
            {
              uint64_t v597 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v595, v596, *(void *)(*(void *)(v597 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v595, v596, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v595, 0, 1, v1149);
            }
            uint64_t v605 = *(int *)(v584 + 112);
            long long v606 = &v582[v605];
            uint64_t v607 = (char *)v583 + v605;
            if (__swift_getEnumTagSinglePayload((uint64_t)v607, 1, v1149))
            {
              uint64_t v608 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v606, v607, *(void *)(*(void *)(v608 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v606, v607, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v606, 0, 1, v1149);
            }
            Swift::String v361 = v1135;
            __swift_storeEnumTagSinglePayload((uint64_t)v582, 0, 1, v584);
            uint64_t v318 = v1188;
          }
          uint64_t v640 = v1156[9];
          uint64_t v641 = &v1159[v640];
          uint64_t v642 = (_OWORD *)((char *)v361 + v640);
          long long v643 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v642, 1, (uint64_t)v643))
          {
            uint64_t v644 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v641, v642, *(void *)(*(void *)(v644 - 8) + 64));
          }
          else
          {
            long long v645 = v642[1];
            *(_OWORD *)uint64_t v641 = *v642;
            *((_OWORD *)v641 + 1) = v645;
            long long v646 = v642[3];
            *((_OWORD *)v641 + 2) = v642[2];
            *((_OWORD *)v641 + 3) = v646;
            long long v647 = v642[5];
            *((_OWORD *)v641 + 4) = v642[4];
            *((_OWORD *)v641 + 5) = v647;
            long long v648 = v642[7];
            *((_OWORD *)v641 + 6) = v642[6];
            *((_OWORD *)v641 + 7) = v648;
            v641[128] = *((unsigned char *)v642 + 128);
            *(_WORD *)(v641 + 129) = *(_WORD *)((char *)v642 + 129);
            *((void *)v641 + 17) = *((void *)v642 + 17);
            long long v649 = v642[10];
            *((_OWORD *)v641 + 9) = v642[9];
            *((_OWORD *)v641 + 10) = v649;
            long long v650 = v642[12];
            *((_OWORD *)v641 + 11) = v642[11];
            *((_OWORD *)v641 + 12) = v650;
            long long v651 = v642[14];
            *((_OWORD *)v641 + 13) = v642[13];
            *((_OWORD *)v641 + 14) = v651;
            *((_OWORD *)v641 + 15) = v642[15];
            uint64_t v652 = v643[24];
            uint64_t v653 = &v641[v652];
            v654 = (char *)v642 + v652;
            if (__swift_getEnumTagSinglePayload((uint64_t)v642 + v652, 1, v1149))
            {
              uint64_t v655 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v653, v654, *(void *)(*(void *)(v655 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v653, v654, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v653, 0, 1, v1149);
            }
            uint64_t v663 = v643[25];
            uint64_t v664 = &v641[v663];
            uint64_t v665 = (char *)v642 + v663;
            if (__swift_getEnumTagSinglePayload((uint64_t)v642 + v663, 1, v1149))
            {
              uint64_t v666 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v664, v665, *(void *)(*(void *)(v666 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v664, v665, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v664, 0, 1, v1149);
            }
            Swift::String v361 = v1135;
            uint64_t v676 = v643[26];
            long long v677 = &v641[v676];
            uint64_t v678 = (char *)v642 + v676;
            if (__swift_getEnumTagSinglePayload((uint64_t)v678, 1, v1152))
            {
              uint64_t v679 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v677, v678, *(void *)(*(void *)(v679 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v677, v678, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v677, 0, 1, v1152);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v641, 0, 1, (uint64_t)v643);
            uint64_t v318 = v1188;
          }
          uint64_t v708 = v1156[10];
          uint64_t v709 = &v1159[v708];
          uint64_t v710 = (_OWORD *)((char *)v361 + v708);
          uint64_t v711 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v710, 1, (uint64_t)v711))
          {
            uint64_t v712 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v709, v710, *(void *)(*(void *)(v712 - 8) + 64));
          }
          else
          {
            long long v713 = v710[1];
            *(_OWORD *)uint64_t v709 = *v710;
            *((_OWORD *)v709 + 1) = v713;
            long long v714 = v710[3];
            *((_OWORD *)v709 + 2) = v710[2];
            *((_OWORD *)v709 + 3) = v714;
            long long v715 = v710[5];
            *((_OWORD *)v709 + 4) = v710[4];
            *((_OWORD *)v709 + 5) = v715;
            long long v716 = v710[7];
            *((_OWORD *)v709 + 6) = v710[6];
            *((_OWORD *)v709 + 7) = v716;
            v709[128] = *((unsigned char *)v710 + 128);
            *(_WORD *)(v709 + 129) = *(_WORD *)((char *)v710 + 129);
            *((void *)v709 + 17) = *((void *)v710 + 17);
            long long v717 = v710[10];
            *((_OWORD *)v709 + 9) = v710[9];
            *((_OWORD *)v709 + 10) = v717;
            long long v718 = v710[12];
            *((_OWORD *)v709 + 11) = v710[11];
            *((_OWORD *)v709 + 12) = v718;
            *((_OWORD *)v709 + 13) = v710[13];
            uint64_t v719 = v711[22];
            uint64_t v720 = &v709[v719];
            uint64_t v721 = (char *)v710 + v719;
            if (__swift_getEnumTagSinglePayload((uint64_t)v710 + v719, 1, v1149))
            {
              uint64_t v722 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v720, v721, *(void *)(*(void *)(v722 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v720, v721, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v720, 0, 1, v1149);
            }
            uint64_t v729 = v711[23];
            uint64_t v730 = &v709[v729];
            uint64_t v731 = (char *)v710 + v729;
            if (__swift_getEnumTagSinglePayload((uint64_t)v710 + v729, 1, v1149))
            {
              uint64_t v732 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v730, v731, *(void *)(*(void *)(v732 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v730, v731, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v730, 0, 1, v1149);
            }
            Swift::String v361 = v1135;
            uint64_t v748 = v711[24];
            uint64_t v749 = &v709[v748];
            uint64_t v750 = (char *)v710 + v748;
            *(void *)uint64_t v749 = *(void *)v750;
            v749[8] = v750[8];
            uint64_t v751 = v711[25];
            uint64_t v752 = &v709[v751];
            uint64_t v753 = (char *)v710 + v751;
            if (__swift_getEnumTagSinglePayload((uint64_t)v753, 1, v1152))
            {
              uint64_t v754 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v752, v753, *(void *)(*(void *)(v754 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v752, v753, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v752, 0, 1, v1152);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v709, 0, 1, (uint64_t)v711);
            uint64_t v318 = v1188;
          }
          uint64_t v779 = v1156[11];
          uint64_t v780 = &v1159[v779];
          uint64_t v781 = (_OWORD *)((char *)v361 + v779);
          uint64_t v782 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v781, 1, (uint64_t)v782))
          {
            uint64_t v783 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v780, v781, *(void *)(*(void *)(v783 - 8) + 64));
          }
          else
          {
            long long v784 = v781[1];
            *(_OWORD *)uint64_t v780 = *v781;
            *((_OWORD *)v780 + 1) = v784;
            long long v785 = v781[3];
            *((_OWORD *)v780 + 2) = v781[2];
            *((_OWORD *)v780 + 3) = v785;
            long long v786 = v781[5];
            *((_OWORD *)v780 + 4) = v781[4];
            *((_OWORD *)v780 + 5) = v786;
            v780[96] = *((unsigned char *)v781 + 96);
            *(_OWORD *)(v780 + 104) = *(_OWORD *)((char *)v781 + 104);
            uint64_t v787 = v782[13];
            uint64_t v788 = &v780[v787];
            uint64_t v789 = (char *)v781 + v787;
            if (__swift_getEnumTagSinglePayload((uint64_t)v781 + v787, 1, v1152))
            {
              uint64_t v790 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v788, v789, *(void *)(*(void *)(v790 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v788, v789, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v788, 0, 1, v1152);
            }
            uint64_t v797 = v782[14];
            uint64_t v798 = &v780[v797];
            uint64_t v799 = (char *)v781 + v797;
            if (__swift_getEnumTagSinglePayload((uint64_t)v781 + v797, 1, v1152))
            {
              uint64_t v800 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v798, v799, *(void *)(*(void *)(v800 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1152 - 8) + 32))(v798, v799, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v798, 0, 1, v1152);
            }
            *(_OWORD *)&v780[v782[15]] = *(_OWORD *)((char *)v781 + v782[15]);
            *(_OWORD *)&v780[v782[16]] = *(_OWORD *)((char *)v781 + v782[16]);
            *(_OWORD *)&v780[v782[17]] = *(_OWORD *)((char *)v781 + v782[17]);
            uint64_t v813 = v782[18];
            __dsto = (char *)v781 + v813;
            __srci = &v780[v813];
            uint64_t v814 = type metadata accessor for DateComponents();
            uint64_t v815 = *(void (**)(char *, char *, uint64_t))(*(void *)(v814 - 8) + 32);
            v815(__srci, __dsto, v814);
            v815(&v780[v782[19]], (char *)v781 + v782[19], v814);
            *(_OWORD *)&v780[v782[20]] = *(_OWORD *)((char *)v781 + v782[20]);
            *(_OWORD *)&v780[v782[21]] = *(_OWORD *)((char *)v781 + v782[21]);
            *(_OWORD *)&v780[v782[22]] = *(_OWORD *)((char *)v781 + v782[22]);
            *(_OWORD *)&v780[v782[23]] = *(_OWORD *)((char *)v781 + v782[23]);
            *(_OWORD *)&v780[v782[24]] = *(_OWORD *)((char *)v781 + v782[24]);
            *(_OWORD *)&v780[v782[25]] = *(_OWORD *)((char *)v781 + v782[25]);
            *(_OWORD *)&v780[v782[26]] = *(_OWORD *)((char *)v781 + v782[26]);
            *(_OWORD *)&v780[v782[27]] = *(_OWORD *)((char *)v781 + v782[27]);
            *(_OWORD *)&v780[v782[28]] = *(_OWORD *)((char *)v781 + v782[28]);
            *(_OWORD *)&v780[v782[29]] = *(_OWORD *)((char *)v781 + v782[29]);
            *(_OWORD *)&v780[v782[30]] = *(_OWORD *)((char *)v781 + v782[30]);
            *(_OWORD *)&v780[v782[31]] = *(_OWORD *)((char *)v781 + v782[31]);
            *(_OWORD *)&v780[v782[32]] = *(_OWORD *)((char *)v781 + v782[32]);
            *(void *)&v780[v782[33]] = *(void *)((char *)v781 + v782[33]);
            *(void *)&v780[v782[34]] = *(void *)((char *)v781 + v782[34]);
            *(_OWORD *)&v780[v782[35]] = *(_OWORD *)((char *)v781 + v782[35]);
            *(_OWORD *)&v780[v782[36]] = *(_OWORD *)((char *)v781 + v782[36]);
            *(_OWORD *)&v780[v782[37]] = *(_OWORD *)((char *)v781 + v782[37]);
            uint64_t v816 = v782[38];
            uint64_t v817 = &v780[v816];
            uint64_t v818 = (char *)v781 + v816;
            if (__swift_getEnumTagSinglePayload((uint64_t)v781 + v816, 1, v1149))
            {
              uint64_t v819 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v817, v818, *(void *)(*(void *)(v819 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v817, v818, v1149);
              __swift_storeEnumTagSinglePayload((uint64_t)v817, 0, 1, v1149);
            }
            uint64_t v318 = v1188;
            Swift::String v361 = v1135;
            *(_OWORD *)&v780[v782[39]] = *(_OWORD *)((char *)v781 + v782[39]);
            *(_OWORD *)&v780[v782[40]] = *(_OWORD *)((char *)v781 + v782[40]);
            uint64_t v860 = v782[41];
            uint64_t v861 = &v780[v860];
            uint64_t v862 = (char *)v781 + v860;
            *(void *)uint64_t v861 = *(void *)v862;
            v861[8] = v862[8];
            *(_OWORD *)&v780[v782[42]] = *(_OWORD *)((char *)v781 + v782[42]);
            uint64_t v863 = v782[43];
            uint64_t v864 = &v780[v863];
            uint64_t v865 = (char *)v781 + v863;
            *(_OWORD *)uint64_t v864 = *(_OWORD *)v865;
            *(void *)(v864 + 13) = *(void *)(v865 + 13);
            *(_OWORD *)&v780[v782[44]] = *(_OWORD *)((char *)v781 + v782[44]);
            *(_OWORD *)&v780[v782[45]] = *(_OWORD *)((char *)v781 + v782[45]);
            *(_OWORD *)&v780[v782[46]] = *(_OWORD *)((char *)v781 + v782[46]);
            *(_OWORD *)&v780[v782[47]] = *(_OWORD *)((char *)v781 + v782[47]);
            __swift_storeEnumTagSinglePayload((uint64_t)v780, 0, 1, (uint64_t)v782);
          }
          uint64_t v3 = v1186;
          uint64_t v866 = v1156[12];
          uint64_t v867 = &v1159[v866];
          uint64_t v868 = (_OWORD *)((char *)v361 + v866);
          uint64_t v869 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v868, 1, (uint64_t)v869))
          {
            uint64_t v870 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v867, v868, *(void *)(*(void *)(v870 - 8) + 64));
          }
          else
          {
            long long v871 = v868[1];
            *(_OWORD *)uint64_t v867 = *v868;
            *((_OWORD *)v867 + 1) = v871;
            long long v872 = v868[3];
            *((_OWORD *)v867 + 2) = v868[2];
            *((_OWORD *)v867 + 3) = v872;
            long long v873 = v868[5];
            *((_OWORD *)v867 + 4) = v868[4];
            *((_OWORD *)v867 + 5) = v873;
            v867[96] = *((unsigned char *)v868 + 96);
            *(_OWORD *)(v867 + 104) = *(_OWORD *)((char *)v868 + 104);
            *(_OWORD *)(v867 + 120) = *(_OWORD *)((char *)v868 + 120);
            uint64_t v874 = v869[14];
            __dstk = &v867[v874];
            uint64_t v1106 = (char *)v868 + v874;
            __srcd = (void *)type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1106, 1, (uint64_t)__srcd))
            {
              uint64_t v875 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(__dstk, v1106, *(void *)(*(void *)(v875 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(__srcd - 1) + 32))(__dstk, v1106, __srcd);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstk, 0, 1, (uint64_t)__srcd);
            }
            uint64_t v880 = v869[15];
            __dstm = &v867[v880];
            uint64_t v881 = (char *)v868 + v880;
            if (__swift_getEnumTagSinglePayload((uint64_t)v868 + v880, 1, (uint64_t)__srcd))
            {
              uint64_t v882 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(__dstm, v881, *(void *)(*(void *)(v882 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(__srcd - 1) + 32))(__dstm, v881, __srcd);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstm, 0, 1, (uint64_t)__srcd);
            }
            Swift::String v361 = v1135;
            *(_OWORD *)&v867[v869[16]] = *(_OWORD *)((char *)v868 + v869[16]);
            *(_OWORD *)&v867[v869[17]] = *(_OWORD *)((char *)v868 + v869[17]);
            *(_OWORD *)&v867[v869[18]] = *(_OWORD *)((char *)v868 + v869[18]);
            *(_OWORD *)&v867[v869[19]] = *(_OWORD *)((char *)v868 + v869[19]);
            *(_OWORD *)&v867[v869[20]] = *(_OWORD *)((char *)v868 + v869[20]);
            *(void *)&v867[v869[21]] = *(void *)((char *)v868 + v869[21]);
            *(void *)&v867[v869[22]] = *(void *)((char *)v868 + v869[22]);
            uint64_t v927 = v869[23];
            uint64_t v928 = &v867[v927];
            uint64_t v929 = (char *)v868 + v927;
            v928[8] = v929[8];
            *(void *)uint64_t v928 = *(void *)v929;
            uint64_t v930 = v869[24];
            uint64_t v931 = &v867[v930];
            uint64_t v932 = (char *)v868 + v930;
            v931[8] = v932[8];
            *(void *)uint64_t v931 = *(void *)v932;
            *(_OWORD *)&v867[v869[25]] = *(_OWORD *)((char *)v868 + v869[25]);
            *(_OWORD *)&v867[v869[26]] = *(_OWORD *)((char *)v868 + v869[26]);
            *(_OWORD *)&v867[v869[27]] = *(_OWORD *)((char *)v868 + v869[27]);
            *(_OWORD *)&v867[v869[28]] = *(_OWORD *)((char *)v868 + v869[28]);
            uint64_t v933 = v869[29];
            uint64_t v934 = &v867[v933];
            uint64_t v935 = (char *)v868 + v933;
            *(void *)uint64_t v934 = *(void *)v935;
            v934[8] = v935[8];
            __swift_storeEnumTagSinglePayload((uint64_t)v867, 0, 1, (uint64_t)v869);
            uint64_t v318 = v1188;
          }
          uint64_t v936 = v1156[13];
          uint64_t v937 = &v1159[v936];
          uint64_t v938 = (_OWORD *)((char *)v361 + v936);
          uint64_t v939 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v938, 1, (uint64_t)v939))
          {
            uint64_t v940 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v937, v938, *(void *)(*(void *)(v940 - 8) + 64));
            uint64_t v319 = v1152;
          }
          else
          {
            long long v941 = v938[1];
            *(_OWORD *)uint64_t v937 = *v938;
            *((_OWORD *)v937 + 1) = v941;
            long long v942 = v938[3];
            *((_OWORD *)v937 + 2) = v938[2];
            *((_OWORD *)v937 + 3) = v942;
            long long v943 = v938[5];
            *((_OWORD *)v937 + 4) = v938[4];
            *((_OWORD *)v937 + 5) = v943;
            v937[96] = *((unsigned char *)v938 + 96);
            *(_OWORD *)(v937 + 104) = *(_OWORD *)((char *)v938 + 104);
            *(_OWORD *)(v937 + 120) = *(_OWORD *)((char *)v938 + 120);
            uint64_t v944 = v939[14];
            uint64_t v1148 = &v937[v944];
            uint64_t v945 = (char *)v938 + v944;
            uint64_t v946 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v945, 1, v946))
            {
              uint64_t v947 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1148, v945, *(void *)(*(void *)(v947 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v946 - 8) + 32))(v1148, v945, v946);
              __swift_storeEnumTagSinglePayload((uint64_t)v1148, 0, 1, v946);
            }
            uint64_t v318 = v1188;
            uint64_t v319 = v1152;
            *(_OWORD *)&v937[v939[15]] = *(_OWORD *)((char *)v938 + v939[15]);
            *(_OWORD *)&v937[v939[16]] = *(_OWORD *)((char *)v938 + v939[16]);
            *(_OWORD *)&v937[v939[17]] = *(_OWORD *)((char *)v938 + v939[17]);
            *(_OWORD *)&v937[v939[18]] = *(_OWORD *)((char *)v938 + v939[18]);
            *(_OWORD *)&v937[v939[19]] = *(_OWORD *)((char *)v938 + v939[19]);
            *(void *)&v937[v939[20]] = *(void *)((char *)v938 + v939[20]);
            *(_OWORD *)&v937[v939[21]] = *(_OWORD *)((char *)v938 + v939[21]);
            *(_OWORD *)&v937[v939[22]] = *(_OWORD *)((char *)v938 + v939[22]);
            *(_OWORD *)&v937[v939[23]] = *(_OWORD *)((char *)v938 + v939[23]);
            __swift_storeEnumTagSinglePayload((uint64_t)v937, 0, 1, (uint64_t)v939);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v1159, 0, 1, (uint64_t)v1156);
        }
        uint64_t v1050 = v318[20];
        uint64_t v1051 = (_OWORD *)((char *)v12 + v1050);
        uint64_t v1052 = (_OWORD *)((char *)v13 + v1050);
        uint64_t v1053 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1052, 1, (uint64_t)v1053))
        {
          uint64_t v1054 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v1051, v1052, *(void *)(*(void *)(v1054 - 8) + 64));
        }
        else
        {
          long long v1055 = v1052[1];
          _OWORD *v1051 = *v1052;
          v1051[1] = v1055;
          long long v1056 = v1052[3];
          v1051[2] = v1052[2];
          v1051[3] = v1056;
          long long v1057 = v1052[5];
          v1051[4] = v1052[4];
          v1051[5] = v1057;
          uint64_t v1058 = v1053[10];
          uint64_t v1178 = (char *)v1051 + v1058;
          uint64_t v1059 = (char *)v1052 + v1058;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1052 + v1058, 1, v1149))
          {
            uint64_t v1060 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1178, v1059, *(void *)(*(void *)(v1060 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v1178, v1059, v1149);
            __swift_storeEnumTagSinglePayload((uint64_t)v1178, 0, 1, v1149);
          }
          uint64_t v1061 = v1053[11];
          uint64_t v1179 = (char *)v1051 + v1061;
          uint64_t v1062 = (char *)v1052 + v1061;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1052 + v1061, 1, v1149))
          {
            uint64_t v1063 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1179, v1062, *(void *)(*(void *)(v1063 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v1179, v1062, v1149);
            __swift_storeEnumTagSinglePayload((uint64_t)v1179, 0, 1, v1149);
          }
          *(_OWORD *)((char *)v1051 + v1053[12]) = *(_OWORD *)((char *)v1052 + v1053[12]);
          *(_OWORD *)((char *)v1051 + v1053[13]) = *(_OWORD *)((char *)v1052 + v1053[13]);
          *(_OWORD *)((char *)v1051 + v1053[14]) = *(_OWORD *)((char *)v1052 + v1053[14]);
          uint64_t v1064 = v1053[15];
          uint64_t v1180 = (char *)v1051 + v1064;
          uint64_t v1065 = (char *)v1052 + v1064;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1052 + v1064, 1, v1149))
          {
            uint64_t v1066 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1180, v1065, *(void *)(*(void *)(v1066 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v1180, v1065, v1149);
            __swift_storeEnumTagSinglePayload((uint64_t)v1180, 0, 1, v1149);
          }
          uint64_t v319 = v1152;
          *(_OWORD *)((char *)v1051 + v1053[16]) = *(_OWORD *)((char *)v1052 + v1053[16]);
          *(_OWORD *)((char *)v1051 + v1053[17]) = *(_OWORD *)((char *)v1052 + v1053[17]);
          *(_OWORD *)((char *)v1051 + v1053[18]) = *(_OWORD *)((char *)v1052 + v1053[18]);
          *(_OWORD *)((char *)v1051 + v1053[19]) = *(_OWORD *)((char *)v1052 + v1053[19]);
          *(_OWORD *)((char *)v1051 + v1053[20]) = *(_OWORD *)((char *)v1052 + v1053[20]);
          *(_OWORD *)((char *)v1051 + v1053[21]) = *(_OWORD *)((char *)v1052 + v1053[21]);
          *(_OWORD *)((char *)v1051 + v1053[22]) = *(_OWORD *)((char *)v1052 + v1053[22]);
          *(_OWORD *)((char *)v1051 + v1053[23]) = *(_OWORD *)((char *)v1052 + v1053[23]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1051, 0, 1, (uint64_t)v1053);
          uint64_t v318 = v1188;
        }
        uint64_t v1067 = v318[21];
        uint64_t v1068 = (_OWORD *)((char *)v12 + v1067);
        uint64_t v1069 = (_OWORD *)((char *)v13 + v1067);
        uint64_t v1070 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1069, 1, (uint64_t)v1070))
        {
          uint64_t v1071 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v1068, v1069, *(void *)(*(void *)(v1071 - 8) + 64));
        }
        else
        {
          long long v1072 = v1069[1];
          *uint64_t v1068 = *v1069;
          v1068[1] = v1072;
          long long v1073 = v1069[3];
          v1068[2] = v1069[2];
          v1068[3] = v1073;
          long long v1074 = v1069[5];
          v1068[4] = v1069[4];
          v1068[5] = v1074;
          uint64_t v1075 = v1070[11];
          uint64_t v1181 = (char *)v1068 + v1075;
          uint64_t v1076 = (char *)v1069 + v1075;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1069 + v1075, 1, v1149))
          {
            uint64_t v1077 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1181, v1076, *(void *)(*(void *)(v1077 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v1181, v1076, v1149);
            __swift_storeEnumTagSinglePayload((uint64_t)v1181, 0, 1, v1149);
          }
          *(_OWORD *)((char *)v1068 + v1070[12]) = *(_OWORD *)((char *)v1069 + v1070[12]);
          *(void *)((char *)v1068 + v1070[13]) = *(void *)((char *)v1069 + v1070[13]);
          uint64_t v1078 = v1070[14];
          uint64_t v1182 = (char *)v1068 + v1078;
          uint64_t v1079 = (char *)v1069 + v1078;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1069 + v1078, 1, v1149))
          {
            uint64_t v1080 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1182, v1079, *(void *)(*(void *)(v1080 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v1182, v1079, v1149);
            __swift_storeEnumTagSinglePayload((uint64_t)v1182, 0, 1, v1149);
          }
          uint64_t v319 = v1152;
          *(void *)((char *)v1068 + v1070[15]) = *(void *)((char *)v1069 + v1070[15]);
          *(void *)((char *)v1068 + v1070[16]) = *(void *)((char *)v1069 + v1070[16]);
          *(_OWORD *)((char *)v1068 + v1070[17]) = *(_OWORD *)((char *)v1069 + v1070[17]);
          *(void *)((char *)v1068 + v1070[18]) = *(void *)((char *)v1069 + v1070[18]);
          *(void *)((char *)v1068 + v1070[19]) = *(void *)((char *)v1069 + v1070[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1068, 0, 1, (uint64_t)v1070);
          uint64_t v318 = v1188;
        }
        uint64_t v1081 = v318[22];
        uint64_t v1082 = (_OWORD *)((char *)v12 + v1081);
        uint64_t v1083 = (_OWORD *)((char *)v13 + v1081);
        uint64_t v1084 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1083, 1, (uint64_t)v1084))
        {
          uint64_t v1085 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v1082, v1083, *(void *)(*(void *)(v1085 - 8) + 64));
        }
        else
        {
          long long v1086 = v1083[1];
          _OWORD *v1082 = *v1083;
          v1082[1] = v1086;
          long long v1087 = v1083[3];
          v1082[2] = v1083[2];
          v1082[3] = v1087;
          uint64_t v1088 = v1084[8];
          uint64_t v1183 = (char *)v1082 + v1088;
          uint64_t v1089 = (char *)v1083 + v1088;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1083 + v1088, 1, v319))
          {
            uint64_t v1090 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v1183, v1089, *(void *)(*(void *)(v1090 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 32))(v1183, v1089, v319);
            __swift_storeEnumTagSinglePayload((uint64_t)v1183, 0, 1, v319);
          }
          *(_OWORD *)((char *)v1082 + v1084[9]) = *(_OWORD *)((char *)v1083 + v1084[9]);
          *(_OWORD *)((char *)v1082 + v1084[10]) = *(_OWORD *)((char *)v1083 + v1084[10]);
          *(_OWORD *)((char *)v1082 + v1084[11]) = *(_OWORD *)((char *)v1083 + v1084[11]);
          uint64_t v1091 = v1084[12];
          uint64_t v1184 = (char *)v1082 + v1091;
          uint64_t v1092 = (char *)v1083 + v1091;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1083 + v1091, 1, v1149))
          {
            uint64_t v1093 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1184, v1092, *(void *)(*(void *)(v1093 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v1184, v1092, v1149);
            __swift_storeEnumTagSinglePayload((uint64_t)v1184, 0, 1, v1149);
          }
          uint64_t v1094 = v1084[13];
          uint64_t v1185 = (char *)v1082 + v1094;
          uint64_t v1095 = (char *)v1083 + v1094;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1083 + v1094, 1, v1149))
          {
            uint64_t v1096 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1185, v1095, *(void *)(*(void *)(v1096 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1149 - 8) + 32))(v1185, v1095, v1149);
            __swift_storeEnumTagSinglePayload((uint64_t)v1185, 0, 1, v1149);
          }
          uint64_t v1097 = v1084[14];
          uint64_t v1098 = (char *)v1082 + v1097;
          uint64_t v1099 = (char *)v1083 + v1097;
          *(void *)uint64_t v1098 = *(void *)v1099;
          v1098[8] = v1099[8];
          *(_OWORD *)((char *)v1082 + v1084[15]) = *(_OWORD *)((char *)v1083 + v1084[15]);
          *(_OWORD *)((char *)v1082 + v1084[16]) = *(_OWORD *)((char *)v1083 + v1084[16]);
          *(_OWORD *)((char *)v1082 + v1084[17]) = *(_OWORD *)((char *)v1083 + v1084[17]);
          *(_OWORD *)((char *)v1082 + v1084[18]) = *(_OWORD *)((char *)v1083 + v1084[18]);
          *(_OWORD *)((char *)v1082 + v1084[19]) = *(_OWORD *)((char *)v1083 + v1084[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1082, 0, 1, (uint64_t)v1084);
        }
        uint64_t v14 = v1194;
        memcpy((char *)v12 + v1188[23], (char *)v13 + v1188[23], 0x90uLL);
        goto LABEL_524;
      case 2u:
        uint64_t v41 = v14;
        long long v42 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v42;
        v12[2] = v13[2];
        uint64_t v43 = (int *)type metadata accessor for CalendarEvent(0);
        uint64_t v44 = v43[7];
        uint64_t v45 = (char *)v12 + v44;
        uint64_t v46 = (char *)v13 + v44;
        uint64_t v47 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
        {
          uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
          __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v47);
        }
        uint64_t v255 = v43[8];
        uint64_t v256 = (char *)v12 + v255;
        uint64_t v257 = (char *)v13 + v255;
        if (__swift_getEnumTagSinglePayload((uint64_t)v13 + v255, 1, v47))
        {
          uint64_t v258 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v256, v257, *(void *)(*(void *)(v258 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v256, v257, v47);
          __swift_storeEnumTagSinglePayload((uint64_t)v256, 0, 1, v47);
        }
        uint64_t v14 = v41;
        *(_OWORD *)((char *)v12 + v43[9]) = *(_OWORD *)((char *)v13 + v43[9]);
        *(void *)((char *)v12 + v43[10]) = *(void *)((char *)v13 + v43[10]);
        *(void *)((char *)v12 + v43[11]) = *(void *)((char *)v13 + v43[11]);
        *(_OWORD *)((char *)v12 + v43[12]) = *(_OWORD *)((char *)v13 + v43[12]);
        uint64_t v320 = v43[13];
        uint64_t v321 = (char *)v12 + v320;
        uint64_t v322 = (char *)v13 + v320;
        long long v323 = *((_OWORD *)v322 + 1);
        *(_OWORD *)uint64_t v321 = *(_OWORD *)v322;
        *((_OWORD *)v321 + 1) = v323;
        *((void *)v321 + 4) = *((void *)v322 + 4);
        goto LABEL_524;
      case 3u:
        long long v49 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v49;
        v12[2] = v13[2];
        *((void *)v12 + 6) = *((void *)v13 + 6);
        *(_OWORD *)((char *)v12 + 56) = *(_OWORD *)((char *)v13 + 56);
        *(_OWORD *)((char *)v12 + 72) = *(_OWORD *)((char *)v13 + 72);
        uint64_t v1189 = (int *)type metadata accessor for Photo(0);
        uint64_t v50 = v1189[11];
        uint64_t v51 = (char *)v12 + v50;
        uint64_t v52 = (char *)v13 + v50;
        uint64_t v53 = type metadata accessor for Date();
        uint64_t v1155 = v53;
        if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
        {
          uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
          __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v53);
        }
        *(void *)((char *)v12 + v1189[12]) = *(void *)((char *)v13 + v1189[12]);
        *(void *)((char *)v12 + v1189[13]) = *(void *)((char *)v13 + v1189[13]);
        *(void *)((char *)v12 + v1189[14]) = *(void *)((char *)v13 + v1189[14]);
        *(void *)((char *)v12 + v1189[15]) = *(void *)((char *)v13 + v1189[15]);
        *(_OWORD *)((char *)v12 + v1189[16]) = *(_OWORD *)((char *)v13 + v1189[16]);
        uint64_t v259 = v1189[17];
        uint64_t v260 = (_OWORD *)((char *)v12 + v259);
        uint64_t v261 = (_OWORD *)((char *)v13 + v259);
        uint64_t v262 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        uint64_t v1193 = v14;
        if (__swift_getEnumTagSinglePayload((uint64_t)v261, 1, (uint64_t)v262))
        {
          uint64_t v263 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v260, v261, *(void *)(*(void *)(v263 - 8) + 64));
        }
        else
        {
          *uint64_t v260 = *v261;
          uint64_t v324 = v262[5];
          uint64_t v325 = (char *)v261;
          uint64_t v326 = (_OWORD *)((char *)v260 + v324);
          uint64_t v1158 = v325;
          uint64_t v327 = &v325[v324];
          uint64_t v1134 = (int *)type metadata accessor for RentalCarReservation(0);
          uint64_t v1150 = v260;
          uint64_t v1153 = v262;
          if (__swift_getEnumTagSinglePayload((uint64_t)v327, 1, (uint64_t)v1134))
          {
            uint64_t v328 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v326, v327, *(void *)(*(void *)(v328 - 8) + 64));
          }
          else
          {
            long long v382 = *((_OWORD *)v327 + 1);
            *uint64_t v326 = *(_OWORD *)v327;
            v326[1] = v382;
            long long v383 = *((_OWORD *)v327 + 3);
            v326[2] = *((_OWORD *)v327 + 2);
            v326[3] = v383;
            long long v384 = *((_OWORD *)v327 + 5);
            v326[4] = *((_OWORD *)v327 + 4);
            v326[5] = v384;
            long long v385 = *((_OWORD *)v327 + 7);
            v326[6] = *((_OWORD *)v327 + 6);
            v326[7] = v385;
            *((unsigned char *)v326 + 128) = v327[128];
            *(_WORD *)((char *)v326 + 129) = *(_WORD *)(v327 + 129);
            *((void *)v326 + 17) = *((void *)v327 + 17);
            long long v386 = *((_OWORD *)v327 + 10);
            v326[9] = *((_OWORD *)v327 + 9);
            v326[10] = v386;
            long long v387 = *((_OWORD *)v327 + 12);
            v326[11] = *((_OWORD *)v327 + 11);
            v326[12] = v387;
            long long v388 = *((_OWORD *)v327 + 14);
            v326[13] = *((_OWORD *)v327 + 13);
            v326[14] = v388;
            v326[15] = *((_OWORD *)v327 + 15);
            *((void *)v326 + 32) = *((void *)v327 + 32);
            *(_OWORD *)((char *)v326 + 264) = *(_OWORD *)(v327 + 264);
            *(_OWORD *)((char *)v326 + 280) = *(_OWORD *)(v327 + 280);
            *(_OWORD *)((char *)v326 + 296) = *(_OWORD *)(v327 + 296);
            *(_OWORD *)((char *)v326 + 312) = *(_OWORD *)(v327 + 312);
            *(_OWORD *)((char *)v326 + 328) = *(_OWORD *)(v327 + 328);
            *(_OWORD *)((char *)v326 + 344) = *(_OWORD *)(v327 + 344);
            *(_OWORD *)((char *)v326 + 360) = *(_OWORD *)(v327 + 360);
            *((unsigned char *)v326 + 384) = v327[384];
            *((void *)v326 + 47) = *((void *)v327 + 47);
            *(_OWORD *)((char *)v326 + 392) = *(_OWORD *)(v327 + 392);
            *(_OWORD *)((char *)v326 + 408) = *(_OWORD *)(v327 + 408);
            uint64_t v389 = v1134[35];
            uint64_t v390 = (char *)v326 + v389;
            uint64_t v391 = &v327[v389];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v327[v389], 1, v1155))
            {
              uint64_t v392 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v390, v391, *(void *)(*(void *)(v392 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v390, v391, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v390, 0, 1, v1155);
            }
            uint64_t v408 = v1134[36];
            uint64_t v409 = (char *)v326 + v408;
            uint64_t v410 = &v327[v408];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v327[v408], 1, v1155))
            {
              uint64_t v411 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v409, v410, *(void *)(*(void *)(v411 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v409, v410, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v409, 0, 1, v1155);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v326, 0, 1, (uint64_t)v1134);
            uint64_t v262 = v1153;
          }
          uint64_t v432 = v262[6];
          uint64_t v433 = (_OWORD *)((char *)v260 + v432);
          uint64_t v434 = &v1158[v432];
          uint64_t v435 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v434, 1, v435))
          {
            uint64_t v436 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v433, v434, *(void *)(*(void *)(v436 - 8) + 64));
          }
          else
          {
            long long v437 = *((_OWORD *)v434 + 1);
            *uint64_t v433 = *(_OWORD *)v434;
            v433[1] = v437;
            long long v438 = *((_OWORD *)v434 + 3);
            v433[2] = *((_OWORD *)v434 + 2);
            v433[3] = v438;
            long long v439 = *((_OWORD *)v434 + 5);
            v433[4] = *((_OWORD *)v434 + 4);
            v433[5] = v439;
            long long v440 = *((_OWORD *)v434 + 7);
            v433[6] = *((_OWORD *)v434 + 6);
            v433[7] = v440;
            *((unsigned char *)v433 + 128) = v434[128];
            *(_WORD *)((char *)v433 + 129) = *(_WORD *)(v434 + 129);
            *((void *)v433 + 17) = *((void *)v434 + 17);
            long long v441 = *((_OWORD *)v434 + 10);
            v433[9] = *((_OWORD *)v434 + 9);
            v433[10] = v441;
            long long v442 = *((_OWORD *)v434 + 12);
            v433[11] = *((_OWORD *)v434 + 11);
            v433[12] = v442;
            *((void *)v433 + 26) = *((void *)v434 + 26);
            *(_OWORD *)((char *)v433 + 216) = *(_OWORD *)(v434 + 216);
            *(_OWORD *)((char *)v433 + 232) = *(_OWORD *)(v434 + 232);
            *(_OWORD *)((char *)v433 + 248) = *(_OWORD *)(v434 + 248);
            *(_OWORD *)((char *)v433 + 264) = *(_OWORD *)(v434 + 264);
            *((unsigned char *)v433 + 296) = v434[296];
            uint64_t v443 = *((void *)v434 + 36);
            *((void *)v433 + 35) = *((void *)v434 + 35);
            *((void *)v433 + 36) = v443;
            uint64_t v444 = *(int *)(v435 + 112);
            uint64_t v1136 = (char *)v433 + v444;
            uint64_t v445 = &v434[v444];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v434[v444], 1, v1155))
            {
              uint64_t v446 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1136, v445, *(void *)(*(void *)(v446 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v1136, v445, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v1136, 0, 1, v1155);
            }
            uint64_t v466 = *(int *)(v435 + 116);
            uint64_t v467 = (char *)v433 + v466;
            uint64_t v468 = &v434[v466];
            if (__swift_getEnumTagSinglePayload((uint64_t)v468, 1, v1155))
            {
              uint64_t v469 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v467, v468, *(void *)(*(void *)(v469 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v467, v468, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v467, 0, 1, v1155);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v433, 0, 1, v435);
            uint64_t v262 = v1153;
          }
          uint64_t v492 = v262[7];
          uint64_t v493 = (_OWORD *)((char *)v260 + v492);
          uint64_t v494 = &v1158[v492];
          unint64_t v495 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v494, 1, (uint64_t)v495))
          {
            uint64_t v496 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v493, v494, *(void *)(*(void *)(v496 - 8) + 64));
          }
          else
          {
            long long v497 = *((_OWORD *)v494 + 1);
            *uint64_t v493 = *(_OWORD *)v494;
            v493[1] = v497;
            long long v498 = *((_OWORD *)v494 + 3);
            v493[2] = *((_OWORD *)v494 + 2);
            v493[3] = v498;
            long long v499 = *((_OWORD *)v494 + 5);
            v493[4] = *((_OWORD *)v494 + 4);
            v493[5] = v499;
            long long v500 = *((_OWORD *)v494 + 7);
            v493[6] = *((_OWORD *)v494 + 6);
            v493[7] = v500;
            *((unsigned char *)v493 + 128) = v494[128];
            *(_WORD *)((char *)v493 + 129) = *(_WORD *)(v494 + 129);
            *((void *)v493 + 17) = *((void *)v494 + 17);
            long long v501 = *((_OWORD *)v494 + 10);
            v493[9] = *((_OWORD *)v494 + 9);
            v493[10] = v501;
            long long v502 = *((_OWORD *)v494 + 12);
            v493[11] = *((_OWORD *)v494 + 11);
            v493[12] = v502;
            long long v503 = *((_OWORD *)v494 + 14);
            v493[13] = *((_OWORD *)v494 + 13);
            v493[14] = v503;
            *((void *)v493 + 30) = *((void *)v494 + 30);
            *(_OWORD *)((char *)v493 + 248) = *(_OWORD *)(v494 + 248);
            *(_OWORD *)((char *)v493 + 264) = *(_OWORD *)(v494 + 264);
            *((unsigned char *)v493 + 296) = v494[296];
            uint64_t v504 = *((void *)v494 + 36);
            *((void *)v493 + 35) = *((void *)v494 + 35);
            *((void *)v493 + 36) = v504;
            v493[19] = *((_OWORD *)v494 + 19);
            uint64_t v505 = v495[29];
            uint64_t v1137 = (char *)v493 + v505;
            uint64_t v506 = &v494[v505];
            uint64_t v507 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v506, 1, v507))
            {
              uint64_t v508 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1137, v506, *(void *)(*(void *)(v508 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v507 - 8) + 32))(v1137, v506, v507);
              __swift_storeEnumTagSinglePayload((uint64_t)v1137, 0, 1, v507);
            }
            *(_OWORD *)((char *)v493 + v495[30]) = *(_OWORD *)&v494[v495[30]];
            uint64_t v530 = v495[31];
            uint64_t v1138 = (char *)v493 + v530;
            uint64_t v531 = &v494[v530];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v494[v530], 1, v1155))
            {
              uint64_t v532 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1138, v531, *(void *)(*(void *)(v532 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v1138, v531, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v1138, 0, 1, v1155);
            }
            uint64_t v541 = v495[32];
            long long v542 = (char *)v493 + v541;
            long long v543 = &v494[v541];
            if (__swift_getEnumTagSinglePayload((uint64_t)v543, 1, v1155))
            {
              uint64_t v544 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v542, v543, *(void *)(*(void *)(v544 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v542, v543, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v542, 0, 1, v1155);
            }
            uint64_t v260 = v1150;
            __swift_storeEnumTagSinglePayload((uint64_t)v493, 0, 1, (uint64_t)v495);
            uint64_t v262 = v1153;
          }
          uint64_t v565 = v262[8];
          uint64_t v566 = (_OWORD *)((char *)v260 + v565);
          uint64_t v567 = &v1158[v565];
          uint64_t v568 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v567, 1, v568))
          {
            uint64_t v569 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v566, v567, *(void *)(*(void *)(v569 - 8) + 64));
          }
          else
          {
            long long v570 = *((_OWORD *)v567 + 1);
            _OWORD *v566 = *(_OWORD *)v567;
            v566[1] = v570;
            long long v571 = *((_OWORD *)v567 + 3);
            v566[2] = *((_OWORD *)v567 + 2);
            v566[3] = v571;
            long long v572 = *((_OWORD *)v567 + 5);
            v566[4] = *((_OWORD *)v567 + 4);
            v566[5] = v572;
            long long v573 = *((_OWORD *)v567 + 7);
            v566[6] = *((_OWORD *)v567 + 6);
            v566[7] = v573;
            *((unsigned char *)v566 + 128) = v567[128];
            *(_WORD *)((char *)v566 + 129) = *(_WORD *)(v567 + 129);
            *((void *)v566 + 17) = *((void *)v567 + 17);
            long long v574 = *((_OWORD *)v567 + 10);
            v566[9] = *((_OWORD *)v567 + 9);
            v566[10] = v574;
            long long v575 = *((_OWORD *)v567 + 12);
            v566[11] = *((_OWORD *)v567 + 11);
            v566[12] = v575;
            long long v576 = *((_OWORD *)v567 + 14);
            v566[13] = *((_OWORD *)v567 + 13);
            v566[14] = v576;
            long long v577 = *((_OWORD *)v567 + 16);
            v566[15] = *((_OWORD *)v567 + 15);
            v566[16] = v577;
            *((unsigned char *)v566 + 280) = v567[280];
            *((void *)v566 + 34) = *((void *)v567 + 34);
            v566[18] = *((_OWORD *)v567 + 18);
            uint64_t v578 = *(int *)(v568 + 108);
            uint64_t v1139 = (char *)v566 + v578;
            uint64_t v579 = &v567[v578];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v567[v578], 1, v1155))
            {
              uint64_t v580 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1139, v579, *(void *)(*(void *)(v580 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v1139, v579, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v1139, 0, 1, v1155);
            }
            uint64_t v601 = *(int *)(v568 + 112);
            v602 = (char *)v566 + v601;
            uint64_t v603 = &v567[v601];
            if (__swift_getEnumTagSinglePayload((uint64_t)v603, 1, v1155))
            {
              uint64_t v604 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v602, v603, *(void *)(*(void *)(v604 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v602, v603, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v602, 0, 1, v1155);
            }
            uint64_t v260 = v1150;
            __swift_storeEnumTagSinglePayload((uint64_t)v566, 0, 1, v568);
            uint64_t v262 = v1153;
          }
          uint64_t v625 = v262[9];
          uint64_t v626 = (_OWORD *)((char *)v260 + v625);
          uint64_t v627 = &v1158[v625];
          uint64_t v628 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v627, 1, (uint64_t)v628))
          {
            uint64_t v629 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v626, v627, *(void *)(*(void *)(v629 - 8) + 64));
          }
          else
          {
            long long v630 = *((_OWORD *)v627 + 1);
            _OWORD *v626 = *(_OWORD *)v627;
            v626[1] = v630;
            long long v631 = *((_OWORD *)v627 + 3);
            v626[2] = *((_OWORD *)v627 + 2);
            v626[3] = v631;
            long long v632 = *((_OWORD *)v627 + 5);
            v626[4] = *((_OWORD *)v627 + 4);
            v626[5] = v632;
            long long v633 = *((_OWORD *)v627 + 7);
            v626[6] = *((_OWORD *)v627 + 6);
            v626[7] = v633;
            *((unsigned char *)v626 + 128) = v627[128];
            *(_WORD *)((char *)v626 + 129) = *(_WORD *)(v627 + 129);
            *((void *)v626 + 17) = *((void *)v627 + 17);
            long long v634 = *((_OWORD *)v627 + 10);
            v626[9] = *((_OWORD *)v627 + 9);
            v626[10] = v634;
            long long v635 = *((_OWORD *)v627 + 12);
            v626[11] = *((_OWORD *)v627 + 11);
            v626[12] = v635;
            long long v636 = *((_OWORD *)v627 + 14);
            v626[13] = *((_OWORD *)v627 + 13);
            v626[14] = v636;
            v626[15] = *((_OWORD *)v627 + 15);
            uint64_t v637 = v628[24];
            uint64_t v1140 = (char *)v626 + v637;
            uint64_t v638 = &v627[v637];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v627[v637], 1, v1155))
            {
              uint64_t v639 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1140, v638, *(void *)(*(void *)(v639 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v1140, v638, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v1140, 0, 1, v1155);
            }
            uint64_t v660 = v628[25];
            uint64_t v1141 = (char *)v626 + v660;
            v661 = &v627[v660];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v627[v660], 1, v1155))
            {
              uint64_t v662 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1141, v661, *(void *)(*(void *)(v662 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v1141, v661, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v1141, 0, 1, v1155);
            }
            uint64_t v671 = v628[26];
            v672 = (char *)v626 + v671;
            uint64_t v673 = &v627[v671];
            uint64_t v674 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v673, 1, v674))
            {
              uint64_t v675 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v672, v673, *(void *)(*(void *)(v675 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v674 - 8) + 32))(v672, v673, v674);
              __swift_storeEnumTagSinglePayload((uint64_t)v672, 0, 1, v674);
            }
            uint64_t v260 = v1150;
            __swift_storeEnumTagSinglePayload((uint64_t)v626, 0, 1, (uint64_t)v628);
            uint64_t v262 = v1153;
          }
          uint64_t v694 = v262[10];
          uint64_t v695 = (_OWORD *)((char *)v260 + v694);
          uint64_t v696 = &v1158[v694];
          uint64_t v697 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v696, 1, (uint64_t)v697))
          {
            uint64_t v698 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v695, v696, *(void *)(*(void *)(v698 - 8) + 64));
          }
          else
          {
            long long v699 = *((_OWORD *)v696 + 1);
            *uint64_t v695 = *(_OWORD *)v696;
            v695[1] = v699;
            long long v700 = *((_OWORD *)v696 + 3);
            v695[2] = *((_OWORD *)v696 + 2);
            v695[3] = v700;
            long long v701 = *((_OWORD *)v696 + 5);
            v695[4] = *((_OWORD *)v696 + 4);
            v695[5] = v701;
            long long v702 = *((_OWORD *)v696 + 7);
            v695[6] = *((_OWORD *)v696 + 6);
            v695[7] = v702;
            *((unsigned char *)v695 + 128) = v696[128];
            *(_WORD *)((char *)v695 + 129) = *(_WORD *)(v696 + 129);
            *((void *)v695 + 17) = *((void *)v696 + 17);
            long long v703 = *((_OWORD *)v696 + 10);
            v695[9] = *((_OWORD *)v696 + 9);
            v695[10] = v703;
            long long v704 = *((_OWORD *)v696 + 12);
            v695[11] = *((_OWORD *)v696 + 11);
            v695[12] = v704;
            v695[13] = *((_OWORD *)v696 + 13);
            uint64_t v705 = v697[22];
            uint64_t v1142 = (char *)v695 + v705;
            uint64_t v706 = &v696[v705];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v696[v705], 1, v1155))
            {
              uint64_t v707 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1142, v706, *(void *)(*(void *)(v707 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v1142, v706, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v1142, 0, 1, v1155);
            }
            uint64_t v726 = v697[23];
            uint64_t v1143 = (char *)v695 + v726;
            uint64_t v727 = &v696[v726];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v696[v726], 1, v1155))
            {
              uint64_t v728 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1143, v727, *(void *)(*(void *)(v728 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v1143, v727, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v1143, 0, 1, v1155);
            }
            uint64_t v740 = v697[24];
            uint64_t v741 = (char *)v695 + v740;
            uint64_t v742 = &v696[v740];
            *(void *)uint64_t v741 = *(void *)v742;
            v741[8] = v742[8];
            uint64_t v743 = v697[25];
            uint64_t v744 = (char *)v695 + v743;
            uint64_t v745 = &v696[v743];
            uint64_t v746 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v745, 1, v746))
            {
              uint64_t v747 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v744, v745, *(void *)(*(void *)(v747 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v746 - 8) + 32))(v744, v745, v746);
              __swift_storeEnumTagSinglePayload((uint64_t)v744, 0, 1, v746);
            }
            uint64_t v260 = v1150;
            __swift_storeEnumTagSinglePayload((uint64_t)v695, 0, 1, (uint64_t)v697);
            uint64_t v262 = v1153;
          }
          uint64_t v767 = v262[11];
          uint64_t v768 = (_OWORD *)((char *)v260 + v767);
          uint64_t v769 = &v1158[v767];
          uint64_t v770 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v769, 1, (uint64_t)v770))
          {
            uint64_t v771 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v768, v769, *(void *)(*(void *)(v771 - 8) + 64));
          }
          else
          {
            long long v772 = *((_OWORD *)v769 + 1);
            *uint64_t v768 = *(_OWORD *)v769;
            v768[1] = v772;
            long long v773 = *((_OWORD *)v769 + 3);
            v768[2] = *((_OWORD *)v769 + 2);
            v768[3] = v773;
            long long v774 = *((_OWORD *)v769 + 5);
            v768[4] = *((_OWORD *)v769 + 4);
            v768[5] = v774;
            *((unsigned char *)v768 + 96) = v769[96];
            *(_OWORD *)((char *)v768 + 104) = *(_OWORD *)(v769 + 104);
            uint64_t v775 = v770[13];
            __srca = (char *)v768 + v775;
            uint64_t v776 = &v769[v775];
            uint64_t v777 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v776, 1, v777))
            {
              uint64_t v778 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(__srca, v776, *(void *)(*(void *)(v778 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v777 - 8) + 32))(__srca, v776, v777);
              __swift_storeEnumTagSinglePayload((uint64_t)__srca, 0, 1, v777);
            }
            uint64_t v794 = v770[14];
            uint64_t v1144 = (char *)v768 + v794;
            uint64_t v795 = &v769[v794];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v769[v794], 1, v777))
            {
              uint64_t v796 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1144, v795, *(void *)(*(void *)(v796 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v777 - 8) + 32))(v1144, v795, v777);
              __swift_storeEnumTagSinglePayload((uint64_t)v1144, 0, 1, v777);
            }
            *(_OWORD *)((char *)v768 + v770[15]) = *(_OWORD *)&v769[v770[15]];
            *(_OWORD *)((char *)v768 + v770[16]) = *(_OWORD *)&v769[v770[16]];
            *(_OWORD *)((char *)v768 + v770[17]) = *(_OWORD *)&v769[v770[17]];
            uint64_t v807 = v770[18];
            __dstn = &v769[v807];
            __srch = (char *)v768 + v807;
            uint64_t v808 = type metadata accessor for DateComponents();
            uint64_t v809 = *(void (**)(char *, char *, uint64_t))(*(void *)(v808 - 8) + 32);
            v809(__srch, __dstn, v808);
            v809((char *)v768 + v770[19], &v769[v770[19]], v808);
            *(_OWORD *)((char *)v768 + v770[20]) = *(_OWORD *)&v769[v770[20]];
            *(_OWORD *)((char *)v768 + v770[21]) = *(_OWORD *)&v769[v770[21]];
            *(_OWORD *)((char *)v768 + v770[22]) = *(_OWORD *)&v769[v770[22]];
            *(_OWORD *)((char *)v768 + v770[23]) = *(_OWORD *)&v769[v770[23]];
            *(_OWORD *)((char *)v768 + v770[24]) = *(_OWORD *)&v769[v770[24]];
            *(_OWORD *)((char *)v768 + v770[25]) = *(_OWORD *)&v769[v770[25]];
            *(_OWORD *)((char *)v768 + v770[26]) = *(_OWORD *)&v769[v770[26]];
            *(_OWORD *)((char *)v768 + v770[27]) = *(_OWORD *)&v769[v770[27]];
            *(_OWORD *)((char *)v768 + v770[28]) = *(_OWORD *)&v769[v770[28]];
            *(_OWORD *)((char *)v768 + v770[29]) = *(_OWORD *)&v769[v770[29]];
            *(_OWORD *)((char *)v768 + v770[30]) = *(_OWORD *)&v769[v770[30]];
            *(_OWORD *)((char *)v768 + v770[31]) = *(_OWORD *)&v769[v770[31]];
            *(_OWORD *)((char *)v768 + v770[32]) = *(_OWORD *)&v769[v770[32]];
            *(void *)((char *)v768 + v770[33]) = *(void *)&v769[v770[33]];
            *(void *)((char *)v768 + v770[34]) = *(void *)&v769[v770[34]];
            *(_OWORD *)((char *)v768 + v770[35]) = *(_OWORD *)&v769[v770[35]];
            *(_OWORD *)((char *)v768 + v770[36]) = *(_OWORD *)&v769[v770[36]];
            *(_OWORD *)((char *)v768 + v770[37]) = *(_OWORD *)&v769[v770[37]];
            uint64_t v810 = v770[38];
            uint64_t v1145 = (char *)v768 + v810;
            uint64_t v811 = &v769[v810];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v769[v810], 1, v1155))
            {
              uint64_t v812 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1145, v811, *(void *)(*(void *)(v812 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v1145, v811, v1155);
              __swift_storeEnumTagSinglePayload((uint64_t)v1145, 0, 1, v1155);
            }
            uint64_t v260 = v1150;
            *(_OWORD *)((char *)v768 + v770[39]) = *(_OWORD *)&v769[v770[39]];
            *(_OWORD *)((char *)v768 + v770[40]) = *(_OWORD *)&v769[v770[40]];
            uint64_t v840 = v770[41];
            uint64_t v841 = (char *)v768 + v840;
            uint64_t v842 = &v769[v840];
            *(void *)uint64_t v841 = *(void *)v842;
            v841[8] = v842[8];
            *(_OWORD *)((char *)v768 + v770[42]) = *(_OWORD *)&v769[v770[42]];
            uint64_t v843 = v770[43];
            uint64_t v844 = (char *)v768 + v843;
            uint64_t v845 = &v769[v843];
            *(_OWORD *)uint64_t v844 = *(_OWORD *)v845;
            *(void *)(v844 + 13) = *(void *)(v845 + 13);
            *(_OWORD *)((char *)v768 + v770[44]) = *(_OWORD *)&v769[v770[44]];
            *(_OWORD *)((char *)v768 + v770[45]) = *(_OWORD *)&v769[v770[45]];
            *(_OWORD *)((char *)v768 + v770[46]) = *(_OWORD *)&v769[v770[46]];
            *(_OWORD *)((char *)v768 + v770[47]) = *(_OWORD *)&v769[v770[47]];
            __swift_storeEnumTagSinglePayload((uint64_t)v768, 0, 1, (uint64_t)v770);
            uint64_t v262 = v1153;
          }
          uint64_t v846 = v262[12];
          uint64_t v847 = (_OWORD *)((char *)v260 + v846);
          uint64_t v848 = &v1158[v846];
          uint64_t v849 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v848, 1, (uint64_t)v849))
          {
            uint64_t v850 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v847, v848, *(void *)(*(void *)(v850 - 8) + 64));
          }
          else
          {
            long long v851 = *((_OWORD *)v848 + 1);
            *uint64_t v847 = *(_OWORD *)v848;
            v847[1] = v851;
            long long v852 = *((_OWORD *)v848 + 3);
            v847[2] = *((_OWORD *)v848 + 2);
            v847[3] = v852;
            long long v853 = *((_OWORD *)v848 + 5);
            v847[4] = *((_OWORD *)v848 + 4);
            v847[5] = v853;
            *((unsigned char *)v847 + 96) = v848[96];
            *(_OWORD *)((char *)v847 + 104) = *(_OWORD *)(v848 + 104);
            *(_OWORD *)((char *)v847 + 120) = *(_OWORD *)(v848 + 120);
            uint64_t v854 = v849[14];
            uint64_t v1146 = (char *)v847 + v854;
            uint64_t v855 = &v848[v854];
            uint64_t v856 = type metadata accessor for DateComponents();
            __srcc = v855;
            uint64_t v857 = (uint64_t)v855;
            uint64_t v858 = v856;
            if (__swift_getEnumTagSinglePayload(v857, 1, v856))
            {
              uint64_t v859 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1146, __srcc, *(void *)(*(void *)(v859 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, void *, uint64_t))(*(void *)(v858 - 8) + 32))(v1146, __srcc, v858);
              __swift_storeEnumTagSinglePayload((uint64_t)v1146, 0, 1, v858);
            }
            uint64_t v878 = v849[15];
            __srcf = &v848[v878];
            uint64_t v1147 = (char *)v847 + v878;
            if (__swift_getEnumTagSinglePayload((uint64_t)&v848[v878], 1, v858))
            {
              uint64_t v879 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1147, __srcf, *(void *)(*(void *)(v879 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v858 - 8) + 32))(v1147, __srcf, v858);
              __swift_storeEnumTagSinglePayload((uint64_t)v1147, 0, 1, v858);
            }
            *(_OWORD *)((char *)v847 + v849[16]) = *(_OWORD *)&v848[v849[16]];
            *(_OWORD *)((char *)v847 + v849[17]) = *(_OWORD *)&v848[v849[17]];
            *(_OWORD *)((char *)v847 + v849[18]) = *(_OWORD *)&v848[v849[18]];
            *(_OWORD *)((char *)v847 + v849[19]) = *(_OWORD *)&v848[v849[19]];
            *(_OWORD *)((char *)v847 + v849[20]) = *(_OWORD *)&v848[v849[20]];
            *(void *)((char *)v847 + v849[21]) = *(void *)&v848[v849[21]];
            *(void *)((char *)v847 + v849[22]) = *(void *)&v848[v849[22]];
            uint64_t v906 = v849[23];
            uint64_t v907 = (char *)v847 + v906;
            uint64_t v908 = &v848[v906];
            v907[8] = v908[8];
            *(void *)uint64_t v907 = *(void *)v908;
            uint64_t v909 = v849[24];
            uint64_t v910 = (char *)v847 + v909;
            uint64_t v911 = &v848[v909];
            v910[8] = v911[8];
            *(void *)uint64_t v910 = *(void *)v911;
            *(_OWORD *)((char *)v847 + v849[25]) = *(_OWORD *)&v848[v849[25]];
            *(_OWORD *)((char *)v847 + v849[26]) = *(_OWORD *)&v848[v849[26]];
            *(_OWORD *)((char *)v847 + v849[27]) = *(_OWORD *)&v848[v849[27]];
            *(_OWORD *)((char *)v847 + v849[28]) = *(_OWORD *)&v848[v849[28]];
            uint64_t v912 = v849[29];
            uint64_t v913 = (char *)v847 + v912;
            uint64_t v914 = &v848[v912];
            *(void *)uint64_t v913 = *(void *)v914;
            v913[8] = v914[8];
            __swift_storeEnumTagSinglePayload((uint64_t)v847, 0, 1, (uint64_t)v849);
            uint64_t v262 = v1153;
          }
          uint64_t v915 = v262[13];
          uint64_t v916 = (_OWORD *)((char *)v260 + v915);
          uint64_t v917 = &v1158[v915];
          uint64_t v918 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v917, 1, (uint64_t)v918))
          {
            uint64_t v919 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v916, v917, *(void *)(*(void *)(v919 - 8) + 64));
          }
          else
          {
            long long v920 = *((_OWORD *)v917 + 1);
            *uint64_t v916 = *(_OWORD *)v917;
            v916[1] = v920;
            long long v921 = *((_OWORD *)v917 + 3);
            v916[2] = *((_OWORD *)v917 + 2);
            v916[3] = v921;
            long long v922 = *((_OWORD *)v917 + 5);
            v916[4] = *((_OWORD *)v917 + 4);
            v916[5] = v922;
            *((unsigned char *)v916 + 96) = v917[96];
            *(_OWORD *)((char *)v916 + 104) = *(_OWORD *)(v917 + 104);
            *(_OWORD *)((char *)v916 + 120) = *(_OWORD *)(v917 + 120);
            uint64_t v923 = v918[14];
            uint64_t v1161 = (char *)v916 + v923;
            uint64_t v924 = &v917[v923];
            uint64_t v925 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v924, 1, v925))
            {
              uint64_t v926 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1161, v924, *(void *)(*(void *)(v926 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v925 - 8) + 32))(v1161, v924, v925);
              __swift_storeEnumTagSinglePayload((uint64_t)v1161, 0, 1, v925);
            }
            *(_OWORD *)((char *)v916 + v918[15]) = *(_OWORD *)&v917[v918[15]];
            *(_OWORD *)((char *)v916 + v918[16]) = *(_OWORD *)&v917[v918[16]];
            *(_OWORD *)((char *)v916 + v918[17]) = *(_OWORD *)&v917[v918[17]];
            *(_OWORD *)((char *)v916 + v918[18]) = *(_OWORD *)&v917[v918[18]];
            *(_OWORD *)((char *)v916 + v918[19]) = *(_OWORD *)&v917[v918[19]];
            *(void *)((char *)v916 + v918[20]) = *(void *)&v917[v918[20]];
            *(_OWORD *)((char *)v916 + v918[21]) = *(_OWORD *)&v917[v918[21]];
            *(_OWORD *)((char *)v916 + v918[22]) = *(_OWORD *)&v917[v918[22]];
            *(_OWORD *)((char *)v916 + v918[23]) = *(_OWORD *)&v917[v918[23]];
            __swift_storeEnumTagSinglePayload((uint64_t)v916, 0, 1, (uint64_t)v918);
            uint64_t v260 = v1150;
            uint64_t v262 = v1153;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v260, 0, 1, (uint64_t)v262);
        }
        uint64_t v999 = v1189[18];
        uint64_t v1000 = (_OWORD *)((char *)v12 + v999);
        uint64_t v1001 = (_OWORD *)((char *)v13 + v999);
        uint64_t v1002 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1001, 1, (uint64_t)v1002))
        {
          uint64_t v1003 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v1000, v1001, *(void *)(*(void *)(v1003 - 8) + 64));
        }
        else
        {
          long long v1004 = v1001[1];
          *uint64_t v1000 = *v1001;
          v1000[1] = v1004;
          long long v1005 = v1001[3];
          v1000[2] = v1001[2];
          v1000[3] = v1005;
          long long v1006 = v1001[5];
          v1000[4] = v1001[4];
          v1000[5] = v1006;
          uint64_t v1007 = v1002[10];
          uint64_t v1170 = (char *)v1000 + v1007;
          uint64_t v1008 = (char *)v1001 + v1007;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1001 + v1007, 1, v1155))
          {
            uint64_t v1009 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1170, v1008, *(void *)(*(void *)(v1009 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v1170, v1008, v1155);
            __swift_storeEnumTagSinglePayload((uint64_t)v1170, 0, 1, v1155);
          }
          uint64_t v1010 = v1002[11];
          uint64_t v1171 = (char *)v1000 + v1010;
          uint64_t v1011 = (char *)v1001 + v1010;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1001 + v1010, 1, v1155))
          {
            uint64_t v1012 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1171, v1011, *(void *)(*(void *)(v1012 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v1171, v1011, v1155);
            __swift_storeEnumTagSinglePayload((uint64_t)v1171, 0, 1, v1155);
          }
          *(_OWORD *)((char *)v1000 + v1002[12]) = *(_OWORD *)((char *)v1001 + v1002[12]);
          *(_OWORD *)((char *)v1000 + v1002[13]) = *(_OWORD *)((char *)v1001 + v1002[13]);
          *(_OWORD *)((char *)v1000 + v1002[14]) = *(_OWORD *)((char *)v1001 + v1002[14]);
          uint64_t v1013 = v1002[15];
          uint64_t v1172 = (char *)v1000 + v1013;
          uint64_t v1014 = (char *)v1001 + v1013;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1001 + v1013, 1, v1155))
          {
            uint64_t v1015 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1172, v1014, *(void *)(*(void *)(v1015 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v1172, v1014, v1155);
            __swift_storeEnumTagSinglePayload((uint64_t)v1172, 0, 1, v1155);
          }
          *(_OWORD *)((char *)v1000 + v1002[16]) = *(_OWORD *)((char *)v1001 + v1002[16]);
          *(_OWORD *)((char *)v1000 + v1002[17]) = *(_OWORD *)((char *)v1001 + v1002[17]);
          *(_OWORD *)((char *)v1000 + v1002[18]) = *(_OWORD *)((char *)v1001 + v1002[18]);
          *(_OWORD *)((char *)v1000 + v1002[19]) = *(_OWORD *)((char *)v1001 + v1002[19]);
          *(_OWORD *)((char *)v1000 + v1002[20]) = *(_OWORD *)((char *)v1001 + v1002[20]);
          *(_OWORD *)((char *)v1000 + v1002[21]) = *(_OWORD *)((char *)v1001 + v1002[21]);
          *(_OWORD *)((char *)v1000 + v1002[22]) = *(_OWORD *)((char *)v1001 + v1002[22]);
          *(_OWORD *)((char *)v1000 + v1002[23]) = *(_OWORD *)((char *)v1001 + v1002[23]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1000, 0, 1, (uint64_t)v1002);
        }
        uint64_t v1016 = v1189[19];
        uint64_t v1017 = (_OWORD *)((char *)v12 + v1016);
        uint64_t v1018 = (_OWORD *)((char *)v13 + v1016);
        uint64_t v1019 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1018, 1, (uint64_t)v1019))
        {
          uint64_t v1020 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v1017, v1018, *(void *)(*(void *)(v1020 - 8) + 64));
        }
        else
        {
          long long v1021 = v1018[1];
          *uint64_t v1017 = *v1018;
          v1017[1] = v1021;
          long long v1022 = v1018[3];
          v1017[2] = v1018[2];
          v1017[3] = v1022;
          long long v1023 = v1018[5];
          v1017[4] = v1018[4];
          v1017[5] = v1023;
          uint64_t v1024 = v1019[11];
          uint64_t v1173 = (char *)v1017 + v1024;
          uint64_t v1025 = (char *)v1018 + v1024;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1018 + v1024, 1, v1155))
          {
            uint64_t v1026 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1173, v1025, *(void *)(*(void *)(v1026 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v1173, v1025, v1155);
            __swift_storeEnumTagSinglePayload((uint64_t)v1173, 0, 1, v1155);
          }
          *(_OWORD *)((char *)v1017 + v1019[12]) = *(_OWORD *)((char *)v1018 + v1019[12]);
          *(void *)((char *)v1017 + v1019[13]) = *(void *)((char *)v1018 + v1019[13]);
          uint64_t v1027 = v1019[14];
          uint64_t v1174 = (char *)v1017 + v1027;
          uint64_t v1028 = (char *)v1018 + v1027;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1018 + v1027, 1, v1155))
          {
            uint64_t v1029 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1174, v1028, *(void *)(*(void *)(v1029 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v1174, v1028, v1155);
            __swift_storeEnumTagSinglePayload((uint64_t)v1174, 0, 1, v1155);
          }
          *(void *)((char *)v1017 + v1019[15]) = *(void *)((char *)v1018 + v1019[15]);
          *(void *)((char *)v1017 + v1019[16]) = *(void *)((char *)v1018 + v1019[16]);
          *(_OWORD *)((char *)v1017 + v1019[17]) = *(_OWORD *)((char *)v1018 + v1019[17]);
          *(void *)((char *)v1017 + v1019[18]) = *(void *)((char *)v1018 + v1019[18]);
          *(void *)((char *)v1017 + v1019[19]) = *(void *)((char *)v1018 + v1019[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1017, 0, 1, (uint64_t)v1019);
        }
        uint64_t v1030 = v1189[20];
        uint64_t v1031 = (_OWORD *)((char *)v12 + v1030);
        uint64_t v1032 = (_OWORD *)((char *)v13 + v1030);
        uint64_t v1033 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1032, 1, (uint64_t)v1033))
        {
          uint64_t v1034 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v1031, v1032, *(void *)(*(void *)(v1034 - 8) + 64));
        }
        else
        {
          long long v1035 = v1032[1];
          *uint64_t v1031 = *v1032;
          v1031[1] = v1035;
          long long v1036 = v1032[3];
          v1031[2] = v1032[2];
          v1031[3] = v1036;
          uint64_t v1037 = v1033[8];
          uint64_t v1175 = (char *)v1031 + v1037;
          uint64_t v1038 = (char *)v1032 + v1037;
          uint64_t v1039 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1038, 1, v1039))
          {
            uint64_t v1040 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v1175, v1038, *(void *)(*(void *)(v1040 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1039 - 8) + 32))(v1175, v1038, v1039);
            __swift_storeEnumTagSinglePayload((uint64_t)v1175, 0, 1, v1039);
          }
          *(_OWORD *)((char *)v1031 + v1033[9]) = *(_OWORD *)((char *)v1032 + v1033[9]);
          *(_OWORD *)((char *)v1031 + v1033[10]) = *(_OWORD *)((char *)v1032 + v1033[10]);
          *(_OWORD *)((char *)v1031 + v1033[11]) = *(_OWORD *)((char *)v1032 + v1033[11]);
          uint64_t v1041 = v1033[12];
          uint64_t v1176 = (char *)v1031 + v1041;
          uint64_t v1042 = (char *)v1032 + v1041;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1032 + v1041, 1, v1155))
          {
            uint64_t v1043 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1176, v1042, *(void *)(*(void *)(v1043 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v1176, v1042, v1155);
            __swift_storeEnumTagSinglePayload((uint64_t)v1176, 0, 1, v1155);
          }
          uint64_t v1044 = v1033[13];
          uint64_t v1177 = (char *)v1031 + v1044;
          uint64_t v1045 = (char *)v1032 + v1044;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1032 + v1044, 1, v1155))
          {
            uint64_t v1046 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1177, v1045, *(void *)(*(void *)(v1046 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1155 - 8) + 32))(v1177, v1045, v1155);
            __swift_storeEnumTagSinglePayload((uint64_t)v1177, 0, 1, v1155);
          }
          uint64_t v1047 = v1033[14];
          uint64_t v1048 = (char *)v1031 + v1047;
          uint64_t v1049 = (char *)v1032 + v1047;
          *(void *)uint64_t v1048 = *(void *)v1049;
          v1048[8] = v1049[8];
          *(_OWORD *)((char *)v1031 + v1033[15]) = *(_OWORD *)((char *)v1032 + v1033[15]);
          *(_OWORD *)((char *)v1031 + v1033[16]) = *(_OWORD *)((char *)v1032 + v1033[16]);
          *(_OWORD *)((char *)v1031 + v1033[17]) = *(_OWORD *)((char *)v1032 + v1033[17]);
          *(_OWORD *)((char *)v1031 + v1033[18]) = *(_OWORD *)((char *)v1032 + v1033[18]);
          *(_OWORD *)((char *)v1031 + v1033[19]) = *(_OWORD *)((char *)v1032 + v1033[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1031, 0, 1, (uint64_t)v1033);
        }
        uint64_t v14 = v1193;
        memcpy((char *)v12 + v1189[21], (char *)v13 + v1189[21], 0x90uLL);
        goto LABEL_524;
      case 4u:
        uint64_t v55 = v14;
        long long v56 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v56;
        long long v57 = v13[3];
        v12[2] = v13[2];
        v12[3] = v57;
        uint64_t v58 = type metadata accessor for NoteDocument(0);
        uint64_t v59 = *(int *)(v58 + 32);
        uint64_t v60 = (char *)v12 + v59;
        uint64_t v61 = (char *)v13 + v59;
        uint64_t v62 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
        {
          uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v62);
        }
        uint64_t v14 = v55;
        uint64_t v264 = *(int *)(v58 + 36);
        uint64_t v265 = (char *)v12 + v264;
        uint64_t v266 = (char *)v13 + v264;
        if (__swift_getEnumTagSinglePayload((uint64_t)v13 + v264, 1, v62)) {
          goto LABEL_139;
        }
        goto LABEL_136;
      case 5u:
        uint64_t v64 = v14;
        long long v65 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v65;
        v12[2] = v13[2];
        uint64_t v66 = (int *)type metadata accessor for Reminder(0);
        uint64_t v67 = v66[7];
        uint64_t v68 = (char *)v12 + v67;
        uint64_t v69 = (char *)v13 + v67;
        uint64_t v70 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, v70))
        {
          uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
          __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v70);
        }
        uint64_t v267 = v66[8];
        uint64_t v268 = (char *)v12 + v267;
        uint64_t v269 = (char *)v13 + v267;
        if (__swift_getEnumTagSinglePayload((uint64_t)v13 + v267, 1, v70))
        {
          uint64_t v270 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v268, v269, *(void *)(*(void *)(v270 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v268, v269, v70);
          __swift_storeEnumTagSinglePayload((uint64_t)v268, 0, 1, v70);
        }
        uint64_t v14 = v64;
        *((unsigned char *)v12 + v66[9]) = *((unsigned char *)v13 + v66[9]);
        *(_OWORD *)((char *)v12 + v66[10]) = *(_OWORD *)((char *)v13 + v66[10]);
        *(_OWORD *)((char *)v12 + v66[11]) = *(_OWORD *)((char *)v13 + v66[11]);
        uint64_t v329 = v66[12];
        uint64_t v89 = (char *)v12 + v329;
        uint64_t v90 = (char *)v13 + v329;
        uint64_t v91 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, v91)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 6u:
        long long v72 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v72;
        long long v73 = v13[3];
        v12[2] = v13[2];
        v12[3] = v73;
        uint64_t v74 = (int *)type metadata accessor for PhoneHistory(0);
        uint64_t v75 = v74[10];
        uint64_t v76 = (char *)v12 + v75;
        uint64_t v77 = (char *)v13 + v75;
        uint64_t v78 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v78))
        {
          uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
          __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v78);
        }
        *(_OWORD *)((char *)v12 + v74[11]) = *(_OWORD *)((char *)v13 + v74[11]);
        *(_OWORD *)((char *)v12 + v74[12]) = *(_OWORD *)((char *)v13 + v74[12]);
        uint64_t v271 = v74[13];
        uint64_t v89 = (char *)v12 + v271;
        uint64_t v90 = (char *)v13 + v271;
        uint64_t v91 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, v91)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 7u:
        long long v80 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v80;
        v12[2] = v13[2];
        uint64_t v81 = type metadata accessor for VoicemailTranscript(0);
        uint64_t v82 = *(int *)(v81 + 28);
        uint64_t v83 = (char *)v12 + v82;
        uint64_t v84 = (char *)v13 + v82;
        uint64_t v85 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v85))
        {
          uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v83, v84, v85);
          __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v85);
        }
        uint64_t v272 = *(int *)(v81 + 32);
        uint64_t v89 = (char *)v12 + v272;
        uint64_t v90 = (char *)v13 + v272;
        uint64_t v91 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, v91)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 8u:
        long long v87 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v87;
        v12[2] = v13[2];
        uint64_t v88 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
        uint64_t v89 = (char *)v12 + v88;
        uint64_t v90 = (char *)v13 + v88;
        uint64_t v91 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, v91)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 9u:
        long long v92 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v92;
        uint64_t v93 = (int *)type metadata accessor for VoiceMemo(0);
        uint64_t v94 = v93[6];
        uint64_t v95 = (char *)v12 + v94;
        uint64_t v96 = (char *)v13 + v94;
        uint64_t v97 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v96, 1, v97))
        {
          uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 32))(v95, v96, v97);
          __swift_storeEnumTagSinglePayload((uint64_t)v95, 0, 1, v97);
        }
        uint64_t v273 = v93[7];
        uint64_t v274 = (char *)v12 + v273;
        uint64_t v275 = (char *)v13 + v273;
        *(void *)uint64_t v274 = *(void *)v275;
        v274[8] = v275[8];
        uint64_t v276 = v93[8];
        uint64_t v89 = (char *)v12 + v276;
        uint64_t v90 = (char *)v13 + v276;
        uint64_t v91 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, v91)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 0xAu:
        uint64_t v99 = v14;
        long long v100 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v100;
        uint64_t v101 = (int *)type metadata accessor for Safari(0);
        uint64_t v102 = v101[6];
        uint64_t v103 = (char *)v12 + v102;
        uint64_t v104 = (char *)v13 + v102;
        uint64_t v105 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v104, 1, v105))
        {
          uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v103, v104, *(void *)(*(void *)(v106 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
          __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, v105);
        }
        uint64_t v14 = v99;
        *(_OWORD *)((char *)v12 + v101[7]) = *(_OWORD *)((char *)v13 + v101[7]);
        *(_OWORD *)((char *)v12 + v101[8]) = *(_OWORD *)((char *)v13 + v101[8]);
        uint64_t v277 = v101[9];
        unint64_t v278 = (char *)v12 + v277;
        uint64_t v279 = (char *)v13 + v277;
        if (__swift_getEnumTagSinglePayload((uint64_t)v13 + v277, 1, v105))
        {
          uint64_t v280 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v278, v279, *(void *)(*(void *)(v280 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v278, v279, v105);
          __swift_storeEnumTagSinglePayload((uint64_t)v278, 0, 1, v105);
        }
        goto LABEL_524;
      case 0xCu:
        long long v107 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v107;
        v12[2] = v13[2];
        uint64_t v108 = (int *)type metadata accessor for WalletTransaction(0);
        uint64_t v109 = v108[7];
        uint64_t v110 = (char *)v12 + v109;
        uint64_t v111 = (char *)v13 + v109;
        uint64_t v112 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v111, 1, v112))
        {
          uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v110, v111, *(void *)(*(void *)(v113 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32))(v110, v111, v112);
          __swift_storeEnumTagSinglePayload((uint64_t)v110, 0, 1, v112);
        }
        *(_OWORD *)((char *)v12 + v108[8]) = *(_OWORD *)((char *)v13 + v108[8]);
        *(_OWORD *)((char *)v12 + v108[9]) = *(_OWORD *)((char *)v13 + v108[9]);
        *(_OWORD *)((char *)v12 + v108[10]) = *(_OWORD *)((char *)v13 + v108[10]);
        uint64_t v281 = v108[11];
        uint64_t v282 = (char *)v12 + v281;
        uint64_t v283 = (char *)v13 + v281;
        *(void *)(v282 + 13) = *(void *)(v283 + 13);
        *(_OWORD *)uint64_t v282 = *(_OWORD *)v283;
        *(_OWORD *)((char *)v12 + v108[12]) = *(_OWORD *)((char *)v13 + v108[12]);
        goto LABEL_524;
      case 0xDu:
        long long v114 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v114;
        v12[2] = v13[2];
        uint64_t v115 = (int *)type metadata accessor for WalletPass(0);
        uint64_t v116 = v115[7];
        uint64_t v117 = (char *)v12 + v116;
        uint64_t v118 = (char *)v13 + v116;
        uint64_t v119 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v118, 1, v119))
        {
          uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
          __swift_storeEnumTagSinglePayload((uint64_t)v117, 0, 1, v119);
        }
        *(_OWORD *)((char *)v12 + v115[8]) = *(_OWORD *)((char *)v13 + v115[8]);
        *(void *)((char *)v12 + v115[9]) = *(void *)((char *)v13 + v115[9]);
        goto LABEL_524;
      case 0xFu:
        uint64_t v1191 = v14;
        long long v121 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v121;
        long long v122 = v13[3];
        v12[2] = v13[2];
        v12[3] = v122;
        long long v123 = v13[5];
        v12[4] = v13[4];
        v12[5] = v123;
        *((unsigned char *)v12 + 96) = *((unsigned char *)v13 + 96);
        *(_OWORD *)((char *)v12 + 104) = *(_OWORD *)((char *)v13 + 104);
        uint64_t v124 = (int *)type metadata accessor for FlightReservation(0);
        uint64_t v125 = v124[13];
        uint64_t v126 = (char *)v12 + v125;
        uint64_t v127 = (char *)v13 + v125;
        uint64_t v128 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v127, 1, v128))
        {
          uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v126, v127, *(void *)(*(void *)(v129 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v126, v127, v128);
          __swift_storeEnumTagSinglePayload((uint64_t)v126, 0, 1, v128);
        }
        uint64_t v284 = v124[14];
        uint64_t v285 = (char *)v12 + v284;
        uint64_t v286 = (char *)v13 + v284;
        if (__swift_getEnumTagSinglePayload((uint64_t)v13 + v284, 1, v128))
        {
          uint64_t v287 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v285, v286, *(void *)(*(void *)(v287 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v285, v286, v128);
          __swift_storeEnumTagSinglePayload((uint64_t)v285, 0, 1, v128);
        }
        *(_OWORD *)((char *)v12 + v124[15]) = *(_OWORD *)((char *)v13 + v124[15]);
        *(_OWORD *)((char *)v12 + v124[16]) = *(_OWORD *)((char *)v13 + v124[16]);
        *(_OWORD *)((char *)v12 + v124[17]) = *(_OWORD *)((char *)v13 + v124[17]);
        uint64_t v330 = v124[18];
        uint64_t v331 = (char *)v12 + v330;
        uint64_t v332 = (char *)v13 + v330;
        uint64_t v333 = type metadata accessor for DateComponents();
        uint64_t v334 = *(void (**)(char *, char *, uint64_t))(*(void *)(v333 - 8) + 32);
        v334(v331, v332, v333);
        v334((char *)v12 + v124[19], (char *)v13 + v124[19], v333);
        *(_OWORD *)((char *)v12 + v124[20]) = *(_OWORD *)((char *)v13 + v124[20]);
        *(_OWORD *)((char *)v12 + v124[21]) = *(_OWORD *)((char *)v13 + v124[21]);
        *(_OWORD *)((char *)v12 + v124[22]) = *(_OWORD *)((char *)v13 + v124[22]);
        *(_OWORD *)((char *)v12 + v124[23]) = *(_OWORD *)((char *)v13 + v124[23]);
        *(_OWORD *)((char *)v12 + v124[24]) = *(_OWORD *)((char *)v13 + v124[24]);
        *(_OWORD *)((char *)v12 + v124[25]) = *(_OWORD *)((char *)v13 + v124[25]);
        *(_OWORD *)((char *)v12 + v124[26]) = *(_OWORD *)((char *)v13 + v124[26]);
        *(_OWORD *)((char *)v12 + v124[27]) = *(_OWORD *)((char *)v13 + v124[27]);
        *(_OWORD *)((char *)v12 + v124[28]) = *(_OWORD *)((char *)v13 + v124[28]);
        *(_OWORD *)((char *)v12 + v124[29]) = *(_OWORD *)((char *)v13 + v124[29]);
        *(_OWORD *)((char *)v12 + v124[30]) = *(_OWORD *)((char *)v13 + v124[30]);
        *(_OWORD *)((char *)v12 + v124[31]) = *(_OWORD *)((char *)v13 + v124[31]);
        *(_OWORD *)((char *)v12 + v124[32]) = *(_OWORD *)((char *)v13 + v124[32]);
        *(void *)((char *)v12 + v124[33]) = *(void *)((char *)v13 + v124[33]);
        *(void *)((char *)v12 + v124[34]) = *(void *)((char *)v13 + v124[34]);
        *(_OWORD *)((char *)v12 + v124[35]) = *(_OWORD *)((char *)v13 + v124[35]);
        *(_OWORD *)((char *)v12 + v124[36]) = *(_OWORD *)((char *)v13 + v124[36]);
        *(_OWORD *)((char *)v12 + v124[37]) = *(_OWORD *)((char *)v13 + v124[37]);
        uint64_t v335 = v124[38];
        uint64_t v336 = (char *)v12 + v335;
        uint64_t v337 = (char *)v13 + v335;
        uint64_t v338 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v337, 1, v338))
        {
          uint64_t v339 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v336, v337, *(void *)(*(void *)(v339 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v338 - 8) + 32))(v336, v337, v338);
          __swift_storeEnumTagSinglePayload((uint64_t)v336, 0, 1, v338);
        }
        uint64_t v14 = v1191;
        *(_OWORD *)((char *)v12 + v124[39]) = *(_OWORD *)((char *)v13 + v124[39]);
        *(_OWORD *)((char *)v12 + v124[40]) = *(_OWORD *)((char *)v13 + v124[40]);
        uint64_t v364 = v124[41];
        long long v365 = (char *)v12 + v364;
        uint64_t v366 = (char *)v13 + v364;
        *(void *)long long v365 = *(void *)v366;
        v365[8] = v366[8];
        *(_OWORD *)((char *)v12 + v124[42]) = *(_OWORD *)((char *)v13 + v124[42]);
        uint64_t v367 = v124[43];
        id v368 = (char *)v12 + v367;
        uint64_t v369 = (char *)v13 + v367;
        *(_OWORD *)id v368 = *(_OWORD *)v369;
        *(void *)(v368 + 13) = *(void *)(v369 + 13);
        *(_OWORD *)((char *)v12 + v124[44]) = *(_OWORD *)((char *)v13 + v124[44]);
        *(_OWORD *)((char *)v12 + v124[45]) = *(_OWORD *)((char *)v13 + v124[45]);
        *(_OWORD *)((char *)v12 + v124[46]) = *(_OWORD *)((char *)v13 + v124[46]);
        *(_OWORD *)((char *)v12 + v124[47]) = *(_OWORD *)((char *)v13 + v124[47]);
        uint64_t v370 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
        *(void *)((char *)v12 + *(int *)(v370 + 48)) = *(void *)((char *)v13 + *(int *)(v370 + 48));
        goto LABEL_524;
      case 0x10u:
        uint64_t v130 = v14;
        long long v131 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v131;
        long long v132 = v13[3];
        v12[2] = v13[2];
        v12[3] = v132;
        long long v133 = v13[5];
        v12[4] = v13[4];
        v12[5] = v133;
        *((unsigned char *)v12 + 96) = *((unsigned char *)v13 + 96);
        *(_OWORD *)((char *)v12 + 104) = *(_OWORD *)((char *)v13 + 104);
        *(_OWORD *)((char *)v12 + 120) = *(_OWORD *)((char *)v13 + 120);
        uint64_t v134 = (int *)type metadata accessor for HotelReservation(0);
        uint64_t v135 = v134[14];
        uint64_t v136 = (char *)v12 + v135;
        uint64_t v137 = (char *)v13 + v135;
        uint64_t v138 = type metadata accessor for DateComponents();
        if (__swift_getEnumTagSinglePayload((uint64_t)v137, 1, v138))
        {
          uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v136, v137, *(void *)(*(void *)(v139 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 32))(v136, v137, v138);
          __swift_storeEnumTagSinglePayload((uint64_t)v136, 0, 1, v138);
        }
        uint64_t v288 = v134[15];
        uint64_t v289 = (char *)v12 + v288;
        uint64_t v290 = (char *)v13 + v288;
        if (__swift_getEnumTagSinglePayload((uint64_t)v13 + v288, 1, v138))
        {
          uint64_t v291 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v289, v290, *(void *)(*(void *)(v291 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 32))(v289, v290, v138);
          __swift_storeEnumTagSinglePayload((uint64_t)v289, 0, 1, v138);
        }
        uint64_t v14 = v130;
        *(_OWORD *)((char *)v12 + v134[16]) = *(_OWORD *)((char *)v13 + v134[16]);
        *(_OWORD *)((char *)v12 + v134[17]) = *(_OWORD *)((char *)v13 + v134[17]);
        *(_OWORD *)((char *)v12 + v134[18]) = *(_OWORD *)((char *)v13 + v134[18]);
        *(_OWORD *)((char *)v12 + v134[19]) = *(_OWORD *)((char *)v13 + v134[19]);
        *(_OWORD *)((char *)v12 + v134[20]) = *(_OWORD *)((char *)v13 + v134[20]);
        *(void *)((char *)v12 + v134[21]) = *(void *)((char *)v13 + v134[21]);
        *(void *)((char *)v12 + v134[22]) = *(void *)((char *)v13 + v134[22]);
        uint64_t v340 = v134[23];
        uint64_t v341 = (char *)v12 + v340;
        uint64_t v342 = (char *)v13 + v340;
        v341[8] = v342[8];
        *(void *)uint64_t v341 = *(void *)v342;
        uint64_t v343 = v134[24];
        uint64_t v344 = (char *)v12 + v343;
        uint64_t v345 = (char *)v13 + v343;
        v344[8] = v345[8];
        *(void *)uint64_t v344 = *(void *)v345;
        *(_OWORD *)((char *)v12 + v134[25]) = *(_OWORD *)((char *)v13 + v134[25]);
        *(_OWORD *)((char *)v12 + v134[26]) = *(_OWORD *)((char *)v13 + v134[26]);
        *(_OWORD *)((char *)v12 + v134[27]) = *(_OWORD *)((char *)v13 + v134[27]);
        *(_OWORD *)((char *)v12 + v134[28]) = *(_OWORD *)((char *)v13 + v134[28]);
        uint64_t v346 = v134[29];
        uint64_t v347 = (char *)v12 + v346;
        Swift::String v348 = (char *)v13 + v346;
        *(void *)uint64_t v347 = *(void *)v348;
        v347[8] = v348[8];
        goto LABEL_524;
      case 0x11u:
        long long v140 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v140;
        long long v141 = v13[3];
        v12[2] = v13[2];
        v12[3] = v141;
        long long v142 = v13[5];
        v12[4] = v13[4];
        v12[5] = v142;
        *((unsigned char *)v12 + 96) = *((unsigned char *)v13 + 96);
        *(_OWORD *)((char *)v12 + 104) = *(_OWORD *)((char *)v13 + 104);
        *(_OWORD *)((char *)v12 + 120) = *(_OWORD *)((char *)v13 + 120);
        uint64_t v143 = (int *)type metadata accessor for RestaurantReservation(0);
        uint64_t v144 = v143[14];
        uint64_t v145 = (char *)v12 + v144;
        uint64_t v146 = (char *)v13 + v144;
        uint64_t v147 = type metadata accessor for DateComponents();
        if (__swift_getEnumTagSinglePayload((uint64_t)v146, 1, v147))
        {
          uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v145, v146, *(void *)(*(void *)(v148 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32))(v145, v146, v147);
          __swift_storeEnumTagSinglePayload((uint64_t)v145, 0, 1, v147);
        }
        *(_OWORD *)((char *)v12 + v143[15]) = *(_OWORD *)((char *)v13 + v143[15]);
        *(_OWORD *)((char *)v12 + v143[16]) = *(_OWORD *)((char *)v13 + v143[16]);
        *(_OWORD *)((char *)v12 + v143[17]) = *(_OWORD *)((char *)v13 + v143[17]);
        *(_OWORD *)((char *)v12 + v143[18]) = *(_OWORD *)((char *)v13 + v143[18]);
        *(_OWORD *)((char *)v12 + v143[19]) = *(_OWORD *)((char *)v13 + v143[19]);
        *(void *)((char *)v12 + v143[20]) = *(void *)((char *)v13 + v143[20]);
        *(_OWORD *)((char *)v12 + v143[21]) = *(_OWORD *)((char *)v13 + v143[21]);
        *(_OWORD *)((char *)v12 + v143[22]) = *(_OWORD *)((char *)v13 + v143[22]);
        *(_OWORD *)((char *)v12 + v143[23]) = *(_OWORD *)((char *)v13 + v143[23]);
        goto LABEL_524;
      case 0x12u:
        uint64_t v149 = v14;
        long long v150 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v150;
        long long v151 = v13[3];
        v12[2] = v13[2];
        v12[3] = v151;
        long long v152 = v13[5];
        v12[4] = v13[4];
        v12[5] = v152;
        long long v153 = v13[7];
        v12[6] = v13[6];
        v12[7] = v153;
        *((unsigned char *)v12 + 128) = *((unsigned char *)v13 + 128);
        *(_WORD *)((char *)v12 + 129) = *(_WORD *)((char *)v13 + 129);
        *((void *)v12 + 17) = *((void *)v13 + 17);
        long long v154 = v13[10];
        v12[9] = v13[9];
        v12[10] = v154;
        long long v155 = v13[12];
        v12[11] = v13[11];
        v12[12] = v155;
        long long v156 = v13[14];
        v12[13] = v13[13];
        v12[14] = v156;
        v12[15] = v13[15];
        *((void *)v12 + 32) = *((void *)v13 + 32);
        *(_OWORD *)((char *)v12 + 264) = *(_OWORD *)((char *)v13 + 264);
        *(_OWORD *)((char *)v12 + 280) = *(_OWORD *)((char *)v13 + 280);
        *(_OWORD *)((char *)v12 + 296) = *(_OWORD *)((char *)v13 + 296);
        *(_OWORD *)((char *)v12 + 312) = *(_OWORD *)((char *)v13 + 312);
        *(_OWORD *)((char *)v12 + 328) = *(_OWORD *)((char *)v13 + 328);
        *(_OWORD *)((char *)v12 + 344) = *(_OWORD *)((char *)v13 + 344);
        *(_OWORD *)((char *)v12 + 360) = *(_OWORD *)((char *)v13 + 360);
        *((unsigned char *)v12 + 384) = *((unsigned char *)v13 + 384);
        *((void *)v12 + 47) = *((void *)v13 + 47);
        *(_OWORD *)((char *)v12 + 392) = *(_OWORD *)((char *)v13 + 392);
        *(_OWORD *)((char *)v12 + 408) = *(_OWORD *)((char *)v13 + 408);
        uint64_t v157 = type metadata accessor for RentalCarReservation(0);
        uint64_t v158 = *(int *)(v157 + 140);
        uint64_t v159 = (char *)v12 + v158;
        uint64_t v160 = (char *)v13 + v158;
        uint64_t v62 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v160, 1, v62))
        {
          uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v159, v160, *(void *)(*(void *)(v161 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v159, v160, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v159, 0, 1, v62);
        }
        uint64_t v14 = v149;
        uint64_t v292 = *(int *)(v157 + 144);
        uint64_t v265 = (char *)v12 + v292;
        uint64_t v266 = (char *)v13 + v292;
        if (__swift_getEnumTagSinglePayload((uint64_t)v13 + v292, 1, v62)) {
          goto LABEL_139;
        }
        goto LABEL_136;
      case 0x13u:
        uint64_t v162 = v14;
        long long v163 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v163;
        long long v164 = v13[3];
        v12[2] = v13[2];
        v12[3] = v164;
        long long v165 = v13[5];
        v12[4] = v13[4];
        v12[5] = v165;
        long long v166 = v13[7];
        v12[6] = v13[6];
        v12[7] = v166;
        *((unsigned char *)v12 + 128) = *((unsigned char *)v13 + 128);
        *(_WORD *)((char *)v12 + 129) = *(_WORD *)((char *)v13 + 129);
        *((void *)v12 + 17) = *((void *)v13 + 17);
        long long v167 = v13[10];
        v12[9] = v13[9];
        v12[10] = v167;
        long long v168 = v13[12];
        v12[11] = v13[11];
        v12[12] = v168;
        *((void *)v12 + 26) = *((void *)v13 + 26);
        *(_OWORD *)((char *)v12 + 216) = *(_OWORD *)((char *)v13 + 216);
        *(_OWORD *)((char *)v12 + 232) = *(_OWORD *)((char *)v13 + 232);
        *(_OWORD *)((char *)v12 + 248) = *(_OWORD *)((char *)v13 + 248);
        *(_OWORD *)((char *)v12 + 264) = *(_OWORD *)((char *)v13 + 264);
        *((unsigned char *)v12 + 296) = *((unsigned char *)v13 + 296);
        uint64_t v169 = *((void *)v13 + 36);
        *((void *)v12 + 35) = *((void *)v13 + 35);
        *((void *)v12 + 36) = v169;
        uint64_t v170 = type metadata accessor for TicketedTransportation(0);
        uint64_t v171 = *(int *)(v170 + 112);
        uint64_t v172 = (char *)v12 + v171;
        uint64_t v173 = (char *)v13 + v171;
        uint64_t v62 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v173, 1, v62))
        {
          uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v172, v173, *(void *)(*(void *)(v174 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v172, v173, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v172, 0, 1, v62);
        }
        uint64_t v14 = v162;
        uint64_t v293 = *(int *)(v170 + 116);
        uint64_t v265 = (char *)v12 + v293;
        uint64_t v266 = (char *)v13 + v293;
        if (__swift_getEnumTagSinglePayload((uint64_t)v13 + v293, 1, v62)) {
          goto LABEL_139;
        }
        goto LABEL_136;
      case 0x14u:
        long long v175 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v175;
        long long v176 = v13[3];
        v12[2] = v13[2];
        v12[3] = v176;
        long long v177 = v13[5];
        v12[4] = v13[4];
        v12[5] = v177;
        long long v178 = v13[7];
        v12[6] = v13[6];
        v12[7] = v178;
        *((unsigned char *)v12 + 128) = *((unsigned char *)v13 + 128);
        *(_WORD *)((char *)v12 + 129) = *(_WORD *)((char *)v13 + 129);
        *((void *)v12 + 17) = *((void *)v13 + 17);
        long long v179 = v13[10];
        v12[9] = v13[9];
        v12[10] = v179;
        long long v180 = v13[12];
        v12[11] = v13[11];
        v12[12] = v180;
        long long v181 = v13[14];
        v12[13] = v13[13];
        v12[14] = v181;
        *((void *)v12 + 30) = *((void *)v13 + 30);
        *(_OWORD *)((char *)v12 + 248) = *(_OWORD *)((char *)v13 + 248);
        *(_OWORD *)((char *)v12 + 264) = *(_OWORD *)((char *)v13 + 264);
        *((unsigned char *)v12 + 296) = *((unsigned char *)v13 + 296);
        uint64_t v182 = *((void *)v13 + 36);
        *((void *)v12 + 35) = *((void *)v13 + 35);
        *((void *)v12 + 36) = v182;
        v12[19] = v13[19];
        uint64_t v183 = (int *)type metadata accessor for TicketedShow(0);
        uint64_t v184 = v183[29];
        uint64_t v185 = (char *)v12 + v184;
        uint64_t v186 = (char *)v13 + v184;
        uint64_t v187 = type metadata accessor for URL();
        uint64_t v1192 = v14;
        if (__swift_getEnumTagSinglePayload((uint64_t)v186, 1, v187))
        {
          uint64_t v188 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v185, v186, *(void *)(*(void *)(v188 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 32))(v185, v186, v187);
          __swift_storeEnumTagSinglePayload((uint64_t)v185, 0, 1, v187);
        }
        *(_OWORD *)((char *)v12 + v183[30]) = *(_OWORD *)((char *)v13 + v183[30]);
        uint64_t v294 = v183[31];
        char v295 = (char *)v12 + v294;
        uint64_t v296 = (char *)v13 + v294;
        uint64_t v62 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v296, 1, v62))
        {
          uint64_t v297 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v295, v296, *(void *)(*(void *)(v297 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v295, v296, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v295, 0, 1, v62);
        }
        uint64_t v14 = v1192;
        uint64_t v349 = v183[32];
        uint64_t v265 = (char *)v12 + v349;
        uint64_t v266 = (char *)v13 + v349;
        if (__swift_getEnumTagSinglePayload((uint64_t)v13 + v349, 1, v62)) {
          goto LABEL_139;
        }
        goto LABEL_136;
      case 0x15u:
        uint64_t v189 = v14;
        long long v190 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v190;
        long long v191 = v13[3];
        v12[2] = v13[2];
        v12[3] = v191;
        long long v192 = v13[5];
        v12[4] = v13[4];
        v12[5] = v192;
        long long v193 = v13[7];
        v12[6] = v13[6];
        v12[7] = v193;
        *((unsigned char *)v12 + 128) = *((unsigned char *)v13 + 128);
        *(_WORD *)((char *)v12 + 129) = *(_WORD *)((char *)v13 + 129);
        *((void *)v12 + 17) = *((void *)v13 + 17);
        long long v194 = v13[10];
        v12[9] = v13[9];
        v12[10] = v194;
        long long v195 = v13[12];
        v12[11] = v13[11];
        v12[12] = v195;
        long long v196 = v13[14];
        v12[13] = v13[13];
        v12[14] = v196;
        long long v197 = v13[16];
        v12[15] = v13[15];
        v12[16] = v197;
        *((unsigned char *)v12 + 280) = *((unsigned char *)v13 + 280);
        *((void *)v12 + 34) = *((void *)v13 + 34);
        v12[18] = v13[18];
        uint64_t v198 = type metadata accessor for Appointment(0);
        uint64_t v199 = *(int *)(v198 + 108);
        uint64_t v200 = (char *)v12 + v199;
        uint64_t v201 = (char *)v13 + v199;
        uint64_t v62 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v201, 1, v62))
        {
          uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v200, v201, *(void *)(*(void *)(v202 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v200, v201, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v200, 0, 1, v62);
        }
        uint64_t v14 = v189;
        uint64_t v298 = *(int *)(v198 + 112);
        uint64_t v265 = (char *)v12 + v298;
        uint64_t v266 = (char *)v13 + v298;
        if (__swift_getEnumTagSinglePayload((uint64_t)v13 + v298, 1, v62))
        {
LABEL_139:
          uint64_t v350 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v265, v266, *(void *)(*(void *)(v350 - 8) + 64));
        }
        else
        {
LABEL_136:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v265, v266, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v265, 0, 1, v62);
        }
        goto LABEL_524;
      case 0x16u:
        uint64_t v203 = v14;
        long long v204 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v204;
        long long v205 = v13[3];
        v12[2] = v13[2];
        v12[3] = v205;
        long long v206 = v13[5];
        v12[4] = v13[4];
        v12[5] = v206;
        long long v207 = v13[7];
        v12[6] = v13[6];
        v12[7] = v207;
        *((unsigned char *)v12 + 128) = *((unsigned char *)v13 + 128);
        *(_WORD *)((char *)v12 + 129) = *(_WORD *)((char *)v13 + 129);
        *((void *)v12 + 17) = *((void *)v13 + 17);
        long long v208 = v13[10];
        v12[9] = v13[9];
        v12[10] = v208;
        long long v209 = v13[12];
        v12[11] = v13[11];
        v12[12] = v209;
        long long v210 = v13[14];
        v12[13] = v13[13];
        v12[14] = v210;
        v12[15] = v13[15];
        uint64_t v211 = (int *)type metadata accessor for Party(0);
        uint64_t v212 = v211[24];
        uint64_t v213 = (char *)v12 + v212;
        uint64_t v214 = (char *)v13 + v212;
        uint64_t v215 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v214, 1, v215))
        {
          uint64_t v216 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v213, v214, *(void *)(*(void *)(v216 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 32))(v213, v214, v215);
          __swift_storeEnumTagSinglePayload((uint64_t)v213, 0, 1, v215);
        }
        uint64_t v299 = v211[25];
        uint64_t v300 = (char *)v12 + v299;
        uint64_t v301 = (char *)v13 + v299;
        if (__swift_getEnumTagSinglePayload((uint64_t)v13 + v299, 1, v215))
        {
          uint64_t v302 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v300, v301, *(void *)(*(void *)(v302 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 32))(v300, v301, v215);
          __swift_storeEnumTagSinglePayload((uint64_t)v300, 0, 1, v215);
        }
        uint64_t v14 = v203;
        uint64_t v351 = v211[26];
        uint64_t v89 = (char *)v12 + v351;
        uint64_t v90 = (char *)v13 + v351;
        uint64_t v91 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, v91)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 0x17u:
        uint64_t v217 = v14;
        long long v218 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v218;
        long long v219 = v13[3];
        v12[2] = v13[2];
        v12[3] = v219;
        long long v220 = v13[5];
        v12[4] = v13[4];
        v12[5] = v220;
        long long v221 = v13[7];
        v12[6] = v13[6];
        v12[7] = v221;
        *((unsigned char *)v12 + 128) = *((unsigned char *)v13 + 128);
        *(_WORD *)((char *)v12 + 129) = *(_WORD *)((char *)v13 + 129);
        *((void *)v12 + 17) = *((void *)v13 + 17);
        long long v222 = v13[10];
        v12[9] = v13[9];
        v12[10] = v222;
        long long v223 = v13[12];
        v12[11] = v13[11];
        v12[12] = v223;
        v12[13] = v13[13];
        uint64_t v224 = (int *)type metadata accessor for Trip(0);
        uint64_t v225 = v224[22];
        uint64_t v226 = (char *)v12 + v225;
        uint64_t v227 = (char *)v13 + v225;
        uint64_t v228 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v227, 1, v228))
        {
          uint64_t v229 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v226, v227, *(void *)(*(void *)(v229 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v228 - 8) + 32))(v226, v227, v228);
          __swift_storeEnumTagSinglePayload((uint64_t)v226, 0, 1, v228);
        }
        uint64_t v303 = v224[23];
        uint64_t v304 = (char *)v12 + v303;
        uint64_t v305 = (char *)v13 + v303;
        if (__swift_getEnumTagSinglePayload((uint64_t)v13 + v303, 1, v228))
        {
          uint64_t v306 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v304, v305, *(void *)(*(void *)(v306 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v228 - 8) + 32))(v304, v305, v228);
          __swift_storeEnumTagSinglePayload((uint64_t)v304, 0, 1, v228);
        }
        uint64_t v14 = v217;
        uint64_t v352 = v224[24];
        uint64_t v353 = (char *)v12 + v352;
        uint64_t v354 = (char *)v13 + v352;
        *(void *)uint64_t v353 = *(void *)v354;
        v353[8] = v354[8];
        uint64_t v355 = v224[25];
        uint64_t v89 = (char *)v12 + v355;
        uint64_t v90 = (char *)v13 + v355;
        uint64_t v91 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, v91))
        {
LABEL_146:
          uint64_t v356 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v89, v90, *(void *)(*(void *)(v356 - 8) + 64));
        }
        else
        {
LABEL_128:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v89, v90, v91);
          __swift_storeEnumTagSinglePayload((uint64_t)v89, 0, 1, v91);
        }
        goto LABEL_524;
      case 0x18u:
        long long v230 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v230;
        v12[2] = v13[2];
        uint64_t v231 = (int *)type metadata accessor for GlobalItem();
        uint64_t v232 = v231[7];
        uint64_t v233 = (char *)v12 + v232;
        uint64_t v234 = (char *)v13 + v232;
        uint64_t v235 = type metadata accessor for GlobalDialog();
        if (__swift_getEnumTagSinglePayload((uint64_t)v234, 1, v235))
        {
          uint64_t v236 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
          memcpy(v233, v234, *(void *)(*(void *)(v236 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v235 - 8) + 32))(v233, v234, v235);
          __swift_storeEnumTagSinglePayload((uint64_t)v233, 0, 1, v235);
        }
        *(_OWORD *)((char *)v12 + v231[8]) = *(_OWORD *)((char *)v13 + v231[8]);
        *((unsigned char *)v12 + v231[9]) = *((unsigned char *)v13 + v231[9]);
        uint64_t v307 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
        *(void *)((char *)v12 + *(int *)(v307 + 48)) = *(void *)((char *)v13 + *(int *)(v307 + 48));
        goto LABEL_524;
      case 0x1Au:
        long long v237 = v13[1];
        _OWORD *v12 = *v13;
        v12[1] = v237;
        v12[2] = v13[2];
        *((void *)v12 + 6) = *((void *)v13 + 6);
        uint64_t v238 = (int *)type metadata accessor for Answer(0);
        uint64_t v239 = v238[9];
        uint64_t v240 = (char *)v12 + v239;
        uint64_t v241 = (char *)v13 + v239;
        uint64_t v242 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v241, 1, v242))
        {
          uint64_t v243 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v240, v241, *(void *)(*(void *)(v243 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v242 - 8) + 32))(v240, v241, v242);
          __swift_storeEnumTagSinglePayload((uint64_t)v240, 0, 1, v242);
        }
        *((unsigned char *)v12 + v238[10]) = *((unsigned char *)v13 + v238[10]);
        *(_OWORD *)((char *)v12 + v238[11]) = *(_OWORD *)((char *)v13 + v238[11]);
LABEL_524:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
        break;
    }
    *(void *)((char *)v12 + *(int *)(v14 + 20)) = *(void *)((char *)v13 + *(int *)(v14 + 20));
    *(_OWORD *)((char *)v12 + *(int *)(v14 + 24)) = *(_OWORD *)((char *)v13 + *(int *)(v14 + 24));
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v1100 = *(int *)(v3 + 92);
  *(_OWORD *)(a1 + *(int *)(v3 + 88)) = *(_OWORD *)(a2 + *(int *)(v3 + 88));
  *(void *)(a1 + v1100) = *(void *)(a2 + v1100);
  return a1;
}

#error "25810C464: too big function (funcsize=0)"

uint64_t getEnumTagSinglePayload for SearchEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25811E064);
}

uint64_t sub_25811E064(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 84);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SearchEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25811E104);
}

void *sub_25811E104(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 84);
    return (void *)__swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

void type metadata completion function for SearchEntity()
{
  type metadata accessor for SearchResult?(319, (unint64_t *)&lazy cache variable for type metadata for SearchResult?, (void (*)(uint64_t))type metadata accessor for SearchResult);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

#error "25811E26C: too big function (funcsize=0)"

#error "25814F74C: too big function (funcsize=0)"

#error "258165F04: too big function (funcsize=0)"

#error "258197398: too big function (funcsize=0)"

uint64_t outlined destroy of AnswerMetadata(uint64_t a1)
{
  return a1;
}

uint64_t outlined destroy of EventEntity(uint64_t a1)
{
  return a1;
}

uint64_t outlined destroy of MediaEntity(uint64_t a1)
{
  return a1;
}

#error "258232070: too big function (funcsize=0)"

#error "258256270: too big function (funcsize=0)"

uint64_t getEnumTagSinglePayload for SearchEntity.Builder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2582B8528);
}

uint64_t sub_2582B8528(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    OUTLINED_FUNCTION_29_3();
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a3[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResultType?);
      OUTLINED_FUNCTION_29_3();
      if (*(_DWORD *)(v14 + 84) == a2)
      {
        uint64_t v11 = v13;
        uint64_t v12 = a3[6];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
        OUTLINED_FUNCTION_29_3();
        if (*(_DWORD *)(v16 + 84) == a2)
        {
          uint64_t v11 = v15;
          uint64_t v12 = a3[7];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
          OUTLINED_FUNCTION_29_3();
          if (*(_DWORD *)(v18 + 84) == a2)
          {
            uint64_t v11 = v17;
            uint64_t v12 = a3[8];
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
            OUTLINED_FUNCTION_29_3();
            if (*(_DWORD *)(v20 + 84) == a2)
            {
              uint64_t v11 = v19;
              uint64_t v12 = a3[10];
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
              OUTLINED_FUNCTION_29_3();
              if (*(_DWORD *)(v22 + 84) == a2)
              {
                uint64_t v11 = v21;
                uint64_t v12 = a3[11];
              }
              else
              {
                uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IdCardEntity?);
                uint64_t v12 = a3[14];
              }
            }
          }
        }
      }
    }
    return __swift_getEnumTagSinglePayload(a1 + v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for SearchEntity.Builder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2582B86C4);
}

uint64_t sub_2582B86C4(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    OUTLINED_FUNCTION_29_3();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResultType?);
      OUTLINED_FUNCTION_29_3();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[6];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchGlobalEntity?);
        OUTLINED_FUNCTION_29_3();
        if (*(_DWORD *)(v15 + 84) == a3)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a4[7];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
          OUTLINED_FUNCTION_29_3();
          if (*(_DWORD *)(v17 + 84) == a3)
          {
            uint64_t v10 = v16;
            uint64_t v11 = a4[8];
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
            OUTLINED_FUNCTION_29_3();
            if (*(_DWORD *)(v19 + 84) == a3)
            {
              uint64_t v10 = v18;
              uint64_t v11 = a4[10];
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
              OUTLINED_FUNCTION_29_3();
              if (*(_DWORD *)(v21 + 84) == a3)
              {
                uint64_t v10 = v20;
                uint64_t v11 = a4[11];
              }
              else
              {
                uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IdCardEntity?);
                uint64_t v11 = a4[14];
              }
            }
          }
        }
      }
    }
    return __swift_storeEnumTagSinglePayload(v5 + v11, a2, a2, v10);
  }
  return result;
}

void type metadata completion function for SearchEntity.Builder()
{
  type metadata accessor for SearchResult?(319, (unint64_t *)&lazy cache variable for type metadata for SearchResult?, (void (*)(uint64_t))type metadata accessor for SearchResult);
  if (v0 <= 0x3F)
  {
    type metadata accessor for SearchResult?(319, &lazy cache variable for type metadata for SearchResultType?, MEMORY[0x263F5B7C0]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for SearchResult?(319, &lazy cache variable for type metadata for SearchGlobalEntity?, MEMORY[0x263F5B7E0]);
      if (v2 <= 0x3F)
      {
        type metadata accessor for SearchResult?(319, &lazy cache variable for type metadata for SearchSpotlightEntity?, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
        if (v3 <= 0x3F)
        {
          type metadata accessor for SearchResult?(319, &lazy cache variable for type metadata for SearchAppEntity?, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
          if (v4 <= 0x3F)
          {
            type metadata accessor for SearchResult?(319, (unint64_t *)&lazy cache variable for type metadata for IntentFile?, MEMORY[0x263EFB730]);
            if (v5 <= 0x3F)
            {
              type metadata accessor for SearchResult?(319, &lazy cache variable for type metadata for IdCardEntity?, (void (*)(uint64_t))type metadata accessor for IdCardEntity);
              if (v6 <= 0x3F) {
                swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

void type metadata accessor for SearchResult?(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for SearchEntity.Query()
{
  return &type metadata for SearchEntity.Query;
}

unsigned char *storeEnumTagSinglePayload for HydratedEntityType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2582B8C64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HydratedEntityType()
{
  return &type metadata for HydratedEntityType;
}

uint64_t sub_2582B8C9C()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type TupleTransferRepresentation<SearchEntity, (_ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, AnswerMetadata>>, _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchSpotlightEntity>>, _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchGlobalEntity>>)> and conformance TupleTransferRepresentation<A, B>, &demangling cache variable for type metadata for TupleTransferRepresentation<SearchEntity, (_ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, AnswerMetadata>>, _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchSpotlightEntity>>, _ConditionalTransferRepresentation<ProxyRepresentation<SearchEntity, SearchGlobalEntity>>)>);
}

uint64_t _s10OmniSearch18TicketedShowEntityVSgWOsTm_0(__n128 *a1)
{
  __n128 v2 = OUTLINED_FUNCTION_95_2(a1);
  _s10OmniSearch18GenericEventEntityVSgWOeTm_0(v3, v4, v5, v6, v7, v8, v9, v10, v2.n128_i64[0], v2.n128_i64[1], v11, v12, v13, v14, *(void *)(v1 + 112), *(void *)(v1 + 120));
  return v1;
}

uint64_t outlined release of VehicleReservationEntity?(uint64_t a1)
{
  return a1;
}

uint64_t _s10OmniSearch18GenericEventEntityVSgWOeTm_0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return outlined consume of Data?(a15, a16);
  }
  return result;
}

uint64_t outlined release of FlightReservationEntity?(uint64_t a1)
{
  outlined consume of FlightReservationEntity?(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200));
  return a1;
}

uint64_t outlined release of PersonalCardEntity?(uint64_t a1)
{
  outlined consume of PersonalCardEntity?(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176));
  return a1;
}

uint64_t partial apply for closure #1 in closure #1 in SearchEntity.init(result:card:searchString:)(uint64_t a1)
{
  return closure #1 in closure #1 in SearchEntity.init(result:card:searchString:)(a1, *(void *)(v1 + 16));
}

uint64_t outlined init with copy of SearchAppEntity?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_22_9(a1, a2, a3);
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_51_2();
  v4();
  return v3;
}

uint64_t OUTLINED_FUNCTION_20_11(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_22_15()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_25_11()
{
  return type metadata accessor for SearchEntity.Builder(0);
}

uint64_t OUTLINED_FUNCTION_29_11()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_31_11(uint64_t a1)
{
  return outlined init with copy of SearchAppEntity?(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_32_10()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_33_8()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_34_10(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_35_9()
{
  uint64_t v3 = *(void *)(v0 + 368);
  return outlined destroy of SearchEntity(v3, v1);
}

uint64_t OUTLINED_FUNCTION_39_6()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_41_9()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_43_9()
{
  JUMPOUT(0x25A2C4890);
}

uint64_t OUTLINED_FUNCTION_45_7()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_46_6(uint64_t a1)
{
  *(void *)(v1 + 856) = a1;
  return v1 + 856;
}

uint64_t OUTLINED_FUNCTION_47_6()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_50_9()
{
  return 0;
}

void OUTLINED_FUNCTION_51_7(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_52_6()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_53_7()
{
  uint64_t v4 = *(void *)(v0 + 328);
  return outlined init with copy of SearchEntity(v4, v2, v1);
}

uint64_t OUTLINED_FUNCTION_55_6()
{
  return type metadata accessor for SearchEntity(0);
}

uint64_t OUTLINED_FUNCTION_57_4()
{
  return 0;
}

id OUTLINED_FUNCTION_60_5()
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v2);
  uint64_t v4 = *(void **)(v3 + *(int *)(*(void *)(v0 + 480) + 20));
  return v4;
}

uint64_t OUTLINED_FUNCTION_62_5()
{
  return type metadata accessor for SearchResultType();
}

void OUTLINED_FUNCTION_63_4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 8) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_64_4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 16) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_68_4()
{
  return type metadata accessor for SearchEntity.Builder(0);
}

uint64_t OUTLINED_FUNCTION_69_5(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_70_5()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_73_2@<X0>(uint64_t a1@<X8>)
{
  return *(void *)a1;
}

uint64_t OUTLINED_FUNCTION_75_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_76_2(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_77_3(uint64_t a1)
{
  return outlined init with copy of SearchAppEntity?(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_80_3()
{
  return outlined destroy of PQAVerificationModelProtocol?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_81_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_82_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_83_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_84_3()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_85_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_87_4()
{
  return outlined init with copy of SearchEntity(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_88_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_94_4()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_95_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_96_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_97_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_98_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_101_4(uint64_t a1)
{
  return outlined init with copy of SearchEntity(a1, v2, v1);
}

double OUTLINED_FUNCTION_102_1()
{
  uint64_t v1 = *(void *)(v0 - 176);
  *(void *)(v1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_103_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_104_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_105_4()
{
  return v0;
}

void OUTLINED_FUNCTION_106_3(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_110_3()
{
  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

id OUTLINED_FUNCTION_111_4()
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v2);
  uint64_t v3 = *(void **)(v0 + 512);
  return v3;
}

uint64_t OUTLINED_FUNCTION_113_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_114_4()
{
  uint64_t v3 = *(void *)(v0 + 464);
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v3);
}

uint64_t OUTLINED_FUNCTION_115_3()
{
  return v0;
}

void OUTLINED_FUNCTION_116_4(unsigned char *a1@<X8>)
{
  *a1 = v1;
}

double OUTLINED_FUNCTION_118_2@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_119_2()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t SearchGlobalEntity.asNLGEntity.getter@<X0>(uint64_t a1@<X8>)
{
  return EntityProperty.wrappedValue.setter();
}

void protocol witness for ValidatableEntity.validateParameters() in conformance SearchGlobalEntity()
{
}

uint64_t SearchGlobalEntity.asCATEntity.getter@<X0>(uint64_t a1@<X8>)
{
  return EntityProperty.wrappedValue.setter();
}

void specialized static SearchSpotlightOpener.decodeSearchableItem<A>(_:)()
{
  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_43_10();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_4_17();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_59_0();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_9_12();
  if (v5)
  {
    outlined destroy of SearchResult?(v1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    uint64_t v7 = (void *)OUTLINED_FUNCTION_43_1(v6, (uint64_t)static Logging.search);
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_24_13(v8))
    {
      uint64_t v9 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_67_0(v9);
      OUTLINED_FUNCTION_11_14(&dword_257DC6000, v10, v11, "SearchSpotlightEntity missing data of the underlying CSSearchableItem");
      OUTLINED_FUNCTION_21_13();
    }

    lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
    uint64_t v12 = OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_29_12(v12, v13);
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_2_8();
    v15(v14);
    IntentFile.data.getter();
    OUTLINED_FUNCTION_42_7();
    type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSKeyedUnarchiver);
    type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for CSSearchableItem);
    uint64_t v16 = OUTLINED_FUNCTION_13_19();
    if (v0)
    {
      uint64_t v17 = OUTLINED_FUNCTION_1_14();
      v18(v17);
      OUTLINED_FUNCTION_25_12();
    }
    else
    {
      uint64_t v19 = v16;
      OUTLINED_FUNCTION_25_12();
      if (v19)
      {
        uint64_t v20 = OUTLINED_FUNCTION_1_14();
        v21(v20);
      }
      else
      {
        if (one-time initialization token for search != -1) {
          swift_once();
        }
        uint64_t v22 = type metadata accessor for Logger();
        uint64_t v23 = (void *)OUTLINED_FUNCTION_43_1(v22, (uint64_t)static Logging.search);
        os_log_type_t v24 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_26_15(v24))
        {
          uint64_t v25 = (_WORD *)OUTLINED_FUNCTION_55();
          OUTLINED_FUNCTION_41_10(v25);
          OUTLINED_FUNCTION_12_17(&dword_257DC6000, v26, v27, "NSKeyedUnarchiver returning nil when unarchiving CSSearchableItem data");
          OUTLINED_FUNCTION_34();
        }

        lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
        uint64_t v28 = OUTLINED_FUNCTION_42();
        OUTLINED_FUNCTION_14_17(v28, v29);
        uint64_t v30 = OUTLINED_FUNCTION_1_14();
        v31(v30);
      }
    }
  }
  OUTLINED_FUNCTION_27_13();
  OUTLINED_FUNCTION_52_7();
}

{
  specialized static SearchSpotlightOpener.decodeSearchableItem<A>(_:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned char *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  void *v23;
  os_log_type_t v24;
  _WORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned char *v29;
  uint64_t v30;
  void (*v31)(uint64_t);

  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_43_10();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_4_17();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_59_0();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_9_12();
  if (v5)
  {
    outlined destroy of SearchResult?(v1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    uint64_t v7 = (void *)OUTLINED_FUNCTION_43_1(v6, (uint64_t)static Logging.search);
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_24_13(v8))
    {
      uint64_t v9 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_67_0(v9);
      OUTLINED_FUNCTION_11_14(&dword_257DC6000, v10, v11, "SearchSpotlightEntity missing data of the underlying CSSearchableItem");
      OUTLINED_FUNCTION_21_13();
    }

    lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
    uint64_t v12 = OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_29_12(v12, v13);
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_2_8();
    v15(v14);
    IntentFile.data.getter();
    OUTLINED_FUNCTION_42_7();
    type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSKeyedUnarchiver);
    type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for CSSearchableItem);
    uint64_t v16 = OUTLINED_FUNCTION_13_19();
    if (v0)
    {
      uint64_t v17 = OUTLINED_FUNCTION_1_14();
      v18(v17);
      OUTLINED_FUNCTION_25_12();
    }
    else
    {
      uint64_t v19 = v16;
      OUTLINED_FUNCTION_25_12();
      if (v19)
      {
        uint64_t v20 = OUTLINED_FUNCTION_1_14();
        v21(v20);
      }
      else
      {
        if (one-time initialization token for search != -1) {
          swift_once();
        }
        uint64_t v22 = type metadata accessor for Logger();
        uint64_t v23 = (void *)OUTLINED_FUNCTION_43_1(v22, (uint64_t)static Logging.search);
        os_log_type_t v24 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_26_15(v24))
        {
          uint64_t v25 = (_WORD *)OUTLINED_FUNCTION_55();
          OUTLINED_FUNCTION_41_10(v25);
          OUTLINED_FUNCTION_12_17(&dword_257DC6000, v26, v27, "NSKeyedUnarchiver returning nil when unarchiving CSSearchableItem data");
          OUTLINED_FUNCTION_34();
        }

        lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
        uint64_t v28 = OUTLINED_FUNCTION_42();
        OUTLINED_FUNCTION_14_17(v28, v29);
        uint64_t v30 = OUTLINED_FUNCTION_1_14();
        v31(v30);
      }
    }
  }
  OUTLINED_FUNCTION_27_13();
  OUTLINED_FUNCTION_52_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned char *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  void *v23;
  os_log_type_t v24;
  _WORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned char *v29;
  uint64_t v30;
  void (*v31)(uint64_t);

  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_43_10();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_4_17();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_59_0();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_9_12();
  if (v5)
  {
    outlined destroy of SearchResult?(v1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    uint64_t v7 = (void *)OUTLINED_FUNCTION_43_1(v6, (uint64_t)static Logging.search);
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_24_13(v8))
    {
      uint64_t v9 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_67_0(v9);
      OUTLINED_FUNCTION_11_14(&dword_257DC6000, v10, v11, "SearchSpotlightEntity missing data of the underlying CSSearchableItem");
      OUTLINED_FUNCTION_21_13();
    }

    lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
    uint64_t v12 = OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_29_12(v12, v13);
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_2_8();
    v15(v14);
    IntentFile.data.getter();
    OUTLINED_FUNCTION_42_7();
    type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSKeyedUnarchiver);
    type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for CSSearchableItem);
    uint64_t v16 = OUTLINED_FUNCTION_13_19();
    if (v0)
    {
      uint64_t v17 = OUTLINED_FUNCTION_1_14();
      v18(v17);
      OUTLINED_FUNCTION_25_12();
    }
    else
    {
      uint64_t v19 = v16;
      OUTLINED_FUNCTION_25_12();
      if (v19)
      {
        uint64_t v20 = OUTLINED_FUNCTION_1_14();
        v21(v20);
      }
      else
      {
        if (one-time initialization token for search != -1) {
          swift_once();
        }
        uint64_t v22 = type metadata accessor for Logger();
        uint64_t v23 = (void *)OUTLINED_FUNCTION_43_1(v22, (uint64_t)static Logging.search);
        os_log_type_t v24 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_26_15(v24))
        {
          uint64_t v25 = (_WORD *)OUTLINED_FUNCTION_55();
          OUTLINED_FUNCTION_41_10(v25);
          OUTLINED_FUNCTION_12_17(&dword_257DC6000, v26, v27, "NSKeyedUnarchiver returning nil when unarchiving CSSearchableItem data");
          OUTLINED_FUNCTION_34();
        }

        lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
        uint64_t v28 = OUTLINED_FUNCTION_42();
        OUTLINED_FUNCTION_14_17(v28, v29);
        uint64_t v30 = OUTLINED_FUNCTION_1_14();
        v31(v30);
      }
    }
  }
  OUTLINED_FUNCTION_27_13();
  OUTLINED_FUNCTION_52_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned char *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  void *v23;
  os_log_type_t v24;
  _WORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned char *v29;
  uint64_t v30;
  void (*v31)(uint64_t);

  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_43_10();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_4_17();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_59_0();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_9_12();
  if (v5)
  {
    outlined destroy of SearchResult?(v1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    uint64_t v7 = (void *)OUTLINED_FUNCTION_43_1(v6, (uint64_t)static Logging.search);
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_24_13(v8))
    {
      uint64_t v9 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_67_0(v9);
      OUTLINED_FUNCTION_11_14(&dword_257DC6000, v10, v11, "SearchSpotlightEntity missing data of the underlying CSSearchableItem");
      OUTLINED_FUNCTION_21_13();
    }

    lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
    uint64_t v12 = OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_29_12(v12, v13);
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_2_8();
    v15(v14);
    IntentFile.data.getter();
    OUTLINED_FUNCTION_42_7();
    type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSKeyedUnarchiver);
    type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for CSSearchableItem);
    uint64_t v16 = OUTLINED_FUNCTION_13_19();
    if (v0)
    {
      uint64_t v17 = OUTLINED_FUNCTION_1_14();
      v18(v17);
      OUTLINED_FUNCTION_25_12();
    }
    else
    {
      uint64_t v19 = v16;
      OUTLINED_FUNCTION_25_12();
      if (v19)
      {
        uint64_t v20 = OUTLINED_FUNCTION_1_14();
        v21(v20);
      }
      else
      {
        if (one-time initialization token for search != -1) {
          swift_once();
        }
        uint64_t v22 = type metadata accessor for Logger();
        uint64_t v23 = (void *)OUTLINED_FUNCTION_43_1(v22, (uint64_t)static Logging.search);
        os_log_type_t v24 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_26_15(v24))
        {
          uint64_t v25 = (_WORD *)OUTLINED_FUNCTION_55();
          OUTLINED_FUNCTION_41_10(v25);
          OUTLINED_FUNCTION_12_17(&dword_257DC6000, v26, v27, "NSKeyedUnarchiver returning nil when unarchiving CSSearchableItem data");
          OUTLINED_FUNCTION_34();
        }

        lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
        uint64_t v28 = OUTLINED_FUNCTION_42();
        OUTLINED_FUNCTION_14_17(v28, v29);
        uint64_t v30 = OUTLINED_FUNCTION_1_14();
        v31(v30);
      }
    }
  }
  OUTLINED_FUNCTION_27_13();
  OUTLINED_FUNCTION_52_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned char *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  void *v23;
  os_log_type_t v24;
  _WORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned char *v29;
  uint64_t v30;
  void (*v31)(uint64_t);

  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_43_10();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_4_17();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_59_0();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_9_12();
  if (v5)
  {
    outlined destroy of SearchResult?(v1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    uint64_t v7 = (void *)OUTLINED_FUNCTION_43_1(v6, (uint64_t)static Logging.search);
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_24_13(v8))
    {
      uint64_t v9 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_67_0(v9);
      OUTLINED_FUNCTION_11_14(&dword_257DC6000, v10, v11, "SearchSpotlightEntity missing data of the underlying CSSearchableItem");
      OUTLINED_FUNCTION_21_13();
    }

    lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
    uint64_t v12 = OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_29_12(v12, v13);
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_2_8();
    v15(v14);
    IntentFile.data.getter();
    OUTLINED_FUNCTION_42_7();
    type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSKeyedUnarchiver);
    type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for CSSearchableItem);
    uint64_t v16 = OUTLINED_FUNCTION_13_19();
    if (v0)
    {
      uint64_t v17 = OUTLINED_FUNCTION_1_14();
      v18(v17);
      OUTLINED_FUNCTION_25_12();
    }
    else
    {
      uint64_t v19 = v16;
      OUTLINED_FUNCTION_25_12();
      if (v19)
      {
        uint64_t v20 = OUTLINED_FUNCTION_1_14();
        v21(v20);
      }
      else
      {
        if (one-time initialization token for search != -1) {
          swift_once();
        }
        uint64_t v22 = type metadata accessor for Logger();
        uint64_t v23 = (void *)OUTLINED_FUNCTION_43_1(v22, (uint64_t)static Logging.search);
        os_log_type_t v24 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_26_15(v24))
        {
          uint64_t v25 = (_WORD *)OUTLINED_FUNCTION_55();
          OUTLINED_FUNCTION_41_10(v25);
          OUTLINED_FUNCTION_12_17(&dword_257DC6000, v26, v27, "NSKeyedUnarchiver returning nil when unarchiving CSSearchableItem data");
          OUTLINED_FUNCTION_34();
        }

        lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
        uint64_t v28 = OUTLINED_FUNCTION_42();
        OUTLINED_FUNCTION_14_17(v28, v29);
        uint64_t v30 = OUTLINED_FUNCTION_1_14();
        v31(v30);
      }
    }
  }
  OUTLINED_FUNCTION_27_13();
  OUTLINED_FUNCTION_52_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned char *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  void *v23;
  os_log_type_t v24;
  _WORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned char *v29;
  uint64_t v30;
  void (*v31)(uint64_t);

  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_43_10();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_4_17();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_68_5();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_9_12();
  if (v5)
  {
    outlined destroy of SearchResult?(v1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    uint64_t v7 = (void *)OUTLINED_FUNCTION_43_1(v6, (uint64_t)static Logging.search);
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_24_13(v8))
    {
      uint64_t v9 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_67_0(v9);
      OUTLINED_FUNCTION_11_14(&dword_257DC6000, v10, v11, "SearchSpotlightEntity missing data of the underlying CSSearchableItem");
      OUTLINED_FUNCTION_21_13();
    }

    lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
    uint64_t v12 = OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_29_12(v12, v13);
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_2_8();
    v15(v14);
    IntentFile.data.getter();
    OUTLINED_FUNCTION_42_7();
    type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSKeyedUnarchiver);
    type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for CSSearchableItem);
    uint64_t v16 = OUTLINED_FUNCTION_13_19();
    if (v0)
    {
      uint64_t v17 = OUTLINED_FUNCTION_1_14();
      v18(v17);
      OUTLINED_FUNCTION_25_12();
    }
    else
    {
      uint64_t v19 = v16;
      OUTLINED_FUNCTION_25_12();
      if (v19)
      {
        uint64_t v20 = OUTLINED_FUNCTION_1_14();
        v21(v20);
      }
      else
      {
        if (one-time initialization token for search != -1) {
          swift_once();
        }
        uint64_t v22 = type metadata accessor for Logger();
        uint64_t v23 = (void *)OUTLINED_FUNCTION_43_1(v22, (uint64_t)static Logging.search);
        os_log_type_t v24 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_26_15(v24))
        {
          uint64_t v25 = (_WORD *)OUTLINED_FUNCTION_55();
          OUTLINED_FUNCTION_41_10(v25);
          OUTLINED_FUNCTION_12_17(&dword_257DC6000, v26, v27, "NSKeyedUnarchiver returning nil when unarchiving CSSearchableItem data");
          OUTLINED_FUNCTION_34();
        }

        lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
        uint64_t v28 = OUTLINED_FUNCTION_42();
        OUTLINED_FUNCTION_14_17(v28, v29);
        uint64_t v30 = OUTLINED_FUNCTION_1_14();
        v31(v30);
      }
    }
  }
  OUTLINED_FUNCTION_27_13();
  OUTLINED_FUNCTION_52_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned char *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  void *v23;
  os_log_type_t v24;
  _WORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned char *v29;
  uint64_t v30;
  void (*v31)(uint64_t);

  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_43_10();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_4_17();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_59_0();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_9_12();
  if (v5)
  {
    outlined destroy of SearchResult?(v1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    uint64_t v7 = (void *)OUTLINED_FUNCTION_43_1(v6, (uint64_t)static Logging.search);
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_24_13(v8))
    {
      uint64_t v9 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_67_0(v9);
      OUTLINED_FUNCTION_11_14(&dword_257DC6000, v10, v11, "SearchSpotlightEntity missing data of the underlying CSSearchableItem");
      OUTLINED_FUNCTION_21_13();
    }

    lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
    uint64_t v12 = OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_29_12(v12, v13);
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_2_8();
    v15(v14);
    IntentFile.data.getter();
    OUTLINED_FUNCTION_42_7();
    type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSKeyedUnarchiver);
    type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for CSSearchableItem);
    uint64_t v16 = OUTLINED_FUNCTION_13_19();
    if (v0)
    {
      uint64_t v17 = OUTLINED_FUNCTION_1_14();
      v18(v17);
      OUTLINED_FUNCTION_25_12();
    }
    else
    {
      uint64_t v19 = v16;
      OUTLINED_FUNCTION_25_12();
      if (v19)
      {
        uint64_t v20 = OUTLINED_FUNCTION_1_14();
        v21(v20);
      }
      else
      {
        if (one-time initialization token for search != -1) {
          swift_once();
        }
        uint64_t v22 = type metadata accessor for Logger();
        uint64_t v23 = (void *)OUTLINED_FUNCTION_43_1(v22, (uint64_t)static Logging.search);
        os_log_type_t v24 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_26_15(v24))
        {
          uint64_t v25 = (_WORD *)OUTLINED_FUNCTION_55();
          OUTLINED_FUNCTION_41_10(v25);
          OUTLINED_FUNCTION_12_17(&dword_257DC6000, v26, v27, "NSKeyedUnarchiver returning nil when unarchiving CSSearchableItem data");
          OUTLINED_FUNCTION_34();
        }

        lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
        uint64_t v28 = OUTLINED_FUNCTION_42();
        OUTLINED_FUNCTION_14_17(v28, v29);
        uint64_t v30 = OUTLINED_FUNCTION_1_14();
        v31(v30);
      }
    }
  }
  OUTLINED_FUNCTION_27_13();
  OUTLINED_FUNCTION_52_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned char *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  void *v23;
  os_log_type_t v24;
  _WORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned char *v29;
  uint64_t v30;
  void (*v31)(uint64_t);

  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_43_10();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_4_17();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_59_0();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_9_12();
  if (v5)
  {
    outlined destroy of SearchResult?(v1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    uint64_t v7 = (void *)OUTLINED_FUNCTION_43_1(v6, (uint64_t)static Logging.search);
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_24_13(v8))
    {
      uint64_t v9 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_67_0(v9);
      OUTLINED_FUNCTION_11_14(&dword_257DC6000, v10, v11, "SearchSpotlightEntity missing data of the underlying CSSearchableItem");
      OUTLINED_FUNCTION_21_13();
    }

    lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
    uint64_t v12 = OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_29_12(v12, v13);
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_2_8();
    v15(v14);
    IntentFile.data.getter();
    OUTLINED_FUNCTION_42_7();
    type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSKeyedUnarchiver);
    type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for CSSearchableItem);
    uint64_t v16 = OUTLINED_FUNCTION_13_19();
    if (v0)
    {
      uint64_t v17 = OUTLINED_FUNCTION_1_14();
      v18(v17);
      OUTLINED_FUNCTION_25_12();
    }
    else
    {
      uint64_t v19 = v16;
      OUTLINED_FUNCTION_25_12();
      if (v19)
      {
        uint64_t v20 = OUTLINED_FUNCTION_1_14();
        v21(v20);
      }
      else
      {
        if (one-time initialization token for search != -1) {
          swift_once();
        }
        uint64_t v22 = type metadata accessor for Logger();
        uint64_t v23 = (void *)OUTLINED_FUNCTION_43_1(v22, (uint64_t)static Logging.search);
        os_log_type_t v24 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_26_15(v24))
        {
          uint64_t v25 = (_WORD *)OUTLINED_FUNCTION_55();
          OUTLINED_FUNCTION_41_10(v25);
          OUTLINED_FUNCTION_12_17(&dword_257DC6000, v26, v27, "NSKeyedUnarchiver returning nil when unarchiving CSSearchableItem data");
          OUTLINED_FUNCTION_34();
        }

        lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
        uint64_t v28 = OUTLINED_FUNCTION_42();
        OUTLINED_FUNCTION_14_17(v28, v29);
        uint64_t v30 = OUTLINED_FUNCTION_1_14();
        v31(v30);
      }
    }
  }
  OUTLINED_FUNCTION_27_13();
  OUTLINED_FUNCTION_52_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned char *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  void *v23;
  os_log_type_t v24;
  _WORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned char *v29;
  uint64_t v30;
  void (*v31)(uint64_t);

  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_43_10();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_4_17();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_59_0();
  EntityProperty.wrappedValue.getter();
  OUTLINED_FUNCTION_9_12();
  if (v5)
  {
    outlined destroy of SearchResult?(v1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    uint64_t v7 = (void *)OUTLINED_FUNCTION_43_1(v6, (uint64_t)static Logging.search);
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_24_13(v8))
    {
      uint64_t v9 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_67_0(v9);
      OUTLINED_FUNCTION_11_14(&dword_257DC6000, v10, v11, "SearchSpotlightEntity missing data of the underlying CSSearchableItem");
      OUTLINED_FUNCTION_21_13();
    }

    lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
    uint64_t v12 = OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_29_12(v12, v13);
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_2_8();
    v15(v14);
    IntentFile.data.getter();
    OUTLINED_FUNCTION_42_7();
    type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for NSKeyedUnarchiver);
    type metadata accessor for NSUserDefaults(0, &lazy cache variable for type metadata for CSSearchableItem);
    uint64_t v16 = OUTLINED_FUNCTION_13_19();
    if (v0)
    {
      uint64_t v17 = OUTLINED_FUNCTION_1_14();
      v18(v17);
      OUTLINED_FUNCTION_25_12();
    }
    else
    {
      uint64_t v19 = v16;
      OUTLINED_FUNCTION_25_12();
      if (v19)
      {
        uint64_t v20 = OUTLINED_FUNCTION_1_14();
        v21(v20);
      }
      else
      {
        if (one-time initialization token for search != -1) {
          swift_once();
        }
        uint64_t v22 = type metadata accessor for Logger();
        uint64_t v23 = (void *)OUTLINED_FUNCTION_43_1(v22, (uint64_t)static Logging.search);
        os_log_type_t v24 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_26_15(v24))
        {
          uint64_t v25 = (_WORD *)OUTLINED_FUNCTION_55();
          OUTLINED_FUNCTION_41_10(v25);
          OUTLINED_FUNCTION_12_17(&dword_257DC6000, v26, v27, "NSKeyedUnarchiver returning nil when unarchiving CSSearchableItem data");
          OUTLINED_FUNCTION_34();
        }

        lazy protocol witness table accessor for type SearchSpotlightOpenerError and conformance SearchSpotlightOpenerError();
        uint64_t v28 = OUTLINED_FUNCTION_42();
        OUTLINED_FUNCTION_14_17(v28, v29);
        uint64_t v30 = OUTLINED_FUNCTION_1_14();
        v31(v30);
      }
    }
  }
  OUTLINED_FUNCTION_27_13();
  OUTLINED_FUNCTION_52_7();
}

uint64_t static CSSearchableItem.makeFrom(data:)()
{
  return static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
}

uint64_t CSSearchableItem.senderNames.getter()
{
  if ((CSSearchableItem.isMailMessageItem.getter() & 1) == 0) {
    return 0;
  }
  id v1 = objc_msgSend(v0, sel_attributeSet);
  return outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.authorNames.getter(v1);
}

uint64_t CSSearchableItem.contentCreationDate.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_attributeSet);
  id v4 = objc_msgSend(v3, sel_contentCreationDate);

  if (v4)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = type metadata accessor for Date();
  return __swift_storeEnumTagSinglePayload(a1, v5, 1, v6);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchSpotlightEntity.validateParameters()()
{
  id v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SearchSpotlightEntity(0) + 52));
  uint64_t v3 = *v1;
  unint64_t v2 = v1[1];
  uint64_t v4 = v3 & 0xFFFFFFFFFFFFLL;
  if ((v2 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(v2) & 0xF;
  }
  else {
    uint64_t v5 = v4;
  }
  if (!v5)
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    uint64_t v7 = (void *)OUTLINED_FUNCTION_43_1(v6, (uint64_t)static Logging.search);
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    if (OUTLINED_FUNCTION_24_13(v8))
    {
      uint64_t v9 = (_WORD *)OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_67_0(v9);
      OUTLINED_FUNCTION_11_14(&dword_257DC6000, v10, v11, "Attempting to create SearchSpotlightEntity without id");
      OUTLINED_FUNCTION_21_13();
    }

    lazy protocol witness table accessor for type SearchToolError and conformance SearchToolError();
    OUTLINED_FUNCTION_42();
    _OWORD *v12 = xmmword_258668A50;
    swift_willThrow();
  }
}

uint64_t CSSearchableItem.title.getter()
{
  uint64_t v1 = outlined bridged method (pb) of @objc CSSearchableItem.bundleID.getter(v0);
  if (v2)
  {
    uint64_t v3 = v1;
    if (v1 == 0xD000000000000015 && (OUTLINED_FUNCTION_19_13(), v4)
      || (OUTLINED_FUNCTION_18_17() & 1) != 0
      || v3 == 0xD000000000000023 && (OUTLINED_FUNCTION_19_13(), v4)
      || (OUTLINED_FUNCTION_18_17() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      id v5 = objc_msgSend(v0, sel_attributeSet);
      uint64_t v6 = &selRef_title;
      return outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(v5, (SEL *)v6);
    }
    if (v3 == 0xD000000000000014 && (OUTLINED_FUNCTION_19_13(), v4)
      || (OUTLINED_FUNCTION_18_17() & 1) != 0
      || v3 == 0xD00000000000001DLL && (OUTLINED_FUNCTION_19_13(), v4)
      || (OUTLINED_FUNCTION_18_17() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      id v5 = objc_msgSend(v0, sel_attributeSet);
      uint64_t v6 = &selRef_subject;
      return outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(v5, (SEL *)v6);
    }
    if (v3 == 0xD000000000000013 && (OUTLINED_FUNCTION_19_13(), v4)
      || (OUTLINED_FUNCTION_18_17() & 1) != 0
      || v3 == 0xD000000000000012 && (OUTLINED_FUNCTION_19_13(), v4)
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      id v8 = objc_msgSend(v0, sel_attributeSet);
LABEL_32:
      id v5 = v8;
      uint64_t v6 = &selRef_displayName;
      return outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(v5, (SEL *)v6);
    }
    if (v3 == 0xD000000000000019)
    {
      OUTLINED_FUNCTION_19_13();
      if (v4)
      {
        swift_bridgeObjectRelease();
LABEL_29:
        id v5 = objc_msgSend(v0, sel_attributeSet);
        uint64_t v6 = &selRef_photosContentDescription;
        return outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(v5, (SEL *)v6);
      }
    }
    char v9 = OUTLINED_FUNCTION_18_17();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_29;
    }
  }
  uint64_t result = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(objc_msgSend(v0, sel_attributeSet), (SEL *)&selRef_title);
  if (!v10)
  {
    id v8 = objc_msgSend(v0, sel_attributeSet);
    goto LABEL_32;
  }
  return result;
}

void SearchSpotlightEntity.init(result:card:)()
{
  OUTLINED_FUNCTION_104_0();
  id v130 = v1;
  uint64_t v3 = v2;
  uint64_t v137 = v4;
  uint64_t v138 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_184_0();
  uint64_t v135 = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UTType?);
  uint64_t v9 = OUTLINED_FUNCTION_81(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_65_5(v10, v115);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v12 = OUTLINED_FUNCTION_81(v11);
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_185_0();
  id v134 = v13;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v14);
  uint64_t v124 = (char *)&v115 - v15;
  OUTLINED_FUNCTION_26_8();
  uint64_t v125 = type metadata accessor for URL();
  OUTLINED_FUNCTION_1();
  uint64_t v119 = v16;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_185_0();
  uint64_t v117 = v18;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_27_10();
  uint64_t v118 = v20;
  uint64_t v21 = OUTLINED_FUNCTION_26_8();
  uint64_t v131 = type metadata accessor for SearchResultItem(v21);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_184_0();
  uint64_t v132 = v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v25 = OUTLINED_FUNCTION_81(v24);
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_185_0();
  uint64_t v116 = v26;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_27_10();
  uint64_t v129 = v28;
  uint64_t v29 = type metadata accessor for IntentFile();
  OUTLINED_FUNCTION_1();
  uint64_t v123 = v30;
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_184_0();
  uint64_t v122 = v32;
  uint64_t v33 = OUTLINED_FUNCTION_26_8();
  uint64_t v34 = type metadata accessor for SearchSpotlightEntity.Builder(v33);
  long long v35 = (int *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_185_0();
  uint64_t v126 = v36;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v37);
  uint64_t v38 = OUTLINED_FUNCTION_88_5();
  uint64_t v39 = type metadata accessor for SearchResult(v38);
  uint64_t v128 = *(int *)(v39 + 20);
  id v40 = *(id *)(v3 + v128);
  id v133 = (id)CSSearchableItem.title.getter();
  uint64_t v127 = v41;
  uint64_t v121 = (uint64_t)v0 + v35[8];
  __swift_storeEnumTagSinglePayload(v121, 1, 1, v29);
  long long v42 = (uint64_t *)((char *)v0 + v35[9]);
  uint64_t v43 = (uint64_t *)((char *)v0 + v35[10]);
  uint64_t v44 = v35[11];
  *(uint64_t *)((char *)v0 + v44) = 0;
  uint64_t v45 = (uint64_t)v0 + v35[12];
  OUTLINED_FUNCTION_46_1();
  __swift_storeEnumTagSinglePayload(v46, v47, v48, v39);
  *(uint64_t *)((char *)v0 + v35[13]) = MEMORY[0x263F8EE78];
  uint64_t v115 = (uint64_t)v0 + v35[14];
  OUTLINED_FUNCTION_46_1();
  uint64_t v136 = v29;
  __swift_storeEnumTagSinglePayload(v49, v50, v51, v29);
  id v52 = objc_msgSend(v40, sel_uniqueIdentifier);
  uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v55 = v54;

  *uint64_t v0 = v53;
  v0[1] = v55;
  v0[2] = outlined bridged method (pb) of @objc CSSearchableItem.bundleID.getter(v40);
  v0[3] = v56;
  uint64_t v57 = v127;
  *uint64_t v43 = v133;
  v43[1] = v57;
  uint64_t v58 = v138;
  id v133 = v40;
  *long long v42 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(objc_msgSend(v40, sel_attributeSet), (SEL *)&selRef_contentType);
  v42[1] = v59;
  uint64_t v60 = v129;
  outlined destroy of SearchResult?(v45, &demangling cache variable for type metadata for SearchResult?);
  _s10OmniSearch0B6ResultVWOcTm_1(v58, v45, (void (*)(void))type metadata accessor for SearchResult);
  OUTLINED_FUNCTION_120_3();
  __swift_storeEnumTagSinglePayload(v61, v62, v63, v39);
  uint64_t v64 = *(void **)((char *)v0 + v44);
  uint64_t v65 = (uint64_t)v130;
  id v66 = v130;

  *(uint64_t *)((char *)v0 + v44) = v65;
  id v67 = *(id *)(v58 + v128);
  CSSearchableItem.asIntentFile()();
  uint64_t v69 = v121;
  uint64_t v68 = v122;
  uint64_t v70 = v123;

  OUTLINED_FUNCTION_120_3();
  uint64_t v71 = v136;
  __swift_storeEnumTagSinglePayload(v72, v73, v74, v136);
  OUTLINED_FUNCTION_53_2(v60, 1, v71);
  if (v75)
  {
    outlined destroy of SearchResult?(v60, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v76 = type metadata accessor for Logger();
    __swift_project_value_buffer(v76, (uint64_t)static Logging.search);
    uint64_t v77 = Logger.logObject.getter();
    os_log_type_t v78 = static os_log_type_t.error.getter();
    BOOL v79 = os_log_type_enabled(v77, v78);
    uint64_t v94 = v137;
    uint64_t v95 = (uint64_t)v134;
    if (v79)
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_99_3(&dword_257DC6000, v80, v81, "found nil encoded CSSI when trying to build SpotlightSearchEntity");
      OUTLINED_FUNCTION_34();
    }
  }
  else
  {
    uint64_t v89 = *(void (**)(uint64_t))(v70 + 32);
    uint64_t v90 = OUTLINED_FUNCTION_110_2();
    v89(v90);
    outlined destroy of SearchResult?(v69, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    ((void (*)(uint64_t, uint64_t, uint64_t))v89)(v69, v68, v71);
    OUTLINED_FUNCTION_120_3();
    __swift_storeEnumTagSinglePayload(v91, v92, v93, v71);
    uint64_t v94 = v137;
    uint64_t v95 = (uint64_t)v134;
  }
  uint64_t v82 = v132;
  _s10OmniSearch0B6ResultVWOcTm_1(v138, v132, (void (*)(void))type metadata accessor for SearchResultItem);
  if (swift_getEnumCaseMultiPayload() == 11)
  {
    uint64_t v83 = *(void **)(v82 + 16);
    swift_bridgeObjectRetain();
    id v84 = v83;
    id v85 = objc_msgSend(v84, sel_attributeSet);
    id v86 = objc_msgSend(v85, sel_contentURL);

    if (v86)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v87 = 0;
    }
    else
    {
      uint64_t v87 = 1;
    }
    uint64_t v96 = (uint64_t)v124;
    uint64_t v97 = v125;
    __swift_storeEnumTagSinglePayload(v95, v87, 1, v125);
    uint64_t v98 = OUTLINED_FUNCTION_105_4();
    outlined init with take of SearchResultItem?(v98, v99, v100);

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_53_2(v96, 1, v97);
    uint64_t v88 = v135;
    if (v75)
    {

      swift_bridgeObjectRelease();
      outlined destroy of SearchResult?(v96, &demangling cache variable for type metadata for URL?);
    }
    else
    {
      uint64_t v101 = v119;
      uint64_t v102 = *(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 32);
      id v134 = v66;
      uint64_t v103 = v118;
      v102(v118, v96, v97);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16))(v117, v103, v97);
      uint64_t v104 = type metadata accessor for UTType();
      OUTLINED_FUNCTION_32(v120, v105, v106, v104);
      uint64_t v107 = v116;
      IntentFile.init(fileURL:filename:type:)();

      swift_bridgeObjectRelease();
      uint64_t v108 = v103;
      id v66 = v134;
      (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v108, v97);
      uint64_t v94 = v137;
      OUTLINED_FUNCTION_120_3();
      __swift_storeEnumTagSinglePayload(v109, v110, v111, v112);
      outlined assign with take of SearchResultItem?(v107, v115, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    }
  }
  else
  {
    _s10OmniSearch0B10ResultItemOWOhTm_3(v82, (void (*)(void))type metadata accessor for SearchResultItem);
    uint64_t v88 = v135;
  }
  _s10OmniSearch0B6ResultVWOcTm_1((uint64_t)v0, v126, (void (*)(void))type metadata accessor for SearchSpotlightEntity.Builder);
  SearchSpotlightEntity.init(builder:)();

  _s10OmniSearch0B10ResultItemOWOhTm_3(v138, (void (*)(void))type metadata accessor for SearchResult);
  uint64_t v113 = type metadata accessor for SearchSpotlightEntity(0);
  if (__swift_getEnumTagSinglePayload(v88, 1, v113))
  {
    outlined destroy of SearchResult?(v88, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
    uint64_t v114 = 1;
  }
  else
  {
    _s10OmniSearch0B15SpotlightEntityVWObTm_0(v88, v94, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
    uint64_t v114 = 0;
  }
  _s10OmniSearch0B10ResultItemOWOhTm_3((uint64_t)v0, (void (*)(void))type metadata accessor for SearchSpotlightEntity.Builder);
  __swift_storeEnumTagSinglePayload(v94, v114, 1, v113);
  OUTLINED_FUNCTION_119_0();
}

uint64_t SearchSpotlightEntity.validTypeIdentifiers.getter()
{
  uint64_t v3 = v0;
  uint64_t v4 = type metadata accessor for UTType();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_18_8();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v9 = OUTLINED_FUNCTION_81(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_13_12();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String?>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_258661D60;
  EntityProperty.wrappedValue.getter();
  uint64_t v11 = type metadata accessor for IntentFile();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v11);
  uint64_t v13 = OUTLINED_FUNCTION_117_0();
  outlined destroy of SearchResult?(v13, v14);
  if (EnumTagSinglePayload == 1)
  {
    *(void *)(inited + 32) = 0;
    *(void *)(inited + 40) = 0;
    uint64_t v16 = *(void *)(v3 + 64);
    uint64_t v15 = *(void *)(v3 + 72);
    *(void *)(inited + 48) = v16;
    *(void *)(inited + 56) = v15;
    swift_bridgeObjectRetain();
    uint64_t v17 = MEMORY[0x263F8EE78];
    if (!v15) {
      goto LABEL_14;
    }
    goto LABEL_9;
  }
  if (one-time initialization token for searchToolExportedExperiences != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v4, (uint64_t)static UTType.searchToolExportedExperiences);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v1, v18, v4);
  uint64_t v19 = UTType.identifier.getter();
  uint64_t v21 = v20;
  uint64_t v22 = OUTLINED_FUNCTION_105_4();
  v23(v22);
  *(void *)(inited + 32) = v19;
  *(void *)(inited + 40) = v21;
  uint64_t v16 = *(void *)(v3 + 64);
  uint64_t v15 = *(void *)(v3 + 72);
  *(void *)(inited + 48) = v16;
  *(void *)(inited + 56) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v17 = v24;
  unint64_t v25 = *(void *)(v24 + 16);
  if (v25 >= *(void *)(v24 + 24) >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v17 = v32;
  }
  *(void *)(v17 + 16) = v25 + 1;
  uint64_t v26 = v17 + 16 * v25;
  *(void *)(v26 + 32) = v19;
  *(void *)(v26 + 40) = v21;
  if (v15)
  {
LABEL_9:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v17 = v30;
    }
    unint64_t v27 = *(void *)(v17 + 16);
    if (v27 >= *(void *)(v17 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v17 = v31;
    }
    *(void *)(v17 + 16) = v27 + 1;
    uint64_t v28 = v17 + 16 * v27;
    *(void *)(v28 + 32) = v16;
    *(void *)(v28 + 40) = v15;
  }
LABEL_14:
  swift_release();
  return v17;
}

uint64_t SearchSpotlightEntity.bundleId.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchSpotlightEntity.bundleId.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t (*SearchSpotlightEntity.bundleId.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchSpotlightEntity.$bundleId.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchSpotlightEntity.experienceSourceType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F5B7B8];
  type metadata accessor for SearchResultType();
  OUTLINED_FUNCTION_7_2();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104);
  return v5(a1, v2, v3);
}

id SearchSpotlightEntity.card.getter()
{
  type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for SFCard);
  uint64_t v2 = *(void *)(v0 + 8);
  unint64_t v1 = *(void *)(v0 + 16);
  outlined copy of Data?(v2, v1);
  return SFCard.init(data:)(v2, v1);
}

uint64_t key path setter for SearchSpotlightEntity.card : SearchSpotlightEntity(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  return SearchSpotlightEntity.card.setter(v1);
}

uint64_t SearchSpotlightEntity.card.setter(void *a1)
{
  uint64_t v2 = v1;
  if (a1)
  {
    uint64_t v4 = SFCard.data.getter();
    unint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v6 = 0xF000000000000000;
  }
  uint64_t result = outlined consume of Data?(*(void *)(v2 + 8), *(void *)(v2 + 16));
  *(void *)(v2 + 8) = v4;
  *(void *)(v2 + 16) = v6;
  return result;
}

void (*SearchSpotlightEntity.card.modify(id *a1))(uint64_t a1)
{
  a1[1] = (id)v1;
  type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for SFCard);
  uint64_t v4 = *(void *)(v1 + 8);
  unint64_t v3 = *(void *)(v1 + 16);
  outlined copy of Data?(v4, v3);
  *a1 = SFCard.init(data:)(v4, v3);
  return SearchSpotlightEntity.card.modify;
}

void SearchSpotlightEntity.card.modify(uint64_t a1)
{
  uint64_t v2 = (void *)OUTLINED_FUNCTION_160_1(a1);
  if (v3)
  {
    id v13 = v2;
    if (v2)
    {
      id v4 = v2;
      uint64_t v5 = SFCard.data.getter();
      unint64_t v7 = v6;
    }
    else
    {
      uint64_t v5 = 0;
      unint64_t v7 = 0xF000000000000000;
    }
    uint64_t v11 = *(void *)(v1 + 8);
    outlined consume of Data?(*(void *)(v11 + 8), *(void *)(v11 + 16));
    *(void *)(v11 + 8) = v5;
    *(void *)(v11 + 16) = v7;
  }
  else
  {
    if (v2)
    {
      id v14 = v2;
      uint64_t v8 = SFCard.data.getter();
      unint64_t v10 = v9;
    }
    else
    {
      uint64_t v8 = 0;
      unint64_t v10 = 0xF000000000000000;
    }
    uint64_t v12 = *(void *)(v1 + 8);
    outlined consume of Data?(*(void *)(v12 + 8), *(void *)(v12 + 16));
    *(void *)(v12 + 8) = v8;
    *(void *)(v12 + 16) = v10;
  }
}

uint64_t SearchSpotlightEntity.documentSource.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchSpotlightEntity.documentSource.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t (*SearchSpotlightEntity.documentSource.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchSpotlightEntity.$documentSource.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchSpotlightEntity.title.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchSpotlightEntity.bundleId : SearchSpotlightEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  swift_bridgeObjectRetain();
  uint64_t v6 = OUTLINED_FUNCTION_110_2();
  return a5(v6);
}

uint64_t SearchSpotlightEntity.title.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t (*SearchSpotlightEntity.title.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchSpotlightEntity.$title.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchSpotlightEntity.experienceFile.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t SearchSpotlightEntity.experienceFile.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_79_3();
  EntityProperty.wrappedValue.setter();
  return outlined destroy of SearchResult?(a1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t (*SearchSpotlightEntity.experienceFile.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchSpotlightEntity.$experienceFile.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchSpotlightEntity.encodedSearchableItem.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t key path setter for SearchSpotlightEntity.experienceFile : SearchSpotlightEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v9 = OUTLINED_FUNCTION_81(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_18_8();
  outlined init with copy of SearchResultItem?(a1, v5, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  return a5(v5);
}

uint64_t SearchSpotlightEntity.encodedSearchableItem.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_68_5();
  OUTLINED_FUNCTION_79_3();
  EntityProperty.wrappedValue.setter();
  return outlined destroy of SearchResult?(a1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t (*SearchSpotlightEntity.encodedSearchableItem.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchSpotlightEntity.$encodedSearchableItem.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchSpotlightEntity.fileContent.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t SearchSpotlightEntity.fileContent.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_79_3();
  EntityProperty.wrappedValue.setter();
  return outlined destroy of SearchResult?(a1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t (*SearchSpotlightEntity.fileContent.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchSpotlightEntity.$fileContent.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchSpotlightEntity.searchableItemType.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t SearchSpotlightEntity.sourceResult.getter@<X0>(uint64_t a1@<X8>)
{
  return SearchSpotlightEntity.sourceResult.getter(type metadata accessor for SearchSpotlightEntity, &demangling cache variable for type metadata for SearchResult?, a1);
}

uint64_t SearchSpotlightEntity.sourceResult.setter(uint64_t a1)
{
  return SearchSpotlightEntity.sourceResult.setter(a1, type metadata accessor for SearchSpotlightEntity, &demangling cache variable for type metadata for SearchResult?);
}

uint64_t (*SearchSpotlightEntity.sourceResult.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void SearchSpotlightEntity.init(_:)()
{
  OUTLINED_FUNCTION_104_0();
  id v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = OUTLINED_FUNCTION_44_3();
  uint64_t v10 = type metadata accessor for SearchSpotlightEntity.Builder(v9);
  uint64_t v11 = (int *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_18();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_31_9();
  *uint64_t v2 = 0u;
  v2[1] = 0u;
  uint64_t v13 = (uint64_t)v2 + v11[8];
  uint64_t v14 = type metadata accessor for IntentFile();
  __swift_storeEnumTagSinglePayload(v13, 1, 1, v14);
  uint64_t v15 = (void *)((char *)v2 + v11[9]);
  *uint64_t v15 = 0;
  v15[1] = 0;
  uint64_t v16 = (void *)((char *)v2 + v11[10]);
  *uint64_t v16 = 0;
  v16[1] = 0;
  *(void *)((char *)v2 + v11[11]) = 0;
  uint64_t v17 = (uint64_t)v2 + v11[12];
  uint64_t v18 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_32(v17, v19, v20, v18);
  *(void *)((char *)v2 + v11[13]) = MEMORY[0x263F8EE78];
  __swift_storeEnumTagSinglePayload((uint64_t)v2 + v11[14], 1, 1, v14);
  v4(v2);
  _s10OmniSearch0B6ResultVWOcTm_1((uint64_t)v2, v1, (void (*)(void))type metadata accessor for SearchSpotlightEntity.Builder);
  SearchSpotlightEntity.init(builder:)();
  _s10OmniSearch0B10ResultItemOWOhTm_3((uint64_t)v2, (void (*)(void))type metadata accessor for SearchSpotlightEntity.Builder);
  uint64_t v21 = type metadata accessor for SearchSpotlightEntity(0);
  if (__swift_getEnumTagSinglePayload(v0, 1, v21))
  {
    outlined destroy of SearchResult?(v0, (uint64_t *)&demangling cache variable for type metadata for SearchSpotlightEntity?);
    uint64_t v22 = 1;
  }
  else
  {
    uint64_t v23 = OUTLINED_FUNCTION_0_2();
    _s10OmniSearch0B15SpotlightEntityVWObTm_0(v23, v24, v25);
    uint64_t v22 = 0;
  }
  __swift_storeEnumTagSinglePayload(v6, v22, 1, v21);
  OUTLINED_FUNCTION_119_0();
}

uint64_t SearchSpotlightEntity.Builder.init()@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = (int *)type metadata accessor for SearchSpotlightEntity.Builder(0);
  *a1 = 0u;
  a1[1] = 0u;
  uint64_t v3 = (uint64_t)a1 + v2[6];
  uint64_t v4 = type metadata accessor for IntentFile();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  uint64_t v5 = (void *)((char *)a1 + v2[7]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (void *)((char *)a1 + v2[8]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(void *)((char *)a1 + v2[9]) = 0;
  uint64_t v7 = (uint64_t)a1 + v2[10];
  uint64_t v8 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_32(v7, v9, v10, v8);
  *(void *)((char *)a1 + v2[11]) = MEMORY[0x263F8EE78];
  uint64_t v11 = (uint64_t)a1 + v2[12];
  return __swift_storeEnumTagSinglePayload(v11, 1, 1, v4);
}

void SearchSpotlightEntity.init(builder:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v4 = v3;
  uint64_t v55 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v53 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_88_5();
  uint64_t v10 = type metadata accessor for LocalizedStringResource();
  uint64_t v11 = OUTLINED_FUNCTION_81(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = OUTLINED_FUNCTION_66_4();
  uint64_t v13 = (int *)type metadata accessor for SearchSpotlightEntity(v12);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_59_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_16_14();
  *uint64_t v0 = MEMORY[0x25A2C4900](v2);
  *(_OWORD *)(v0 + 1) = xmmword_258665BD0;
  OUTLINED_FUNCTION_44_10();
  v0[3] = MEMORY[0x25A2C4900](v2);
  OUTLINED_FUNCTION_91_4();
  v0[4] = MEMORY[0x25A2C4900](v2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  LocalizedStringResource.init(stringLiteral:)();
  v0[5] = MEMORY[0x25A2C48A0](v2);
  OUTLINED_FUNCTION_16_14();
  v0[6] = MEMORY[0x25A2C48A0](v2);
  OUTLINED_FUNCTION_50_10();
  v0[7] = MEMORY[0x25A2C48A0](v2);
  uint64_t v15 = (uint64_t)v0 + v13[12];
  uint64_t v16 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_32(v15, v17, v18, v16);
  uint64_t v19 = v13[14];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_16_14();
  uint64_t v20 = MEMORY[0x25A2C4900](v2);
  uint64_t v54 = v19;
  *(void *)((char *)v0 + v19) = v20;
  uint64_t v21 = v4[1];
  if (v21)
  {
    uint64_t v22 = *v4;
    id v52 = v13;
    uint64_t v23 = (void *)((char *)v0 + v13[13]);
    void *v23 = v22;
    v23[1] = v21;
    uint64_t v24 = (int *)type metadata accessor for SearchSpotlightEntity.Builder(0);
    unint64_t v25 = (uint64_t *)((char *)v4 + v24[7]);
    uint64_t v26 = v25[1];
    v0[8] = *v25;
    v0[9] = v26;
    outlined init with copy of SearchResultItem?((uint64_t)v4 + v24[6], v1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    outlined init with copy of SearchResultItem?(v1, v53, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    EntityProperty.wrappedValue.setter();
    outlined destroy of SearchResult?(v1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    uint64_t v28 = v4[3];
    uint64_t v56 = v4[2];
    uint64_t v27 = v56;
    uint64_t v57 = v28;
    swift_bridgeObjectRetain();
    EntityProperty.wrappedValue.setter();
    type metadata accessor for LocalIndexClient();
    uint64_t v56 = static LocalIndexClient.displayName(for:)(v27, v28);
    uint64_t v57 = v29;
    EntityProperty.wrappedValue.setter();
    uint64_t v30 = (uint64_t *)((char *)v4 + v24[8]);
    uint64_t v31 = v30[1];
    uint64_t v56 = *v30;
    uint64_t v57 = v31;
    swift_bridgeObjectRetain();
    EntityProperty.wrappedValue.setter();
    outlined assign with copy of SearchResult?((uint64_t)v4 + v24[10], v15);
    unint64_t v32 = swift_bridgeObjectRetain();
    IntentFile.init(experiences:)(v32, v1);
    uint64_t v33 = OUTLINED_FUNCTION_117_0();
    outlined init with copy of SearchResultItem?(v33, v34, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    EntityProperty.wrappedValue.setter();
    outlined destroy of SearchResult?(v1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    uint64_t v56 = SearchSpotlightEntity.validTypeIdentifiers.getter();
    EntityProperty.wrappedValue.setter();
    long long v35 = *(void **)((char *)v4 + v24[9]);
    if (v35)
    {
      id v36 = v35;
      uint64_t v37 = SFCard.data.getter();
      unint64_t v39 = v38;
    }
    else
    {
      uint64_t v37 = 0;
      unint64_t v39 = 0xF000000000000000;
    }
    uint64_t v46 = v55;
    outlined consume of Data?(v0[1], v0[2]);
    v0[1] = v37;
    v0[2] = v39;
    outlined init with copy of SearchResultItem?((uint64_t)v4 + v24[12], v1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    uint64_t v47 = OUTLINED_FUNCTION_117_0();
    outlined init with copy of SearchResultItem?(v47, v48, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    EntityProperty.wrappedValue.setter();
    outlined destroy of SearchResult?(v1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    _s10OmniSearch0B10ResultItemOWOhTm_3((uint64_t)v4, (void (*)(void))type metadata accessor for SearchSpotlightEntity.Builder);
    _s10OmniSearch0B6ResultVWOcTm_1((uint64_t)v0, v46, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
    OUTLINED_FUNCTION_120_3();
    __swift_storeEnumTagSinglePayload(v49, v50, v51, (uint64_t)v52);
    _s10OmniSearch0B10ResultItemOWOhTm_3((uint64_t)v0, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  }
  else
  {
    uint64_t v40 = v55;
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v41 = type metadata accessor for Logger();
    __swift_project_value_buffer(v41, (uint64_t)static Logging.search);
    long long v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v42, v43))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_99_3(&dword_257DC6000, v44, v45, "Missing fields to create SearchSpotlightEntity");
      OUTLINED_FUNCTION_34();
    }

    _s10OmniSearch0B10ResultItemOWOhTm_3((uint64_t)v4, (void (*)(void))type metadata accessor for SearchSpotlightEntity.Builder);
    swift_release();
    outlined consume of Data?(v0[1], v0[2]);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    outlined destroy of SearchResult?(v15, &demangling cache variable for type metadata for SearchResult?);
    swift_release();
    __swift_storeEnumTagSinglePayload(v40, 1, 1, (uint64_t)v13);
  }
  OUTLINED_FUNCTION_119_0();
}

uint64_t SearchSpotlightEntity.supportedTypeIdentifiersForExport.setter()
{
  return EntityProperty.wrappedValue.setter();
}

void SearchSpotlightEntity.init()()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_95_1();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v27 - v6;
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_13_12();
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_14_10();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_70_5();
  *(void *)uint64_t v2 = MEMORY[0x25A2C4900](v0);
  *(_OWORD *)(v2 + 8) = xmmword_258665BD0;
  OUTLINED_FUNCTION_44_10();
  *(void *)(v2 + 24) = MEMORY[0x25A2C4900](v0);
  OUTLINED_FUNCTION_91_4();
  *(void *)(v2 + 32) = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  LocalizedStringResource.init(stringLiteral:)();
  *(void *)(v2 + 40) = MEMORY[0x25A2C48A0](v0);
  OUTLINED_FUNCTION_70_5();
  *(void *)(v2 + 48) = MEMORY[0x25A2C48A0](v0);
  OUTLINED_FUNCTION_50_10();
  *(void *)(v2 + 56) = MEMORY[0x25A2C48A0](v0);
  uint64_t v11 = (int *)type metadata accessor for SearchSpotlightEntity(0);
  uint64_t v12 = v2 + v11[12];
  uint64_t v13 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_32(v12, v14, v15, v13);
  uint64_t v16 = v11[14];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_70_5();
  *(void *)(v2 + v16) = MEMORY[0x25A2C4900](v0);
  UUID.init()();
  uint64_t v17 = UUID.uuidString.getter();
  uint64_t v19 = v18;
  uint64_t v20 = OUTLINED_FUNCTION_117_0();
  v21(v20);
  uint64_t v22 = (uint64_t *)(v2 + v11[13]);
  *uint64_t v22 = v17;
  v22[1] = v19;
  type metadata accessor for IntentFile();
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = 0;
  OUTLINED_FUNCTION_92_4();
  uint64_t v23 = OUTLINED_FUNCTION_105_4();
  outlined init with copy of SearchResultItem?(v23, v24, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  EntityProperty.wrappedValue.setter();
  outlined destroy of SearchResult?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  OUTLINED_FUNCTION_92_4();
  uint64_t v25 = OUTLINED_FUNCTION_105_4();
  outlined init with copy of SearchResultItem?(v25, v26, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  EntityProperty.wrappedValue.setter();
  outlined destroy of SearchResult?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  v27[0] = 0;
  v27[1] = 0;
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_119_0();
}

uint64_t SearchSpotlightEntity.Builder.id.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t SearchSpotlightEntity.Builder.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SearchSpotlightEntity.Builder.id.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchSpotlightEntity.Builder.bundleId.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t SearchSpotlightEntity.Builder.bundleId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SearchSpotlightEntity.Builder.bundleId.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchSpotlightEntity.Builder.encodedSearchableItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SearchSpotlightEntity.Builder(0);
  return outlined init with copy of SearchResultItem?(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t SearchSpotlightEntity.Builder.encodedSearchableItem.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SearchSpotlightEntity.Builder(0);
  return outlined assign with take of SearchResultItem?(a1, v1 + *(int *)(v3 + 24), (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t (*SearchSpotlightEntity.Builder.encodedSearchableItem.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchSpotlightEntity.Builder.spotlightContentTypeIdentifier.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t SearchSpotlightEntity.Builder.spotlightContentTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SearchSpotlightEntity.Builder(0) + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SearchSpotlightEntity.Builder.spotlightContentTypeIdentifier.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchSpotlightEntity.Builder.title.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t SearchSpotlightEntity.Builder.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SearchSpotlightEntity.Builder(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SearchSpotlightEntity.Builder.title.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void *SearchSpotlightEntity.Builder.card.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for SearchSpotlightEntity.Builder(0) + 36));
  id v2 = v1;
  return v1;
}

void SearchSpotlightEntity.Builder.card.setter()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_57_5() + 36);

  *(void *)(v1 + v2) = v0;
}

uint64_t (*SearchSpotlightEntity.Builder.card.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchSpotlightEntity.Builder.sourceResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SearchSpotlightEntity.Builder(0);
  return outlined init with copy of SearchResultItem?(v1 + *(int *)(v3 + 40), a1, &demangling cache variable for type metadata for SearchResult?);
}

uint64_t SearchSpotlightEntity.Builder.sourceResult.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SearchSpotlightEntity.Builder(0);
  return outlined assign with take of SearchResultItem?(a1, v1 + *(int *)(v3 + 40), &demangling cache variable for type metadata for SearchResult?);
}

uint64_t (*SearchSpotlightEntity.Builder.sourceResult.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchSpotlightEntity.Builder.experiences.getter()
{
  type metadata accessor for SearchSpotlightEntity.Builder(0);
  return swift_bridgeObjectRetain();
}

uint64_t SearchSpotlightEntity.Builder.experiences.setter()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_57_5() + 44);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

uint64_t (*SearchSpotlightEntity.Builder.experiences.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchSpotlightEntity.Builder.fileContent.getter@<X0>(uint64_t a1@<X8>)
{
  return SearchSpotlightEntity.sourceResult.getter(type metadata accessor for SearchSpotlightEntity.Builder, (uint64_t *)&demangling cache variable for type metadata for IntentFile?, a1);
}

uint64_t SearchSpotlightEntity.sourceResult.getter@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = a1(0);
  return outlined init with copy of SearchResultItem?(v3 + *(int *)(v6 + 48), a3, a2);
}

uint64_t SearchSpotlightEntity.Builder.fileContent.setter(uint64_t a1)
{
  return SearchSpotlightEntity.sourceResult.setter(a1, type metadata accessor for SearchSpotlightEntity.Builder, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t SearchSpotlightEntity.sourceResult.setter(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t v6 = a2(0);
  return outlined assign with take of SearchResultItem?(a1, v3 + *(int *)(v6 + 48), a3);
}

uint64_t (*SearchSpotlightEntity.Builder.fileContent.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t default argument 7 of SearchSpotlightEntity.Builder.init(id:bundleId:encodedSearchableItem:spotlightContentTypeIdentifier:title:card:sourceResult:experiences:fileContent:)()
{
  return MEMORY[0x263F8EE78];
}

uint64_t SearchSpotlightEntity.Builder.init(id:bundleId:encodedSearchableItem:spotlightContentTypeIdentifier:title:card:sourceResult:experiences:fileContent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  uint64_t v19 = (int *)type metadata accessor for SearchSpotlightEntity.Builder(0);
  outlined init with take of SearchResultItem?(a5, (uint64_t)a9 + v19[6], (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v20 = (void *)((char *)a9 + v19[7]);
  *uint64_t v20 = a6;
  v20[1] = a7;
  uint64_t v21 = (void *)((char *)a9 + v19[8]);
  *uint64_t v21 = a8;
  v21[1] = a10;
  *(void *)((char *)a9 + v19[9]) = a11;
  outlined init with take of SearchResultItem?(a12, (uint64_t)a9 + v19[10], &demangling cache variable for type metadata for SearchResult?);
  *(void *)((char *)a9 + v19[11]) = a13;
  return outlined init with take of SearchResultItem?(a14, (uint64_t)a9 + v19[12], (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t SearchSpotlightEntity.id.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t static SearchSpotlightEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchSpotlightEntity.typeDisplayRepresentation);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static SearchSpotlightEntity.typeDisplayRepresentation.setter()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  __swift_project_value_buffer(v0, (uint64_t)static SearchSpotlightEntity.typeDisplayRepresentation);
  swift_beginAccess();
  OUTLINED_FUNCTION_30_2();
  uint64_t v1 = OUTLINED_FUNCTION_0_2();
  v2(v1);
  swift_endAccess();
  uint64_t v3 = OUTLINED_FUNCTION_79_0();
  return v4(v3);
}

uint64_t (*static SearchSpotlightEntity.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  __swift_project_value_buffer(v0, (uint64_t)static SearchSpotlightEntity.typeDisplayRepresentation);
  swift_beginAccess();
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

void SearchSpotlightEntity.displayRepresentation.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v4 = v0;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_14_10();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v56 = type metadata accessor for SearchSpotlightEntity(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_185_0();
  uint64_t v55 = v12;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_27_10();
  uint64_t v15 = v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  uint64_t v17 = OUTLINED_FUNCTION_81(v16);
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_66_4();
  uint64_t v18 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  uint64_t v19 = OUTLINED_FUNCTION_81(v18);
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_44_3();
  uint64_t v59 = type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_1();
  uint64_t v57 = v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v58 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_31_9();
  EntityProperty.wrappedValue.getter();
  if (v62)
  {
    LocalizedStringResource.init(stringLiteral:)();
  }
  else
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v24._object = (void *)0x8000000258680130;
    v24._uint64_t countAndFlagsBits = 0xD000000000000025;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v24);
    EntityProperty.wrappedValue.getter();
    if (v62) {
      uint64_t v25 = v61;
    }
    else {
      uint64_t v25 = 7104878;
    }
    if (v62) {
      unint64_t v26 = v62;
    }
    else {
      unint64_t v26 = 0xE300000000000000;
    }
    unint64_t v27 = v26;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)&v25);
    swift_bridgeObjectRelease();
    v28._uint64_t countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v28);
    LocalizedStringResource.init(stringInterpolation:)();
  }
  type metadata accessor for NSUserDefaults(0, (unint64_t *)&lazy cache variable for type metadata for SFCard);
  uint64_t v29 = OUTLINED_FUNCTION_110_2();
  outlined copy of Data?(v29, v30);
  uint64_t v31 = OUTLINED_FUNCTION_110_2();
  id v33 = SFCard.init(data:)(v31, v32);
  if (v33)
  {
    uint64_t v34 = v33;
    SFCard.snippetPluginModel.getter(v3);

    uint64_t v35 = type metadata accessor for RGPluginModel();
    OUTLINED_FUNCTION_53_2((uint64_t)v3, 1, v35);
    if (v36)
    {
      outlined destroy of SearchResult?((uint64_t)v3, &demangling cache variable for type metadata for RGPluginModel?);
    }
    else
    {
      _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type RGPluginModel and conformance RGPluginModel);
      SnippetPluginModel.data.getter();
      unint64_t v38 = v37;
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v35 - 8) + 8))(v3, v35);
      if (v38 >> 60 != 15)
      {
        uint64_t v44 = v57;
        OUTLINED_FUNCTION_76_3();
        v52();
        static RGPluginModel.bundleName.getter();
        DisplayRepresentation.init(title:snippetPluginModelData:bundleIdentifier:)();
        goto LABEL_21;
      }
    }
  }
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v39 = type metadata accessor for Logger();
  __swift_project_value_buffer(v39, (uint64_t)static Logging.search);
  _s10OmniSearch0B6ResultVWOcTm_1((uint64_t)v4, v15, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v40))
  {
    uint64_t v53 = v6;
    uint64_t v54 = v2;
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 136315138;
    _s10OmniSearch0B6ResultVWOcTm_1(v15, v55, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
    uint64_t v42 = String.init<A>(describing:)();
    uint64_t v60 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v43, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v2 = v54;
    swift_bridgeObjectRelease();
    _s10OmniSearch0B10ResultItemOWOhTm_3(v15, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
    _os_log_impl(&dword_257DC6000, v4, v40, "Unexpectedly fallback to use title only displayRepresentation for entity: %s", v41, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    _s10OmniSearch0B10ResultItemOWOhTm_3(v15, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  }

  uint64_t v44 = v57;
  OUTLINED_FUNCTION_76_3();
  v45();
  OUTLINED_FUNCTION_46_1();
  __swift_storeEnumTagSinglePayload(v46, v47, v48, (uint64_t)v4);
  uint64_t v49 = type metadata accessor for DisplayRepresentation.Image();
  OUTLINED_FUNCTION_32(v2, v50, v51, v49);
  DisplayRepresentation.init(title:subtitle:image:)();
LABEL_21:
  (*(void (**)(uint64_t, NSObject *))(v44 + 8))(v1, v4);
  OUTLINED_FUNCTION_119_0();
}

uint64_t SearchSpotlightEntity.Query.entities(for:)()
{
  return SearchAppEntity.Query.entities(for:)(*(uint64_t (**)(uint64_t))(v0 + 8), v0, MEMORY[0x263F8EE78]);
}

uint64_t protocol witness for EntityQuery.entities(for:) in conformance SearchSpotlightEntity.Query()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for EntityQuery.entities(for:) in conformance MediaEntity.Query;
  return SearchSpotlightEntity.Query.entities(for:)();
}

uint64_t protocol witness for DynamicOptionsProvider.results() in conformance SearchSpotlightEntity.Query(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = lazy protocol witness table accessor for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query();
  *uint64_t v5 = v2;
  v5[1] = protocol witness for DynamicOptionsProvider.results() in conformance MediaEntity.Query;
  return MEMORY[0x270EE0E40](a1, a2, v6);
}

uint64_t (*static SearchSpotlightEntity.defaultQuery.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchSpotlightEntity.supportedTypeIdentifiersForExport.getter()
{
  OUTLINED_FUNCTION_58_6();
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchSpotlightEntity.supportedTypeIdentifiersForExport : SearchSpotlightEntity()
{
  return SearchSpotlightEntity.supportedTypeIdentifiersForExport.setter();
}

uint64_t (*SearchSpotlightEntity.supportedTypeIdentifiersForExport.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  OUTLINED_FUNCTION_58_6();
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchSpotlightEntity.$supportedTypeIdentifiersForExport.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t static SearchSpotlightEntity.performTransfer(to:entity:)(uint64_t a1, uint64_t a2)
{
  uint64_t v72 = a1;
  uint64_t v70 = type metadata accessor for UTType();
  uint64_t v67 = *(void *)(v70 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v70);
  id v66 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v71 = (char *)&v57 - v5;
  uint64_t v6 = type metadata accessor for SearchResultType();
  uint64_t v68 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SearchTransferabilityError.Code();
  uint64_t v69 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for IntentFile();
  uint64_t v65 = *(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = v73;
  specialized static SearchSpotlightOpener.decodeSearchableItem<A>(_:)();
  if (!v18)
  {
    uint64_t v58 = v17;
    uint64_t v59 = (uint64_t)v14;
    uint64_t v60 = a2;
    uint64_t v20 = v71;
    uint64_t v61 = v9;
    uint64_t v62 = v6;
    uint64_t v63 = v11;
    uint64_t v64 = v8;
    id v73 = v19;
    uint64_t v21 = outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(objc_msgSend(v19, sel_attributeSet, 0), (SEL *)&selRef_contentType);
    unint64_t v23 = v22;
    uint64_t v24 = UTType.identifier.getter();
    if (v23)
    {
      if (v21 == v24 && v23 == v25)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v27)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = v71;
LABEL_21:
        uint64_t v45 = (uint64_t)v58;
        EntityProperty.wrappedValue.getter();
        uint64_t v46 = v12;
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v45, 1, v12);
        uint64_t v48 = v69;
        uint64_t v6 = v70;
        uint64_t v49 = v65;
        uint64_t v50 = v59;
        if (!EnumTagSinglePayload)
        {
          v65[2](v59, v45, v46);
          outlined destroy of SearchResult?(v45, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
          uint64_t v6 = IntentFile.data.getter();

          ((void (*)(uint64_t, uint64_t))v49[1])(v50, v46);
          return v6;
        }
        outlined destroy of SearchResult?(v45, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
        (*(void (**)(char *, void, uint64_t))(v48 + 104))(v63, *MEMORY[0x263F5B7F8], v61);
        (*(void (**)(char *, void, uint64_t))(v68 + 104))(v64, *MEMORY[0x263F5B7B8], v62);
        (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v20, v72, v6);
        goto LABEL_25;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    __swift_project_value_buffer(v28, (uint64_t)static Logging.search);
    uint64_t v29 = v66;
    uint64_t v30 = v67;
    uint64_t v31 = *(void (***)(uint64_t, uint64_t, uint64_t))(v67 + 16);
    uint64_t v32 = v70;
    ((void (*)(char *, uint64_t, uint64_t))v31)(v66, v72, v70);
    swift_bridgeObjectRetain();
    id v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.info.getter();
    int v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v36 = swift_slowAlloc();
      LODWORD(v60) = v35;
      uint64_t v37 = v21;
      uint64_t v38 = v36;
      uint64_t v59 = swift_slowAlloc();
      uint64_t v75 = v59;
      *(_DWORD *)uint64_t v38 = 136315394;
      if (v23) {
        uint64_t v39 = v37;
      }
      else {
        uint64_t v39 = 0;
      }
      if (v23) {
        unint64_t v40 = v23;
      }
      else {
        unint64_t v40 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v74 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v40, &v75);
      uint64_t v65 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2080;
      _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type UTType and conformance UTType);
      uint64_t v41 = v66;
      uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v74 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v43, &v75);
      uint64_t v31 = v65;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v41, v32);
      _os_log_impl(&dword_257DC6000, v33, (os_log_type_t)v60, "Transferable: Spotlight %s does not match requested contentType %s", (uint8_t *)v38, 0x16u);
      uint64_t v44 = v59;
      swift_arrayDestroy();
      MEMORY[0x25A2C94B0](v44, -1, -1);
      MEMORY[0x25A2C94B0](v38, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v32);
    }

    uint64_t v51 = v71;
    id v52 = v64;
    uint64_t v53 = v62;
    uint64_t v54 = v68;
    (*(void (**)(char *, void, uint64_t))(v69 + 104))(v63, *MEMORY[0x263F5B800], v61);
    uint64_t v55 = *(void (**)(char *, void, uint64_t))(v54 + 104);
    uint64_t v6 = v54 + 104;
    v55(v52, *MEMORY[0x263F5B7B8], v53);
    ((void (*)(char *, uint64_t, uint64_t))v31)(v51, v72, v32);
LABEL_25:
    type metadata accessor for SearchTransferabilityError();
    _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchTransferabilityError and conformance SearchTransferabilityError);
    swift_allocError();
    SearchTransferabilityError.init(code:sourceResultType:targetTransferType:)();
    swift_willThrow();
  }
  return v6;
}

void static SearchSpotlightEntity.transferRepresentation.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v28 = v0;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (DataRepresentation<SearchSpotlightEntity>, DataRepresentation<SearchSpotlightEntity>, DataRepresentation<SearchSpotlightEntity>, DataRepresentation<SearchSpotlightEntity>, DataRepresentation<SearchSpotlightEntity>));
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_184_0();
  uint64_t v31 = v2;
  OUTLINED_FUNCTION_26_8();
  uint64_t v3 = type metadata accessor for UTType();
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DataRepresentation<SearchSpotlightEntity>);
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  uint64_t v24 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_185_0();
  uint64_t v30 = v8;
  OUTLINED_FUNCTION_113_1();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v25 = (char *)&v23 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unint64_t v26 = (char *)&v23 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  char v27 = (char *)&v23 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v29 = (char *)&v23 - v16;
  type metadata accessor for SearchSpotlightEntity(0);
  _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
  _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
  static ExperienceProviding<>.experienceTransferableRepresentation()();
  uint64_t v17 = static UTType.emailMessage.getter();
  OUTLINED_FUNCTION_37_10(v17, (uint64_t)&async function pointer to partial apply for closure #1 in static SearchSpotlightEntity.transferRepresentation.getter);
  uint64_t v18 = static UTType.message.getter();
  OUTLINED_FUNCTION_37_10(v18, (uint64_t)&async function pointer to partial apply for closure #2 in static SearchSpotlightEntity.transferRepresentation.getter);
  uint64_t v19 = static UTType.calendarEvent.getter();
  OUTLINED_FUNCTION_37_10(v19, (uint64_t)&async function pointer to partial apply for closure #3 in static SearchSpotlightEntity.transferRepresentation.getter);
  uint64_t v20 = static UTType.contact.getter();
  OUTLINED_FUNCTION_37_10(v20, (uint64_t)&async function pointer to partial apply for closure #4 in static SearchSpotlightEntity.transferRepresentation.getter);
  uint64_t v23 = v31 + *(int *)(v32 + 96);
  uint64_t v21 = *(void (**)(void))(v6 + 16);
  OUTLINED_FUNCTION_39_7();
  v21();
  OUTLINED_FUNCTION_39_7();
  v21();
  OUTLINED_FUNCTION_39_7();
  v21();
  OUTLINED_FUNCTION_39_7();
  v21();
  OUTLINED_FUNCTION_39_7();
  v21();
  TupleTransferRepresentation.init(_:)();
  unint64_t v22 = *(void (**)(void))(v24 + 8);
  OUTLINED_FUNCTION_40_9();
  v22();
  OUTLINED_FUNCTION_40_9();
  v22();
  OUTLINED_FUNCTION_40_9();
  v22();
  OUTLINED_FUNCTION_40_9();
  v22();
  OUTLINED_FUNCTION_40_9();
  v22();
  OUTLINED_FUNCTION_119_0();
}

uint64_t closure #1 in static SearchSpotlightEntity.transferRepresentation.getter(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for UTType();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #1 in static SearchSpotlightEntity.transferRepresentation.getter, 0, 0);
}

void closure #1 in static SearchSpotlightEntity.transferRepresentation.getter()
{
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_47_7();
  static UTType.emailMessage.getter();
  OUTLINED_FUNCTION_51_8();
  OUTLINED_FUNCTION_46_7();
  if (v0)
  {
    uint64_t v1 = OUTLINED_FUNCTION_16_15();
    v2(v1);
    swift_task_dealloc();
    OUTLINED_FUNCTION_13_15();
    OUTLINED_FUNCTION_37_1();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v5 = OUTLINED_FUNCTION_16_15();
  v6(v5);
  swift_task_dealloc();
  OUTLINED_FUNCTION_33_9();
  OUTLINED_FUNCTION_37_1();
  __asm { BRAA            X3, X16 }
}

uint64_t closure #2 in static SearchSpotlightEntity.transferRepresentation.getter(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for UTType();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #2 in static SearchSpotlightEntity.transferRepresentation.getter, 0, 0);
}

void closure #2 in static SearchSpotlightEntity.transferRepresentation.getter()
{
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_47_7();
  static UTType.message.getter();
  OUTLINED_FUNCTION_51_8();
  OUTLINED_FUNCTION_46_7();
  if (v0)
  {
    uint64_t v1 = OUTLINED_FUNCTION_16_15();
    v2(v1);
    swift_task_dealloc();
    OUTLINED_FUNCTION_13_15();
    OUTLINED_FUNCTION_37_1();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v5 = OUTLINED_FUNCTION_16_15();
  v6(v5);
  swift_task_dealloc();
  OUTLINED_FUNCTION_33_9();
  OUTLINED_FUNCTION_37_1();
  __asm { BRAA            X3, X16 }
}

uint64_t closure #3 in static SearchSpotlightEntity.transferRepresentation.getter(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for UTType();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #3 in static SearchSpotlightEntity.transferRepresentation.getter, 0, 0);
}

void closure #3 in static SearchSpotlightEntity.transferRepresentation.getter()
{
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_47_7();
  static UTType.calendarEvent.getter();
  OUTLINED_FUNCTION_51_8();
  OUTLINED_FUNCTION_46_7();
  if (v0)
  {
    uint64_t v1 = OUTLINED_FUNCTION_16_15();
    v2(v1);
    swift_task_dealloc();
    OUTLINED_FUNCTION_13_15();
    OUTLINED_FUNCTION_37_1();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v5 = OUTLINED_FUNCTION_16_15();
  v6(v5);
  swift_task_dealloc();
  OUTLINED_FUNCTION_33_9();
  OUTLINED_FUNCTION_37_1();
  __asm { BRAA            X3, X16 }
}

uint64_t closure #4 in static SearchSpotlightEntity.transferRepresentation.getter(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for UTType();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](closure #4 in static SearchSpotlightEntity.transferRepresentation.getter, 0, 0);
}

void closure #4 in static SearchSpotlightEntity.transferRepresentation.getter()
{
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_47_7();
  static UTType.contact.getter();
  OUTLINED_FUNCTION_51_8();
  OUTLINED_FUNCTION_46_7();
  if (v0)
  {
    uint64_t v1 = OUTLINED_FUNCTION_16_15();
    v2(v1);
    swift_task_dealloc();
    OUTLINED_FUNCTION_13_15();
    OUTLINED_FUNCTION_37_1();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v5 = OUTLINED_FUNCTION_16_15();
  v6(v5);
  swift_task_dealloc();
  OUTLINED_FUNCTION_33_9();
  OUTLINED_FUNCTION_37_1();
  __asm { BRAA            X3, X16 }
}

uint64_t SearchSpotlightEntity.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6174614464726163 && a2 == 0xE800000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x746E656D75636F64 && a2 == 0xEE00656372756F53;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6E65697265707865 && a2 == 0xEE00656C69466563;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000015 && a2 == 0x8000000258680160 {
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            BOOL v10 = a1 == 0x746E6F43656C6966 && a2 == 0xEB00000000746E65;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0xD000000000000012 && a2 == 0x8000000258680180 {
                   || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            }
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              BOOL v11 = a1 == 0x6552656372756F73 && a2 == 0xEC000000746C7573;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else
              {
                BOOL v12 = a1 == 25705 && a2 == 0xE200000000000000;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 9;
                }
                else if (a1 == 0xD000000000000021 && a2 == 0x80000002586801A0)
                {
                  swift_bridgeObjectRelease();
                  return 10;
                }
                else
                {
                  char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v13) {
                    return 10;
                  }
                  else {
                    return 11;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t SearchSpotlightEntity.CodingKeys.init(intValue:)()
{
  return 11;
}

uint64_t SearchSpotlightEntity.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 0x6449656C646E7562;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6174614464726163;
      break;
    case 2:
      uint64_t v3 = 0x656D75636F64;
      goto LABEL_8;
    case 3:
      uint64_t result = 0x656C746974;
      break;
    case 4:
      uint64_t result = 0x6E65697265707865;
      break;
    case 5:
      uint64_t result = 0xD000000000000015;
      break;
    case 6:
      uint64_t v3 = 0x6F43656C6966;
LABEL_8:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x746E000000000000;
      break;
    case 7:
      uint64_t result = 0xD000000000000012;
      break;
    case 8:
      uint64_t result = 0x6552656372756F73;
      break;
    case 9:
      uint64_t result = 25705;
      break;
    case 10:
      uint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SearchSpotlightEntity.CodingKeys()
{
  return SearchSpotlightEntity.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SearchSpotlightEntity.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = SearchSpotlightEntity.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance SearchSpotlightEntity.CodingKeys@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = SearchSpotlightEntity.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SearchSpotlightEntity.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SearchSpotlightEntity.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SearchSpotlightEntity.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SearchSpotlightEntity.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_59_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  lazy protocol witness table accessor for type EntityProperty<String?> and conformance <> EntityProperty<A>();
  OUTLINED_FUNCTION_4_16();
  if (!v1)
  {
    lazy protocol witness table accessor for type Data and conformance Data();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    OUTLINED_FUNCTION_4_16();
    OUTLINED_FUNCTION_4_16();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
    lazy protocol witness table accessor for type EntityProperty<IntentFile?> and conformance <> EntityProperty<A>();
    OUTLINED_FUNCTION_4_16();
    OUTLINED_FUNCTION_4_16();
    OUTLINED_FUNCTION_4_16();
    OUTLINED_FUNCTION_81_4(7);
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    type metadata accessor for SearchSpotlightEntity(0);
    type metadata accessor for SearchResult(0);
    _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchResult and conformance SearchResult);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    OUTLINED_FUNCTION_81_4(9);
    KeyedEncodingContainer.encode(_:forKey:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
    lazy protocol witness table accessor for type EntityProperty<[String]> and conformance <> EntityProperty<A>();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

void static SearchSpotlightEntity.== infix(_:_:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v146 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_184_0();
  uint64_t v138 = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  BOOL v10 = (char *)&v136 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SearchResult?, SearchResult?));
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_65_5(v12, v136);
  uint64_t v154 = type metadata accessor for IntentFile();
  OUTLINED_FUNCTION_1();
  uint64_t v148 = v13;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_184_0();
  uint64_t v143 = v15;
  uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (IntentFile?, IntentFile?));
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_95_1();
  uint64_t v19 = v17 - v18;
  MEMORY[0x270FA5388](v20);
  uint64_t v151 = (uint64_t)&v136 - v21;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v23 = OUTLINED_FUNCTION_81(v22);
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_185_0();
  uint64_t v137 = v24;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_43_4();
  uint64_t v141 = v26;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_43_4();
  uint64_t v139 = v28;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_43_4();
  uint64_t v149 = v30;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_43_4();
  uint64_t v153 = v32;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v33);
  OUTLINED_FUNCTION_27_10();
  uint64_t v152 = v34;
  uint64_t v35 = OUTLINED_FUNCTION_26_8();
  type metadata accessor for SearchSpotlightEntity(v35);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v36);
  OUTLINED_FUNCTION_185_0();
  uint64_t v157 = v37;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v38);
  OUTLINED_FUNCTION_43_4();
  uint64_t v40 = v39;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v41);
  OUTLINED_FUNCTION_43_4();
  uint64_t v160 = v42;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v43);
  OUTLINED_FUNCTION_43_4();
  uint64_t v159 = v44;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v45);
  OUTLINED_FUNCTION_43_4();
  uint64_t v161 = v46;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v47);
  OUTLINED_FUNCTION_43_4();
  uint64_t v156 = v48;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v49);
  OUTLINED_FUNCTION_43_4();
  uint64_t v162 = v50;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v51);
  OUTLINED_FUNCTION_43_4();
  uint64_t v164 = v52;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v53);
  OUTLINED_FUNCTION_43_4();
  uint64_t v163 = v54;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v55);
  OUTLINED_FUNCTION_43_4();
  uint64_t v158 = v56;
  OUTLINED_FUNCTION_113_1();
  uint64_t v58 = MEMORY[0x270FA5388](v57);
  uint64_t v60 = (char *)&v136 - v59;
  uint64_t v61 = MEMORY[0x270FA5388](v58);
  uint64_t v63 = (char *)&v136 - v62;
  uint64_t v64 = MEMORY[0x270FA5388](v61);
  id v66 = (char *)&v136 - v65;
  MEMORY[0x270FA5388](v64);
  OUTLINED_FUNCTION_31_9();
  uint64_t v144 = v67;
  uint64_t v68 = *(int *)(v67 + 52);
  uint64_t v69 = *(void *)(v4 + v68);
  uint64_t v70 = *(void *)(v4 + v68 + 8);
  uint64_t v71 = (void *)(v2 + v68);
  BOOL v72 = v69 == *v71 && v70 == v71[1];
  uint64_t v140 = v19;
  long long v142 = v10;
  if (v72)
  {
    uint64_t v75 = v4;
    _s10OmniSearch0B6ResultVWOcTm_1(v4, v0, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
    uint64_t v76 = v2;
    _s10OmniSearch0B6ResultVWOcTm_1(v2, (uint64_t)v66, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  }
  else
  {
    char v73 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v74 = (uint64_t)type metadata accessor for SearchSpotlightEntity;
    uint64_t v75 = v4;
    _s10OmniSearch0B6ResultVWOcTm_1(v4, v0, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
    uint64_t v76 = v2;
    _s10OmniSearch0B6ResultVWOcTm_1(v2, (uint64_t)v66, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
    if ((v73 & 1) == 0)
    {
      _s10OmniSearch0B10ResultItemOWOhTm_3((uint64_t)v66, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
      OUTLINED_FUNCTION_106_4();
      uint64_t v0 = v2;
      uint64_t v76 = v75;
      uint64_t v77 = v40;
LABEL_20:
      uint64_t v81 = v160;
      uint64_t v82 = v164;
      _s10OmniSearch0B6ResultVWOcTm_1(v76, (uint64_t)v63, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
      _s10OmniSearch0B6ResultVWOcTm_1(v0, (uint64_t)v60, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
      goto LABEL_21;
    }
  }
  uint64_t v155 = v40;
  EntityProperty.wrappedValue.getter();
  uint64_t v74 = v165;
  uint64_t v78 = v166;
  EntityProperty.wrappedValue.getter();
  uint64_t v79 = v166;
  if (!v78)
  {
    uint64_t v74 = (uint64_t)type metadata accessor for SearchSpotlightEntity;
    _s10OmniSearch0B10ResultItemOWOhTm_3((uint64_t)v66, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
    _s10OmniSearch0B10ResultItemOWOhTm_3(v0, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
    if (!v79)
    {
LABEL_35:
      _s10OmniSearch0B6ResultVWOcTm_1(v75, (uint64_t)v63, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
      OUTLINED_FUNCTION_77_4();
      uint64_t v77 = v155;
      uint64_t v81 = v160;
      goto LABEL_36;
    }
    swift_bridgeObjectRelease();
LABEL_19:
    uint64_t v77 = v155;
    uint64_t v0 = v76;
    uint64_t v76 = v75;
    goto LABEL_20;
  }
  if (!v166)
  {
    swift_bridgeObjectRetain();
    _s10OmniSearch0B10ResultItemOWOhTm_3((uint64_t)v66, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
    OUTLINED_FUNCTION_106_4();
    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  if (v74 == v165 && v78 == v166)
  {
    swift_bridgeObjectRelease();
    _s10OmniSearch0B10ResultItemOWOhTm_3((uint64_t)v66, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
    OUTLINED_FUNCTION_106_4();
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  OUTLINED_FUNCTION_110_2();
  uint64_t v74 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  _s10OmniSearch0B10ResultItemOWOhTm_3((uint64_t)v66, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  OUTLINED_FUNCTION_106_4();
  swift_bridgeObjectRelease();
  _s10OmniSearch0B6ResultVWOcTm_1(v75, (uint64_t)v63, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  OUTLINED_FUNCTION_77_4();
  uint64_t v77 = v155;
  uint64_t v81 = v160;
  uint64_t v82 = v164;
  if (v74)
  {
LABEL_36:
    EntityProperty.wrappedValue.getter();
    uint64_t v74 = v165;
    uint64_t v90 = v166;
    EntityProperty.wrappedValue.getter();
    uint64_t v91 = v166;
    if (v90)
    {
      if (v166)
      {
        uint64_t v83 = v77;
        if (v74 != v165 || v90 != v166)
        {
          uint64_t v74 = OUTLINED_FUNCTION_98_4();
          swift_bridgeObjectRelease();
          _s10OmniSearch0B10ResultItemOWOhTm_3((uint64_t)v60, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
          OUTLINED_FUNCTION_61_5();
          swift_bridgeObjectRelease();
          _s10OmniSearch0B6ResultVWOcTm_1(v76, v158, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
          OUTLINED_FUNCTION_107_4();
          uint64_t v84 = v159;
          uint64_t v82 = v164;
          if ((v74 & 1) == 0) {
            goto LABEL_23;
          }
LABEL_50:
          EntityProperty.wrappedValue.getter();
          uint64_t v74 = v165;
          uint64_t v93 = v166;
          EntityProperty.wrappedValue.getter();
          uint64_t v94 = v166;
          if (v93)
          {
            if (!v166)
            {
              swift_bridgeObjectRetain();
              _s10OmniSearch0B10ResultItemOWOhTm_3(v163, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
              OUTLINED_FUNCTION_61_5();
              swift_bridgeObjectRelease_n();
              uint64_t v85 = v157;
              uint64_t v82 = v164;
              goto LABEL_24;
            }
            if (v74 != v165 || v93 != v166)
            {
              LODWORD(v159) = OUTLINED_FUNCTION_98_4();
              swift_bridgeObjectRelease();
              _s10OmniSearch0B10ResultItemOWOhTm_3(v163, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
              OUTLINED_FUNCTION_61_5();
              swift_bridgeObjectRelease();
              uint64_t v82 = v164;
              _s10OmniSearch0B6ResultVWOcTm_1(v76, v164, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
              OUTLINED_FUNCTION_55_7();
              uint64_t v86 = v83;
              uint64_t v87 = v81;
              uint64_t v88 = v156;
              uint64_t v85 = v157;
              if ((v159 & 1) == 0) {
                goto LABEL_26;
              }
LABEL_63:
              uint64_t v96 = *(void *)(v82 + 72);
              uint64_t v97 = *(void *)(v74 + 72);
              uint64_t v98 = v74;
              if (v96)
              {
                uint64_t v89 = v161;
                if (v97)
                {
                  if (*(void *)(v164 + 64) != *(void *)(v98 + 64) || v96 != v97)
                  {
                    uint64_t v100 = v164;
                    LODWORD(v163) = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRetain();
                    _s10OmniSearch0B10ResultItemOWOhTm_3(v162, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                    uint64_t v89 = v161;
                    _s10OmniSearch0B10ResultItemOWOhTm_3(v100, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                    swift_bridgeObjectRelease();
                    _s10OmniSearch0B6ResultVWOcTm_1(v76, v88, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                    OUTLINED_FUNCTION_80_4();
                    if ((v163 & 1) == 0) {
                      goto LABEL_28;
                    }
LABEL_77:
                    uint64_t v101 = v152;
                    EntityProperty.wrappedValue.getter();
                    EntityProperty.wrappedValue.getter();
                    uint64_t v102 = v151;
                    uint64_t v164 = v151 + *(int *)(v150 + 48);
                    uint64_t v103 = v101;
                    uint64_t v104 = v153;
                    outlined init with copy of SearchResultItem?(v103, v151, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                    outlined init with copy of SearchResultItem?(v104, v164, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                    OUTLINED_FUNCTION_53_2(v102, 1, v154);
                    if (v72)
                    {
                      uint64_t v105 = OUTLINED_FUNCTION_79_0();
                      outlined destroy of SearchResult?(v105, v106);
                      outlined destroy of SearchResult?(v152, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                      _s10OmniSearch0B10ResultItemOWOhTm_3(v89, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                      uint64_t v102 = v151;
                      _s10OmniSearch0B10ResultItemOWOhTm_3(v88, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                      OUTLINED_FUNCTION_53_2(v164, 1, v154);
                      if (v72)
                      {
                        outlined destroy of SearchResult?(v102, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                        _s10OmniSearch0B6ResultVWOcTm_1(v76, v84, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                        _s10OmniSearch0B6ResultVWOcTm_1(v0, v87, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                        goto LABEL_87;
                      }
                    }
                    else
                    {
                      outlined init with copy of SearchResultItem?(v102, v149, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                      OUTLINED_FUNCTION_53_2(v164, 1, v154);
                      if (!v107)
                      {
                        uint64_t v108 = v148;
                        uint64_t v109 = v143;
                        uint64_t v110 = v154;
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 32))(v143, v164, v154);
                        _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type IntentFile and conformance IntentFile);
                        LODWORD(v164) = dispatch thunk of static Equatable.== infix(_:_:)();
                        uint64_t v111 = v76;
                        uint64_t v112 = v0;
                        uint64_t v113 = *(void (**)(uint64_t, uint64_t))(v108 + 8);
                        v113(v109, v110);
                        outlined destroy of SearchResult?(v153, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                        outlined destroy of SearchResult?(v152, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                        _s10OmniSearch0B10ResultItemOWOhTm_3(v161, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                        _s10OmniSearch0B10ResultItemOWOhTm_3(v88, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                        v113(v149, v110);
                        uint64_t v0 = v112;
                        uint64_t v76 = v111;
                        uint64_t v87 = v160;
                        uint64_t v86 = v155;
                        outlined destroy of SearchResult?(v151, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                        _s10OmniSearch0B6ResultVWOcTm_1(v111, v84, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                        _s10OmniSearch0B6ResultVWOcTm_1(v0, v87, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                        if ((v164 & 1) == 0) {
                          goto LABEL_30;
                        }
LABEL_87:
                        uint64_t v114 = *(int *)(v144 + 48);
                        uint64_t v115 = v87 + v114;
                        uint64_t v116 = v147;
                        uint64_t v117 = v147 + *(int *)(v145 + 48);
                        outlined init with copy of SearchResultItem?(v84 + v114, v147, &demangling cache variable for type metadata for SearchResult?);
                        outlined init with copy of SearchResultItem?(v115, v117, &demangling cache variable for type metadata for SearchResult?);
                        uint64_t v118 = v146;
                        OUTLINED_FUNCTION_53_2(v116, 1, v146);
                        if (v72)
                        {
                          _s10OmniSearch0B10ResultItemOWOhTm_3(v87, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                          uint64_t v116 = v147;
                          _s10OmniSearch0B10ResultItemOWOhTm_3(v84, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                          OUTLINED_FUNCTION_53_2(v117, 1, v118);
                          if (v72)
                          {
                            outlined destroy of SearchResult?(v116, &demangling cache variable for type metadata for SearchResult?);
                            _s10OmniSearch0B6ResultVWOcTm_1(v76, v86, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                            _s10OmniSearch0B6ResultVWOcTm_1(v0, v85, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                            goto LABEL_97;
                          }
                        }
                        else
                        {
                          uint64_t v119 = (uint64_t)v142;
                          outlined init with copy of SearchResultItem?(v116, (uint64_t)v142, &demangling cache variable for type metadata for SearchResult?);
                          OUTLINED_FUNCTION_53_2(v117, 1, v118);
                          if (!v120)
                          {
                            uint64_t v121 = v117;
                            uint64_t v122 = v138;
                            _s10OmniSearch0B15SpotlightEntityVWObTm_0(v121, v138, (void (*)(void))type metadata accessor for SearchResult);
                            OUTLINED_FUNCTION_0_2();
                            static SearchResult.== infix(_:_:)();
                            LODWORD(v164) = v123;
                            _s10OmniSearch0B10ResultItemOWOhTm_3(v122, (void (*)(void))type metadata accessor for SearchResult);
                            _s10OmniSearch0B10ResultItemOWOhTm_3(v87, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                            _s10OmniSearch0B10ResultItemOWOhTm_3(v84, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                            uint64_t v124 = OUTLINED_FUNCTION_79_0();
                            _s10OmniSearch0B10ResultItemOWOhTm_3(v124, v125);
                            outlined destroy of SearchResult?(v116, &demangling cache variable for type metadata for SearchResult?);
                            _s10OmniSearch0B6ResultVWOcTm_1(v76, v86, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                            _s10OmniSearch0B6ResultVWOcTm_1(v0, v85, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                            if ((v164 & 1) == 0) {
                              goto LABEL_32;
                            }
LABEL_97:
                            uint64_t v126 = v139;
                            EntityProperty.wrappedValue.getter();
                            uint64_t v127 = v141;
                            EntityProperty.wrappedValue.getter();
                            uint64_t v128 = v140;
                            uint64_t v129 = v140 + *(int *)(v150 + 48);
                            outlined init with copy of SearchResultItem?(v126, v140, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                            outlined init with copy of SearchResultItem?(v127, v129, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                            uint64_t v130 = v154;
                            OUTLINED_FUNCTION_53_2(v128, 1, v154);
                            if (v72)
                            {
                              outlined destroy of SearchResult?(v127, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                              outlined destroy of SearchResult?(v126, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                              _s10OmniSearch0B10ResultItemOWOhTm_3(v85, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                              _s10OmniSearch0B10ResultItemOWOhTm_3(v86, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                              OUTLINED_FUNCTION_53_2(v129, 1, v130);
                              if (v72)
                              {
                                outlined destroy of SearchResult?(v128, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                                goto LABEL_33;
                              }
                            }
                            else
                            {
                              uint64_t v131 = v137;
                              outlined init with copy of SearchResultItem?(v128, v137, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                              OUTLINED_FUNCTION_53_2(v129, 1, v130);
                              if (!v132)
                              {
                                uint64_t v133 = v148;
                                uint64_t v134 = v143;
                                (*(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 32))(v143, v129, v130);
                                _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type IntentFile and conformance IntentFile);
                                dispatch thunk of static Equatable.== infix(_:_:)();
                                uint64_t v135 = *(void (**)(uint64_t, uint64_t))(v133 + 8);
                                v135(v134, v130);
                                outlined destroy of SearchResult?(v141, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                                outlined destroy of SearchResult?(v126, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                                _s10OmniSearch0B10ResultItemOWOhTm_3(v85, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                                _s10OmniSearch0B10ResultItemOWOhTm_3(v86, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                                v135(v131, v130);
                                outlined destroy of SearchResult?(v128, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                                goto LABEL_33;
                              }
                              outlined destroy of SearchResult?(v127, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                              outlined destroy of SearchResult?(v126, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                              _s10OmniSearch0B10ResultItemOWOhTm_3(v85, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                              _s10OmniSearch0B10ResultItemOWOhTm_3(v86, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                              (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v131, v130);
                            }
                            outlined destroy of SearchResult?(v128, &demangling cache variable for type metadata for (IntentFile?, IntentFile?));
                            goto LABEL_33;
                          }
                          _s10OmniSearch0B10ResultItemOWOhTm_3(v87, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                          _s10OmniSearch0B10ResultItemOWOhTm_3(v84, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                          _s10OmniSearch0B10ResultItemOWOhTm_3(v119, (void (*)(void))type metadata accessor for SearchResult);
                        }
                        outlined destroy of SearchResult?(v116, &demangling cache variable for type metadata for (SearchResult?, SearchResult?));
                        goto LABEL_31;
                      }
                      outlined destroy of SearchResult?(v153, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                      outlined destroy of SearchResult?(v152, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
                      _s10OmniSearch0B10ResultItemOWOhTm_3(v89, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                      _s10OmniSearch0B10ResultItemOWOhTm_3(v88, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                      (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v149, v154);
                    }
                    outlined destroy of SearchResult?(v102, &demangling cache variable for type metadata for (IntentFile?, IntentFile?));
                    goto LABEL_29;
                  }
                  swift_bridgeObjectRetain();
                  _s10OmniSearch0B10ResultItemOWOhTm_3(v162, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                  _s10OmniSearch0B10ResultItemOWOhTm_3(v164, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                  swift_bridgeObjectRelease();
LABEL_76:
                  _s10OmniSearch0B6ResultVWOcTm_1(v76, v88, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                  OUTLINED_FUNCTION_80_4();
                  goto LABEL_77;
                }
                swift_bridgeObjectRetain();
                _s10OmniSearch0B10ResultItemOWOhTm_3(v162, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                _s10OmniSearch0B10ResultItemOWOhTm_3(v164, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
              }
              else
              {
                swift_bridgeObjectRetain();
                _s10OmniSearch0B10ResultItemOWOhTm_3(v74, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                _s10OmniSearch0B10ResultItemOWOhTm_3(v164, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
                uint64_t v89 = v161;
                if (!v97) {
                  goto LABEL_76;
                }
              }
              swift_bridgeObjectRelease();
              goto LABEL_27;
            }
            swift_bridgeObjectRelease();
            _s10OmniSearch0B10ResultItemOWOhTm_3(v163, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
            OUTLINED_FUNCTION_61_5();
            swift_bridgeObjectRelease();
            uint64_t v86 = v83;
          }
          else
          {
            _s10OmniSearch0B10ResultItemOWOhTm_3(v77, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
            OUTLINED_FUNCTION_94_5();
            uint64_t v86 = v83;
            if (v94)
            {
              swift_bridgeObjectRelease();
              uint64_t v85 = v157;
              uint64_t v82 = v164;
              goto LABEL_25;
            }
          }
          uint64_t v82 = v164;
          _s10OmniSearch0B6ResultVWOcTm_1(v76, v164, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
          OUTLINED_FUNCTION_55_7();
          uint64_t v87 = v81;
          uint64_t v88 = v156;
          uint64_t v85 = v157;
          goto LABEL_63;
        }
        swift_bridgeObjectRelease();
        _s10OmniSearch0B10ResultItemOWOhTm_3((uint64_t)v60, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
        OUTLINED_FUNCTION_61_5();
        swift_bridgeObjectRelease();
LABEL_49:
        _s10OmniSearch0B6ResultVWOcTm_1(v76, v158, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
        OUTLINED_FUNCTION_107_4();
        uint64_t v84 = v159;
        goto LABEL_50;
      }
      uint64_t v83 = v77;
      swift_bridgeObjectRetain();
      _s10OmniSearch0B10ResultItemOWOhTm_3((uint64_t)v60, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
      OUTLINED_FUNCTION_61_5();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v83 = v77;
      _s10OmniSearch0B10ResultItemOWOhTm_3((uint64_t)v60, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
      OUTLINED_FUNCTION_94_5();
      if (!v91) {
        goto LABEL_49;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v84 = v159;
    uint64_t v82 = v164;
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v83 = v77;
  _s10OmniSearch0B10ResultItemOWOhTm_3((uint64_t)v60, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  OUTLINED_FUNCTION_94_5();
  uint64_t v84 = v159;
LABEL_22:
  uint64_t v77 = v163;
  _s10OmniSearch0B6ResultVWOcTm_1(v76, v158, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  _s10OmniSearch0B6ResultVWOcTm_1(v0, v77, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
LABEL_23:
  _s10OmniSearch0B10ResultItemOWOhTm_3(v77, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  OUTLINED_FUNCTION_94_5();
  uint64_t v85 = v157;
LABEL_24:
  uint64_t v86 = v83;
LABEL_25:
  uint64_t v87 = v81;
  uint64_t v88 = v156;
  _s10OmniSearch0B6ResultVWOcTm_1(v76, v82, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  OUTLINED_FUNCTION_55_7();
LABEL_26:
  _s10OmniSearch0B10ResultItemOWOhTm_3(v74, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  _s10OmniSearch0B10ResultItemOWOhTm_3(v82, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  uint64_t v89 = v161;
LABEL_27:
  _s10OmniSearch0B6ResultVWOcTm_1(v76, v88, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  OUTLINED_FUNCTION_80_4();
LABEL_28:
  _s10OmniSearch0B10ResultItemOWOhTm_3(v89, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  _s10OmniSearch0B10ResultItemOWOhTm_3(v88, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
LABEL_29:
  _s10OmniSearch0B6ResultVWOcTm_1(v76, v84, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  _s10OmniSearch0B6ResultVWOcTm_1(v0, v87, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
LABEL_30:
  _s10OmniSearch0B10ResultItemOWOhTm_3(v87, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  _s10OmniSearch0B10ResultItemOWOhTm_3(v84, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
LABEL_31:
  _s10OmniSearch0B6ResultVWOcTm_1(v76, v86, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  _s10OmniSearch0B6ResultVWOcTm_1(v0, v85, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
LABEL_32:
  _s10OmniSearch0B10ResultItemOWOhTm_3(v85, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
  _s10OmniSearch0B10ResultItemOWOhTm_3(v86, (void (*)(void))type metadata accessor for SearchSpotlightEntity);
LABEL_33:
  OUTLINED_FUNCTION_119_0();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SearchSpotlightEntity(void *a1)
{
  return SearchSpotlightEntity.encode(to:)(a1);
}

void protocol witness for ValidatableEntity.validateParameters() in conformance SearchSpotlightEntity()
{
}

uint64_t protocol witness for ExperienceProviding.experienceSourceType.getter in conformance SearchSpotlightEntity@<X0>(uint64_t a1@<X8>)
{
  return SearchSpotlightEntity.experienceSourceType.getter(a1);
}

uint64_t (*protocol witness for SpotlightItemProviding.encodedSearchableItem.modify in conformance SearchSpotlightEntity(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t protocol witness for Identifiable.id.getter in conformance SearchSpotlightEntity@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SearchSpotlightEntity.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance SearchSpotlightEntity(uint64_t a1)
{
  unint64_t v2 = _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance SearchSpotlightEntity(uint64_t a1)
{
  unint64_t v2 = _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
  return MEMORY[0x270EE1D98](a1, v2);
}

BOOL static SearchSpotlightEntity.SearchSpotlightEntityError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void SearchSpotlightEntity.SearchSpotlightEntityError.hash(into:)()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int SearchSpotlightEntity.SearchSpotlightEntityError.hashValue.getter()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t CSSearchableItem.isMailMessageItem.getter()
{
  uint64_t v1 = outlined bridged method (pb) of @objc CSSearchableItem.bundleID.getter(v0);
  if (!v2) {
    goto LABEL_5;
  }
  if (v1 == 0xD000000000000014)
  {
    OUTLINED_FUNCTION_19_13();
    if (v3) {
      goto LABEL_14;
    }
  }
  char v4 = OUTLINED_FUNCTION_90_2();
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
LABEL_5:
    uint64_t v5 = outlined bridged method (pb) of @objc CSSearchableItem.bundleID.getter(v0);
    if (v6)
    {
      if (v5 == 0xD00000000000001DLL)
      {
        OUTLINED_FUNCTION_19_13();
        if (v3) {
          goto LABEL_14;
        }
      }
      char v7 = OUTLINED_FUNCTION_90_2();
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_9;
      }
    }
    uint64_t v9 = outlined bridged method (pb) of @objc CSSearchableItem.bundleID.getter(v0);
    if (!v10)
    {
      char v8 = 0;
      return v8 & 1;
    }
    if (v9 != 0xD000000000000013 || (OUTLINED_FUNCTION_19_13(), !v3))
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      goto LABEL_15;
    }
LABEL_14:
    char v8 = 1;
LABEL_15:
    swift_bridgeObjectRelease();
    return v8 & 1;
  }
LABEL_9:
  char v8 = 1;
  return v8 & 1;
}

void SearchSpotlightEntity.asNLGEntity.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v24 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  uint64_t v11 = OUTLINED_FUNCTION_81(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_3_18();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v24 - v13;
  SearchNLGEntity.init()(v4);
  EntityProperty.wrappedValue.getter();
  EntityProperty.wrappedValue.setter();
  EntityProperty.wrappedValue.getter();
  EntityProperty.wrappedValue.setter();
  uint64_t v15 = v0 + *(int *)(type metadata accessor for SearchSpotlightEntity(0) + 48);
  outlined init with copy of SearchResultItem?(v15, (uint64_t)v14, &demangling cache variable for type metadata for SearchResult?);
  uint64_t v16 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_53_2((uint64_t)v14, 1, v16);
  if (v17)
  {
    outlined destroy of SearchResult?((uint64_t)v14, &demangling cache variable for type metadata for SearchResult?);
    uint64_t v19 = 0;
  }
  else
  {
    id v18 = *(id *)&v14[*(int *)(v16 + 20)];
    _s10OmniSearch0B10ResultItemOWOhTm_3((uint64_t)v14, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v19 = CSSearchableItem.senderNames.getter();
  }
  v24[0] = v19;
  EntityProperty.wrappedValue.setter();
  outlined init with copy of SearchResultItem?(v15, v2, &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_53_2(v2, 1, v16);
  if (v17)
  {
    outlined destroy of SearchResult?(v2, &demangling cache variable for type metadata for SearchResult?);
    uint64_t v20 = type metadata accessor for Date();
    OUTLINED_FUNCTION_32((uint64_t)v9, v21, v22, v20);
  }
  else
  {
    id v23 = *(id *)(v2 + *(int *)(v16 + 20));
    _s10OmniSearch0B10ResultItemOWOhTm_3(v2, (void (*)(void))type metadata accessor for SearchResult);
    CSSearchableItem.contentCreationDate.getter((uint64_t)v9);
  }
  outlined init with copy of SearchResultItem?((uint64_t)v9, v1, &demangling cache variable for type metadata for Date?);
  EntityProperty.wrappedValue.setter();
  outlined destroy of SearchResult?((uint64_t)v9, &demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_119_0();
}

void SearchSpotlightEntity.asCATEntity.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_4_10();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_95_1();
  uint64_t v13 = v11 - v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v28 - v15;
  SearchCATEntity.init()(v3);
  EntityProperty.wrappedValue.getter();
  uint64_t v18 = v28;
  uint64_t v17 = v29;
  type metadata accessor for SearchCATEntity();
  uint64_t v28 = v18;
  uint64_t v29 = v17;
  EntityProperty.wrappedValue.setter();
  EntityProperty.wrappedValue.getter();
  EntityProperty.wrappedValue.setter();
  uint64_t v19 = v0 + *(int *)(type metadata accessor for SearchSpotlightEntity(0) + 48);
  outlined init with copy of SearchResultItem?(v19, (uint64_t)v16, &demangling cache variable for type metadata for SearchResult?);
  uint64_t v20 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_53_2((uint64_t)v16, 1, v20);
  if (v21)
  {
    outlined destroy of SearchResult?((uint64_t)v16, &demangling cache variable for type metadata for SearchResult?);
    uint64_t v23 = 0;
  }
  else
  {
    id v22 = *(id *)&v16[*(int *)(v20 + 20)];
    _s10OmniSearch0B10ResultItemOWOhTm_3((uint64_t)v16, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v23 = CSSearchableItem.senderNames.getter();
  }
  uint64_t v28 = v23;
  EntityProperty.wrappedValue.setter();
  outlined init with copy of SearchResultItem?(v19, v13, &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_53_2(v13, 1, v20);
  if (v21)
  {
    outlined destroy of SearchResult?(v13, &demangling cache variable for type metadata for SearchResult?);
    uint64_t v24 = type metadata accessor for Date();
    OUTLINED_FUNCTION_32((uint64_t)v8, v25, v26, v24);
  }
  else
  {
    id v27 = *(id *)(v13 + *(int *)(v20 + 20));
    _s10OmniSearch0B10ResultItemOWOhTm_3(v13, (void (*)(void))type metadata accessor for SearchResult);
    CSSearchableItem.contentCreationDate.getter((uint64_t)v8);
  }
  outlined init with copy of SearchResultItem?((uint64_t)v8, v1, &demangling cache variable for type metadata for Date?);
  EntityProperty.wrappedValue.setter();
  outlined destroy of SearchResult?((uint64_t)v8, &demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_119_0();
}

uint64_t outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(void *a1)
{
  return outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(a1, (SEL *)&selRef_title);
}

uint64_t outlined bridged method (pb) of @objc CSSearchableItem.bundleID.getter(void *a1)
{
  id v1 = objc_msgSend(a1, sel_bundleID);
  if (v1)
  {
    uint64_t v2 = v1;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return OUTLINED_FUNCTION_79_0();
}

uint64_t outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.authorNames.getter(void *a1)
{
  id v2 = objc_msgSend(a1, sel_authorNames);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t type metadata accessor for SearchSpotlightEntity(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for SearchSpotlightEntity);
}

uint64_t outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.subject.getter(void *a1)
{
  return outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(a1, (SEL *)&selRef_subject);
}

uint64_t type metadata accessor for SearchSpotlightEntity.Builder(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for SearchSpotlightEntity.Builder);
}

uint64_t outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.contentType.getter(void *a1)
{
  return outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(a1, (SEL *)&selRef_contentType);
}

uint64_t outlined bridged method (ob) of @objc CSSearchableItemAttributeSet.title.getter(void *a1, SEL *a2)
{
  id v3 = [a1 *a2];

  if (!v3) {
    return 0;
  }
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

uint64_t _s10OmniSearch0B6ResultVWOcTm_1(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_210();
  v5(v4);
  return a2;
}

uint64_t _s10OmniSearch0B10ResultItemOWOhTm_3(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_160_1(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t partial apply for closure #1 in static SearchSpotlightEntity.transferRepresentation.getter()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  *id v1 = v2;
  v1[1] = partial apply for closure #1 in static SearchSpotlightEntity.transferRepresentation.getter;
  uint64_t v3 = OUTLINED_FUNCTION_100_5();
  return closure #1 in static SearchSpotlightEntity.transferRepresentation.getter(v3);
}

uint64_t partial apply for closure #2 in static SearchSpotlightEntity.transferRepresentation.getter()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  *id v1 = v2;
  v1[1] = partial apply for closure #2 in static SearchSpotlightEntity.transferRepresentation.getter;
  uint64_t v3 = OUTLINED_FUNCTION_100_5();
  return closure #2 in static SearchSpotlightEntity.transferRepresentation.getter(v3);
}

{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_2();
  id v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_0_2();
  return v4(v3);
}

uint64_t partial apply for closure #3 in static SearchSpotlightEntity.transferRepresentation.getter()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  *id v1 = v2;
  v1[1] = partial apply for closure #1 in static SearchSpotlightEntity.transferRepresentation.getter;
  uint64_t v3 = OUTLINED_FUNCTION_100_5();
  return closure #3 in static SearchSpotlightEntity.transferRepresentation.getter(v3);
}

uint64_t partial apply for closure #4 in static SearchSpotlightEntity.transferRepresentation.getter()
{
  OUTLINED_FUNCTION_27();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)OUTLINED_FUNCTION_44_0(v0);
  *id v1 = v2;
  v1[1] = partial apply for closure #1 in static SearchSpotlightEntity.transferRepresentation.getter;
  uint64_t v3 = OUTLINED_FUNCTION_100_5();
  return closure #4 in static SearchSpotlightEntity.transferRepresentation.getter(v3);
}

unint64_t lazy protocol witness table accessor for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.CodingKeys and conformance SearchSpotlightEntity.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type EntityProperty<IntentFile?> and conformance <> EntityProperty<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type EntityProperty<IntentFile?> and conformance <> EntityProperty<A>;
  if (!lazy protocol witness table cache variable for type EntityProperty<IntentFile?> and conformance <> EntityProperty<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
    lazy protocol witness table accessor for type IntentFile? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type IntentFile? and conformance <A> A?);
    lazy protocol witness table accessor for type IntentFile? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type IntentFile? and conformance <A> A?);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityProperty<IntentFile?> and conformance <> EntityProperty<A>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type IntentFile? and conformance <A> A?(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_160_1(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0(v4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type EntityProperty<[String]> and conformance <> EntityProperty<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type EntityProperty<[String]> and conformance <> EntityProperty<A>;
  if (!lazy protocol witness table cache variable for type EntityProperty<[String]> and conformance <> EntityProperty<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for EntityProperty<[String]>);
    lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityProperty<[String]> and conformance <> EntityProperty<A>);
  }
  return result;
}

uint64_t _s10OmniSearch0B15SpotlightEntityVWObTm_0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_211();
  v5(v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.Query and conformance SearchSpotlightEntity.Query);
  }
  return result;
}

unint64_t associated type witness table accessor for EntityQuery.Entity : AppEntity in SearchSpotlightEntity.Query()
{
  return _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

unint64_t associated type witness table accessor for DynamicOptionsProvider.DefaultValue : _IntentValue in SearchSpotlightEntity.Query()
{
  return _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

unint64_t lazy protocol witness table accessor for type [SearchSpotlightEntity] and conformance <A> [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [SearchSpotlightEntity] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [SearchSpotlightEntity] and conformance <A> [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SearchSpotlightEntity]);
    _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [SearchSpotlightEntity] and conformance <A> [A]);
  }
  return result;
}

unint64_t base witness table accessor for AppValue in SearchSpotlightEntity()
{
  return _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

unint64_t base witness table accessor for DisplayRepresentable in SearchSpotlightEntity()
{
  return _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

unint64_t base witness table accessor for Identifiable in SearchSpotlightEntity()
{
  return _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

uint64_t associated type witness table accessor for Transferable.Representation : TransferRepresentation in SearchSpotlightEntity()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t base witness table accessor for PersistentlyIdentifiable in SearchSpotlightEntity()
{
  return _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

unint64_t base witness table accessor for TypeDisplayRepresentable in SearchSpotlightEntity()
{
  return _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

unint64_t base witness table accessor for InstanceDisplayRepresentable in SearchSpotlightEntity()
{
  return _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

unint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in SearchSpotlightEntity()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type EmptyResolverSpecification<SearchSpotlightEntity> and conformance EmptyResolverSpecification<A>);
}

unint64_t base witness table accessor for CustomLocalizedStringResourceConvertible in SearchSpotlightEntity()
{
  return _s16IntelligenceFlow13RGPluginModelOAC10SnippetKit0e6PluginD0AAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type SearchSpotlightEntity and conformance SearchSpotlightEntity);
}

unint64_t lazy protocol witness table accessor for type SearchSpotlightEntity.SearchSpotlightEntityError and conformance SearchSpotlightEntity.SearchSpotlightEntityError()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchSpotlightEntity.SearchSpotlightEntityError and conformance SearchSpotlightEntity.SearchSpotlightEntityError;
  if (!lazy protocol witness table cache variable for type SearchSpotlightEntity.SearchSpotlightEntityError and conformance SearchSpotlightEntity.SearchSpotlightEntityError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchSpotlightEntity.SearchSpotlightEntityError and conformance SearchSpotlightEntity.SearchSpotlightEntityError);
  }
  return result;
}

uint64_t sub_2582C2E4C()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchSpotlightEntity.bundleId.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2582C2E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchSpotlightEntity.bundleId : SearchSpotlightEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))SearchSpotlightEntity.bundleId.setter);
}

id sub_2582C2EA0()
{
  OUTLINED_FUNCTION_13_7();
  id result = SearchSpotlightEntity.card.getter();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_2582C2ECC()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchSpotlightEntity.documentSource.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2582C2EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchSpotlightEntity.bundleId : SearchSpotlightEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))SearchSpotlightEntity.documentSource.setter);
}

uint64_t sub_2582C2F20()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchSpotlightEntity.title.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2582C2F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchSpotlightEntity.bundleId : SearchSpotlightEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))SearchSpotlightEntity.title.setter);
}

uint64_t sub_2582C2F74()
{
  return SearchSpotlightEntity.experienceFile.getter();
}

uint64_t sub_2582C2F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchSpotlightEntity.experienceFile : SearchSpotlightEntity(a1, a2, a3, a4, SearchSpotlightEntity.experienceFile.setter);
}

uint64_t sub_2582C2FC4()
{
  return SearchSpotlightEntity.encodedSearchableItem.getter();
}

uint64_t sub_2582C2FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchSpotlightEntity.experienceFile : SearchSpotlightEntity(a1, a2, a3, a4, SearchSpotlightEntity.encodedSearchableItem.setter);
}

uint64_t sub_2582C3014()
{
  return SearchSpotlightEntity.fileContent.getter();
}

uint64_t sub_2582C3038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for SearchSpotlightEntity.experienceFile : SearchSpotlightEntity(a1, a2, a3, a4, SearchSpotlightEntity.fileContent.setter);
}

uint64_t sub_2582C3064()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchSpotlightEntity.supportedTypeIdentifiersForExport.getter();
  *uint64_t v0 = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SearchSpotlightEntity(uint64_t a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v9 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    uint64_t v7 = a2 + 1;
    unint64_t v8 = a2[2];
    swift_retain();
    if (v8 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)v7;
    }
    else
    {
      uint64_t v10 = *v7;
      outlined copy of Data._Representation(*v7, v8);
      *(void *)(a1 + 8) = v10;
      *(void *)(a1 + 16) = v8;
    }
    uint64_t v11 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v11;
    uint64_t v12 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v12;
    uint64_t v13 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v13;
    uint64_t v14 = a2[9];
    uint64_t v15 = *(int *)(a3 + 48);
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = a1;
    uint64_t v18 = a2;
    uint64_t v19 = (void *)((char *)a2 + v15);
    uint64_t v2726 = v17;
    *(void *)(v17 + 72) = v14;
    uint64_t v20 = type metadata accessor for SearchResult(0);
    swift_retain();
    swift_retain();
    swift_retain();
    char v21 = v19;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v2746 = v18;
    if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
      memcpy(v16, v19, *(void *)(*(void *)(v22 - 8) + 64));
      uint64_t v9 = v2726;
      uint64_t v23 = a3;
    }
    else
    {
      uint64_t v2721 = v20;
      v2725 = v16;
      type metadata accessor for SearchResultItem(0);
      uint64_t v24 = (uint64_t)v16;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v47 = v19[1];
          *uint64_t v16 = *v19;
          v16[1] = v47;
          uint64_t v48 = v19[3];
          v16[2] = v19[2];
          v16[3] = v48;
          uint64_t v49 = v19[5];
          v16[4] = v19[4];
          uint64_t v16[5] = v49;
          uint64_t v50 = v19[7];
          v16[6] = v19[6];
          v16[7] = v50;
          uint64_t v51 = v19[9];
          _OWORD v16[8] = v19[8];
          v16[9] = v51;
          uint64_t v2700 = (int *)type metadata accessor for MobileSMSDocument(0);
          v2717 = v19;
          uint64_t v52 = v2700[10];
          uint64_t v53 = (char *)v16 + v52;
          uint64_t v54 = (char *)v19 + v52;
          uint64_t v55 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v2684 = v55;
          if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55))
          {
            uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
            __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
          }
          uint64_t v372 = v2700[11];
          long long v373 = (char *)v2725 + v372;
          long long v374 = (char *)v2717 + v372;
          uint64_t v375 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v374, 1, v375))
          {
            uint64_t v376 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v373, v374, *(void *)(*(void *)(v376 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v375 - 8) + 16))(v373, v374, v375);
            __swift_storeEnumTagSinglePayload((uint64_t)v373, 0, 1, v375);
          }
          uint64_t v9 = v2726;
          *(void *)((char *)v2725 + v2700[12]) = *(void *)((char *)v2717 + v2700[12]);
          uint64_t v544 = v2700[13];
          uint64_t v545 = (void *)((char *)v2725 + v544);
          uint64_t v546 = (void *)((char *)v2717 + v544);
          uint64_t v547 = v546[1];
          void *v545 = *v546;
          v545[1] = v547;
          uint64_t v548 = v2700[14];
          uint64_t v549 = (void *)((char *)v2725 + v548);
          uint64_t v550 = (void *)((char *)v2717 + v548);
          uint64_t v551 = v550[1];
          void *v549 = *v550;
          v549[1] = v551;
          *(void *)((char *)v2725 + v2700[15]) = *(void *)((char *)v2717 + v2700[15]);
          *(void *)((char *)v2725 + v2700[16]) = *(void *)((char *)v2717 + v2700[16]);
          uint64_t v552 = v2700[17];
          uint64_t v553 = (void *)((char *)v2725 + v552);
          long long v554 = (char *)v2717 + v552;
          uint64_t v555 = *(void *)((char *)v2717 + v552);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v2680 = v375;
          if (v555)
          {
            uint64_t v556 = *((void *)v554 + 1);
            uint64_t v557 = *((void *)v554 + 2);
            *uint64_t v553 = v555;
            v553[1] = v556;
            uint64_t v558 = *((void *)v554 + 3);
            uint64_t v559 = *((void *)v554 + 4);
            v553[2] = v557;
            v553[3] = v558;
            v553[4] = v559;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v719 = *((_OWORD *)v554 + 1);
            *(_OWORD *)uint64_t v553 = *(_OWORD *)v554;
            *((_OWORD *)v553 + 1) = v719;
            v553[4] = *((void *)v554 + 4);
          }
          char v21 = v2717;
          uint64_t v720 = v2700[18];
          uint64_t v721 = v2725;
          uint64_t v722 = (void *)((char *)v2725 + v720);
          uint64_t v723 = (void *)((char *)v2717 + v720);
          uint64_t v724 = v723[1];
          *uint64_t v722 = *v723;
          v722[1] = v724;
          uint64_t v725 = v2700[19];
          uint64_t v726 = (void *)((char *)v2725 + v725);
          uint64_t v727 = (void *)((char *)v2717 + v725);
          uint64_t v728 = type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v727, 1, v728))
          {
            uint64_t v729 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v726, v727, *(void *)(*(void *)(v729 - 8) + 64));
          }
          else
          {
            uint64_t v766 = v727[1];
            *uint64_t v726 = *v727;
            v726[1] = v766;
            uint64_t v767 = *(int *)(v728 + 20);
            uint64_t v768 = (void *)((char *)v726 + v767);
            v2730 = v727;
            uint64_t v769 = (void *)((char *)v727 + v767);
            uint64_t v770 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            uint64_t v2649 = (int *)v728;
            uint64_t v2667 = v726;
            if (__swift_getEnumTagSinglePayload((uint64_t)v769, 1, v770))
            {
              uint64_t v771 = (int *)v728;
              uint64_t v772 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v768, v769, *(void *)(*(void *)(v772 - 8) + 64));
            }
            else
            {
              uint64_t v830 = v769[1];
              *uint64_t v768 = *v769;
              v768[1] = v830;
              uint64_t v831 = v769[3];
              v768[2] = v769[2];
              v768[3] = v831;
              uint64_t v832 = v769[5];
              v768[4] = v769[4];
              v768[5] = v832;
              uint64_t v833 = v769[7];
              v768[6] = v769[6];
              v768[7] = v833;
              uint64_t v834 = v769[9];
              v768[8] = v769[8];
              v768[9] = v834;
              uint64_t v835 = v769[11];
              v768[10] = v769[10];
              v768[11] = v835;
              uint64_t v836 = v769[13];
              v768[12] = v769[12];
              v768[13] = v836;
              uint64_t v837 = v769[15];
              v768[14] = v769[14];
              v768[15] = v837;
              *((unsigned char *)v768 + 128) = *((unsigned char *)v769 + 128);
              *(_WORD *)((char *)v768 + 129) = *(_WORD *)((char *)v769 + 129);
              uint64_t v838 = v769[18];
              v768[17] = v769[17];
              v768[18] = v838;
              uint64_t v839 = v769[20];
              v768[19] = v769[19];
              v768[20] = v839;
              uint64_t v840 = v769[22];
              v768[21] = v769[21];
              v768[22] = v840;
              uint64_t v2547 = v769[24];
              v768[23] = v769[23];
              v768[24] = v2547;
              uint64_t v841 = v769[26];
              v768[25] = v769[25];
              v768[26] = v841;
              uint64_t v842 = v769[28];
              v768[27] = v769[27];
              v768[28] = v842;
              uint64_t v843 = v769[30];
              v768[29] = v769[29];
              v768[30] = v843;
              uint64_t v844 = v769[32];
              v768[31] = v769[31];
              v768[32] = v844;
              uint64_t v845 = v769[34];
              v768[33] = v769[33];
              v768[34] = v845;
              uint64_t v846 = v769[36];
              v768[35] = v769[35];
              v768[36] = v846;
              uint64_t v847 = v769[38];
              v768[37] = v769[37];
              v768[38] = v847;
              uint64_t v848 = v769[40];
              v768[39] = v769[39];
              v768[40] = v848;
              uint64_t v849 = v769[42];
              v768[41] = v769[41];
              v768[42] = v849;
              uint64_t v850 = v769[44];
              v768[43] = v769[43];
              v768[44] = v850;
              uint64_t v851 = v769[46];
              v768[45] = v769[45];
              v768[46] = v851;
              uint64_t v852 = v769[47];
              *((unsigned char *)v768 + 384) = *((unsigned char *)v769 + 384);
              v768[47] = v852;
              uint64_t v853 = v769[50];
              v768[49] = v769[49];
              v768[50] = v853;
              uint64_t v854 = v769[52];
              v768[51] = v769[51];
              v768[52] = v854;
              uint64_t v855 = *(int *)(v770 + 140);
              uint64_t v2623 = (char *)v768 + v855;
              uint64_t v856 = (char *)v769 + v855;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v856, 1, v55))
              {
                uint64_t v857 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2623, v856, *(void *)(*(void *)(v857 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v2623, v856, v55);
                __swift_storeEnumTagSinglePayload((uint64_t)v2623, 0, 1, v55);
              }
              uint64_t v866 = *(int *)(v770 + 144);
              uint64_t v867 = (char *)v768 + v866;
              uint64_t v868 = (char *)v769 + v866;
              char v21 = v2717;
              if (__swift_getEnumTagSinglePayload((uint64_t)v769 + v866, 1, v55))
              {
                uint64_t v869 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v867, v868, *(void *)(*(void *)(v869 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v867, v868, v55);
                __swift_storeEnumTagSinglePayload((uint64_t)v867, 0, 1, v55);
              }
              uint64_t v771 = v2649;
              __swift_storeEnumTagSinglePayload((uint64_t)v768, 0, 1, v770);
              uint64_t v726 = v2667;
            }
            uint64_t v923 = v771[6];
            uint64_t v924 = (void *)((char *)v726 + v923);
            uint64_t v925 = v2730;
            uint64_t v926 = (void *)((char *)v2730 + v923);
            uint64_t v927 = type metadata accessor for TicketedTransportation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v926, 1, v927))
            {
              uint64_t v928 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v924, v926, *(void *)(*(void *)(v928 - 8) + 64));
            }
            else
            {
              uint64_t v929 = v926[1];
              *uint64_t v924 = *v926;
              v924[1] = v929;
              uint64_t v930 = v926[3];
              v924[2] = v926[2];
              v924[3] = v930;
              uint64_t v931 = v926[5];
              v924[4] = v926[4];
              v924[5] = v931;
              uint64_t v932 = v926[7];
              v924[6] = v926[6];
              v924[7] = v932;
              uint64_t v933 = v926[9];
              v924[8] = v926[8];
              v924[9] = v933;
              uint64_t v934 = v926[11];
              v924[10] = v926[10];
              v924[11] = v934;
              uint64_t v935 = v926[13];
              v924[12] = v926[12];
              v924[13] = v935;
              uint64_t v936 = v926[15];
              v924[14] = v926[14];
              v924[15] = v936;
              *((unsigned char *)v924 + 128) = *((unsigned char *)v926 + 128);
              *(_WORD *)((char *)v924 + 129) = *(_WORD *)((char *)v926 + 129);
              uint64_t v937 = v926[18];
              v924[17] = v926[17];
              v924[18] = v937;
              uint64_t v938 = v926[20];
              v924[19] = v926[19];
              v924[20] = v938;
              uint64_t v939 = v926[22];
              v924[21] = v926[21];
              v924[22] = v939;
              uint64_t v940 = v926[24];
              v924[23] = v926[23];
              v924[24] = v940;
              uint64_t v2609 = (void *)v926[26];
              v924[25] = v926[25];
              v924[26] = v2609;
              uint64_t v941 = v926[28];
              v924[27] = v926[27];
              v924[28] = v941;
              uint64_t v942 = v926[30];
              v924[29] = v926[29];
              v924[30] = v942;
              uint64_t v943 = v926[32];
              v924[31] = v926[31];
              v924[32] = v943;
              uint64_t v944 = v926[34];
              v924[33] = v926[33];
              v924[34] = v944;
              uint64_t v945 = v926[36];
              uint64_t v946 = v926[35];
              *((unsigned char *)v924 + 296) = *((unsigned char *)v926 + 296);
              v924[35] = v946;
              v924[36] = v945;
              uint64_t v947 = *(int *)(v927 + 112);
              uint64_t v2624 = (char *)v924 + v947;
              uint64_t v948 = (char *)v926 + v947;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v948, 1, v55))
              {
                uint64_t v949 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2624, v948, *(void *)(*(void *)(v949 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v2624, v948, v55);
                __swift_storeEnumTagSinglePayload((uint64_t)v2624, 0, 1, v55);
              }
              uint64_t v958 = *(int *)(v927 + 116);
              uint64_t v959 = (char *)v924 + v958;
              uint64_t v960 = (char *)v926 + v958;
              char v21 = v2717;
              uint64_t v925 = v2730;
              if (__swift_getEnumTagSinglePayload((uint64_t)v926 + v958, 1, v55))
              {
                uint64_t v961 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v959, v960, *(void *)(*(void *)(v961 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v959, v960, v55);
                __swift_storeEnumTagSinglePayload((uint64_t)v959, 0, 1, v55);
              }
              uint64_t v771 = v2649;
              __swift_storeEnumTagSinglePayload((uint64_t)v924, 0, 1, v927);
              uint64_t v726 = v2667;
            }
            uint64_t v1016 = v771[7];
            uint64_t v1017 = (void *)((char *)v726 + v1016);
            uint64_t v1018 = (void *)((char *)v925 + v1016);
            uint64_t v1019 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1018, 1, (uint64_t)v1019))
            {
              uint64_t v1020 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v1017, v1018, *(void *)(*(void *)(v1020 - 8) + 64));
            }
            else
            {
              uint64_t v1021 = v1018[1];
              *uint64_t v1017 = *v1018;
              v1017[1] = v1021;
              uint64_t v1022 = v1018[3];
              v1017[2] = v1018[2];
              v1017[3] = v1022;
              uint64_t v1023 = v1018[5];
              v1017[4] = v1018[4];
              v1017[5] = v1023;
              uint64_t v1024 = v1018[7];
              v1017[6] = v1018[6];
              v1017[7] = v1024;
              uint64_t v1025 = v1018[9];
              v1017[8] = v1018[8];
              v1017[9] = v1025;
              uint64_t v1026 = v1018[11];
              v1017[10] = v1018[10];
              v1017[11] = v1026;
              uint64_t v1027 = v1018[13];
              v1017[12] = v1018[12];
              v1017[13] = v1027;
              uint64_t v1028 = v1018[15];
              v1017[14] = v1018[14];
              v1017[15] = v1028;
              *((unsigned char *)v1017 + 128) = *((unsigned char *)v1018 + 128);
              *(_WORD *)((char *)v1017 + 129) = *(_WORD *)((char *)v1018 + 129);
              uint64_t v1029 = v1018[18];
              v1017[17] = v1018[17];
              v1017[18] = v1029;
              uint64_t v1030 = v1018[20];
              v1017[19] = v1018[19];
              v1017[20] = v1030;
              uint64_t v1031 = v1018[22];
              v1017[21] = v1018[21];
              v1017[22] = v1031;
              uint64_t v1032 = v1018[24];
              v1017[23] = v1018[23];
              v1017[24] = v1032;
              uint64_t v1033 = v1018[26];
              v1017[25] = v1018[25];
              v1017[26] = v1033;
              uint64_t v1034 = v1018[28];
              v1017[27] = v1018[27];
              v1017[28] = v1034;
              __dste = (void *)v1018[30];
              v1017[29] = v1018[29];
              v1017[30] = __dste;
              uint64_t v1035 = v1018[32];
              v1017[31] = v1018[31];
              v1017[32] = v1035;
              uint64_t v1036 = v1018[34];
              v1017[33] = v1018[33];
              v1017[34] = v1036;
              uint64_t v1037 = v1018[36];
              uint64_t v1038 = v1018[35];
              *((unsigned char *)v1017 + 296) = *((unsigned char *)v1018 + 296);
              v1017[35] = v1038;
              v1017[36] = v1037;
              uint64_t v1039 = v1018[39];
              v1017[38] = v1018[38];
              v1017[39] = v1039;
              uint64_t v1040 = v1019[29];
              uint64_t v2611 = (char *)v1017 + v1040;
              uint64_t v2626 = v1019;
              uint64_t v1041 = (char *)v1018 + v1040;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1041, 1, v2680))
              {
                uint64_t v1042 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2611, v1041, *(void *)(*(void *)(v1042 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2680 - 8) + 16))(v2611, v1041, v2680);
                __swift_storeEnumTagSinglePayload((uint64_t)v2611, 0, 1, v2680);
              }
              uint64_t v1059 = v1019[30];
              uint64_t v1060 = (void *)((char *)v1017 + v1059);
              uint64_t v1061 = (void *)((char *)v1018 + v1059);
              uint64_t v1062 = v1061[1];
              *uint64_t v1060 = *v1061;
              v1060[1] = v1062;
              uint64_t v1063 = v1019[31];
              uint64_t v1064 = (char *)v1017 + v1063;
              uint64_t v1065 = (char *)v1018 + v1063;
              swift_bridgeObjectRetain();
              char v21 = v2717;
              uint64_t v925 = v2730;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1065, 1, v55))
              {
                uint64_t v1066 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1064, v1065, *(void *)(*(void *)(v1066 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v1064, v1065, v55);
                __swift_storeEnumTagSinglePayload((uint64_t)v1064, 0, 1, v55);
              }
              uint64_t v1075 = v2626[32];
              uint64_t v1076 = (char *)v1017 + v1075;
              uint64_t v1077 = (char *)v1018 + v1075;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1018 + v1075, 1, v55))
              {
                uint64_t v1078 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1076, v1077, *(void *)(*(void *)(v1078 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v1076, v1077, v55);
                __swift_storeEnumTagSinglePayload((uint64_t)v1076, 0, 1, v55);
              }
              uint64_t v771 = v2649;
              __swift_storeEnumTagSinglePayload((uint64_t)v1017, 0, 1, (uint64_t)v2626);
              uint64_t v726 = v2667;
            }
            uint64_t v1133 = v771[8];
            uint64_t v1134 = (void *)((char *)v726 + v1133);
            uint64_t v1135 = (void *)((char *)v925 + v1133);
            uint64_t v1136 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1135, 1, v1136))
            {
              uint64_t v1137 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v1134, v1135, *(void *)(*(void *)(v1137 - 8) + 64));
            }
            else
            {
              uint64_t v1138 = v1135[1];
              *uint64_t v1134 = *v1135;
              v1134[1] = v1138;
              uint64_t v1139 = v1135[3];
              v1134[2] = v1135[2];
              v1134[3] = v1139;
              uint64_t v1140 = v1135[5];
              v1134[4] = v1135[4];
              v1134[5] = v1140;
              uint64_t v1141 = v1135[7];
              v1134[6] = v1135[6];
              v1134[7] = v1141;
              uint64_t v1142 = v1135[9];
              v1134[8] = v1135[8];
              v1134[9] = v1142;
              uint64_t v1143 = v1135[11];
              v1134[10] = v1135[10];
              v1134[11] = v1143;
              uint64_t v1144 = v1135[13];
              v1134[12] = v1135[12];
              v1134[13] = v1144;
              uint64_t v1145 = v1135[15];
              v1134[14] = v1135[14];
              v1134[15] = v1145;
              *((unsigned char *)v1134 + 128) = *((unsigned char *)v1135 + 128);
              *(_WORD *)((char *)v1134 + 129) = *(_WORD *)((char *)v1135 + 129);
              uint64_t v1146 = v1135[18];
              v1134[17] = v1135[17];
              v1134[18] = v1146;
              uint64_t v1147 = v1135[20];
              v1134[19] = v1135[19];
              v1134[20] = v1147;
              uint64_t v1148 = v1135[22];
              v1134[21] = v1135[21];
              v1134[22] = v1148;
              uint64_t v1149 = v1135[24];
              v1134[23] = v1135[23];
              v1134[24] = v1149;
              uint64_t v1150 = v1135[26];
              v1134[25] = v1135[25];
              v1134[26] = v1150;
              uint64_t v1151 = v1135[28];
              v1134[27] = v1135[27];
              v1134[28] = v1151;
              uint64_t v1152 = v1135[30];
              v1134[29] = v1135[29];
              v1134[30] = v1152;
              uint64_t v1153 = v1135[32];
              v1134[31] = v1135[31];
              v1134[32] = v1153;
              uint64_t v1155 = v1135[33];
              uint64_t v1154 = v1135[34];
              *((unsigned char *)v1134 + 280) = *((unsigned char *)v1135 + 280);
              v1134[33] = v1155;
              v1134[34] = v1154;
              uint64_t v1156 = v1135[37];
              v1134[36] = v1135[36];
              v1134[37] = v1156;
              uint64_t v1157 = *(int *)(v1136 + 108);
              uint64_t v2627 = (char *)v1134 + v1157;
              uint64_t v1158 = (char *)v1135 + v1157;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1158, 1, v55))
              {
                uint64_t v1159 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2627, v1158, *(void *)(*(void *)(v1159 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v2627, v1158, v55);
                __swift_storeEnumTagSinglePayload((uint64_t)v2627, 0, 1, v55);
              }
              uint64_t v1168 = *(int *)(v1136 + 112);
              uint64_t v1169 = (char *)v1134 + v1168;
              uint64_t v1170 = (char *)v1135 + v1168;
              char v21 = v2717;
              uint64_t v925 = v2730;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1135 + v1168, 1, v55))
              {
                uint64_t v1171 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1169, v1170, *(void *)(*(void *)(v1171 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v1169, v1170, v55);
                __swift_storeEnumTagSinglePayload((uint64_t)v1169, 0, 1, v55);
              }
              uint64_t v771 = v2649;
              __swift_storeEnumTagSinglePayload((uint64_t)v1134, 0, 1, v1136);
              uint64_t v726 = v2667;
            }
            uint64_t v1218 = v771[9];
            uint64_t v1219 = (void *)((char *)v726 + v1218);
            uint64_t v1220 = (void *)((char *)v925 + v1218);
            uint64_t v1221 = (int *)type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1220, 1, (uint64_t)v1221))
            {
              uint64_t v1222 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v1219, v1220, *(void *)(*(void *)(v1222 - 8) + 64));
            }
            else
            {
              uint64_t v1223 = v1220[1];
              *uint64_t v1219 = *v1220;
              v1219[1] = v1223;
              uint64_t v1224 = v1220[3];
              v1219[2] = v1220[2];
              v1219[3] = v1224;
              uint64_t v1225 = v1220[5];
              v1219[4] = v1220[4];
              v1219[5] = v1225;
              uint64_t v1226 = v1220[7];
              v1219[6] = v1220[6];
              v1219[7] = v1226;
              uint64_t v1227 = v1220[9];
              v1219[8] = v1220[8];
              v1219[9] = v1227;
              uint64_t v1228 = v1220[11];
              v1219[10] = v1220[10];
              v1219[11] = v1228;
              uint64_t v1229 = v1220[13];
              v1219[12] = v1220[12];
              v1219[13] = v1229;
              uint64_t v1230 = v1220[15];
              v1219[14] = v1220[14];
              v1219[15] = v1230;
              *((unsigned char *)v1219 + 128) = *((unsigned char *)v1220 + 128);
              *(_WORD *)((char *)v1219 + 129) = *(_WORD *)((char *)v1220 + 129);
              uint64_t v1231 = v1220[18];
              v1219[17] = v1220[17];
              v1219[18] = v1231;
              uint64_t v1232 = v1220[20];
              v1219[19] = v1220[19];
              v1219[20] = v1232;
              uint64_t v1233 = v1220[22];
              v1219[21] = v1220[21];
              v1219[22] = v1233;
              uint64_t v1234 = v1220[24];
              v1219[23] = v1220[23];
              v1219[24] = v1234;
              uint64_t v1235 = v1220[26];
              v1219[25] = v1220[25];
              v1219[26] = v1235;
              uint64_t v1236 = v1220[28];
              v1219[27] = v1220[27];
              v1219[28] = v1236;
              uint64_t v1237 = v1220[30];
              v1219[29] = v1220[29];
              v1219[30] = v1237;
              v1219[31] = v1220[31];
              uint64_t v1238 = v1221[24];
              uint64_t v2628 = (char *)v1219 + v1238;
              uint64_t v1239 = (char *)v1220 + v1238;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1239, 1, v55))
              {
                uint64_t v1240 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2628, v1239, *(void *)(*(void *)(v1240 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v2628, v1239, v55);
                __swift_storeEnumTagSinglePayload((uint64_t)v2628, 0, 1, v55);
              }
              uint64_t v1249 = v1221[25];
              uint64_t v1250 = (char *)v1219 + v1249;
              uint64_t v1251 = (char *)v1220 + v1249;
              char v21 = v2717;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1220 + v1249, 1, v55))
              {
                uint64_t v1252 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1250, v1251, *(void *)(*(void *)(v1252 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v1250, v1251, v55);
                __swift_storeEnumTagSinglePayload((uint64_t)v1250, 0, 1, v55);
              }
              uint64_t v771 = v2649;
              uint64_t v1263 = v1221[26];
              uint64_t v1264 = (char *)v1219 + v1263;
              uint64_t v1265 = (char *)v1220 + v1263;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1220 + v1263, 1, v2680))
              {
                uint64_t v1266 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1264, v1265, *(void *)(*(void *)(v1266 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2680 - 8) + 16))(v1264, v1265, v2680);
                __swift_storeEnumTagSinglePayload((uint64_t)v1264, 0, 1, v2680);
              }
              uint64_t v925 = v2730;
              __swift_storeEnumTagSinglePayload((uint64_t)v1219, 0, 1, (uint64_t)v1221);
              uint64_t v726 = v2667;
            }
            uint64_t v1309 = v771[10];
            uint64_t v1310 = (void *)((char *)v726 + v1309);
            uint64_t v1311 = (void *)((char *)v925 + v1309);
            uint64_t v1312 = (int *)type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1311, 1, (uint64_t)v1312))
            {
              uint64_t v1313 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1310, v1311, *(void *)(*(void *)(v1313 - 8) + 64));
            }
            else
            {
              uint64_t v1314 = v1311[1];
              *uint64_t v1310 = *v1311;
              v1310[1] = v1314;
              uint64_t v1315 = v1311[3];
              v1310[2] = v1311[2];
              v1310[3] = v1315;
              uint64_t v1316 = v1311[5];
              v1310[4] = v1311[4];
              v1310[5] = v1316;
              uint64_t v1317 = v1311[7];
              v1310[6] = v1311[6];
              v1310[7] = v1317;
              uint64_t v1318 = v1311[9];
              v1310[8] = v1311[8];
              v1310[9] = v1318;
              uint64_t v1319 = v1311[11];
              v1310[10] = v1311[10];
              v1310[11] = v1319;
              uint64_t v1320 = v1311[13];
              v1310[12] = v1311[12];
              v1310[13] = v1320;
              uint64_t v1321 = v1311[15];
              v1310[14] = v1311[14];
              v1310[15] = v1321;
              *((unsigned char *)v1310 + 128) = *((unsigned char *)v1311 + 128);
              *(_WORD *)((char *)v1310 + 129) = *(_WORD *)((char *)v1311 + 129);
              uint64_t v1322 = v1311[18];
              v1310[17] = v1311[17];
              v1310[18] = v1322;
              uint64_t v1323 = v1311[20];
              v1310[19] = v1311[19];
              v1310[20] = v1323;
              uint64_t v1324 = v1311[22];
              v1310[21] = v1311[21];
              v1310[22] = v1324;
              uint64_t v1325 = v1311[24];
              v1310[23] = v1311[23];
              v1310[24] = v1325;
              uint64_t v1326 = v1311[26];
              v1310[25] = v1311[25];
              v1310[26] = v1326;
              v1310[27] = v1311[27];
              uint64_t v1327 = v1312[22];
              uint64_t v2629 = (char *)v1310 + v1327;
              uint64_t v1328 = (char *)v1311 + v1327;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1328, 1, v55))
              {
                uint64_t v1329 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2629, v1328, *(void *)(*(void *)(v1329 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v2629, v1328, v55);
                __swift_storeEnumTagSinglePayload((uint64_t)v2629, 0, 1, v55);
              }
              uint64_t v1338 = v1312[23];
              uint64_t v1339 = (char *)v1310 + v1338;
              uint64_t v1340 = (char *)v1311 + v1338;
              char v21 = v2717;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1311 + v1338, 1, v55))
              {
                uint64_t v1341 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1339, v1340, *(void *)(*(void *)(v1341 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v1339, v1340, v55);
                __swift_storeEnumTagSinglePayload((uint64_t)v1339, 0, 1, v55);
              }
              uint64_t v771 = v2649;
              uint64_t v1358 = v1312[24];
              uint64_t v1359 = (char *)v1310 + v1358;
              uint64_t v1360 = (char *)v1311 + v1358;
              *(void *)uint64_t v1359 = *(void *)v1360;
              v1359[8] = v1360[8];
              uint64_t v1361 = v1312[25];
              uint64_t v1362 = (char *)v1310 + v1361;
              uint64_t v1363 = (char *)v1311 + v1361;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1311 + v1361, 1, v2680))
              {
                uint64_t v1364 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1362, v1363, *(void *)(*(void *)(v1364 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2680 - 8) + 16))(v1362, v1363, v2680);
                __swift_storeEnumTagSinglePayload((uint64_t)v1362, 0, 1, v2680);
              }
              uint64_t v925 = v2730;
              __swift_storeEnumTagSinglePayload((uint64_t)v1310, 0, 1, (uint64_t)v1312);
              uint64_t v726 = v2667;
            }
            uint64_t v1397 = v771[11];
            uint64_t v1398 = (void *)((char *)v726 + v1397);
            uint64_t v1399 = (void *)((char *)v925 + v1397);
            uint64_t v1400 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1399, 1, (uint64_t)v1400))
            {
              uint64_t v1401 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1398, v1399, *(void *)(*(void *)(v1401 - 8) + 64));
            }
            else
            {
              uint64_t v1402 = v1399[1];
              *uint64_t v1398 = *v1399;
              v1398[1] = v1402;
              uint64_t v1403 = v1399[3];
              v1398[2] = v1399[2];
              v1398[3] = v1403;
              uint64_t v1404 = v1399[5];
              v1398[4] = v1399[4];
              v1398[5] = v1404;
              uint64_t v1405 = v1399[7];
              v1398[6] = v1399[6];
              v1398[7] = v1405;
              uint64_t v1406 = v1399[9];
              v1398[8] = v1399[8];
              v1398[9] = v1406;
              uint64_t v1407 = v1399[11];
              v1398[10] = v1399[10];
              v1398[11] = v1407;
              *((unsigned char *)v1398 + 96) = *((unsigned char *)v1399 + 96);
              uint64_t v1408 = v1399[14];
              v1398[13] = v1399[13];
              v1398[14] = v1408;
              uint64_t v1409 = v1400[13];
              uint64_t v2631 = (char *)v1398 + v1409;
              uint64_t v1410 = (char *)v1399 + v1409;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1410, 1, v2680))
              {
                uint64_t v1411 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2631, v1410, *(void *)(*(void *)(v1411 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2680 - 8) + 16))(v2631, v1410, v2680);
                __swift_storeEnumTagSinglePayload((uint64_t)v2631, 0, 1, v2680);
              }
              uint64_t v1420 = v1400[14];
              uint64_t v1421 = (char *)v1398 + v1420;
              uint64_t v1422 = (char *)v1399 + v1420;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1399 + v1420, 1, v2680))
              {
                uint64_t v1423 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1421, v1422, *(void *)(*(void *)(v1423 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2680 - 8) + 16))(v1421, v1422, v2680);
                __swift_storeEnumTagSinglePayload((uint64_t)v1421, 0, 1, v2680);
              }
              uint64_t v1566 = v1400[15];
              uint64_t v1567 = (void *)((char *)v1398 + v1566);
              v1568 = (void *)((char *)v1399 + v1566);
              uint64_t v1569 = v1568[1];
              void *v1567 = *v1568;
              v1567[1] = v1569;
              uint64_t v1570 = v1400[16];
              uint64_t v1571 = (void *)((char *)v1398 + v1570);
              uint64_t v1572 = (void *)((char *)v1399 + v1570);
              uint64_t v1573 = v1572[1];
              void *v1571 = *v1572;
              v1571[1] = v1573;
              uint64_t v1574 = v1400[17];
              uint64_t v1575 = (void *)((char *)v1398 + v1574);
              uint64_t v1576 = (void *)((char *)v1399 + v1574);
              uint64_t v1577 = v1576[1];
              void *v1575 = *v1576;
              v1575[1] = v1577;
              uint64_t v1578 = v1400[18];
              v2617 = (char *)v1399 + v1578;
              uint64_t v2634 = (char *)v1398 + v1578;
              uint64_t v1579 = type metadata accessor for DateComponents();
              uint64_t v1580 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1579 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1580(v2634, v2617, v1579);
              v1580((char *)v1398 + v1400[19], (char *)v1399 + v1400[19], v1579);
              uint64_t v1581 = v1400[20];
              uint64_t v1582 = (void *)((char *)v1398 + v1581);
              uint64_t v1583 = (void *)((char *)v1399 + v1581);
              uint64_t v1584 = v1583[1];
              *uint64_t v1582 = *v1583;
              v1582[1] = v1584;
              uint64_t v1585 = v1400[21];
              uint64_t v1586 = (void *)((char *)v1398 + v1585);
              uint64_t v1587 = (void *)((char *)v1399 + v1585);
              v2592 = (void *)v1587[1];
              *uint64_t v1586 = *v1587;
              v1586[1] = v2592;
              uint64_t v1588 = v1400[22];
              uint64_t v1589 = (void *)((char *)v1398 + v1588);
              uint64_t v1590 = (void *)((char *)v1399 + v1588);
              uint64_t v2635 = (void *)v1590[1];
              *uint64_t v1589 = *v1590;
              v1589[1] = v2635;
              uint64_t v1591 = v1400[23];
              uint64_t v1592 = (void *)((char *)v1398 + v1591);
              uint64_t v1593 = (void *)((char *)v1399 + v1591);
              uint64_t v2618 = (void *)v1593[1];
              *uint64_t v1592 = *v1593;
              v1592[1] = v2618;
              uint64_t v1594 = v1400[24];
              uint64_t v1595 = (void *)((char *)v1398 + v1594);
              uint64_t v1596 = (void *)((char *)v1399 + v1594);
              __dsti = (void *)v1596[1];
              void *v1595 = *v1596;
              v1595[1] = __dsti;
              uint64_t v1597 = v1400[25];
              uint64_t v1598 = (void *)((char *)v1398 + v1597);
              uint64_t v1599 = (void *)((char *)v1399 + v1597);
              uint64_t v2580 = v1599[1];
              void *v1598 = *v1599;
              v1598[1] = v2580;
              uint64_t v1600 = v1400[26];
              uint64_t v1601 = (void *)((char *)v1398 + v1600);
              uint64_t v1602 = (void *)((char *)v1399 + v1600);
              uint64_t v2575 = v1602[1];
              *uint64_t v1601 = *v1602;
              v1601[1] = v2575;
              uint64_t v1603 = v1400[27];
              uint64_t v1604 = (void *)((char *)v1398 + v1603);
              uint64_t v1605 = (void *)((char *)v1399 + v1603);
              uint64_t v2571 = v1605[1];
              *uint64_t v1604 = *v1605;
              v1604[1] = v2571;
              uint64_t v1606 = v1400[28];
              uint64_t v1607 = (void *)((char *)v1398 + v1606);
              uint64_t v1608 = (void *)((char *)v1399 + v1606);
              uint64_t v2567 = v1608[1];
              *uint64_t v1607 = *v1608;
              v1607[1] = v2567;
              uint64_t v1609 = v1400[29];
              uint64_t v1610 = (void *)((char *)v1398 + v1609);
              uint64_t v1611 = (void *)((char *)v1399 + v1609);
              uint64_t v2561 = v1611[1];
              void *v1610 = *v1611;
              v1610[1] = v2561;
              uint64_t v1612 = v1400[30];
              uint64_t v1613 = (void *)((char *)v1398 + v1612);
              uint64_t v1614 = (void *)((char *)v1399 + v1612);
              uint64_t v2558 = v1614[1];
              void *v1613 = *v1614;
              v1613[1] = v2558;
              uint64_t v1615 = v1400[31];
              uint64_t v1616 = (void *)((char *)v1398 + v1615);
              uint64_t v1617 = (void *)((char *)v1399 + v1615);
              uint64_t v2555 = v1617[1];
              void *v1616 = *v1617;
              v1616[1] = v2555;
              uint64_t v1618 = v1400[32];
              uint64_t v1619 = (void *)((char *)v1398 + v1618);
              uint64_t v1620 = (void *)((char *)v1399 + v1618);
              uint64_t v2552 = v1620[1];
              *uint64_t v1619 = *v1620;
              v1619[1] = v2552;
              *(void *)((char *)v1398 + v1400[33]) = *(void *)((char *)v1399 + v1400[33]);
              *(void *)((char *)v1398 + v1400[34]) = *(void *)((char *)v1399 + v1400[34]);
              uint64_t v1621 = v1400[35];
              uint64_t v1622 = (void *)((char *)v1398 + v1621);
              uint64_t v1623 = (void *)((char *)v1399 + v1621);
              uint64_t v1624 = v1623[1];
              *uint64_t v1622 = *v1623;
              v1622[1] = v1624;
              uint64_t v1625 = v1400[36];
              uint64_t v1626 = (void *)((char *)v1398 + v1625);
              uint64_t v1627 = (void *)((char *)v1399 + v1625);
              uint64_t v1628 = v1627[1];
              *uint64_t v1626 = *v1627;
              v1626[1] = v1628;
              uint64_t v1629 = v1400[37];
              uint64_t v1630 = (void *)((char *)v1398 + v1629);
              uint64_t v1631 = (void *)((char *)v1399 + v1629);
              uint64_t v1632 = v1631[1];
              void *v1630 = *v1631;
              v1630[1] = v1632;
              uint64_t v1633 = v1400[38];
              uint64_t v2564 = (char *)v1398 + v1633;
              uint64_t v1634 = (char *)v1399 + v1633;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1634, 1, v2684))
              {
                uint64_t v1635 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2564, v1634, *(void *)(*(void *)(v1635 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2684 - 8) + 16))(v2564, v1634, v2684);
                __swift_storeEnumTagSinglePayload((uint64_t)v2564, 0, 1, v2684);
              }
              uint64_t v771 = v2649;
              uint64_t v1737 = v1400[39];
              uint64_t v1738 = (void *)((char *)v1398 + v1737);
              v1739 = (void *)((char *)v1399 + v1737);
              uint64_t v1740 = v1739[1];
              void *v1738 = *v1739;
              v1738[1] = v1740;
              uint64_t v1741 = v1400[40];
              uint64_t v1742 = (void *)((char *)v1398 + v1741);
              uint64_t v1743 = (void *)((char *)v1399 + v1741);
              uint64_t v1744 = v1743[1];
              void *v1742 = *v1743;
              v1742[1] = v1744;
              uint64_t v1745 = v1400[41];
              uint64_t v1746 = (char *)v1398 + v1745;
              uint64_t v1747 = (char *)v1399 + v1745;
              v1746[8] = v1747[8];
              *(void *)uint64_t v1746 = *(void *)v1747;
              uint64_t v1748 = v1400[42];
              uint64_t v1749 = (void *)((char *)v1398 + v1748);
              uint64_t v1750 = (void *)((char *)v1399 + v1748);
              uint64_t v1751 = v1750[1];
              *uint64_t v1749 = *v1750;
              v1749[1] = v1751;
              uint64_t v1752 = v1400[43];
              uint64_t v1753 = (char *)v1398 + v1752;
              uint64_t v1754 = (char *)v1399 + v1752;
              *(_OWORD *)uint64_t v1753 = *(_OWORD *)v1754;
              *(void *)(v1753 + 13) = *(void *)(v1754 + 13);
              uint64_t v1755 = v1400[44];
              uint64_t v1756 = (void *)((char *)v1398 + v1755);
              uint64_t v1757 = (void *)((char *)v1399 + v1755);
              uint64_t v1758 = v1757[1];
              *uint64_t v1756 = *v1757;
              v1756[1] = v1758;
              uint64_t v1759 = v1400[45];
              uint64_t v1760 = (void *)((char *)v1398 + v1759);
              uint64_t v1761 = (void *)((char *)v1399 + v1759);
              uint64_t v1762 = v1761[1];
              void *v1760 = *v1761;
              v1760[1] = v1762;
              uint64_t v1763 = v1400[46];
              uint64_t v1764 = (void *)((char *)v1398 + v1763);
              uint64_t v1765 = (void *)((char *)v1399 + v1763);
              uint64_t v1766 = v1765[1];
              void *v1764 = *v1765;
              v1764[1] = v1766;
              uint64_t v1767 = v1400[47];
              uint64_t v1768 = (void *)((char *)v1398 + v1767);
              uint64_t v1769 = (void *)((char *)v1399 + v1767);
              uint64_t v1770 = v1769[1];
              void *v1768 = *v1769;
              v1768[1] = v1770;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1398, 0, 1, (uint64_t)v1400);
              char v21 = v2717;
              uint64_t v726 = v2667;
            }
            uint64_t v1771 = v771[12];
            uint64_t v1772 = (void *)((char *)v726 + v1771);
            uint64_t v1773 = (void *)((char *)v2730 + v1771);
            uint64_t v1774 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1773, 1, (uint64_t)v1774))
            {
              uint64_t v1775 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1772, v1773, *(void *)(*(void *)(v1775 - 8) + 64));
            }
            else
            {
              uint64_t v1776 = v1773[1];
              *uint64_t v1772 = *v1773;
              v1772[1] = v1776;
              uint64_t v1777 = v1773[3];
              v1772[2] = v1773[2];
              v1772[3] = v1777;
              uint64_t v1778 = v1773[5];
              v1772[4] = v1773[4];
              v1772[5] = v1778;
              uint64_t v1779 = v1773[7];
              v1772[6] = v1773[6];
              v1772[7] = v1779;
              uint64_t v1780 = v1773[9];
              v1772[8] = v1773[8];
              v1772[9] = v1780;
              uint64_t v1781 = v1773[11];
              v1772[10] = v1773[10];
              v1772[11] = v1781;
              *((unsigned char *)v1772 + 96) = *((unsigned char *)v1773 + 96);
              uint64_t v1782 = v1773[14];
              v1772[13] = v1773[13];
              v1772[14] = v1782;
              uint64_t v1783 = v1773[16];
              v1772[15] = v1773[15];
              v1772[16] = v1783;
              uint64_t v1784 = v1774[14];
              uint64_t v2650 = (char *)v1772 + v1784;
              uint64_t v1785 = (char *)v1773 + v1784;
              uint64_t v1786 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1785, 1, v1786))
              {
                uint64_t v1787 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2650, v1785, *(void *)(*(void *)(v1787 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1786 - 8) + 16))(v2650, v1785, v1786);
                __swift_storeEnumTagSinglePayload((uint64_t)v2650, 0, 1, v1786);
              }
              uint64_t v1796 = v1774[15];
              uint64_t v1797 = (char *)v1772 + v1796;
              uint64_t v1798 = (char *)v1773 + v1796;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1773 + v1796, 1, v1786))
              {
                uint64_t v1799 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1797, v1798, *(void *)(*(void *)(v1799 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1786 - 8) + 16))(v1797, v1798, v1786);
                __swift_storeEnumTagSinglePayload((uint64_t)v1797, 0, 1, v1786);
              }
              uint64_t v1915 = v1774[16];
              uint64_t v1916 = (void *)((char *)v1772 + v1915);
              uint64_t v1917 = (void *)((char *)v1773 + v1915);
              uint64_t v1918 = v1917[1];
              *uint64_t v1916 = *v1917;
              v1916[1] = v1918;
              uint64_t v1919 = v1774[17];
              uint64_t v1920 = (void *)((char *)v1772 + v1919);
              uint64_t v1921 = (void *)((char *)v1773 + v1919);
              uint64_t v2653 = v1921[1];
              *uint64_t v1920 = *v1921;
              v1920[1] = v2653;
              uint64_t v1922 = v1774[18];
              uint64_t v1923 = (void *)((char *)v1772 + v1922);
              uint64_t v1924 = (void *)((char *)v1773 + v1922);
              uint64_t v2638 = (void *)v1924[1];
              void *v1923 = *v1924;
              v1923[1] = v2638;
              uint64_t v1925 = v1774[19];
              uint64_t v1926 = (void *)((char *)v1772 + v1925);
              uint64_t v1927 = (void *)((char *)v1773 + v1925);
              uint64_t v1928 = v1927[1];
              void *v1926 = *v1927;
              v1926[1] = v1928;
              uint64_t v1929 = v1774[20];
              uint64_t v1930 = (void *)((char *)v1772 + v1929);
              uint64_t v1931 = (void *)((char *)v1773 + v1929);
              uint64_t v2594 = (void *)v1931[1];
              void *v1930 = *v1931;
              v1930[1] = v2594;
              *(void *)((char *)v1772 + v1774[21]) = *(void *)((char *)v1773 + v1774[21]);
              *(void *)((char *)v1772 + v1774[22]) = *(void *)((char *)v1773 + v1774[22]);
              uint64_t v1932 = v1774[23];
              uint64_t v1933 = (char *)v1772 + v1932;
              uint64_t v1934 = (char *)v1773 + v1932;
              *(void *)uint64_t v1933 = *(void *)v1934;
              v1933[8] = v1934[8];
              uint64_t v1935 = v1774[24];
              uint64_t v1936 = (char *)v1772 + v1935;
              uint64_t v1937 = (char *)v1773 + v1935;
              *(void *)uint64_t v1936 = *(void *)v1937;
              v1936[8] = v1937[8];
              uint64_t v1938 = v1774[25];
              uint64_t v1939 = (void *)((char *)v1772 + v1938);
              uint64_t v1940 = (void *)((char *)v1773 + v1938);
              uint64_t v2582 = v1940[1];
              void *v1939 = *v1940;
              v1939[1] = v2582;
              uint64_t v1941 = v1774[26];
              uint64_t v1942 = (void *)((char *)v1772 + v1941);
              uint64_t v1943 = (void *)((char *)v1773 + v1941);
              uint64_t v1944 = v1943[1];
              void *v1942 = *v1943;
              v1942[1] = v1944;
              uint64_t v1945 = v1774[27];
              uint64_t v1946 = (void *)((char *)v1772 + v1945);
              uint64_t v1947 = (void *)((char *)v1773 + v1945);
              uint64_t v1948 = v1947[1];
              void *v1946 = *v1947;
              v1946[1] = v1948;
              uint64_t v1949 = v1774[28];
              uint64_t v1950 = (void *)((char *)v1772 + v1949);
              uint64_t v1951 = (void *)((char *)v1773 + v1949);
              uint64_t v1952 = v1951[1];
              void *v1950 = *v1951;
              v1950[1] = v1952;
              uint64_t v1953 = v1774[29];
              uint64_t v1954 = (char *)v1772 + v1953;
              uint64_t v1955 = (char *)v1773 + v1953;
              *(void *)uint64_t v1954 = *(void *)v1955;
              v1954[8] = v1955[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1772, 0, 1, (uint64_t)v1774);
              char v21 = v2717;
              uint64_t v726 = v2667;
            }
            uint64_t v1956 = v771[13];
            uint64_t v1957 = (void *)((char *)v726 + v1956);
            uint64_t v1958 = (void *)((char *)v2730 + v1956);
            uint64_t v1959 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1958, 1, (uint64_t)v1959))
            {
              uint64_t v1960 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1957, v1958, *(void *)(*(void *)(v1960 - 8) + 64));
            }
            else
            {
              uint64_t v1961 = v1958[1];
              void *v1957 = *v1958;
              v1957[1] = v1961;
              uint64_t v2654 = v1958[3];
              v1957[2] = v1958[2];
              v1957[3] = v2654;
              uint64_t v1962 = v1958[5];
              v1957[4] = v1958[4];
              v1957[5] = v1962;
              uint64_t v1963 = v1958[7];
              v1957[6] = v1958[6];
              v1957[7] = v1963;
              uint64_t v1964 = v1958[9];
              v1957[8] = v1958[8];
              v1957[9] = v1964;
              uint64_t v1965 = v1958[11];
              v1957[10] = v1958[10];
              v1957[11] = v1965;
              *((unsigned char *)v1957 + 96) = *((unsigned char *)v1958 + 96);
              uint64_t v1966 = v1958[14];
              v1957[13] = v1958[13];
              v1957[14] = v1966;
              uint64_t v1967 = v1958[16];
              v1957[15] = v1958[15];
              v1957[16] = v1967;
              uint64_t v1968 = v1959[14];
              v2731 = (char *)v1957 + v1968;
              uint64_t v1969 = (char *)v1958 + v1968;
              uint64_t v1970 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1969, 1, v1970))
              {
                uint64_t v1971 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2731, v1969, *(void *)(*(void *)(v1971 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1970 - 8) + 16))(v2731, v1969, v1970);
                __swift_storeEnumTagSinglePayload((uint64_t)v2731, 0, 1, v1970);
              }
              uint64_t v2345 = v1959[15];
              uint64_t v2346 = (void *)((char *)v1957 + v2345);
              uint64_t v2347 = (void *)((char *)v1958 + v2345);
              uint64_t v2348 = v2347[1];
              *uint64_t v2346 = *v2347;
              v2346[1] = v2348;
              uint64_t v2349 = v1959[16];
              uint64_t v2350 = (void *)((char *)v1957 + v2349);
              uint64_t v2351 = (void *)((char *)v1958 + v2349);
              uint64_t v2352 = v2351[1];
              *uint64_t v2350 = *v2351;
              v2350[1] = v2352;
              uint64_t v2353 = v1959[17];
              uint64_t v2354 = (void *)((char *)v1957 + v2353);
              uint64_t v2355 = (void *)((char *)v1958 + v2353);
              uint64_t v2741 = v2355[1];
              *uint64_t v2354 = *v2355;
              v2354[1] = v2741;
              uint64_t v2356 = v1959[18];
              uint64_t v2357 = (void *)((char *)v1957 + v2356);
              uint64_t v2358 = (void *)((char *)v1958 + v2356);
              uint64_t v2658 = v2358[1];
              void *v2357 = *v2358;
              v2357[1] = v2658;
              uint64_t v2359 = v1959[19];
              uint64_t v2360 = (void *)((char *)v1957 + v2359);
              uint64_t v2361 = (void *)((char *)v1958 + v2359);
              uint64_t v2362 = v2361[1];
              void *v2360 = *v2361;
              v2360[1] = v2362;
              *(void *)((char *)v1957 + v1959[20]) = *(void *)((char *)v1958 + v1959[20]);
              uint64_t v2363 = v1959[21];
              uint64_t v2364 = (void *)((char *)v1957 + v2363);
              uint64_t v2365 = (void *)((char *)v1958 + v2363);
              uint64_t v2366 = v2365[1];
              void *v2364 = *v2365;
              v2364[1] = v2366;
              uint64_t v2367 = v1959[22];
              uint64_t v2368 = (void *)((char *)v1957 + v2367);
              uint64_t v2369 = (void *)((char *)v1958 + v2367);
              uint64_t v2370 = v2369[1];
              void *v2368 = *v2369;
              v2368[1] = v2370;
              uint64_t v2371 = v1959[23];
              uint64_t v2372 = (void *)((char *)v1957 + v2371);
              uint64_t v2373 = (void *)((char *)v1958 + v2371);
              uint64_t v2374 = v2373[1];
              void *v2372 = *v2373;
              v2372[1] = v2374;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1957, 0, 1, (uint64_t)v1959);
              char v21 = v2717;
              uint64_t v726 = v2667;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v726, 0, 1, (uint64_t)v771);
            uint64_t v721 = v2725;
          }
          uint64_t v2375 = v2700[20];
          v2376 = (void *)((char *)v721 + v2375);
          uint64_t v2377 = (void *)((char *)v21 + v2375);
          uint64_t v2378 = type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2377, 1, v2378))
          {
            uint64_t v2379 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v2376, v2377, *(void *)(*(void *)(v2379 - 8) + 64));
            uint64_t v145 = v2721;
          }
          else
          {
            uint64_t v2380 = v2377[1];
            void *v2376 = *v2377;
            v2376[1] = v2380;
            uint64_t v2381 = v2377[3];
            v2376[2] = v2377[2];
            v2376[3] = v2381;
            uint64_t v2382 = v2377[5];
            v2376[4] = v2377[4];
            v2376[5] = v2382;
            uint64_t v2383 = v2377[7];
            v2376[6] = v2377[6];
            v2376[7] = v2383;
            uint64_t v2384 = v2377[9];
            v2376[8] = v2377[8];
            v2376[9] = v2384;
            uint64_t v2385 = v2377[11];
            v2376[10] = v2377[10];
            v2376[11] = v2385;
            v2742 = (int *)v2378;
            uint64_t v2386 = *(int *)(v2378 + 40);
            uint64_t v2387 = (char *)v2376 + v2386;
            uint64_t v2388 = (uint64_t)v2377 + v2386;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v2389 = (const void *)v2388;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2388, 1, v2684);
            uint64_t v145 = v2721;
            if (EnumTagSinglePayload)
            {
              uint64_t v2391 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2387, v2389, *(void *)(*(void *)(v2391 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, const void *, uint64_t))(*(void *)(v2684 - 8) + 16))(v2387, v2389, v2684);
              __swift_storeEnumTagSinglePayload((uint64_t)v2387, 0, 1, v2684);
            }
            uint64_t v2392 = v2742[11];
            uint64_t v2393 = (char *)v2376 + v2392;
            uint64_t v2394 = (char *)v2377 + v2392;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2377 + v2392, 1, v2684))
            {
              uint64_t v2395 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2393, v2394, *(void *)(*(void *)(v2395 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2684 - 8) + 16))(v2393, v2394, v2684);
              __swift_storeEnumTagSinglePayload((uint64_t)v2393, 0, 1, v2684);
            }
            uint64_t v2396 = v2742[12];
            uint64_t v2397 = (void *)((char *)v2376 + v2396);
            uint64_t v2398 = (void *)((char *)v2377 + v2396);
            uint64_t v2399 = v2398[1];
            *uint64_t v2397 = *v2398;
            v2397[1] = v2399;
            uint64_t v2400 = v2742[13];
            uint64_t v2401 = (void *)((char *)v2376 + v2400);
            uint64_t v2402 = (void *)((char *)v2377 + v2400);
            uint64_t v2403 = v2402[1];
            *uint64_t v2401 = *v2402;
            v2401[1] = v2403;
            uint64_t v2404 = v2742[14];
            uint64_t v2405 = (void *)((char *)v2376 + v2404);
            uint64_t v2406 = (void *)((char *)v2377 + v2404);
            uint64_t v2407 = v2406[1];
            *uint64_t v2405 = *v2406;
            v2405[1] = v2407;
            uint64_t v2408 = v2742[15];
            uint64_t v2409 = (char *)v2376 + v2408;
            uint64_t v2410 = (char *)v2377 + v2408;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2410, 1, v2684))
            {
              uint64_t v2411 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2409, v2410, *(void *)(*(void *)(v2411 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2684 - 8) + 16))(v2409, v2410, v2684);
              __swift_storeEnumTagSinglePayload((uint64_t)v2409, 0, 1, v2684);
            }
            uint64_t v2412 = v2742[16];
            uint64_t v2413 = (void *)((char *)v2376 + v2412);
            uint64_t v2414 = (void *)((char *)v2377 + v2412);
            uint64_t v2415 = v2414[1];
            *uint64_t v2413 = *v2414;
            v2413[1] = v2415;
            uint64_t v2416 = v2742[17];
            uint64_t v2417 = (void *)((char *)v2376 + v2416);
            uint64_t v2418 = (void *)((char *)v2377 + v2416);
            uint64_t v2419 = v2418[1];
            void *v2417 = *v2418;
            v2417[1] = v2419;
            uint64_t v2420 = v2742[18];
            uint64_t v2421 = (void *)((char *)v2376 + v2420);
            uint64_t v2422 = (void *)((char *)v2377 + v2420);
            uint64_t v2669 = v2422[1];
            *uint64_t v2421 = *v2422;
            v2421[1] = v2669;
            uint64_t v2423 = v2742[19];
            uint64_t v2424 = (void *)((char *)v2376 + v2423);
            uint64_t v2425 = (void *)((char *)v2377 + v2423);
            uint64_t v2426 = v2425[1];
            void *v2424 = *v2425;
            v2424[1] = v2426;
            uint64_t v2427 = v2742[20];
            uint64_t v2428 = (void *)((char *)v2376 + v2427);
            uint64_t v2429 = (void *)((char *)v2377 + v2427);
            uint64_t v2430 = v2429[1];
            void *v2428 = *v2429;
            v2428[1] = v2430;
            uint64_t v2431 = v2742[21];
            uint64_t v2432 = (void *)((char *)v2376 + v2431);
            uint64_t v2433 = (void *)((char *)v2377 + v2431);
            uint64_t v2434 = v2433[1];
            void *v2432 = *v2433;
            v2432[1] = v2434;
            uint64_t v2435 = v2742[22];
            uint64_t v2436 = (void *)((char *)v2376 + v2435);
            uint64_t v2437 = (void *)((char *)v2377 + v2435);
            uint64_t v2438 = v2437[1];
            *uint64_t v2436 = *v2437;
            v2436[1] = v2438;
            uint64_t v2439 = v2742[23];
            uint64_t v2440 = (void *)((char *)v2376 + v2439);
            uint64_t v2441 = (void *)((char *)v2377 + v2439);
            uint64_t v2442 = v2441[1];
            void *v2440 = *v2441;
            v2440[1] = v2442;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2376, 0, 1, (uint64_t)v2742);
            char v21 = v2717;
          }
          uint64_t v2443 = v2700[21];
          uint64_t v2444 = (void *)((char *)v2725 + v2443);
          uint64_t v2445 = (void *)((char *)v21 + v2443);
          uint64_t v2446 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2445, 1, (uint64_t)v2446))
          {
            uint64_t v2447 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v2444, v2445, *(void *)(*(void *)(v2447 - 8) + 64));
          }
          else
          {
            uint64_t v2448 = v2445[1];
            void *v2444 = *v2445;
            v2444[1] = v2448;
            uint64_t v2449 = v2445[3];
            v2444[2] = v2445[2];
            v2444[3] = v2449;
            uint64_t v2450 = v2445[5];
            v2444[4] = v2445[4];
            v2444[5] = v2450;
            uint64_t v2451 = v2445[7];
            v2444[6] = v2445[6];
            v2444[7] = v2451;
            uint64_t v2670 = v2445[9];
            v2444[8] = v2445[8];
            v2444[9] = v2670;
            uint64_t v2724 = v2445[11];
            v2444[10] = v2445[10];
            v2444[11] = v2724;
            uint64_t v2452 = v2446[11];
            v2743 = (char *)v2444 + v2452;
            uint64_t v2453 = (char *)v2445 + v2452;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2453, 1, v2684))
            {
              uint64_t v2454 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2743, v2453, *(void *)(*(void *)(v2454 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2684 - 8) + 16))(v2743, v2453, v2684);
              __swift_storeEnumTagSinglePayload((uint64_t)v2743, 0, 1, v2684);
            }
            uint64_t v2455 = v2446[12];
            uint64_t v2456 = (void *)((char *)v2444 + v2455);
            uint64_t v2457 = (void *)((char *)v2445 + v2455);
            uint64_t v2458 = v2457[1];
            *uint64_t v2456 = *v2457;
            v2456[1] = v2458;
            *(void *)((char *)v2444 + v2446[13]) = *(void *)((char *)v2445 + v2446[13]);
            uint64_t v2459 = v2446[14];
            uint64_t v2460 = (char *)v2444 + v2459;
            uint64_t v2461 = (char *)v2445 + v2459;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2461, 1, v2684))
            {
              uint64_t v2462 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2460, v2461, *(void *)(*(void *)(v2462 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2684 - 8) + 16))(v2460, v2461, v2684);
              __swift_storeEnumTagSinglePayload((uint64_t)v2460, 0, 1, v2684);
            }
            *(void *)((char *)v2444 + v2446[15]) = *(void *)((char *)v2445 + v2446[15]);
            *(void *)((char *)v2444 + v2446[16]) = *(void *)((char *)v2445 + v2446[16]);
            uint64_t v2463 = v2446[17];
            uint64_t v2464 = (void *)((char *)v2444 + v2463);
            uint64_t v2465 = (void *)((char *)v2445 + v2463);
            uint64_t v2466 = v2465[1];
            void *v2464 = *v2465;
            v2464[1] = v2466;
            *(void *)((char *)v2444 + v2446[18]) = *(void *)((char *)v2445 + v2446[18]);
            *(void *)((char *)v2444 + v2446[19]) = *(void *)((char *)v2445 + v2446[19]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2444, 0, 1, (uint64_t)v2446);
            char v21 = v2717;
          }
          uint64_t v2467 = v2700[22];
          uint64_t v2468 = (void *)((char *)v2725 + v2467);
          uint64_t v2469 = (void *)((char *)v21 + v2467);
          uint64_t v2470 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2469, 1, (uint64_t)v2470))
          {
            uint64_t v2471 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v2468, v2469, *(void *)(*(void *)(v2471 - 8) + 64));
          }
          else
          {
            uint64_t v2472 = v2469[1];
            void *v2468 = *v2469;
            v2468[1] = v2472;
            uint64_t v2473 = v2469[3];
            v2468[2] = v2469[2];
            v2468[3] = v2473;
            uint64_t v2474 = v2469[5];
            v2468[4] = v2469[4];
            v2468[5] = v2474;
            uint64_t v2475 = v2469[7];
            v2468[6] = v2469[6];
            v2468[7] = v2475;
            uint64_t v2476 = v2470[8];
            v2744 = (char *)v2468 + v2476;
            uint64_t v2477 = (char *)v2469 + v2476;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2477, 1, v2680))
            {
              uint64_t v2478 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2744, v2477, *(void *)(*(void *)(v2478 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2680 - 8) + 16))(v2744, v2477, v2680);
              __swift_storeEnumTagSinglePayload((uint64_t)v2744, 0, 1, v2680);
            }
            uint64_t v2479 = v2470[9];
            uint64_t v2480 = (void *)((char *)v2468 + v2479);
            uint64_t v2481 = (void *)((char *)v2469 + v2479);
            uint64_t v2482 = v2481[1];
            void *v2480 = *v2481;
            v2480[1] = v2482;
            uint64_t v2483 = v2470[10];
            uint64_t v2484 = (void *)((char *)v2468 + v2483);
            uint64_t v2485 = (void *)((char *)v2469 + v2483);
            uint64_t v2486 = v2485[1];
            void *v2484 = *v2485;
            v2484[1] = v2486;
            uint64_t v2487 = v2470[11];
            uint64_t v2488 = (void *)((char *)v2468 + v2487);
            uint64_t v2489 = (void *)((char *)v2469 + v2487);
            uint64_t v2490 = v2489[1];
            void *v2488 = *v2489;
            v2488[1] = v2490;
            uint64_t v2491 = v2470[12];
            uint64_t v2492 = (char *)v2468 + v2491;
            uint64_t v2493 = (char *)v2469 + v2491;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2493, 1, v2684))
            {
              uint64_t v2494 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2492, v2493, *(void *)(*(void *)(v2494 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2684 - 8) + 16))(v2492, v2493, v2684);
              __swift_storeEnumTagSinglePayload((uint64_t)v2492, 0, 1, v2684);
            }
            uint64_t v2495 = v2470[13];
            uint64_t v2496 = (char *)v2468 + v2495;
            uint64_t v2497 = (char *)v2469 + v2495;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2469 + v2495, 1, v2684))
            {
              uint64_t v2498 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2496, v2497, *(void *)(*(void *)(v2498 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2684 - 8) + 16))(v2496, v2497, v2684);
              __swift_storeEnumTagSinglePayload((uint64_t)v2496, 0, 1, v2684);
            }
            uint64_t v2499 = v2470[14];
            uint64_t v2500 = (char *)v2468 + v2499;
            uint64_t v2501 = (char *)v2469 + v2499;
            *(void *)uint64_t v2500 = *(void *)v2501;
            v2500[8] = v2501[8];
            uint64_t v2502 = v2470[15];
            uint64_t v2503 = (void *)((char *)v2468 + v2502);
            id v2504 = (void *)((char *)v2469 + v2502);
            uint64_t v2505 = v2504[1];
            void *v2503 = *v2504;
            v2503[1] = v2505;
            uint64_t v2506 = v2470[16];
            id v2507 = (void *)((char *)v2468 + v2506);
            uint64_t v2508 = (void *)((char *)v2469 + v2506);
            uint64_t v2509 = v2508[1];
            void *v2507 = *v2508;
            v2507[1] = v2509;
            uint64_t v2510 = v2470[17];
            uint64_t v2511 = (void *)((char *)v2468 + v2510);
            uint64_t v2512 = (void *)((char *)v2469 + v2510);
            uint64_t v2513 = v2512[1];
            void *v2511 = *v2512;
            v2511[1] = v2513;
            uint64_t v2514 = v2470[18];
            uint64_t v2515 = (void *)((char *)v2468 + v2514);
            uint64_t v2516 = (void *)((char *)v2469 + v2514);
            uint64_t v2517 = v2516[1];
            *uint64_t v2515 = *v2516;
            v2515[1] = v2517;
            uint64_t v2518 = v2470[19];
            uint64_t v2519 = (void *)((char *)v2468 + v2518);
            uint64_t v2520 = (void *)((char *)v2469 + v2518);
            uint64_t v2521 = v2520[1];
            void *v2519 = *v2520;
            v2519[1] = v2521;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2468, 0, 1, (uint64_t)v2470);
            char v21 = v2717;
          }
          uint64_t v2522 = v2700[23];
          uint64_t v24 = (uint64_t)v2725;
          uint64_t v2523 = (void *)((char *)v2725 + v2522);
          uint64_t v2524 = (void *)((char *)v21 + v2522);
          uint64_t v2525 = *(void *)((char *)v21 + v2522 + 8);
          if (v2525)
          {
            *uint64_t v2523 = *v2524;
            v2523[1] = v2525;
            uint64_t v2526 = v2524[3];
            v2523[2] = v2524[2];
            v2523[3] = v2526;
            uint64_t v2527 = v2524[5];
            v2523[4] = v2524[4];
            v2523[5] = v2527;
            uint64_t v2528 = v2524[7];
            v2523[6] = v2524[6];
            v2523[7] = v2528;
            uint64_t v2529 = v2524[9];
            v2523[8] = v2524[8];
            v2523[9] = v2529;
            uint64_t v2530 = v2524[11];
            v2523[10] = v2524[10];
            v2523[11] = v2530;
            uint64_t v2715 = v2524[13];
            v2523[12] = v2524[12];
            v2523[13] = v2715;
            uint64_t v2745 = v2524[15];
            v2523[14] = v2524[14];
            v2523[15] = v2745;
            uint64_t v2531 = v2524[17];
            v2523[16] = v2524[16];
            v2523[17] = v2531;
            swift_bridgeObjectRetain();
            uint64_t v24 = (uint64_t)v2725;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v21 = v2717;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            memcpy(v2523, v2524, 0x90uLL);
          }
          goto LABEL_555;
        case 2u:
          uint64_t v57 = v19[1];
          *uint64_t v16 = *v19;
          v16[1] = v57;
          uint64_t v58 = v19[3];
          v16[2] = v19[2];
          v16[3] = v58;
          uint64_t v59 = v19[5];
          v16[4] = v19[4];
          uint64_t v16[5] = v59;
          uint64_t v60 = (int *)type metadata accessor for CalendarEvent(0);
          uint64_t v61 = v60[7];
          uint64_t v62 = (char *)v16 + v61;
          uint64_t v63 = (char *)v19 + v61;
          uint64_t v64 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
          {
            uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
            __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
          }
          uint64_t v377 = v60[8];
          uint64_t v378 = (char *)v16 + v377;
          uint64_t v379 = (char *)v19 + v377;
          if (__swift_getEnumTagSinglePayload((uint64_t)v19 + v377, 1, v64))
          {
            uint64_t v380 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v378, v379, *(void *)(*(void *)(v380 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v378, v379, v64);
            __swift_storeEnumTagSinglePayload((uint64_t)v378, 0, 1, v64);
          }
          uint64_t v9 = v2726;
          uint64_t v560 = v60[9];
          long long v561 = (void *)((char *)v16 + v560);
          uint64_t v562 = (void *)((char *)v19 + v560);
          uint64_t v563 = v562[1];
          void *v561 = *v562;
          v561[1] = v563;
          *(void *)((char *)v16 + v60[10]) = *(void *)((char *)v19 + v60[10]);
          *(void *)((char *)v16 + v60[11]) = *(void *)((char *)v19 + v60[11]);
          uint64_t v564 = v60[12];
          uint64_t v565 = (void *)((char *)v16 + v564);
          uint64_t v566 = (void *)((char *)v19 + v564);
          uint64_t v567 = v566[1];
          *uint64_t v565 = *v566;
          v565[1] = v567;
          uint64_t v568 = v60[13];
          uint64_t v569 = (void *)((char *)v16 + v568);
          long long v570 = (char *)v19 + v568;
          uint64_t v571 = *(void *)((char *)v19 + v568);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v571)
          {
            uint64_t v572 = *((void *)v570 + 1);
            uint64_t v573 = *((void *)v570 + 2);
            void *v569 = v571;
            v569[1] = v572;
            uint64_t v574 = *((void *)v570 + 3);
            uint64_t v575 = *((void *)v570 + 4);
            v569[2] = v573;
            v569[3] = v574;
            v569[4] = v575;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v730 = *((_OWORD *)v570 + 1);
            *(_OWORD *)uint64_t v569 = *(_OWORD *)v570;
            *((_OWORD *)v569 + 1) = v730;
            v569[4] = *((void *)v570 + 4);
          }
          uint64_t v145 = v20;
          uint64_t v24 = (uint64_t)v2725;
          char v21 = v19;
          uint64_t v23 = a3;
          goto LABEL_556;
        case 3u:
          uint64_t v66 = v19[1];
          *uint64_t v16 = *v19;
          v16[1] = v66;
          uint64_t v67 = v19[3];
          v16[2] = v19[2];
          v16[3] = v67;
          v2718 = v19;
          uint64_t v68 = v19[5];
          v16[4] = v19[4];
          uint64_t v16[5] = v68;
          uint64_t v69 = v19[7];
          v16[6] = v19[6];
          v16[7] = v69;
          uint64_t v70 = v19[9];
          _OWORD v16[8] = v19[8];
          v16[9] = v70;
          v16[10] = v19[10];
          uint64_t v71 = type metadata accessor for Photo(0);
          uint64_t v72 = *(int *)(v71 + 44);
          uint64_t v2685 = (char *)v16 + v72;
          uint64_t v2701 = (int *)v71;
          char v73 = (char *)v19 + v72;
          uint64_t v74 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v2672 = v74;
          if (__swift_getEnumTagSinglePayload((uint64_t)v73, 1, v74))
          {
            uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2685, v73, *(void *)(*(void *)(v75 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v2685, v73, v74);
            __swift_storeEnumTagSinglePayload((uint64_t)v2685, 0, 1, v74);
          }
          uint64_t v381 = v16;
          *(void *)((char *)v16 + v2701[12]) = *(void *)((char *)v2718 + v2701[12]);
          *(void *)((char *)v16 + v2701[13]) = *(void *)((char *)v2718 + v2701[13]);
          *(void *)((char *)v16 + v2701[14]) = *(void *)((char *)v2718 + v2701[14]);
          *(void *)((char *)v16 + v2701[15]) = *(void *)((char *)v2718 + v2701[15]);
          uint64_t v382 = v2701[16];
          long long v383 = (void *)((char *)v16 + v382);
          long long v384 = (void *)((char *)v2718 + v382);
          uint64_t v385 = v384[1];
          void *v383 = *v384;
          v383[1] = v385;
          uint64_t v386 = v2701[17];
          long long v387 = (void *)((char *)v16 + v386);
          long long v388 = (void *)((char *)v2718 + v386);
          uint64_t v389 = type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          uint64_t v390 = v388;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v388, 1, v389))
          {
            uint64_t v391 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v387, v388, *(void *)(*(void *)(v391 - 8) + 64));
            uint64_t v9 = v2726;
          }
          else
          {
            uint64_t v576 = v388[1];
            void *v387 = *v388;
            v387[1] = v576;
            uint64_t v2693 = (int *)v389;
            uint64_t v577 = *(int *)(v389 + 20);
            uint64_t v578 = (void *)((char *)v387 + v577);
            uint64_t v579 = (void *)((char *)v388 + v577);
            uint64_t v580 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            uint64_t v9 = v2726;
            uint64_t v2647 = v390;
            uint64_t v2665 = v387;
            if (__swift_getEnumTagSinglePayload((uint64_t)v579, 1, v580))
            {
              uint64_t v581 = (uint64_t)v387;
              uint64_t v582 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v578, v579, *(void *)(*(void *)(v582 - 8) + 64));
            }
            else
            {
              uint64_t v802 = v579[1];
              *uint64_t v578 = *v579;
              v578[1] = v802;
              uint64_t v803 = v579[3];
              v578[2] = v579[2];
              v578[3] = v803;
              uint64_t v804 = v579[5];
              v578[4] = v579[4];
              v578[5] = v804;
              uint64_t v805 = v579[7];
              v578[6] = v579[6];
              v578[7] = v805;
              uint64_t v806 = v579[9];
              v578[8] = v579[8];
              v578[9] = v806;
              uint64_t v807 = v579[11];
              v578[10] = v579[10];
              v578[11] = v807;
              uint64_t v808 = v579[13];
              v578[12] = v579[12];
              v578[13] = v808;
              uint64_t v809 = v579[15];
              v578[14] = v579[14];
              v578[15] = v809;
              *((unsigned char *)v578 + 128) = *((unsigned char *)v579 + 128);
              *(_WORD *)((char *)v578 + 129) = *(_WORD *)((char *)v579 + 129);
              uint64_t v810 = v579[18];
              v578[17] = v579[17];
              v578[18] = v810;
              uint64_t v811 = v579[20];
              v578[19] = v579[19];
              v578[20] = v811;
              uint64_t v812 = v579[22];
              v578[21] = v579[21];
              v578[22] = v812;
              uint64_t v2546 = v579[24];
              v578[23] = v579[23];
              v578[24] = v2546;
              uint64_t v813 = v579[26];
              v578[25] = v579[25];
              v578[26] = v813;
              uint64_t v814 = v579[28];
              v578[27] = v579[27];
              v578[28] = v814;
              uint64_t v815 = v579[30];
              v578[29] = v579[29];
              v578[30] = v815;
              uint64_t v816 = v579[32];
              v578[31] = v579[31];
              v578[32] = v816;
              uint64_t v817 = v579[34];
              v578[33] = v579[33];
              v578[34] = v817;
              uint64_t v818 = v579[36];
              v578[35] = v579[35];
              v578[36] = v818;
              uint64_t v819 = v579[38];
              v578[37] = v579[37];
              v578[38] = v819;
              uint64_t v820 = v579[40];
              v578[39] = v579[39];
              v578[40] = v820;
              uint64_t v821 = v579[42];
              v578[41] = v579[41];
              v578[42] = v821;
              uint64_t v822 = v579[44];
              v578[43] = v579[43];
              v578[44] = v822;
              uint64_t v823 = v579[46];
              v578[45] = v579[45];
              v578[46] = v823;
              uint64_t v824 = v579[47];
              *((unsigned char *)v578 + 384) = *((unsigned char *)v579 + 384);
              v578[47] = v824;
              uint64_t v825 = v579[50];
              v578[49] = v579[49];
              v578[50] = v825;
              uint64_t v826 = v579[52];
              v578[51] = v579[51];
              v578[52] = v826;
              uint64_t v827 = *(int *)(v580 + 140);
              uint64_t v2622 = (char *)v578 + v827;
              uint64_t v828 = (char *)v579 + v827;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v828, 1, v2672))
              {
                uint64_t v829 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2622, v828, *(void *)(*(void *)(v829 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v2622, v828, v2672);
                __swift_storeEnumTagSinglePayload((uint64_t)v2622, 0, 1, v2672);
              }
              uint64_t v862 = *(int *)(v580 + 144);
              uint64_t v863 = (char *)v578 + v862;
              uint64_t v864 = (char *)v579 + v862;
              if (__swift_getEnumTagSinglePayload((uint64_t)v579 + v862, 1, v2672))
              {
                uint64_t v865 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v863, v864, *(void *)(*(void *)(v865 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v863, v864, v2672);
                __swift_storeEnumTagSinglePayload((uint64_t)v863, 0, 1, v2672);
              }
              uint64_t v390 = v2647;
              __swift_storeEnumTagSinglePayload((uint64_t)v578, 0, 1, v580);
              uint64_t v581 = (uint64_t)v2665;
            }
            uint64_t v897 = v2693[6];
            long long v898 = (void *)(v581 + v897);
            long long v899 = (void *)((char *)v390 + v897);
            uint64_t v900 = type metadata accessor for TicketedTransportation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v899, 1, v900))
            {
              uint64_t v901 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v898, v899, *(void *)(*(void *)(v901 - 8) + 64));
            }
            else
            {
              uint64_t v902 = v899[1];
              *long long v898 = *v899;
              v898[1] = v902;
              uint64_t v903 = v899[3];
              v898[2] = v899[2];
              v898[3] = v903;
              uint64_t v904 = v899[5];
              v898[4] = v899[4];
              v898[5] = v904;
              uint64_t v905 = v899[7];
              v898[6] = v899[6];
              v898[7] = v905;
              uint64_t v906 = v899[9];
              v898[8] = v899[8];
              v898[9] = v906;
              uint64_t v907 = v899[11];
              v898[10] = v899[10];
              v898[11] = v907;
              uint64_t v908 = v899[13];
              v898[12] = v899[12];
              v898[13] = v908;
              uint64_t v909 = v899[15];
              v898[14] = v899[14];
              v898[15] = v909;
              *((unsigned char *)v898 + 128) = *((unsigned char *)v899 + 128);
              *(_WORD *)((char *)v898 + 129) = *(_WORD *)((char *)v899 + 129);
              uint64_t v910 = v899[18];
              v898[17] = v899[17];
              v898[18] = v910;
              uint64_t v911 = v899[20];
              v898[19] = v899[19];
              v898[20] = v911;
              uint64_t v912 = v899[22];
              v898[21] = v899[21];
              v898[22] = v912;
              uint64_t v913 = v899[24];
              v898[23] = v899[23];
              v898[24] = v913;
              __dstd = (void *)v899[26];
              v898[25] = v899[25];
              v898[26] = __dstd;
              uint64_t v914 = v899[28];
              v898[27] = v899[27];
              v898[28] = v914;
              uint64_t v915 = v899[30];
              v898[29] = v899[29];
              v898[30] = v915;
              uint64_t v916 = v899[32];
              v898[31] = v899[31];
              v898[32] = v916;
              uint64_t v917 = v899[34];
              v898[33] = v899[33];
              v898[34] = v917;
              uint64_t v919 = v899[35];
              uint64_t v918 = v899[36];
              *((unsigned char *)v898 + 296) = *((unsigned char *)v899 + 296);
              v898[35] = v919;
              v898[36] = v918;
              uint64_t v920 = *(int *)(v900 + 112);
              uint64_t v2608 = (char *)v898 + v920;
              long long v921 = (char *)v899 + v920;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v921, 1, v2672))
              {
                uint64_t v922 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2608, v921, *(void *)(*(void *)(v922 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v2608, v921, v2672);
                __swift_storeEnumTagSinglePayload((uint64_t)v2608, 0, 1, v2672);
              }
              uint64_t v954 = *(int *)(v900 + 116);
              long long v955 = (char *)v898 + v954;
              uint64_t v956 = (char *)v899 + v954;
              if (__swift_getEnumTagSinglePayload((uint64_t)v899 + v954, 1, v2672))
              {
                uint64_t v957 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v955, v956, *(void *)(*(void *)(v957 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v955, v956, v2672);
                __swift_storeEnumTagSinglePayload((uint64_t)v955, 0, 1, v2672);
              }
              uint64_t v390 = v2647;
              __swift_storeEnumTagSinglePayload((uint64_t)v898, 0, 1, v900);
              uint64_t v581 = (uint64_t)v2665;
            }
            uint64_t v989 = v2693[7];
            uint64_t v990 = (void *)(v581 + v989);
            uint64_t v991 = (void *)((char *)v390 + v989);
            uint64_t v992 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v991, 1, (uint64_t)v992))
            {
              uint64_t v993 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v990, v991, *(void *)(*(void *)(v993 - 8) + 64));
            }
            else
            {
              uint64_t v994 = v991[1];
              *uint64_t v990 = *v991;
              v990[1] = v994;
              uint64_t v995 = v991[3];
              v990[2] = v991[2];
              v990[3] = v995;
              uint64_t v996 = v991[5];
              v990[4] = v991[4];
              v990[5] = v996;
              uint64_t v997 = v991[7];
              v990[6] = v991[6];
              v990[7] = v997;
              uint64_t v998 = v991[9];
              v990[8] = v991[8];
              v990[9] = v998;
              uint64_t v999 = v991[11];
              v990[10] = v991[10];
              v990[11] = v999;
              uint64_t v1000 = v991[13];
              v990[12] = v991[12];
              v990[13] = v1000;
              uint64_t v1001 = v991[15];
              v990[14] = v991[14];
              v990[15] = v1001;
              *((unsigned char *)v990 + 128) = *((unsigned char *)v991 + 128);
              *(_WORD *)((char *)v990 + 129) = *(_WORD *)((char *)v991 + 129);
              uint64_t v1002 = v991[18];
              v990[17] = v991[17];
              v990[18] = v1002;
              uint64_t v1003 = v991[20];
              v990[19] = v991[19];
              v990[20] = v1003;
              uint64_t v1004 = v991[22];
              v990[21] = v991[21];
              v990[22] = v1004;
              uint64_t v2549 = v991[24];
              v990[23] = v991[23];
              v990[24] = v2549;
              uint64_t v1005 = v991[26];
              v990[25] = v991[25];
              v990[26] = v1005;
              uint64_t v1006 = v991[28];
              v990[27] = v991[27];
              v990[28] = v1006;
              uint64_t v2610 = (void *)v991[30];
              v990[29] = v991[29];
              v990[30] = v2610;
              uint64_t v1007 = v991[32];
              v990[31] = v991[31];
              v990[32] = v1007;
              uint64_t v1008 = v991[34];
              v990[33] = v991[33];
              v990[34] = v1008;
              uint64_t v1009 = v991[36];
              uint64_t v1010 = v991[35];
              *((unsigned char *)v990 + 296) = *((unsigned char *)v991 + 296);
              v990[35] = v1010;
              v990[36] = v1009;
              uint64_t v1011 = v991[39];
              v990[38] = v991[38];
              v990[39] = v1011;
              uint64_t v1012 = v992[29];
              uint64_t v2625 = (char *)v990 + v1012;
              uint64_t v1013 = (char *)v991 + v1012;
              uint64_t v1014 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1013, 1, v1014))
              {
                uint64_t v1015 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2625, v1013, *(void *)(*(void *)(v1015 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1014 - 8) + 16))(v2625, v1013, v1014);
                __swift_storeEnumTagSinglePayload((uint64_t)v2625, 0, 1, v1014);
              }
              uint64_t v1051 = v992[30];
              uint64_t v1052 = (void *)((char *)v990 + v1051);
              uint64_t v1053 = (void *)((char *)v991 + v1051);
              uint64_t v1054 = v1053[1];
              *uint64_t v1052 = *v1053;
              v1052[1] = v1054;
              uint64_t v1055 = v992[31];
              long long v1056 = (char *)v990 + v1055;
              long long v1057 = (char *)v991 + v1055;
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1057, 1, v2672))
              {
                uint64_t v1058 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1056, v1057, *(void *)(*(void *)(v1058 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v1056, v1057, v2672);
                __swift_storeEnumTagSinglePayload((uint64_t)v1056, 0, 1, v2672);
              }
              uint64_t v1071 = v992[32];
              long long v1072 = (char *)v990 + v1071;
              long long v1073 = (char *)v991 + v1071;
              if (__swift_getEnumTagSinglePayload((uint64_t)v991 + v1071, 1, v2672))
              {
                uint64_t v1074 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1072, v1073, *(void *)(*(void *)(v1074 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v1072, v1073, v2672);
                __swift_storeEnumTagSinglePayload((uint64_t)v1072, 0, 1, v2672);
              }
              uint64_t v390 = v2647;
              __swift_storeEnumTagSinglePayload((uint64_t)v990, 0, 1, (uint64_t)v992);
              uint64_t v581 = (uint64_t)v2665;
            }
            uint64_t v1106 = v2693[8];
            uint64_t v1107 = (void *)(v581 + v1106);
            uint64_t v1108 = (void *)((char *)v390 + v1106);
            uint64_t v1109 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1108, 1, v1109))
            {
              uint64_t v1110 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v1107, v1108, *(void *)(*(void *)(v1110 - 8) + 64));
            }
            else
            {
              uint64_t v1111 = v1108[1];
              *uint64_t v1107 = *v1108;
              v1107[1] = v1111;
              uint64_t v1112 = v1108[3];
              v1107[2] = v1108[2];
              v1107[3] = v1112;
              uint64_t v1113 = v1108[5];
              v1107[4] = v1108[4];
              v1107[5] = v1113;
              uint64_t v1114 = v1108[7];
              v1107[6] = v1108[6];
              v1107[7] = v1114;
              uint64_t v1115 = v1108[9];
              v1107[8] = v1108[8];
              v1107[9] = v1115;
              uint64_t v1116 = v1108[11];
              v1107[10] = v1108[10];
              v1107[11] = v1116;
              uint64_t v1117 = v1108[13];
              v1107[12] = v1108[12];
              v1107[13] = v1117;
              uint64_t v1118 = v1108[15];
              v1107[14] = v1108[14];
              v1107[15] = v1118;
              *((unsigned char *)v1107 + 128) = *((unsigned char *)v1108 + 128);
              *(_WORD *)((char *)v1107 + 129) = *(_WORD *)((char *)v1108 + 129);
              uint64_t v1119 = v1108[18];
              v1107[17] = v1108[17];
              v1107[18] = v1119;
              uint64_t v1120 = v1108[20];
              v1107[19] = v1108[19];
              v1107[20] = v1120;
              uint64_t v1121 = v1108[22];
              v1107[21] = v1108[21];
              v1107[22] = v1121;
              uint64_t v1122 = v1108[24];
              v1107[23] = v1108[23];
              v1107[24] = v1122;
              uint64_t v1123 = v1108[26];
              v1107[25] = v1108[25];
              v1107[26] = v1123;
              uint64_t v1124 = v1108[28];
              v1107[27] = v1108[27];
              v1107[28] = v1124;
              uint64_t v1125 = v1108[30];
              v1107[29] = v1108[29];
              v1107[30] = v1125;
              uint64_t v1126 = v1108[32];
              v1107[31] = v1108[31];
              v1107[32] = v1126;
              uint64_t v1127 = v1108[34];
              uint64_t v1128 = v1108[33];
              *((unsigned char *)v1107 + 280) = *((unsigned char *)v1108 + 280);
              v1107[33] = v1128;
              v1107[34] = v1127;
              uint64_t v1129 = v1108[37];
              v1107[36] = v1108[36];
              v1107[37] = v1129;
              uint64_t v1130 = *(int *)(v1109 + 108);
              uint64_t v2612 = (char *)v1107 + v1130;
              uint64_t v1131 = (char *)v1108 + v1130;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1131, 1, v2672))
              {
                uint64_t v1132 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2612, v1131, *(void *)(*(void *)(v1132 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v2612, v1131, v2672);
                __swift_storeEnumTagSinglePayload((uint64_t)v2612, 0, 1, v2672);
              }
              uint64_t v1164 = *(int *)(v1109 + 112);
              uint64_t v1165 = (char *)v1107 + v1164;
              uint64_t v1166 = (char *)v1108 + v1164;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1108 + v1164, 1, v2672))
              {
                uint64_t v1167 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1165, v1166, *(void *)(*(void *)(v1167 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v1165, v1166, v2672);
                __swift_storeEnumTagSinglePayload((uint64_t)v1165, 0, 1, v2672);
              }
              uint64_t v390 = v2647;
              __swift_storeEnumTagSinglePayload((uint64_t)v1107, 0, 1, v1109);
              uint64_t v581 = (uint64_t)v2665;
            }
            uint64_t v1195 = v2693[9];
            uint64_t v1196 = (void *)(v581 + v1195);
            uint64_t v1197 = (void *)((char *)v390 + v1195);
            uint64_t v1198 = (int *)type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1197, 1, (uint64_t)v1198))
            {
              uint64_t v1199 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v1196, v1197, *(void *)(*(void *)(v1199 - 8) + 64));
            }
            else
            {
              uint64_t v1200 = v1197[1];
              *uint64_t v1196 = *v1197;
              v1196[1] = v1200;
              uint64_t v1201 = v1197[3];
              v1196[2] = v1197[2];
              v1196[3] = v1201;
              uint64_t v1202 = v1197[5];
              v1196[4] = v1197[4];
              v1196[5] = v1202;
              uint64_t v1203 = v1197[7];
              v1196[6] = v1197[6];
              v1196[7] = v1203;
              uint64_t v1204 = v1197[9];
              v1196[8] = v1197[8];
              v1196[9] = v1204;
              uint64_t v1205 = v1197[11];
              v1196[10] = v1197[10];
              v1196[11] = v1205;
              uint64_t v1206 = v1197[13];
              v1196[12] = v1197[12];
              v1196[13] = v1206;
              uint64_t v1207 = v1197[15];
              v1196[14] = v1197[14];
              v1196[15] = v1207;
              *((unsigned char *)v1196 + 128) = *((unsigned char *)v1197 + 128);
              *(_WORD *)((char *)v1196 + 129) = *(_WORD *)((char *)v1197 + 129);
              uint64_t v1208 = v1197[18];
              v1196[17] = v1197[17];
              v1196[18] = v1208;
              uint64_t v1209 = v1197[20];
              v1196[19] = v1197[19];
              v1196[20] = v1209;
              uint64_t v1210 = v1197[22];
              v1196[21] = v1197[21];
              v1196[22] = v1210;
              uint64_t v1211 = v1197[24];
              v1196[23] = v1197[23];
              v1196[24] = v1211;
              uint64_t v1212 = v1197[26];
              v1196[25] = v1197[25];
              v1196[26] = v1212;
              uint64_t v1213 = v1197[28];
              v1196[27] = v1197[27];
              v1196[28] = v1213;
              uint64_t v1214 = v1197[30];
              v1196[29] = v1197[29];
              v1196[30] = v1214;
              v1196[31] = v1197[31];
              uint64_t v1215 = v1198[24];
              uint64_t v2613 = (char *)v1196 + v1215;
              uint64_t v1216 = (char *)v1197 + v1215;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1216, 1, v2672))
              {
                uint64_t v1217 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2613, v1216, *(void *)(*(void *)(v1217 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v2613, v1216, v2672);
                __swift_storeEnumTagSinglePayload((uint64_t)v2613, 0, 1, v2672);
              }
              uint64_t v1245 = v1198[25];
              uint64_t v1246 = (char *)v1196 + v1245;
              uint64_t v1247 = (char *)v1197 + v1245;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1197 + v1245, 1, v2672))
              {
                uint64_t v1248 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1246, v1247, *(void *)(*(void *)(v1248 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v1246, v1247, v2672);
                __swift_storeEnumTagSinglePayload((uint64_t)v1246, 0, 1, v2672);
              }
              uint64_t v390 = v2647;
              uint64_t v1258 = v1198[26];
              uint64_t v1259 = (char *)v1196 + v1258;
              uint64_t v1260 = (char *)v1197 + v1258;
              uint64_t v1261 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1260, 1, v1261))
              {
                uint64_t v1262 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1259, v1260, *(void *)(*(void *)(v1262 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1261 - 8) + 16))(v1259, v1260, v1261);
                __swift_storeEnumTagSinglePayload((uint64_t)v1259, 0, 1, v1261);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v1196, 0, 1, (uint64_t)v1198);
              uint64_t v581 = (uint64_t)v2665;
            }
            uint64_t v1288 = v2693[10];
            uint64_t v1289 = (void *)(v581 + v1288);
            uint64_t v1290 = (void *)((char *)v390 + v1288);
            uint64_t v1291 = (int *)type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1290, 1, (uint64_t)v1291))
            {
              uint64_t v1292 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1289, v1290, *(void *)(*(void *)(v1292 - 8) + 64));
            }
            else
            {
              uint64_t v1293 = v1290[1];
              *uint64_t v1289 = *v1290;
              v1289[1] = v1293;
              uint64_t v1294 = v1290[3];
              v1289[2] = v1290[2];
              v1289[3] = v1294;
              uint64_t v1295 = v1290[5];
              v1289[4] = v1290[4];
              v1289[5] = v1295;
              uint64_t v1296 = v1290[7];
              v1289[6] = v1290[6];
              v1289[7] = v1296;
              uint64_t v1297 = v1290[9];
              v1289[8] = v1290[8];
              v1289[9] = v1297;
              uint64_t v1298 = v1290[11];
              v1289[10] = v1290[10];
              v1289[11] = v1298;
              uint64_t v1299 = v1290[13];
              v1289[12] = v1290[12];
              v1289[13] = v1299;
              uint64_t v1300 = v1290[15];
              v1289[14] = v1290[14];
              v1289[15] = v1300;
              *((unsigned char *)v1289 + 128) = *((unsigned char *)v1290 + 128);
              *(_WORD *)((char *)v1289 + 129) = *(_WORD *)((char *)v1290 + 129);
              uint64_t v1301 = v1290[18];
              v1289[17] = v1290[17];
              v1289[18] = v1301;
              uint64_t v1302 = v1290[20];
              v1289[19] = v1290[19];
              v1289[20] = v1302;
              uint64_t v1303 = v1290[22];
              v1289[21] = v1290[21];
              v1289[22] = v1303;
              uint64_t v1304 = v1290[24];
              v1289[23] = v1290[23];
              v1289[24] = v1304;
              uint64_t v1305 = v1290[26];
              v1289[25] = v1290[25];
              v1289[26] = v1305;
              v1289[27] = v1290[27];
              uint64_t v1306 = v1291[22];
              uint64_t v2614 = (char *)v1289 + v1306;
              uint64_t v1307 = (char *)v1290 + v1306;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1307, 1, v2672))
              {
                uint64_t v1308 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2614, v1307, *(void *)(*(void *)(v1308 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v2614, v1307, v2672);
                __swift_storeEnumTagSinglePayload((uint64_t)v2614, 0, 1, v2672);
              }
              uint64_t v1334 = v1291[23];
              uint64_t v1335 = (char *)v1289 + v1334;
              uint64_t v1336 = (char *)v1290 + v1334;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1290 + v1334, 1, v2672))
              {
                uint64_t v1337 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1335, v1336, *(void *)(*(void *)(v1337 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v1335, v1336, v2672);
                __swift_storeEnumTagSinglePayload((uint64_t)v1335, 0, 1, v2672);
              }
              uint64_t v390 = v2647;
              uint64_t v1350 = v1291[24];
              uint64_t v1351 = (char *)v1289 + v1350;
              uint64_t v1352 = (char *)v1290 + v1350;
              *(void *)uint64_t v1351 = *(void *)v1352;
              v1351[8] = v1352[8];
              uint64_t v1353 = v1291[25];
              uint64_t v1354 = (char *)v1289 + v1353;
              uint64_t v1355 = (char *)v1290 + v1353;
              uint64_t v1356 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1355, 1, v1356))
              {
                uint64_t v1357 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1354, v1355, *(void *)(*(void *)(v1357 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1356 - 8) + 16))(v1354, v1355, v1356);
                __swift_storeEnumTagSinglePayload((uint64_t)v1354, 0, 1, v1356);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v1289, 0, 1, (uint64_t)v1291);
              uint64_t v581 = (uint64_t)v2665;
            }
            uint64_t v1381 = v2693[11];
            uint64_t v1382 = (void *)(v581 + v1381);
            uint64_t v1383 = (void *)((char *)v390 + v1381);
            uint64_t v1384 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1383, 1, (uint64_t)v1384))
            {
              uint64_t v1385 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1382, v1383, *(void *)(*(void *)(v1385 - 8) + 64));
            }
            else
            {
              uint64_t v1386 = v1383[1];
              void *v1382 = *v1383;
              v1382[1] = v1386;
              uint64_t v1387 = v1383[3];
              v1382[2] = v1383[2];
              v1382[3] = v1387;
              uint64_t v1388 = v1383[5];
              v1382[4] = v1383[4];
              v1382[5] = v1388;
              uint64_t v1389 = v1383[7];
              v1382[6] = v1383[6];
              v1382[7] = v1389;
              uint64_t v1390 = v1383[9];
              v1382[8] = v1383[8];
              v1382[9] = v1390;
              uint64_t v1391 = v1383[11];
              v1382[10] = v1383[10];
              v1382[11] = v1391;
              *((unsigned char *)v1382 + 96) = *((unsigned char *)v1383 + 96);
              uint64_t v1392 = v1383[14];
              v1382[13] = v1383[13];
              v1382[14] = v1392;
              uint64_t v1393 = v1384[13];
              uint64_t v2630 = (char *)v1382 + v1393;
              uint64_t v1394 = (char *)v1383 + v1393;
              uint64_t v1395 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1394, 1, v1395))
              {
                uint64_t v1396 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2630, v1394, *(void *)(*(void *)(v1396 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1395 - 8) + 16))(v2630, v1394, v1395);
                __swift_storeEnumTagSinglePayload((uint64_t)v2630, 0, 1, v1395);
              }
              uint64_t v1416 = v1384[14];
              uint64_t v1417 = (char *)v1382 + v1416;
              uint64_t v1418 = (char *)v1383 + v1416;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1383 + v1416, 1, v1395))
              {
                uint64_t v1419 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1417, v1418, *(void *)(*(void *)(v1419 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1395 - 8) + 16))(v1417, v1418, v1395);
                __swift_storeEnumTagSinglePayload((uint64_t)v1417, 0, 1, v1395);
              }
              uint64_t v1495 = v1384[15];
              uint64_t v1496 = (void *)((char *)v1382 + v1495);
              v1497 = (void *)((char *)v1383 + v1495);
              uint64_t v1498 = v1497[1];
              *uint64_t v1496 = *v1497;
              v1496[1] = v1498;
              uint64_t v1499 = v1384[16];
              v1500 = (void *)((char *)v1382 + v1499);
              uint64_t v1501 = (void *)((char *)v1383 + v1499);
              uint64_t v1502 = v1501[1];
              void *v1500 = *v1501;
              v1500[1] = v1502;
              uint64_t v1503 = v1384[17];
              uint64_t v1504 = (void *)((char *)v1382 + v1503);
              uint64_t v1505 = (void *)((char *)v1383 + v1503);
              uint64_t v1506 = v1505[1];
              void *v1504 = *v1505;
              v1504[1] = v1506;
              uint64_t v1507 = v1384[18];
              uint64_t v2615 = (char *)v1383 + v1507;
              uint64_t v2632 = (char *)v1382 + v1507;
              uint64_t v1508 = type metadata accessor for DateComponents();
              v1509 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1508 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1509(v2632, v2615, v1508);
              v1509((char *)v1382 + v1384[19], (char *)v1383 + v1384[19], v1508);
              uint64_t v1510 = v1384[20];
              uint64_t v1511 = (void *)((char *)v1382 + v1510);
              v1512 = (void *)((char *)v1383 + v1510);
              uint64_t v1513 = v1512[1];
              *uint64_t v1511 = *v1512;
              v1511[1] = v1513;
              uint64_t v1514 = v1384[21];
              v1515 = (void *)((char *)v1382 + v1514);
              uint64_t v1516 = (void *)((char *)v1383 + v1514);
              uint64_t v1517 = v1516[1];
              void *v1515 = *v1516;
              v1515[1] = v1517;
              uint64_t v1518 = v1384[22];
              v1519 = (void *)((char *)v1382 + v1518);
              uint64_t v1520 = (void *)((char *)v1383 + v1518);
              uint64_t v2616 = (void *)v1520[1];
              void *v1519 = *v1520;
              v1519[1] = v2616;
              uint64_t v1521 = v1384[23];
              v1522 = (void *)((char *)v1382 + v1521);
              uint64_t v1523 = (void *)((char *)v1383 + v1521);
              __dsth = (void *)v1523[1];
              void *v1522 = *v1523;
              v1522[1] = __dsth;
              uint64_t v1524 = v1384[24];
              uint64_t v1525 = (void *)((char *)v1382 + v1524);
              uint64_t v1526 = (void *)((char *)v1383 + v1524);
              uint64_t v2591 = (void *)v1526[1];
              void *v1525 = *v1526;
              v1525[1] = v2591;
              uint64_t v1527 = v1384[25];
              uint64_t v1528 = (void *)((char *)v1382 + v1527);
              uint64_t v1529 = (void *)((char *)v1383 + v1527);
              uint64_t v2579 = v1529[1];
              void *v1528 = *v1529;
              v1528[1] = v2579;
              uint64_t v1530 = v1384[26];
              uint64_t v1531 = (void *)((char *)v1382 + v1530);
              uint64_t v1532 = (void *)((char *)v1383 + v1530);
              uint64_t v2574 = v1532[1];
              void *v1531 = *v1532;
              v1531[1] = v2574;
              uint64_t v1533 = v1384[27];
              uint64_t v1534 = (void *)((char *)v1382 + v1533);
              uint64_t v1535 = (void *)((char *)v1383 + v1533);
              uint64_t v2570 = v1535[1];
              *uint64_t v1534 = *v1535;
              v1534[1] = v2570;
              uint64_t v1536 = v1384[28];
              uint64_t v1537 = (void *)((char *)v1382 + v1536);
              uint64_t v1538 = (void *)((char *)v1383 + v1536);
              uint64_t v2566 = v1538[1];
              *uint64_t v1537 = *v1538;
              v1537[1] = v2566;
              uint64_t v1539 = v1384[29];
              uint64_t v1540 = (void *)((char *)v1382 + v1539);
              uint64_t v1541 = (void *)((char *)v1383 + v1539);
              uint64_t v2563 = (void *)v1541[1];
              void *v1540 = *v1541;
              v1540[1] = v2563;
              uint64_t v1542 = v1384[30];
              uint64_t v1543 = (void *)((char *)v1382 + v1542);
              uint64_t v1544 = (void *)((char *)v1383 + v1542);
              uint64_t v2560 = v1544[1];
              *uint64_t v1543 = *v1544;
              v1543[1] = v2560;
              uint64_t v1545 = v1384[31];
              uint64_t v1546 = (void *)((char *)v1382 + v1545);
              uint64_t v1547 = (void *)((char *)v1383 + v1545);
              uint64_t v2557 = v1547[1];
              void *v1546 = *v1547;
              v1546[1] = v2557;
              uint64_t v1548 = v1384[32];
              uint64_t v1549 = (void *)((char *)v1382 + v1548);
              uint64_t v1550 = (void *)((char *)v1383 + v1548);
              uint64_t v2551 = v1550[1];
              void *v1549 = *v1550;
              v1549[1] = v2551;
              *(void *)((char *)v1382 + v1384[33]) = *(void *)((char *)v1383 + v1384[33]);
              *(void *)((char *)v1382 + v1384[34]) = *(void *)((char *)v1383 + v1384[34]);
              uint64_t v1551 = v1384[35];
              uint64_t v1552 = (void *)((char *)v1382 + v1551);
              v1553 = (void *)((char *)v1383 + v1551);
              uint64_t v1554 = v1553[1];
              *uint64_t v1552 = *v1553;
              v1552[1] = v1554;
              uint64_t v1555 = v1384[36];
              uint64_t v1556 = (void *)((char *)v1382 + v1555);
              uint64_t v1557 = (void *)((char *)v1383 + v1555);
              uint64_t v1558 = v1557[1];
              void *v1556 = *v1557;
              v1556[1] = v1558;
              uint64_t v1559 = v1384[37];
              uint64_t v1560 = (void *)((char *)v1382 + v1559);
              uint64_t v1561 = (void *)((char *)v1383 + v1559);
              uint64_t v1562 = v1561[1];
              void *v1560 = *v1561;
              v1560[1] = v1562;
              uint64_t v1563 = v1384[38];
              uint64_t v2633 = (char *)v1382 + v1563;
              v1564 = (char *)v1383 + v1563;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1564, 1, v2672))
              {
                uint64_t v1565 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2633, v1564, *(void *)(*(void *)(v1565 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v2633, v1564, v2672);
                __swift_storeEnumTagSinglePayload((uint64_t)v2633, 0, 1, v2672);
              }
              uint64_t v1686 = v1384[39];
              uint64_t v1687 = (void *)((char *)v1382 + v1686);
              uint64_t v1688 = (void *)((char *)v1383 + v1686);
              uint64_t v1689 = v1688[1];
              *uint64_t v1687 = *v1688;
              v1687[1] = v1689;
              uint64_t v1690 = v1384[40];
              uint64_t v1691 = (void *)((char *)v1382 + v1690);
              uint64_t v1692 = (void *)((char *)v1383 + v1690);
              uint64_t v1693 = v1692[1];
              *uint64_t v1691 = *v1692;
              v1691[1] = v1693;
              uint64_t v1694 = v1384[41];
              uint64_t v1695 = (char *)v1382 + v1694;
              uint64_t v1696 = (char *)v1383 + v1694;
              v1695[8] = v1696[8];
              *(void *)uint64_t v1695 = *(void *)v1696;
              uint64_t v1697 = v1384[42];
              uint64_t v1698 = (void *)((char *)v1382 + v1697);
              uint64_t v1699 = (void *)((char *)v1383 + v1697);
              uint64_t v1700 = v1699[1];
              *uint64_t v1698 = *v1699;
              v1698[1] = v1700;
              uint64_t v1701 = v1384[43];
              uint64_t v1702 = (char *)v1382 + v1701;
              uint64_t v1703 = (char *)v1383 + v1701;
              *(_OWORD *)uint64_t v1702 = *(_OWORD *)v1703;
              *(void *)(v1702 + 13) = *(void *)(v1703 + 13);
              uint64_t v1704 = v1384[44];
              uint64_t v1705 = (void *)((char *)v1382 + v1704);
              uint64_t v1706 = (void *)((char *)v1383 + v1704);
              uint64_t v1707 = v1706[1];
              void *v1705 = *v1706;
              v1705[1] = v1707;
              uint64_t v1708 = v1384[45];
              uint64_t v1709 = (void *)((char *)v1382 + v1708);
              uint64_t v1710 = (void *)((char *)v1383 + v1708);
              uint64_t v1711 = v1710[1];
              void *v1709 = *v1710;
              v1709[1] = v1711;
              uint64_t v1712 = v1384[46];
              uint64_t v1713 = (void *)((char *)v1382 + v1712);
              v1714 = (void *)((char *)v1383 + v1712);
              uint64_t v1715 = v1714[1];
              *uint64_t v1713 = *v1714;
              v1713[1] = v1715;
              uint64_t v1716 = v1384[47];
              uint64_t v1717 = (void *)((char *)v1382 + v1716);
              v1718 = (void *)((char *)v1383 + v1716);
              uint64_t v1719 = v1718[1];
              void *v1717 = *v1718;
              v1717[1] = v1719;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1382, 0, 1, (uint64_t)v1384);
              uint64_t v390 = v2647;
              uint64_t v581 = (uint64_t)v2665;
            }
            uint64_t v1720 = v2693[12];
            v1721 = (void *)(v581 + v1720);
            uint64_t v1722 = (void *)((char *)v390 + v1720);
            uint64_t v1723 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1722, 1, (uint64_t)v1723))
            {
              uint64_t v1724 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1721, v1722, *(void *)(*(void *)(v1724 - 8) + 64));
            }
            else
            {
              uint64_t v1725 = v1722[1];
              void *v1721 = *v1722;
              v1721[1] = v1725;
              uint64_t v1726 = v1722[3];
              v1721[2] = v1722[2];
              v1721[3] = v1726;
              uint64_t v1727 = v1722[5];
              v1721[4] = v1722[4];
              v1721[5] = v1727;
              uint64_t v1728 = v1722[7];
              v1721[6] = v1722[6];
              v1721[7] = v1728;
              uint64_t v1729 = v1722[9];
              v1721[8] = v1722[8];
              v1721[9] = v1729;
              uint64_t v1730 = v1722[11];
              v1721[10] = v1722[10];
              v1721[11] = v1730;
              *((unsigned char *)v1721 + 96) = *((unsigned char *)v1722 + 96);
              uint64_t v1731 = v1722[14];
              v1721[13] = v1722[13];
              v1721[14] = v1731;
              uint64_t v1732 = v1722[16];
              v1721[15] = v1722[15];
              v1721[16] = v1732;
              uint64_t v1733 = v1723[14];
              uint64_t v2636 = (char *)v1721 + v1733;
              uint64_t v1734 = (char *)v1722 + v1733;
              uint64_t v1735 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1734, 1, v1735))
              {
                uint64_t v1736 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2636, v1734, *(void *)(*(void *)(v1736 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1735 - 8) + 16))(v2636, v1734, v1735);
                __swift_storeEnumTagSinglePayload((uint64_t)v2636, 0, 1, v1735);
              }
              uint64_t v1792 = v1723[15];
              uint64_t v1793 = (char *)v1721 + v1792;
              uint64_t v1794 = (char *)v1722 + v1792;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1722 + v1792, 1, v1735))
              {
                uint64_t v1795 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1793, v1794, *(void *)(*(void *)(v1795 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1735 - 8) + 16))(v1793, v1794, v1735);
                __swift_storeEnumTagSinglePayload((uint64_t)v1793, 0, 1, v1735);
              }
              uint64_t v1856 = v1723[16];
              uint64_t v1857 = (void *)((char *)v1721 + v1856);
              uint64_t v1858 = (void *)((char *)v1722 + v1856);
              uint64_t v1859 = v1858[1];
              void *v1857 = *v1858;
              v1857[1] = v1859;
              uint64_t v1860 = v1723[17];
              uint64_t v1861 = (void *)((char *)v1721 + v1860);
              uint64_t v1862 = (void *)((char *)v1722 + v1860);
              uint64_t v2637 = (void *)v1862[1];
              *uint64_t v1861 = *v1862;
              v1861[1] = v2637;
              uint64_t v1863 = v1723[18];
              uint64_t v1864 = (void *)((char *)v1721 + v1863);
              uint64_t v1865 = (void *)((char *)v1722 + v1863);
              v2619 = (void *)v1865[1];
              *uint64_t v1864 = *v1865;
              v1864[1] = v2619;
              uint64_t v1866 = v1723[19];
              uint64_t v1867 = (void *)((char *)v1721 + v1866);
              uint64_t v1868 = (void *)((char *)v1722 + v1866);
              uint64_t v1869 = v1868[1];
              *uint64_t v1867 = *v1868;
              v1867[1] = v1869;
              uint64_t v1870 = v1723[20];
              uint64_t v1871 = (void *)((char *)v1721 + v1870);
              uint64_t v1872 = (void *)((char *)v1722 + v1870);
              uint64_t v2581 = v1872[1];
              *uint64_t v1871 = *v1872;
              v1871[1] = v2581;
              *(void *)((char *)v1721 + v1723[21]) = *(void *)((char *)v1722 + v1723[21]);
              *(void *)((char *)v1721 + v1723[22]) = *(void *)((char *)v1722 + v1723[22]);
              uint64_t v1873 = v1723[23];
              uint64_t v1874 = (char *)v1721 + v1873;
              uint64_t v1875 = (char *)v1722 + v1873;
              *(void *)uint64_t v1874 = *(void *)v1875;
              v1874[8] = v1875[8];
              uint64_t v1876 = v1723[24];
              uint64_t v1877 = (char *)v1721 + v1876;
              uint64_t v1878 = (char *)v1722 + v1876;
              *(void *)uint64_t v1877 = *(void *)v1878;
              v1877[8] = v1878[8];
              uint64_t v1879 = v1723[25];
              uint64_t v1880 = (void *)((char *)v1721 + v1879);
              uint64_t v1881 = (void *)((char *)v1722 + v1879);
              uint64_t v1882 = v1881[1];
              void *v1880 = *v1881;
              v1880[1] = v1882;
              uint64_t v1883 = v1723[26];
              uint64_t v1884 = (void *)((char *)v1721 + v1883);
              uint64_t v1885 = (void *)((char *)v1722 + v1883);
              uint64_t v1886 = v1885[1];
              void *v1884 = *v1885;
              v1884[1] = v1886;
              uint64_t v1887 = v1723[27];
              uint64_t v1888 = (void *)((char *)v1721 + v1887);
              uint64_t v1889 = (void *)((char *)v1722 + v1887);
              uint64_t v1890 = v1889[1];
              void *v1888 = *v1889;
              v1888[1] = v1890;
              uint64_t v1891 = v1723[28];
              uint64_t v1892 = (void *)((char *)v1721 + v1891);
              uint64_t v1893 = (void *)((char *)v1722 + v1891);
              uint64_t v1894 = v1893[1];
              void *v1892 = *v1893;
              v1892[1] = v1894;
              uint64_t v1895 = v1723[29];
              uint64_t v1896 = (char *)v1721 + v1895;
              uint64_t v1897 = (char *)v1722 + v1895;
              *(void *)uint64_t v1896 = *(void *)v1897;
              v1896[8] = v1897[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1721, 0, 1, (uint64_t)v1723);
              uint64_t v390 = v2647;
              uint64_t v581 = (uint64_t)v2665;
            }
            uint64_t v1898 = v2693[13];
            uint64_t v1899 = (void *)(v581 + v1898);
            uint64_t v1900 = (void *)((char *)v390 + v1898);
            uint64_t v1901 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1900, 1, (uint64_t)v1901))
            {
              uint64_t v1902 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1899, v1900, *(void *)(*(void *)(v1902 - 8) + 64));
            }
            else
            {
              uint64_t v1903 = v1900[1];
              void *v1899 = *v1900;
              v1899[1] = v1903;
              uint64_t v1904 = v1900[3];
              v1899[2] = v1900[2];
              v1899[3] = v1904;
              uint64_t v1905 = v1900[5];
              v1899[4] = v1900[4];
              v1899[5] = v1905;
              uint64_t v1906 = v1900[7];
              v1899[6] = v1900[6];
              v1899[7] = v1906;
              uint64_t v1907 = v1900[9];
              v1899[8] = v1900[8];
              v1899[9] = v1907;
              uint64_t v1908 = v1900[11];
              v1899[10] = v1900[10];
              v1899[11] = v1908;
              *((unsigned char *)v1899 + 96) = *((unsigned char *)v1900 + 96);
              uint64_t v1909 = v1900[14];
              v1899[13] = v1900[13];
              v1899[14] = v1909;
              uint64_t v1910 = v1900[16];
              v1899[15] = v1900[15];
              v1899[16] = v1910;
              uint64_t v1911 = v1901[14];
              uint64_t v2652 = (char *)v1899 + v1911;
              uint64_t v1912 = (char *)v1900 + v1911;
              uint64_t v1913 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1912, 1, v1913))
              {
                uint64_t v1914 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2652, v1912, *(void *)(*(void *)(v1914 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1913 - 8) + 16))(v2652, v1912, v1913);
                __swift_storeEnumTagSinglePayload((uint64_t)v2652, 0, 1, v1913);
              }
              uint64_t v2158 = v1901[15];
              uint64_t v2159 = (void *)((char *)v1899 + v2158);
              v2160 = (void *)((char *)v1900 + v2158);
              uint64_t v2161 = v2160[1];
              void *v2159 = *v2160;
              v2159[1] = v2161;
              uint64_t v2162 = v1901[16];
              uint64_t v2163 = (void *)((char *)v1899 + v2162);
              uint64_t v2164 = (void *)((char *)v1900 + v2162);
              uint64_t v2165 = v2164[1];
              void *v2163 = *v2164;
              v2163[1] = v2165;
              uint64_t v2166 = v1901[17];
              uint64_t v2167 = (void *)((char *)v1899 + v2166);
              uint64_t v2168 = (void *)((char *)v1900 + v2166);
              uint64_t v2657 = v2168[1];
              void *v2167 = *v2168;
              v2167[1] = v2657;
              uint64_t v2169 = v1901[18];
              uint64_t v2170 = (void *)((char *)v1899 + v2169);
              uint64_t v2171 = (void *)((char *)v1900 + v2169);
              uint64_t v2172 = v2171[1];
              *uint64_t v2170 = *v2171;
              v2170[1] = v2172;
              uint64_t v2173 = v1901[19];
              uint64_t v2174 = (void *)((char *)v1899 + v2173);
              uint64_t v2175 = (void *)((char *)v1900 + v2173);
              uint64_t v2176 = v2175[1];
              *uint64_t v2174 = *v2175;
              v2174[1] = v2176;
              *(void *)((char *)v1899 + v1901[20]) = *(void *)((char *)v1900 + v1901[20]);
              uint64_t v2177 = v1901[21];
              uint64_t v2178 = (void *)((char *)v1899 + v2177);
              uint64_t v2179 = (void *)((char *)v1900 + v2177);
              uint64_t v2180 = v2179[1];
              *uint64_t v2178 = *v2179;
              v2178[1] = v2180;
              uint64_t v2181 = v1901[22];
              uint64_t v2182 = (void *)((char *)v1899 + v2181);
              uint64_t v2183 = (void *)((char *)v1900 + v2181);
              uint64_t v2184 = v2183[1];
              *uint64_t v2182 = *v2183;
              v2182[1] = v2184;
              uint64_t v2185 = v1901[23];
              uint64_t v2186 = (void *)((char *)v1899 + v2185);
              uint64_t v2187 = (void *)((char *)v1900 + v2185);
              uint64_t v2188 = v2187[1];
              *uint64_t v2186 = *v2187;
              v2186[1] = v2188;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1899, 0, 1, (uint64_t)v1901);
              uint64_t v581 = (uint64_t)v2665;
            }
            __swift_storeEnumTagSinglePayload(v581, 0, 1, (uint64_t)v2693);
            uint64_t v381 = v2725;
          }
          char v21 = v2718;
          uint64_t v2189 = v2701[18];
          uint64_t v2190 = (void *)((char *)v381 + v2189);
          uint64_t v2191 = (void *)((char *)v2718 + v2189);
          uint64_t v2192 = (int *)type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2191, 1, (uint64_t)v2192))
          {
            uint64_t v2193 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v2190, v2191, *(void *)(*(void *)(v2193 - 8) + 64));
          }
          else
          {
            uint64_t v2194 = v2191[1];
            *uint64_t v2190 = *v2191;
            v2190[1] = v2194;
            uint64_t v2195 = v2191[3];
            v2190[2] = v2191[2];
            v2190[3] = v2195;
            uint64_t v2196 = v2191[5];
            v2190[4] = v2191[4];
            v2190[5] = v2196;
            uint64_t v2197 = v2191[7];
            v2190[6] = v2191[6];
            v2190[7] = v2197;
            uint64_t v2198 = v2191[9];
            v2190[8] = v2191[8];
            v2190[9] = v2198;
            uint64_t v2199 = v2191[11];
            v2190[10] = v2191[10];
            v2190[11] = v2199;
            uint64_t v2200 = v2192[10];
            v2737 = (char *)v2190 + v2200;
            uint64_t v2201 = (char *)v2191 + v2200;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2201, 1, v2672))
            {
              uint64_t v2202 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2737, v2201, *(void *)(*(void *)(v2202 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v2737, v2201, v2672);
              __swift_storeEnumTagSinglePayload((uint64_t)v2737, 0, 1, v2672);
            }
            uint64_t v2203 = v2192[11];
            uint64_t v2204 = (char *)v2190 + v2203;
            uint64_t v2205 = (char *)v2191 + v2203;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2191 + v2203, 1, v2672))
            {
              uint64_t v2206 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2204, v2205, *(void *)(*(void *)(v2206 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v2204, v2205, v2672);
              __swift_storeEnumTagSinglePayload((uint64_t)v2204, 0, 1, v2672);
            }
            uint64_t v2207 = v2192[12];
            uint64_t v2208 = (void *)((char *)v2190 + v2207);
            uint64_t v2209 = (void *)((char *)v2191 + v2207);
            uint64_t v2210 = v2209[1];
            void *v2208 = *v2209;
            v2208[1] = v2210;
            uint64_t v2211 = v2192[13];
            uint64_t v2212 = (void *)((char *)v2190 + v2211);
            uint64_t v2213 = (void *)((char *)v2191 + v2211);
            uint64_t v2214 = v2213[1];
            void *v2212 = *v2213;
            v2212[1] = v2214;
            uint64_t v2215 = v2192[14];
            uint64_t v2216 = (void *)((char *)v2190 + v2215);
            uint64_t v2217 = (void *)((char *)v2191 + v2215);
            uint64_t v2218 = v2217[1];
            void *v2216 = *v2217;
            v2216[1] = v2218;
            uint64_t v2219 = v2192[15];
            uint64_t v2220 = (char *)v2190 + v2219;
            uint64_t v2221 = (char *)v2191 + v2219;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2221, 1, v2672))
            {
              uint64_t v2222 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2220, v2221, *(void *)(*(void *)(v2222 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v2220, v2221, v2672);
              __swift_storeEnumTagSinglePayload((uint64_t)v2220, 0, 1, v2672);
            }
            uint64_t v2223 = v2192[16];
            uint64_t v2224 = (void *)((char *)v2190 + v2223);
            uint64_t v2225 = (void *)((char *)v2191 + v2223);
            uint64_t v2226 = v2225[1];
            void *v2224 = *v2225;
            v2224[1] = v2226;
            uint64_t v2227 = v2192[17];
            uint64_t v2228 = (void *)((char *)v2190 + v2227);
            uint64_t v2229 = (void *)((char *)v2191 + v2227);
            uint64_t v2230 = v2229[1];
            void *v2228 = *v2229;
            v2228[1] = v2230;
            uint64_t v2231 = v2192[18];
            uint64_t v2232 = (void *)((char *)v2190 + v2231);
            uint64_t v2233 = (void *)((char *)v2191 + v2231);
            uint64_t v2234 = v2233[1];
            void *v2232 = *v2233;
            v2232[1] = v2234;
            uint64_t v2235 = v2192[19];
            uint64_t v2236 = (void *)((char *)v2190 + v2235);
            uint64_t v2237 = (void *)((char *)v2191 + v2235);
            uint64_t v2238 = v2237[1];
            *uint64_t v2236 = *v2237;
            v2236[1] = v2238;
            uint64_t v2239 = v2192[20];
            uint64_t v2240 = (void *)((char *)v2190 + v2239);
            uint64_t v2241 = (void *)((char *)v2191 + v2239);
            uint64_t v2242 = v2241[1];
            *uint64_t v2240 = *v2241;
            v2240[1] = v2242;
            uint64_t v2243 = v2192[21];
            uint64_t v2244 = (void *)((char *)v2190 + v2243);
            uint64_t v2245 = (void *)((char *)v2191 + v2243);
            uint64_t v2246 = v2245[1];
            *uint64_t v2244 = *v2245;
            v2244[1] = v2246;
            uint64_t v2247 = v2192[22];
            uint64_t v2248 = (void *)((char *)v2190 + v2247);
            uint64_t v2249 = (void *)((char *)v2191 + v2247);
            uint64_t v2250 = v2249[1];
            *uint64_t v2248 = *v2249;
            v2248[1] = v2250;
            uint64_t v2251 = v2192[23];
            uint64_t v2252 = (void *)((char *)v2190 + v2251);
            uint64_t v2253 = (void *)((char *)v2191 + v2251);
            uint64_t v2254 = v2253[1];
            *uint64_t v2252 = *v2253;
            v2252[1] = v2254;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2190, 0, 1, (uint64_t)v2192);
            char v21 = v2718;
          }
          uint64_t v2255 = v2701[19];
          uint64_t v2256 = (void *)((char *)v2725 + v2255);
          uint64_t v2257 = (void *)((char *)v21 + v2255);
          uint64_t v2258 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2257, 1, (uint64_t)v2258))
          {
            uint64_t v2259 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v2256, v2257, *(void *)(*(void *)(v2259 - 8) + 64));
          }
          else
          {
            uint64_t v2260 = v2257[1];
            *uint64_t v2256 = *v2257;
            v2256[1] = v2260;
            uint64_t v2261 = v2257[3];
            v2256[2] = v2257[2];
            v2256[3] = v2261;
            uint64_t v2262 = v2257[5];
            v2256[4] = v2257[4];
            v2256[5] = v2262;
            uint64_t v2263 = v2257[7];
            v2256[6] = v2257[6];
            v2256[7] = v2263;
            uint64_t v2696 = v2257[9];
            v2256[8] = v2257[8];
            v2256[9] = v2696;
            uint64_t v2264 = v2257[11];
            v2256[10] = v2257[10];
            v2256[11] = v2264;
            uint64_t v2265 = v2258[11];
            v2738 = (char *)v2256 + v2265;
            uint64_t v2266 = (char *)v2257 + v2265;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2266, 1, v2672))
            {
              uint64_t v2267 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2738, v2266, *(void *)(*(void *)(v2267 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v2738, v2266, v2672);
              __swift_storeEnumTagSinglePayload((uint64_t)v2738, 0, 1, v2672);
            }
            uint64_t v2268 = v2258[12];
            uint64_t v2269 = (void *)((char *)v2256 + v2268);
            uint64_t v2270 = (void *)((char *)v2257 + v2268);
            uint64_t v2271 = v2270[1];
            void *v2269 = *v2270;
            v2269[1] = v2271;
            *(void *)((char *)v2256 + v2258[13]) = *(void *)((char *)v2257 + v2258[13]);
            uint64_t v2272 = v2258[14];
            uint64_t v2273 = (char *)v2256 + v2272;
            uint64_t v2274 = (char *)v2257 + v2272;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2274, 1, v2672))
            {
              uint64_t v2275 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2273, v2274, *(void *)(*(void *)(v2275 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v2273, v2274, v2672);
              __swift_storeEnumTagSinglePayload((uint64_t)v2273, 0, 1, v2672);
            }
            *(void *)((char *)v2256 + v2258[15]) = *(void *)((char *)v2257 + v2258[15]);
            *(void *)((char *)v2256 + v2258[16]) = *(void *)((char *)v2257 + v2258[16]);
            uint64_t v2276 = v2258[17];
            uint64_t v2277 = (void *)((char *)v2256 + v2276);
            uint64_t v2278 = (void *)((char *)v2257 + v2276);
            uint64_t v2279 = v2278[1];
            void *v2277 = *v2278;
            v2277[1] = v2279;
            *(void *)((char *)v2256 + v2258[18]) = *(void *)((char *)v2257 + v2258[18]);
            *(void *)((char *)v2256 + v2258[19]) = *(void *)((char *)v2257 + v2258[19]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2256, 0, 1, (uint64_t)v2258);
            char v21 = v2718;
          }
          uint64_t v2280 = v2701[20];
          uint64_t v2281 = (void *)((char *)v2725 + v2280);
          uint64_t v2282 = (void *)((char *)v21 + v2280);
          uint64_t v2283 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2282, 1, (uint64_t)v2283))
          {
            uint64_t v2284 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v2281, v2282, *(void *)(*(void *)(v2284 - 8) + 64));
          }
          else
          {
            uint64_t v2285 = v2282[1];
            void *v2281 = *v2282;
            v2281[1] = v2285;
            uint64_t v2286 = v2282[3];
            v2281[2] = v2282[2];
            v2281[3] = v2286;
            uint64_t v2287 = v2282[5];
            v2281[4] = v2282[4];
            v2281[5] = v2287;
            uint64_t v2288 = v2282[7];
            v2281[6] = v2282[6];
            v2281[7] = v2288;
            uint64_t v2289 = v2283[8];
            v2739 = (char *)v2281 + v2289;
            uint64_t v2290 = (char *)v2282 + v2289;
            uint64_t v2291 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2290, 1, v2291))
            {
              uint64_t v2292 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2739, v2290, *(void *)(*(void *)(v2292 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2291 - 8) + 16))(v2739, v2290, v2291);
              __swift_storeEnumTagSinglePayload((uint64_t)v2739, 0, 1, v2291);
            }
            uint64_t v2293 = v2283[9];
            uint64_t v2294 = (void *)((char *)v2281 + v2293);
            uint64_t v2295 = (void *)((char *)v2282 + v2293);
            uint64_t v2296 = v2295[1];
            *uint64_t v2294 = *v2295;
            v2294[1] = v2296;
            uint64_t v2297 = v2283[10];
            uint64_t v2298 = (void *)((char *)v2281 + v2297);
            uint64_t v2299 = (void *)((char *)v2282 + v2297);
            uint64_t v2300 = v2299[1];
            *uint64_t v2298 = *v2299;
            v2298[1] = v2300;
            uint64_t v2301 = v2283[11];
            uint64_t v2302 = (void *)((char *)v2281 + v2301);
            uint64_t v2303 = (void *)((char *)v2282 + v2301);
            uint64_t v2304 = v2303[1];
            *uint64_t v2302 = *v2303;
            v2302[1] = v2304;
            uint64_t v2305 = v2283[12];
            uint64_t v2306 = (char *)v2281 + v2305;
            uint64_t v2307 = (char *)v2282 + v2305;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2307, 1, v2672))
            {
              uint64_t v2308 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2306, v2307, *(void *)(*(void *)(v2308 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v2306, v2307, v2672);
              __swift_storeEnumTagSinglePayload((uint64_t)v2306, 0, 1, v2672);
            }
            uint64_t v2309 = v2283[13];
            uint64_t v2310 = (char *)v2281 + v2309;
            uint64_t v2311 = (char *)v2282 + v2309;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2282 + v2309, 1, v2672))
            {
              uint64_t v2312 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2310, v2311, *(void *)(*(void *)(v2312 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2672 - 8) + 16))(v2310, v2311, v2672);
              __swift_storeEnumTagSinglePayload((uint64_t)v2310, 0, 1, v2672);
            }
            uint64_t v2313 = v2283[14];
            uint64_t v2314 = (char *)v2281 + v2313;
            uint64_t v2315 = (char *)v2282 + v2313;
            *(void *)uint64_t v2314 = *(void *)v2315;
            v2314[8] = v2315[8];
            uint64_t v2316 = v2283[15];
            uint64_t v2317 = (void *)((char *)v2281 + v2316);
            uint64_t v2318 = (void *)((char *)v2282 + v2316);
            uint64_t v2319 = v2318[1];
            *uint64_t v2317 = *v2318;
            v2317[1] = v2319;
            uint64_t v2320 = v2283[16];
            uint64_t v2321 = (void *)((char *)v2281 + v2320);
            uint64_t v2322 = (void *)((char *)v2282 + v2320);
            uint64_t v2323 = v2322[1];
            void *v2321 = *v2322;
            v2321[1] = v2323;
            uint64_t v2324 = v2283[17];
            uint64_t v2325 = (void *)((char *)v2281 + v2324);
            uint64_t v2326 = (void *)((char *)v2282 + v2324);
            uint64_t v2327 = v2326[1];
            *uint64_t v2325 = *v2326;
            v2325[1] = v2327;
            uint64_t v2328 = v2283[18];
            uint64_t v2329 = (void *)((char *)v2281 + v2328);
            uint64_t v2330 = (void *)((char *)v2282 + v2328);
            uint64_t v2331 = v2330[1];
            *uint64_t v2329 = *v2330;
            v2329[1] = v2331;
            uint64_t v2332 = v2283[19];
            uint64_t v2333 = (void *)((char *)v2281 + v2332);
            uint64_t v2334 = (void *)((char *)v2282 + v2332);
            uint64_t v2335 = v2334[1];
            *uint64_t v2333 = *v2334;
            v2333[1] = v2335;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2281, 0, 1, (uint64_t)v2283);
            char v21 = v2718;
          }
          uint64_t v2336 = v2701[21];
          uint64_t v24 = (uint64_t)v2725;
          uint64_t v2337 = (void *)((char *)v2725 + v2336);
          uint64_t v2338 = (void *)((char *)v21 + v2336);
          uint64_t v2339 = *(void *)((char *)v21 + v2336 + 8);
          if (v2339)
          {
            *uint64_t v2337 = *v2338;
            v2337[1] = v2339;
            uint64_t v2340 = v2338[3];
            v2337[2] = v2338[2];
            v2337[3] = v2340;
            uint64_t v2341 = v2338[5];
            v2337[4] = v2338[4];
            v2337[5] = v2341;
            uint64_t v2342 = v2338[7];
            v2337[6] = v2338[6];
            v2337[7] = v2342;
            uint64_t v2343 = v2338[9];
            v2337[8] = v2338[8];
            v2337[9] = v2343;
            uint64_t v2668 = v2338[11];
            v2337[10] = v2338[10];
            v2337[11] = v2668;
            uint64_t v2697 = v2338[13];
            v2337[12] = v2338[12];
            v2337[13] = v2697;
            uint64_t v2740 = v2338[15];
            v2337[14] = v2338[14];
            v2337[15] = v2740;
            uint64_t v2344 = v2338[17];
            v2337[16] = v2338[16];
            v2337[17] = v2344;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v24 = (uint64_t)v2725;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v21 = v2718;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_513:
            swift_bridgeObjectRetain();
          }
          else
          {
            memcpy(v2337, v2338, 0x90uLL);
          }
          uint64_t v23 = a3;
          uint64_t v145 = v2721;
          goto LABEL_556;
        case 4u:
          uint64_t v76 = v19[1];
          *(void *)uint64_t v24 = *v19;
          *(void *)(v24 + 8) = v76;
          uint64_t v77 = v19[3];
          *(void *)(v24 + 16) = v19[2];
          *(void *)(v24 + 24) = v77;
          uint64_t v78 = (void *)v24;
          uint64_t v79 = v19[5];
          v78[4] = v19[4];
          v78[5] = v79;
          uint64_t v80 = v19[7];
          v78[6] = v19[6];
          v78[7] = v80;
          uint64_t v81 = type metadata accessor for NoteDocument(0);
          uint64_t v82 = *(int *)(v81 + 32);
          uint64_t v83 = (char *)v78 + v82;
          uint64_t v84 = (char *)v19 + v82;
          uint64_t v85 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v85))
          {
            uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
            __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v85);
          }
          uint64_t v145 = v2721;
          uint64_t v24 = (uint64_t)v2725;
          uint64_t v392 = *(int *)(v81 + 36);
          long long v393 = (char *)v2725 + v392;
          char v21 = v19;
          long long v394 = (char *)v19 + v392;
          uint64_t v23 = a3;
          uint64_t v9 = v2726;
          if (!__swift_getEnumTagSinglePayload((uint64_t)v19 + v392, 1, v85)) {
            goto LABEL_75;
          }
          goto LABEL_155;
        case 5u:
          uint64_t v87 = v19[1];
          *(void *)uint64_t v24 = *v19;
          *(void *)(v24 + 8) = v87;
          uint64_t v88 = v19[3];
          *(void *)(v24 + 16) = v19[2];
          *(void *)(v24 + 24) = v88;
          uint64_t v89 = v24;
          uint64_t v90 = v19[5];
          *(void *)(v89 + 32) = v19[4];
          *(void *)(v89 + 40) = v90;
          uint64_t v91 = (int *)type metadata accessor for Reminder(0);
          uint64_t v92 = v91[7];
          uint64_t v93 = (void *)(v89 + v92);
          uint64_t v94 = (char *)v19 + v92;
          uint64_t v95 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v94, 1, v95))
          {
            uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
            __swift_storeEnumTagSinglePayload((uint64_t)v93, 0, 1, v95);
          }
          uint64_t v397 = v91[8];
          uint64_t v24 = (uint64_t)v2725;
          long long v398 = (char *)v2725 + v397;
          long long v399 = (char *)v19 + v397;
          if (__swift_getEnumTagSinglePayload((uint64_t)v19 + v397, 1, v95))
          {
            uint64_t v400 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v398, v399, *(void *)(*(void *)(v400 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v398, v399, v95);
            __swift_storeEnumTagSinglePayload((uint64_t)v398, 0, 1, v95);
          }
          uint64_t v9 = v2726;
          *((unsigned char *)v2725 + v91[9]) = *((unsigned char *)v19 + v91[9]);
          uint64_t v583 = v91[10];
          uint64_t v584 = (void *)((char *)v2725 + v583);
          uint64_t v585 = (void *)((char *)v19 + v583);
          uint64_t v586 = v585[1];
          void *v584 = *v585;
          v584[1] = v586;
          uint64_t v587 = v91[11];
          long long v588 = (void *)((char *)v2725 + v587);
          long long v589 = (void *)((char *)v19 + v587);
          uint64_t v590 = v589[1];
          void *v588 = *v589;
          v588[1] = v590;
          uint64_t v591 = v91[12];
          long long v592 = (char *)v2725 + v591;
          long long v593 = (char *)v19 + v591;
          uint64_t v594 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v593, 1, v594))
          {
            uint64_t v595 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v592, v593, *(void *)(*(void *)(v595 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v594 - 8) + 16))(v592, v593, v594);
            __swift_storeEnumTagSinglePayload((uint64_t)v592, 0, 1, v594);
          }
          uint64_t v145 = v20;
          char v21 = v19;
          uint64_t v23 = a3;
          goto LABEL_556;
        case 6u:
          uint64_t v97 = v19[1];
          *(void *)uint64_t v24 = *v19;
          *(void *)(v24 + 8) = v97;
          uint64_t v98 = (void *)v24;
          uint64_t v99 = v19[3];
          v98[2] = v19[2];
          v98[3] = v99;
          uint64_t v100 = v19[5];
          v98[4] = v19[4];
          v98[5] = v100;
          uint64_t v101 = v19[7];
          v98[6] = v19[6];
          v98[7] = v101;
          uint64_t v102 = (int *)type metadata accessor for PhoneHistory(0);
          uint64_t v103 = v102[10];
          uint64_t v104 = (char *)v98 + v103;
          uint64_t v105 = (char *)v19 + v103;
          uint64_t v106 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v105, 1, v106))
          {
            uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v104, v105, *(void *)(*(void *)(v107 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16))(v104, v105, v106);
            __swift_storeEnumTagSinglePayload((uint64_t)v104, 0, 1, v106);
          }
          uint64_t v401 = v102[11];
          uint64_t v24 = (uint64_t)v2725;
          v402 = (void *)((char *)v2725 + v401);
          uint64_t v403 = (void *)((char *)v19 + v401);
          uint64_t v404 = v403[1];
          void *v402 = *v403;
          v402[1] = v404;
          uint64_t v405 = v102[12];
          uint64_t v406 = (void *)((char *)v2725 + v405);
          uint64_t v407 = (void *)((char *)v19 + v405);
          uint64_t v408 = v407[1];
          void *v406 = *v407;
          v406[1] = v408;
          uint64_t v409 = v102[13];
          uint64_t v410 = (char *)v2725 + v409;
          uint64_t v411 = (char *)v19 + v409;
          uint64_t v412 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v9 = v2726;
          if (__swift_getEnumTagSinglePayload((uint64_t)v411, 1, v412))
          {
            uint64_t v413 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v410, v411, *(void *)(*(void *)(v413 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v412 - 8) + 16))(v410, v411, v412);
            __swift_storeEnumTagSinglePayload((uint64_t)v410, 0, 1, v412);
          }
          uint64_t v23 = a3;
          uint64_t v145 = v2721;
          char v21 = v19;
          goto LABEL_556;
        case 7u:
          uint64_t v108 = v19[1];
          *(void *)uint64_t v24 = *v19;
          *(void *)(v24 + 8) = v108;
          uint64_t v109 = v19[3];
          *(void *)(v24 + 16) = v19[2];
          *(void *)(v24 + 24) = v109;
          uint64_t v110 = v24;
          uint64_t v111 = v19[5];
          *(void *)(v110 + 32) = v19[4];
          *(void *)(v110 + 40) = v111;
          uint64_t v112 = type metadata accessor for VoicemailTranscript(0);
          uint64_t v113 = *(int *)(v112 + 28);
          uint64_t v114 = (void *)(v110 + v113);
          uint64_t v115 = (char *)v19 + v113;
          uint64_t v116 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v115, 1, v116))
          {
            uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v114, v115, *(void *)(*(void *)(v117 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v116 - 8) + 16))(v114, v115, v116);
            __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, v116);
          }
          uint64_t v145 = v2721;
          uint64_t v24 = (uint64_t)v2725;
          uint64_t v414 = *(int *)(v112 + 32);
          uint64_t v415 = (char *)v2725 + v414;
          char v21 = v19;
          uint64_t v416 = (uint64_t)v19 + v414;
          uint64_t v417 = type metadata accessor for URL();
          int v418 = __swift_getEnumTagSinglePayload(v416, 1, v417);
          uint64_t v23 = a3;
          goto LABEL_88;
        case 8u:
          uint64_t v118 = v19[1];
          *(void *)uint64_t v24 = *v19;
          *(void *)(v24 + 8) = v118;
          uint64_t v119 = v19[3];
          *(void *)(v24 + 16) = v19[2];
          *(void *)(v24 + 24) = v119;
          uint64_t v120 = v19[5];
          *(void *)(v24 + 32) = v19[4];
          *(void *)(v24 + 40) = v120;
          uint64_t v121 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
          uint64_t v122 = (void *)(v24 + v121);
          int v123 = (char *)v19 + v121;
          uint64_t v124 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v123, 1, v124))
          {
            uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v122, v123, *(void *)(*(void *)(v125 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v124 - 8) + 16))(v122, v123, v124);
            __swift_storeEnumTagSinglePayload((uint64_t)v122, 0, 1, v124);
          }
          uint64_t v145 = v20;
          char v21 = v19;
          uint64_t v23 = a3;
          uint64_t v9 = v2726;
          goto LABEL_556;
        case 9u:
          uint64_t v126 = v19[1];
          *(void *)uint64_t v24 = *v19;
          *(void *)(v24 + 8) = v126;
          uint64_t v127 = v19[3];
          *(void *)(v24 + 16) = v19[2];
          *(void *)(v24 + 24) = v127;
          uint64_t v128 = (int *)type metadata accessor for VoiceMemo(0);
          uint64_t v129 = v128[6];
          uint64_t v130 = (void *)(v24 + v129);
          uint64_t v131 = (char *)v19 + v129;
          uint64_t v132 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v131, 1, v132))
          {
            uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v130, v131, *(void *)(*(void *)(v133 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v132 - 8) + 16))(v130, v131, v132);
            __swift_storeEnumTagSinglePayload((uint64_t)v130, 0, 1, v132);
          }
          uint64_t v145 = v20;
          uint64_t v419 = v128[7];
          uint64_t v420 = v24 + v419;
          char v21 = v19;
          uint64_t v421 = (char *)v19 + v419;
          *(void *)uint64_t v420 = *(void *)v421;
          *(unsigned char *)(v420 + 8) = v421[8];
          uint64_t v422 = v128[8];
          uint64_t v415 = (char *)(v24 + v422);
          uint64_t v416 = (uint64_t)v19 + v422;
          uint64_t v417 = type metadata accessor for URL();
          int v418 = __swift_getEnumTagSinglePayload(v416, 1, v417);
          uint64_t v23 = a3;
LABEL_88:
          uint64_t v9 = v2726;
          if (v418) {
            goto LABEL_89;
          }
          goto LABEL_159;
        case 0xAu:
          uint64_t v134 = v19[1];
          *(void *)uint64_t v24 = *v19;
          *(void *)(v24 + 8) = v134;
          uint64_t v135 = v19[3];
          *(void *)(v24 + 16) = v19[2];
          *(void *)(v24 + 24) = v135;
          uint64_t v136 = (int *)type metadata accessor for Safari(0);
          uint64_t v137 = v136[6];
          uint64_t v138 = (void *)(v24 + v137);
          uint64_t v139 = (char *)v19 + v137;
          uint64_t v140 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v140))
          {
            uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v138, v139, *(void *)(*(void *)(v141 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v140);
          }
          uint64_t v426 = v136[7];
          long long v427 = (void *)(v24 + v426);
          char v21 = v19;
          uint64_t v428 = (void *)((char *)v19 + v426);
          uint64_t v429 = v428[1];
          void *v427 = *v428;
          v427[1] = v429;
          uint64_t v430 = v136[8];
          uint64_t v431 = (void *)(v24 + v430);
          uint64_t v432 = (void *)((char *)v19 + v430);
          uint64_t v433 = v432[1];
          void *v431 = *v432;
          v431[1] = v433;
          uint64_t v434 = v136[9];
          uint64_t v435 = (void *)(v24 + v434);
          uint64_t v436 = (char *)v19 + v434;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v9 = v2726;
          if (__swift_getEnumTagSinglePayload((uint64_t)v436, 1, v140))
          {
            uint64_t v437 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v435, v436, *(void *)(*(void *)(v437 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v435, v436, v140);
            __swift_storeEnumTagSinglePayload((uint64_t)v435, 0, 1, v140);
          }
          goto LABEL_175;
        case 0xBu:
          uint64_t v142 = v19[1];
          *uint64_t v16 = *v19;
          v16[1] = v142;
          uint64_t v143 = (void *)v19[2];
          v16[2] = v143;
          swift_bridgeObjectRetain();
          id v144 = v143;
          uint64_t v145 = v20;
          goto LABEL_118;
        case 0xCu:
          uint64_t v146 = v19[1];
          *(void *)uint64_t v24 = *v19;
          *(void *)(v24 + 8) = v146;
          uint64_t v147 = v19[3];
          *(void *)(v24 + 16) = v19[2];
          *(void *)(v24 + 24) = v147;
          uint64_t v148 = v24;
          uint64_t v149 = v19[5];
          *(void *)(v148 + 32) = v19[4];
          *(void *)(v148 + 40) = v149;
          uint64_t v150 = (int *)type metadata accessor for WalletTransaction(0);
          uint64_t v151 = v150[7];
          uint64_t v152 = (void *)(v148 + v151);
          uint64_t v153 = (char *)v19 + v151;
          uint64_t v154 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v153, 1, v154))
          {
            uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v152, v153, *(void *)(*(void *)(v155 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v154 - 8) + 16))(v152, v153, v154);
            __swift_storeEnumTagSinglePayload((uint64_t)v152, 0, 1, v154);
          }
          uint64_t v24 = (uint64_t)v2725;
          uint64_t v9 = v2726;
          uint64_t v438 = v150[8];
          long long v439 = (void *)((char *)v2725 + v438);
          char v21 = v19;
          long long v440 = (void *)((char *)v19 + v438);
          uint64_t v441 = v440[1];
          void *v439 = *v440;
          v439[1] = v441;
          uint64_t v442 = v150[9];
          uint64_t v443 = (void *)((char *)v2725 + v442);
          uint64_t v444 = (void *)((char *)v19 + v442);
          uint64_t v445 = v444[1];
          void *v443 = *v444;
          v443[1] = v445;
          uint64_t v446 = v150[10];
          uint64_t v447 = (void *)((char *)v2725 + v446);
          uint64_t v448 = (void *)((char *)v19 + v446);
          uint64_t v449 = v448[1];
          void *v447 = *v448;
          v447[1] = v449;
          uint64_t v450 = v150[11];
          uint64_t v451 = (char *)v2725 + v450;
          long long v452 = (char *)v19 + v450;
          *(_OWORD *)uint64_t v451 = *(_OWORD *)v452;
          *(void *)(v451 + 13) = *(void *)(v452 + 13);
          uint64_t v453 = v150[12];
          long long v454 = (void *)((char *)v2725 + v453);
          long long v455 = (void *)((char *)v19 + v453);
          uint64_t v456 = v455[1];
          *long long v454 = *v455;
          v454[1] = v456;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_513;
        case 0xDu:
          uint64_t v156 = v19[1];
          *(void *)uint64_t v24 = *v19;
          *(void *)(v24 + 8) = v156;
          uint64_t v157 = v19[3];
          *(void *)(v24 + 16) = v19[2];
          *(void *)(v24 + 24) = v157;
          uint64_t v158 = v24;
          uint64_t v159 = v19[5];
          *(void *)(v158 + 32) = v19[4];
          *(void *)(v158 + 40) = v159;
          uint64_t v160 = (int *)type metadata accessor for WalletPass(0);
          uint64_t v161 = v160[7];
          uint64_t v162 = (void *)(v158 + v161);
          uint64_t v163 = (char *)v19 + v161;
          uint64_t v164 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v163, 1, v164))
          {
            uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v162, v163, *(void *)(*(void *)(v165 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v164 - 8) + 16))(v162, v163, v164);
            __swift_storeEnumTagSinglePayload((uint64_t)v162, 0, 1, v164);
          }
          uint64_t v145 = v2721;
          uint64_t v24 = (uint64_t)v2725;
          uint64_t v9 = v2726;
          uint64_t v457 = v160[8];
          uint64_t v458 = (void *)((char *)v2725 + v457);
          char v21 = v19;
          uint64_t v459 = (void *)((char *)v19 + v457);
          uint64_t v460 = v459[1];
          *uint64_t v458 = *v459;
          v458[1] = v460;
          *(void *)((char *)v2725 + v160[9]) = *(void *)((char *)v19 + v160[9]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v23 = a3;
          goto LABEL_556;
        case 0xEu:
          uint64_t v166 = v19[1];
          *uint64_t v16 = *v19;
          v16[1] = v166;
          uint64_t v167 = v19[3];
          v16[2] = v19[2];
          v16[3] = v167;
          uint64_t v168 = v19[5];
          v16[4] = v19[4];
          uint64_t v16[5] = v168;
          uint64_t v169 = v19[7];
          v16[6] = v19[6];
          v16[7] = v169;
          uint64_t v170 = v19[9];
          _OWORD v16[8] = v19[8];
          v16[9] = v170;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v23 = a3;
          swift_bridgeObjectRetain();
          goto LABEL_58;
        case 0xFu:
          uint64_t v171 = v19[1];
          *(void *)uint64_t v24 = *v19;
          *(void *)(v24 + 8) = v171;
          uint64_t v172 = v19;
          uint64_t v173 = v24;
          uint64_t v174 = v19[3];
          *(void *)(v173 + 16) = v19[2];
          *(void *)(v173 + 24) = v174;
          uint64_t v2702 = v19[5];
          *(void *)(v173 + 32) = v19[4];
          *(void *)(v173 + 40) = v2702;
          uint64_t v175 = v19[7];
          *(void *)(v173 + 48) = v19[6];
          *(void *)(v173 + 56) = v175;
          uint64_t v2686 = v19[9];
          *(void *)(v173 + 64) = v19[8];
          *(void *)(v173 + 72) = v2686;
          uint64_t v2673 = v19[11];
          *(void *)(v173 + 80) = v19[10];
          *(void *)(v173 + 88) = v2673;
          *(unsigned char *)(v173 + 96) = *((unsigned char *)v19 + 96);
          uint64_t v176 = v19[14];
          *(void *)(v173 + 104) = v19[13];
          *(void *)(v173 + 112) = v176;
          long long v177 = (int *)type metadata accessor for FlightReservation(0);
          uint64_t v178 = v177[13];
          long long v179 = (void *)(v173 + v178);
          long long v180 = (char *)v19 + v178;
          uint64_t v181 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v180, 1, v181))
          {
            uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v179, v180, *(void *)(*(void *)(v182 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v181 - 8) + 16))(v179, v180, v181);
            __swift_storeEnumTagSinglePayload((uint64_t)v179, 0, 1, v181);
          }
          uint64_t v461 = v177[14];
          uint64_t v462 = (char *)v2725 + v461;
          uint64_t v463 = (char *)v172 + v461;
          if (__swift_getEnumTagSinglePayload((uint64_t)v172 + v461, 1, v181))
          {
            uint64_t v464 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v462, v463, *(void *)(*(void *)(v464 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 16))(v462, v463, v181);
            __swift_storeEnumTagSinglePayload((uint64_t)v462, 0, 1, v181);
          }
          uint64_t v9 = v2726;
          uint64_t v596 = v177[15];
          uint64_t v597 = (void *)((char *)v2725 + v596);
          uint64_t v598 = v172;
          uint64_t v599 = (void *)((char *)v172 + v596);
          uint64_t v600 = v599[1];
          *uint64_t v597 = *v599;
          v597[1] = v600;
          uint64_t v601 = v177[16];
          v602 = (void *)((char *)v2725 + v601);
          uint64_t v603 = (void *)((char *)v172 + v601);
          uint64_t v604 = v603[1];
          void *v602 = *v603;
          v602[1] = v604;
          uint64_t v605 = v177[17];
          long long v606 = (void *)((char *)v2725 + v605);
          uint64_t v607 = (void *)((char *)v172 + v605);
          uint64_t v608 = v607[1];
          *long long v606 = *v607;
          v606[1] = v608;
          uint64_t v609 = v177[18];
          v2728 = (char *)v2725 + v609;
          uint64_t v2711 = (uint64_t)v598 + v609;
          uint64_t v610 = type metadata accessor for DateComponents();
          uint64_t v611 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v610 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v611(v2728, v2711, v610);
          v611((char *)v2725 + v177[19], (uint64_t)v598 + v177[19], v610);
          uint64_t v612 = v177[20];
          uint64_t v613 = (void *)((char *)v2725 + v612);
          long long v614 = (void *)((char *)v598 + v612);
          uint64_t v615 = v614[1];
          *uint64_t v613 = *v614;
          v613[1] = v615;
          uint64_t v616 = v177[21];
          long long v617 = (void *)((char *)v2725 + v616);
          long long v618 = (void *)((char *)v598 + v616);
          uint64_t v2729 = v618[1];
          void *v617 = *v618;
          v617[1] = v2729;
          uint64_t v619 = v177[22];
          long long v620 = (void *)((char *)v2725 + v619);
          uint64_t v621 = (void *)((char *)v598 + v619);
          uint64_t v2712 = v621[1];
          *long long v620 = *v621;
          v620[1] = v2712;
          uint64_t v622 = v177[23];
          uint64_t v623 = (void *)((char *)v2725 + v622);
          uint64_t v624 = (void *)((char *)v598 + v622);
          uint64_t v2694 = v624[1];
          *uint64_t v623 = *v624;
          v623[1] = v2694;
          uint64_t v625 = v177[24];
          uint64_t v626 = (void *)((char *)v2725 + v625);
          uint64_t v627 = (void *)((char *)v598 + v625);
          uint64_t v2681 = v627[1];
          void *v626 = *v627;
          v626[1] = v2681;
          uint64_t v628 = v177[25];
          uint64_t v629 = (void *)((char *)v2725 + v628);
          long long v630 = (void *)((char *)v598 + v628);
          uint64_t v2666 = v630[1];
          void *v629 = *v630;
          v629[1] = v2666;
          uint64_t v631 = v177[26];
          long long v632 = (void *)((char *)v2725 + v631);
          long long v633 = (void *)((char *)v598 + v631);
          uint64_t v2648 = v633[1];
          *long long v632 = *v633;
          v632[1] = v2648;
          uint64_t v634 = v177[27];
          long long v635 = (void *)((char *)v2725 + v634);
          long long v636 = (void *)((char *)v598 + v634);
          uint64_t v2621 = (void *)v636[1];
          *long long v635 = *v636;
          v635[1] = v2621;
          uint64_t v637 = v177[28];
          uint64_t v638 = (void *)((char *)v2725 + v637);
          uint64_t v639 = (void *)((char *)v598 + v637);
          uint64_t v2607 = (void *)v639[1];
          void *v638 = *v639;
          v638[1] = v2607;
          uint64_t v640 = v177[29];
          uint64_t v641 = (void *)((char *)v2725 + v640);
          uint64_t v642 = (void *)((char *)v598 + v640);
          __dstc = (void *)v642[1];
          *uint64_t v641 = *v642;
          v641[1] = __dstc;
          uint64_t v643 = v177[30];
          uint64_t v644 = (void *)((char *)v2725 + v643);
          long long v645 = (void *)((char *)v598 + v643);
          uint64_t v2583 = (void *)v645[1];
          void *v644 = *v645;
          v644[1] = v2583;
          uint64_t v646 = v177[31];
          long long v647 = (void *)((char *)v2725 + v646);
          long long v648 = (void *)((char *)v598 + v646);
          uint64_t v2576 = v648[1];
          void *v647 = *v648;
          v647[1] = v2576;
          uint64_t v649 = v177[32];
          long long v650 = (void *)((char *)v2725 + v649);
          long long v651 = (void *)((char *)v598 + v649);
          uint64_t v652 = v651[1];
          *long long v650 = *v651;
          v650[1] = v652;
          *(void *)((char *)v2725 + v177[33]) = *(void *)((char *)v598 + v177[33]);
          *(void *)((char *)v2725 + v177[34]) = *(void *)((char *)v598 + v177[34]);
          uint64_t v653 = v177[35];
          v654 = (void *)((char *)v2725 + v653);
          uint64_t v655 = (void *)((char *)v598 + v653);
          uint64_t v656 = v655[1];
          void *v654 = *v655;
          v654[1] = v656;
          uint64_t v657 = v177[36];
          uint64_t v658 = (void *)((char *)v2725 + v657);
          uint64_t v659 = (void *)((char *)v598 + v657);
          uint64_t v660 = v659[1];
          void *v658 = *v659;
          v658[1] = v660;
          uint64_t v661 = v177[37];
          uint64_t v662 = (void *)((char *)v2725 + v661);
          uint64_t v663 = (void *)((char *)v598 + v661);
          uint64_t v664 = v663[1];
          void *v662 = *v663;
          v662[1] = v664;
          uint64_t v665 = v177[38];
          uint64_t v666 = (char *)v2725 + v665;
          v2720 = v598;
          uint64_t v667 = (char *)v598 + v665;
          uint64_t v668 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v667, 1, v668))
          {
            uint64_t v669 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v666, v667, *(void *)(*(void *)(v669 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v668 - 8) + 16))(v666, v667, v668);
            __swift_storeEnumTagSinglePayload((uint64_t)v666, 0, 1, v668);
          }
          uint64_t v731 = v177[39];
          uint64_t v24 = (uint64_t)v2725;
          uint64_t v732 = (void *)((char *)v2725 + v731);
          uint64_t v733 = (void *)((char *)v2720 + v731);
          uint64_t v734 = v733[1];
          *uint64_t v732 = *v733;
          v732[1] = v734;
          uint64_t v735 = v177[40];
          uint64_t v736 = (void *)((char *)v2725 + v735);
          uint64_t v737 = (void *)((char *)v2720 + v735);
          uint64_t v738 = v737[1];
          *uint64_t v736 = *v737;
          v736[1] = v738;
          uint64_t v739 = v177[41];
          uint64_t v740 = (char *)v2725 + v739;
          uint64_t v741 = (uint64_t)v2720 + v739;
          v740[8] = *(unsigned char *)(v741 + 8);
          *(void *)uint64_t v740 = *(void *)v741;
          uint64_t v742 = v177[42];
          uint64_t v743 = (void *)((char *)v2725 + v742);
          uint64_t v744 = (void *)((char *)v2720 + v742);
          uint64_t v745 = v744[1];
          *uint64_t v743 = *v744;
          v743[1] = v745;
          uint64_t v746 = v177[43];
          uint64_t v747 = (char *)v2725 + v746;
          uint64_t v748 = (uint64_t)v2720 + v746;
          *(_OWORD *)uint64_t v747 = *(_OWORD *)v748;
          *(void *)(v747 + 13) = *(void *)(v748 + 13);
          uint64_t v749 = v177[44];
          uint64_t v750 = (void *)((char *)v2725 + v749);
          uint64_t v751 = (void *)((char *)v2720 + v749);
          uint64_t v752 = v751[1];
          *uint64_t v750 = *v751;
          v750[1] = v752;
          uint64_t v753 = v177[45];
          uint64_t v754 = (void *)((char *)v2725 + v753);
          uint64_t v755 = (void *)((char *)v2720 + v753);
          uint64_t v756 = v755[1];
          *uint64_t v754 = *v755;
          v754[1] = v756;
          uint64_t v757 = v177[46];
          uint64_t v758 = (void *)((char *)v2725 + v757);
          uint64_t v759 = (void *)((char *)v2720 + v757);
          uint64_t v760 = v759[1];
          *uint64_t v758 = *v759;
          v758[1] = v760;
          uint64_t v761 = v177[47];
          long long v762 = (void *)((char *)v2725 + v761);
          uint64_t v763 = (void *)((char *)v2720 + v761);
          uint64_t v764 = v763[1];
          *long long v762 = *v763;
          v762[1] = v764;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v21 = v2720;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v765 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
          *(void *)((char *)v2725 + *(int *)(v765 + 48)) = *(void *)((char *)v2720 + *(int *)(v765 + 48));
          swift_bridgeObjectRetain();
LABEL_175:
          uint64_t v23 = a3;
          uint64_t v145 = v2721;
          goto LABEL_556;
        case 0x10u:
          uint64_t v183 = v19[1];
          *(void *)uint64_t v24 = *v19;
          *(void *)(v24 + 8) = v183;
          uint64_t v184 = v24;
          uint64_t v185 = v19[3];
          *(void *)(v184 + 16) = v19[2];
          *(void *)(v184 + 24) = v185;
          uint64_t v2703 = v19[5];
          *(void *)(v184 + 32) = v19[4];
          *(void *)(v184 + 40) = v2703;
          uint64_t v2687 = v19[7];
          *(void *)(v184 + 48) = v19[6];
          *(void *)(v184 + 56) = v2687;
          uint64_t v2674 = v19[9];
          *(void *)(v184 + 64) = v19[8];
          *(void *)(v184 + 72) = v2674;
          uint64_t v2660 = v19[11];
          *(void *)(v184 + 80) = v19[10];
          *(void *)(v184 + 88) = v2660;
          *(unsigned char *)(v184 + 96) = *((unsigned char *)v19 + 96);
          uint64_t v186 = v19[14];
          *(void *)(v184 + 104) = v19[13];
          *(void *)(v184 + 112) = v186;
          uint64_t v187 = v19[16];
          *(void *)(v184 + 120) = v19[15];
          *(void *)(v184 + 128) = v187;
          uint64_t v188 = (int *)type metadata accessor for HotelReservation(0);
          uint64_t v189 = v188[14];
          long long v190 = (void *)(v184 + v189);
          long long v191 = (char *)v19 + v189;
          uint64_t v192 = type metadata accessor for DateComponents();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v193 = v192;
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v191, 1, v192))
          {
            uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v190, v191, *(void *)(*(void *)(v194 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(v190, v191, v192);
            __swift_storeEnumTagSinglePayload((uint64_t)v190, 0, 1, v192);
          }
          uint64_t v465 = v188[15];
          uint64_t v466 = (char *)v2725 + v465;
          uint64_t v467 = v21;
          uint64_t v468 = (char *)v21 + v465;
          int v469 = __swift_getEnumTagSinglePayload((uint64_t)v468, 1, v192);
          uint64_t v9 = v2726;
          if (v469)
          {
            uint64_t v470 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v466, v468, *(void *)(*(void *)(v470 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 16))(v466, v468, v193);
            __swift_storeEnumTagSinglePayload((uint64_t)v466, 0, 1, v193);
          }
          uint64_t v670 = v188[16];
          uint64_t v671 = (void *)((char *)v2725 + v670);
          v672 = (void *)((char *)v467 + v670);
          uint64_t v673 = v672[1];
          void *v671 = *v672;
          v671[1] = v673;
          uint64_t v674 = v188[17];
          uint64_t v675 = (void *)((char *)v2725 + v674);
          uint64_t v676 = (void *)((char *)v467 + v674);
          uint64_t v2713 = v676[1];
          void *v675 = *v676;
          v675[1] = v2713;
          uint64_t v677 = v188[18];
          uint64_t v678 = (void *)((char *)v2725 + v677);
          uint64_t v679 = (void *)((char *)v467 + v677);
          uint64_t v2695 = v679[1];
          *uint64_t v678 = *v679;
          v678[1] = v2695;
          uint64_t v680 = v188[19];
          uint64_t v681 = (void *)((char *)v2725 + v680);
          uint64_t v682 = (void *)((char *)v467 + v680);
          uint64_t v2682 = v682[1];
          *uint64_t v681 = *v682;
          v681[1] = v2682;
          uint64_t v683 = v188[20];
          uint64_t v684 = (void *)((char *)v2725 + v683);
          long long v685 = (void *)((char *)v467 + v683);
          uint64_t v686 = v685[1];
          void *v684 = *v685;
          v684[1] = v686;
          *(void *)((char *)v2725 + v188[21]) = *(void *)((char *)v467 + v188[21]);
          *(void *)((char *)v2725 + v188[22]) = *(void *)((char *)v467 + v188[22]);
          uint64_t v687 = v188[23];
          long long v688 = (char *)v2725 + v687;
          uint64_t v689 = (uint64_t)v467 + v687;
          *(void *)long long v688 = *(void *)v689;
          v688[8] = *(unsigned char *)(v689 + 8);
          uint64_t v690 = v188[24];
          uint64_t v691 = (char *)v2725 + v690;
          uint64_t v692 = (uint64_t)v467 + v690;
          *(void *)uint64_t v691 = *(void *)v692;
          v691[8] = *(unsigned char *)(v692 + 8);
          uint64_t v693 = v188[25];
          uint64_t v694 = (void *)((char *)v2725 + v693);
          uint64_t v695 = (void *)((char *)v467 + v693);
          uint64_t v696 = v695[1];
          *uint64_t v694 = *v695;
          v694[1] = v696;
          uint64_t v697 = v188[26];
          uint64_t v698 = (void *)((char *)v2725 + v697);
          long long v699 = (void *)((char *)v467 + v697);
          uint64_t v700 = v699[1];
          *uint64_t v698 = *v699;
          v698[1] = v700;
          uint64_t v701 = v188[27];
          long long v702 = (void *)((char *)v2725 + v701);
          long long v703 = (void *)((char *)v467 + v701);
          uint64_t v704 = v703[1];
          *long long v702 = *v703;
          v702[1] = v704;
          uint64_t v705 = v188[28];
          uint64_t v706 = (void *)((char *)v2725 + v705);
          uint64_t v707 = (void *)((char *)v467 + v705);
          uint64_t v708 = v707[1];
          *uint64_t v706 = *v707;
          v706[1] = v708;
          uint64_t v709 = v188[29];
          uint64_t v710 = (char *)v2725 + v709;
          uint64_t v711 = (uint64_t)v467 + v709;
          *(void *)uint64_t v710 = *(void *)v711;
          v710[8] = *(unsigned char *)(v711 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v24 = (uint64_t)v2725;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v21 = v467;
          swift_bridgeObjectRetain();
          goto LABEL_513;
        case 0x11u:
          uint64_t v195 = v19[1];
          *(void *)uint64_t v24 = *v19;
          *(void *)(v24 + 8) = v195;
          uint64_t v196 = v24;
          uint64_t v197 = v19[3];
          *(void *)(v196 + 16) = v19[2];
          *(void *)(v196 + 24) = v197;
          uint64_t v198 = v19[5];
          *(void *)(v196 + 32) = v19[4];
          *(void *)(v196 + 40) = v198;
          uint64_t v2704 = v19[7];
          *(void *)(v196 + 48) = v19[6];
          *(void *)(v196 + 56) = v2704;
          uint64_t v2688 = v19[9];
          *(void *)(v196 + 64) = v19[8];
          *(void *)(v196 + 72) = v2688;
          uint64_t v2675 = v19[11];
          *(void *)(v196 + 80) = v19[10];
          *(void *)(v196 + 88) = v2675;
          *(unsigned char *)(v196 + 96) = *((unsigned char *)v19 + 96);
          uint64_t v199 = v19[14];
          *(void *)(v196 + 104) = v19[13];
          *(void *)(v196 + 112) = v199;
          uint64_t v200 = v19[16];
          *(void *)(v196 + 120) = v19[15];
          *(void *)(v196 + 128) = v200;
          uint64_t v201 = (int *)type metadata accessor for RestaurantReservation(0);
          uint64_t v202 = v201[14];
          uint64_t v2661 = (void *)(v196 + v202);
          uint64_t v203 = (char *)v19 + v202;
          uint64_t v204 = type metadata accessor for DateComponents();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v203, 1, v204))
          {
            uint64_t v205 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v2661, v203, *(void *)(*(void *)(v205 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v204 - 8) + 16))(v2661, v203, v204);
            __swift_storeEnumTagSinglePayload((uint64_t)v2661, 0, 1, v204);
          }
          uint64_t v24 = (uint64_t)v2725;
          uint64_t v9 = v2726;
          uint64_t v471 = v201[15];
          uint64_t v472 = (void *)((char *)v2725 + v471);
          uint64_t v473 = v21;
          uint64_t v474 = (void *)((char *)v21 + v471);
          uint64_t v475 = v474[1];
          *uint64_t v472 = *v474;
          v472[1] = v475;
          uint64_t v476 = v201[16];
          uint64_t v477 = (void *)((char *)v2725 + v476);
          uint64_t v478 = (void *)((char *)v21 + v476);
          uint64_t v479 = v478[1];
          *uint64_t v477 = *v478;
          v477[1] = v479;
          uint64_t v480 = v201[17];
          long long v481 = (void *)((char *)v2725 + v480);
          long long v482 = (void *)((char *)v21 + v480);
          uint64_t v2727 = v482[1];
          *long long v481 = *v482;
          v481[1] = v2727;
          uint64_t v483 = v201[18];
          long long v484 = (void *)((char *)v2725 + v483);
          long long v485 = (void *)((char *)v21 + v483);
          uint64_t v486 = v485[1];
          void *v484 = *v485;
          v484[1] = v486;
          uint64_t v487 = v201[19];
          uint64_t v488 = (void *)((char *)v2725 + v487);
          long long v489 = (void *)((char *)v21 + v487);
          uint64_t v490 = v489[1];
          *uint64_t v488 = *v489;
          v488[1] = v490;
          *(void *)((char *)v2725 + v201[20]) = *(void *)((char *)v473 + v201[20]);
          uint64_t v491 = v201[21];
          uint64_t v492 = (void *)((char *)v2725 + v491);
          uint64_t v493 = (void *)((char *)v473 + v491);
          uint64_t v494 = v493[1];
          void *v492 = *v493;
          v492[1] = v494;
          uint64_t v495 = v201[22];
          uint64_t v496 = (void *)((char *)v2725 + v495);
          long long v497 = (void *)((char *)v473 + v495);
          uint64_t v498 = v497[1];
          void *v496 = *v497;
          v496[1] = v498;
          uint64_t v499 = v201[23];
          long long v500 = (void *)((char *)v2725 + v499);
          long long v501 = (void *)((char *)v473 + v499);
          uint64_t v502 = v501[1];
          void *v500 = *v501;
          v500[1] = v502;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v21 = v473;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v23 = a3;
          uint64_t v145 = v2721;
          goto LABEL_556;
        case 0x12u:
          uint64_t v206 = v19[1];
          *uint64_t v16 = *v19;
          v16[1] = v206;
          uint64_t v207 = v19[3];
          v16[2] = v19[2];
          v16[3] = v207;
          uint64_t v208 = v19[5];
          v16[4] = v19[4];
          uint64_t v16[5] = v208;
          uint64_t v209 = v19[7];
          v16[6] = v19[6];
          v16[7] = v209;
          uint64_t v210 = v19[9];
          _OWORD v16[8] = v19[8];
          v16[9] = v210;
          uint64_t v211 = v19[11];
          v16[10] = v19[10];
          v16[11] = v211;
          uint64_t v212 = v19[13];
          v16[12] = v19[12];
          v16[13] = v212;
          uint64_t v213 = v19[15];
          v16[14] = v19[14];
          v16[15] = v213;
          *((unsigned char *)v16 + 128) = *((unsigned char *)v19 + 128);
          *(_WORD *)((char *)v16 + 129) = *(_WORD *)((char *)v19 + 129);
          uint64_t v214 = v19[18];
          v16[17] = v19[17];
          v16[18] = v214;
          uint64_t v215 = v19[20];
          uint64_t v216 = v19[21];
          v16[19] = v19[19];
          v16[20] = v215;
          uint64_t v217 = v19[22];
          v16[21] = v216;
          v16[22] = v217;
          uint64_t v218 = v19[24];
          v16[23] = v19[23];
          v16[24] = v218;
          uint64_t v219 = v19[26];
          v16[25] = v19[25];
          v16[26] = v219;
          uint64_t v220 = v19[28];
          v16[27] = v19[27];
          v16[28] = v220;
          uint64_t v221 = v19[30];
          v16[29] = v19[29];
          v16[30] = v221;
          uint64_t v222 = v19[32];
          v16[31] = v19[31];
          v16[32] = v222;
          uint64_t v2705 = v19[34];
          v16[33] = v19[33];
          v16[34] = v2705;
          uint64_t v2689 = v19[36];
          v16[35] = v19[35];
          v16[36] = v2689;
          uint64_t v2676 = v19[38];
          v16[37] = v19[37];
          v16[38] = v2676;
          uint64_t v2662 = v19[40];
          v16[39] = v19[39];
          v16[40] = v2662;
          uint64_t v2640 = v19[42];
          v16[41] = v19[41];
          v16[42] = v2640;
          uint64_t v223 = v19[44];
          v16[43] = v19[43];
          v16[44] = v223;
          uint64_t v224 = v19[46];
          v16[45] = v19[45];
          v16[46] = v224;
          uint64_t v225 = v19[47];
          *((unsigned char *)v16 + 384) = *((unsigned char *)v19 + 384);
          v16[47] = v225;
          uint64_t v226 = v19[50];
          v16[49] = v19[49];
          v16[50] = v226;
          uint64_t v227 = v19[52];
          v16[51] = v19[51];
          v16[52] = v227;
          uint64_t v228 = type metadata accessor for RentalCarReservation(0);
          uint64_t v229 = *(int *)(v228 + 140);
          long long v230 = (char *)v16 + v229;
          uint64_t v231 = (char *)v19 + v229;
          uint64_t v232 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v231, 1, v232))
          {
            uint64_t v233 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v230, v231, *(void *)(*(void *)(v233 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v232 - 8) + 16))(v230, v231, v232);
            __swift_storeEnumTagSinglePayload((uint64_t)v230, 0, 1, v232);
          }
          uint64_t v145 = v2721;
          uint64_t v24 = (uint64_t)v2725;
          uint64_t v503 = *(int *)(v228 + 144);
          uint64_t v504 = (char *)v2725 + v503;
          uint64_t v505 = (char *)v19 + v503;
          uint64_t v9 = v2726;
          if (!__swift_getEnumTagSinglePayload((uint64_t)v19 + v503, 1, v232)) {
            goto LABEL_165;
          }
          uint64_t v506 = &demangling cache variable for type metadata for Date?;
          goto LABEL_164;
        case 0x13u:
          uint64_t v234 = v19[1];
          *uint64_t v16 = *v19;
          v16[1] = v234;
          uint64_t v235 = v19[3];
          v16[2] = v19[2];
          v16[3] = v235;
          uint64_t v236 = v19[5];
          v16[4] = v19[4];
          uint64_t v16[5] = v236;
          uint64_t v237 = v19[7];
          v16[6] = v19[6];
          v16[7] = v237;
          uint64_t v238 = v19[9];
          _OWORD v16[8] = v19[8];
          v16[9] = v238;
          uint64_t v239 = v19[11];
          v16[10] = v19[10];
          v16[11] = v239;
          uint64_t v240 = v19[13];
          v16[12] = v19[12];
          v16[13] = v240;
          uint64_t v241 = v19[15];
          v16[14] = v19[14];
          v16[15] = v241;
          *((unsigned char *)v16 + 128) = *((unsigned char *)v19 + 128);
          *(_WORD *)((char *)v16 + 129) = *(_WORD *)((char *)v19 + 129);
          uint64_t v242 = v19[18];
          v16[17] = v19[17];
          v16[18] = v242;
          uint64_t v243 = v19[20];
          uint64_t v244 = v19[21];
          v16[19] = v19[19];
          v16[20] = v243;
          uint64_t v245 = v19[22];
          v16[21] = v244;
          v16[22] = v245;
          uint64_t v246 = v19[24];
          v16[23] = v19[23];
          v16[24] = v246;
          uint64_t v247 = v19[26];
          v16[25] = v19[25];
          v16[26] = v247;
          uint64_t v2690 = v19[28];
          v16[27] = v19[27];
          v16[28] = v2690;
          uint64_t v2677 = v19[30];
          v16[29] = v19[29];
          v16[30] = v2677;
          uint64_t v2663 = v19[32];
          v16[31] = v19[31];
          v16[32] = v2663;
          uint64_t v2641 = v19[34];
          v16[33] = v19[33];
          v16[34] = v2641;
          uint64_t v249 = v19[35];
          uint64_t v248 = v19[36];
          *(unsigned char *)(v24 + 296) = *((unsigned char *)v19 + 296);
          *(void *)(v24 + 280) = v249;
          *(void *)(v24 + 288) = v248;
          uint64_t v2706 = type metadata accessor for TicketedTransportation(0);
          v2719 = v19;
          uint64_t v250 = *(int *)(v2706 + 112);
          uint64_t v251 = (void *)(v24 + v250);
          uint64_t v252 = (char *)v19 + v250;
          uint64_t v253 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v252, 1, v253))
          {
            uint64_t v254 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v251, v252, *(void *)(*(void *)(v254 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v253 - 8) + 16))(v251, v252, v253);
            __swift_storeEnumTagSinglePayload((uint64_t)v251, 0, 1, v253);
          }
          uint64_t v145 = v2721;
          uint64_t v507 = *(int *)(v2706 + 116);
          goto LABEL_115;
        case 0x14u:
          uint64_t v255 = v19[1];
          *uint64_t v16 = *v19;
          v16[1] = v255;
          uint64_t v256 = v19[3];
          v16[2] = v19[2];
          v16[3] = v256;
          uint64_t v257 = v19[5];
          v16[4] = v19[4];
          uint64_t v16[5] = v257;
          uint64_t v258 = v19[7];
          v16[6] = v19[6];
          v16[7] = v258;
          uint64_t v259 = v16;
          uint64_t v260 = v19[9];
          _OWORD v16[8] = v19[8];
          v16[9] = v260;
          uint64_t v261 = v19[11];
          v16[10] = v19[10];
          v16[11] = v261;
          uint64_t v262 = v19[13];
          v16[12] = v19[12];
          v16[13] = v262;
          uint64_t v263 = v19[15];
          v16[14] = v19[14];
          v16[15] = v263;
          *((unsigned char *)v16 + 128) = *((unsigned char *)v19 + 128);
          *(_WORD *)((char *)v16 + 129) = *(_WORD *)((char *)v19 + 129);
          uint64_t v264 = v19[18];
          v16[17] = v19[17];
          v16[18] = v264;
          uint64_t v265 = v19[20];
          v16[19] = v19[19];
          v16[20] = v265;
          uint64_t v266 = v19[22];
          uint64_t v267 = v19[23];
          v16[21] = v19[21];
          v16[22] = v266;
          uint64_t v269 = v19[25];
          uint64_t v268 = v19[24];
          v16[23] = v267;
          v16[24] = v268;
          uint64_t v270 = v19[26];
          v16[25] = v269;
          v16[26] = v270;
          uint64_t v271 = v19[28];
          v16[27] = v19[27];
          v16[28] = v271;
          uint64_t v2691 = v19[30];
          v16[29] = v19[29];
          v16[30] = v2691;
          uint64_t v2678 = v19[32];
          v16[31] = v19[31];
          v16[32] = v2678;
          uint64_t v272 = v19[34];
          v16[33] = v19[33];
          v16[34] = v272;
          uint64_t v273 = v19[36];
          uint64_t v2642 = v19[35];
          *((unsigned char *)v16 + 296) = *((unsigned char *)v19 + 296);
          v16[35] = v2642;
          v16[36] = v273;
          uint64_t v274 = v19[39];
          v259[38] = v19[38];
          v259[39] = v274;
          uint64_t v2707 = (int *)type metadata accessor for TicketedShow(0);
          uint64_t v275 = v2707[29];
          uint64_t v276 = (char *)v259 + v275;
          uint64_t v277 = (char *)v19 + v275;
          uint64_t v278 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v277, 1, v278))
          {
            uint64_t v279 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v276, v277, *(void *)(*(void *)(v279 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v278 - 8) + 16))(v276, v277, v278);
            __swift_storeEnumTagSinglePayload((uint64_t)v276, 0, 1, v278);
          }
          uint64_t v508 = v2707[30];
          uint64_t v24 = (uint64_t)v2725;
          uint64_t v509 = (void *)((char *)v2725 + v508);
          uint64_t v510 = (void *)((char *)v21 + v508);
          uint64_t v511 = v510[1];
          void *v509 = *v510;
          v509[1] = v511;
          uint64_t v512 = v2707[31];
          uint64_t v513 = (char *)v2725 + v512;
          long long v514 = (char *)v21 + v512;
          uint64_t v85 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v514, 1, v85))
          {
            uint64_t v515 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v513, v514, *(void *)(*(void *)(v515 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v513, v514, v85);
            __swift_storeEnumTagSinglePayload((uint64_t)v513, 0, 1, v85);
          }
          uint64_t v23 = a3;
          uint64_t v145 = v2721;
          uint64_t v9 = v2726;
          uint64_t v712 = v2707[32];
          long long v393 = (char *)v2725 + v712;
          long long v394 = (char *)v21 + v712;
          if (!__swift_getEnumTagSinglePayload((uint64_t)v21 + v712, 1, v85))
          {
LABEL_75:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v393, v394, v85);
            uint64_t v395 = (uint64_t)v393;
            uint64_t v396 = v85;
            goto LABEL_160;
          }
LABEL_155:
          size_t v423 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                       - 8)
                           + 64);
          long long v424 = v393;
          long long v425 = v394;
          goto LABEL_156;
        case 0x15u:
          uint64_t v2643 = v19[1];
          *uint64_t v16 = *v19;
          v16[1] = v2643;
          uint64_t v280 = v19[3];
          v16[2] = v19[2];
          v16[3] = v280;
          uint64_t v281 = v19[5];
          v16[4] = v19[4];
          uint64_t v16[5] = v281;
          uint64_t v282 = v19[7];
          v16[6] = v19[6];
          v16[7] = v282;
          uint64_t v283 = v19[9];
          _OWORD v16[8] = v19[8];
          v16[9] = v283;
          uint64_t v284 = v19[11];
          v16[10] = v19[10];
          v16[11] = v284;
          uint64_t v285 = v19[13];
          v16[12] = v19[12];
          v16[13] = v285;
          uint64_t v286 = v19[15];
          v16[14] = v19[14];
          v16[15] = v286;
          *((unsigned char *)v16 + 128) = *((unsigned char *)v19 + 128);
          *(_WORD *)((char *)v16 + 129) = *(_WORD *)((char *)v19 + 129);
          uint64_t v287 = v19[18];
          v16[17] = v19[17];
          v16[18] = v287;
          uint64_t v288 = v19[20];
          uint64_t v289 = v19[21];
          v16[19] = v19[19];
          v16[20] = v288;
          uint64_t v290 = v19[22];
          v16[21] = v289;
          v16[22] = v290;
          uint64_t v291 = v19[24];
          v16[23] = v19[23];
          v16[24] = v291;
          uint64_t v292 = v19[26];
          v16[25] = v19[25];
          v16[26] = v292;
          uint64_t v293 = v19[28];
          v16[27] = v19[27];
          v16[28] = v293;
          uint64_t v294 = v19[30];
          v16[29] = v19[29];
          v16[30] = v294;
          uint64_t v295 = v19[32];
          v16[31] = v19[31];
          v16[32] = v295;
          uint64_t v296 = v19[34];
          uint64_t v297 = v19[33];
          *((unsigned char *)v16 + 280) = *((unsigned char *)v19 + 280);
          v16[33] = v297;
          v16[34] = v296;
          uint64_t v298 = v19[37];
          v16[36] = v19[36];
          v16[37] = v298;
          uint64_t v2708 = type metadata accessor for Appointment(0);
          v2719 = v19;
          uint64_t v299 = *(int *)(v2708 + 108);
          uint64_t v300 = (char *)v16 + v299;
          uint64_t v301 = (char *)v19 + v299;
          uint64_t v253 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v301, 1, v253))
          {
            uint64_t v302 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v300, v301, *(void *)(*(void *)(v302 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v253 - 8) + 16))(v300, v301, v253);
            __swift_storeEnumTagSinglePayload((uint64_t)v300, 0, 1, v253);
          }
          uint64_t v145 = v2721;
          uint64_t v507 = *(int *)(v2708 + 112);
LABEL_115:
          uint64_t v24 = (uint64_t)v2725;
          long long v516 = (char *)v2725 + v507;
          char v21 = v2719;
          long long v517 = (char *)v2719 + v507;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2719 + v507, 1, v253))
          {
            uint64_t v518 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v516, v517, *(void *)(*(void *)(v518 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v253 - 8) + 16))(v516, v517, v253);
            __swift_storeEnumTagSinglePayload((uint64_t)v516, 0, 1, v253);
          }
LABEL_118:
          uint64_t v9 = v2726;
          goto LABEL_555;
        case 0x16u:
          uint64_t v2644 = v19[1];
          *uint64_t v16 = *v19;
          v16[1] = v2644;
          uint64_t v303 = v19[3];
          v16[2] = v19[2];
          v16[3] = v303;
          uint64_t v304 = v19[5];
          v16[4] = v19[4];
          uint64_t v16[5] = v304;
          uint64_t v305 = v19[7];
          v16[6] = v19[6];
          v16[7] = v305;
          uint64_t v306 = v19[9];
          _OWORD v16[8] = v19[8];
          v16[9] = v306;
          uint64_t v307 = v19[11];
          v16[10] = v19[10];
          v16[11] = v307;
          uint64_t v308 = v19[13];
          v16[12] = v19[12];
          v16[13] = v308;
          uint64_t v309 = v19[15];
          v16[14] = v19[14];
          v16[15] = v309;
          *((unsigned char *)v16 + 128) = *((unsigned char *)v19 + 128);
          *(_WORD *)((char *)v16 + 129) = *(_WORD *)((char *)v19 + 129);
          uint64_t v310 = v19[18];
          v16[17] = v19[17];
          v16[18] = v310;
          uint64_t v311 = v19[20];
          v16[19] = v19[19];
          v16[20] = v311;
          uint64_t v312 = v19[22];
          v16[21] = v19[21];
          v16[22] = v312;
          uint64_t v314 = v19[25];
          uint64_t v313 = v19[24];
          v16[23] = v19[23];
          v16[24] = v313;
          uint64_t v315 = v19[26];
          uint64_t v316 = v19[27];
          v16[25] = v314;
          v16[26] = v315;
          uint64_t v317 = v19[28];
          v16[27] = v316;
          v16[28] = v317;
          uint64_t v318 = v19[30];
          v16[29] = v19[29];
          v16[30] = v318;
          v16[31] = v19[31];
          v2709 = (int *)type metadata accessor for Party(0);
          uint64_t v319 = v2709[24];
          uint64_t v320 = (char *)v16 + v319;
          uint64_t v321 = (char *)v19 + v319;
          uint64_t v322 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v321, 1, v322))
          {
            uint64_t v323 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v320, v321, *(void *)(*(void *)(v323 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v322 - 8) + 16))(v320, v321, v322);
            __swift_storeEnumTagSinglePayload((uint64_t)v320, 0, 1, v322);
          }
          uint64_t v145 = v2721;
          uint64_t v24 = (uint64_t)v2725;
          uint64_t v519 = v2709[25];
          long long v520 = (char *)v2725 + v519;
          uint64_t v521 = (char *)v21 + v519;
          if (__swift_getEnumTagSinglePayload((uint64_t)v21 + v519, 1, v322))
          {
            uint64_t v522 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v520, v521, *(void *)(*(void *)(v522 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v322 - 8) + 16))(v520, v521, v322);
            __swift_storeEnumTagSinglePayload((uint64_t)v520, 0, 1, v322);
          }
          uint64_t v9 = v2726;
          uint64_t v23 = a3;
          uint64_t v713 = v2709[26];
          uint64_t v415 = (char *)v2725 + v713;
          uint64_t v416 = (uint64_t)v21 + v713;
          uint64_t v417 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload(v416, 1, v417))
          {
LABEL_89:
            size_t v423 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                         - 8)
                             + 64);
            long long v424 = v415;
            long long v425 = (const void *)v416;
LABEL_156:
            memcpy(v424, v425, v423);
          }
          else
          {
LABEL_159:
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v417 - 8) + 16))(v415, v416, v417);
            uint64_t v395 = (uint64_t)v415;
            uint64_t v396 = v417;
LABEL_160:
            __swift_storeEnumTagSinglePayload(v395, 0, 1, v396);
          }
LABEL_556:
          swift_storeEnumTagMultiPayload();
          uint64_t v2532 = *(int *)(v145 + 20);
          uint64_t v2533 = *(void **)((char *)v21 + v2532);
          *(void *)(v24 + v2532) = v2533;
          uint64_t v2534 = *(int *)(v145 + 24);
          uint64_t v2535 = (void *)(v24 + v2534);
          uint64_t v2536 = (void *)((char *)v21 + v2534);
          uint64_t v2537 = v2536[1];
          *uint64_t v2535 = *v2536;
          v2535[1] = v2537;
          id v2538 = v2533;
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload(v24, 0, 1, v145);
          break;
        case 0x17u:
          uint64_t v2692 = v19[1];
          *uint64_t v16 = *v19;
          v16[1] = v2692;
          uint64_t v2679 = v19[3];
          v16[2] = v19[2];
          v16[3] = v2679;
          uint64_t v2664 = v19[5];
          v16[4] = v19[4];
          uint64_t v16[5] = v2664;
          uint64_t v2645 = v19[7];
          v16[6] = v19[6];
          v16[7] = v2645;
          uint64_t v324 = v19[9];
          _OWORD v16[8] = v19[8];
          v16[9] = v324;
          uint64_t v325 = v19[11];
          v16[10] = v19[10];
          v16[11] = v325;
          uint64_t v326 = v19[13];
          v16[12] = v19[12];
          v16[13] = v326;
          uint64_t v327 = v19[15];
          v16[14] = v19[14];
          v16[15] = v327;
          *((unsigned char *)v16 + 128) = *((unsigned char *)v19 + 128);
          *(_WORD *)((char *)v16 + 129) = *(_WORD *)((char *)v19 + 129);
          uint64_t v328 = v19[18];
          v16[17] = v19[17];
          v16[18] = v328;
          uint64_t v329 = v19[20];
          v16[19] = v19[19];
          v16[20] = v329;
          uint64_t v330 = v19[22];
          v16[21] = v19[21];
          v16[22] = v330;
          uint64_t v331 = v19[24];
          v16[23] = v19[23];
          v16[24] = v331;
          uint64_t v332 = v19[26];
          v16[25] = v19[25];
          v16[26] = v332;
          v16[27] = v19[27];
          uint64_t v2710 = (int *)type metadata accessor for Trip(0);
          uint64_t v333 = v2710[22];
          uint64_t v334 = (char *)v16 + v333;
          uint64_t v335 = (char *)v19 + v333;
          uint64_t v336 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v335, 1, v336))
          {
            uint64_t v337 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v334, v335, *(void *)(*(void *)(v337 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v336 - 8) + 16))(v334, v335, v336);
            __swift_storeEnumTagSinglePayload((uint64_t)v334, 0, 1, v336);
          }
          uint64_t v145 = v20;
          uint64_t v24 = (uint64_t)v2725;
          uint64_t v523 = v2710[23];
          uint64_t v524 = (char *)v2725 + v523;
          uint64_t v525 = (char *)v19 + v523;
          if (__swift_getEnumTagSinglePayload((uint64_t)v19 + v523, 1, v336))
          {
            uint64_t v526 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v524, v525, *(void *)(*(void *)(v526 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v336 - 8) + 16))(v524, v525, v336);
            __swift_storeEnumTagSinglePayload((uint64_t)v524, 0, 1, v336);
          }
          uint64_t v9 = v2726;
          uint64_t v714 = v2710[24];
          long long v715 = (char *)v2725 + v714;
          char v21 = v19;
          long long v716 = (char *)v19 + v714;
          *(void *)long long v715 = *(void *)v716;
          v715[8] = v716[8];
          uint64_t v717 = v2710[25];
          uint64_t v504 = (char *)v2725 + v717;
          uint64_t v505 = (char *)v19 + v717;
          uint64_t v232 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v505, 1, v232))
          {
            uint64_t v506 = &demangling cache variable for type metadata for URL?;
LABEL_164:
            uint64_t v718 = __swift_instantiateConcreteTypeFromMangledName(v506);
            memcpy(v504, v505, *(void *)(*(void *)(v718 - 8) + 64));
          }
          else
          {
LABEL_165:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v232 - 8) + 16))(v504, v505, v232);
            __swift_storeEnumTagSinglePayload((uint64_t)v504, 0, 1, v232);
          }
LABEL_555:
          uint64_t v23 = a3;
          goto LABEL_556;
        case 0x18u:
          uint64_t v338 = v19[1];
          *(void *)uint64_t v24 = *v19;
          *(void *)(v24 + 8) = v338;
          uint64_t v339 = v19[3];
          *(void *)(v24 + 16) = v19[2];
          *(void *)(v24 + 24) = v339;
          uint64_t v340 = v24;
          uint64_t v341 = v19[5];
          *(void *)(v340 + 32) = v19[4];
          *(void *)(v340 + 40) = v341;
          uint64_t v342 = (int *)type metadata accessor for GlobalItem();
          uint64_t v343 = v342[7];
          uint64_t v344 = (void *)(v340 + v343);
          uint64_t v345 = (char *)v19 + v343;
          uint64_t v346 = type metadata accessor for GlobalDialog();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v345, 1, v346))
          {
            uint64_t v347 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
            memcpy(v344, v345, *(void *)(*(void *)(v347 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v346 - 8) + 16))(v344, v345, v346);
            __swift_storeEnumTagSinglePayload((uint64_t)v344, 0, 1, v346);
          }
          uint64_t v527 = v342[8];
          uint64_t v24 = (uint64_t)v2725;
          uint64_t v9 = v2726;
          uint64_t v528 = (char *)v2725 + v527;
          char v21 = v19;
          uint64_t v529 = (char *)v19 + v527;
          unint64_t v530 = *((void *)v529 + 1);
          if (v530 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v528 = *(_OWORD *)v529;
          }
          else
          {
            uint64_t v531 = *(void *)v529;
            outlined copy of Data._Representation(*(void *)v529, *((void *)v529 + 1));
            *(void *)uint64_t v528 = v531;
            *((void *)v528 + 1) = v530;
          }
          uint64_t v23 = a3;
          uint64_t v145 = v2721;
          *((unsigned char *)v2725 + v342[9]) = *((unsigned char *)v19 + v342[9]);
          uint64_t v532 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
          *(void *)((char *)v2725 + *(int *)(v532 + 48)) = *(void *)((char *)v19 + *(int *)(v532 + 48));
          swift_bridgeObjectRetain();
          goto LABEL_556;
        case 0x19u:
          uint64_t v348 = v19[1];
          *uint64_t v16 = *v19;
          v16[1] = v348;
          uint64_t v349 = v19[3];
          v16[2] = v19[2];
          v16[3] = v349;
          uint64_t v350 = v19[5];
          *(void *)(v24 + 32) = v19[4];
          *(void *)(v24 + 40) = v350;
          uint64_t v351 = v19[7];
          *(void *)(v24 + 48) = v19[6];
          *(void *)(v24 + 56) = v351;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v23 = a3;
          swift_bridgeObjectRetain();
LABEL_58:
          swift_bridgeObjectRetain();
          uint64_t v145 = v2721;
          uint64_t v9 = v2726;
          goto LABEL_556;
        case 0x1Au:
          uint64_t v352 = v19[1];
          *(void *)uint64_t v24 = *v19;
          *(void *)(v24 + 8) = v352;
          uint64_t v353 = v19[3];
          *(void *)(v24 + 16) = v19[2];
          *(void *)(v24 + 24) = v353;
          uint64_t v354 = v19[5];
          *(void *)(v24 + 32) = v19[4];
          *(void *)(v24 + 40) = v354;
          *(void *)(v24 + 48) = v19[6];
          uint64_t v355 = (int *)type metadata accessor for Answer(0);
          uint64_t v356 = v355[9];
          uint64_t v357 = (void *)(v24 + v356);
          uint64_t v358 = v19;
          uint64_t v359 = (char *)v19 + v356;
          uint64_t v360 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v359, 1, v360))
          {
            uint64_t v361 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v357, v359, *(void *)(*(void *)(v361 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v360 - 8) + 16))(v357, v359, v360);
            __swift_storeEnumTagSinglePayload((uint64_t)v357, 0, 1, v360);
          }
          uint64_t v145 = v2721;
          uint64_t v24 = (uint64_t)v2725;
          uint64_t v9 = v2726;
          char v21 = v358;
          *((unsigned char *)v2725 + v355[10]) = *((unsigned char *)v358 + v355[10]);
          uint64_t v533 = v355[11];
          uint64_t v534 = (void *)((char *)v2725 + v533);
          uint64_t v535 = (void *)((char *)v358 + v533);
          uint64_t v536 = v535[1];
          *uint64_t v534 = *v535;
          v534[1] = v536;
          swift_bridgeObjectRetain();
          uint64_t v23 = a3;
          goto LABEL_556;
        default:
          uint64_t v25 = v19[1];
          *uint64_t v16 = *v19;
          v16[1] = v25;
          uint64_t v26 = v19[3];
          v16[2] = v19[2];
          v16[3] = v26;
          uint64_t v27 = v19[5];
          v16[4] = v19[4];
          uint64_t v16[5] = v27;
          uint64_t v28 = v19;
          uint64_t v29 = v19[7];
          v16[6] = v19[6];
          v16[7] = v29;
          uint64_t v30 = v19[9];
          _OWORD v16[8] = v19[8];
          v16[9] = v30;
          uint64_t v2698 = v19[11];
          v16[10] = v19[10];
          v16[11] = v2698;
          uint64_t v31 = (int *)type metadata accessor for EmailDocument(0);
          uint64_t v32 = v31[12];
          uint64_t v2639 = (char *)v19 + v32;
          uint64_t v2659 = (char *)v16 + v32;
          uint64_t v33 = type metadata accessor for Date();
          uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v2671 = v34;
          uint64_t v2683 = v33;
          v34(v2659, v2639, v33);
          *(void *)((char *)v16 + v31[13]) = *(void *)((char *)v28 + v31[13]);
          *(void *)((char *)v16 + v31[14]) = *(void *)((char *)v28 + v31[14]);
          *(void *)((char *)v16 + v31[15]) = *(void *)((char *)v28 + v31[15]);
          *((unsigned char *)v16 + v31[16]) = *((unsigned char *)v28 + v31[16]);
          *((unsigned char *)v16 + v31[17]) = *((unsigned char *)v28 + v31[17]);
          uint64_t v35 = v31[18];
          uint64_t v36 = (void *)((char *)v16 + v35);
          uint64_t v37 = (void *)((char *)v28 + v35);
          uint64_t v38 = v37[1];
          *uint64_t v36 = *v37;
          v36[1] = v38;
          uint64_t v2699 = v31;
          v2716 = v28;
          uint64_t v39 = v31[19];
          uint64_t v40 = (void *)((char *)v16 + v39);
          uint64_t v41 = (char *)v28 + v39;
          uint64_t v42 = *(void *)((char *)v28 + v39);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v42)
          {
            uint64_t v43 = *((void *)v41 + 1);
            uint64_t v44 = *((void *)v41 + 2);
            *uint64_t v40 = v42;
            v40[1] = v43;
            uint64_t v45 = *((void *)v41 + 3);
            uint64_t v46 = *((void *)v41 + 4);
            v40[2] = v44;
            v40[3] = v45;
            v40[4] = v46;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v362 = *((_OWORD *)v41 + 1);
            *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
            *((_OWORD *)v40 + 1) = v362;
            v40[4] = *((void *)v41 + 4);
          }
          char v21 = v28;
          uint64_t v363 = v31[20];
          uint64_t v364 = (void *)((char *)v16 + v363);
          long long v365 = (void *)((char *)v28 + v363);
          uint64_t v366 = v365[1];
          void *v364 = *v365;
          v364[1] = v366;
          uint64_t v367 = v31[21];
          id v368 = (void *)((char *)v16 + v367);
          uint64_t v369 = (void *)((char *)v28 + v367);
          uint64_t v370 = type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          uint64_t v23 = a3;
          if (__swift_getEnumTagSinglePayload((uint64_t)v369, 1, v370))
          {
            uint64_t v371 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v368, v369, *(void *)(*(void *)(v371 - 8) + 64));
            uint64_t v9 = v2726;
          }
          else
          {
            uint64_t v537 = v369[1];
            *id v368 = *v369;
            v368[1] = v537;
            uint64_t v538 = *(int *)(v370 + 20);
            uint64_t v539 = (void *)((char *)v368 + v538);
            v2646 = v369;
            uint64_t v540 = (void *)((char *)v369 + v538);
            uint64_t v541 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            uint64_t v9 = v2726;
            uint64_t v2606 = (int *)v370;
            uint64_t v2620 = v368;
            if (__swift_getEnumTagSinglePayload((uint64_t)v540, 1, v541))
            {
              long long v542 = (int *)v370;
              uint64_t v543 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v539, v540, *(void *)(*(void *)(v543 - 8) + 64));
            }
            else
            {
              uint64_t v773 = v540[1];
              void *v539 = *v540;
              v539[1] = v773;
              uint64_t v774 = v540[3];
              v539[2] = v540[2];
              v539[3] = v774;
              uint64_t v775 = v540[5];
              v539[4] = v540[4];
              v539[5] = v775;
              uint64_t v776 = v540[7];
              v539[6] = v540[6];
              v539[7] = v776;
              uint64_t v777 = v540[9];
              v539[8] = v540[8];
              v539[9] = v777;
              uint64_t v778 = v540[11];
              v539[10] = v540[10];
              v539[11] = v778;
              uint64_t v779 = v540[13];
              v539[12] = v540[12];
              v539[13] = v779;
              uint64_t v780 = v540[15];
              v539[14] = v540[14];
              v539[15] = v780;
              *((unsigned char *)v539 + 128) = *((unsigned char *)v540 + 128);
              *(_WORD *)((char *)v539 + 129) = *(_WORD *)((char *)v540 + 129);
              uint64_t v781 = v540[18];
              v539[17] = v540[17];
              v539[18] = v781;
              uint64_t v782 = v540[20];
              v539[19] = v540[19];
              v539[20] = v782;
              uint64_t v783 = v540[22];
              v539[21] = v540[21];
              v539[22] = v783;
              uint64_t v2545 = v540[24];
              v539[23] = v540[23];
              v539[24] = v2545;
              uint64_t v784 = v540[26];
              v539[25] = v540[25];
              v539[26] = v784;
              uint64_t v785 = v540[28];
              v539[27] = v540[27];
              v539[28] = v785;
              uint64_t v786 = v540[30];
              v539[29] = v540[29];
              v539[30] = v786;
              uint64_t v787 = v540[32];
              v539[31] = v540[31];
              v539[32] = v787;
              uint64_t v788 = v540[34];
              v539[33] = v540[33];
              v539[34] = v788;
              uint64_t v789 = v540[36];
              v539[35] = v540[35];
              v539[36] = v789;
              uint64_t v790 = v540[38];
              v539[37] = v540[37];
              v539[38] = v790;
              uint64_t v791 = v540[40];
              v539[39] = v540[39];
              v539[40] = v791;
              uint64_t v792 = v540[42];
              v539[41] = v540[41];
              v539[42] = v792;
              uint64_t v793 = v540[44];
              v539[43] = v540[43];
              v539[44] = v793;
              uint64_t v794 = v540[46];
              v539[45] = v540[45];
              v539[46] = v794;
              uint64_t v795 = v540[47];
              *((unsigned char *)v539 + 384) = *((unsigned char *)v540 + 384);
              v539[47] = v795;
              uint64_t v796 = v540[50];
              v539[49] = v540[49];
              v539[50] = v796;
              uint64_t v797 = v540[52];
              v539[51] = v540[51];
              v539[52] = v797;
              uint64_t v798 = *(int *)(v541 + 140);
              __dst = (char *)v539 + v798;
              uint64_t v799 = (char *)v540 + v798;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v800 = v541;
              if (__swift_getEnumTagSinglePayload((uint64_t)v799, 1, v2683))
              {
                uint64_t v801 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(__dst, v799, *(void *)(*(void *)(v801 - 8) + 64));
              }
              else
              {
                v2671(__dst, v799, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v2683);
              }
              uint64_t v858 = *(int *)(v541 + 144);
              uint64_t v859 = (char *)v539 + v858;
              uint64_t v860 = (char *)v540 + v858;
              char v21 = v2716;
              if (__swift_getEnumTagSinglePayload((uint64_t)v540 + v858, 1, v2683))
              {
                uint64_t v861 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v859, v860, *(void *)(*(void *)(v861 - 8) + 64));
              }
              else
              {
                v2671(v859, v860, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v859, 0, 1, v2683);
              }
              long long v542 = v2606;
              __swift_storeEnumTagSinglePayload((uint64_t)v539, 0, 1, v800);
              id v368 = v2620;
            }
            uint64_t v870 = v2646;
            uint64_t v871 = v542[6];
            long long v872 = (void *)((char *)v368 + v871);
            long long v873 = (void *)((char *)v2646 + v871);
            uint64_t v874 = type metadata accessor for TicketedTransportation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v873, 1, v874))
            {
              uint64_t v875 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v872, v873, *(void *)(*(void *)(v875 - 8) + 64));
            }
            else
            {
              uint64_t v876 = v873[1];
              *long long v872 = *v873;
              v872[1] = v876;
              uint64_t v877 = v873[3];
              v872[2] = v873[2];
              v872[3] = v877;
              uint64_t v878 = v873[5];
              v872[4] = v873[4];
              v872[5] = v878;
              uint64_t v879 = v873[7];
              v872[6] = v873[6];
              v872[7] = v879;
              uint64_t v880 = v873[9];
              v872[8] = v873[8];
              v872[9] = v880;
              uint64_t v881 = v873[11];
              v872[10] = v873[10];
              v872[11] = v881;
              uint64_t v882 = v873[13];
              v872[12] = v873[12];
              v872[13] = v882;
              uint64_t v883 = v873[15];
              v872[14] = v873[14];
              v872[15] = v883;
              *((unsigned char *)v872 + 128) = *((unsigned char *)v873 + 128);
              *(_WORD *)((char *)v872 + 129) = *(_WORD *)((char *)v873 + 129);
              uint64_t v884 = v873[18];
              v872[17] = v873[17];
              v872[18] = v884;
              uint64_t v885 = v873[20];
              v872[19] = v873[19];
              v872[20] = v885;
              uint64_t v886 = v873[22];
              v872[21] = v873[21];
              v872[22] = v886;
              uint64_t v887 = v873[24];
              v872[23] = v873[23];
              v872[24] = v887;
              uint64_t v2577 = v873[26];
              v872[25] = v873[25];
              v872[26] = v2577;
              uint64_t v888 = v873[28];
              v872[27] = v873[27];
              v872[28] = v888;
              uint64_t v889 = v873[30];
              v872[29] = v873[29];
              v872[30] = v889;
              uint64_t v890 = v873[32];
              v872[31] = v873[31];
              v872[32] = v890;
              uint64_t v891 = v873[34];
              v872[33] = v873[33];
              v872[34] = v891;
              uint64_t v893 = v873[35];
              uint64_t v892 = v873[36];
              *((unsigned char *)v872 + 296) = *((unsigned char *)v873 + 296);
              v872[35] = v893;
              v872[36] = v892;
              uint64_t v894 = *(int *)(v874 + 112);
              uint64_t v2584 = (char *)v872 + v894;
              uint64_t v895 = (char *)v873 + v894;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v895, 1, v2683))
              {
                uint64_t v896 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2584, v895, *(void *)(*(void *)(v896 - 8) + 64));
              }
              else
              {
                v2671(v2584, v895, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v2584, 0, 1, v2683);
              }
              uint64_t v950 = *(int *)(v874 + 116);
              uint64_t v951 = (char *)v872 + v950;
              uint64_t v952 = (char *)v873 + v950;
              char v21 = v2716;
              if (__swift_getEnumTagSinglePayload((uint64_t)v873 + v950, 1, v2683))
              {
                uint64_t v953 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v951, v952, *(void *)(*(void *)(v953 - 8) + 64));
              }
              else
              {
                v2671(v951, v952, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v951, 0, 1, v2683);
              }
              long long v542 = v2606;
              __swift_storeEnumTagSinglePayload((uint64_t)v872, 0, 1, v874);
              id v368 = v2620;
              uint64_t v870 = v2646;
            }
            uint64_t v962 = v542[7];
            uint64_t v963 = (void *)((char *)v368 + v962);
            uint64_t v964 = (void *)((char *)v870 + v962);
            uint64_t v965 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v964, 1, (uint64_t)v965))
            {
              uint64_t v966 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v963, v964, *(void *)(*(void *)(v966 - 8) + 64));
            }
            else
            {
              uint64_t v967 = v964[1];
              *uint64_t v963 = *v964;
              v963[1] = v967;
              uint64_t v968 = v964[3];
              v963[2] = v964[2];
              v963[3] = v968;
              uint64_t v969 = v964[5];
              v963[4] = v964[4];
              v963[5] = v969;
              uint64_t v970 = v964[7];
              v963[6] = v964[6];
              v963[7] = v970;
              uint64_t v971 = v964[9];
              v963[8] = v964[8];
              v963[9] = v971;
              uint64_t v972 = v964[11];
              v963[10] = v964[10];
              v963[11] = v972;
              uint64_t v973 = v964[13];
              v963[12] = v964[12];
              v963[13] = v973;
              uint64_t v974 = v964[15];
              v963[14] = v964[14];
              v963[15] = v974;
              *((unsigned char *)v963 + 128) = *((unsigned char *)v964 + 128);
              *(_WORD *)((char *)v963 + 129) = *(_WORD *)((char *)v964 + 129);
              uint64_t v975 = v964[18];
              v963[17] = v964[17];
              v963[18] = v975;
              uint64_t v976 = v964[20];
              v963[19] = v964[19];
              v963[20] = v976;
              uint64_t v977 = v964[22];
              v963[21] = v964[21];
              v963[22] = v977;
              uint64_t v2548 = v964[24];
              v963[23] = v964[23];
              v963[24] = v2548;
              uint64_t v978 = v964[26];
              v963[25] = v964[25];
              v963[26] = v978;
              uint64_t v979 = v964[28];
              v963[27] = v964[27];
              v963[28] = v979;
              uint64_t v2585 = (void *)v964[30];
              v963[29] = v964[29];
              v963[30] = v2585;
              uint64_t v980 = v964[32];
              v963[31] = v964[31];
              v963[32] = v980;
              uint64_t v981 = v964[34];
              v963[33] = v964[33];
              v963[34] = v981;
              uint64_t v982 = v964[36];
              uint64_t v983 = v964[35];
              *((unsigned char *)v963 + 296) = *((unsigned char *)v964 + 296);
              v963[35] = v983;
              v963[36] = v982;
              uint64_t v984 = v964[39];
              v963[38] = v964[38];
              v963[39] = v984;
              uint64_t v985 = v965[29];
              __dsta = (char *)v963 + v985;
              uint64_t v986 = (char *)v964 + v985;
              uint64_t v987 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v986, 1, v987))
              {
                uint64_t v988 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(__dsta, v986, *(void *)(*(void *)(v988 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v987 - 8) + 16))(__dsta, v986, v987);
                __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v987);
              }
              uint64_t v1043 = v965[30];
              uint64_t v1044 = (void *)((char *)v963 + v1043);
              uint64_t v1045 = (void *)((char *)v964 + v1043);
              uint64_t v1046 = v1045[1];
              *uint64_t v1044 = *v1045;
              v1044[1] = v1046;
              uint64_t v1047 = v965[31];
              uint64_t v1048 = (char *)v963 + v1047;
              uint64_t v1049 = (char *)v964 + v1047;
              swift_bridgeObjectRetain();
              char v21 = v2716;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1049, 1, v2683))
              {
                uint64_t v1050 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1048, v1049, *(void *)(*(void *)(v1050 - 8) + 64));
              }
              else
              {
                v2671(v1048, v1049, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v1048, 0, 1, v2683);
              }
              uint64_t v1067 = v965[32];
              uint64_t v1068 = (char *)v963 + v1067;
              uint64_t v1069 = (char *)v964 + v1067;
              if (__swift_getEnumTagSinglePayload((uint64_t)v964 + v1067, 1, v2683))
              {
                uint64_t v1070 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1068, v1069, *(void *)(*(void *)(v1070 - 8) + 64));
              }
              else
              {
                v2671(v1068, v1069, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v1068, 0, 1, v2683);
              }
              long long v542 = v2606;
              __swift_storeEnumTagSinglePayload((uint64_t)v963, 0, 1, (uint64_t)v965);
              id v368 = v2620;
              uint64_t v870 = v2646;
            }
            uint64_t v1079 = v542[8];
            uint64_t v1080 = (void *)((char *)v368 + v1079);
            uint64_t v1081 = (void *)((char *)v870 + v1079);
            uint64_t v1082 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1081, 1, v1082))
            {
              uint64_t v1083 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v1080, v1081, *(void *)(*(void *)(v1083 - 8) + 64));
            }
            else
            {
              uint64_t v1084 = v1081[1];
              *uint64_t v1080 = *v1081;
              v1080[1] = v1084;
              uint64_t v1085 = v1081[3];
              v1080[2] = v1081[2];
              v1080[3] = v1085;
              uint64_t v1086 = v1081[5];
              v1080[4] = v1081[4];
              v1080[5] = v1086;
              uint64_t v1087 = v1081[7];
              v1080[6] = v1081[6];
              v1080[7] = v1087;
              uint64_t v1088 = v1081[9];
              v1080[8] = v1081[8];
              v1080[9] = v1088;
              uint64_t v1089 = v1081[11];
              v1080[10] = v1081[10];
              v1080[11] = v1089;
              uint64_t v1090 = v1081[13];
              v1080[12] = v1081[12];
              v1080[13] = v1090;
              uint64_t v1091 = v1081[15];
              v1080[14] = v1081[14];
              v1080[15] = v1091;
              *((unsigned char *)v1080 + 128) = *((unsigned char *)v1081 + 128);
              *(_WORD *)((char *)v1080 + 129) = *(_WORD *)((char *)v1081 + 129);
              uint64_t v1092 = v1081[18];
              v1080[17] = v1081[17];
              v1080[18] = v1092;
              uint64_t v1093 = v1081[20];
              v1080[19] = v1081[19];
              v1080[20] = v1093;
              uint64_t v1094 = v1081[22];
              v1080[21] = v1081[21];
              v1080[22] = v1094;
              uint64_t v1095 = v1081[24];
              v1080[23] = v1081[23];
              v1080[24] = v1095;
              uint64_t v1096 = v1081[26];
              v1080[25] = v1081[25];
              v1080[26] = v1096;
              uint64_t v1097 = v1081[28];
              v1080[27] = v1081[27];
              v1080[28] = v1097;
              uint64_t v1098 = v1081[30];
              v1080[29] = v1081[29];
              v1080[30] = v1098;
              uint64_t v1099 = v1081[32];
              v1080[31] = v1081[31];
              v1080[32] = v1099;
              uint64_t v1100 = v1081[34];
              uint64_t v1101 = v1081[33];
              *((unsigned char *)v1080 + 280) = *((unsigned char *)v1081 + 280);
              v1080[33] = v1101;
              v1080[34] = v1100;
              uint64_t v1102 = v1081[37];
              v1080[36] = v1081[36];
              v1080[37] = v1102;
              uint64_t v1103 = *(int *)(v1082 + 108);
              uint64_t v2586 = (char *)v1080 + v1103;
              uint64_t v1104 = (char *)v1081 + v1103;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1104, 1, v2683))
              {
                uint64_t v1105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2586, v1104, *(void *)(*(void *)(v1105 - 8) + 64));
              }
              else
              {
                v2671(v2586, v1104, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v2586, 0, 1, v2683);
              }
              uint64_t v1160 = *(int *)(v1082 + 112);
              uint64_t v1161 = (char *)v1080 + v1160;
              uint64_t v1162 = (char *)v1081 + v1160;
              char v21 = v2716;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1081 + v1160, 1, v2683))
              {
                uint64_t v1163 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1161, v1162, *(void *)(*(void *)(v1163 - 8) + 64));
              }
              else
              {
                v2671(v1161, v1162, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v1161, 0, 1, v2683);
              }
              long long v542 = v2606;
              __swift_storeEnumTagSinglePayload((uint64_t)v1080, 0, 1, v1082);
              id v368 = v2620;
              uint64_t v870 = v2646;
            }
            uint64_t v1172 = v542[9];
            uint64_t v1173 = (void *)((char *)v368 + v1172);
            uint64_t v1174 = (void *)((char *)v870 + v1172);
            uint64_t v1175 = (int *)type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1174, 1, (uint64_t)v1175))
            {
              uint64_t v1176 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v1173, v1174, *(void *)(*(void *)(v1176 - 8) + 64));
            }
            else
            {
              uint64_t v1177 = v1174[1];
              *uint64_t v1173 = *v1174;
              v1173[1] = v1177;
              uint64_t v1178 = v1174[3];
              v1173[2] = v1174[2];
              v1173[3] = v1178;
              uint64_t v1179 = v1174[5];
              v1173[4] = v1174[4];
              v1173[5] = v1179;
              uint64_t v1180 = v1174[7];
              v1173[6] = v1174[6];
              v1173[7] = v1180;
              uint64_t v1181 = v1174[9];
              v1173[8] = v1174[8];
              v1173[9] = v1181;
              uint64_t v1182 = v1174[11];
              v1173[10] = v1174[10];
              v1173[11] = v1182;
              uint64_t v1183 = v1174[13];
              v1173[12] = v1174[12];
              v1173[13] = v1183;
              uint64_t v1184 = v1174[15];
              v1173[14] = v1174[14];
              v1173[15] = v1184;
              *((unsigned char *)v1173 + 128) = *((unsigned char *)v1174 + 128);
              *(_WORD *)((char *)v1173 + 129) = *(_WORD *)((char *)v1174 + 129);
              uint64_t v1185 = v1174[18];
              v1173[17] = v1174[17];
              v1173[18] = v1185;
              uint64_t v1186 = v1174[20];
              v1173[19] = v1174[19];
              v1173[20] = v1186;
              uint64_t v1187 = v1174[22];
              v1173[21] = v1174[21];
              v1173[22] = v1187;
              uint64_t v1188 = v1174[24];
              v1173[23] = v1174[23];
              v1173[24] = v1188;
              uint64_t v1189 = v1174[26];
              v1173[25] = v1174[25];
              v1173[26] = v1189;
              uint64_t v1190 = v1174[28];
              v1173[27] = v1174[27];
              v1173[28] = v1190;
              uint64_t v1191 = v1174[30];
              v1173[29] = v1174[29];
              v1173[30] = v1191;
              v1173[31] = v1174[31];
              uint64_t v1192 = v1175[24];
              uint64_t v2587 = (char *)v1173 + v1192;
              uint64_t v1193 = (char *)v1174 + v1192;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1193, 1, v2683))
              {
                uint64_t v1194 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2587, v1193, *(void *)(*(void *)(v1194 - 8) + 64));
              }
              else
              {
                v2671(v2587, v1193, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v2587, 0, 1, v2683);
              }
              uint64_t v1241 = v1175[25];
              uint64_t v1242 = (char *)v1173 + v1241;
              uint64_t v1243 = (char *)v1174 + v1241;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1174 + v1241, 1, v2683))
              {
                uint64_t v1244 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1242, v1243, *(void *)(*(void *)(v1244 - 8) + 64));
              }
              else
              {
                v2671(v1242, v1243, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v1242, 0, 1, v2683);
              }
              long long v542 = v2606;
              uint64_t v1253 = v1175[26];
              uint64_t v1254 = (char *)v1173 + v1253;
              uint64_t v1255 = (char *)v1174 + v1253;
              uint64_t v1256 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1255, 1, v1256))
              {
                uint64_t v1257 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1254, v1255, *(void *)(*(void *)(v1257 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1256 - 8) + 16))(v1254, v1255, v1256);
                __swift_storeEnumTagSinglePayload((uint64_t)v1254, 0, 1, v1256);
              }
              char v21 = v2716;
              __swift_storeEnumTagSinglePayload((uint64_t)v1173, 0, 1, (uint64_t)v1175);
              id v368 = v2620;
              uint64_t v870 = v2646;
            }
            uint64_t v1267 = v542[10];
            uint64_t v1268 = (void *)((char *)v368 + v1267);
            uint64_t v1269 = (void *)((char *)v870 + v1267);
            uint64_t v1270 = (int *)type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1269, 1, (uint64_t)v1270))
            {
              uint64_t v1271 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1268, v1269, *(void *)(*(void *)(v1271 - 8) + 64));
            }
            else
            {
              uint64_t v1272 = v1269[1];
              *uint64_t v1268 = *v1269;
              v1268[1] = v1272;
              uint64_t v1273 = v1269[3];
              v1268[2] = v1269[2];
              v1268[3] = v1273;
              uint64_t v1274 = v1269[5];
              v1268[4] = v1269[4];
              v1268[5] = v1274;
              uint64_t v1275 = v1269[7];
              v1268[6] = v1269[6];
              v1268[7] = v1275;
              uint64_t v1276 = v1269[9];
              v1268[8] = v1269[8];
              v1268[9] = v1276;
              uint64_t v1277 = v1269[11];
              v1268[10] = v1269[10];
              v1268[11] = v1277;
              uint64_t v1278 = v1269[13];
              v1268[12] = v1269[12];
              v1268[13] = v1278;
              uint64_t v1279 = v1269[15];
              v1268[14] = v1269[14];
              v1268[15] = v1279;
              *((unsigned char *)v1268 + 128) = *((unsigned char *)v1269 + 128);
              *(_WORD *)((char *)v1268 + 129) = *(_WORD *)((char *)v1269 + 129);
              uint64_t v1280 = v1269[18];
              v1268[17] = v1269[17];
              v1268[18] = v1280;
              uint64_t v1281 = v1269[20];
              v1268[19] = v1269[19];
              v1268[20] = v1281;
              uint64_t v1282 = v1269[22];
              v1268[21] = v1269[21];
              v1268[22] = v1282;
              uint64_t v1283 = v1269[24];
              v1268[23] = v1269[23];
              v1268[24] = v1283;
              uint64_t v1284 = v1269[26];
              v1268[25] = v1269[25];
              v1268[26] = v1284;
              v1268[27] = v1269[27];
              uint64_t v1285 = v1270[22];
              uint64_t v2588 = (char *)v1268 + v1285;
              uint64_t v1286 = (char *)v1269 + v1285;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1286, 1, v2683))
              {
                uint64_t v1287 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2588, v1286, *(void *)(*(void *)(v1287 - 8) + 64));
              }
              else
              {
                v2671(v2588, v1286, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v2588, 0, 1, v2683);
              }
              uint64_t v1330 = v1270[23];
              uint64_t v1331 = (char *)v1268 + v1330;
              uint64_t v1332 = (char *)v1269 + v1330;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1269 + v1330, 1, v2683))
              {
                uint64_t v1333 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1331, v1332, *(void *)(*(void *)(v1333 - 8) + 64));
              }
              else
              {
                v2671(v1331, v1332, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v1331, 0, 1, v2683);
              }
              long long v542 = v2606;
              uint64_t v1342 = v1270[24];
              uint64_t v1343 = (char *)v1268 + v1342;
              uint64_t v1344 = (char *)v1269 + v1342;
              *(void *)uint64_t v1343 = *(void *)v1344;
              v1343[8] = v1344[8];
              uint64_t v1345 = v1270[25];
              uint64_t v1346 = (char *)v1268 + v1345;
              uint64_t v1347 = (char *)v1269 + v1345;
              uint64_t v1348 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1347, 1, v1348))
              {
                uint64_t v1349 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1346, v1347, *(void *)(*(void *)(v1349 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1348 - 8) + 16))(v1346, v1347, v1348);
                __swift_storeEnumTagSinglePayload((uint64_t)v1346, 0, 1, v1348);
              }
              char v21 = v2716;
              __swift_storeEnumTagSinglePayload((uint64_t)v1268, 0, 1, (uint64_t)v1270);
              id v368 = v2620;
              uint64_t v870 = v2646;
            }
            uint64_t v1365 = v542[11];
            uint64_t v1366 = (void *)((char *)v368 + v1365);
            v1367 = (void *)((char *)v870 + v1365);
            uint64_t v1368 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1367, 1, (uint64_t)v1368))
            {
              uint64_t v1369 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1366, v1367, *(void *)(*(void *)(v1369 - 8) + 64));
            }
            else
            {
              uint64_t v1370 = v1367[1];
              void *v1366 = *v1367;
              v1366[1] = v1370;
              uint64_t v1371 = v1367[3];
              v1366[2] = v1367[2];
              v1366[3] = v1371;
              uint64_t v1372 = v1367[5];
              v1366[4] = v1367[4];
              v1366[5] = v1372;
              uint64_t v1373 = v1367[7];
              v1366[6] = v1367[6];
              v1366[7] = v1373;
              uint64_t v1374 = v1367[9];
              v1366[8] = v1367[8];
              v1366[9] = v1374;
              uint64_t v1375 = v1367[11];
              v1366[10] = v1367[10];
              v1366[11] = v1375;
              *((unsigned char *)v1366 + 96) = *((unsigned char *)v1367 + 96);
              uint64_t v1376 = v1367[14];
              v1366[13] = v1367[13];
              v1366[14] = v1376;
              uint64_t v1377 = v1368[13];
              __dstb = (char *)v1366 + v1377;
              uint64_t v1378 = (char *)v1367 + v1377;
              uint64_t v1379 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1378, 1, v1379))
              {
                uint64_t v1380 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(__dstb, v1378, *(void *)(*(void *)(v1380 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1379 - 8) + 16))(__dstb, v1378, v1379);
                __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v1379);
              }
              uint64_t v1412 = v1368[14];
              uint64_t v1413 = (char *)v1366 + v1412;
              uint64_t v1414 = (char *)v1367 + v1412;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1367 + v1412, 1, v1379))
              {
                uint64_t v1415 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1413, v1414, *(void *)(*(void *)(v1415 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1379 - 8) + 16))(v1413, v1414, v1379);
                __swift_storeEnumTagSinglePayload((uint64_t)v1413, 0, 1, v1379);
              }
              uint64_t v1424 = v1368[15];
              uint64_t v1425 = (void *)((char *)v1366 + v1424);
              uint64_t v1426 = (void *)((char *)v1367 + v1424);
              uint64_t v1427 = v1426[1];
              void *v1425 = *v1426;
              v1425[1] = v1427;
              uint64_t v1428 = v1368[16];
              uint64_t v1429 = (void *)((char *)v1366 + v1428);
              uint64_t v1430 = (void *)((char *)v1367 + v1428);
              uint64_t v1431 = v1430[1];
              *uint64_t v1429 = *v1430;
              v1429[1] = v1431;
              uint64_t v1432 = v1368[17];
              uint64_t v1433 = (void *)((char *)v1366 + v1432);
              uint64_t v1434 = (void *)((char *)v1367 + v1432);
              uint64_t v1435 = v1434[1];
              void *v1433 = *v1434;
              v1433[1] = v1435;
              uint64_t v1436 = v1368[18];
              uint64_t v2589 = (char *)v1367 + v1436;
              __dstf = (char *)v1366 + v1436;
              uint64_t v1437 = type metadata accessor for DateComponents();
              uint64_t v1438 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1437 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1438(__dstf, v2589, v1437);
              v1438((char *)v1366 + v1368[19], (char *)v1367 + v1368[19], v1437);
              uint64_t v1439 = v1368[20];
              uint64_t v1440 = (void *)((char *)v1366 + v1439);
              uint64_t v1441 = (void *)((char *)v1367 + v1439);
              uint64_t v1442 = v1441[1];
              void *v1440 = *v1441;
              v1440[1] = v1442;
              uint64_t v1443 = v1368[21];
              uint64_t v1444 = (void *)((char *)v1366 + v1443);
              v1445 = (void *)((char *)v1367 + v1443);
              uint64_t v1446 = v1445[1];
              *uint64_t v1444 = *v1445;
              v1444[1] = v1446;
              uint64_t v1447 = v1368[22];
              v1448 = (void *)((char *)v1366 + v1447);
              uint64_t v1449 = (void *)((char *)v1367 + v1447);
              uint64_t v2569 = v1449[1];
              void *v1448 = *v1449;
              v1448[1] = v2569;
              uint64_t v1450 = v1368[23];
              uint64_t v1451 = (void *)((char *)v1366 + v1450);
              uint64_t v1452 = (void *)((char *)v1367 + v1450);
              __dstg = (void *)v1452[1];
              void *v1451 = *v1452;
              v1451[1] = __dstg;
              uint64_t v1453 = v1368[24];
              uint64_t v1454 = (void *)((char *)v1366 + v1453);
              v1455 = (void *)((char *)v1367 + v1453);
              uint64_t v2578 = v1455[1];
              void *v1454 = *v1455;
              v1454[1] = v2578;
              uint64_t v1456 = v1368[25];
              uint64_t v1457 = (void *)((char *)v1366 + v1456);
              uint64_t v1458 = (void *)((char *)v1367 + v1456);
              uint64_t v2573 = v1458[1];
              void *v1457 = *v1458;
              v1457[1] = v2573;
              uint64_t v1459 = v1368[26];
              uint64_t v1460 = (void *)((char *)v1366 + v1459);
              uint64_t v1461 = (void *)((char *)v1367 + v1459);
              uint64_t v2565 = v1461[1];
              *uint64_t v1460 = *v1461;
              v1460[1] = v2565;
              uint64_t v1462 = v1368[27];
              uint64_t v1463 = (void *)((char *)v1366 + v1462);
              uint64_t v1464 = (void *)((char *)v1367 + v1462);
              uint64_t v2562 = (void *)v1464[1];
              *uint64_t v1463 = *v1464;
              v1463[1] = v2562;
              uint64_t v1465 = v1368[28];
              uint64_t v1466 = (void *)((char *)v1366 + v1465);
              uint64_t v1467 = (void *)((char *)v1367 + v1465);
              uint64_t v2559 = v1467[1];
              void *v1466 = *v1467;
              v1466[1] = v2559;
              uint64_t v1468 = v1368[29];
              uint64_t v1469 = (void *)((char *)v1366 + v1468);
              uint64_t v1470 = (void *)((char *)v1367 + v1468);
              uint64_t v2556 = v1470[1];
              void *v1469 = *v1470;
              v1469[1] = v2556;
              uint64_t v1471 = v1368[30];
              uint64_t v1472 = (void *)((char *)v1366 + v1471);
              uint64_t v1473 = (void *)((char *)v1367 + v1471);
              uint64_t v2554 = v1473[1];
              *uint64_t v1472 = *v1473;
              v1472[1] = v2554;
              uint64_t v1474 = v1368[31];
              uint64_t v1475 = (void *)((char *)v1366 + v1474);
              uint64_t v1476 = (void *)((char *)v1367 + v1474);
              uint64_t v2553 = v1476[1];
              *uint64_t v1475 = *v1476;
              v1475[1] = v2553;
              uint64_t v1477 = v1368[32];
              uint64_t v1478 = (void *)((char *)v1366 + v1477);
              uint64_t v1479 = (void *)((char *)v1367 + v1477);
              uint64_t v2550 = v1479[1];
              *uint64_t v1478 = *v1479;
              v1478[1] = v2550;
              *(void *)((char *)v1366 + v1368[33]) = *(void *)((char *)v1367 + v1368[33]);
              *(void *)((char *)v1366 + v1368[34]) = *(void *)((char *)v1367 + v1368[34]);
              uint64_t v1480 = v1368[35];
              uint64_t v1481 = (void *)((char *)v1366 + v1480);
              uint64_t v1482 = (void *)((char *)v1367 + v1480);
              uint64_t v1483 = v1482[1];
              void *v1481 = *v1482;
              v1481[1] = v1483;
              uint64_t v1484 = v1368[36];
              uint64_t v1485 = (void *)((char *)v1366 + v1484);
              uint64_t v1486 = (void *)((char *)v1367 + v1484);
              uint64_t v1487 = v1486[1];
              *uint64_t v1485 = *v1486;
              v1485[1] = v1487;
              uint64_t v1488 = v1368[37];
              uint64_t v1489 = (void *)((char *)v1366 + v1488);
              uint64_t v1490 = (void *)((char *)v1367 + v1488);
              uint64_t v1491 = v1490[1];
              *uint64_t v1489 = *v1490;
              v1489[1] = v1491;
              uint64_t v1492 = v1368[38];
              uint64_t v2590 = (char *)v1366 + v1492;
              uint64_t v1493 = (char *)v1367 + v1492;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1493, 1, v2683))
              {
                uint64_t v1494 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2590, v1493, *(void *)(*(void *)(v1494 - 8) + 64));
              }
              else
              {
                v2671(v2590, v1493, v2683);
                __swift_storeEnumTagSinglePayload((uint64_t)v2590, 0, 1, v2683);
              }
              uint64_t v23 = a3;
              long long v542 = v2606;
              uint64_t v1636 = v1368[39];
              uint64_t v1637 = (void *)((char *)v1366 + v1636);
              uint64_t v1638 = (void *)((char *)v1367 + v1636);
              uint64_t v1639 = v1638[1];
              *uint64_t v1637 = *v1638;
              v1637[1] = v1639;
              uint64_t v1640 = v1368[40];
              uint64_t v1641 = (void *)((char *)v1366 + v1640);
              uint64_t v1642 = (void *)((char *)v1367 + v1640);
              uint64_t v2748 = v1642[1];
              *uint64_t v1641 = *v1642;
              v1641[1] = v2748;
              uint64_t v1643 = v1368[41];
              uint64_t v1644 = (char *)v1366 + v1643;
              uint64_t v1645 = (char *)v1367 + v1643;
              v1644[8] = v1645[8];
              *(void *)uint64_t v1644 = *(void *)v1645;
              uint64_t v1646 = v1368[42];
              uint64_t v1647 = (void *)((char *)v1366 + v1646);
              uint64_t v1648 = (void *)((char *)v1367 + v1646);
              uint64_t v1649 = v1648[1];
              *uint64_t v1647 = *v1648;
              v1647[1] = v1649;
              uint64_t v1650 = v1368[43];
              uint64_t v1651 = (char *)v1366 + v1650;
              uint64_t v1652 = (char *)v1367 + v1650;
              *(_OWORD *)uint64_t v1651 = *(_OWORD *)v1652;
              *(void *)(v1651 + 13) = *(void *)(v1652 + 13);
              uint64_t v1653 = v1368[44];
              uint64_t v1654 = (void *)((char *)v1366 + v1653);
              uint64_t v1655 = (void *)((char *)v1367 + v1653);
              uint64_t v1656 = v1655[1];
              *uint64_t v1654 = *v1655;
              v1654[1] = v1656;
              uint64_t v1657 = v1368[45];
              uint64_t v1658 = (void *)((char *)v1366 + v1657);
              uint64_t v1659 = (void *)((char *)v1367 + v1657);
              uint64_t v1660 = v1659[1];
              *uint64_t v1658 = *v1659;
              v1658[1] = v1660;
              uint64_t v1661 = v1368[46];
              uint64_t v1662 = (void *)((char *)v1366 + v1661);
              uint64_t v1663 = (void *)((char *)v1367 + v1661);
              uint64_t v1664 = v1663[1];
              void *v1662 = *v1663;
              v1662[1] = v1664;
              uint64_t v1665 = v1368[47];
              uint64_t v1666 = (void *)((char *)v1366 + v1665);
              uint64_t v1667 = (void *)((char *)v1367 + v1665);
              uint64_t v1668 = v1667[1];
              void *v1666 = *v1667;
              v1666[1] = v1668;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1366, 0, 1, (uint64_t)v1368);
              char v21 = v2716;
              id v368 = v2620;
              uint64_t v870 = v2646;
            }
            uint64_t v1669 = v542[12];
            uint64_t v1670 = (void *)((char *)v368 + v1669);
            v1671 = (void *)((char *)v870 + v1669);
            uint64_t v1672 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1671, 1, (uint64_t)v1672))
            {
              uint64_t v1673 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1670, v1671, *(void *)(*(void *)(v1673 - 8) + 64));
            }
            else
            {
              uint64_t v1674 = v1671[1];
              void *v1670 = *v1671;
              v1670[1] = v1674;
              uint64_t v1675 = v1671[3];
              v1670[2] = v1671[2];
              v1670[3] = v1675;
              uint64_t v1676 = v1671[5];
              v1670[4] = v1671[4];
              v1670[5] = v1676;
              uint64_t v1677 = v1671[7];
              v1670[6] = v1671[6];
              v1670[7] = v1677;
              uint64_t v1678 = v1671[9];
              v1670[8] = v1671[8];
              v1670[9] = v1678;
              uint64_t v1679 = v1671[11];
              v1670[10] = v1671[10];
              v1670[11] = v1679;
              *((unsigned char *)v1670 + 96) = *((unsigned char *)v1671 + 96);
              uint64_t v1680 = v1671[14];
              v1670[13] = v1671[13];
              v1670[14] = v1680;
              uint64_t v1681 = v1671[16];
              v1670[15] = v1671[15];
              v1670[16] = v1681;
              uint64_t v1682 = v1672[14];
              v2749 = (char *)v1670 + v1682;
              uint64_t v1683 = (char *)v1671 + v1682;
              uint64_t v1684 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1683, 1, v1684))
              {
                uint64_t v1685 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2749, v1683, *(void *)(*(void *)(v1685 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1684 - 8) + 16))(v2749, v1683, v1684);
                __swift_storeEnumTagSinglePayload((uint64_t)v2749, 0, 1, v1684);
              }
              uint64_t v1788 = v1672[15];
              uint64_t v1789 = (char *)v1670 + v1788;
              uint64_t v1790 = (char *)v1671 + v1788;
              long long v542 = v2606;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1671 + v1788, 1, v1684))
              {
                uint64_t v1791 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1789, v1790, *(void *)(*(void *)(v1791 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1684 - 8) + 16))(v1789, v1790, v1684);
                __swift_storeEnumTagSinglePayload((uint64_t)v1789, 0, 1, v1684);
              }
              uint64_t v1800 = v1672[16];
              uint64_t v1801 = (void *)((char *)v1670 + v1800);
              uint64_t v1802 = (void *)((char *)v1671 + v1800);
              uint64_t v1803 = v1802[1];
              void *v1801 = *v1802;
              v1801[1] = v1803;
              uint64_t v1804 = v1672[17];
              uint64_t v1805 = (void *)((char *)v1670 + v1804);
              uint64_t v1806 = (void *)((char *)v1671 + v1804);
              uint64_t v2750 = v1806[1];
              *uint64_t v1805 = *v1806;
              v1805[1] = v2750;
              uint64_t v1807 = v1672[18];
              uint64_t v1808 = (void *)((char *)v1670 + v1807);
              uint64_t v1809 = (void *)((char *)v1671 + v1807);
              __dstj = (void *)v1809[1];
              *uint64_t v1808 = *v1809;
              v1808[1] = __dstj;
              uint64_t v1810 = v1672[19];
              uint64_t v1811 = (void *)((char *)v1670 + v1810);
              uint64_t v1812 = (void *)((char *)v1671 + v1810);
              v2593 = (void *)v1812[1];
              *uint64_t v1811 = *v1812;
              v1811[1] = v2593;
              uint64_t v1813 = v1672[20];
              uint64_t v1814 = (void *)((char *)v1670 + v1813);
              uint64_t v1815 = (void *)((char *)v1671 + v1813);
              uint64_t v2572 = v1815[1];
              *uint64_t v1814 = *v1815;
              v1814[1] = v2572;
              *(void *)((char *)v1670 + v1672[21]) = *(void *)((char *)v1671 + v1672[21]);
              *(void *)((char *)v1670 + v1672[22]) = *(void *)((char *)v1671 + v1672[22]);
              uint64_t v1816 = v1672[23];
              uint64_t v1817 = (char *)v1670 + v1816;
              uint64_t v1818 = (char *)v1671 + v1816;
              *(void *)uint64_t v1817 = *(void *)v1818;
              v1817[8] = v1818[8];
              uint64_t v1819 = v1672[24];
              uint64_t v1820 = (char *)v1670 + v1819;
              uint64_t v1821 = (char *)v1671 + v1819;
              *(void *)uint64_t v1820 = *(void *)v1821;
              v1820[8] = v1821[8];
              uint64_t v1822 = v1672[25];
              uint64_t v1823 = (void *)((char *)v1670 + v1822);
              uint64_t v1824 = (void *)((char *)v1671 + v1822);
              uint64_t v2568 = v1824[1];
              void *v1823 = *v1824;
              v1823[1] = v2568;
              uint64_t v1825 = v1672[26];
              uint64_t v1826 = (void *)((char *)v1670 + v1825);
              uint64_t v1827 = (void *)((char *)v1671 + v1825);
              uint64_t v1828 = v1827[1];
              void *v1826 = *v1827;
              v1826[1] = v1828;
              uint64_t v1829 = v1672[27];
              uint64_t v1830 = (void *)((char *)v1670 + v1829);
              uint64_t v1831 = (void *)((char *)v1671 + v1829);
              uint64_t v1832 = v1831[1];
              *uint64_t v1830 = *v1831;
              v1830[1] = v1832;
              uint64_t v1833 = v1672[28];
              v1834 = (void *)((char *)v1670 + v1833);
              uint64_t v1835 = (void *)((char *)v1671 + v1833);
              uint64_t v1836 = v1835[1];
              void *v1834 = *v1835;
              v1834[1] = v1836;
              uint64_t v1837 = v1672[29];
              uint64_t v1838 = (char *)v1670 + v1837;
              uint64_t v1839 = (char *)v1671 + v1837;
              *(void *)uint64_t v1838 = *(void *)v1839;
              v1838[8] = v1839[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1670, 0, 1, (uint64_t)v1672);
              char v21 = v2716;
              id v368 = v2620;
              uint64_t v870 = v2646;
            }
            uint64_t v1840 = v542[13];
            uint64_t v1841 = (void *)((char *)v368 + v1840);
            uint64_t v1842 = (void *)((char *)v870 + v1840);
            uint64_t v1843 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1842, 1, (uint64_t)v1843))
            {
              uint64_t v1844 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1841, v1842, *(void *)(*(void *)(v1844 - 8) + 64));
            }
            else
            {
              uint64_t v1845 = v1842[1];
              void *v1841 = *v1842;
              v1841[1] = v1845;
              uint64_t v2651 = v1842[3];
              v1841[2] = v1842[2];
              v1841[3] = v2651;
              uint64_t v1846 = v1842[5];
              v1841[4] = v1842[4];
              v1841[5] = v1846;
              uint64_t v1847 = v1842[7];
              v1841[6] = v1842[6];
              v1841[7] = v1847;
              uint64_t v1848 = v1842[9];
              v1841[8] = v1842[8];
              v1841[9] = v1848;
              uint64_t v1849 = v1842[11];
              v1841[10] = v1842[10];
              v1841[11] = v1849;
              *((unsigned char *)v1841 + 96) = *((unsigned char *)v1842 + 96);
              uint64_t v1850 = v1842[14];
              v1841[13] = v1842[13];
              v1841[14] = v1850;
              uint64_t v1851 = v1842[16];
              v1841[15] = v1842[15];
              v1841[16] = v1851;
              uint64_t v1852 = v1843[14];
              v2751 = (char *)v1841 + v1852;
              uint64_t v1853 = (char *)v1842 + v1852;
              uint64_t v1854 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1853, 1, v1854))
              {
                uint64_t v1855 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2751, v1853, *(void *)(*(void *)(v1855 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1854 - 8) + 16))(v2751, v1853, v1854);
                __swift_storeEnumTagSinglePayload((uint64_t)v2751, 0, 1, v1854);
              }
              uint64_t v1972 = v1843[15];
              uint64_t v1973 = (void *)((char *)v1841 + v1972);
              uint64_t v1974 = (void *)((char *)v1842 + v1972);
              uint64_t v1975 = v1974[1];
              *uint64_t v1973 = *v1974;
              v1973[1] = v1975;
              uint64_t v1976 = v1843[16];
              uint64_t v1977 = (void *)((char *)v1841 + v1976);
              uint64_t v1978 = (void *)((char *)v1842 + v1976);
              uint64_t v1979 = v1978[1];
              void *v1977 = *v1978;
              v1977[1] = v1979;
              uint64_t v1980 = v1843[17];
              uint64_t v1981 = (void *)((char *)v1841 + v1980);
              uint64_t v1982 = (void *)((char *)v1842 + v1980);
              uint64_t v2752 = v1982[1];
              void *v1981 = *v1982;
              v1981[1] = v2752;
              uint64_t v1983 = v1843[18];
              uint64_t v1984 = (void *)((char *)v1841 + v1983);
              uint64_t v1985 = (void *)((char *)v1842 + v1983);
              uint64_t v2655 = v1985[1];
              *uint64_t v1984 = *v1985;
              v1984[1] = v2655;
              uint64_t v1986 = v1843[19];
              uint64_t v1987 = (void *)((char *)v1841 + v1986);
              uint64_t v1988 = (void *)((char *)v1842 + v1986);
              uint64_t v1989 = v1988[1];
              *uint64_t v1987 = *v1988;
              v1987[1] = v1989;
              *(void *)((char *)v1841 + v1843[20]) = *(void *)((char *)v1842 + v1843[20]);
              uint64_t v1990 = v1843[21];
              uint64_t v1991 = (void *)((char *)v1841 + v1990);
              uint64_t v1992 = (void *)((char *)v1842 + v1990);
              uint64_t v1993 = v1992[1];
              void *v1991 = *v1992;
              v1991[1] = v1993;
              uint64_t v1994 = v1843[22];
              uint64_t v1995 = (void *)((char *)v1841 + v1994);
              uint64_t v1996 = (void *)((char *)v1842 + v1994);
              uint64_t v1997 = v1996[1];
              *uint64_t v1995 = *v1996;
              v1995[1] = v1997;
              uint64_t v1998 = v1843[23];
              uint64_t v1999 = (void *)((char *)v1841 + v1998);
              uint64_t v2000 = (void *)((char *)v1842 + v1998);
              uint64_t v2001 = v2000[1];
              *uint64_t v1999 = *v2000;
              v1999[1] = v2001;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1841, 0, 1, (uint64_t)v1843);
              char v21 = v2716;
              id v368 = v2620;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v368, 0, 1, (uint64_t)v542);
            uint64_t v16 = v2725;
          }
          uint64_t v2002 = v2699[22];
          uint64_t v2003 = (void *)((char *)v16 + v2002);
          uint64_t v2004 = (void *)((char *)v21 + v2002);
          uint64_t v2005 = type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2004, 1, v2005))
          {
            uint64_t v2006 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v2003, v2004, *(void *)(*(void *)(v2006 - 8) + 64));
            uint64_t v145 = v2721;
          }
          else
          {
            uint64_t v2007 = v2004[1];
            *uint64_t v2003 = *v2004;
            v2003[1] = v2007;
            uint64_t v2008 = v2004[3];
            v2003[2] = v2004[2];
            v2003[3] = v2008;
            uint64_t v2009 = v2004[5];
            v2003[4] = v2004[4];
            v2003[5] = v2009;
            uint64_t v2010 = v2004[7];
            v2003[6] = v2004[6];
            v2003[7] = v2010;
            uint64_t v2011 = v2004[9];
            v2003[8] = v2004[8];
            v2003[9] = v2011;
            uint64_t v2732 = v2004[11];
            v2003[10] = v2004[10];
            v2003[11] = v2732;
            v2753 = (int *)v2005;
            uint64_t v2012 = *(int *)(v2005 + 40);
            uint64_t v2013 = (char *)v2003 + v2012;
            uint64_t v2014 = (uint64_t)v2004 + v2012;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v2015 = (void *)v2014;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            int v2016 = __swift_getEnumTagSinglePayload(v2014, 1, v2683);
            uint64_t v145 = v2721;
            if (v2016)
            {
              uint64_t v2017 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2013, v2015, *(void *)(*(void *)(v2017 - 8) + 64));
            }
            else
            {
              v2671(v2013, (char *)v2015, v2683);
              __swift_storeEnumTagSinglePayload((uint64_t)v2013, 0, 1, v2683);
            }
            uint64_t v2018 = v2753[11];
            uint64_t v2019 = (char *)v2003 + v2018;
            uint64_t v2020 = (char *)v2004 + v2018;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2004 + v2018, 1, v2683))
            {
              uint64_t v2021 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2019, v2020, *(void *)(*(void *)(v2021 - 8) + 64));
            }
            else
            {
              v2671(v2019, v2020, v2683);
              __swift_storeEnumTagSinglePayload((uint64_t)v2019, 0, 1, v2683);
            }
            uint64_t v2022 = v2753[12];
            uint64_t v2023 = (void *)((char *)v2003 + v2022);
            uint64_t v2024 = (void *)((char *)v2004 + v2022);
            uint64_t v2025 = v2024[1];
            *uint64_t v2023 = *v2024;
            v2023[1] = v2025;
            uint64_t v2026 = v2753[13];
            uint64_t v2027 = (void *)((char *)v2003 + v2026);
            uint64_t v2028 = (void *)((char *)v2004 + v2026);
            uint64_t v2029 = v2028[1];
            *uint64_t v2027 = *v2028;
            v2027[1] = v2029;
            uint64_t v2030 = v2753[14];
            uint64_t v2031 = (void *)((char *)v2003 + v2030);
            uint64_t v2032 = (void *)((char *)v2004 + v2030);
            uint64_t v2033 = v2032[1];
            *uint64_t v2031 = *v2032;
            v2031[1] = v2033;
            uint64_t v2034 = v2753[15];
            uint64_t v2035 = (char *)v2003 + v2034;
            uint64_t v2036 = (char *)v2004 + v2034;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2036, 1, v2683))
            {
              uint64_t v2037 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2035, v2036, *(void *)(*(void *)(v2037 - 8) + 64));
            }
            else
            {
              v2671(v2035, v2036, v2683);
              __swift_storeEnumTagSinglePayload((uint64_t)v2035, 0, 1, v2683);
            }
            uint64_t v2038 = v2753[16];
            uint64_t v2039 = (void *)((char *)v2003 + v2038);
            uint64_t v2040 = (void *)((char *)v2004 + v2038);
            uint64_t v2041 = v2040[1];
            *uint64_t v2039 = *v2040;
            v2039[1] = v2041;
            uint64_t v2042 = v2753[17];
            uint64_t v2043 = (void *)((char *)v2003 + v2042);
            uint64_t v2044 = (void *)((char *)v2004 + v2042);
            uint64_t v2733 = v2044[1];
            *uint64_t v2043 = *v2044;
            v2043[1] = v2733;
            uint64_t v2045 = v2753[18];
            uint64_t v2046 = (void *)((char *)v2003 + v2045);
            uint64_t v2047 = (void *)((char *)v2004 + v2045);
            uint64_t v2656 = v2047[1];
            void *v2046 = *v2047;
            v2046[1] = v2656;
            uint64_t v2048 = v2753[19];
            uint64_t v2049 = (void *)((char *)v2003 + v2048);
            uint64_t v2050 = (void *)((char *)v2004 + v2048);
            uint64_t v2051 = v2050[1];
            void *v2049 = *v2050;
            v2049[1] = v2051;
            uint64_t v2052 = v2753[20];
            uint64_t v2053 = (void *)((char *)v2003 + v2052);
            uint64_t v2054 = (void *)((char *)v2004 + v2052);
            uint64_t v2055 = v2054[1];
            void *v2053 = *v2054;
            v2053[1] = v2055;
            uint64_t v2056 = v2753[21];
            uint64_t v2057 = (void *)((char *)v2003 + v2056);
            v2058 = (void *)((char *)v2004 + v2056);
            uint64_t v2059 = v2058[1];
            void *v2057 = *v2058;
            v2057[1] = v2059;
            uint64_t v2060 = v2753[22];
            uint64_t v2061 = (void *)((char *)v2003 + v2060);
            uint64_t v2062 = (void *)((char *)v2004 + v2060);
            uint64_t v2063 = v2062[1];
            void *v2061 = *v2062;
            v2061[1] = v2063;
            uint64_t v2064 = v2753[23];
            uint64_t v2065 = (void *)((char *)v2003 + v2064);
            uint64_t v2066 = (void *)((char *)v2004 + v2064);
            uint64_t v2067 = v2066[1];
            void *v2065 = *v2066;
            v2065[1] = v2067;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2003, 0, 1, (uint64_t)v2753);
            char v21 = v2716;
          }
          uint64_t v2068 = v2699[23];
          uint64_t v2069 = (void *)((char *)v2725 + v2068);
          uint64_t v2070 = (void *)((char *)v21 + v2068);
          uint64_t v2071 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2070, 1, (uint64_t)v2071))
          {
            uint64_t v2072 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v2069, v2070, *(void *)(*(void *)(v2072 - 8) + 64));
          }
          else
          {
            uint64_t v2073 = v2070[1];
            void *v2069 = *v2070;
            v2069[1] = v2073;
            uint64_t v2074 = v2070[3];
            v2069[2] = v2070[2];
            v2069[3] = v2074;
            uint64_t v2075 = v2070[5];
            v2069[4] = v2070[4];
            v2069[5] = v2075;
            uint64_t v2076 = v2070[7];
            v2069[6] = v2070[6];
            v2069[7] = v2076;
            uint64_t v2734 = v2070[9];
            v2069[8] = v2070[8];
            v2069[9] = v2734;
            uint64_t v2722 = v2070[11];
            v2069[10] = v2070[10];
            v2069[11] = v2722;
            uint64_t v2077 = v2071[11];
            v2754 = (char *)v2069 + v2077;
            uint64_t v2078 = (char *)v2070 + v2077;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2078, 1, v2683))
            {
              uint64_t v2079 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2754, v2078, *(void *)(*(void *)(v2079 - 8) + 64));
            }
            else
            {
              v2671(v2754, v2078, v2683);
              __swift_storeEnumTagSinglePayload((uint64_t)v2754, 0, 1, v2683);
            }
            uint64_t v2080 = v2071[12];
            uint64_t v2081 = (void *)((char *)v2069 + v2080);
            uint64_t v2082 = (void *)((char *)v2070 + v2080);
            uint64_t v2083 = v2082[1];
            *uint64_t v2081 = *v2082;
            v2081[1] = v2083;
            *(void *)((char *)v2069 + v2071[13]) = *(void *)((char *)v2070 + v2071[13]);
            uint64_t v2084 = v2071[14];
            uint64_t v2085 = (char *)v2069 + v2084;
            uint64_t v2086 = (char *)v2070 + v2084;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2086, 1, v2683))
            {
              uint64_t v2087 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2085, v2086, *(void *)(*(void *)(v2087 - 8) + 64));
            }
            else
            {
              v2671(v2085, v2086, v2683);
              __swift_storeEnumTagSinglePayload((uint64_t)v2085, 0, 1, v2683);
            }
            *(void *)((char *)v2069 + v2071[15]) = *(void *)((char *)v2070 + v2071[15]);
            *(void *)((char *)v2069 + v2071[16]) = *(void *)((char *)v2070 + v2071[16]);
            uint64_t v2088 = v2071[17];
            uint64_t v2089 = (void *)((char *)v2069 + v2088);
            uint64_t v2090 = (void *)((char *)v2070 + v2088);
            uint64_t v2091 = v2090[1];
            *uint64_t v2089 = *v2090;
            v2089[1] = v2091;
            *(void *)((char *)v2069 + v2071[18]) = *(void *)((char *)v2070 + v2071[18]);
            *(void *)((char *)v2069 + v2071[19]) = *(void *)((char *)v2070 + v2071[19]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2069, 0, 1, (uint64_t)v2071);
            char v21 = v2716;
          }
          uint64_t v2092 = v2699[24];
          uint64_t v2093 = (void *)((char *)v2725 + v2092);
          uint64_t v2094 = (void *)((char *)v21 + v2092);
          uint64_t v2095 = type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2094, 1, v2095))
          {
            uint64_t v2096 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v2093, v2094, *(void *)(*(void *)(v2096 - 8) + 64));
          }
          else
          {
            uint64_t v2097 = v2094[1];
            *uint64_t v2093 = *v2094;
            v2093[1] = v2097;
            uint64_t v2098 = v2094[3];
            v2093[2] = v2094[2];
            v2093[3] = v2098;
            uint64_t v2099 = v2094[5];
            v2093[4] = v2094[4];
            v2093[5] = v2099;
            uint64_t v2100 = (int *)v2095;
            uint64_t v2101 = v2094[7];
            v2093[6] = v2094[6];
            v2093[7] = v2101;
            v2755 = v2100;
            uint64_t v2102 = v2100[8];
            v2735 = (char *)v2093 + v2102;
            v2723 = (char *)v2094 + v2102;
            uint64_t v2103 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2723, 1, v2103))
            {
              uint64_t v2104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2735, v2723, *(void *)(*(void *)(v2104 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2103 - 8) + 16))(v2735, v2723, v2103);
              __swift_storeEnumTagSinglePayload((uint64_t)v2735, 0, 1, v2103);
            }
            uint64_t v2105 = v2755[9];
            uint64_t v2106 = (void *)((char *)v2093 + v2105);
            v2107 = (void *)((char *)v2094 + v2105);
            uint64_t v2108 = v2107[1];
            void *v2106 = *v2107;
            v2106[1] = v2108;
            uint64_t v2109 = v2755[10];
            uint64_t v2110 = (void *)((char *)v2093 + v2109);
            v2111 = (void *)((char *)v2094 + v2109);
            uint64_t v2112 = v2111[1];
            void *v2110 = *v2111;
            v2110[1] = v2112;
            uint64_t v2113 = v2755[11];
            uint64_t v2114 = (void *)((char *)v2093 + v2113);
            v2115 = (void *)((char *)v2094 + v2113);
            uint64_t v2116 = v2115[1];
            void *v2114 = *v2115;
            v2114[1] = v2116;
            uint64_t v2117 = v2755[12];
            uint64_t v2118 = (char *)v2093 + v2117;
            v2119 = (char *)v2094 + v2117;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2119, 1, v2683))
            {
              uint64_t v2120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2118, v2119, *(void *)(*(void *)(v2120 - 8) + 64));
            }
            else
            {
              v2671(v2118, v2119, v2683);
              __swift_storeEnumTagSinglePayload((uint64_t)v2118, 0, 1, v2683);
            }
            uint64_t v2121 = v2755[13];
            uint64_t v2122 = (char *)v2093 + v2121;
            uint64_t v2123 = (char *)v2094 + v2121;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2094 + v2121, 1, v2683))
            {
              uint64_t v2124 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2122, v2123, *(void *)(*(void *)(v2124 - 8) + 64));
            }
            else
            {
              v2671(v2122, v2123, v2683);
              __swift_storeEnumTagSinglePayload((uint64_t)v2122, 0, 1, v2683);
            }
            uint64_t v2125 = v2755[14];
            uint64_t v2126 = (char *)v2093 + v2125;
            uint64_t v2127 = (char *)v2094 + v2125;
            *(void *)uint64_t v2126 = *(void *)v2127;
            v2126[8] = v2127[8];
            uint64_t v2128 = v2755[15];
            uint64_t v2129 = (void *)((char *)v2093 + v2128);
            uint64_t v2130 = (void *)((char *)v2094 + v2128);
            uint64_t v2131 = v2130[1];
            *uint64_t v2129 = *v2130;
            v2129[1] = v2131;
            uint64_t v2132 = v2755[16];
            uint64_t v2133 = (void *)((char *)v2093 + v2132);
            uint64_t v2134 = (void *)((char *)v2094 + v2132);
            uint64_t v2135 = v2134[1];
            *uint64_t v2133 = *v2134;
            v2133[1] = v2135;
            uint64_t v2136 = v2755[17];
            uint64_t v2137 = (void *)((char *)v2093 + v2136);
            uint64_t v2138 = (void *)((char *)v2094 + v2136);
            uint64_t v2139 = v2138[1];
            *uint64_t v2137 = *v2138;
            v2137[1] = v2139;
            uint64_t v2140 = v2755[18];
            uint64_t v2141 = (void *)((char *)v2093 + v2140);
            uint64_t v2142 = (void *)((char *)v2094 + v2140);
            uint64_t v2143 = v2142[1];
            *uint64_t v2141 = *v2142;
            v2141[1] = v2143;
            uint64_t v2144 = v2755[19];
            uint64_t v2145 = (void *)((char *)v2093 + v2144);
            uint64_t v2146 = (void *)((char *)v2094 + v2144);
            uint64_t v2147 = v2146[1];
            *uint64_t v2145 = *v2146;
            v2145[1] = v2147;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2093, 0, 1, (uint64_t)v2755);
            char v21 = v2716;
          }
          uint64_t v2148 = v2699[25];
          uint64_t v24 = (uint64_t)v2725;
          uint64_t v2149 = (void *)((char *)v2725 + v2148);
          uint64_t v2150 = (void *)((char *)v21 + v2148);
          uint64_t v2151 = *(void *)((char *)v21 + v2148 + 8);
          if (v2151)
          {
            *uint64_t v2149 = *v2150;
            v2149[1] = v2151;
            uint64_t v2152 = v2150[3];
            v2149[2] = v2150[2];
            v2149[3] = v2152;
            uint64_t v2153 = v2150[5];
            v2149[4] = v2150[4];
            v2149[5] = v2153;
            uint64_t v2154 = v2150[7];
            v2149[6] = v2150[6];
            v2149[7] = v2154;
            uint64_t v2155 = v2150[9];
            v2149[8] = v2150[8];
            v2149[9] = v2155;
            uint64_t v2156 = v2150[11];
            v2149[10] = v2150[10];
            v2149[11] = v2156;
            uint64_t v2714 = v2150[13];
            v2149[12] = v2150[12];
            v2149[13] = v2714;
            uint64_t v2736 = v2150[15];
            v2149[14] = v2150[14];
            v2149[15] = v2736;
            uint64_t v2157 = v2150[17];
            v2149[16] = v2150[16];
            v2149[17] = v2157;
            swift_bridgeObjectRetain();
            uint64_t v24 = (uint64_t)v2725;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v21 = v2716;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            memcpy(v2149, v2150, 0x90uLL);
          }
          goto LABEL_556;
      }
    }
    uint64_t v2539 = *(int *)(v23 + 52);
    uint64_t v2540 = *(int *)(v23 + 56);
    uint64_t v2541 = (void *)(v9 + v2539);
    uint64_t v2542 = (void *)((char *)v2746 + v2539);
    uint64_t v2543 = v2542[1];
    *uint64_t v2541 = *v2542;
    v2541[1] = v2543;
    *(void *)(v9 + v2540) = *(void *)((char *)v2746 + v2540);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v9;
}

uint64_t destroy for SearchSpotlightEntity(uint64_t a1, uint64_t a2)
{
  swift_release();
  unint64_t v4 = *(void *)(a1 + 16);
  if (v4 >> 60 != 15) {
    outlined consume of Data._Representation(*(void *)(a1 + 8), v4);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 48);
  uint64_t v6 = type metadata accessor for SearchResult(0);
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
  {
    type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = (int *)type metadata accessor for EmailDocument(0);
        uint64_t v8 = v5 + v7[12];
        uint64_t v9 = type metadata accessor for Date();
        uint64_t v289 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
        v289(v8, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v5 + v7[19]))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v10 = v5 + v7[21];
        uint64_t v11 = type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
        {
          swift_bridgeObjectRelease();
          uint64_t v292 = (int *)v11;
          uint64_t v12 = v10 + *(int *)(v11 + 20);
          uint64_t v13 = type metadata accessor for RentalCarReservation(0);
          if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v14 = v12 + *(int *)(v13 + 140);
            if (!__swift_getEnumTagSinglePayload(v14, 1, v9)) {
              v289(v14, v9);
            }
            uint64_t v15 = v12 + *(int *)(v13 + 144);
            if (!__swift_getEnumTagSinglePayload(v15, 1, v9)) {
              v289(v15, v9);
            }
          }
          uint64_t v16 = v10 + v292[6];
          uint64_t v17 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v16, 1, v17))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v18 = v16 + *(int *)(v17 + 112);
            if (!__swift_getEnumTagSinglePayload(v18, 1, v9)) {
              v289(v18, v9);
            }
            uint64_t v19 = v16 + *(int *)(v17 + 116);
            if (!__swift_getEnumTagSinglePayload(v19, 1, v9)) {
              v289(v19, v9);
            }
          }
          uint64_t v20 = v10 + v292[7];
          char v21 = (int *)type metadata accessor for TicketedShow(0);
          uint64_t v285 = v10;
          if (!__swift_getEnumTagSinglePayload(v20, 1, (uint64_t)v21))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v22 = v20 + v21[29];
            uint64_t v23 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v22, 1, v23)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
            }
            swift_bridgeObjectRelease();
            uint64_t v24 = v20 + v21[31];
            if (!__swift_getEnumTagSinglePayload(v24, 1, v9)) {
              v289(v24, v9);
            }
            uint64_t v25 = v20 + v21[32];
            uint64_t v10 = v285;
            if (!__swift_getEnumTagSinglePayload(v25, 1, v9)) {
              v289(v25, v9);
            }
          }
          uint64_t v26 = v10 + v292[8];
          uint64_t v27 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v26, 1, v27))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v28 = v26 + *(int *)(v27 + 108);
            if (!__swift_getEnumTagSinglePayload(v28, 1, v9)) {
              v289(v28, v9);
            }
            uint64_t v29 = v26 + *(int *)(v27 + 112);
            if (!__swift_getEnumTagSinglePayload(v29, 1, v9)) {
              v289(v29, v9);
            }
          }
          uint64_t v30 = v10 + v292[9];
          uint64_t v31 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v30, 1, (uint64_t)v31))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v32 = v30 + v31[24];
            if (!__swift_getEnumTagSinglePayload(v32, 1, v9)) {
              v289(v32, v9);
            }
            uint64_t v33 = v30 + v31[25];
            if (!__swift_getEnumTagSinglePayload(v33, 1, v9)) {
              v289(v33, v9);
            }
            uint64_t v34 = v30 + v31[26];
            uint64_t v35 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v34, 1, v35)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
            }
          }
          uint64_t v36 = v285 + v292[10];
          uint64_t v37 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v36, 1, (uint64_t)v37))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v38 = v36 + v37[22];
            if (!__swift_getEnumTagSinglePayload(v38, 1, v9)) {
              v289(v38, v9);
            }
            uint64_t v39 = v36 + v37[23];
            if (!__swift_getEnumTagSinglePayload(v39, 1, v9)) {
              v289(v39, v9);
            }
            uint64_t v40 = v36 + v37[25];
            uint64_t v41 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v40, 1, v41)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
            }
          }
          uint64_t v42 = v292;
          uint64_t v43 = v285;
          uint64_t v44 = v285 + v292[11];
          uint64_t v45 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v44, 1, (uint64_t)v45))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v46 = v44 + v45[13];
            uint64_t v47 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v46, 1, v47)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
            }
            uint64_t v283 = v9;
            uint64_t v48 = v44 + v45[14];
            if (!__swift_getEnumTagSinglePayload(v48, 1, v47)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v48, v47);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v49 = v44 + v45[18];
            uint64_t v50 = type metadata accessor for DateComponents();
            uint64_t v51 = *(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8);
            v51(v49, v50);
            v51(v44 + v45[19], v50);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v52 = v44 + v45[38];
            uint64_t v9 = v283;
            if (!__swift_getEnumTagSinglePayload(v52, 1, v283)) {
              v289(v52, v283);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v43 = v285;
            uint64_t v42 = v292;
          }
          uint64_t v53 = v43 + v42[12];
          uint64_t v54 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v53, 1, v54))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v55 = v53 + *(int *)(v54 + 56);
            uint64_t v56 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v55, 1, v56)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8))(v55, v56);
            }
            uint64_t v57 = v53 + *(int *)(v54 + 60);
            if (!__swift_getEnumTagSinglePayload(v57, 1, v56)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8))(v57, v56);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v43 = v285;
            uint64_t v42 = v292;
          }
          uint64_t v58 = v43 + v42[13];
          uint64_t v59 = type metadata accessor for RestaurantReservation(0);
          if (!__swift_getEnumTagSinglePayload(v58, 1, v59))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v60 = v58 + *(int *)(v59 + 56);
            uint64_t v61 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v60, 1, v61)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v60, v61);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v62 = v5 + v7[22];
        uint64_t v63 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v62, 1, (uint64_t)v63))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v64 = v62 + v63[10];
          if (!__swift_getEnumTagSinglePayload(v64, 1, v9)) {
            v289(v64, v9);
          }
          uint64_t v65 = v62 + v63[11];
          if (!__swift_getEnumTagSinglePayload(v65, 1, v9)) {
            v289(v65, v9);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v66 = v62 + v63[15];
          if (!__swift_getEnumTagSinglePayload(v66, 1, v9)) {
            v289(v66, v9);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v67 = v5 + v7[23];
        uint64_t v68 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v67, 1, v68))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v69 = v67 + *(int *)(v68 + 44);
          if (!__swift_getEnumTagSinglePayload(v69, 1, v9)) {
            v289(v69, v9);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v70 = v67 + *(int *)(v68 + 56);
          if (!__swift_getEnumTagSinglePayload(v70, 1, v9)) {
            v289(v70, v9);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v71 = v5 + v7[24];
        uint64_t v72 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v71, 1, (uint64_t)v72))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v73 = v71 + v72[8];
          uint64_t v74 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v73, 1, v74)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v74 - 8) + 8))(v73, v74);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v75 = v71 + v72[12];
          if (!__swift_getEnumTagSinglePayload(v75, 1, v9)) {
            v289(v75, v9);
          }
          uint64_t v76 = v71 + v72[13];
          if (!__swift_getEnumTagSinglePayload(v76, 1, v9)) {
            v289(v76, v9);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v77 = v7[25];
        goto LABEL_255;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v78 = (int *)type metadata accessor for MobileSMSDocument(0);
        uint64_t v79 = v5 + v78[10];
        uint64_t v80 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v79, 1, v80)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v79, v80);
        }
        uint64_t v81 = v5 + v78[11];
        uint64_t v82 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v81, 1, v82)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v81, v82);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v5 + v78[17]))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v83 = v5 + v78[19];
        uint64_t v84 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v83, 1, (uint64_t)v84))
        {
          uint64_t v293 = v82;
          swift_bridgeObjectRelease();
          uint64_t v85 = v83 + v84[5];
          uint64_t v86 = type metadata accessor for RentalCarReservation(0);
          uint64_t v290 = v84;
          if (!__swift_getEnumTagSinglePayload(v85, 1, v86))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v87 = v85 + *(int *)(v86 + 140);
            if (!__swift_getEnumTagSinglePayload(v87, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v87, v80);
            }
            uint64_t v88 = v85 + *(int *)(v86 + 144);
            uint64_t v84 = v290;
            if (!__swift_getEnumTagSinglePayload(v88, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v88, v80);
            }
          }
          uint64_t v89 = v83 + v84[6];
          uint64_t v90 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v89, 1, v90))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v91 = v89 + *(int *)(v90 + 112);
            if (!__swift_getEnumTagSinglePayload(v91, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v91, v80);
            }
            uint64_t v92 = v89 + *(int *)(v90 + 116);
            uint64_t v84 = v290;
            if (!__swift_getEnumTagSinglePayload(v92, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v92, v80);
            }
          }
          uint64_t v93 = v83 + v84[7];
          uint64_t v94 = (int *)type metadata accessor for TicketedShow(0);
          if (!__swift_getEnumTagSinglePayload(v93, 1, (uint64_t)v94))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v95 = v93 + v94[29];
            if (!__swift_getEnumTagSinglePayload(v95, 1, v293)) {
              (*(void (**)(uint64_t))(*(void *)(v293 - 8) + 8))(v95);
            }
            swift_bridgeObjectRelease();
            uint64_t v96 = v93 + v94[31];
            if (!__swift_getEnumTagSinglePayload(v96, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v96, v80);
            }
            uint64_t v97 = v93 + v94[32];
            uint64_t v84 = v290;
            if (!__swift_getEnumTagSinglePayload(v97, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v97, v80);
            }
          }
          uint64_t v98 = v83 + v84[8];
          uint64_t v99 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v98, 1, v99))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v100 = v98 + *(int *)(v99 + 108);
            if (!__swift_getEnumTagSinglePayload(v100, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v100, v80);
            }
            uint64_t v101 = v98 + *(int *)(v99 + 112);
            uint64_t v84 = v290;
            if (!__swift_getEnumTagSinglePayload(v101, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v101, v80);
            }
          }
          uint64_t v102 = v83 + v84[9];
          uint64_t v103 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v102, 1, (uint64_t)v103))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v104 = v102 + v103[24];
            if (!__swift_getEnumTagSinglePayload(v104, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v104, v80);
            }
            uint64_t v105 = v102 + v103[25];
            if (!__swift_getEnumTagSinglePayload(v105, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v105, v80);
            }
            uint64_t v106 = v102 + v103[26];
            uint64_t v84 = v290;
            if (!__swift_getEnumTagSinglePayload(v106, 1, v293)) {
              (*(void (**)(uint64_t))(*(void *)(v293 - 8) + 8))(v106);
            }
          }
          uint64_t v107 = v83 + v84[10];
          uint64_t v108 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v107, 1, (uint64_t)v108))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v109 = v107 + v108[22];
            if (!__swift_getEnumTagSinglePayload(v109, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v109, v80);
            }
            uint64_t v110 = v107 + v108[23];
            if (!__swift_getEnumTagSinglePayload(v110, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v110, v80);
            }
            uint64_t v111 = v107 + v108[25];
            uint64_t v84 = v290;
            if (!__swift_getEnumTagSinglePayload(v111, 1, v293)) {
              (*(void (**)(uint64_t))(*(void *)(v293 - 8) + 8))(v111);
            }
          }
          uint64_t v112 = v83 + v84[11];
          uint64_t v113 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v112, 1, (uint64_t)v113))
          {
            uint64_t v287 = v83;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v114 = v112 + v113[13];
            if (!__swift_getEnumTagSinglePayload(v114, 1, v293)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v293 - 8) + 8))(v114, v293);
            }
            uint64_t v284 = v80;
            uint64_t v115 = v112 + v113[14];
            if (!__swift_getEnumTagSinglePayload(v115, 1, v293)) {
              (*(void (**)(uint64_t))(*(void *)(v293 - 8) + 8))(v115);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v116 = v112 + v113[18];
            uint64_t v117 = type metadata accessor for DateComponents();
            uint64_t v118 = *(void (**)(uint64_t, uint64_t))(*(void *)(v117 - 8) + 8);
            v118(v116, v117);
            v118(v112 + v113[19], v117);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v119 = v112 + v113[38];
            uint64_t v80 = v284;
            if (!__swift_getEnumTagSinglePayload(v119, 1, v284)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v284 - 8) + 8))(v119, v284);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v83 = v287;
            uint64_t v84 = v290;
          }
          uint64_t v120 = v83 + v84[12];
          uint64_t v121 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v120, 1, v121))
          {
            uint64_t v288 = v83;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v122 = v120 + *(int *)(v121 + 56);
            uint64_t v123 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v122, 1, v123)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v123 - 8) + 8))(v122, v123);
            }
            uint64_t v124 = v120 + *(int *)(v121 + 60);
            if (!__swift_getEnumTagSinglePayload(v124, 1, v123)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v123 - 8) + 8))(v124, v123);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v83 = v288;
            uint64_t v84 = v290;
          }
          uint64_t v125 = v83 + v84[13];
          uint64_t v126 = type metadata accessor for RestaurantReservation(0);
          uint64_t v82 = v293;
          if (!__swift_getEnumTagSinglePayload(v125, 1, v126))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v127 = v125 + *(int *)(v126 + 56);
            uint64_t v128 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v127, 1, v128)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v128 - 8) + 8))(v127, v128);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v82 = v293;
          }
        }
        uint64_t v129 = v5 + v78[20];
        uint64_t v130 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v129, 1, (uint64_t)v130))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v131 = v129 + v130[10];
          if (!__swift_getEnumTagSinglePayload(v131, 1, v80)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v131, v80);
          }
          uint64_t v132 = v129 + v130[11];
          if (!__swift_getEnumTagSinglePayload(v132, 1, v80)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v132, v80);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v133 = v129 + v130[15];
          if (!__swift_getEnumTagSinglePayload(v133, 1, v80)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v133, v80);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v134 = v5 + v78[21];
        uint64_t v135 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v134, 1, v135))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v136 = v134 + *(int *)(v135 + 44);
          if (!__swift_getEnumTagSinglePayload(v136, 1, v80)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v136, v80);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v137 = v134 + *(int *)(v135 + 56);
          if (!__swift_getEnumTagSinglePayload(v137, 1, v80)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v137, v80);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v138 = v5 + v78[22];
        uint64_t v139 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v138, 1, (uint64_t)v139))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v140 = v138 + v139[8];
          if (!__swift_getEnumTagSinglePayload(v140, 1, v82)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v140, v82);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v141 = v138 + v139[12];
          if (!__swift_getEnumTagSinglePayload(v141, 1, v80)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v141, v80);
          }
          uint64_t v142 = v138 + v139[13];
          if (!__swift_getEnumTagSinglePayload(v142, 1, v80)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v142, v80);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v77 = v78[23];
        goto LABEL_255;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v143 = (int *)type metadata accessor for CalendarEvent(0);
        uint64_t v144 = v5 + v143[7];
        uint64_t v145 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v144, 1, v145)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v145 - 8) + 8))(v144, v145);
        }
        uint64_t v146 = v5 + v143[8];
        if (!__swift_getEnumTagSinglePayload(v146, 1, v145)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v145 - 8) + 8))(v146, v145);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!*(void *)(v5 + v143[13])) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_337;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v147 = (int *)type metadata accessor for Photo(0);
        uint64_t v148 = v5 + v147[11];
        uint64_t v149 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v148, 1, v149)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v148, v149);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v150 = v5 + v147[17];
        uint64_t v151 = type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v150, 1, v151))
        {
          swift_bridgeObjectRelease();
          uint64_t v294 = (int *)v151;
          uint64_t v152 = v150 + *(int *)(v151 + 20);
          uint64_t v153 = type metadata accessor for RentalCarReservation(0);
          if (!__swift_getEnumTagSinglePayload(v152, 1, v153))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v154 = v152 + *(int *)(v153 + 140);
            if (!__swift_getEnumTagSinglePayload(v154, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v154, v149);
            }
            uint64_t v155 = v152 + *(int *)(v153 + 144);
            if (!__swift_getEnumTagSinglePayload(v155, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v155, v149);
            }
          }
          uint64_t v156 = v150 + v294[6];
          uint64_t v157 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v156, 1, v157))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v158 = v156 + *(int *)(v157 + 112);
            if (!__swift_getEnumTagSinglePayload(v158, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v158, v149);
            }
            uint64_t v159 = v156 + *(int *)(v157 + 116);
            if (!__swift_getEnumTagSinglePayload(v159, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v159, v149);
            }
          }
          uint64_t v160 = v150 + v294[7];
          uint64_t v161 = (int *)type metadata accessor for TicketedShow(0);
          uint64_t v291 = v150;
          if (!__swift_getEnumTagSinglePayload(v160, 1, (uint64_t)v161))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v162 = v160 + v161[29];
            uint64_t v163 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v162, 1, v163)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v163 - 8) + 8))(v162, v163);
            }
            swift_bridgeObjectRelease();
            uint64_t v164 = v160 + v161[31];
            if (!__swift_getEnumTagSinglePayload(v164, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v164, v149);
            }
            uint64_t v165 = v160 + v161[32];
            uint64_t v150 = v291;
            if (!__swift_getEnumTagSinglePayload(v165, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v165, v149);
            }
          }
          uint64_t v166 = v150 + v294[8];
          uint64_t v167 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v166, 1, v167))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v168 = v166 + *(int *)(v167 + 108);
            if (!__swift_getEnumTagSinglePayload(v168, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v168, v149);
            }
            uint64_t v169 = v166 + *(int *)(v167 + 112);
            if (!__swift_getEnumTagSinglePayload(v169, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v169, v149);
            }
          }
          uint64_t v170 = v150 + v294[9];
          uint64_t v171 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v170, 1, (uint64_t)v171))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v172 = v170 + v171[24];
            if (!__swift_getEnumTagSinglePayload(v172, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v172, v149);
            }
            uint64_t v173 = v170 + v171[25];
            if (!__swift_getEnumTagSinglePayload(v173, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v173, v149);
            }
            uint64_t v174 = v170 + v171[26];
            uint64_t v175 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v174, 1, v175)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v175 - 8) + 8))(v174, v175);
            }
          }
          uint64_t v176 = v291 + v294[10];
          long long v177 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v176, 1, (uint64_t)v177))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v178 = v176 + v177[22];
            if (!__swift_getEnumTagSinglePayload(v178, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v178, v149);
            }
            uint64_t v179 = v176 + v177[23];
            if (!__swift_getEnumTagSinglePayload(v179, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v179, v149);
            }
            uint64_t v180 = v176 + v177[25];
            uint64_t v181 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v180, 1, v181)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v181 - 8) + 8))(v180, v181);
            }
          }
          uint64_t v182 = v291;
          uint64_t v183 = v294;
          uint64_t v184 = v291 + v294[11];
          uint64_t v185 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v184, 1, (uint64_t)v185))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v186 = v184 + v185[13];
            uint64_t v187 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v186, 1, v187)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v187 - 8) + 8))(v186, v187);
            }
            uint64_t v286 = v149;
            uint64_t v188 = v184 + v185[14];
            if (!__swift_getEnumTagSinglePayload(v188, 1, v187)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v187 - 8) + 8))(v188, v187);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v189 = v184 + v185[18];
            uint64_t v190 = type metadata accessor for DateComponents();
            long long v191 = *(void (**)(uint64_t, uint64_t))(*(void *)(v190 - 8) + 8);
            v191(v189, v190);
            v191(v184 + v185[19], v190);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v192 = v184 + v185[38];
            uint64_t v149 = v286;
            if (!__swift_getEnumTagSinglePayload(v192, 1, v286)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v286 - 8) + 8))(v192, v286);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v182 = v291;
            uint64_t v183 = v294;
          }
          uint64_t v193 = v182 + v183[12];
          uint64_t v194 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v193, 1, v194))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v195 = v193 + *(int *)(v194 + 56);
            uint64_t v196 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v195, 1, v196)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v196 - 8) + 8))(v195, v196);
            }
            uint64_t v197 = v193 + *(int *)(v194 + 60);
            if (!__swift_getEnumTagSinglePayload(v197, 1, v196)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v196 - 8) + 8))(v197, v196);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v182 = v291;
            uint64_t v183 = v294;
          }
          uint64_t v198 = v182 + v183[13];
          uint64_t v199 = type metadata accessor for RestaurantReservation(0);
          if (!__swift_getEnumTagSinglePayload(v198, 1, v199))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v200 = v198 + *(int *)(v199 + 56);
            uint64_t v201 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v200, 1, v201)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v201 - 8) + 8))(v200, v201);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v202 = v5 + v147[18];
        uint64_t v203 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v202, 1, (uint64_t)v203))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v204 = v202 + v203[10];
          if (!__swift_getEnumTagSinglePayload(v204, 1, v149)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v204, v149);
          }
          uint64_t v205 = v202 + v203[11];
          if (!__swift_getEnumTagSinglePayload(v205, 1, v149)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v205, v149);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v206 = v202 + v203[15];
          if (!__swift_getEnumTagSinglePayload(v206, 1, v149)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v206, v149);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v207 = v5 + v147[19];
        uint64_t v208 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v207, 1, v208))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v209 = v207 + *(int *)(v208 + 44);
          if (!__swift_getEnumTagSinglePayload(v209, 1, v149)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v209, v149);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v210 = v207 + *(int *)(v208 + 56);
          if (!__swift_getEnumTagSinglePayload(v210, 1, v149)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v210, v149);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v211 = v5 + v147[20];
        uint64_t v212 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v211, 1, (uint64_t)v212))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v213 = v211 + v212[8];
          uint64_t v214 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v213, 1, v214)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v214 - 8) + 8))(v213, v214);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v215 = v211 + v212[12];
          if (!__swift_getEnumTagSinglePayload(v215, 1, v149)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v215, v149);
          }
          uint64_t v216 = v211 + v212[13];
          if (!__swift_getEnumTagSinglePayload(v216, 1, v149)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v216, v149);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v77 = v147[21];
LABEL_255:
        if (!*(void *)(v5 + v77 + 8)) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_337;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v217 = (int *)type metadata accessor for NoteDocument(0);
        uint64_t v218 = v5 + v217[8];
        uint64_t v219 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v218, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v218, v219);
        }
        goto LABEL_276;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v220 = (int *)type metadata accessor for Reminder(0);
        uint64_t v221 = v5 + v220[7];
        uint64_t v222 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v221, 1, v222)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v222 - 8) + 8))(v221, v222);
        }
        uint64_t v223 = v5 + v220[8];
        if (!__swift_getEnumTagSinglePayload(v223, 1, v222)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v222 - 8) + 8))(v223, v222);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v224 = v220[12];
        goto LABEL_326;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v225 = type metadata accessor for PhoneHistory(0);
        uint64_t v226 = v5 + *(int *)(v225 + 40);
        uint64_t v227 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v226, 1, v227)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v227 - 8) + 8))(v226, v227);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v224 = *(int *)(v225 + 52);
        goto LABEL_326;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v228 = (int *)type metadata accessor for VoicemailTranscript(0);
        uint64_t v229 = v228[7];
        goto LABEL_270;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v224 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
        goto LABEL_326;
      case 9u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v228 = (int *)type metadata accessor for VoiceMemo(0);
        uint64_t v229 = v228[6];
LABEL_270:
        uint64_t v230 = v5 + v229;
        uint64_t v231 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v230, 1, v231)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v231 - 8) + 8))(v230, v231);
        }
        uint64_t v224 = v228[8];
        goto LABEL_326;
      case 0xAu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v217 = (int *)type metadata accessor for Safari(0);
        uint64_t v232 = v5 + v217[6];
        uint64_t v219 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v232, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v232, v219);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_276:
        uint64_t v233 = v217[9];
        goto LABEL_314;
      case 0xBu:
        swift_bridgeObjectRelease();

        break;
      case 0xCu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v234 = v5 + *(int *)(type metadata accessor for WalletTransaction(0) + 28);
        uint64_t v235 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v234, 1, v235)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v235 - 8) + 8))(v234, v235);
        }
        goto LABEL_280;
      case 0xDu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v236 = v5 + *(int *)(type metadata accessor for WalletPass(0) + 28);
        uint64_t v237 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v236, 1, v237)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v237 - 8) + 8))(v236, v237);
        }
        swift_bridgeObjectRelease();
        goto LABEL_337;
      case 0xEu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_337;
      case 0xFu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v238 = (int *)type metadata accessor for FlightReservation(0);
        uint64_t v239 = v5 + v238[13];
        uint64_t v240 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v239, 1, v240)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v240 - 8) + 8))(v239, v240);
        }
        uint64_t v241 = v5 + v238[14];
        if (!__swift_getEnumTagSinglePayload(v241, 1, v240)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v240 - 8) + 8))(v241, v240);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v242 = v5 + v238[18];
        uint64_t v243 = type metadata accessor for DateComponents();
        uint64_t v244 = *(void (**)(uint64_t, uint64_t))(*(void *)(v243 - 8) + 8);
        v244(v242, v243);
        v244(v5 + v238[19], v243);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v245 = v5 + v238[38];
        uint64_t v246 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v245, 1, v246)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v246 - 8) + 8))(v245, v246);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v247 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
        goto LABEL_334;
      case 0x10u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v248 = type metadata accessor for HotelReservation(0);
        uint64_t v249 = v5 + *(int *)(v248 + 56);
        uint64_t v250 = type metadata accessor for DateComponents();
        if (!__swift_getEnumTagSinglePayload(v249, 1, v250)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v250 - 8) + 8))(v249, v250);
        }
        uint64_t v251 = v5 + *(int *)(v248 + 60);
        if (!__swift_getEnumTagSinglePayload(v251, 1, v250)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v250 - 8) + 8))(v251, v250);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_337;
      case 0x11u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v252 = v5 + *(int *)(type metadata accessor for RestaurantReservation(0) + 56);
        uint64_t v253 = type metadata accessor for DateComponents();
        if (!__swift_getEnumTagSinglePayload(v252, 1, v253)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v253 - 8) + 8))(v252, v253);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_337;
      case 0x12u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v254 = type metadata accessor for RentalCarReservation(0);
        uint64_t v255 = v5 + *(int *)(v254 + 140);
        uint64_t v219 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v255, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v255, v219);
        }
        uint64_t v233 = *(int *)(v254 + 144);
        goto LABEL_314;
      case 0x13u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v256 = type metadata accessor for TicketedTransportation(0);
        uint64_t v257 = v5 + *(int *)(v256 + 112);
        uint64_t v219 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v257, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v257, v219);
        }
        uint64_t v233 = *(int *)(v256 + 116);
        goto LABEL_314;
      case 0x14u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v258 = (int *)type metadata accessor for TicketedShow(0);
        uint64_t v259 = v5 + v258[29];
        uint64_t v260 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v259, 1, v260)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v260 - 8) + 8))(v259, v260);
        }
        swift_bridgeObjectRelease();
        uint64_t v261 = v5 + v258[31];
        uint64_t v262 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v261, 1, v262)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v262 - 8) + 8))(v261, v262);
        }
        uint64_t v263 = v5 + v258[32];
        goto LABEL_327;
      case 0x15u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v264 = type metadata accessor for Appointment(0);
        uint64_t v265 = v5 + *(int *)(v264 + 108);
        uint64_t v219 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v265, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v265, v219);
        }
        uint64_t v233 = *(int *)(v264 + 112);
LABEL_314:
        uint64_t v266 = v5 + v233;
        if (!__swift_getEnumTagSinglePayload(v5 + v233, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v266, v219);
        }
        break;
      case 0x16u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v267 = (int *)type metadata accessor for Party(0);
        uint64_t v268 = v5 + v267[24];
        uint64_t v269 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v268, 1, v269)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v269 - 8) + 8))(v268, v269);
        }
        uint64_t v270 = v5 + v267[25];
        if (!__swift_getEnumTagSinglePayload(v270, 1, v269)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v269 - 8) + 8))(v270, v269);
        }
        uint64_t v224 = v267[26];
        goto LABEL_326;
      case 0x17u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v271 = (int *)type metadata accessor for Trip(0);
        uint64_t v272 = v5 + v271[22];
        uint64_t v273 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v272, 1, v273)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v273 - 8) + 8))(v272, v273);
        }
        uint64_t v274 = v5 + v271[23];
        if (!__swift_getEnumTagSinglePayload(v274, 1, v273)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v273 - 8) + 8))(v274, v273);
        }
        uint64_t v224 = v271[25];
LABEL_326:
        uint64_t v263 = v5 + v224;
        uint64_t v262 = type metadata accessor for URL();
LABEL_327:
        if (!__swift_getEnumTagSinglePayload(v263, 1, v262)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v262 - 8) + 8))(v263, v262);
        }
        break;
      case 0x18u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v275 = type metadata accessor for GlobalItem();
        uint64_t v276 = v5 + *(int *)(v275 + 28);
        uint64_t v277 = type metadata accessor for GlobalDialog();
        if (!__swift_getEnumTagSinglePayload(v276, 1, v277)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v277 - 8) + 8))(v276, v277);
        }
        uint64_t v278 = (uint64_t *)(v5 + *(int *)(v275 + 32));
        unint64_t v279 = v278[1];
        if (v279 >> 60 != 15) {
          outlined consume of Data._Representation(*v278, v279);
        }
        uint64_t v247 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_334:
        __swift_instantiateConcreteTypeFromMangledName(v247);
        goto LABEL_337;
      case 0x19u:
LABEL_280:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_337;
      case 0x1Au:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v280 = v5 + *(int *)(type metadata accessor for Answer(0) + 36);
        uint64_t v281 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v280, 1, v281)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v281 - 8) + 8))(v280, v281);
        }
LABEL_337:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_release();
}