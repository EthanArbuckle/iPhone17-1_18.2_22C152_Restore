unint64_t lazy protocol witness table accessor for type String? and conformance <A> A?()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type String? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type String? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for String?);
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type String? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Date? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type Date? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type Date? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Date?);
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type Date and conformance Date, MEMORY[0x263F07490]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Date? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type CLPlacemark? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type CLPlacemark? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type CLPlacemark? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CLPlacemark?);
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type CLPlacemark and conformance NSObject, (void (*)(uint64_t))type metadata accessor for CLPlacemark);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CLPlacemark? and conformance <A> A?);
  }
  return result;
}

unint64_t type metadata accessor for CLPlacemark()
{
  unint64_t result = lazy cache variable for type metadata for CLPlacemark;
  if (!lazy cache variable for type metadata for CLPlacemark)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for CLPlacemark);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type IntentFile? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type IntentFile? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type IntentFile? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
    lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type IntentFile and conformance IntentFile, MEMORY[0x263EFB730]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IntentFile? and conformance <A> A?);
  }
  return result;
}

uint64_t _s10OmniSearch0B6ResultVWObTm_2(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t outlined init with take of AppEntity & CardDisplayable & SpotlightItemProviding(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(void *)(a2 + 48) = *((void *)a1 + 6);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_257F80690()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v1 = *(void *)(v0 + 96);
  if (v1 >> 60 != 15) {
    outlined consume of Data._Representation(*(void *)(v0 + 88), v1);
  }
  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_257F8076C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v1 = *(void *)(v0 + 192);
  if (v1 >> 60 != 15) {
    outlined consume of Data._Representation(*(void *)(v0 + 184), v1);
  }
  return MEMORY[0x270FA0238](v0, 200, 7);
}

uint64_t base witness table accessor for AppEntity in IdCardEntity()
{
  return lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type IdCardEntity and conformance IdCardEntity, (void (*)(uint64_t))type metadata accessor for IdCardEntity);
}

uint64_t instantiation function for generic protocol witness table for IdCardEntity(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type IdCardEntity and conformance IdCardEntity, (void (*)(uint64_t))type metadata accessor for IdCardEntity);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for AppValue in IdCardEntity()
{
  return lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type IdCardEntity and conformance IdCardEntity, (void (*)(uint64_t))type metadata accessor for IdCardEntity);
}

uint64_t base witness table accessor for DisplayRepresentable in IdCardEntity()
{
  return lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type IdCardEntity and conformance IdCardEntity, (void (*)(uint64_t))type metadata accessor for IdCardEntity);
}

uint64_t base witness table accessor for Identifiable in IdCardEntity()
{
  return lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type IdCardEntity and conformance IdCardEntity, (void (*)(uint64_t))type metadata accessor for IdCardEntity);
}

uint64_t associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in IdCardEntity()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type _TransientAppEntityQuery<IdCardEntity> and conformance _TransientAppEntityQuery<A>, &demangling cache variable for type metadata for _TransientAppEntityQuery<IdCardEntity>);
}

uint64_t base witness table accessor for InstanceDisplayRepresentable in IdCardEntity()
{
  return lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type IdCardEntity and conformance IdCardEntity, (void (*)(uint64_t))type metadata accessor for IdCardEntity);
}

uint64_t base witness table accessor for TypeDisplayRepresentable in IdCardEntity()
{
  return lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type IdCardEntity and conformance IdCardEntity, (void (*)(uint64_t))type metadata accessor for IdCardEntity);
}

uint64_t base witness table accessor for PersistentlyIdentifiable in IdCardEntity()
{
  return lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type IdCardEntity and conformance IdCardEntity, (void (*)(uint64_t))type metadata accessor for IdCardEntity);
}

uint64_t base witness table accessor for _IntentValue in IdCardEntity()
{
  return lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type IdCardEntity and conformance IdCardEntity, (void (*)(uint64_t))type metadata accessor for IdCardEntity);
}

uint64_t associated type witness table accessor for Identifiable.ID : Hashable in IdCardEntity()
{
  return lazy protocol witness table accessor for type Date and conformance Date((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x263F07508]);
}

uint64_t base witness table accessor for CustomLocalizedStringResourceConvertible in IdCardEntity()
{
  return lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type IdCardEntity and conformance IdCardEntity, (void (*)(uint64_t))type metadata accessor for IdCardEntity);
}

uint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in IdCardEntity()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type EmptyResolverSpecification<IdCardEntity> and conformance EmptyResolverSpecification<A>, &demangling cache variable for type metadata for EmptyResolverSpecification<IdCardEntity>);
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in CardSubType()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [CardSubType] and conformance [A], &demangling cache variable for type metadata for [CardSubType]);
}

uint64_t associated type witness table accessor for RawRepresentable.RawValue : LosslessStringConvertible in CardSubType()
{
  return MEMORY[0x263F8D380];
}

uint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in CardSubType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in CardSubType(a1, a2, a3, (void (*)(void))lazy protocol witness table accessor for type CardSubType and conformance CardSubType);
}

unint64_t instantiation function for generic protocol witness table for PersonalCardEntity(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type PersonalCardEntity and conformance PersonalCardEntity();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in PersonalCardEntity()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type _TransientAppEntityQuery<PersonalCardEntity> and conformance _TransientAppEntityQuery<A>, &demangling cache variable for type metadata for _TransientAppEntityQuery<PersonalCardEntity>);
}

uint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in PersonalCardEntity()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type EmptyResolverSpecification<PersonalCardEntity> and conformance EmptyResolverSpecification<A>, &demangling cache variable for type metadata for EmptyResolverSpecification<PersonalCardEntity>);
}

unint64_t instantiation function for generic protocol witness table for BusinessCardEntity(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type BusinessCardEntity and conformance BusinessCardEntity();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in BusinessCardEntity()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type _TransientAppEntityQuery<BusinessCardEntity> and conformance _TransientAppEntityQuery<A>, &demangling cache variable for type metadata for _TransientAppEntityQuery<BusinessCardEntity>);
}

uint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in BusinessCardEntity()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type EmptyResolverSpecification<BusinessCardEntity> and conformance EmptyResolverSpecification<A>, &demangling cache variable for type metadata for EmptyResolverSpecification<BusinessCardEntity>);
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in Sex()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [Sex] and conformance [A], &demangling cache variable for type metadata for [Sex]);
}

uint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in Sex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in CardSubType(a1, a2, a3, (void (*)(void))lazy protocol witness table accessor for type Sex and conformance Sex);
}

uint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in CardSubType(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_257F818C0()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = PersonalCardEntity.cardName.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257F818E8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.cardName : PersonalCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))PersonalCardEntity.cardName.setter);
}

uint64_t sub_257F81914()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = PersonalCardEntity.personName.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257F8193C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.cardName : PersonalCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))PersonalCardEntity.personName.setter);
}

uint64_t sub_257F81968()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = PersonalCardEntity.idNumber.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257F81990(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.cardName : PersonalCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))PersonalCardEntity.idNumber.setter);
}

uint64_t sub_257F819BC()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = PersonalCardEntity.idType.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257F819E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.cardName : PersonalCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))PersonalCardEntity.idType.setter);
}

uint64_t sub_257F81A10()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = PersonalCardEntity.memberIDNumber.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257F81A38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.cardName : PersonalCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))PersonalCardEntity.memberIDNumber.setter);
}

uint64_t sub_257F81A64()
{
  return PersonalCardEntity.issuingDate.getter();
}

uint64_t sub_257F81A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.issuingDate : PersonalCardEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for Date?);
}

uint64_t sub_257F81ABC()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = PersonalCardEntity.issuingBusiness.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257F81AE4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.cardName : PersonalCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))PersonalCardEntity.issuingBusiness.setter);
}

uint64_t sub_257F81B10()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = PersonalCardEntity.issuingRegion.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257F81B38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.cardName : PersonalCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))PersonalCardEntity.issuingRegion.setter);
}

uint64_t sub_257F81B64()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = PersonalCardEntity.issuingCountry.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257F81B8C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.cardName : PersonalCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))PersonalCardEntity.issuingCountry.setter);
}

uint64_t sub_257F81BB8()
{
  return PersonalCardEntity.expirationDate.getter();
}

uint64_t sub_257F81BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.issuingDate : PersonalCardEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for Date?);
}

uint64_t sub_257F81C10()
{
  return PersonalCardEntity.birthday.getter();
}

uint64_t sub_257F81C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.issuingDate : PersonalCardEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for Date?);
}

uint64_t sub_257F81C68()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = PersonalCardEntity.placeOfBirth.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257F81C90(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.cardName : PersonalCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))PersonalCardEntity.placeOfBirth.setter);
}

uint64_t sub_257F81CBC()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = PersonalCardEntity.address.getter();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_257F81CF0()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = PersonalCardEntity.height.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257F81D18(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.cardName : PersonalCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))PersonalCardEntity.height.setter);
}

uint64_t sub_257F81D44()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = PersonalCardEntity.eyeColor.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257F81D6C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.cardName : PersonalCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))PersonalCardEntity.eyeColor.setter);
}

uint64_t sub_257F81D98()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = PersonalCardEntity.weight.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257F81DC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.cardName : PersonalCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))PersonalCardEntity.weight.setter);
}

uint64_t sub_257F81DEC()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = PersonalCardEntity.licenseClass.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257F81E14(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.cardName : PersonalCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))PersonalCardEntity.licenseClass.setter);
}

uint64_t sub_257F81E40()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = PersonalCardEntity.licenseRestrictions.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257F81E68(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.cardName : PersonalCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))PersonalCardEntity.licenseRestrictions.setter);
}

uint64_t sub_257F81E94()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = PersonalCardEntity.cardSubType.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257F81EBC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.cardName : PersonalCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))PersonalCardEntity.cardSubType.setter);
}

uint64_t sub_257F81EE8()
{
  return PersonalCardEntity.encodedSearchableItem.getter();
}

uint64_t sub_257F81F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for PersonalCardEntity.issuingDate : PersonalCardEntity(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t sub_257F81F40@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for BusinessCardEntity.cardName : BusinessCardEntity(a1, a2);
}

uint64_t sub_257F81F6C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for BusinessCardEntity.cardName : BusinessCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))BusinessCardEntity.cardName.setter);
}

uint64_t sub_257F81F98@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for BusinessCardEntity.cardName : BusinessCardEntity(a1, a2);
}

uint64_t sub_257F81FC4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for BusinessCardEntity.cardName : BusinessCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))BusinessCardEntity.cardSubType.setter);
}

uint64_t sub_257F81FF0(__n128 *a1)
{
  return key path getter for BusinessCardEntity.expirationDate : BusinessCardEntity(a1);
}

uint64_t sub_257F8201C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for BusinessCardEntity.expirationDate : BusinessCardEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for Date?);
}

uint64_t sub_257F82050(__n128 *a1)
{
  return key path getter for BusinessCardEntity.expirationDate : BusinessCardEntity(a1);
}

uint64_t sub_257F8207C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for BusinessCardEntity.expirationDate : BusinessCardEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for Date?);
}

uint64_t sub_257F820B0@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for BusinessCardEntity.cardName : BusinessCardEntity(a1, a2);
}

uint64_t sub_257F820DC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for BusinessCardEntity.cardName : BusinessCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))BusinessCardEntity.issuingBusiness.setter);
}

uint64_t sub_257F82108@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for BusinessCardEntity.cardName : BusinessCardEntity(a1, a2);
}

uint64_t sub_257F82134(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for BusinessCardEntity.cardName : BusinessCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))BusinessCardEntity.memberIDNumber.setter);
}

uint64_t sub_257F82160@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for BusinessCardEntity.cardName : BusinessCardEntity(a1, a2);
}

uint64_t sub_257F8218C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for BusinessCardEntity.cardName : BusinessCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))BusinessCardEntity.membershipType.setter);
}

uint64_t sub_257F821B8@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for BusinessCardEntity.cardName : BusinessCardEntity(a1, a2);
}

uint64_t sub_257F821E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for BusinessCardEntity.cardName : BusinessCardEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))BusinessCardEntity.personName.setter);
}

uint64_t sub_257F82210(__n128 *a1)
{
  return key path getter for BusinessCardEntity.expirationDate : BusinessCardEntity(a1);
}

uint64_t sub_257F8223C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for BusinessCardEntity.expirationDate : BusinessCardEntity(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t initializeBufferWithCopyOfBuffer for IdCardEntity(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    v9 = a2 + 3;
    unint64_t v10 = a2[4];
    swift_retain();
    swift_retain();
    swift_retain();
    if (v10 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)v9;
    }
    else
    {
      uint64_t v11 = *v9;
      outlined copy of Data._Representation(*v9, v10);
      *(void *)(a1 + 24) = v11;
      *(void *)(a1 + 32) = v10;
    }
    uint64_t v12 = *(int *)(a3 + 32);
    v13 = (void *)(a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for SearchResult(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      type metadata accessor for SearchResultItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v2643 = a1;
          uint64_t v2678 = v15;
          uint64_t v38 = v14[1];
          void *v13 = *v14;
          v13[1] = v38;
          uint64_t v39 = v14[3];
          v13[2] = v14[2];
          v13[3] = v39;
          uint64_t v40 = v14[5];
          v13[4] = v14[4];
          v13[5] = v40;
          uint64_t v41 = v14[7];
          v13[6] = v14[6];
          v13[7] = v41;
          uint64_t v42 = v14[9];
          v13[8] = v14[8];
          v13[9] = v42;
          v2658 = (int *)type metadata accessor for MobileSMSDocument(0);
          uint64_t v43 = v2658[10];
          v2630 = (char *)v13 + v43;
          v44 = (char *)v14 + v43;
          uint64_t v45 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
          {
            uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2630, v44, *(void *)(*(void *)(v46 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v2630, v44, v45);
            __swift_storeEnumTagSinglePayload((uint64_t)v2630, 0, 1, v45);
          }
          uint64_t v306 = v2658[11];
          v307 = (char *)v13 + v306;
          v308 = (char *)v14 + v306;
          uint64_t v309 = type metadata accessor for URL();
          uint64_t v2621 = v309;
          uint64_t v2639 = v45;
          a1 = v2643;
          if (__swift_getEnumTagSinglePayload((uint64_t)v308, 1, v309))
          {
            uint64_t v310 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v307, v308, *(void *)(*(void *)(v310 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v309 - 8) + 16))(v307, v308, v309);
            __swift_storeEnumTagSinglePayload((uint64_t)v307, 0, 1, v309);
          }
          *(void *)((char *)v13 + v2658[12]) = *(void *)((char *)v14 + v2658[12]);
          uint64_t v464 = v2658[13];
          v465 = (void *)((char *)v13 + v464);
          v466 = (void *)((char *)v14 + v464);
          uint64_t v467 = v466[1];
          void *v465 = *v466;
          v465[1] = v467;
          uint64_t v468 = v2658[14];
          v469 = (void *)((char *)v13 + v468);
          v470 = (void *)((char *)v14 + v468);
          uint64_t v471 = v470[1];
          void *v469 = *v470;
          v469[1] = v471;
          *(void *)((char *)v13 + v2658[15]) = *(void *)((char *)v14 + v2658[15]);
          *(void *)((char *)v13 + v2658[16]) = *(void *)((char *)v14 + v2658[16]);
          uint64_t v472 = v2658[17];
          v473 = (void *)((char *)v13 + v472);
          v474 = (char *)v14 + v472;
          uint64_t v475 = *(void *)((char *)v14 + v472);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v475)
          {
            uint64_t v476 = *((void *)v474 + 1);
            uint64_t v477 = *((void *)v474 + 2);
            void *v473 = v475;
            v473[1] = v476;
            uint64_t v478 = *((void *)v474 + 3);
            uint64_t v479 = *((void *)v474 + 4);
            v473[2] = v477;
            v473[3] = v478;
            v473[4] = v479;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v629 = *((_OWORD *)v474 + 1);
            *(_OWORD *)v473 = *(_OWORD *)v474;
            *((_OWORD *)v473 + 1) = v629;
            v473[4] = *((void *)v474 + 4);
          }
          uint64_t v630 = v2658[18];
          v631 = (void *)((char *)v13 + v630);
          v632 = (void *)((char *)v14 + v630);
          uint64_t v633 = v632[1];
          void *v631 = *v632;
          v631[1] = v633;
          uint64_t v634 = v2658[19];
          v635 = (void *)((char *)v13 + v634);
          v636 = (void *)((char *)v14 + v634);
          v637 = (int *)type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v636, 1, (uint64_t)v637))
          {
            uint64_t v638 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v635, v636, *(void *)(*(void *)(v638 - 8) + 64));
          }
          else
          {
            uint64_t v675 = v636[1];
            void *v635 = *v636;
            v635[1] = v675;
            uint64_t v676 = v637[5];
            v677 = (void *)((char *)v635 + v676);
            v678 = (void *)((char *)v636 + v676);
            uint64_t v679 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            v2606 = v637;
            v2548 = v636;
            if (__swift_getEnumTagSinglePayload((uint64_t)v678, 1, v679))
            {
              uint64_t v680 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v677, v678, *(void *)(*(void *)(v680 - 8) + 64));
            }
            else
            {
              uint64_t v735 = v678[1];
              void *v677 = *v678;
              v677[1] = v735;
              uint64_t v736 = v678[3];
              v677[2] = v678[2];
              v677[3] = v736;
              uint64_t v737 = v678[5];
              v677[4] = v678[4];
              v677[5] = v737;
              uint64_t v738 = v678[7];
              v677[6] = v678[6];
              v677[7] = v738;
              uint64_t v739 = v678[9];
              v677[8] = v678[8];
              v677[9] = v739;
              uint64_t v740 = v678[11];
              v677[10] = v678[10];
              v677[11] = v740;
              uint64_t v741 = v678[13];
              v677[12] = v678[12];
              v677[13] = v741;
              uint64_t v742 = v678[15];
              v677[14] = v678[14];
              v677[15] = v742;
              *((unsigned char *)v677 + 128) = *((unsigned char *)v678 + 128);
              *(_WORD *)((char *)v677 + 129) = *(_WORD *)((char *)v678 + 129);
              uint64_t v743 = v678[18];
              v677[17] = v678[17];
              v677[18] = v743;
              uint64_t v744 = v678[20];
              v677[19] = v678[19];
              v677[20] = v744;
              uint64_t v745 = v678[22];
              v677[21] = v678[21];
              v677[22] = v745;
              uint64_t v2384 = v678[24];
              v677[23] = v678[23];
              v677[24] = v2384;
              uint64_t v746 = v678[26];
              v677[25] = v678[25];
              v677[26] = v746;
              uint64_t v747 = v678[28];
              v677[27] = v678[27];
              v677[28] = v747;
              uint64_t v748 = v678[30];
              v677[29] = v678[29];
              v677[30] = v748;
              uint64_t v2512 = v678[32];
              v677[31] = v678[31];
              v677[32] = v2512;
              uint64_t v2475 = v678[34];
              v677[33] = v678[33];
              v677[34] = v2475;
              uint64_t v749 = v678[36];
              v677[35] = v678[35];
              v677[36] = v749;
              uint64_t v750 = v678[38];
              v677[37] = v678[37];
              v677[38] = v750;
              uint64_t v751 = v678[40];
              v677[39] = v678[39];
              v677[40] = v751;
              uint64_t v752 = v678[42];
              v677[41] = v678[41];
              v677[42] = v752;
              uint64_t v753 = v678[44];
              v677[43] = v678[43];
              v677[44] = v753;
              uint64_t v754 = v678[46];
              v677[45] = v678[45];
              v677[46] = v754;
              uint64_t v755 = v678[47];
              *((unsigned char *)v677 + 384) = *((unsigned char *)v678 + 384);
              v677[47] = v755;
              uint64_t v756 = v678[50];
              v677[49] = v678[49];
              v677[50] = v756;
              uint64_t v757 = v678[52];
              v677[51] = v678[51];
              v677[52] = v757;
              uint64_t v758 = *(int *)(v679 + 140);
              v2581 = (char *)v677 + v758;
              v759 = (char *)v678 + v758;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v759, 1, v2639))
              {
                uint64_t v760 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2581, v759, *(void *)(*(void *)(v760 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v2581, v759, v2639);
                __swift_storeEnumTagSinglePayload((uint64_t)v2581, 0, 1, v2639);
              }
              uint64_t v769 = *(int *)(v679 + 144);
              v770 = (char *)v677 + v769;
              v771 = (char *)v678 + v769;
              if (__swift_getEnumTagSinglePayload((uint64_t)v678 + v769, 1, v2639))
              {
                uint64_t v772 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v770, v771, *(void *)(*(void *)(v772 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v770, v771, v2639);
                __swift_storeEnumTagSinglePayload((uint64_t)v770, 0, 1, v2639);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v677, 0, 1, v679);
              v637 = v2606;
            }
            uint64_t v826 = v637[6];
            v827 = (void *)((char *)v635 + v826);
            v828 = (void *)((char *)v636 + v826);
            uint64_t v829 = type metadata accessor for TicketedTransportation(0);
            v2582 = v635;
            if (__swift_getEnumTagSinglePayload((uint64_t)v828, 1, v829))
            {
              uint64_t v830 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v827, v828, *(void *)(*(void *)(v830 - 8) + 64));
            }
            else
            {
              uint64_t v831 = v828[1];
              void *v827 = *v828;
              v827[1] = v831;
              uint64_t v832 = v828[3];
              v827[2] = v828[2];
              v827[3] = v832;
              uint64_t v833 = v828[5];
              v827[4] = v828[4];
              v827[5] = v833;
              uint64_t v834 = v828[7];
              v827[6] = v828[6];
              v827[7] = v834;
              uint64_t v835 = v828[9];
              v827[8] = v828[8];
              v827[9] = v835;
              uint64_t v836 = v828[11];
              v827[10] = v828[10];
              v827[11] = v836;
              uint64_t v837 = v828[13];
              v827[12] = v828[12];
              v827[13] = v837;
              uint64_t v838 = v828[15];
              v827[14] = v828[14];
              v827[15] = v838;
              *((unsigned char *)v827 + 128) = *((unsigned char *)v828 + 128);
              *(_WORD *)((char *)v827 + 129) = *(_WORD *)((char *)v828 + 129);
              uint64_t v839 = v828[18];
              v827[17] = v828[17];
              v827[18] = v839;
              uint64_t v840 = v828[20];
              v827[19] = v828[19];
              v827[20] = v840;
              uint64_t v841 = v828[22];
              v827[21] = v828[21];
              v827[22] = v841;
              uint64_t v842 = v828[24];
              v827[23] = v828[23];
              v827[24] = v842;
              v2453 = (void *)v828[26];
              v827[25] = v828[25];
              v827[26] = v2453;
              uint64_t v843 = v828[28];
              v827[27] = v828[27];
              v827[28] = v843;
              uint64_t v844 = v828[30];
              v827[29] = v828[29];
              v827[30] = v844;
              uint64_t v845 = v828[32];
              v827[31] = v828[31];
              v827[32] = v845;
              uint64_t v846 = v828[34];
              v827[33] = v828[33];
              v827[34] = v846;
              uint64_t v847 = v828[36];
              uint64_t v848 = v828[35];
              *((unsigned char *)v827 + 296) = *((unsigned char *)v828 + 296);
              v827[35] = v848;
              v827[36] = v847;
              uint64_t v849 = *(int *)(v829 + 112);
              v2477 = (char *)v827 + v849;
              uint64_t v2513 = v829;
              v850 = (char *)v828 + v849;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v850, 1, v2639))
              {
                uint64_t v851 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2477, v850, *(void *)(*(void *)(v851 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v2477, v850, v2639);
                __swift_storeEnumTagSinglePayload((uint64_t)v2477, 0, 1, v2639);
              }
              uint64_t v860 = *(int *)(v829 + 116);
              v861 = (char *)v827 + v860;
              v862 = (char *)v828 + v860;
              if (__swift_getEnumTagSinglePayload((uint64_t)v828 + v860, 1, v2639))
              {
                uint64_t v863 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v861, v862, *(void *)(*(void *)(v863 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v861, v862, v2639);
                __swift_storeEnumTagSinglePayload((uint64_t)v861, 0, 1, v2639);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v827, 0, 1, v2513);
              v637 = v2606;
            }
            uint64_t v918 = v637[7];
            v919 = (void *)((char *)v635 + v918);
            v920 = (void *)((char *)v636 + v918);
            v921 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v920, 1, (uint64_t)v921))
            {
              uint64_t v922 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v919, v920, *(void *)(*(void *)(v922 - 8) + 64));
            }
            else
            {
              uint64_t v923 = v920[1];
              void *v919 = *v920;
              v919[1] = v923;
              uint64_t v924 = v920[3];
              v919[2] = v920[2];
              v919[3] = v924;
              uint64_t v925 = v920[5];
              v919[4] = v920[4];
              v919[5] = v925;
              uint64_t v926 = v920[7];
              v919[6] = v920[6];
              v919[7] = v926;
              uint64_t v927 = v920[9];
              v919[8] = v920[8];
              v919[9] = v927;
              uint64_t v928 = v920[11];
              v919[10] = v920[10];
              v919[11] = v928;
              uint64_t v929 = v920[13];
              v919[12] = v920[12];
              v919[13] = v929;
              uint64_t v930 = v920[15];
              v919[14] = v920[14];
              v919[15] = v930;
              *((unsigned char *)v919 + 128) = *((unsigned char *)v920 + 128);
              *(_WORD *)((char *)v919 + 129) = *(_WORD *)((char *)v920 + 129);
              uint64_t v931 = v920[18];
              v919[17] = v920[17];
              v919[18] = v931;
              uint64_t v932 = v920[20];
              v919[19] = v920[19];
              v919[20] = v932;
              uint64_t v933 = v920[22];
              v919[21] = v920[21];
              v919[22] = v933;
              uint64_t v934 = v920[24];
              v919[23] = v920[23];
              v919[24] = v934;
              uint64_t v935 = v920[26];
              v919[25] = v920[25];
              v919[26] = v935;
              uint64_t v936 = v920[28];
              v919[27] = v920[27];
              v919[28] = v936;
              v2455 = (void *)v920[30];
              v919[29] = v920[29];
              v919[30] = v2455;
              uint64_t v937 = v920[32];
              v919[31] = v920[31];
              v919[32] = v937;
              uint64_t v938 = v920[34];
              v919[33] = v920[33];
              v919[34] = v938;
              uint64_t v939 = v920[36];
              uint64_t v940 = v920[35];
              *((unsigned char *)v919 + 296) = *((unsigned char *)v920 + 296);
              v919[35] = v940;
              v919[36] = v939;
              uint64_t v941 = v920[39];
              v919[38] = v920[38];
              v919[39] = v941;
              uint64_t v942 = v921[29];
              v2480 = (char *)v919 + v942;
              uint64_t v2515 = (uint64_t)v921;
              v943 = (char *)v920 + v942;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v943, 1, v2621))
              {
                uint64_t v944 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2480, v943, *(void *)(*(void *)(v944 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2621 - 8) + 16))(v2480, v943, v2621);
                __swift_storeEnumTagSinglePayload((uint64_t)v2480, 0, 1, v2621);
              }
              uint64_t v961 = v921[30];
              v962 = (void *)((char *)v919 + v961);
              v963 = (void *)((char *)v920 + v961);
              uint64_t v964 = v963[1];
              void *v962 = *v963;
              v962[1] = v964;
              uint64_t v965 = v921[31];
              v966 = (char *)v919 + v965;
              v967 = (char *)v920 + v965;
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v967, 1, v2639))
              {
                uint64_t v968 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v966, v967, *(void *)(*(void *)(v968 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v966, v967, v2639);
                __swift_storeEnumTagSinglePayload((uint64_t)v966, 0, 1, v2639);
              }
              uint64_t v977 = *(int *)(v2515 + 128);
              v978 = (char *)v919 + v977;
              v979 = (char *)v920 + v977;
              if (__swift_getEnumTagSinglePayload((uint64_t)v920 + v977, 1, v2639))
              {
                uint64_t v980 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v978, v979, *(void *)(*(void *)(v980 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v978, v979, v2639);
                __swift_storeEnumTagSinglePayload((uint64_t)v978, 0, 1, v2639);
              }
              v636 = v2548;
              __swift_storeEnumTagSinglePayload((uint64_t)v919, 0, 1, v2515);
              v637 = v2606;
            }
            uint64_t v1035 = v637[8];
            v1036 = (void *)((char *)v635 + v1035);
            v1037 = (void *)((char *)v636 + v1035);
            uint64_t v1038 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1037, 1, v1038))
            {
              uint64_t v1039 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v1036, v1037, *(void *)(*(void *)(v1039 - 8) + 64));
            }
            else
            {
              uint64_t v1040 = v1037[1];
              void *v1036 = *v1037;
              v1036[1] = v1040;
              uint64_t v1041 = v1037[3];
              v1036[2] = v1037[2];
              v1036[3] = v1041;
              uint64_t v1042 = v1037[5];
              v1036[4] = v1037[4];
              v1036[5] = v1042;
              uint64_t v1043 = v1037[7];
              v1036[6] = v1037[6];
              v1036[7] = v1043;
              uint64_t v1044 = v1037[9];
              v1036[8] = v1037[8];
              v1036[9] = v1044;
              uint64_t v1045 = v1037[11];
              v1036[10] = v1037[10];
              v1036[11] = v1045;
              uint64_t v1046 = v1037[13];
              v1036[12] = v1037[12];
              v1036[13] = v1046;
              uint64_t v1047 = v1037[15];
              v1036[14] = v1037[14];
              v1036[15] = v1047;
              *((unsigned char *)v1036 + 128) = *((unsigned char *)v1037 + 128);
              *(_WORD *)((char *)v1036 + 129) = *(_WORD *)((char *)v1037 + 129);
              uint64_t v1048 = v1037[18];
              v1036[17] = v1037[17];
              v1036[18] = v1048;
              uint64_t v1049 = v1037[20];
              v1036[19] = v1037[19];
              v1036[20] = v1049;
              uint64_t v1050 = v1037[22];
              v1036[21] = v1037[21];
              v1036[22] = v1050;
              uint64_t v1051 = v1037[24];
              v1036[23] = v1037[23];
              v1036[24] = v1051;
              uint64_t v1052 = v1037[26];
              v1036[25] = v1037[25];
              v1036[26] = v1052;
              uint64_t v1053 = v1037[28];
              v1036[27] = v1037[27];
              v1036[28] = v1053;
              uint64_t v1054 = v1037[30];
              v1036[29] = v1037[29];
              v1036[30] = v1054;
              uint64_t v1055 = v1037[32];
              v1036[31] = v1037[31];
              v1036[32] = v1055;
              uint64_t v1056 = v1037[34];
              uint64_t v1057 = v1037[33];
              *((unsigned char *)v1036 + 280) = *((unsigned char *)v1037 + 280);
              v1036[33] = v1057;
              v1036[34] = v1056;
              uint64_t v1058 = v1038;
              uint64_t v1059 = v1037[37];
              v1036[36] = v1037[36];
              v1036[37] = v1059;
              uint64_t v2516 = v1058;
              uint64_t v1060 = *(int *)(v1058 + 108);
              v2481 = (char *)v1036 + v1060;
              v1061 = (char *)v1037 + v1060;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1061, 1, v2639))
              {
                uint64_t v1062 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2481, v1061, *(void *)(*(void *)(v1062 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v2481, v1061, v2639);
                __swift_storeEnumTagSinglePayload((uint64_t)v2481, 0, 1, v2639);
              }
              uint64_t v1071 = *(int *)(v2516 + 112);
              v1072 = (char *)v1036 + v1071;
              v1073 = (char *)v1037 + v1071;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1037 + v1071, 1, v2639))
              {
                uint64_t v1074 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1072, v1073, *(void *)(*(void *)(v1074 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v1072, v1073, v2639);
                __swift_storeEnumTagSinglePayload((uint64_t)v1072, 0, 1, v2639);
              }
              v636 = v2548;
              __swift_storeEnumTagSinglePayload((uint64_t)v1036, 0, 1, v2516);
              v637 = v2606;
            }
            uint64_t v1120 = v637[9];
            v1121 = (void *)((char *)v635 + v1120);
            v1122 = (void *)((char *)v636 + v1120);
            uint64_t v1123 = type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1122, 1, v1123))
            {
              uint64_t v1124 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v1121, v1122, *(void *)(*(void *)(v1124 - 8) + 64));
            }
            else
            {
              uint64_t v1125 = v1122[1];
              void *v1121 = *v1122;
              v1121[1] = v1125;
              uint64_t v1126 = v1122[3];
              v1121[2] = v1122[2];
              v1121[3] = v1126;
              uint64_t v1127 = v1122[5];
              v1121[4] = v1122[4];
              v1121[5] = v1127;
              uint64_t v1128 = v1122[7];
              v1121[6] = v1122[6];
              v1121[7] = v1128;
              uint64_t v1129 = v1122[9];
              v1121[8] = v1122[8];
              v1121[9] = v1129;
              uint64_t v1130 = v1122[11];
              v1121[10] = v1122[10];
              v1121[11] = v1130;
              uint64_t v1131 = v1122[13];
              v1121[12] = v1122[12];
              v1121[13] = v1131;
              uint64_t v1132 = v1122[15];
              v1121[14] = v1122[14];
              v1121[15] = v1132;
              *((unsigned char *)v1121 + 128) = *((unsigned char *)v1122 + 128);
              *(_WORD *)((char *)v1121 + 129) = *(_WORD *)((char *)v1122 + 129);
              uint64_t v1133 = v1122[18];
              v1121[17] = v1122[17];
              v1121[18] = v1133;
              uint64_t v1134 = v1122[20];
              v1121[19] = v1122[19];
              v1121[20] = v1134;
              uint64_t v1135 = v1122[22];
              v1121[21] = v1122[21];
              v1121[22] = v1135;
              uint64_t v1136 = v1122[24];
              v1121[23] = v1122[23];
              v1121[24] = v1136;
              uint64_t v1137 = v1122[26];
              v1121[25] = v1122[25];
              v1121[26] = v1137;
              uint64_t v1138 = v1122[28];
              v1121[27] = v1122[27];
              v1121[28] = v1138;
              uint64_t v1139 = v1122[30];
              v1121[29] = v1122[29];
              v1121[30] = v1139;
              v1121[31] = v1122[31];
              uint64_t v2518 = v1123;
              uint64_t v1140 = *(int *)(v1123 + 96);
              v2482 = (char *)v1121 + v1140;
              v2390 = (char *)v1122 + v1140;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2390, 1, v2639))
              {
                uint64_t v1141 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2482, v2390, *(void *)(*(void *)(v1141 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v2482, v2390, v2639);
                __swift_storeEnumTagSinglePayload((uint64_t)v2482, 0, 1, v2639);
              }
              uint64_t v1150 = *(int *)(v1123 + 100);
              v1151 = (char *)v1121 + v1150;
              v1152 = (char *)v1122 + v1150;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1122 + v1150, 1, v2639))
              {
                uint64_t v1153 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1151, v1152, *(void *)(*(void *)(v1153 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v1151, v1152, v2639);
                __swift_storeEnumTagSinglePayload((uint64_t)v1151, 0, 1, v2639);
              }
              uint64_t v1164 = *(int *)(v2518 + 104);
              v1165 = (char *)v1121 + v1164;
              v1166 = (char *)v1122 + v1164;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1122 + v1164, 1, v2621))
              {
                uint64_t v1167 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1165, v1166, *(void *)(*(void *)(v1167 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2621 - 8) + 16))(v1165, v1166, v2621);
                __swift_storeEnumTagSinglePayload((uint64_t)v1165, 0, 1, v2621);
              }
              v636 = v2548;
              __swift_storeEnumTagSinglePayload((uint64_t)v1121, 0, 1, v2518);
              v637 = v2606;
            }
            uint64_t v1209 = v637[10];
            v1210 = (void *)((char *)v635 + v1209);
            v1211 = (void *)((char *)v636 + v1209);
            uint64_t v1212 = type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1211, 1, v1212))
            {
              uint64_t v1213 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1210, v1211, *(void *)(*(void *)(v1213 - 8) + 64));
            }
            else
            {
              uint64_t v1214 = v1211[1];
              void *v1210 = *v1211;
              v1210[1] = v1214;
              uint64_t v1215 = v1211[3];
              v1210[2] = v1211[2];
              v1210[3] = v1215;
              uint64_t v1216 = v1211[5];
              v1210[4] = v1211[4];
              v1210[5] = v1216;
              uint64_t v1217 = v1211[7];
              v1210[6] = v1211[6];
              v1210[7] = v1217;
              uint64_t v1218 = v1211[9];
              v1210[8] = v1211[8];
              v1210[9] = v1218;
              uint64_t v1219 = v1211[11];
              v1210[10] = v1211[10];
              v1210[11] = v1219;
              uint64_t v1220 = v1211[13];
              v1210[12] = v1211[12];
              v1210[13] = v1220;
              uint64_t v1221 = v1211[15];
              v1210[14] = v1211[14];
              v1210[15] = v1221;
              *((unsigned char *)v1210 + 128) = *((unsigned char *)v1211 + 128);
              *(_WORD *)((char *)v1210 + 129) = *(_WORD *)((char *)v1211 + 129);
              uint64_t v1222 = v1211[18];
              v1210[17] = v1211[17];
              v1210[18] = v1222;
              uint64_t v1223 = v1211[20];
              v1210[19] = v1211[19];
              v1210[20] = v1223;
              uint64_t v1224 = v1211[22];
              v1210[21] = v1211[21];
              v1210[22] = v1224;
              uint64_t v1225 = v1211[24];
              v1210[23] = v1211[23];
              v1210[24] = v1225;
              uint64_t v1226 = v1211[26];
              v1210[25] = v1211[25];
              v1210[26] = v1226;
              v1210[27] = v1211[27];
              uint64_t v2520 = v1212;
              uint64_t v1227 = *(int *)(v1212 + 88);
              v2483 = (char *)v1210 + v1227;
              v2393 = (char *)v1211 + v1227;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2393, 1, v2639))
              {
                uint64_t v1228 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2483, v2393, *(void *)(*(void *)(v1228 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v2483, v2393, v2639);
                __swift_storeEnumTagSinglePayload((uint64_t)v2483, 0, 1, v2639);
              }
              uint64_t v1237 = *(int *)(v1212 + 92);
              v1238 = (char *)v1210 + v1237;
              v1239 = (char *)v1211 + v1237;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1211 + v1237, 1, v2639))
              {
                uint64_t v1240 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1238, v1239, *(void *)(*(void *)(v1240 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v1238, v1239, v2639);
                __swift_storeEnumTagSinglePayload((uint64_t)v1238, 0, 1, v2639);
              }
              uint64_t v1257 = *(int *)(v2520 + 96);
              v1258 = (char *)v1210 + v1257;
              v1259 = (char *)v1211 + v1257;
              *(void *)v1258 = *(void *)v1259;
              v1258[8] = v1259[8];
              uint64_t v1260 = *(int *)(v2520 + 100);
              v1261 = (char *)v1210 + v1260;
              v1262 = (char *)v1211 + v1260;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1211 + v1260, 1, v2621))
              {
                uint64_t v1263 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1261, v1262, *(void *)(*(void *)(v1263 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2621 - 8) + 16))(v1261, v1262, v2621);
                __swift_storeEnumTagSinglePayload((uint64_t)v1261, 0, 1, v2621);
              }
              v636 = v2548;
              __swift_storeEnumTagSinglePayload((uint64_t)v1210, 0, 1, v2520);
              v637 = v2606;
            }
            uint64_t v1293 = v637[11];
            v1294 = (void *)((char *)v635 + v1293);
            v1295 = (void *)((char *)v636 + v1293);
            v1296 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1295, 1, (uint64_t)v1296))
            {
              uint64_t v1297 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1294, v1295, *(void *)(*(void *)(v1297 - 8) + 64));
            }
            else
            {
              uint64_t v1298 = v1295[1];
              void *v1294 = *v1295;
              v1294[1] = v1298;
              uint64_t v1299 = v1295[3];
              v1294[2] = v1295[2];
              v1294[3] = v1299;
              uint64_t v2486 = v1295[5];
              v1294[4] = v1295[4];
              v1294[5] = v2486;
              uint64_t v1300 = v1295[7];
              v1294[6] = v1295[6];
              v1294[7] = v1300;
              uint64_t v1301 = v1295[9];
              v1294[8] = v1295[8];
              v1294[9] = v1301;
              uint64_t v1302 = v1295[11];
              v1294[10] = v1295[10];
              v1294[11] = v1302;
              *((unsigned char *)v1294 + 96) = *((unsigned char *)v1295 + 96);
              uint64_t v1303 = v1295[14];
              v1294[13] = v1295[13];
              v1294[14] = v1303;
              uint64_t v1304 = v1296[13];
              v2522 = (char *)v1294 + v1304;
              v2434 = (char *)v1295 + v1304;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2434, 1, v2621))
              {
                uint64_t v1305 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2522, v2434, *(void *)(*(void *)(v1305 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2621 - 8) + 16))(v2522, v2434, v2621);
                __swift_storeEnumTagSinglePayload((uint64_t)v2522, 0, 1, v2621);
              }
              uint64_t v1314 = v1296[14];
              v1315 = (char *)v1294 + v1314;
              v1316 = (char *)v1295 + v1314;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1295 + v1314, 1, v2621))
              {
                uint64_t v1317 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1315, v1316, *(void *)(*(void *)(v1317 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2621 - 8) + 16))(v1315, v1316, v2621);
                __swift_storeEnumTagSinglePayload((uint64_t)v1315, 0, 1, v2621);
              }
              uint64_t v1456 = v1296[15];
              v1457 = (void *)((char *)v1294 + v1456);
              v1458 = (void *)((char *)v1295 + v1456);
              uint64_t v2525 = v1458[1];
              void *v1457 = *v1458;
              v1457[1] = v2525;
              uint64_t v1459 = v1296[16];
              v1460 = (void *)((char *)v1294 + v1459);
              v1461 = (void *)((char *)v1295 + v1459);
              uint64_t v2491 = v1461[1];
              void *v1460 = *v1461;
              v1460[1] = v2491;
              uint64_t v1462 = v1296[17];
              v1463 = (void *)((char *)v1294 + v1462);
              v1464 = (void *)((char *)v1295 + v1462);
              uint64_t v1465 = v1464[1];
              void *v1463 = *v1464;
              v1463[1] = v1465;
              uint64_t v1466 = v1296[18];
              v2446 = (char *)v1295 + v1466;
              v2462 = (char *)v1294 + v1466;
              uint64_t v1467 = type metadata accessor for DateComponents();
              v1468 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1467 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1468(v2462, v2446, v1467);
              v1468((char *)v1294 + v1296[19], (char *)v1295 + v1296[19], v1467);
              uint64_t v1469 = v1296[20];
              v1470 = (void *)((char *)v1294 + v1469);
              v1471 = (void *)((char *)v1295 + v1469);
              uint64_t v1472 = v1471[1];
              void *v1470 = *v1471;
              v1470[1] = v1472;
              uint64_t v1473 = v1296[21];
              v1474 = (void *)((char *)v1294 + v1473);
              v1475 = (void *)((char *)v1295 + v1473);
              uint64_t v2526 = v1475[1];
              void *v1474 = *v1475;
              v1474[1] = v2526;
              uint64_t v1476 = v1296[22];
              v1477 = (void *)((char *)v1294 + v1476);
              v1478 = (void *)((char *)v1295 + v1476);
              v2463 = (void *)v1478[1];
              void *v1477 = *v1478;
              v1477[1] = v2463;
              uint64_t v1479 = v1296[23];
              v1480 = (void *)((char *)v1294 + v1479);
              v1481 = (void *)((char *)v1295 + v1479);
              uint64_t v2447 = v1481[1];
              void *v1480 = *v1481;
              v1480[1] = v2447;
              uint64_t v1482 = v1296[24];
              v1483 = (void *)((char *)v1294 + v1482);
              v1484 = (void *)((char *)v1295 + v1482);
              v2438 = (void *)v1484[1];
              void *v1483 = *v1484;
              v1483[1] = v2438;
              uint64_t v1485 = v1296[25];
              v1486 = (void *)((char *)v1294 + v1485);
              v1487 = (void *)((char *)v1295 + v1485);
              uint64_t v2429 = v1487[1];
              void *v1486 = *v1487;
              v1486[1] = v2429;
              uint64_t v1488 = v1296[26];
              v1489 = (void *)((char *)v1294 + v1488);
              v1490 = (void *)((char *)v1295 + v1488);
              v2421 = (void *)v1490[1];
              void *v1489 = *v1490;
              v1489[1] = v2421;
              uint64_t v1491 = v1296[27];
              v1492 = (void *)((char *)v1294 + v1491);
              v1493 = (void *)((char *)v1295 + v1491);
              v2413 = (void *)v1493[1];
              void *v1492 = *v1493;
              v1492[1] = v2413;
              uint64_t v1494 = v1296[28];
              v1495 = (void *)((char *)v1294 + v1494);
              v1496 = (void *)((char *)v1295 + v1494);
              v2407 = (void *)v1496[1];
              void *v1495 = *v1496;
              v1495[1] = v2407;
              uint64_t v1497 = v1296[29];
              v1498 = (void *)((char *)v1294 + v1497);
              v1499 = (void *)((char *)v1295 + v1497);
              v2403 = (void *)v1499[1];
              void *v1498 = *v1499;
              v1498[1] = v2403;
              uint64_t v1500 = v1296[30];
              v1501 = (void *)((char *)v1294 + v1500);
              v1502 = (void *)((char *)v1295 + v1500);
              v2399 = (void *)v1502[1];
              void *v1501 = *v1502;
              v1501[1] = v2399;
              uint64_t v1503 = v1296[31];
              v1504 = (void *)((char *)v1294 + v1503);
              v1505 = (void *)((char *)v1295 + v1503);
              uint64_t v2395 = v1505[1];
              void *v1504 = *v1505;
              v1504[1] = v2395;
              uint64_t v1506 = v1296[32];
              v1507 = (void *)((char *)v1294 + v1506);
              v1508 = (void *)((char *)v1295 + v1506);
              uint64_t v1509 = v1508[1];
              void *v1507 = *v1508;
              v1507[1] = v1509;
              *(void *)((char *)v1294 + v1296[33]) = *(void *)((char *)v1295 + v1296[33]);
              *(void *)((char *)v1294 + v1296[34]) = *(void *)((char *)v1295 + v1296[34]);
              uint64_t v1510 = v1296[35];
              v1511 = (void *)((char *)v1294 + v1510);
              v1512 = (void *)((char *)v1295 + v1510);
              uint64_t v1513 = v1512[1];
              void *v1511 = *v1512;
              v1511[1] = v1513;
              uint64_t v1514 = v1296[36];
              v1515 = (void *)((char *)v1294 + v1514);
              v1516 = (void *)((char *)v1295 + v1514);
              uint64_t v1517 = v1516[1];
              void *v1515 = *v1516;
              v1515[1] = v1517;
              uint64_t v1518 = v1296[37];
              v1519 = (void *)((char *)v1294 + v1518);
              v1520 = (void *)((char *)v1295 + v1518);
              uint64_t v1521 = v1520[1];
              void *v1519 = *v1520;
              v1519[1] = v1521;
              uint64_t v1522 = v1296[38];
              v2492 = (char *)v1294 + v1522;
              v2389 = (char *)v1295 + v1522;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2389, 1, v2639))
              {
                uint64_t v1523 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2492, v2389, *(void *)(*(void *)(v1523 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v2492, v2389, v2639);
                __swift_storeEnumTagSinglePayload((uint64_t)v2492, 0, 1, v2639);
              }
              uint64_t v1621 = v1296[39];
              v1622 = (void *)((char *)v1294 + v1621);
              v1623 = (void *)((char *)v1295 + v1621);
              uint64_t v1624 = v1623[1];
              void *v1622 = *v1623;
              v1622[1] = v1624;
              uint64_t v1625 = v1296[40];
              v1626 = (void *)((char *)v1294 + v1625);
              v1627 = (void *)((char *)v1295 + v1625);
              uint64_t v2528 = v1627[1];
              void *v1626 = *v1627;
              v1626[1] = v2528;
              uint64_t v1628 = v1296[41];
              v1629 = (char *)v1294 + v1628;
              v1630 = (char *)v1295 + v1628;
              v1629[8] = v1630[8];
              *(void *)v1629 = *(void *)v1630;
              uint64_t v1631 = v1296[42];
              v1632 = (void *)((char *)v1294 + v1631);
              v1633 = (void *)((char *)v1295 + v1631);
              uint64_t v1634 = v1633[1];
              void *v1632 = *v1633;
              v1632[1] = v1634;
              uint64_t v1635 = v1296[43];
              v1636 = (char *)v1294 + v1635;
              v1637 = (char *)v1295 + v1635;
              *(_OWORD *)v1636 = *(_OWORD *)v1637;
              *(void *)(v1636 + 13) = *(void *)(v1637 + 13);
              uint64_t v1638 = v1296[44];
              v1639 = (void *)((char *)v1294 + v1638);
              v1640 = (void *)((char *)v1295 + v1638);
              uint64_t v1641 = v1640[1];
              void *v1639 = *v1640;
              v1639[1] = v1641;
              uint64_t v1642 = v1296[45];
              v1643 = (void *)((char *)v1294 + v1642);
              v1644 = (void *)((char *)v1295 + v1642);
              uint64_t v1645 = v1644[1];
              void *v1643 = *v1644;
              v1643[1] = v1645;
              uint64_t v1646 = v1296[46];
              v1647 = (void *)((char *)v1294 + v1646);
              v1648 = (void *)((char *)v1295 + v1646);
              uint64_t v1649 = v1648[1];
              void *v1647 = *v1648;
              v1647[1] = v1649;
              uint64_t v1650 = v1296[47];
              v1651 = (void *)((char *)v1294 + v1650);
              v1652 = (void *)((char *)v1295 + v1650);
              uint64_t v1653 = v1652[1];
              void *v1651 = *v1652;
              v1651[1] = v1653;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1294, 0, 1, (uint64_t)v1296);
              v635 = v2582;
              v637 = v2606;
              v636 = v2548;
            }
            uint64_t v1654 = v637[12];
            v1655 = (void *)((char *)v635 + v1654);
            v1656 = (void *)((char *)v636 + v1654);
            v1657 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1656, 1, (uint64_t)v1657))
            {
              uint64_t v1658 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1655, v1656, *(void *)(*(void *)(v1658 - 8) + 64));
            }
            else
            {
              uint64_t v1659 = v1656[1];
              void *v1655 = *v1656;
              v1655[1] = v1659;
              uint64_t v2496 = v1656[3];
              v1655[2] = v1656[2];
              v1655[3] = v2496;
              uint64_t v1660 = v1656[5];
              v1655[4] = v1656[4];
              v1655[5] = v1660;
              uint64_t v1661 = v1656[7];
              v1655[6] = v1656[6];
              v1655[7] = v1661;
              uint64_t v1662 = v1656[9];
              v1655[8] = v1656[8];
              v1655[9] = v1662;
              uint64_t v1663 = v1656[11];
              v1655[10] = v1656[10];
              v1655[11] = v1663;
              *((unsigned char *)v1655 + 96) = *((unsigned char *)v1656 + 96);
              uint64_t v1664 = v1656[14];
              v1655[13] = v1656[13];
              v1655[14] = v1664;
              uint64_t v1665 = v1656[16];
              v1655[15] = v1656[15];
              v1655[16] = v1665;
              uint64_t v1666 = v1657[14];
              v2529 = (char *)v1655 + v1666;
              v2422 = (char *)v1656 + v1666;
              v2415 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2422, 1, (uint64_t)v2415))
              {
                uint64_t v1667 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2529, v2422, *(void *)(*(void *)(v1667 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2415 - 1) + 16))(v2529, v2422, v2415);
                __swift_storeEnumTagSinglePayload((uint64_t)v2529, 0, 1, (uint64_t)v2415);
              }
              uint64_t v1676 = v1657[15];
              v1677 = (char *)v1655 + v1676;
              v1678 = (char *)v1656 + v1676;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1656 + v1676, 1, (uint64_t)v2415))
              {
                uint64_t v1679 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1677, v1678, *(void *)(*(void *)(v1679 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2415 - 1) + 16))(v1677, v1678, v2415);
                __swift_storeEnumTagSinglePayload((uint64_t)v1677, 0, 1, (uint64_t)v2415);
              }
              uint64_t v1790 = v1657[16];
              v1791 = (void *)((char *)v1655 + v1790);
              v1792 = (void *)((char *)v1656 + v1790);
              uint64_t v1793 = v1792[1];
              void *v1791 = *v1792;
              v1791[1] = v1793;
              uint64_t v1794 = v1657[17];
              v1795 = (void *)((char *)v1655 + v1794);
              v1796 = (void *)((char *)v1656 + v1794);
              uint64_t v2532 = v1796[1];
              void *v1795 = *v1796;
              v1795[1] = v2532;
              uint64_t v1797 = v1657[18];
              v1798 = (void *)((char *)v1655 + v1797);
              v1799 = (void *)((char *)v1656 + v1797);
              uint64_t v2500 = v1799[1];
              void *v1798 = *v1799;
              v1798[1] = v2500;
              uint64_t v1800 = v1657[19];
              v1801 = (void *)((char *)v1655 + v1800);
              v1802 = (void *)((char *)v1656 + v1800);
              v2465 = (void *)v1802[1];
              void *v1801 = *v1802;
              v1801[1] = v2465;
              uint64_t v1803 = v1657[20];
              v1804 = (void *)((char *)v1655 + v1803);
              v1805 = (void *)((char *)v1656 + v1803);
              uint64_t v2430 = v1805[1];
              void *v1804 = *v1805;
              v1804[1] = v2430;
              *(void *)((char *)v1655 + v1657[21]) = *(void *)((char *)v1656 + v1657[21]);
              *(void *)((char *)v1655 + v1657[22]) = *(void *)((char *)v1656 + v1657[22]);
              uint64_t v1806 = v1657[23];
              v1807 = (char *)v1655 + v1806;
              v1808 = (char *)v1656 + v1806;
              *(void *)v1807 = *(void *)v1808;
              v1807[8] = v1808[8];
              uint64_t v1809 = v1657[24];
              v1810 = (char *)v1655 + v1809;
              v1811 = (char *)v1656 + v1809;
              *(void *)v1810 = *(void *)v1811;
              v1810[8] = v1811[8];
              uint64_t v1812 = v1657[25];
              v1813 = (void *)((char *)v1655 + v1812);
              v1814 = (void *)((char *)v1656 + v1812);
              uint64_t v1815 = v1814[1];
              void *v1813 = *v1814;
              v1813[1] = v1815;
              uint64_t v1816 = v1657[26];
              v1817 = (void *)((char *)v1655 + v1816);
              v1818 = (void *)((char *)v1656 + v1816);
              uint64_t v1819 = v1818[1];
              void *v1817 = *v1818;
              v1817[1] = v1819;
              uint64_t v1820 = v1657[27];
              v1821 = (void *)((char *)v1655 + v1820);
              v1822 = (void *)((char *)v1656 + v1820);
              uint64_t v1823 = v1822[1];
              void *v1821 = *v1822;
              v1821[1] = v1823;
              uint64_t v1824 = v1657[28];
              v1825 = (void *)((char *)v1655 + v1824);
              v1826 = (void *)((char *)v1656 + v1824);
              uint64_t v1827 = v1826[1];
              void *v1825 = *v1826;
              v1825[1] = v1827;
              uint64_t v1828 = v1657[29];
              v1829 = (char *)v1655 + v1828;
              v1830 = (char *)v1656 + v1828;
              *(void *)v1829 = *(void *)v1830;
              v1829[8] = v1830[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1655, 0, 1, (uint64_t)v1657);
              v635 = v2582;
              v637 = v2606;
              v636 = v2548;
            }
            uint64_t v1831 = v637[13];
            v1832 = (void *)((char *)v635 + v1831);
            v1833 = (void *)((char *)v636 + v1831);
            v1834 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1833, 1, (uint64_t)v1834))
            {
              uint64_t v1835 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1832, v1833, *(void *)(*(void *)(v1835 - 8) + 64));
            }
            else
            {
              uint64_t v1836 = v1833[1];
              void *v1832 = *v1833;
              v1832[1] = v1836;
              uint64_t v2533 = v1833[3];
              v1832[2] = v1833[2];
              v1832[3] = v2533;
              uint64_t v2501 = v1833[5];
              v1832[4] = v1833[4];
              v1832[5] = v2501;
              uint64_t v1837 = v1833[7];
              v1832[6] = v1833[6];
              v1832[7] = v1837;
              uint64_t v1838 = v1833[9];
              v1832[8] = v1833[8];
              v1832[9] = v1838;
              uint64_t v1839 = v1833[11];
              v1832[10] = v1833[10];
              v1832[11] = v1839;
              *((unsigned char *)v1832 + 96) = *((unsigned char *)v1833 + 96);
              uint64_t v1840 = v1833[14];
              v1832[13] = v1833[13];
              v1832[14] = v1840;
              uint64_t v1841 = v1833[16];
              v1832[15] = v1833[15];
              v1832[16] = v1841;
              uint64_t v1842 = v1834[14];
              v2560 = (char *)v1832 + v1842;
              v2431 = (char *)v1833 + v1842;
              v2425 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2431, 1, (uint64_t)v2425))
              {
                uint64_t v1843 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2560, v2431, *(void *)(*(void *)(v1843 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2425 - 1) + 16))(v2560, v2431, v2425);
                __swift_storeEnumTagSinglePayload((uint64_t)v2560, 0, 1, (uint64_t)v2425);
              }
              uint64_t v2199 = v1834[15];
              v2200 = (void *)((char *)v1832 + v2199);
              v2201 = (void *)((char *)v1833 + v2199);
              uint64_t v2202 = v2201[1];
              void *v2200 = *v2201;
              v2200[1] = v2202;
              uint64_t v2203 = v1834[16];
              v2204 = (void *)((char *)v1832 + v2203);
              v2205 = (void *)((char *)v1833 + v2203);
              uint64_t v2566 = v2205[1];
              void *v2204 = *v2205;
              v2204[1] = v2566;
              uint64_t v2206 = v1834[17];
              v2207 = (void *)((char *)v1832 + v2206);
              v2208 = (void *)((char *)v1833 + v2206);
              uint64_t v2538 = v2208[1];
              void *v2207 = *v2208;
              v2207[1] = v2538;
              uint64_t v2209 = v1834[18];
              v2210 = (void *)((char *)v1832 + v2209);
              v2211 = (void *)((char *)v1833 + v2209);
              uint64_t v2504 = v2211[1];
              void *v2210 = *v2211;
              v2210[1] = v2504;
              uint64_t v2212 = v1834[19];
              v2213 = (void *)((char *)v1832 + v2212);
              v2214 = (void *)((char *)v1833 + v2212);
              uint64_t v2215 = v2214[1];
              void *v2213 = *v2214;
              v2213[1] = v2215;
              *(void *)((char *)v1832 + v1834[20]) = *(void *)((char *)v1833 + v1834[20]);
              uint64_t v2216 = v1834[21];
              v2217 = (void *)((char *)v1832 + v2216);
              v2218 = (void *)((char *)v1833 + v2216);
              uint64_t v2219 = v2218[1];
              void *v2217 = *v2218;
              v2217[1] = v2219;
              uint64_t v2220 = v1834[22];
              v2221 = (void *)((char *)v1832 + v2220);
              v2222 = (void *)((char *)v1833 + v2220);
              uint64_t v2223 = v2222[1];
              void *v2221 = *v2222;
              v2221[1] = v2223;
              uint64_t v2224 = v1834[23];
              v2225 = (void *)((char *)v1832 + v2224);
              v2226 = (void *)((char *)v1833 + v2224);
              uint64_t v2227 = v2226[1];
              void *v2225 = *v2226;
              v2225[1] = v2227;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1832, 0, 1, (uint64_t)v1834);
              v635 = v2582;
              v637 = v2606;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v635, 0, 1, (uint64_t)v637);
          }
          uint64_t v2228 = v2658[20];
          v2229 = (void *)((char *)v13 + v2228);
          v2230 = (void *)((char *)v14 + v2228);
          uint64_t v2231 = type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2230, 1, v2231))
          {
            uint64_t v2232 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v2229, v2230, *(void *)(*(void *)(v2232 - 8) + 64));
          }
          else
          {
            uint64_t v2233 = v2230[1];
            void *v2229 = *v2230;
            v2229[1] = v2233;
            uint64_t v2234 = v2230[3];
            v2235 = (int *)v2231;
            v2229[2] = v2230[2];
            v2229[3] = v2234;
            uint64_t v2236 = v2230[5];
            v2229[4] = v2230[4];
            v2229[5] = v2236;
            uint64_t v2237 = v2230[7];
            v2229[6] = v2230[6];
            v2229[7] = v2237;
            uint64_t v2238 = v2230[9];
            v2229[8] = v2230[8];
            v2229[9] = v2238;
            uint64_t v2239 = v2230[11];
            v2229[10] = v2230[10];
            v2229[11] = v2239;
            v2610 = v2235;
            uint64_t v2240 = v2235[10];
            v2567 = (char *)v2230 + v2240;
            v2591 = (char *)v2229 + v2240;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2567, 1, v2639))
            {
              uint64_t v2241 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2591, v2567, *(void *)(*(void *)(v2241 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v2591, v2567, v2639);
              __swift_storeEnumTagSinglePayload((uint64_t)v2591, 0, 1, v2639);
            }
            uint64_t v2242 = v2610[11];
            v2243 = (char *)v2229 + v2242;
            v2244 = (char *)v2230 + v2242;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2230 + v2242, 1, v2639))
            {
              uint64_t v2245 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2243, v2244, *(void *)(*(void *)(v2245 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v2243, v2244, v2639);
              __swift_storeEnumTagSinglePayload((uint64_t)v2243, 0, 1, v2639);
            }
            uint64_t v2246 = v2610[12];
            v2247 = (void *)((char *)v2229 + v2246);
            v2248 = (void *)((char *)v2230 + v2246);
            uint64_t v2249 = v2248[1];
            void *v2247 = *v2248;
            v2247[1] = v2249;
            uint64_t v2250 = v2610[13];
            v2251 = (void *)((char *)v2229 + v2250);
            v2252 = (void *)((char *)v2230 + v2250);
            uint64_t v2253 = v2252[1];
            void *v2251 = *v2252;
            v2251[1] = v2253;
            uint64_t v2254 = v2610[14];
            v2255 = (void *)((char *)v2229 + v2254);
            v2256 = (void *)((char *)v2230 + v2254);
            uint64_t v2257 = v2256[1];
            void *v2255 = *v2256;
            v2255[1] = v2257;
            uint64_t v2258 = v2610[15];
            v2259 = (char *)v2229 + v2258;
            v2260 = (char *)v2230 + v2258;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2260, 1, v2639))
            {
              uint64_t v2261 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2259, v2260, *(void *)(*(void *)(v2261 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v2259, v2260, v2639);
              __swift_storeEnumTagSinglePayload((uint64_t)v2259, 0, 1, v2639);
            }
            uint64_t v2262 = v2610[16];
            v2263 = (void *)((char *)v2229 + v2262);
            v2264 = (void *)((char *)v2230 + v2262);
            uint64_t v2265 = v2264[1];
            void *v2263 = *v2264;
            v2263[1] = v2265;
            uint64_t v2266 = v2610[17];
            v2267 = (void *)((char *)v2229 + v2266);
            v2268 = (void *)((char *)v2230 + v2266);
            uint64_t v2592 = v2268[1];
            void *v2267 = *v2268;
            v2267[1] = v2592;
            uint64_t v2269 = v2610[18];
            v2270 = (void *)((char *)v2229 + v2269);
            v2271 = (void *)((char *)v2230 + v2269);
            uint64_t v2568 = v2271[1];
            void *v2270 = *v2271;
            v2270[1] = v2568;
            uint64_t v2272 = v2610[19];
            v2273 = (void *)((char *)v2229 + v2272);
            v2274 = (void *)((char *)v2230 + v2272);
            uint64_t v2275 = v2274[1];
            void *v2273 = *v2274;
            v2273[1] = v2275;
            uint64_t v2276 = v2610[20];
            v2277 = (void *)((char *)v2229 + v2276);
            v2278 = (void *)((char *)v2230 + v2276);
            uint64_t v2279 = v2278[1];
            void *v2277 = *v2278;
            v2277[1] = v2279;
            uint64_t v2280 = v2610[21];
            v2281 = (void *)((char *)v2229 + v2280);
            v2282 = (void *)((char *)v2230 + v2280);
            uint64_t v2283 = v2282[1];
            void *v2281 = *v2282;
            v2281[1] = v2283;
            uint64_t v2284 = v2610[22];
            v2285 = (void *)((char *)v2229 + v2284);
            v2286 = (void *)((char *)v2230 + v2284);
            uint64_t v2287 = v2286[1];
            void *v2285 = *v2286;
            v2285[1] = v2287;
            uint64_t v2288 = v2610[23];
            v2289 = (void *)((char *)v2229 + v2288);
            v2290 = (void *)((char *)v2230 + v2288);
            uint64_t v2291 = v2290[1];
            void *v2289 = *v2290;
            v2289[1] = v2291;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2229, 0, 1, (uint64_t)v2610);
          }
          uint64_t v2292 = v2658[21];
          v2293 = (void *)((char *)v13 + v2292);
          v2294 = (void *)((char *)v14 + v2292);
          v2295 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2294, 1, (uint64_t)v2295))
          {
            uint64_t v2296 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v2293, v2294, *(void *)(*(void *)(v2296 - 8) + 64));
          }
          else
          {
            uint64_t v2297 = v2294[1];
            void *v2293 = *v2294;
            v2293[1] = v2297;
            uint64_t v2298 = v2294[3];
            v2293[2] = v2294[2];
            v2293[3] = v2298;
            uint64_t v2299 = v2294[5];
            v2293[4] = v2294[4];
            v2293[5] = v2299;
            uint64_t v2300 = v2294[7];
            v2293[6] = v2294[6];
            v2293[7] = v2300;
            uint64_t v2593 = v2294[9];
            v2293[8] = v2294[8];
            v2293[9] = v2593;
            uint64_t v2569 = v2294[11];
            v2293[10] = v2294[10];
            v2293[11] = v2569;
            uint64_t v2301 = v2295[11];
            v2611 = (char *)v2293 + v2301;
            v2539 = (char *)v2294 + v2301;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2539, 1, v2639))
            {
              uint64_t v2302 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2611, v2539, *(void *)(*(void *)(v2302 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v2611, v2539, v2639);
              __swift_storeEnumTagSinglePayload((uint64_t)v2611, 0, 1, v2639);
            }
            uint64_t v2303 = v2295[12];
            v2304 = (void *)((char *)v2293 + v2303);
            v2305 = (void *)((char *)v2294 + v2303);
            uint64_t v2306 = v2305[1];
            void *v2304 = *v2305;
            v2304[1] = v2306;
            *(void *)((char *)v2293 + v2295[13]) = *(void *)((char *)v2294 + v2295[13]);
            uint64_t v2307 = v2295[14];
            v2308 = (char *)v2293 + v2307;
            v2309 = (char *)v2294 + v2307;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2309, 1, v2639))
            {
              uint64_t v2310 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2308, v2309, *(void *)(*(void *)(v2310 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v2308, v2309, v2639);
              __swift_storeEnumTagSinglePayload((uint64_t)v2308, 0, 1, v2639);
            }
            *(void *)((char *)v2293 + v2295[15]) = *(void *)((char *)v2294 + v2295[15]);
            *(void *)((char *)v2293 + v2295[16]) = *(void *)((char *)v2294 + v2295[16]);
            uint64_t v2311 = v2295[17];
            v2312 = (void *)((char *)v2293 + v2311);
            v2313 = (void *)((char *)v2294 + v2311);
            uint64_t v2314 = v2313[1];
            void *v2312 = *v2313;
            v2312[1] = v2314;
            *(void *)((char *)v2293 + v2295[18]) = *(void *)((char *)v2294 + v2295[18]);
            *(void *)((char *)v2293 + v2295[19]) = *(void *)((char *)v2294 + v2295[19]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2293, 0, 1, (uint64_t)v2295);
          }
          uint64_t v2315 = v2658[22];
          v2316 = (void *)((char *)v13 + v2315);
          v2317 = (void *)((char *)v14 + v2315);
          v2318 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2317, 1, (uint64_t)v2318))
          {
            uint64_t v2319 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v2316, v2317, *(void *)(*(void *)(v2319 - 8) + 64));
          }
          else
          {
            uint64_t v2320 = v2317[1];
            void *v2316 = *v2317;
            v2316[1] = v2320;
            uint64_t v2321 = v2317[3];
            v2316[2] = v2317[2];
            v2316[3] = v2321;
            uint64_t v2322 = v2317[5];
            v2316[4] = v2317[4];
            v2316[5] = v2322;
            uint64_t v2323 = v2317[7];
            v2316[6] = v2317[6];
            v2316[7] = v2323;
            uint64_t v2324 = v2318[8];
            v2612 = (char *)v2316 + v2324;
            v2325 = (char *)v2317 + v2324;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2325, 1, v2621))
            {
              uint64_t v2326 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2612, v2325, *(void *)(*(void *)(v2326 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2621 - 8) + 16))(v2612, v2325, v2621);
              __swift_storeEnumTagSinglePayload((uint64_t)v2612, 0, 1, v2621);
            }
            uint64_t v2327 = v2318[9];
            v2328 = (void *)((char *)v2316 + v2327);
            v2329 = (void *)((char *)v2317 + v2327);
            uint64_t v2330 = v2329[1];
            void *v2328 = *v2329;
            v2328[1] = v2330;
            uint64_t v2331 = v2318[10];
            v2332 = (void *)((char *)v2316 + v2331);
            v2333 = (void *)((char *)v2317 + v2331);
            uint64_t v2334 = v2333[1];
            void *v2332 = *v2333;
            v2332[1] = v2334;
            uint64_t v2335 = v2318[11];
            v2336 = (void *)((char *)v2316 + v2335);
            v2337 = (void *)((char *)v2317 + v2335);
            uint64_t v2338 = v2337[1];
            void *v2336 = *v2337;
            v2336[1] = v2338;
            uint64_t v2339 = v2318[12];
            v2340 = (char *)v2316 + v2339;
            v2341 = (char *)v2317 + v2339;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2341, 1, v2639))
            {
              uint64_t v2342 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2340, v2341, *(void *)(*(void *)(v2342 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v2340, v2341, v2639);
              __swift_storeEnumTagSinglePayload((uint64_t)v2340, 0, 1, v2639);
            }
            uint64_t v2343 = v2318[13];
            v2344 = (char *)v2316 + v2343;
            v2345 = (char *)v2317 + v2343;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2317 + v2343, 1, v2639))
            {
              uint64_t v2346 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2344, v2345, *(void *)(*(void *)(v2346 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2639 - 8) + 16))(v2344, v2345, v2639);
              __swift_storeEnumTagSinglePayload((uint64_t)v2344, 0, 1, v2639);
            }
            uint64_t v2347 = v2318[14];
            v2348 = (char *)v2316 + v2347;
            v2349 = (char *)v2317 + v2347;
            *(void *)v2348 = *(void *)v2349;
            v2348[8] = v2349[8];
            uint64_t v2350 = v2318[15];
            v2351 = (void *)((char *)v2316 + v2350);
            v2352 = (void *)((char *)v2317 + v2350);
            uint64_t v2353 = v2352[1];
            void *v2351 = *v2352;
            v2351[1] = v2353;
            uint64_t v2354 = v2318[16];
            v2355 = (void *)((char *)v2316 + v2354);
            v2356 = (void *)((char *)v2317 + v2354);
            uint64_t v2357 = v2356[1];
            void *v2355 = *v2356;
            v2355[1] = v2357;
            uint64_t v2358 = v2318[17];
            v2359 = (void *)((char *)v2316 + v2358);
            v2360 = (void *)((char *)v2317 + v2358);
            uint64_t v2361 = v2360[1];
            void *v2359 = *v2360;
            v2359[1] = v2361;
            uint64_t v2362 = v2318[18];
            v2363 = (void *)((char *)v2316 + v2362);
            v2364 = (void *)((char *)v2317 + v2362);
            uint64_t v2365 = v2364[1];
            void *v2363 = *v2364;
            v2363[1] = v2365;
            uint64_t v2366 = v2318[19];
            v2367 = (void *)((char *)v2316 + v2366);
            v2368 = (void *)((char *)v2317 + v2366);
            uint64_t v2369 = v2368[1];
            void *v2367 = *v2368;
            v2367[1] = v2369;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2316, 0, 1, (uint64_t)v2318);
          }
          uint64_t v2014 = v2658[23];
          goto LABEL_537;
        case 2u:
          uint64_t v2678 = v15;
          uint64_t v47 = v14[1];
          void *v13 = *v14;
          v13[1] = v47;
          uint64_t v48 = v14[3];
          v13[2] = v14[2];
          v13[3] = v48;
          uint64_t v49 = v14[5];
          v13[4] = v14[4];
          v13[5] = v49;
          v50 = (int *)type metadata accessor for CalendarEvent(0);
          uint64_t v51 = v50[7];
          v52 = (char *)v13 + v51;
          v53 = (char *)v14 + v51;
          uint64_t v54 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v54))
          {
            uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
            __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v54);
          }
          uint64_t v311 = v50[8];
          v312 = (char *)v13 + v311;
          v313 = (char *)v14 + v311;
          if (__swift_getEnumTagSinglePayload((uint64_t)v14 + v311, 1, v54))
          {
            uint64_t v314 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v312, v313, *(void *)(*(void *)(v314 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v312, v313, v54);
            __swift_storeEnumTagSinglePayload((uint64_t)v312, 0, 1, v54);
          }
          uint64_t v480 = v50[9];
          v481 = (void *)((char *)v13 + v480);
          v482 = (void *)((char *)v14 + v480);
          uint64_t v483 = v482[1];
          void *v481 = *v482;
          v481[1] = v483;
          *(void *)((char *)v13 + v50[10]) = *(void *)((char *)v14 + v50[10]);
          *(void *)((char *)v13 + v50[11]) = *(void *)((char *)v14 + v50[11]);
          uint64_t v484 = v50[12];
          v485 = (void *)((char *)v13 + v484);
          v486 = (void *)((char *)v14 + v484);
          uint64_t v487 = v486[1];
          void *v485 = *v486;
          v485[1] = v487;
          uint64_t v488 = v50[13];
          v489 = (void *)((char *)v13 + v488);
          v490 = (char *)v14 + v488;
          uint64_t v491 = *(void *)((char *)v14 + v488);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v491)
          {
            uint64_t v492 = *((void *)v490 + 1);
            uint64_t v493 = *((void *)v490 + 2);
            void *v489 = v491;
            v489[1] = v492;
            uint64_t v494 = *((void *)v490 + 3);
            uint64_t v495 = *((void *)v490 + 4);
            v489[2] = v493;
            v489[3] = v494;
            v489[4] = v495;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_539;
          }
          long long v639 = *((_OWORD *)v490 + 1);
          *(_OWORD *)v489 = *(_OWORD *)v490;
          *((_OWORD *)v489 + 1) = v639;
          v489[4] = *((void *)v490 + 4);
          goto LABEL_541;
        case 3u:
          uint64_t v2678 = v15;
          v56 = v13;
          uint64_t v57 = v14[1];
          void *v56 = *v14;
          v56[1] = v57;
          uint64_t v58 = v14[3];
          v56[2] = v14[2];
          v56[3] = v58;
          uint64_t v59 = v14[5];
          v56[4] = v14[4];
          v56[5] = v59;
          uint64_t v60 = v14[7];
          v56[6] = v14[6];
          v56[7] = v60;
          uint64_t v61 = v14[9];
          v56[8] = v14[8];
          v56[9] = v61;
          v56[10] = v14[10];
          v2644 = v56;
          v2659 = (int *)type metadata accessor for Photo(0);
          uint64_t v62 = v2659[11];
          v2596 = (char *)v56 + v62;
          v2614 = (char *)v14 + v62;
          uint64_t v63 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v2631 = v63;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2614, 1, v63))
          {
            uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2596, v2614, *(void *)(*(void *)(v64 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v2596, v2614, v63);
            __swift_storeEnumTagSinglePayload((uint64_t)v2596, 0, 1, v63);
          }
          *(void *)((char *)v2644 + v2659[12]) = *(void *)((char *)v14 + v2659[12]);
          *(void *)((char *)v2644 + v2659[13]) = *(void *)((char *)v14 + v2659[13]);
          *(void *)((char *)v2644 + v2659[14]) = *(void *)((char *)v14 + v2659[14]);
          *(void *)((char *)v2644 + v2659[15]) = *(void *)((char *)v14 + v2659[15]);
          uint64_t v315 = v2659[16];
          v316 = (void *)((char *)v2644 + v315);
          v317 = (void *)((char *)v14 + v315);
          uint64_t v318 = v317[1];
          void *v316 = *v317;
          v316[1] = v318;
          uint64_t v319 = v2659[17];
          v320 = (void *)((char *)v2644 + v319);
          v321 = (void *)((char *)v14 + v319);
          uint64_t v322 = type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          v323 = (int *)v322;
          swift_bridgeObjectRetain();
          v324 = v321;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v321, 1, v322))
          {
            uint64_t v325 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v320, v321, *(void *)(*(void *)(v325 - 8) + 64));
          }
          else
          {
            uint64_t v496 = v321[1];
            void *v320 = *v321;
            v320[1] = v496;
            uint64_t v497 = *(int *)(v322 + 20);
            v498 = (void *)((char *)v320 + v497);
            v499 = (void *)((char *)v321 + v497);
            uint64_t v500 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            v2604 = v320;
            v2622 = v323;
            v2579 = v324;
            if (__swift_getEnumTagSinglePayload((uint64_t)v499, 1, v500))
            {
              uint64_t v501 = (uint64_t)v320;
              uint64_t v502 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v498, v499, *(void *)(*(void *)(v502 - 8) + 64));
            }
            else
            {
              uint64_t v708 = v499[1];
              void *v498 = *v499;
              v498[1] = v708;
              uint64_t v709 = v499[3];
              v498[2] = v499[2];
              v498[3] = v709;
              uint64_t v710 = v499[5];
              v498[4] = v499[4];
              v498[5] = v710;
              uint64_t v711 = v499[7];
              v498[6] = v499[6];
              v498[7] = v711;
              uint64_t v712 = v499[9];
              v498[8] = v499[8];
              v498[9] = v712;
              uint64_t v713 = v499[11];
              v498[10] = v499[10];
              v498[11] = v713;
              uint64_t v714 = v499[13];
              v498[12] = v499[12];
              v498[13] = v714;
              uint64_t v715 = v499[15];
              v498[14] = v499[14];
              v498[15] = v715;
              *((unsigned char *)v498 + 128) = *((unsigned char *)v499 + 128);
              *(_WORD *)((char *)v498 + 129) = *(_WORD *)((char *)v499 + 129);
              uint64_t v716 = v499[18];
              v498[17] = v499[17];
              v498[18] = v716;
              uint64_t v717 = v499[20];
              v498[19] = v499[19];
              v498[20] = v717;
              uint64_t v718 = v499[22];
              v498[21] = v499[21];
              v498[22] = v718;
              uint64_t v719 = v499[24];
              v498[23] = v499[23];
              v498[24] = v719;
              uint64_t v720 = v499[26];
              v498[25] = v499[25];
              v498[26] = v720;
              uint64_t v721 = v499[28];
              v498[27] = v499[27];
              v498[28] = v721;
              uint64_t v722 = v499[30];
              v498[29] = v499[29];
              v498[30] = v722;
              uint64_t v2511 = v499[32];
              v498[31] = v499[31];
              v498[32] = v2511;
              uint64_t v2474 = v499[34];
              v498[33] = v499[33];
              v498[34] = v2474;
              uint64_t v723 = v499[36];
              v498[35] = v499[35];
              v498[36] = v723;
              uint64_t v724 = v499[38];
              v498[37] = v499[37];
              v498[38] = v724;
              uint64_t v725 = v499[40];
              v498[39] = v499[39];
              v498[40] = v725;
              uint64_t v726 = v499[42];
              v498[41] = v499[41];
              v498[42] = v726;
              uint64_t v727 = v499[44];
              v498[43] = v499[43];
              v498[44] = v727;
              uint64_t v728 = v499[46];
              v498[45] = v499[45];
              v498[46] = v728;
              uint64_t v729 = v499[47];
              *((unsigned char *)v498 + 384) = *((unsigned char *)v499 + 384);
              v498[47] = v729;
              uint64_t v730 = v499[50];
              v498[49] = v499[49];
              v498[50] = v730;
              uint64_t v731 = v499[52];
              v498[51] = v499[51];
              v498[52] = v731;
              uint64_t v732 = *(int *)(v500 + 140);
              v2549 = (char *)v498 + v732;
              v733 = (char *)v499 + v732;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v733, 1, v2631))
              {
                uint64_t v734 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2549, v733, *(void *)(*(void *)(v734 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v2549, v733, v2631);
                __swift_storeEnumTagSinglePayload((uint64_t)v2549, 0, 1, v2631);
              }
              uint64_t v765 = *(int *)(v500 + 144);
              v766 = (char *)v498 + v765;
              v767 = (char *)v499 + v765;
              if (__swift_getEnumTagSinglePayload((uint64_t)v499 + v765, 1, v2631))
              {
                uint64_t v768 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v766, v767, *(void *)(*(void *)(v768 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v766, v767, v2631);
                __swift_storeEnumTagSinglePayload((uint64_t)v766, 0, 1, v2631);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v498, 0, 1, v500);
              uint64_t v501 = (uint64_t)v320;
              v323 = v2622;
            }
            uint64_t v800 = v323[6];
            v801 = (void *)(v501 + v800);
            v802 = (void *)((char *)v324 + v800);
            uint64_t v803 = type metadata accessor for TicketedTransportation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v802, 1, v803))
            {
              uint64_t v804 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v801, v802, *(void *)(*(void *)(v804 - 8) + 64));
            }
            else
            {
              uint64_t v805 = v802[1];
              void *v801 = *v802;
              v801[1] = v805;
              uint64_t v806 = v802[3];
              v801[2] = v802[2];
              v801[3] = v806;
              uint64_t v807 = v802[5];
              v801[4] = v802[4];
              v801[5] = v807;
              uint64_t v808 = v802[7];
              v801[6] = v802[6];
              v801[7] = v808;
              uint64_t v809 = v802[9];
              v801[8] = v802[8];
              v801[9] = v809;
              uint64_t v810 = v802[11];
              v801[10] = v802[10];
              v801[11] = v810;
              uint64_t v811 = v802[13];
              v801[12] = v802[12];
              v801[13] = v811;
              uint64_t v812 = v802[15];
              v801[14] = v802[14];
              v801[15] = v812;
              *((unsigned char *)v801 + 128) = *((unsigned char *)v802 + 128);
              *(_WORD *)((char *)v801 + 129) = *(_WORD *)((char *)v802 + 129);
              uint64_t v813 = v802[18];
              v801[17] = v802[17];
              v801[18] = v813;
              uint64_t v814 = v802[20];
              v801[19] = v802[19];
              v801[20] = v814;
              uint64_t v815 = v802[22];
              v801[21] = v802[21];
              v801[22] = v815;
              uint64_t v816 = v802[24];
              v801[23] = v802[23];
              v801[24] = v816;
              uint64_t v2476 = v802[26];
              v801[25] = v802[25];
              v801[26] = v2476;
              uint64_t v817 = v802[28];
              v801[27] = v802[27];
              v801[28] = v817;
              uint64_t v818 = v802[30];
              v801[29] = v802[29];
              v801[30] = v818;
              uint64_t v819 = v802[32];
              v801[31] = v802[31];
              v801[32] = v819;
              uint64_t v820 = v802[34];
              v801[33] = v802[33];
              v801[34] = v820;
              uint64_t v821 = v802[36];
              uint64_t v822 = v802[35];
              *((unsigned char *)v801 + 296) = *((unsigned char *)v802 + 296);
              v801[35] = v822;
              v801[36] = v821;
              uint64_t v823 = *(int *)(v803 + 112);
              v2550 = (char *)v801 + v823;
              v824 = (char *)v802 + v823;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v824, 1, v2631))
              {
                uint64_t v825 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2550, v824, *(void *)(*(void *)(v825 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v2550, v824, v2631);
                __swift_storeEnumTagSinglePayload((uint64_t)v2550, 0, 1, v2631);
              }
              uint64_t v856 = *(int *)(v803 + 116);
              v857 = (char *)v801 + v856;
              v858 = (char *)v802 + v856;
              if (__swift_getEnumTagSinglePayload((uint64_t)v802 + v856, 1, v2631))
              {
                uint64_t v859 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v857, v858, *(void *)(*(void *)(v859 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v857, v858, v2631);
                __swift_storeEnumTagSinglePayload((uint64_t)v857, 0, 1, v2631);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v801, 0, 1, v803);
              uint64_t v501 = (uint64_t)v2604;
              v323 = v2622;
            }
            uint64_t v892 = v323[7];
            v893 = (void *)(v501 + v892);
            v894 = (void *)((char *)v324 + v892);
            v895 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v894, 1, (uint64_t)v895))
            {
              uint64_t v896 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v893, v894, *(void *)(*(void *)(v896 - 8) + 64));
            }
            else
            {
              uint64_t v897 = v894[1];
              void *v893 = *v894;
              v893[1] = v897;
              uint64_t v898 = v894[3];
              v893[2] = v894[2];
              v893[3] = v898;
              uint64_t v899 = v894[5];
              v893[4] = v894[4];
              v893[5] = v899;
              uint64_t v900 = v894[7];
              v893[6] = v894[6];
              v893[7] = v900;
              uint64_t v901 = v894[9];
              v893[8] = v894[8];
              v893[9] = v901;
              uint64_t v902 = v894[11];
              v893[10] = v894[10];
              v893[11] = v902;
              uint64_t v903 = v894[13];
              v893[12] = v894[12];
              v893[13] = v903;
              uint64_t v904 = v894[15];
              v893[14] = v894[14];
              v893[15] = v904;
              *((unsigned char *)v893 + 128) = *((unsigned char *)v894 + 128);
              *(_WORD *)((char *)v893 + 129) = *(_WORD *)((char *)v894 + 129);
              uint64_t v905 = v894[18];
              v893[17] = v894[17];
              v893[18] = v905;
              uint64_t v906 = v894[20];
              v893[19] = v894[19];
              v893[20] = v906;
              uint64_t v907 = v894[22];
              v893[21] = v894[21];
              v893[22] = v907;
              __dsta = (void *)v894[24];
              v893[23] = v894[23];
              v893[24] = __dsta;
              uint64_t v908 = v894[26];
              v893[25] = v894[25];
              v893[26] = v908;
              uint64_t v909 = v894[28];
              v893[27] = v894[27];
              v893[28] = v909;
              uint64_t v2514 = v894[30];
              v893[29] = v894[29];
              v893[30] = v2514;
              uint64_t v2479 = v894[32];
              v893[31] = v894[31];
              v893[32] = v2479;
              uint64_t v910 = v894[34];
              v893[33] = v894[33];
              v893[34] = v910;
              uint64_t v911 = v894[36];
              uint64_t v912 = v894[35];
              *((unsigned char *)v893 + 296) = *((unsigned char *)v894 + 296);
              v893[35] = v912;
              v893[36] = v911;
              uint64_t v913 = v894[39];
              v893[38] = v894[38];
              v893[39] = v913;
              uint64_t v914 = v895[29];
              v2551 = (char *)v893 + v914;
              v915 = (char *)v894 + v914;
              uint64_t v916 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v915, 1, v916))
              {
                uint64_t v917 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2551, v915, *(void *)(*(void *)(v917 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v916 - 8) + 16))(v2551, v915, v916);
                __swift_storeEnumTagSinglePayload((uint64_t)v2551, 0, 1, v916);
              }
              uint64_t v953 = v895[30];
              v954 = (void *)((char *)v893 + v953);
              v955 = (void *)((char *)v894 + v953);
              uint64_t v956 = v955[1];
              void *v954 = *v955;
              v954[1] = v956;
              uint64_t v957 = v895[31];
              v958 = (char *)v893 + v957;
              v959 = (char *)v894 + v957;
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v959, 1, v2631))
              {
                uint64_t v960 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v958, v959, *(void *)(*(void *)(v960 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v958, v959, v2631);
                __swift_storeEnumTagSinglePayload((uint64_t)v958, 0, 1, v2631);
              }
              uint64_t v973 = v895[32];
              v974 = (char *)v893 + v973;
              v975 = (char *)v894 + v973;
              if (__swift_getEnumTagSinglePayload((uint64_t)v894 + v973, 1, v2631))
              {
                uint64_t v976 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v974, v975, *(void *)(*(void *)(v976 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v974, v975, v2631);
                __swift_storeEnumTagSinglePayload((uint64_t)v974, 0, 1, v2631);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v893, 0, 1, (uint64_t)v895);
              uint64_t v501 = (uint64_t)v2604;
              v323 = v2622;
            }
            uint64_t v1008 = v323[8];
            v1009 = (void *)(v501 + v1008);
            v1010 = (void *)((char *)v324 + v1008);
            uint64_t v1011 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1010, 1, v1011))
            {
              uint64_t v1012 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v1009, v1010, *(void *)(*(void *)(v1012 - 8) + 64));
            }
            else
            {
              uint64_t v1013 = v1010[1];
              void *v1009 = *v1010;
              v1009[1] = v1013;
              uint64_t v1014 = v1010[3];
              v1009[2] = v1010[2];
              v1009[3] = v1014;
              uint64_t v1015 = v1010[5];
              v1009[4] = v1010[4];
              v1009[5] = v1015;
              uint64_t v1016 = v1010[7];
              v1009[6] = v1010[6];
              v1009[7] = v1016;
              uint64_t v1017 = v1010[9];
              v1009[8] = v1010[8];
              v1009[9] = v1017;
              uint64_t v1018 = v1010[11];
              v1009[10] = v1010[10];
              v1009[11] = v1018;
              uint64_t v1019 = v1010[13];
              v1009[12] = v1010[12];
              v1009[13] = v1019;
              uint64_t v1020 = v1010[15];
              v1009[14] = v1010[14];
              v1009[15] = v1020;
              *((unsigned char *)v1009 + 128) = *((unsigned char *)v1010 + 128);
              *(_WORD *)((char *)v1009 + 129) = *(_WORD *)((char *)v1010 + 129);
              uint64_t v1021 = v1010[18];
              v1009[17] = v1010[17];
              v1009[18] = v1021;
              uint64_t v1022 = v1010[20];
              v1009[19] = v1010[19];
              v1009[20] = v1022;
              uint64_t v1023 = v1010[22];
              v1009[21] = v1010[21];
              v1009[22] = v1023;
              uint64_t v1024 = v1010[24];
              v1009[23] = v1010[23];
              v1009[24] = v1024;
              uint64_t v1025 = v1010[26];
              v1009[25] = v1010[25];
              v1009[26] = v1025;
              uint64_t v1026 = v1010[28];
              v1009[27] = v1010[27];
              v1009[28] = v1026;
              uint64_t v1027 = v1010[30];
              v1009[29] = v1010[29];
              v1009[30] = v1027;
              uint64_t v1028 = v1010[32];
              v1009[31] = v1010[31];
              v1009[32] = v1028;
              uint64_t v1029 = v1010[34];
              uint64_t v1030 = v1010[33];
              *((unsigned char *)v1009 + 280) = *((unsigned char *)v1010 + 280);
              v1009[33] = v1030;
              v1009[34] = v1029;
              uint64_t v1031 = v1010[37];
              v1009[36] = v1010[36];
              v1009[37] = v1031;
              uint64_t v1032 = *(int *)(v1011 + 108);
              v2552 = (char *)v1009 + v1032;
              v1033 = (char *)v1010 + v1032;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1033, 1, v2631))
              {
                uint64_t v1034 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2552, v1033, *(void *)(*(void *)(v1034 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v2552, v1033, v2631);
                __swift_storeEnumTagSinglePayload((uint64_t)v2552, 0, 1, v2631);
              }
              uint64_t v1067 = *(int *)(v1011 + 112);
              v1068 = (char *)v1009 + v1067;
              v1069 = (char *)v1010 + v1067;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1010 + v1067, 1, v2631))
              {
                uint64_t v1070 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1068, v1069, *(void *)(*(void *)(v1070 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v1068, v1069, v2631);
                __swift_storeEnumTagSinglePayload((uint64_t)v1068, 0, 1, v2631);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v1009, 0, 1, v1011);
              uint64_t v501 = (uint64_t)v2604;
              v323 = v2622;
            }
            uint64_t v1097 = v323[9];
            v1098 = (void *)(v501 + v1097);
            v1099 = (void *)((char *)v324 + v1097);
            v1100 = (int *)type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1099, 1, (uint64_t)v1100))
            {
              uint64_t v1101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v1098, v1099, *(void *)(*(void *)(v1101 - 8) + 64));
            }
            else
            {
              uint64_t v1102 = v1099[1];
              void *v1098 = *v1099;
              v1098[1] = v1102;
              uint64_t v1103 = v1099[3];
              v1098[2] = v1099[2];
              v1098[3] = v1103;
              uint64_t v1104 = v1099[5];
              v1098[4] = v1099[4];
              v1098[5] = v1104;
              uint64_t v1105 = v1099[7];
              v1098[6] = v1099[6];
              v1098[7] = v1105;
              uint64_t v1106 = v1099[9];
              v1098[8] = v1099[8];
              v1098[9] = v1106;
              uint64_t v1107 = v1099[11];
              v1098[10] = v1099[10];
              v1098[11] = v1107;
              uint64_t v1108 = v1099[13];
              v1098[12] = v1099[12];
              v1098[13] = v1108;
              uint64_t v1109 = v1099[15];
              v1098[14] = v1099[14];
              v1098[15] = v1109;
              *((unsigned char *)v1098 + 128) = *((unsigned char *)v1099 + 128);
              *(_WORD *)((char *)v1098 + 129) = *(_WORD *)((char *)v1099 + 129);
              uint64_t v1110 = v1099[18];
              v1098[17] = v1099[17];
              v1098[18] = v1110;
              uint64_t v1111 = v1099[20];
              v1098[19] = v1099[19];
              v1098[20] = v1111;
              uint64_t v1112 = v1099[22];
              v1098[21] = v1099[21];
              v1098[22] = v1112;
              uint64_t v1113 = v1099[24];
              v1098[23] = v1099[23];
              v1098[24] = v1113;
              uint64_t v1114 = v1099[26];
              v1098[25] = v1099[25];
              v1098[26] = v1114;
              uint64_t v1115 = v1099[28];
              v1098[27] = v1099[27];
              v1098[28] = v1115;
              uint64_t v1116 = v1099[30];
              v1098[29] = v1099[29];
              v1098[30] = v1116;
              v1098[31] = v1099[31];
              uint64_t v1117 = v1100[24];
              v2517 = (char *)v1098 + v1117;
              v1118 = (char *)v1099 + v1117;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1118, 1, v2631))
              {
                uint64_t v1119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2517, v1118, *(void *)(*(void *)(v1119 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v2517, v1118, v2631);
                __swift_storeEnumTagSinglePayload((uint64_t)v2517, 0, 1, v2631);
              }
              uint64_t v1146 = v1100[25];
              v1147 = (char *)v1098 + v1146;
              v1148 = (char *)v1099 + v1146;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1099 + v1146, 1, v2631))
              {
                uint64_t v1149 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1147, v1148, *(void *)(*(void *)(v1149 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v1147, v1148, v2631);
                __swift_storeEnumTagSinglePayload((uint64_t)v1147, 0, 1, v2631);
              }
              uint64_t v1159 = v1100[26];
              v1160 = (char *)v1098 + v1159;
              v1161 = (char *)v1099 + v1159;
              uint64_t v1162 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1161, 1, v1162))
              {
                uint64_t v1163 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1160, v1161, *(void *)(*(void *)(v1163 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1162 - 8) + 16))(v1160, v1161, v1162);
                __swift_storeEnumTagSinglePayload((uint64_t)v1160, 0, 1, v1162);
              }
              v324 = v2579;
              __swift_storeEnumTagSinglePayload((uint64_t)v1098, 0, 1, (uint64_t)v1100);
              uint64_t v501 = (uint64_t)v2604;
              v323 = v2622;
            }
            uint64_t v1188 = v323[10];
            v1189 = (void *)(v501 + v1188);
            v1190 = (void *)((char *)v324 + v1188);
            uint64_t v1191 = type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1190, 1, v1191))
            {
              uint64_t v1192 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1189, v1190, *(void *)(*(void *)(v1192 - 8) + 64));
            }
            else
            {
              uint64_t v1193 = v1190[1];
              void *v1189 = *v1190;
              v1189[1] = v1193;
              uint64_t v1194 = v1190[3];
              v1189[2] = v1190[2];
              v1189[3] = v1194;
              uint64_t v1195 = v1190[5];
              v1189[4] = v1190[4];
              v1189[5] = v1195;
              uint64_t v1196 = v1190[7];
              v1189[6] = v1190[6];
              v1189[7] = v1196;
              uint64_t v1197 = v1190[9];
              v1189[8] = v1190[8];
              v1189[9] = v1197;
              uint64_t v1198 = v1190[11];
              v1189[10] = v1190[10];
              v1189[11] = v1198;
              uint64_t v1199 = v1190[13];
              v1189[12] = v1190[12];
              v1189[13] = v1199;
              uint64_t v1200 = v1190[15];
              v1189[14] = v1190[14];
              v1189[15] = v1200;
              *((unsigned char *)v1189 + 128) = *((unsigned char *)v1190 + 128);
              *(_WORD *)((char *)v1189 + 129) = *(_WORD *)((char *)v1190 + 129);
              uint64_t v1201 = v1190[18];
              v1189[17] = v1190[17];
              v1189[18] = v1201;
              uint64_t v1202 = v1190[20];
              v1189[19] = v1190[19];
              v1189[20] = v1202;
              uint64_t v1203 = v1190[22];
              v1189[21] = v1190[21];
              v1189[22] = v1203;
              uint64_t v1204 = v1190[24];
              v1189[23] = v1190[23];
              v1189[24] = v1204;
              uint64_t v1205 = v1190[26];
              v1189[25] = v1190[25];
              v1189[26] = v1205;
              v2519 = (int *)v1191;
              v1189[27] = v1190[27];
              uint64_t v1206 = *(int *)(v1191 + 88);
              v2553 = (char *)v1189 + v1206;
              v1207 = (char *)v1190 + v1206;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1207, 1, v2631))
              {
                uint64_t v1208 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2553, v1207, *(void *)(*(void *)(v1208 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v2553, v1207, v2631);
                __swift_storeEnumTagSinglePayload((uint64_t)v2553, 0, 1, v2631);
              }
              uint64_t v1233 = v2519[23];
              v1234 = (char *)v1189 + v1233;
              v1235 = (char *)v1190 + v1233;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1190 + v1233, 1, v2631))
              {
                uint64_t v1236 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1234, v1235, *(void *)(*(void *)(v1236 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v1234, v1235, v2631);
                __swift_storeEnumTagSinglePayload((uint64_t)v1234, 0, 1, v2631);
              }
              uint64_t v1249 = v2519[24];
              v1250 = (char *)v1189 + v1249;
              v1251 = (char *)v1190 + v1249;
              *(void *)v1250 = *(void *)v1251;
              v1250[8] = v1251[8];
              uint64_t v1252 = v2519[25];
              v1253 = (char *)v1189 + v1252;
              v1254 = (char *)v1190 + v1252;
              uint64_t v1255 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1254, 1, v1255))
              {
                uint64_t v1256 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1253, v1254, *(void *)(*(void *)(v1256 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1255 - 8) + 16))(v1253, v1254, v1255);
                __swift_storeEnumTagSinglePayload((uint64_t)v1253, 0, 1, v1255);
              }
              v324 = v2579;
              __swift_storeEnumTagSinglePayload((uint64_t)v1189, 0, 1, (uint64_t)v2519);
              uint64_t v501 = (uint64_t)v2604;
              v323 = v2622;
            }
            uint64_t v1279 = v323[11];
            v1280 = (void *)(v501 + v1279);
            v1281 = (void *)((char *)v324 + v1279);
            v1282 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1281, 1, (uint64_t)v1282))
            {
              uint64_t v1283 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1280, v1281, *(void *)(*(void *)(v1283 - 8) + 64));
            }
            else
            {
              uint64_t v1284 = v1281[1];
              void *v1280 = *v1281;
              v1280[1] = v1284;
              uint64_t v2521 = v1281[3];
              v1280[2] = v1281[2];
              v1280[3] = v2521;
              uint64_t v2485 = v1281[5];
              v1280[4] = v1281[4];
              v1280[5] = v2485;
              uint64_t v1285 = v1281[7];
              v1280[6] = v1281[6];
              v1280[7] = v1285;
              uint64_t v1286 = v1281[9];
              v1280[8] = v1281[8];
              v1280[9] = v1286;
              uint64_t v1287 = v1281[11];
              v1280[10] = v1281[10];
              v1280[11] = v1287;
              *((unsigned char *)v1280 + 96) = *((unsigned char *)v1281 + 96);
              uint64_t v1288 = v1281[14];
              v1280[13] = v1281[13];
              v1280[14] = v1288;
              uint64_t v1289 = v1282[13];
              v2554 = (char *)v1280 + v1289;
              v1290 = (char *)v1281 + v1289;
              uint64_t v1291 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1290, 1, v1291))
              {
                uint64_t v1292 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2554, v1290, *(void *)(*(void *)(v1292 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1291 - 8) + 16))(v2554, v1290, v1291);
                __swift_storeEnumTagSinglePayload((uint64_t)v2554, 0, 1, v1291);
              }
              uint64_t v1310 = v1282[14];
              v1311 = (char *)v1280 + v1310;
              v1312 = (char *)v1281 + v1310;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1281 + v1310, 1, v1291))
              {
                uint64_t v1313 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1311, v1312, *(void *)(*(void *)(v1313 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1291 - 8) + 16))(v1311, v1312, v1291);
                __swift_storeEnumTagSinglePayload((uint64_t)v1311, 0, 1, v1291);
              }
              uint64_t v1386 = v1282[15];
              v1387 = (void *)((char *)v1280 + v1386);
              v1388 = (void *)((char *)v1281 + v1386);
              uint64_t v1389 = v1388[1];
              void *v1387 = *v1388;
              v1387[1] = v1389;
              uint64_t v1390 = v1282[16];
              v1391 = (void *)((char *)v1280 + v1390);
              v1392 = (void *)((char *)v1281 + v1390);
              uint64_t v2555 = v1392[1];
              void *v1391 = *v1392;
              v1391[1] = v2555;
              uint64_t v1393 = v1282[17];
              v1394 = (void *)((char *)v1280 + v1393);
              v1395 = (void *)((char *)v1281 + v1393);
              uint64_t v1396 = v1395[1];
              void *v1394 = *v1395;
              v1394[1] = v1396;
              uint64_t v1397 = v1282[18];
              v2489 = (char *)v1281 + v1397;
              v2523 = (char *)v1280 + v1397;
              uint64_t v1398 = type metadata accessor for DateComponents();
              v1399 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1398 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1399(v2523, v2489, v1398);
              v1399((char *)v1280 + v1282[19], (char *)v1281 + v1282[19], v1398);
              uint64_t v1400 = v1282[20];
              v1401 = (void *)((char *)v1280 + v1400);
              v1402 = (void *)((char *)v1281 + v1400);
              uint64_t v1403 = v1402[1];
              void *v1401 = *v1402;
              v1401[1] = v1403;
              uint64_t v1404 = v1282[21];
              v1405 = (void *)((char *)v1280 + v1404);
              v1406 = (void *)((char *)v1281 + v1404);
              uint64_t v2445 = v1406[1];
              void *v1405 = *v1406;
              v1405[1] = v2445;
              uint64_t v1407 = v1282[22];
              v1408 = (void *)((char *)v1280 + v1407);
              v1409 = (void *)((char *)v1281 + v1407);
              uint64_t v2524 = v1409[1];
              void *v1408 = *v1409;
              v1408[1] = v2524;
              uint64_t v1410 = v1282[23];
              v1411 = (void *)((char *)v1280 + v1410);
              v1412 = (void *)((char *)v1281 + v1410);
              uint64_t v2490 = v1412[1];
              void *v1411 = *v1412;
              v1411[1] = v2490;
              uint64_t v1413 = v1282[24];
              v1414 = (void *)((char *)v1280 + v1413);
              v1415 = (void *)((char *)v1281 + v1413);
              v2461 = (void *)v1415[1];
              void *v1414 = *v1415;
              v1414[1] = v2461;
              uint64_t v1416 = v1282[25];
              v1417 = (void *)((char *)v1280 + v1416);
              v1418 = (void *)((char *)v1281 + v1416);
              v2437 = (void *)v1418[1];
              void *v1417 = *v1418;
              v1417[1] = v2437;
              uint64_t v1419 = v1282[26];
              v1420 = (void *)((char *)v1280 + v1419);
              v1421 = (void *)((char *)v1281 + v1419);
              uint64_t v2428 = v1421[1];
              void *v1420 = *v1421;
              v1420[1] = v2428;
              uint64_t v1422 = v1282[27];
              v1423 = (void *)((char *)v1280 + v1422);
              v1424 = (void *)((char *)v1281 + v1422);
              v2420 = (void *)v1424[1];
              void *v1423 = *v1424;
              v1423[1] = v2420;
              uint64_t v1425 = v1282[28];
              v1426 = (void *)((char *)v1280 + v1425);
              v1427 = (void *)((char *)v1281 + v1425);
              v2412 = (void *)v1427[1];
              void *v1426 = *v1427;
              v1426[1] = v2412;
              uint64_t v1428 = v1282[29];
              v1429 = (void *)((char *)v1280 + v1428);
              v1430 = (void *)((char *)v1281 + v1428);
              v2406 = (void *)v1430[1];
              void *v1429 = *v1430;
              v1429[1] = v2406;
              uint64_t v1431 = v1282[30];
              v1432 = (void *)((char *)v1280 + v1431);
              v1433 = (void *)((char *)v1281 + v1431);
              v2402 = (void *)v1433[1];
              void *v1432 = *v1433;
              v1432[1] = v2402;
              uint64_t v1434 = v1282[31];
              v1435 = (void *)((char *)v1280 + v1434);
              v1436 = (void *)((char *)v1281 + v1434);
              v2398 = (void *)v1436[1];
              void *v1435 = *v1436;
              v1435[1] = v2398;
              uint64_t v1437 = v1282[32];
              v1438 = (void *)((char *)v1280 + v1437);
              v1439 = (void *)((char *)v1281 + v1437);
              uint64_t v1440 = v1439[1];
              void *v1438 = *v1439;
              v1438[1] = v1440;
              *(void *)((char *)v1280 + v1282[33]) = *(void *)((char *)v1281 + v1282[33]);
              *(void *)((char *)v1280 + v1282[34]) = *(void *)((char *)v1281 + v1282[34]);
              uint64_t v1441 = v1282[35];
              v1442 = (void *)((char *)v1280 + v1441);
              v1443 = (void *)((char *)v1281 + v1441);
              uint64_t v1444 = v1443[1];
              void *v1442 = *v1443;
              v1442[1] = v1444;
              uint64_t v1445 = v1282[36];
              v1446 = (void *)((char *)v1280 + v1445);
              v1447 = (void *)((char *)v1281 + v1445);
              uint64_t v1448 = v1447[1];
              void *v1446 = *v1447;
              v1446[1] = v1448;
              uint64_t v1449 = v1282[37];
              v1450 = (void *)((char *)v1280 + v1449);
              v1451 = (void *)((char *)v1281 + v1449);
              uint64_t v1452 = v1451[1];
              void *v1450 = *v1451;
              v1450[1] = v1452;
              uint64_t v1453 = v1282[38];
              v2556 = (char *)v1280 + v1453;
              v1454 = (char *)v1281 + v1453;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1454, 1, v2631))
              {
                uint64_t v1455 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2556, v1454, *(void *)(*(void *)(v1455 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v2556, v1454, v2631);
                __swift_storeEnumTagSinglePayload((uint64_t)v2556, 0, 1, v2631);
              }
              uint64_t v1572 = v1282[39];
              v1573 = (void *)((char *)v1280 + v1572);
              v1574 = (void *)((char *)v1281 + v1572);
              uint64_t v1575 = v1574[1];
              void *v1573 = *v1574;
              v1573[1] = v1575;
              uint64_t v1576 = v1282[40];
              v1577 = (void *)((char *)v1280 + v1576);
              v1578 = (void *)((char *)v1281 + v1576);
              uint64_t v1579 = v1578[1];
              void *v1577 = *v1578;
              v1577[1] = v1579;
              uint64_t v1580 = v1282[41];
              v1581 = (char *)v1280 + v1580;
              v1582 = (char *)v1281 + v1580;
              v1581[8] = v1582[8];
              *(void *)v1581 = *(void *)v1582;
              uint64_t v1583 = v1282[42];
              v1584 = (void *)((char *)v1280 + v1583);
              v1585 = (void *)((char *)v1281 + v1583);
              uint64_t v1586 = v1585[1];
              void *v1584 = *v1585;
              v1584[1] = v1586;
              uint64_t v1587 = v1282[43];
              v1588 = (char *)v1280 + v1587;
              v1589 = (char *)v1281 + v1587;
              *(_OWORD *)v1588 = *(_OWORD *)v1589;
              *(void *)(v1588 + 13) = *(void *)(v1589 + 13);
              uint64_t v1590 = v1282[44];
              v1591 = (void *)((char *)v1280 + v1590);
              v1592 = (void *)((char *)v1281 + v1590);
              uint64_t v1593 = v1592[1];
              void *v1591 = *v1592;
              v1591[1] = v1593;
              uint64_t v1594 = v1282[45];
              v1595 = (void *)((char *)v1280 + v1594);
              v1596 = (void *)((char *)v1281 + v1594);
              uint64_t v1597 = v1596[1];
              void *v1595 = *v1596;
              v1595[1] = v1597;
              uint64_t v1598 = v1282[46];
              v1599 = (void *)((char *)v1280 + v1598);
              v1600 = (void *)((char *)v1281 + v1598);
              uint64_t v1601 = v1600[1];
              void *v1599 = *v1600;
              v1599[1] = v1601;
              uint64_t v1602 = v1282[47];
              v1603 = (void *)((char *)v1280 + v1602);
              v1604 = (void *)((char *)v1281 + v1602);
              uint64_t v1605 = v1604[1];
              void *v1603 = *v1604;
              v1603[1] = v1605;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1280, 0, 1, (uint64_t)v1282);
              uint64_t v501 = (uint64_t)v2604;
              v323 = v2622;
              v324 = v2579;
            }
            uint64_t v1606 = v323[12];
            v1607 = (void *)(v501 + v1606);
            v1608 = (void *)((char *)v324 + v1606);
            v1609 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1608, 1, (uint64_t)v1609))
            {
              uint64_t v1610 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1607, v1608, *(void *)(*(void *)(v1610 - 8) + 64));
            }
            else
            {
              uint64_t v1611 = v1608[1];
              void *v1607 = *v1608;
              v1607[1] = v1611;
              uint64_t v2527 = v1608[3];
              v1607[2] = v1608[2];
              v1607[3] = v2527;
              uint64_t v2495 = v1608[5];
              v1607[4] = v1608[4];
              v1607[5] = v2495;
              uint64_t v1612 = v1608[7];
              v1607[6] = v1608[6];
              v1607[7] = v1612;
              uint64_t v1613 = v1608[9];
              v1607[8] = v1608[8];
              v1607[9] = v1613;
              uint64_t v1614 = v1608[11];
              v1607[10] = v1608[10];
              v1607[11] = v1614;
              *((unsigned char *)v1607 + 96) = *((unsigned char *)v1608 + 96);
              uint64_t v1615 = v1608[14];
              v1607[13] = v1608[13];
              v1607[14] = v1615;
              uint64_t v1616 = v1608[16];
              v1607[15] = v1608[15];
              v1607[16] = v1616;
              uint64_t v1617 = v1609[14];
              v2557 = (char *)v1607 + v1617;
              v1618 = (char *)v1608 + v1617;
              uint64_t v1619 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1618, 1, v1619))
              {
                uint64_t v1620 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2557, v1618, *(void *)(*(void *)(v1620 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1619 - 8) + 16))(v2557, v1618, v1619);
                __swift_storeEnumTagSinglePayload((uint64_t)v2557, 0, 1, v1619);
              }
              uint64_t v1672 = v1609[15];
              v1673 = (char *)v1607 + v1672;
              v1674 = (char *)v1608 + v1672;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1608 + v1672, 1, v1619))
              {
                uint64_t v1675 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1673, v1674, *(void *)(*(void *)(v1675 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1619 - 8) + 16))(v1673, v1674, v1619);
                __swift_storeEnumTagSinglePayload((uint64_t)v1673, 0, 1, v1619);
              }
              uint64_t v1735 = v1609[16];
              v1736 = (void *)((char *)v1607 + v1735);
              v1737 = (void *)((char *)v1608 + v1735);
              uint64_t v1738 = v1737[1];
              void *v1736 = *v1737;
              v1736[1] = v1738;
              uint64_t v1739 = v1609[17];
              v1740 = (void *)((char *)v1607 + v1739);
              v1741 = (void *)((char *)v1608 + v1739);
              uint64_t v1742 = v1741[1];
              void *v1740 = *v1741;
              v1740[1] = v1742;
              uint64_t v1743 = v1609[18];
              v1744 = (void *)((char *)v1607 + v1743);
              v1745 = (void *)((char *)v1608 + v1743);
              uint64_t v2558 = v1745[1];
              void *v1744 = *v1745;
              v1744[1] = v2558;
              uint64_t v1746 = v1609[19];
              v1747 = (void *)((char *)v1607 + v1746);
              v1748 = (void *)((char *)v1608 + v1746);
              uint64_t v2530 = v1748[1];
              void *v1747 = *v1748;
              v1747[1] = v2530;
              uint64_t v1749 = v1609[20];
              v1750 = (void *)((char *)v1607 + v1749);
              v1751 = (void *)((char *)v1608 + v1749);
              uint64_t v2449 = v1751[1];
              void *v1750 = *v1751;
              v1750[1] = v2449;
              *(void *)((char *)v1607 + v1609[21]) = *(void *)((char *)v1608 + v1609[21]);
              *(void *)((char *)v1607 + v1609[22]) = *(void *)((char *)v1608 + v1609[22]);
              uint64_t v1752 = v1609[23];
              v1753 = (char *)v1607 + v1752;
              v1754 = (char *)v1608 + v1752;
              *(void *)v1753 = *(void *)v1754;
              v1753[8] = v1754[8];
              uint64_t v1755 = v1609[24];
              v1756 = (char *)v1607 + v1755;
              v1757 = (char *)v1608 + v1755;
              *(void *)v1756 = *(void *)v1757;
              v1756[8] = v1757[8];
              uint64_t v1758 = v1609[25];
              v1759 = (void *)((char *)v1607 + v1758);
              v1760 = (void *)((char *)v1608 + v1758);
              uint64_t v1761 = v1760[1];
              void *v1759 = *v1760;
              v1759[1] = v1761;
              uint64_t v1762 = v1609[26];
              v1763 = (void *)((char *)v1607 + v1762);
              v1764 = (void *)((char *)v1608 + v1762);
              uint64_t v1765 = v1764[1];
              void *v1763 = *v1764;
              v1763[1] = v1765;
              uint64_t v1766 = v1609[27];
              v1767 = (void *)((char *)v1607 + v1766);
              v1768 = (void *)((char *)v1608 + v1766);
              uint64_t v1769 = v1768[1];
              void *v1767 = *v1768;
              v1767[1] = v1769;
              uint64_t v1770 = v1609[28];
              v1771 = (void *)((char *)v1607 + v1770);
              v1772 = (void *)((char *)v1608 + v1770);
              uint64_t v1773 = v1772[1];
              void *v1771 = *v1772;
              v1771[1] = v1773;
              uint64_t v1774 = v1609[29];
              v1775 = (char *)v1607 + v1774;
              v1776 = (char *)v1608 + v1774;
              *(void *)v1775 = *(void *)v1776;
              v1775[8] = v1776[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1607, 0, 1, (uint64_t)v1609);
              uint64_t v501 = (uint64_t)v2604;
              v323 = v2622;
              v324 = v2579;
            }
            uint64_t v1777 = v323[13];
            v1778 = (void *)(v501 + v1777);
            v1779 = (void *)((char *)v324 + v1777);
            v1780 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1779, 1, (uint64_t)v1780))
            {
              uint64_t v1781 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1778, v1779, *(void *)(*(void *)(v1781 - 8) + 64));
            }
            else
            {
              uint64_t v1782 = v1779[1];
              void *v1778 = *v1779;
              v1778[1] = v1782;
              uint64_t v2559 = v1779[3];
              v1778[2] = v1779[2];
              v1778[3] = v2559;
              uint64_t v2531 = v1779[5];
              v1778[4] = v1779[4];
              v1778[5] = v2531;
              uint64_t v2499 = v1779[7];
              v1778[6] = v1779[6];
              v1778[7] = v2499;
              uint64_t v1783 = v1779[9];
              v1778[8] = v1779[8];
              v1778[9] = v1783;
              uint64_t v1784 = v1779[11];
              v1778[10] = v1779[10];
              v1778[11] = v1784;
              *((unsigned char *)v1778 + 96) = *((unsigned char *)v1779 + 96);
              uint64_t v1785 = v1779[14];
              v1778[13] = v1779[13];
              v1778[14] = v1785;
              uint64_t v1786 = v1779[16];
              v1778[15] = v1779[15];
              v1778[16] = v1786;
              uint64_t v1787 = v1780[14];
              v2584 = (char *)v1778 + v1787;
              v1788 = (char *)v1779 + v1787;
              v2439 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1788, 1, (uint64_t)v2439))
              {
                uint64_t v1789 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2584, v1788, *(void *)(*(void *)(v1789 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2439 - 1) + 16))(v2584, v1788, v2439);
                __swift_storeEnumTagSinglePayload((uint64_t)v2584, 0, 1, (uint64_t)v2439);
              }
              uint64_t v2015 = v1780[15];
              v2016 = (void *)((char *)v1778 + v2015);
              v2017 = (void *)((char *)v1779 + v2015);
              uint64_t v2018 = v2017[1];
              void *v2016 = *v2017;
              v2016[1] = v2018;
              uint64_t v2019 = v1780[16];
              v2020 = (void *)((char *)v1778 + v2019);
              v2021 = (void *)((char *)v1779 + v2019);
              uint64_t v2022 = v2021[1];
              void *v2020 = *v2021;
              v2020[1] = v2022;
              uint64_t v2023 = v1780[17];
              v2024 = (void *)((char *)v1778 + v2023);
              v2025 = (void *)((char *)v1779 + v2023);
              uint64_t v2589 = v2025[1];
              void *v2024 = *v2025;
              v2024[1] = v2589;
              uint64_t v2026 = v1780[18];
              v2027 = (void *)((char *)v1778 + v2026);
              v2028 = (void *)((char *)v1779 + v2026);
              uint64_t v2565 = v2028[1];
              void *v2027 = *v2028;
              v2027[1] = v2565;
              uint64_t v2029 = v1780[19];
              v2030 = (void *)((char *)v1778 + v2029);
              v2031 = (void *)((char *)v1779 + v2029);
              uint64_t v2032 = v2031[1];
              void *v2030 = *v2031;
              v2030[1] = v2032;
              *(void *)((char *)v1778 + v1780[20]) = *(void *)((char *)v1779 + v1780[20]);
              uint64_t v2033 = v1780[21];
              v2034 = (void *)((char *)v1778 + v2033);
              v2035 = (void *)((char *)v1779 + v2033);
              uint64_t v2036 = v2035[1];
              void *v2034 = *v2035;
              v2034[1] = v2036;
              uint64_t v2037 = v1780[22];
              v2038 = (void *)((char *)v1778 + v2037);
              v2039 = (void *)((char *)v1779 + v2037);
              uint64_t v2040 = v2039[1];
              void *v2038 = *v2039;
              v2038[1] = v2040;
              uint64_t v2041 = v1780[23];
              v2042 = (void *)((char *)v1778 + v2041);
              v2043 = (void *)((char *)v1779 + v2041);
              uint64_t v2044 = v2043[1];
              void *v2042 = *v2043;
              v2042[1] = v2044;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1778, 0, 1, (uint64_t)v1780);
              uint64_t v501 = (uint64_t)v2604;
              v323 = v2622;
            }
            __swift_storeEnumTagSinglePayload(v501, 0, 1, (uint64_t)v323);
          }
          uint64_t v2045 = v2659[18];
          v2046 = (void *)((char *)v2644 + v2045);
          v2047 = (void *)((char *)v14 + v2045);
          v2048 = (int *)type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2047, 1, (uint64_t)v2048))
          {
            uint64_t v2049 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v2046, v2047, *(void *)(*(void *)(v2049 - 8) + 64));
          }
          else
          {
            uint64_t v2050 = v2047[1];
            void *v2046 = *v2047;
            v2046[1] = v2050;
            uint64_t v2051 = v2047[3];
            v2046[2] = v2047[2];
            v2046[3] = v2051;
            uint64_t v2052 = v2047[5];
            v2046[4] = v2047[4];
            v2046[5] = v2052;
            uint64_t v2053 = v2047[7];
            v2046[6] = v2047[6];
            v2046[7] = v2053;
            uint64_t v2054 = v2047[9];
            v2046[8] = v2047[8];
            v2046[9] = v2054;
            uint64_t v2055 = v2047[11];
            v2046[10] = v2047[10];
            v2046[11] = v2055;
            uint64_t v2056 = v2048[10];
            v2607 = (char *)v2047 + v2056;
            v2624 = (char *)v2046 + v2056;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2607, 1, v2631))
            {
              uint64_t v2057 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2624, v2607, *(void *)(*(void *)(v2057 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v2624, v2607, v2631);
              __swift_storeEnumTagSinglePayload((uint64_t)v2624, 0, 1, v2631);
            }
            uint64_t v2058 = v2048[11];
            v2059 = (char *)v2046 + v2058;
            v2060 = (char *)v2047 + v2058;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2047 + v2058, 1, v2631))
            {
              uint64_t v2061 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2059, v2060, *(void *)(*(void *)(v2061 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v2059, v2060, v2631);
              __swift_storeEnumTagSinglePayload((uint64_t)v2059, 0, 1, v2631);
            }
            uint64_t v2062 = v2048[12];
            v2063 = (void *)((char *)v2046 + v2062);
            v2064 = (void *)((char *)v2047 + v2062);
            uint64_t v2065 = v2064[1];
            void *v2063 = *v2064;
            v2063[1] = v2065;
            uint64_t v2066 = v2048[13];
            v2067 = (void *)((char *)v2046 + v2066);
            v2068 = (void *)((char *)v2047 + v2066);
            uint64_t v2069 = v2068[1];
            void *v2067 = *v2068;
            v2067[1] = v2069;
            uint64_t v2070 = v2048[14];
            v2071 = (void *)((char *)v2046 + v2070);
            v2072 = (void *)((char *)v2047 + v2070);
            uint64_t v2073 = v2072[1];
            void *v2071 = *v2072;
            v2071[1] = v2073;
            uint64_t v2074 = v2048[15];
            v2075 = (char *)v2046 + v2074;
            v2076 = (char *)v2047 + v2074;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2076, 1, v2631))
            {
              uint64_t v2077 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2075, v2076, *(void *)(*(void *)(v2077 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v2075, v2076, v2631);
              __swift_storeEnumTagSinglePayload((uint64_t)v2075, 0, 1, v2631);
            }
            uint64_t v2078 = v2048[16];
            v2079 = (void *)((char *)v2046 + v2078);
            v2080 = (void *)((char *)v2047 + v2078);
            uint64_t v2081 = v2080[1];
            void *v2079 = *v2080;
            v2079[1] = v2081;
            uint64_t v2082 = v2048[17];
            v2083 = (void *)((char *)v2046 + v2082);
            v2084 = (void *)((char *)v2047 + v2082);
            uint64_t v2625 = v2084[1];
            void *v2083 = *v2084;
            v2083[1] = v2625;
            uint64_t v2085 = v2048[18];
            v2086 = (void *)((char *)v2046 + v2085);
            v2087 = (void *)((char *)v2047 + v2085);
            uint64_t v2088 = v2087[1];
            void *v2086 = *v2087;
            v2086[1] = v2088;
            uint64_t v2089 = v2048[19];
            v2090 = (void *)((char *)v2046 + v2089);
            v2091 = (void *)((char *)v2047 + v2089);
            uint64_t v2092 = v2091[1];
            void *v2090 = *v2091;
            v2090[1] = v2092;
            uint64_t v2093 = v2048[20];
            v2094 = (void *)((char *)v2046 + v2093);
            v2095 = (void *)((char *)v2047 + v2093);
            uint64_t v2096 = v2095[1];
            void *v2094 = *v2095;
            v2094[1] = v2096;
            uint64_t v2097 = v2048[21];
            v2098 = (void *)((char *)v2046 + v2097);
            v2099 = (void *)((char *)v2047 + v2097);
            uint64_t v2100 = v2099[1];
            void *v2098 = *v2099;
            v2098[1] = v2100;
            uint64_t v2101 = v2048[22];
            v2102 = (void *)((char *)v2046 + v2101);
            v2103 = (void *)((char *)v2047 + v2101);
            uint64_t v2104 = v2103[1];
            void *v2102 = *v2103;
            v2102[1] = v2104;
            uint64_t v2105 = v2048[23];
            v2106 = (void *)((char *)v2046 + v2105);
            v2107 = (void *)((char *)v2047 + v2105);
            uint64_t v2108 = v2107[1];
            void *v2106 = *v2107;
            v2106[1] = v2108;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2046, 0, 1, (uint64_t)v2048);
          }
          uint64_t v2109 = v2659[19];
          v2110 = (void *)((char *)v2644 + v2109);
          v2111 = (void *)((char *)v14 + v2109);
          v2112 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2111, 1, (uint64_t)v2112))
          {
            uint64_t v2113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v2110, v2111, *(void *)(*(void *)(v2113 - 8) + 64));
          }
          else
          {
            uint64_t v2114 = v2111[1];
            void *v2110 = *v2111;
            v2110[1] = v2114;
            uint64_t v2115 = v2111[3];
            v2110[2] = v2111[2];
            v2110[3] = v2115;
            uint64_t v2116 = v2111[5];
            v2110[4] = v2111[4];
            v2110[5] = v2116;
            uint64_t v2117 = v2111[7];
            v2110[6] = v2111[6];
            v2110[7] = v2117;
            uint64_t v2608 = v2111[9];
            v2110[8] = v2111[8];
            v2110[9] = v2608;
            uint64_t v2590 = v2111[11];
            v2110[10] = v2111[10];
            v2110[11] = v2590;
            uint64_t v2118 = v2112[11];
            v2626 = (char *)v2110 + v2118;
            v2119 = (char *)v2111 + v2118;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2119, 1, v2631))
            {
              uint64_t v2120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2626, v2119, *(void *)(*(void *)(v2120 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v2626, v2119, v2631);
              __swift_storeEnumTagSinglePayload((uint64_t)v2626, 0, 1, v2631);
            }
            uint64_t v2121 = v2112[12];
            v2122 = (void *)((char *)v2110 + v2121);
            v2123 = (void *)((char *)v2111 + v2121);
            uint64_t v2124 = v2123[1];
            void *v2122 = *v2123;
            v2122[1] = v2124;
            *(void *)((char *)v2110 + v2112[13]) = *(void *)((char *)v2111 + v2112[13]);
            uint64_t v2125 = v2112[14];
            v2126 = (char *)v2110 + v2125;
            v2127 = (char *)v2111 + v2125;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2127, 1, v2631))
            {
              uint64_t v2128 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2126, v2127, *(void *)(*(void *)(v2128 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v2126, v2127, v2631);
              __swift_storeEnumTagSinglePayload((uint64_t)v2126, 0, 1, v2631);
            }
            *(void *)((char *)v2110 + v2112[15]) = *(void *)((char *)v2111 + v2112[15]);
            *(void *)((char *)v2110 + v2112[16]) = *(void *)((char *)v2111 + v2112[16]);
            uint64_t v2129 = v2112[17];
            v2130 = (void *)((char *)v2110 + v2129);
            v2131 = (void *)((char *)v2111 + v2129);
            uint64_t v2132 = v2131[1];
            void *v2130 = *v2131;
            v2130[1] = v2132;
            *(void *)((char *)v2110 + v2112[18]) = *(void *)((char *)v2111 + v2112[18]);
            *(void *)((char *)v2110 + v2112[19]) = *(void *)((char *)v2111 + v2112[19]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2110, 0, 1, (uint64_t)v2112);
          }
          uint64_t v2133 = v2659[20];
          v2134 = (void *)((char *)v2644 + v2133);
          v2135 = (void *)((char *)v14 + v2133);
          v2136 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2135, 1, (uint64_t)v2136))
          {
            uint64_t v2137 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v2134, v2135, *(void *)(*(void *)(v2137 - 8) + 64));
            v13 = v2644;
          }
          else
          {
            uint64_t v2138 = v2135[1];
            void *v2134 = *v2135;
            v2134[1] = v2138;
            uint64_t v2139 = v2135[3];
            v2134[2] = v2135[2];
            v2134[3] = v2139;
            uint64_t v2140 = v2135[5];
            v2134[4] = v2135[4];
            v2134[5] = v2140;
            uint64_t v2141 = v2135[7];
            v2134[6] = v2135[6];
            v2134[7] = v2141;
            uint64_t v2142 = v2136[8];
            v2609 = (char *)v2135 + v2142;
            v2627 = (char *)v2134 + v2142;
            uint64_t v2143 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2609, 1, v2143))
            {
              uint64_t v2144 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2627, v2609, *(void *)(*(void *)(v2144 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2143 - 8) + 16))(v2627, v2609, v2143);
              __swift_storeEnumTagSinglePayload((uint64_t)v2627, 0, 1, v2143);
            }
            uint64_t v2145 = v2136[9];
            v2146 = (void *)((char *)v2134 + v2145);
            v2147 = (void *)((char *)v2135 + v2145);
            uint64_t v2148 = v2147[1];
            void *v2146 = *v2147;
            v2146[1] = v2148;
            uint64_t v2149 = v2136[10];
            v2150 = (void *)((char *)v2134 + v2149);
            v2151 = (void *)((char *)v2135 + v2149);
            uint64_t v2152 = v2151[1];
            void *v2150 = *v2151;
            v2150[1] = v2152;
            uint64_t v2153 = v2136[11];
            v2154 = (void *)((char *)v2134 + v2153);
            v2155 = (void *)((char *)v2135 + v2153);
            uint64_t v2156 = v2155[1];
            void *v2154 = *v2155;
            v2154[1] = v2156;
            uint64_t v2157 = v2136[12];
            v2158 = (char *)v2134 + v2157;
            v2159 = (char *)v2135 + v2157;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2159, 1, v2631))
            {
              uint64_t v2160 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2158, v2159, *(void *)(*(void *)(v2160 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v2158, v2159, v2631);
              __swift_storeEnumTagSinglePayload((uint64_t)v2158, 0, 1, v2631);
            }
            v13 = v2644;
            uint64_t v2161 = v2136[13];
            v2162 = (char *)v2134 + v2161;
            v2163 = (char *)v2135 + v2161;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2135 + v2161, 1, v2631))
            {
              uint64_t v2164 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2162, v2163, *(void *)(*(void *)(v2164 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2631 - 8) + 16))(v2162, v2163, v2631);
              __swift_storeEnumTagSinglePayload((uint64_t)v2162, 0, 1, v2631);
            }
            uint64_t v2165 = v2136[14];
            v2166 = (char *)v2134 + v2165;
            v2167 = (char *)v2135 + v2165;
            *(void *)v2166 = *(void *)v2167;
            v2166[8] = v2167[8];
            uint64_t v2168 = v2136[15];
            v2169 = (void *)((char *)v2134 + v2168);
            v2170 = (void *)((char *)v2135 + v2168);
            uint64_t v2171 = v2170[1];
            void *v2169 = *v2170;
            v2169[1] = v2171;
            uint64_t v2172 = v2136[16];
            v2173 = (void *)((char *)v2134 + v2172);
            v2174 = (void *)((char *)v2135 + v2172);
            uint64_t v2175 = v2174[1];
            void *v2173 = *v2174;
            v2173[1] = v2175;
            uint64_t v2176 = v2136[17];
            v2177 = (void *)((char *)v2134 + v2176);
            v2178 = (void *)((char *)v2135 + v2176);
            uint64_t v2179 = v2178[1];
            void *v2177 = *v2178;
            v2177[1] = v2179;
            uint64_t v2180 = v2136[18];
            v2181 = (void *)((char *)v2134 + v2180);
            v2182 = (void *)((char *)v2135 + v2180);
            uint64_t v2183 = v2182[1];
            void *v2181 = *v2182;
            v2181[1] = v2183;
            uint64_t v2184 = v2136[19];
            v2185 = (void *)((char *)v2134 + v2184);
            v2186 = (void *)((char *)v2135 + v2184);
            uint64_t v2187 = v2186[1];
            void *v2185 = *v2186;
            v2185[1] = v2187;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2134, 0, 1, (uint64_t)v2136);
          }
          uint64_t v2188 = v2659[21];
          v2189 = (void *)((char *)v13 + v2188);
          v2190 = (void *)((char *)v14 + v2188);
          uint64_t v2191 = *(void *)((char *)v14 + v2188 + 8);
          if (!v2191) {
            goto LABEL_544;
          }
          void *v2189 = *v2190;
          v2189[1] = v2191;
          uint64_t v2192 = v2190[3];
          v2189[2] = v2190[2];
          v2189[3] = v2192;
          uint64_t v2193 = v2190[5];
          v2189[4] = v2190[4];
          v2189[5] = v2193;
          uint64_t v2194 = v2190[7];
          v2189[6] = v2190[6];
          v2189[7] = v2194;
          uint64_t v2195 = v2190[9];
          v2189[8] = v2190[8];
          v2189[9] = v2195;
          uint64_t v2196 = v2190[11];
          v2189[10] = v2190[10];
          v2189[11] = v2196;
          uint64_t v2197 = v2190[13];
          v2189[12] = v2190[12];
          v2189[13] = v2197;
          uint64_t v2198 = v2190[15];
          v2189[14] = v2190[14];
          v2189[15] = v2198;
          uint64_t v2676 = v2190[17];
          v2189[16] = v2190[16];
          v2189[17] = v2676;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_539;
        case 4u:
          uint64_t v2679 = v15;
          uint64_t v65 = v14[1];
          void *v13 = *v14;
          v13[1] = v65;
          uint64_t v66 = v14[3];
          v13[2] = v14[2];
          v13[3] = v66;
          uint64_t v67 = v14[5];
          v13[4] = v14[4];
          v13[5] = v67;
          uint64_t v68 = v14[7];
          v13[6] = v14[6];
          v13[7] = v68;
          uint64_t v69 = type metadata accessor for NoteDocument(0);
          uint64_t v70 = *(int *)(v69 + 32);
          v2660 = (char *)v13 + v70;
          v71 = (char *)v14 + v70;
          uint64_t v72 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v71, 1, v72))
          {
            uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2660, v71, *(void *)(*(void *)(v73 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v2660, v71, v72);
            __swift_storeEnumTagSinglePayload((uint64_t)v2660, 0, 1, v72);
          }
          uint64_t v326 = *(int *)(v69 + 36);
          v327 = (char *)v13 + v326;
          uint64_t v328 = (uint64_t)v14 + v326;
          uint64_t v15 = v2679;
          if (!__swift_getEnumTagSinglePayload((uint64_t)v14 + v326, 1, v72)) {
            goto LABEL_142;
          }
          goto LABEL_151;
        case 5u:
          uint64_t v2680 = v15;
          uint64_t v74 = v14[1];
          void *v13 = *v14;
          v13[1] = v74;
          uint64_t v75 = v14[3];
          v13[2] = v14[2];
          v13[3] = v75;
          uint64_t v76 = v14[5];
          v13[4] = v14[4];
          v13[5] = v76;
          v77 = (int *)type metadata accessor for Reminder(0);
          uint64_t v78 = v77[7];
          v79 = (char *)v13 + v78;
          v80 = (char *)v14 + v78;
          uint64_t v81 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v80, 1, v81))
          {
            uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v79, v80, *(void *)(*(void *)(v82 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
            __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v81);
          }
          uint64_t v329 = v77[8];
          v330 = (char *)v13 + v329;
          v331 = (char *)v14 + v329;
          uint64_t v15 = v2680;
          if (__swift_getEnumTagSinglePayload((uint64_t)v14 + v329, 1, v81))
          {
            uint64_t v332 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v330, v331, *(void *)(*(void *)(v332 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v330, v331, v81);
            __swift_storeEnumTagSinglePayload((uint64_t)v330, 0, 1, v81);
          }
          *((unsigned char *)v13 + v77[9]) = *((unsigned char *)v14 + v77[9]);
          uint64_t v503 = v77[10];
          v504 = (void *)((char *)v13 + v503);
          v505 = (void *)((char *)v14 + v503);
          uint64_t v506 = v505[1];
          void *v504 = *v505;
          v504[1] = v506;
          uint64_t v507 = v77[11];
          v508 = (void *)((char *)v13 + v507);
          v509 = (void *)((char *)v14 + v507);
          uint64_t v510 = v509[1];
          void *v508 = *v509;
          v508[1] = v510;
          uint64_t v511 = v77[12];
          v104 = (char *)v13 + v511;
          v105 = (char *)v14 + v511;
          uint64_t v106 = type metadata accessor for URL();
          goto LABEL_140;
        case 6u:
          uint64_t v2681 = v15;
          uint64_t v83 = v14[1];
          void *v13 = *v14;
          v13[1] = v83;
          uint64_t v84 = v14[3];
          v13[2] = v14[2];
          v13[3] = v84;
          uint64_t v85 = v14[5];
          v13[4] = v14[4];
          v13[5] = v85;
          uint64_t v86 = v14[7];
          v13[6] = v14[6];
          v13[7] = v86;
          uint64_t v87 = type metadata accessor for PhoneHistory(0);
          uint64_t v88 = *(int *)(v87 + 40);
          v2632 = (char *)v13 + v88;
          v2645 = (char *)v14 + v88;
          v2661 = (int *)v87;
          uint64_t v89 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2645, 1, v89))
          {
            uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2632, v2645, *(void *)(*(void *)(v90 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v2632, v2645, v89);
            __swift_storeEnumTagSinglePayload((uint64_t)v2632, 0, 1, v89);
          }
          uint64_t v333 = v2661[11];
          v334 = (void *)((char *)v13 + v333);
          v335 = (void *)((char *)v14 + v333);
          uint64_t v336 = v335[1];
          void *v334 = *v335;
          v334[1] = v336;
          uint64_t v337 = v2661[12];
          v338 = (void *)((char *)v13 + v337);
          v339 = (void *)((char *)v14 + v337);
          uint64_t v340 = v339[1];
          void *v338 = *v339;
          v338[1] = v340;
          uint64_t v341 = v2661[13];
          v104 = (char *)v13 + v341;
          v105 = (char *)v14 + v341;
          uint64_t v106 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v15 = v2681;
          if (!__swift_getEnumTagSinglePayload((uint64_t)v105, 1, v106)) {
            goto LABEL_79;
          }
          goto LABEL_141;
        case 7u:
          uint64_t v2682 = v15;
          uint64_t v91 = v14[1];
          void *v13 = *v14;
          v13[1] = v91;
          uint64_t v92 = v14[3];
          v13[2] = v14[2];
          v13[3] = v92;
          uint64_t v93 = v14[5];
          v13[4] = v14[4];
          v13[5] = v93;
          uint64_t v94 = type metadata accessor for VoicemailTranscript(0);
          uint64_t v95 = *(int *)(v94 + 28);
          v96 = (char *)v13 + v95;
          v97 = (char *)v14 + v95;
          uint64_t v98 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v97, 1, v98))
          {
            uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v96, v97, *(void *)(*(void *)(v99 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v96, v97, v98);
            __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v98);
          }
          uint64_t v342 = *(int *)(v94 + 32);
          v343 = (char *)v13 + v342;
          uint64_t v344 = (uint64_t)v14 + v342;
          uint64_t v345 = type metadata accessor for URL();
          int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v344, 1, v345);
          uint64_t v15 = v2682;
          goto LABEL_84;
        case 8u:
          uint64_t v100 = v14[1];
          void *v13 = *v14;
          v13[1] = v100;
          uint64_t v101 = v14[3];
          v13[2] = v14[2];
          v13[3] = v101;
          uint64_t v102 = v14[5];
          v13[4] = v14[4];
          v13[5] = v102;
          uint64_t v103 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
          v104 = (char *)v13 + v103;
          v105 = (char *)v14 + v103;
          uint64_t v106 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
LABEL_140:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v105, 1, v106))
          {
LABEL_141:
            uint64_t v512 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v104, v105, *(void *)(*(void *)(v512 - 8) + 64));
          }
          else
          {
LABEL_79:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16))(v104, v105, v106);
            __swift_storeEnumTagSinglePayload((uint64_t)v104, 0, 1, v106);
          }
          goto LABEL_542;
        case 9u:
          uint64_t v107 = v14[1];
          void *v13 = *v14;
          v13[1] = v107;
          uint64_t v108 = v14[3];
          v13[2] = v14[2];
          v13[3] = v108;
          v109 = (int *)type metadata accessor for VoiceMemo(0);
          uint64_t v110 = v109[6];
          v111 = (char *)v13 + v110;
          v112 = (char *)v14 + v110;
          uint64_t v113 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v112, 1, v113))
          {
            uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v111, v112, *(void *)(*(void *)(v114 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16))(v111, v112, v113);
            __swift_storeEnumTagSinglePayload((uint64_t)v111, 0, 1, v113);
          }
          uint64_t v347 = v109[7];
          v348 = (char *)v13 + v347;
          v349 = (char *)v14 + v347;
          *(void *)v348 = *(void *)v349;
          v348[8] = v349[8];
          uint64_t v350 = v109[8];
          v343 = (char *)v13 + v350;
          uint64_t v344 = (uint64_t)v14 + v350;
          uint64_t v345 = type metadata accessor for URL();
          int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v344, 1, v345);
LABEL_84:
          if (EnumTagSinglePayload) {
            goto LABEL_85;
          }
          goto LABEL_158;
        case 0xAu:
          uint64_t v115 = v14[1];
          void *v13 = *v14;
          v13[1] = v115;
          uint64_t v116 = v14[3];
          v13[2] = v14[2];
          v13[3] = v116;
          v117 = (int *)type metadata accessor for Safari(0);
          uint64_t v118 = v117[6];
          v119 = (char *)v13 + v118;
          v120 = (char *)v14 + v118;
          uint64_t v72 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v120, 1, v72))
          {
            uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v119, v120, *(void *)(*(void *)(v121 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v119, v120, v72);
            __swift_storeEnumTagSinglePayload((uint64_t)v119, 0, 1, v72);
          }
          uint64_t v354 = v117[7];
          v355 = (void *)((char *)v13 + v354);
          v356 = (void *)((char *)v14 + v354);
          uint64_t v357 = v356[1];
          void *v355 = *v356;
          v355[1] = v357;
          uint64_t v358 = v117[8];
          v359 = (void *)((char *)v13 + v358);
          v360 = (void *)((char *)v14 + v358);
          uint64_t v361 = v360[1];
          void *v359 = *v360;
          v359[1] = v361;
          uint64_t v362 = v117[9];
          v327 = (char *)v13 + v362;
          uint64_t v328 = (uint64_t)v14 + v362;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (!__swift_getEnumTagSinglePayload(v328, 1, v72)) {
            goto LABEL_142;
          }
          size_t v351 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                       - 8)
                           + 64);
          v352 = v327;
          v353 = (const void *)v328;
          goto LABEL_152;
        case 0xBu:
          uint64_t v122 = v14[1];
          void *v13 = *v14;
          v13[1] = v122;
          v123 = (void *)v14[2];
          v13[2] = v123;
          swift_bridgeObjectRetain();
          id v124 = v123;
          goto LABEL_542;
        case 0xCu:
          uint64_t v2683 = v15;
          uint64_t v125 = v14[1];
          void *v13 = *v14;
          v13[1] = v125;
          uint64_t v126 = v14[3];
          v13[2] = v14[2];
          v13[3] = v126;
          uint64_t v127 = v14[5];
          v13[4] = v14[4];
          v13[5] = v127;
          v128 = (int *)type metadata accessor for WalletTransaction(0);
          uint64_t v129 = v128[7];
          v130 = (char *)v13 + v129;
          v131 = (char *)v14 + v129;
          uint64_t v132 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v131, 1, v132))
          {
            uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v130, v131, *(void *)(*(void *)(v133 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16))(v130, v131, v132);
            __swift_storeEnumTagSinglePayload((uint64_t)v130, 0, 1, v132);
          }
          uint64_t v15 = v2683;
          uint64_t v363 = v128[8];
          v364 = (void *)((char *)v13 + v363);
          v365 = (void *)((char *)v14 + v363);
          uint64_t v366 = v365[1];
          void *v364 = *v365;
          v364[1] = v366;
          uint64_t v367 = v128[9];
          v368 = (void *)((char *)v13 + v367);
          v369 = (void *)((char *)v14 + v367);
          uint64_t v370 = v369[1];
          void *v368 = *v369;
          v368[1] = v370;
          uint64_t v371 = v128[10];
          v372 = (void *)((char *)v13 + v371);
          v373 = (void *)((char *)v14 + v371);
          uint64_t v374 = v373[1];
          void *v372 = *v373;
          v372[1] = v374;
          uint64_t v375 = v128[11];
          v376 = (char *)v13 + v375;
          v377 = (char *)v14 + v375;
          *(_OWORD *)v376 = *(_OWORD *)v377;
          *(void *)(v376 + 13) = *(void *)(v377 + 13);
          uint64_t v378 = v128[12];
          v379 = (void *)((char *)v13 + v378);
          v380 = (void *)((char *)v14 + v378);
          uint64_t v381 = v380[1];
          void *v379 = *v380;
          v379[1] = v381;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_93;
        case 0xDu:
          uint64_t v2684 = v15;
          uint64_t v134 = v14[1];
          void *v13 = *v14;
          v13[1] = v134;
          uint64_t v135 = v14[3];
          v13[2] = v14[2];
          v13[3] = v135;
          uint64_t v136 = v14[5];
          v13[4] = v14[4];
          v13[5] = v136;
          v137 = (int *)type metadata accessor for WalletPass(0);
          uint64_t v138 = v137[7];
          v139 = (char *)v13 + v138;
          v140 = (char *)v14 + v138;
          uint64_t v141 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v140, 1, v141))
          {
            uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v139, v140, *(void *)(*(void *)(v142 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16))(v139, v140, v141);
            __swift_storeEnumTagSinglePayload((uint64_t)v139, 0, 1, v141);
          }
          uint64_t v15 = v2684;
          uint64_t v382 = v137[8];
          v383 = (void *)((char *)v13 + v382);
          v384 = (void *)((char *)v14 + v382);
          uint64_t v385 = v384[1];
          void *v383 = *v384;
          v383[1] = v385;
          *(void *)((char *)v13 + v137[9]) = *(void *)((char *)v14 + v137[9]);
LABEL_93:
          swift_bridgeObjectRetain();
          goto LABEL_127;
        case 0xEu:
          uint64_t v143 = v14[1];
          void *v13 = *v14;
          v13[1] = v143;
          uint64_t v144 = v14[3];
          v13[2] = v14[2];
          v13[3] = v144;
          uint64_t v145 = v14[5];
          v13[4] = v14[4];
          v13[5] = v145;
          uint64_t v146 = v14[7];
          v13[6] = v14[6];
          v13[7] = v146;
          uint64_t v147 = v14[9];
          v13[8] = v14[8];
          v13[9] = v147;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_127;
        case 0xFu:
          uint64_t v2685 = v15;
          uint64_t v148 = v14[1];
          void *v13 = *v14;
          v13[1] = v148;
          uint64_t v149 = v14[3];
          v13[2] = v14[2];
          v13[3] = v149;
          uint64_t v150 = v14[5];
          v13[4] = v14[4];
          v13[5] = v150;
          uint64_t v2662 = v14[7];
          v13[6] = v14[6];
          v13[7] = v2662;
          uint64_t v2646 = v14[9];
          v13[8] = v14[8];
          v13[9] = v2646;
          uint64_t v2633 = v14[11];
          v13[10] = v14[10];
          v13[11] = v2633;
          *((unsigned char *)v13 + 96) = *((unsigned char *)v14 + 96);
          uint64_t v151 = v14[14];
          v13[13] = v14[13];
          v13[14] = v151;
          v152 = (int *)type metadata accessor for FlightReservation(0);
          uint64_t v153 = v152[13];
          v2597 = (char *)v13 + v153;
          v154 = (char *)v14 + v153;
          uint64_t v2615 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v154, 1, v2615))
          {
            uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2597, v154, *(void *)(*(void *)(v155 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2615 - 8) + 16))(v2597, v154, v2615);
            __swift_storeEnumTagSinglePayload((uint64_t)v2597, 0, 1, v2615);
          }
          uint64_t v386 = v152[14];
          v387 = (char *)v13 + v386;
          v388 = (char *)v14 + v386;
          if (__swift_getEnumTagSinglePayload((uint64_t)v14 + v386, 1, v2615))
          {
            uint64_t v389 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v387, v388, *(void *)(*(void *)(v389 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2615 - 8) + 16))(v387, v388, v2615);
            __swift_storeEnumTagSinglePayload((uint64_t)v387, 0, 1, v2615);
          }
          uint64_t v513 = v152[15];
          v514 = (void *)((char *)v13 + v513);
          v515 = (void *)((char *)v14 + v513);
          uint64_t v516 = v515[1];
          void *v514 = *v515;
          v514[1] = v516;
          uint64_t v517 = v152[16];
          v518 = (void *)((char *)v13 + v517);
          v519 = (void *)((char *)v14 + v517);
          uint64_t v520 = v519[1];
          void *v518 = *v519;
          v518[1] = v520;
          uint64_t v521 = v152[17];
          v522 = (void *)((char *)v13 + v521);
          v523 = (void *)((char *)v14 + v521);
          uint64_t v524 = v523[1];
          void *v522 = *v523;
          v522[1] = v524;
          uint64_t v525 = v152[18];
          v2653 = (char *)v14 + v525;
          v2673 = (char *)v13 + v525;
          uint64_t v526 = type metadata accessor for DateComponents();
          v527 = *(void (**)(char *, char *, uint64_t))(*(void *)(v526 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v527(v2673, v2653, v526);
          v527((char *)v13 + v152[19], (char *)v14 + v152[19], v526);
          uint64_t v528 = v152[20];
          v529 = (void *)((char *)v13 + v528);
          v530 = (void *)((char *)v14 + v528);
          uint64_t v2674 = v530[1];
          void *v529 = *v530;
          v529[1] = v2674;
          uint64_t v531 = v152[21];
          v532 = (void *)((char *)v13 + v531);
          v533 = (void *)((char *)v14 + v531);
          uint64_t v2654 = v533[1];
          void *v532 = *v533;
          v532[1] = v2654;
          uint64_t v534 = v152[22];
          v535 = (void *)((char *)v13 + v534);
          v536 = (void *)((char *)v14 + v534);
          uint64_t v2640 = v536[1];
          void *v535 = *v536;
          v535[1] = v2640;
          uint64_t v537 = v152[23];
          v538 = (void *)((char *)v13 + v537);
          v539 = (void *)((char *)v14 + v537);
          uint64_t v2623 = v539[1];
          void *v538 = *v539;
          v538[1] = v2623;
          uint64_t v540 = v152[24];
          v541 = (void *)((char *)v13 + v540);
          v542 = (void *)((char *)v14 + v540);
          uint64_t v2605 = v542[1];
          void *v541 = *v542;
          v541[1] = v2605;
          uint64_t v543 = v152[25];
          v544 = (void *)((char *)v13 + v543);
          v545 = (void *)((char *)v14 + v543);
          uint64_t v2580 = v545[1];
          void *v544 = *v545;
          v544[1] = v2580;
          uint64_t v546 = v152[26];
          v547 = (void *)((char *)v13 + v546);
          v548 = (void *)((char *)v14 + v546);
          uint64_t v2547 = v548[1];
          void *v547 = *v548;
          v547[1] = v2547;
          uint64_t v549 = v152[27];
          v550 = (void *)((char *)v13 + v549);
          v551 = (void *)((char *)v14 + v549);
          uint64_t v2510 = v551[1];
          void *v550 = *v551;
          v550[1] = v2510;
          uint64_t v552 = v152[28];
          v553 = (void *)((char *)v13 + v552);
          v554 = (void *)((char *)v14 + v552);
          uint64_t v2472 = v554[1];
          void *v553 = *v554;
          v553[1] = v2472;
          uint64_t v555 = v152[29];
          v556 = (void *)((char *)v13 + v555);
          v557 = (void *)((char *)v14 + v555);
          v2450 = (void *)v557[1];
          void *v556 = *v557;
          v556[1] = v2450;
          uint64_t v558 = v152[30];
          v559 = (void *)((char *)v13 + v558);
          v560 = (void *)((char *)v14 + v558);
          uint64_t v2441 = v560[1];
          void *v559 = *v560;
          v559[1] = v2441;
          uint64_t v561 = v152[31];
          v562 = (void *)((char *)v13 + v561);
          v563 = (void *)((char *)v14 + v561);
          v2433 = (void *)v563[1];
          void *v562 = *v563;
          v562[1] = v2433;
          uint64_t v564 = v152[32];
          v565 = (void *)((char *)v13 + v564);
          v566 = (void *)((char *)v14 + v564);
          uint64_t v567 = v566[1];
          void *v565 = *v566;
          v565[1] = v567;
          *(void *)((char *)v13 + v152[33]) = *(void *)((char *)v14 + v152[33]);
          *(void *)((char *)v13 + v152[34]) = *(void *)((char *)v14 + v152[34]);
          uint64_t v568 = v152[35];
          v569 = (void *)((char *)v13 + v568);
          v570 = (void *)((char *)v14 + v568);
          uint64_t v571 = v570[1];
          void *v569 = *v570;
          v569[1] = v571;
          uint64_t v572 = v152[36];
          v573 = (void *)((char *)v13 + v572);
          v574 = (void *)((char *)v14 + v572);
          uint64_t v575 = v574[1];
          void *v573 = *v574;
          v573[1] = v575;
          uint64_t v576 = v152[37];
          v577 = (void *)((char *)v13 + v576);
          v578 = (void *)((char *)v14 + v576);
          uint64_t v579 = v578[1];
          void *v577 = *v578;
          v577[1] = v579;
          uint64_t v580 = v152[38];
          v2409 = (char *)v13 + v580;
          v2426 = (char *)v14 + v580;
          v2418 = (void *)type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2426, 1, (uint64_t)v2418))
          {
            uint64_t v581 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2409, v2426, *(void *)(*(void *)(v581 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v2418 - 1) + 16))(v2409, v2426, v2418);
            __swift_storeEnumTagSinglePayload((uint64_t)v2409, 0, 1, (uint64_t)v2418);
          }
          uint64_t v15 = v2685;
          uint64_t v640 = v152[39];
          v641 = (void *)((char *)v13 + v640);
          v642 = (void *)((char *)v14 + v640);
          uint64_t v643 = v642[1];
          void *v641 = *v642;
          v641[1] = v643;
          uint64_t v644 = v152[40];
          v645 = (void *)((char *)v13 + v644);
          v646 = (void *)((char *)v14 + v644);
          uint64_t v647 = v646[1];
          void *v645 = *v646;
          v645[1] = v647;
          uint64_t v648 = v152[41];
          v649 = (char *)v13 + v648;
          v650 = (char *)v14 + v648;
          v649[8] = v650[8];
          *(void *)v649 = *(void *)v650;
          uint64_t v651 = v152[42];
          v652 = (void *)((char *)v13 + v651);
          v653 = (void *)((char *)v14 + v651);
          uint64_t v654 = v653[1];
          void *v652 = *v653;
          v652[1] = v654;
          uint64_t v655 = v152[43];
          v656 = (char *)v13 + v655;
          v657 = (char *)v14 + v655;
          *(_OWORD *)v656 = *(_OWORD *)v657;
          *(void *)(v656 + 13) = *(void *)(v657 + 13);
          uint64_t v658 = v152[44];
          v659 = (void *)((char *)v13 + v658);
          v660 = (void *)((char *)v14 + v658);
          uint64_t v661 = v660[1];
          void *v659 = *v660;
          v659[1] = v661;
          uint64_t v662 = v152[45];
          v663 = (void *)((char *)v13 + v662);
          v664 = (void *)((char *)v14 + v662);
          uint64_t v665 = v664[1];
          void *v663 = *v664;
          v663[1] = v665;
          uint64_t v666 = v152[46];
          v667 = (void *)((char *)v13 + v666);
          v668 = (void *)((char *)v14 + v666);
          uint64_t v669 = v668[1];
          void *v667 = *v668;
          v667[1] = v669;
          uint64_t v670 = v152[47];
          v671 = (void *)((char *)v13 + v670);
          v672 = (void *)((char *)v14 + v670);
          uint64_t v673 = v672[1];
          void *v671 = *v672;
          v671[1] = v673;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v674 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
          *(void *)((char *)v13 + *(int *)(v674 + 48)) = *(void *)((char *)v14 + *(int *)(v674 + 48));
          swift_bridgeObjectRetain();
          goto LABEL_542;
        case 0x10u:
          uint64_t v2678 = v15;
          uint64_t v156 = v14[1];
          void *v13 = *v14;
          v13[1] = v156;
          uint64_t v157 = v14[3];
          v13[2] = v14[2];
          v13[3] = v157;
          uint64_t v2663 = v14[5];
          v13[4] = v14[4];
          v13[5] = v2663;
          uint64_t v2647 = v14[7];
          v13[6] = v14[6];
          v13[7] = v2647;
          uint64_t v2634 = v14[9];
          v13[8] = v14[8];
          v13[9] = v2634;
          uint64_t v2616 = v14[11];
          v13[10] = v14[10];
          v13[11] = v2616;
          *((unsigned char *)v13 + 96) = *((unsigned char *)v14 + 96);
          uint64_t v158 = v14[14];
          v13[13] = v14[13];
          v13[14] = v158;
          uint64_t v159 = v14[16];
          v13[15] = v14[15];
          v13[16] = v159;
          v160 = (int *)type metadata accessor for HotelReservation(0);
          uint64_t v161 = v160[14];
          v2571 = (char *)v13 + v161;
          v162 = (char *)v14 + v161;
          uint64_t v2598 = type metadata accessor for DateComponents();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v162, 1, v2598))
          {
            uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v2571, v162, *(void *)(*(void *)(v163 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2598 - 8) + 16))(v2571, v162, v2598);
            __swift_storeEnumTagSinglePayload((uint64_t)v2571, 0, 1, v2598);
          }
          uint64_t v390 = v160[15];
          v391 = (char *)v13 + v390;
          v392 = (char *)v14 + v390;
          if (__swift_getEnumTagSinglePayload((uint64_t)v14 + v390, 1, v2598))
          {
            uint64_t v393 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v391, v392, *(void *)(*(void *)(v393 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2598 - 8) + 16))(v391, v392, v2598);
            __swift_storeEnumTagSinglePayload((uint64_t)v391, 0, 1, v2598);
          }
          uint64_t v582 = v160[16];
          v583 = (void *)((char *)v13 + v582);
          v584 = (void *)((char *)v14 + v582);
          uint64_t v585 = v584[1];
          void *v583 = *v584;
          v583[1] = v585;
          uint64_t v586 = v160[17];
          v587 = (void *)((char *)v13 + v586);
          v588 = (void *)((char *)v14 + v586);
          uint64_t v2675 = v588[1];
          void *v587 = *v588;
          v587[1] = v2675;
          uint64_t v589 = v160[18];
          v590 = (void *)((char *)v13 + v589);
          v591 = (void *)((char *)v14 + v589);
          uint64_t v2655 = v591[1];
          void *v590 = *v591;
          v590[1] = v2655;
          uint64_t v592 = v160[19];
          v593 = (void *)((char *)v13 + v592);
          v594 = (void *)((char *)v14 + v592);
          uint64_t v2641 = v594[1];
          void *v593 = *v594;
          v593[1] = v2641;
          uint64_t v595 = v160[20];
          v596 = (void *)((char *)v13 + v595);
          v597 = (void *)((char *)v14 + v595);
          uint64_t v598 = v597[1];
          void *v596 = *v597;
          v596[1] = v598;
          *(void *)((char *)v13 + v160[21]) = *(void *)((char *)v14 + v160[21]);
          *(void *)((char *)v13 + v160[22]) = *(void *)((char *)v14 + v160[22]);
          uint64_t v599 = v160[23];
          v600 = (char *)v13 + v599;
          v601 = (char *)v14 + v599;
          *(void *)v600 = *(void *)v601;
          v600[8] = v601[8];
          uint64_t v602 = v160[24];
          v603 = (char *)v13 + v602;
          v604 = (char *)v14 + v602;
          *(void *)v603 = *(void *)v604;
          v603[8] = v604[8];
          uint64_t v605 = v160[25];
          v606 = (void *)((char *)v13 + v605);
          v607 = (void *)((char *)v14 + v605);
          uint64_t v608 = v607[1];
          void *v606 = *v607;
          v606[1] = v608;
          uint64_t v609 = v160[26];
          v610 = (void *)((char *)v13 + v609);
          v611 = (void *)((char *)v14 + v609);
          uint64_t v612 = v611[1];
          void *v610 = *v611;
          v610[1] = v612;
          uint64_t v613 = v160[27];
          v614 = (void *)((char *)v13 + v613);
          v615 = (void *)((char *)v14 + v613);
          uint64_t v616 = v615[1];
          void *v614 = *v615;
          v614[1] = v616;
          uint64_t v617 = v160[28];
          v618 = (void *)((char *)v13 + v617);
          v619 = (void *)((char *)v14 + v617);
          uint64_t v620 = v619[1];
          void *v618 = *v619;
          v618[1] = v620;
          uint64_t v621 = v160[29];
          v622 = (char *)v13 + v621;
          v623 = (char *)v14 + v621;
          *(void *)v622 = *(void *)v623;
          v622[8] = v623[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_539;
        case 0x11u:
          uint64_t v2678 = v15;
          uint64_t v164 = v14[1];
          void *v13 = *v14;
          v13[1] = v164;
          uint64_t v165 = v14[3];
          v13[2] = v14[2];
          v13[3] = v165;
          uint64_t v2664 = v14[5];
          v13[4] = v14[4];
          v13[5] = v2664;
          uint64_t v2648 = v14[7];
          v13[6] = v14[6];
          v13[7] = v2648;
          uint64_t v2635 = v14[9];
          v13[8] = v14[8];
          v13[9] = v2635;
          uint64_t v2617 = v14[11];
          v13[10] = v14[10];
          v13[11] = v2617;
          *((unsigned char *)v13 + 96) = *((unsigned char *)v14 + 96);
          uint64_t v166 = v14[14];
          v13[13] = v14[13];
          v13[14] = v166;
          uint64_t v167 = v14[16];
          v13[15] = v14[15];
          v13[16] = v167;
          v168 = (int *)type metadata accessor for RestaurantReservation(0);
          uint64_t v169 = v168[14];
          v2572 = (char *)v13 + v169;
          v2599 = (char *)v14 + v169;
          uint64_t v170 = type metadata accessor for DateComponents();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2599, 1, v170))
          {
            uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v2572, v2599, *(void *)(*(void *)(v171 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 16))(v2572, v2599, v170);
            __swift_storeEnumTagSinglePayload((uint64_t)v2572, 0, 1, v170);
          }
          uint64_t v394 = v168[15];
          v395 = (void *)((char *)v13 + v394);
          v396 = (void *)((char *)v14 + v394);
          uint64_t v397 = v396[1];
          void *v395 = *v396;
          v395[1] = v397;
          uint64_t v398 = v168[16];
          v399 = (void *)((char *)v13 + v398);
          v400 = (void *)((char *)v14 + v398);
          uint64_t v2672 = v400[1];
          void *v399 = *v400;
          v399[1] = v2672;
          uint64_t v401 = v168[17];
          v402 = (void *)((char *)v13 + v401);
          v403 = (void *)((char *)v14 + v401);
          uint64_t v404 = v403[1];
          void *v402 = *v403;
          v402[1] = v404;
          uint64_t v405 = v168[18];
          v406 = (void *)((char *)v13 + v405);
          v407 = (void *)((char *)v14 + v405);
          uint64_t v408 = v407[1];
          void *v406 = *v407;
          v406[1] = v408;
          uint64_t v409 = v168[19];
          v410 = (void *)((char *)v13 + v409);
          v411 = (void *)((char *)v14 + v409);
          uint64_t v412 = v411[1];
          void *v410 = *v411;
          v410[1] = v412;
          *(void *)((char *)v13 + v168[20]) = *(void *)((char *)v14 + v168[20]);
          uint64_t v413 = v168[21];
          v414 = (void *)((char *)v13 + v413);
          v415 = (void *)((char *)v14 + v413);
          uint64_t v416 = v415[1];
          void *v414 = *v415;
          v414[1] = v416;
          uint64_t v417 = v168[22];
          v418 = (void *)((char *)v13 + v417);
          v419 = (void *)((char *)v14 + v417);
          uint64_t v420 = v419[1];
          void *v418 = *v419;
          v418[1] = v420;
          uint64_t v421 = v168[23];
          v422 = (void *)((char *)v13 + v421);
          v423 = (void *)((char *)v14 + v421);
          uint64_t v424 = v423[1];
          void *v422 = *v423;
          v422[1] = v424;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_540;
        case 0x12u:
          uint64_t v2686 = v15;
          uint64_t v172 = v14[1];
          void *v13 = *v14;
          v13[1] = v172;
          uint64_t v173 = v14[3];
          v13[2] = v14[2];
          v13[3] = v173;
          uint64_t v174 = v14[5];
          v13[4] = v14[4];
          v13[5] = v174;
          uint64_t v175 = v14[7];
          v13[6] = v14[6];
          v13[7] = v175;
          uint64_t v176 = v14[9];
          v13[8] = v14[8];
          v13[9] = v176;
          uint64_t v177 = v14[11];
          v13[10] = v14[10];
          v13[11] = v177;
          uint64_t v178 = v14[13];
          v13[12] = v14[12];
          v13[13] = v178;
          uint64_t v179 = v14[15];
          v13[14] = v14[14];
          v13[15] = v179;
          *((unsigned char *)v13 + 128) = *((unsigned char *)v14 + 128);
          *(_WORD *)((char *)v13 + 129) = *(_WORD *)((char *)v14 + 129);
          uint64_t v180 = v14[18];
          v13[17] = v14[17];
          v13[18] = v180;
          uint64_t v181 = v14[20];
          v13[19] = v14[19];
          v13[20] = v181;
          uint64_t v182 = v14[22];
          v13[21] = v14[21];
          v13[22] = v182;
          uint64_t v183 = v14[24];
          v13[23] = v14[23];
          v13[24] = v183;
          uint64_t v184 = v14[26];
          v13[25] = v14[25];
          v13[26] = v184;
          uint64_t v185 = v14[28];
          v13[27] = v14[27];
          v13[28] = v185;
          uint64_t v186 = v14[30];
          v13[29] = v14[29];
          v13[30] = v186;
          uint64_t v2649 = v14[32];
          v13[31] = v14[31];
          v13[32] = v2649;
          uint64_t v2636 = v14[34];
          v13[33] = v14[33];
          v13[34] = v2636;
          uint64_t v2618 = v14[36];
          v13[35] = v14[35];
          v13[36] = v2618;
          uint64_t v2600 = v14[38];
          v13[37] = v14[37];
          v13[38] = v2600;
          uint64_t v2573 = v14[40];
          v13[39] = v14[39];
          v13[40] = v2573;
          uint64_t v2541 = v14[42];
          v13[41] = v14[41];
          v13[42] = v2541;
          uint64_t v2505 = v14[44];
          v13[43] = v14[43];
          v13[44] = v2505;
          uint64_t v2467 = v14[46];
          v13[45] = v14[45];
          v13[46] = v2467;
          uint64_t v187 = v14[47];
          *((unsigned char *)v13 + 384) = *((unsigned char *)v14 + 384);
          v13[47] = v187;
          uint64_t v188 = v14[50];
          v13[49] = v14[49];
          v13[50] = v188;
          uint64_t v189 = v14[52];
          v13[51] = v14[51];
          v13[52] = v189;
          uint64_t v2665 = type metadata accessor for RentalCarReservation(0);
          uint64_t v190 = *(int *)(v2665 + 140);
          __dst = (char *)v13 + v190;
          v191 = (char *)v14 + v190;
          uint64_t v192 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v191, 1, v192))
          {
            uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(__dst, v191, *(void *)(*(void *)(v193 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(__dst, v191, v192);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v192);
          }
          uint64_t v425 = *(int *)(v2665 + 144);
          goto LABEL_111;
        case 0x13u:
          uint64_t v2686 = v15;
          uint64_t v2468 = v14[1];
          void *v13 = *v14;
          v13[1] = v2468;
          uint64_t v194 = v14[3];
          v13[2] = v14[2];
          v13[3] = v194;
          uint64_t v195 = v14[5];
          v13[4] = v14[4];
          v13[5] = v195;
          uint64_t v196 = v14[7];
          v13[6] = v14[6];
          v13[7] = v196;
          uint64_t v197 = v14[9];
          v13[8] = v14[8];
          v13[9] = v197;
          uint64_t v198 = v14[11];
          v13[10] = v14[10];
          v13[11] = v198;
          uint64_t v199 = v14[13];
          v13[12] = v14[12];
          v13[13] = v199;
          uint64_t v200 = v14[15];
          v13[14] = v14[14];
          v13[15] = v200;
          *((unsigned char *)v13 + 128) = *((unsigned char *)v14 + 128);
          *(_WORD *)((char *)v13 + 129) = *(_WORD *)((char *)v14 + 129);
          uint64_t v201 = v14[18];
          v13[17] = v14[17];
          v13[18] = v201;
          uint64_t v202 = v14[20];
          v13[19] = v14[19];
          v13[20] = v202;
          uint64_t v203 = v14[22];
          v13[21] = v14[21];
          v13[22] = v203;
          uint64_t v204 = v14[24];
          v13[23] = v14[23];
          v13[24] = v204;
          uint64_t v2650 = v14[26];
          v13[25] = v14[25];
          v13[26] = v2650;
          uint64_t v2637 = v14[28];
          v13[27] = v14[27];
          v13[28] = v2637;
          uint64_t v2619 = v14[30];
          v13[29] = v14[29];
          v13[30] = v2619;
          uint64_t v2601 = v14[32];
          v13[31] = v14[31];
          v13[32] = v2601;
          uint64_t v205 = v14[34];
          v13[33] = v14[33];
          v13[34] = v205;
          uint64_t v206 = v14[36];
          uint64_t v2542 = v14[35];
          *((unsigned char *)v13 + 296) = *((unsigned char *)v14 + 296);
          v13[35] = v2542;
          v13[36] = v206;
          uint64_t v2666 = type metadata accessor for TicketedTransportation(0);
          uint64_t v207 = *(int *)(v2666 + 112);
          v2400 = (char *)v13 + v207;
          v208 = (char *)v14 + v207;
          uint64_t v192 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v208, 1, v192))
          {
            uint64_t v209 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2400, v208, *(void *)(*(void *)(v209 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(v2400, v208, v192);
            __swift_storeEnumTagSinglePayload((uint64_t)v2400, 0, 1, v192);
          }
          uint64_t v425 = *(int *)(v2666 + 116);
          goto LABEL_111;
        case 0x14u:
          uint64_t v2687 = v15;
          uint64_t v210 = v14[1];
          void *v13 = *v14;
          v13[1] = v210;
          uint64_t v211 = v14[3];
          v13[2] = v14[2];
          v13[3] = v211;
          uint64_t v212 = v14[5];
          v13[4] = v14[4];
          v13[5] = v212;
          uint64_t v213 = v14[7];
          v13[6] = v14[6];
          v13[7] = v213;
          uint64_t v214 = v14[9];
          v13[8] = v14[8];
          v13[9] = v214;
          uint64_t v215 = v14[11];
          v13[10] = v14[10];
          v13[11] = v215;
          uint64_t v216 = v14[13];
          v13[12] = v14[12];
          v13[13] = v216;
          uint64_t v217 = v14[15];
          v13[14] = v14[14];
          v13[15] = v217;
          *((unsigned char *)v13 + 128) = *((unsigned char *)v14 + 128);
          *(_WORD *)((char *)v13 + 129) = *(_WORD *)((char *)v14 + 129);
          uint64_t v218 = v14[18];
          v13[17] = v14[17];
          v13[18] = v218;
          uint64_t v219 = v14[20];
          v13[19] = v14[19];
          v13[20] = v219;
          uint64_t v220 = v14[22];
          v13[21] = v14[21];
          v13[22] = v220;
          uint64_t v221 = v14[24];
          v13[23] = v14[23];
          v13[24] = v221;
          uint64_t v222 = v14[26];
          v13[25] = v14[25];
          v13[26] = v222;
          uint64_t v223 = v14[28];
          v13[27] = v14[27];
          v13[28] = v223;
          uint64_t v2651 = v14[30];
          v13[29] = v14[29];
          v13[30] = v2651;
          uint64_t v2638 = v14[32];
          v13[31] = v14[31];
          v13[32] = v2638;
          uint64_t v224 = v14[34];
          v13[33] = v14[33];
          v13[34] = v224;
          uint64_t v225 = v14[36];
          uint64_t v2602 = v14[35];
          *((unsigned char *)v13 + 296) = *((unsigned char *)v14 + 296);
          v13[35] = v2602;
          v13[36] = v225;
          uint64_t v2574 = v14[39];
          v13[38] = v14[38];
          v13[39] = v2574;
          v2667 = (int *)type metadata accessor for TicketedShow(0);
          uint64_t v226 = v2667[29];
          v2396 = (char *)v13 + v226;
          v227 = (char *)v14 + v226;
          uint64_t v228 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v227, 1, v228))
          {
            uint64_t v229 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2396, v227, *(void *)(*(void *)(v229 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v228 - 8) + 16))(v2396, v227, v228);
            __swift_storeEnumTagSinglePayload((uint64_t)v2396, 0, 1, v228);
          }
          uint64_t v426 = v2667[30];
          v427 = (void *)((char *)v13 + v426);
          v428 = (void *)((char *)v14 + v426);
          uint64_t v429 = v428[1];
          void *v427 = *v428;
          v427[1] = v429;
          uint64_t v430 = v2667[31];
          v431 = (char *)v13 + v430;
          v432 = (char *)v14 + v430;
          uint64_t v72 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          uint64_t v15 = v2687;
          if (__swift_getEnumTagSinglePayload((uint64_t)v432, 1, v72))
          {
            uint64_t v433 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v431, v432, *(void *)(*(void *)(v433 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v431, v432, v72);
            __swift_storeEnumTagSinglePayload((uint64_t)v431, 0, 1, v72);
          }
          uint64_t v624 = v2667[32];
          v327 = (char *)v13 + v624;
          uint64_t v328 = (uint64_t)v14 + v624;
          if (!__swift_getEnumTagSinglePayload((uint64_t)v14 + v624, 1, v72))
          {
LABEL_142:
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 16))(v327, v328, v72);
            uint64_t v436 = (uint64_t)v327;
            uint64_t v437 = v72;
            goto LABEL_143;
          }
LABEL_151:
          size_t v351 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                       - 8)
                           + 64);
          v352 = v327;
          v353 = (const void *)v328;
          goto LABEL_152;
        case 0x15u:
          uint64_t v2686 = v15;
          uint64_t v2575 = v14[1];
          void *v13 = *v14;
          v13[1] = v2575;
          uint64_t v2543 = v14[3];
          v13[2] = v14[2];
          v13[3] = v2543;
          uint64_t v2506 = v14[5];
          v13[4] = v14[4];
          v13[5] = v2506;
          uint64_t v2469 = v14[7];
          v13[6] = v14[6];
          v13[7] = v2469;
          uint64_t v230 = v14[9];
          v13[8] = v14[8];
          v13[9] = v230;
          uint64_t v231 = v14[11];
          v13[10] = v14[10];
          v13[11] = v231;
          uint64_t v232 = v14[13];
          v13[12] = v14[12];
          v13[13] = v232;
          uint64_t v233 = v14[15];
          v13[14] = v14[14];
          v13[15] = v233;
          *((unsigned char *)v13 + 128) = *((unsigned char *)v14 + 128);
          *(_WORD *)((char *)v13 + 129) = *(_WORD *)((char *)v14 + 129);
          uint64_t v234 = v14[18];
          v13[17] = v14[17];
          v13[18] = v234;
          uint64_t v235 = v14[20];
          v13[19] = v14[19];
          v13[20] = v235;
          uint64_t v236 = v14[22];
          v13[21] = v14[21];
          v13[22] = v236;
          uint64_t v237 = v14[24];
          v13[23] = v14[23];
          v13[24] = v237;
          uint64_t v238 = v14[26];
          v13[25] = v14[25];
          v13[26] = v238;
          uint64_t v239 = v14[28];
          v13[27] = v14[27];
          v13[28] = v239;
          uint64_t v240 = v14[30];
          v13[29] = v14[29];
          v13[30] = v240;
          uint64_t v241 = v14[32];
          v13[31] = v14[31];
          v13[32] = v241;
          uint64_t v242 = v14[34];
          uint64_t v243 = v14[33];
          *((unsigned char *)v13 + 280) = *((unsigned char *)v14 + 280);
          v13[33] = v243;
          v13[34] = v242;
          uint64_t v244 = v14[37];
          v13[36] = v14[36];
          v13[37] = v244;
          uint64_t v2668 = type metadata accessor for Appointment(0);
          uint64_t v245 = *(int *)(v2668 + 108);
          v2404 = (char *)v13 + v245;
          v246 = (char *)v14 + v245;
          uint64_t v192 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v246, 1, v192))
          {
            uint64_t v247 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2404, v246, *(void *)(*(void *)(v247 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(v2404, v246, v192);
            __swift_storeEnumTagSinglePayload((uint64_t)v2404, 0, 1, v192);
          }
          uint64_t v425 = *(int *)(v2668 + 112);
LABEL_111:
          v434 = (char *)v13 + v425;
          v435 = (char *)v14 + v425;
          uint64_t v15 = v2686;
          if (__swift_getEnumTagSinglePayload((uint64_t)v14 + v425, 1, v192))
          {
            size_t v351 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                         - 8)
                             + 64);
            v352 = v434;
            v353 = v435;
            goto LABEL_152;
          }
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(v434, v435, v192);
          uint64_t v436 = (uint64_t)v434;
          uint64_t v437 = v192;
          goto LABEL_143;
        case 0x16u:
          uint64_t v2688 = v15;
          uint64_t v2576 = v14[1];
          void *v13 = *v14;
          v13[1] = v2576;
          uint64_t v2544 = v14[3];
          v13[2] = v14[2];
          v13[3] = v2544;
          uint64_t v2507 = v14[5];
          v13[4] = v14[4];
          v13[5] = v2507;
          uint64_t v2470 = v14[7];
          v13[6] = v14[6];
          v13[7] = v2470;
          uint64_t v248 = v14[9];
          v13[8] = v14[8];
          v13[9] = v248;
          uint64_t v249 = v14[11];
          v13[10] = v14[10];
          v13[11] = v249;
          uint64_t v250 = v14[13];
          v13[12] = v14[12];
          v13[13] = v250;
          uint64_t v251 = v14[15];
          v13[14] = v14[14];
          v13[15] = v251;
          *((unsigned char *)v13 + 128) = *((unsigned char *)v14 + 128);
          *(_WORD *)((char *)v13 + 129) = *(_WORD *)((char *)v14 + 129);
          uint64_t v252 = v14[18];
          v13[17] = v14[17];
          v13[18] = v252;
          uint64_t v253 = v14[20];
          v13[19] = v14[19];
          v13[20] = v253;
          uint64_t v254 = v14[22];
          v13[21] = v14[21];
          v13[22] = v254;
          uint64_t v255 = v14[24];
          v13[23] = v14[23];
          v13[24] = v255;
          uint64_t v256 = v14[26];
          v13[25] = v14[25];
          v13[26] = v256;
          uint64_t v257 = v14[28];
          v13[27] = v14[27];
          v13[28] = v257;
          uint64_t v258 = v14[30];
          v13[29] = v14[29];
          v13[30] = v258;
          v13[31] = v14[31];
          v2669 = (int *)type metadata accessor for Party(0);
          uint64_t v259 = v2669[24];
          v2417 = (char *)v13 + v259;
          v260 = (char *)v14 + v259;
          uint64_t v261 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v260, 1, v261))
          {
            uint64_t v262 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2417, v260, *(void *)(*(void *)(v262 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v261 - 8) + 16))(v2417, v260, v261);
            __swift_storeEnumTagSinglePayload((uint64_t)v2417, 0, 1, v261);
          }
          uint64_t v438 = v2669[25];
          v439 = (char *)v13 + v438;
          v440 = (char *)v14 + v438;
          uint64_t v15 = v2688;
          if (__swift_getEnumTagSinglePayload((uint64_t)v14 + v438, 1, v261))
          {
            uint64_t v441 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v439, v440, *(void *)(*(void *)(v441 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v261 - 8) + 16))(v439, v440, v261);
            __swift_storeEnumTagSinglePayload((uint64_t)v439, 0, 1, v261);
          }
          uint64_t v625 = v2669[26];
          goto LABEL_157;
        case 0x17u:
          uint64_t v2689 = v15;
          uint64_t v263 = v14[1];
          void *v13 = *v14;
          v13[1] = v263;
          uint64_t v2620 = v14[3];
          v13[2] = v14[2];
          v13[3] = v2620;
          uint64_t v2603 = v14[5];
          v13[4] = v14[4];
          v13[5] = v2603;
          uint64_t v2577 = v14[7];
          v13[6] = v14[6];
          v13[7] = v2577;
          uint64_t v2545 = v14[9];
          v13[8] = v14[8];
          v13[9] = v2545;
          uint64_t v264 = v14[11];
          v13[10] = v14[10];
          v13[11] = v264;
          uint64_t v2508 = v14[13];
          v13[12] = v14[12];
          v13[13] = v2508;
          uint64_t v2471 = v14[15];
          v13[14] = v14[14];
          v13[15] = v2471;
          *((unsigned char *)v13 + 128) = *((unsigned char *)v14 + 128);
          *(_WORD *)((char *)v13 + 129) = *(_WORD *)((char *)v14 + 129);
          uint64_t v265 = v14[18];
          v13[17] = v14[17];
          v13[18] = v265;
          uint64_t v266 = v14[20];
          v13[19] = v14[19];
          v13[20] = v266;
          uint64_t v267 = v14[22];
          v13[21] = v14[21];
          v13[22] = v267;
          uint64_t v268 = v14[24];
          v13[23] = v14[23];
          v13[24] = v268;
          uint64_t v269 = v14[26];
          v13[25] = v14[25];
          v13[26] = v269;
          v13[27] = v14[27];
          v2670 = (int *)type metadata accessor for Trip(0);
          uint64_t v270 = v2670[22];
          v2432 = (char *)v13 + v270;
          v2440 = (char *)v14 + v270;
          uint64_t v271 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2440, 1, v271))
          {
            uint64_t v272 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2432, v2440, *(void *)(*(void *)(v272 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v271 - 8) + 16))(v2432, v2440, v271);
            __swift_storeEnumTagSinglePayload((uint64_t)v2432, 0, 1, v271);
          }
          uint64_t v442 = v2670[23];
          v443 = (char *)v13 + v442;
          v444 = (char *)v14 + v442;
          uint64_t v15 = v2689;
          if (__swift_getEnumTagSinglePayload((uint64_t)v14 + v442, 1, v271))
          {
            uint64_t v445 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v443, v444, *(void *)(*(void *)(v445 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v271 - 8) + 16))(v443, v444, v271);
            __swift_storeEnumTagSinglePayload((uint64_t)v443, 0, 1, v271);
          }
          uint64_t v626 = v2670[24];
          v627 = (char *)v13 + v626;
          v628 = (char *)v14 + v626;
          *(void *)v627 = *(void *)v628;
          v627[8] = v628[8];
          uint64_t v625 = v2670[25];
LABEL_157:
          v343 = (char *)v13 + v625;
          uint64_t v344 = (uint64_t)v14 + v625;
          uint64_t v345 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload(v344, 1, v345))
          {
LABEL_85:
            size_t v351 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                         - 8)
                             + 64);
            v352 = v343;
            v353 = (const void *)v344;
LABEL_152:
            memcpy(v352, v353, v351);
          }
          else
          {
LABEL_158:
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v345 - 8) + 16))(v343, v344, v345);
            uint64_t v436 = (uint64_t)v343;
            uint64_t v437 = v345;
LABEL_143:
            __swift_storeEnumTagSinglePayload(v436, 0, 1, v437);
          }
LABEL_542:
          swift_storeEnumTagMultiPayload();
          uint64_t v2375 = *(int *)(v15 + 20);
          v2376 = *(void **)((char *)v14 + v2375);
          *(void *)((char *)v13 + v2375) = v2376;
          uint64_t v2377 = *(int *)(v15 + 24);
          v2378 = (void *)((char *)v13 + v2377);
          v2379 = (void *)((char *)v14 + v2377);
          uint64_t v2380 = v2379[1];
          void *v2378 = *v2379;
          v2378[1] = v2380;
          id v2381 = v2376;
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
          break;
        case 0x18u:
          uint64_t v2690 = v15;
          uint64_t v273 = v14[1];
          void *v13 = *v14;
          v13[1] = v273;
          uint64_t v274 = v14[3];
          v13[2] = v14[2];
          v13[3] = v274;
          uint64_t v275 = v14[5];
          v13[4] = v14[4];
          v13[5] = v275;
          v276 = (int *)type metadata accessor for GlobalItem();
          uint64_t v277 = v276[7];
          v278 = (char *)v13 + v277;
          v279 = (char *)v14 + v277;
          uint64_t v280 = type metadata accessor for GlobalDialog();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v279, 1, v280))
          {
            uint64_t v281 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
            memcpy(v278, v279, *(void *)(*(void *)(v281 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v280 - 8) + 16))(v278, v279, v280);
            __swift_storeEnumTagSinglePayload((uint64_t)v278, 0, 1, v280);
          }
          uint64_t v446 = v276[8];
          v447 = (char *)v13 + v446;
          v448 = (char *)v14 + v446;
          unint64_t v449 = *((void *)v448 + 1);
          uint64_t v15 = v2690;
          if (v449 >> 60 == 15)
          {
            *(_OWORD *)v447 = *(_OWORD *)v448;
          }
          else
          {
            uint64_t v450 = *(void *)v448;
            outlined copy of Data._Representation(*(void *)v448, *((void *)v448 + 1));
            *(void *)v447 = v450;
            *((void *)v447 + 1) = v449;
          }
          *((unsigned char *)v13 + v276[9]) = *((unsigned char *)v14 + v276[9]);
          uint64_t v451 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
          *(void *)((char *)v13 + *(int *)(v451 + 48)) = *(void *)((char *)v14 + *(int *)(v451 + 48));
          swift_bridgeObjectRetain();
          goto LABEL_542;
        case 0x19u:
          uint64_t v282 = v14[1];
          void *v13 = *v14;
          v13[1] = v282;
          uint64_t v283 = v14[3];
          v13[2] = v14[2];
          v13[3] = v283;
          uint64_t v284 = v14[5];
          v13[4] = v14[4];
          v13[5] = v284;
          uint64_t v285 = v14[7];
          v13[6] = v14[6];
          v13[7] = v285;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_127;
        case 0x1Au:
          uint64_t v286 = v14[1];
          void *v13 = *v14;
          v13[1] = v286;
          uint64_t v287 = v14[3];
          v13[2] = v14[2];
          v13[3] = v287;
          uint64_t v288 = v14[5];
          v13[4] = v14[4];
          v13[5] = v288;
          v13[6] = v14[6];
          uint64_t v289 = type metadata accessor for Answer(0);
          uint64_t v290 = *(int *)(v289 + 36);
          v2652 = (char *)v13 + v290;
          uint64_t v2671 = v289;
          v291 = (char *)v14 + v290;
          uint64_t v292 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v291, 1, v292))
          {
            uint64_t v293 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2652, v291, *(void *)(*(void *)(v293 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v292 - 8) + 16))(v2652, v291, v292);
            __swift_storeEnumTagSinglePayload((uint64_t)v2652, 0, 1, v292);
          }
          *((unsigned char *)v13 + *(int *)(v2671 + 40)) = *((unsigned char *)v14 + *(int *)(v2671 + 40));
          uint64_t v452 = *(int *)(v2671 + 44);
          v453 = (void *)((char *)v13 + v452);
          v454 = (void *)((char *)v14 + v452);
          uint64_t v455 = v454[1];
          void *v453 = *v454;
          v453[1] = v455;
LABEL_127:
          swift_bridgeObjectRetain();
          goto LABEL_542;
        default:
          uint64_t v2642 = a1;
          uint64_t v2678 = v15;
          uint64_t v17 = v14[1];
          void *v13 = *v14;
          v13[1] = v17;
          uint64_t v18 = v14[3];
          v13[2] = v14[2];
          v13[3] = v18;
          uint64_t v19 = v14[5];
          v13[4] = v14[4];
          v13[5] = v19;
          uint64_t v20 = v14[7];
          v13[6] = v14[6];
          v13[7] = v20;
          uint64_t v21 = v14[9];
          v13[8] = v14[8];
          v13[9] = v21;
          uint64_t v2656 = v14[11];
          v13[10] = v14[10];
          v13[11] = v2656;
          v22 = (int *)type metadata accessor for EmailDocument(0);
          uint64_t v23 = v22[12];
          v2570 = (char *)v14 + v23;
          v2595 = (char *)v13 + v23;
          uint64_t v24 = type metadata accessor for Date();
          v25 = *(void (**)(void, void, void))(*(void *)(v24 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v2613 = (void (*)(char *, char *, uint64_t))v25;
          uint64_t v2629 = v24;
          v25(v2595, v2570, v24);
          *(void *)((char *)v13 + v22[13]) = *(void *)((char *)v14 + v22[13]);
          *(void *)((char *)v13 + v22[14]) = *(void *)((char *)v14 + v22[14]);
          *(void *)((char *)v13 + v22[15]) = *(void *)((char *)v14 + v22[15]);
          *((unsigned char *)v13 + v22[16]) = *((unsigned char *)v14 + v22[16]);
          *((unsigned char *)v13 + v22[17]) = *((unsigned char *)v14 + v22[17]);
          uint64_t v26 = v22[18];
          v27 = (void *)((char *)v13 + v26);
          v28 = (void *)((char *)v14 + v26);
          uint64_t v29 = v28[1];
          void *v27 = *v28;
          v27[1] = v29;
          v2657 = v22;
          uint64_t v30 = v22[19];
          v31 = (void *)((char *)v13 + v30);
          v32 = (char *)v14 + v30;
          uint64_t v33 = *(void *)((char *)v14 + v30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v33)
          {
            uint64_t v34 = *((void *)v32 + 1);
            uint64_t v35 = *((void *)v32 + 2);
            void *v31 = v33;
            v31[1] = v34;
            uint64_t v36 = *((void *)v32 + 3);
            uint64_t v37 = *((void *)v32 + 4);
            v31[2] = v35;
            v31[3] = v36;
            v31[4] = v37;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v294 = *((_OWORD *)v32 + 1);
            *(_OWORD *)v31 = *(_OWORD *)v32;
            *((_OWORD *)v31 + 1) = v294;
            v31[4] = *((void *)v32 + 4);
          }
          uint64_t v295 = v22[20];
          v296 = (void *)((char *)v13 + v295);
          v297 = (void *)((char *)v14 + v295);
          uint64_t v298 = v297[1];
          void *v296 = *v297;
          v296[1] = v298;
          uint64_t v299 = v22[21];
          v300 = (void *)((char *)v13 + v299);
          uint64_t v301 = (uint64_t)v14 + v299;
          v302 = (int *)type metadata accessor for PartialExtractedAttributes(0);
          v303 = (uint64_t *)v301;
          swift_bridgeObjectRetain();
          int v304 = __swift_getEnumTagSinglePayload(v301, 1, (uint64_t)v302);
          a1 = v2642;
          if (v304)
          {
            uint64_t v305 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v300, v303, *(void *)(*(void *)(v305 - 8) + 64));
          }
          else
          {
            v456 = v303;
            uint64_t v457 = *v303;
            uint64_t v458 = v303[1];
            void *v300 = v457;
            v300[1] = v458;
            uint64_t v459 = v302[5];
            v460 = (void *)((char *)v300 + v459);
            v2578 = v456;
            v461 = (uint64_t *)((char *)v456 + v459);
            uint64_t v462 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            v2509 = v302;
            v2546 = v300;
            if (__swift_getEnumTagSinglePayload((uint64_t)v461, 1, v462))
            {
              uint64_t v463 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v460, v461, *(void *)(*(void *)(v463 - 8) + 64));
            }
            else
            {
              uint64_t v681 = v461[1];
              void *v460 = *v461;
              v460[1] = v681;
              uint64_t v682 = v461[3];
              v460[2] = v461[2];
              v460[3] = v682;
              uint64_t v683 = v461[5];
              v460[4] = v461[4];
              v460[5] = v683;
              uint64_t v684 = v461[7];
              v460[6] = v461[6];
              v460[7] = v684;
              uint64_t v685 = v461[9];
              v460[8] = v461[8];
              v460[9] = v685;
              uint64_t v686 = v461[11];
              v460[10] = v461[10];
              v460[11] = v686;
              uint64_t v687 = v461[13];
              v460[12] = v461[12];
              v460[13] = v687;
              uint64_t v688 = v461[15];
              v460[14] = v461[14];
              v460[15] = v688;
              *((unsigned char *)v460 + 128) = *((unsigned char *)v461 + 128);
              *(_WORD *)((char *)v460 + 129) = *(_WORD *)((char *)v461 + 129);
              uint64_t v689 = v461[18];
              v460[17] = v461[17];
              v460[18] = v689;
              uint64_t v690 = v461[20];
              v460[19] = v461[19];
              v460[20] = v690;
              uint64_t v691 = v461[22];
              v460[21] = v461[21];
              v460[22] = v691;
              uint64_t v2383 = v461[24];
              v460[23] = v461[23];
              v460[24] = v2383;
              uint64_t v692 = v461[26];
              v460[25] = v461[25];
              v460[26] = v692;
              uint64_t v693 = v461[28];
              v460[27] = v461[27];
              v460[28] = v693;
              uint64_t v694 = v461[30];
              v460[29] = v461[29];
              v460[30] = v694;
              v2451 = (void *)v461[32];
              v460[31] = v461[31];
              v460[32] = v2451;
              uint64_t v695 = v461[34];
              v460[33] = v461[33];
              v460[34] = v695;
              uint64_t v696 = v461[36];
              v460[35] = v461[35];
              v460[36] = v696;
              uint64_t v697 = v461[38];
              v460[37] = v461[37];
              v460[38] = v697;
              uint64_t v698 = v461[40];
              v460[39] = v461[39];
              v460[40] = v698;
              uint64_t v699 = v461[42];
              v460[41] = v461[41];
              v460[42] = v699;
              uint64_t v700 = v461[44];
              v460[43] = v461[43];
              v460[44] = v700;
              uint64_t v701 = v461[46];
              v460[45] = v461[45];
              v460[46] = v701;
              uint64_t v702 = v461[47];
              *((unsigned char *)v460 + 384) = *((unsigned char *)v461 + 384);
              v460[47] = v702;
              uint64_t v703 = v461[50];
              v460[49] = v461[49];
              v460[50] = v703;
              uint64_t v704 = v461[52];
              v460[51] = v461[51];
              v460[52] = v704;
              uint64_t v705 = *(int *)(v462 + 140);
              v2473 = (char *)v460 + v705;
              v706 = (char *)v461 + v705;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v706, 1, v2629))
              {
                uint64_t v707 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2473, v706, *(void *)(*(void *)(v707 - 8) + 64));
              }
              else
              {
                v2613(v2473, v706, v2629);
                __swift_storeEnumTagSinglePayload((uint64_t)v2473, 0, 1, v2629);
              }
              uint64_t v761 = *(int *)(v462 + 144);
              v762 = (char *)v460 + v761;
              v763 = (char *)v461 + v761;
              if (__swift_getEnumTagSinglePayload((uint64_t)v461 + v761, 1, v2629))
              {
                uint64_t v764 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v762, v763, *(void *)(*(void *)(v764 - 8) + 64));
              }
              else
              {
                v2613(v762, v763, v2629);
                __swift_storeEnumTagSinglePayload((uint64_t)v762, 0, 1, v2629);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v460, 0, 1, v462);
              v300 = v2546;
            }
            v773 = v2578;
            uint64_t v774 = v302[6];
            v775 = (void *)((char *)v300 + v774);
            v776 = (uint64_t *)((char *)v2578 + v774);
            uint64_t v777 = type metadata accessor for TicketedTransportation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v776, 1, v777))
            {
              uint64_t v778 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v775, v776, *(void *)(*(void *)(v778 - 8) + 64));
            }
            else
            {
              uint64_t v779 = v776[1];
              void *v775 = *v776;
              v775[1] = v779;
              uint64_t v780 = v776[3];
              v775[2] = v776[2];
              v775[3] = v780;
              uint64_t v781 = v776[5];
              v775[4] = v776[4];
              v775[5] = v781;
              uint64_t v782 = v776[7];
              v775[6] = v776[6];
              v775[7] = v782;
              uint64_t v783 = v776[9];
              v775[8] = v776[8];
              v775[9] = v783;
              uint64_t v784 = v776[11];
              v775[10] = v776[10];
              v775[11] = v784;
              uint64_t v785 = v776[13];
              v775[12] = v776[12];
              v775[13] = v785;
              uint64_t v786 = v776[15];
              v775[14] = v776[14];
              v775[15] = v786;
              *((unsigned char *)v775 + 128) = *((unsigned char *)v776 + 128);
              *(_WORD *)((char *)v775 + 129) = *(_WORD *)((char *)v776 + 129);
              uint64_t v787 = v776[18];
              v775[17] = v776[17];
              v775[18] = v787;
              uint64_t v788 = v776[20];
              v775[19] = v776[19];
              v775[20] = v788;
              uint64_t v789 = v776[22];
              v775[21] = v776[21];
              v775[22] = v789;
              uint64_t v790 = v776[24];
              v775[23] = v776[23];
              v775[24] = v790;
              uint64_t v2442 = v776[26];
              v775[25] = v776[25];
              v775[26] = v2442;
              uint64_t v791 = v776[28];
              v775[27] = v776[27];
              v775[28] = v791;
              uint64_t v792 = v776[30];
              v775[29] = v776[29];
              v775[30] = v792;
              uint64_t v793 = v776[32];
              v775[31] = v776[31];
              v775[32] = v793;
              uint64_t v794 = v776[34];
              v775[33] = v776[33];
              v775[34] = v794;
              uint64_t v795 = v776[36];
              uint64_t v796 = v776[35];
              *((unsigned char *)v775 + 296) = *((unsigned char *)v776 + 296);
              v775[35] = v796;
              v775[36] = v795;
              uint64_t v797 = *(int *)(v777 + 112);
              v2452 = (char *)v775 + v797;
              v798 = (char *)v776 + v797;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v798, 1, v2629))
              {
                uint64_t v799 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2452, v798, *(void *)(*(void *)(v799 - 8) + 64));
              }
              else
              {
                v2613(v2452, v798, v2629);
                __swift_storeEnumTagSinglePayload((uint64_t)v2452, 0, 1, v2629);
              }
              uint64_t v852 = *(int *)(v777 + 116);
              v853 = (char *)v775 + v852;
              v854 = (char *)v776 + v852;
              if (__swift_getEnumTagSinglePayload((uint64_t)v776 + v852, 1, v2629))
              {
                uint64_t v855 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v853, v854, *(void *)(*(void *)(v855 - 8) + 64));
              }
              else
              {
                v2613(v853, v854, v2629);
                __swift_storeEnumTagSinglePayload((uint64_t)v853, 0, 1, v2629);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v775, 0, 1, v777);
              v300 = v2546;
              v773 = v2578;
            }
            uint64_t v864 = v302[7];
            v865 = (void *)((char *)v300 + v864);
            v866 = (uint64_t *)((char *)v773 + v864);
            v867 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v866, 1, (uint64_t)v867))
            {
              uint64_t v868 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v865, v866, *(void *)(*(void *)(v868 - 8) + 64));
            }
            else
            {
              uint64_t v869 = v866[1];
              void *v865 = *v866;
              v865[1] = v869;
              uint64_t v870 = v866[3];
              v865[2] = v866[2];
              v865[3] = v870;
              uint64_t v871 = v866[5];
              v865[4] = v866[4];
              v865[5] = v871;
              uint64_t v872 = v866[7];
              v865[6] = v866[6];
              v865[7] = v872;
              uint64_t v873 = v866[9];
              v865[8] = v866[8];
              v865[9] = v873;
              uint64_t v874 = v866[11];
              v865[10] = v866[10];
              v865[11] = v874;
              uint64_t v875 = v866[13];
              v865[12] = v866[12];
              v865[13] = v875;
              uint64_t v876 = v866[15];
              v865[14] = v866[14];
              v865[15] = v876;
              *((unsigned char *)v865 + 128) = *((unsigned char *)v866 + 128);
              *(_WORD *)((char *)v865 + 129) = *(_WORD *)((char *)v866 + 129);
              uint64_t v877 = v866[18];
              v865[17] = v866[17];
              v865[18] = v877;
              uint64_t v878 = v866[20];
              v865[19] = v866[19];
              v865[20] = v878;
              uint64_t v879 = v866[22];
              v865[21] = v866[21];
              v865[22] = v879;
              uint64_t v880 = v866[24];
              v865[23] = v866[23];
              v865[24] = v880;
              uint64_t v881 = v866[26];
              v865[25] = v866[25];
              v865[26] = v881;
              uint64_t v882 = v866[28];
              v865[27] = v866[27];
              v865[28] = v882;
              v2454 = (void *)v866[30];
              v865[29] = v866[29];
              v865[30] = v2454;
              uint64_t v883 = v866[32];
              v865[31] = v866[31];
              v865[32] = v883;
              uint64_t v884 = v866[34];
              v865[33] = v866[33];
              v865[34] = v884;
              uint64_t v885 = v866[36];
              uint64_t v886 = v866[35];
              *((unsigned char *)v865 + 296) = *((unsigned char *)v866 + 296);
              v865[35] = v886;
              v865[36] = v885;
              uint64_t v887 = v866[39];
              v865[38] = v866[38];
              v865[39] = v887;
              uint64_t v888 = v867[29];
              v2478 = (char *)v865 + v888;
              v889 = (char *)v866 + v888;
              uint64_t v890 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v889, 1, v890))
              {
                uint64_t v891 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2478, v889, *(void *)(*(void *)(v891 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v890 - 8) + 16))(v2478, v889, v890);
                __swift_storeEnumTagSinglePayload((uint64_t)v2478, 0, 1, v890);
              }
              uint64_t v945 = v867[30];
              v946 = (void *)((char *)v865 + v945);
              v947 = (void *)((char *)v866 + v945);
              uint64_t v948 = v947[1];
              void *v946 = *v947;
              v946[1] = v948;
              uint64_t v949 = v867[31];
              v950 = (char *)v865 + v949;
              v951 = (char *)v866 + v949;
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v951, 1, v2629))
              {
                uint64_t v952 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v950, v951, *(void *)(*(void *)(v952 - 8) + 64));
              }
              else
              {
                v2613(v950, v951, v2629);
                __swift_storeEnumTagSinglePayload((uint64_t)v950, 0, 1, v2629);
              }
              uint64_t v969 = v867[32];
              v970 = (char *)v865 + v969;
              v971 = (char *)v866 + v969;
              if (__swift_getEnumTagSinglePayload((uint64_t)v866 + v969, 1, v2629))
              {
                uint64_t v972 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v970, v971, *(void *)(*(void *)(v972 - 8) + 64));
              }
              else
              {
                v2613(v970, v971, v2629);
                __swift_storeEnumTagSinglePayload((uint64_t)v970, 0, 1, v2629);
              }
              v302 = v2509;
              __swift_storeEnumTagSinglePayload((uint64_t)v865, 0, 1, (uint64_t)v867);
              v300 = v2546;
              v773 = v2578;
            }
            uint64_t v981 = v302[8];
            v982 = (void *)((char *)v300 + v981);
            v983 = (uint64_t *)((char *)v773 + v981);
            uint64_t v984 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v983, 1, v984))
            {
              uint64_t v985 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v982, v983, *(void *)(*(void *)(v985 - 8) + 64));
            }
            else
            {
              uint64_t v986 = v983[1];
              void *v982 = *v983;
              v982[1] = v986;
              uint64_t v987 = v983[3];
              v982[2] = v983[2];
              v982[3] = v987;
              uint64_t v988 = v983[5];
              v982[4] = v983[4];
              v982[5] = v988;
              uint64_t v989 = v983[7];
              v982[6] = v983[6];
              v982[7] = v989;
              uint64_t v990 = v983[9];
              v982[8] = v983[8];
              v982[9] = v990;
              uint64_t v991 = v983[11];
              v982[10] = v983[10];
              v982[11] = v991;
              uint64_t v992 = v983[13];
              v982[12] = v983[12];
              v982[13] = v992;
              uint64_t v993 = v983[15];
              v982[14] = v983[14];
              v982[15] = v993;
              *((unsigned char *)v982 + 128) = *((unsigned char *)v983 + 128);
              *(_WORD *)((char *)v982 + 129) = *(_WORD *)((char *)v983 + 129);
              uint64_t v994 = v983[18];
              v982[17] = v983[17];
              v982[18] = v994;
              uint64_t v995 = v983[20];
              v982[19] = v983[19];
              v982[20] = v995;
              uint64_t v996 = v983[22];
              v982[21] = v983[21];
              v982[22] = v996;
              uint64_t v997 = v983[24];
              v982[23] = v983[23];
              v982[24] = v997;
              uint64_t v998 = v983[26];
              v982[25] = v983[25];
              v982[26] = v998;
              uint64_t v999 = v983[28];
              v982[27] = v983[27];
              v982[28] = v999;
              uint64_t v1000 = v983[30];
              v982[29] = v983[29];
              v982[30] = v1000;
              uint64_t v1001 = v983[32];
              v982[31] = v983[31];
              v982[32] = v1001;
              uint64_t v1002 = v983[34];
              uint64_t v1003 = v983[33];
              *((unsigned char *)v982 + 280) = *((unsigned char *)v983 + 280);
              v982[33] = v1003;
              v982[34] = v1002;
              uint64_t v1004 = v983[37];
              v982[36] = v983[36];
              v982[37] = v1004;
              uint64_t v1005 = *(int *)(v984 + 108);
              v2456 = (char *)v982 + v1005;
              v1006 = (char *)v983 + v1005;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1006, 1, v2629))
              {
                uint64_t v1007 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2456, v1006, *(void *)(*(void *)(v1007 - 8) + 64));
              }
              else
              {
                v2613(v2456, v1006, v2629);
                __swift_storeEnumTagSinglePayload((uint64_t)v2456, 0, 1, v2629);
              }
              uint64_t v1063 = *(int *)(v984 + 112);
              v1064 = (char *)v982 + v1063;
              v1065 = (char *)v983 + v1063;
              if (__swift_getEnumTagSinglePayload((uint64_t)v983 + v1063, 1, v2629))
              {
                uint64_t v1066 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1064, v1065, *(void *)(*(void *)(v1066 - 8) + 64));
              }
              else
              {
                v2613(v1064, v1065, v2629);
                __swift_storeEnumTagSinglePayload((uint64_t)v1064, 0, 1, v2629);
              }
              v302 = v2509;
              __swift_storeEnumTagSinglePayload((uint64_t)v982, 0, 1, v984);
              v300 = v2546;
              v773 = v2578;
            }
            uint64_t v1075 = v302[9];
            v1076 = (void *)((char *)v300 + v1075);
            v1077 = (uint64_t *)((char *)v773 + v1075);
            v1078 = (int *)type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1077, 1, (uint64_t)v1078))
            {
              uint64_t v1079 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v1076, v1077, *(void *)(*(void *)(v1079 - 8) + 64));
            }
            else
            {
              uint64_t v1080 = v1077[1];
              void *v1076 = *v1077;
              v1076[1] = v1080;
              uint64_t v1081 = v1077[3];
              v1076[2] = v1077[2];
              v1076[3] = v1081;
              uint64_t v1082 = v1077[5];
              v1076[4] = v1077[4];
              v1076[5] = v1082;
              uint64_t v1083 = v1077[7];
              v1076[6] = v1077[6];
              v1076[7] = v1083;
              uint64_t v1084 = v1077[9];
              v1076[8] = v1077[8];
              v1076[9] = v1084;
              uint64_t v1085 = v1077[11];
              v1076[10] = v1077[10];
              v1076[11] = v1085;
              uint64_t v1086 = v1077[13];
              v1076[12] = v1077[12];
              v1076[13] = v1086;
              uint64_t v1087 = v1077[15];
              v1076[14] = v1077[14];
              v1076[15] = v1087;
              *((unsigned char *)v1076 + 128) = *((unsigned char *)v1077 + 128);
              *(_WORD *)((char *)v1076 + 129) = *(_WORD *)((char *)v1077 + 129);
              uint64_t v1088 = v1077[18];
              v1076[17] = v1077[17];
              v1076[18] = v1088;
              uint64_t v1089 = v1077[20];
              v1076[19] = v1077[19];
              v1076[20] = v1089;
              uint64_t v1090 = v1077[22];
              v1076[21] = v1077[21];
              v1076[22] = v1090;
              uint64_t v1091 = v1077[24];
              v1076[23] = v1077[23];
              v1076[24] = v1091;
              uint64_t v1092 = v1077[26];
              v1076[25] = v1077[25];
              v1076[26] = v1092;
              uint64_t v1093 = v1077[28];
              v1076[27] = v1077[27];
              v1076[28] = v1093;
              uint64_t v1094 = v1077[30];
              v1076[29] = v1077[29];
              v1076[30] = v1094;
              v1076[31] = v1077[31];
              uint64_t v1095 = v1078[24];
              v2457 = (char *)v1076 + v1095;
              v2388 = (char *)v1077 + v1095;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2388, 1, v2629))
              {
                uint64_t v1096 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2457, v2388, *(void *)(*(void *)(v1096 - 8) + 64));
              }
              else
              {
                v2613(v2457, v2388, v2629);
                __swift_storeEnumTagSinglePayload((uint64_t)v2457, 0, 1, v2629);
              }
              uint64_t v1142 = v1078[25];
              v1143 = (char *)v1076 + v1142;
              v1144 = (char *)v1077 + v1142;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1077 + v1142, 1, v2629))
              {
                uint64_t v1145 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1143, v1144, *(void *)(*(void *)(v1145 - 8) + 64));
              }
              else
              {
                v2613(v1143, v1144, v2629);
                __swift_storeEnumTagSinglePayload((uint64_t)v1143, 0, 1, v2629);
              }
              uint64_t v1154 = v1078[26];
              v1155 = (char *)v1076 + v1154;
              v1156 = (char *)v1077 + v1154;
              uint64_t v1157 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1156, 1, v1157))
              {
                uint64_t v1158 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1155, v1156, *(void *)(*(void *)(v1158 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1157 - 8) + 16))(v1155, v1156, v1157);
                __swift_storeEnumTagSinglePayload((uint64_t)v1155, 0, 1, v1157);
              }
              v302 = v2509;
              __swift_storeEnumTagSinglePayload((uint64_t)v1076, 0, 1, (uint64_t)v1078);
              v300 = v2546;
              v773 = v2578;
            }
            uint64_t v1168 = v302[10];
            v1169 = (void *)((char *)v300 + v1168);
            v1170 = (uint64_t *)((char *)v773 + v1168);
            v1171 = (int *)type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1170, 1, (uint64_t)v1171))
            {
              uint64_t v1172 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1169, v1170, *(void *)(*(void *)(v1172 - 8) + 64));
            }
            else
            {
              uint64_t v1173 = v1170[1];
              void *v1169 = *v1170;
              v1169[1] = v1173;
              uint64_t v1174 = v1170[3];
              v1169[2] = v1170[2];
              v1169[3] = v1174;
              uint64_t v1175 = v1170[5];
              v1169[4] = v1170[4];
              v1169[5] = v1175;
              uint64_t v1176 = v1170[7];
              v1169[6] = v1170[6];
              v1169[7] = v1176;
              uint64_t v1177 = v1170[9];
              v1169[8] = v1170[8];
              v1169[9] = v1177;
              uint64_t v1178 = v1170[11];
              v1169[10] = v1170[10];
              v1169[11] = v1178;
              uint64_t v1179 = v1170[13];
              v1169[12] = v1170[12];
              v1169[13] = v1179;
              uint64_t v1180 = v1170[15];
              v1169[14] = v1170[14];
              v1169[15] = v1180;
              *((unsigned char *)v1169 + 128) = *((unsigned char *)v1170 + 128);
              *(_WORD *)((char *)v1169 + 129) = *(_WORD *)((char *)v1170 + 129);
              uint64_t v1181 = v1170[18];
              v1169[17] = v1170[17];
              v1169[18] = v1181;
              uint64_t v1182 = v1170[20];
              v1169[19] = v1170[19];
              v1169[20] = v1182;
              uint64_t v1183 = v1170[22];
              v1169[21] = v1170[21];
              v1169[22] = v1183;
              uint64_t v1184 = v1170[24];
              v1169[23] = v1170[23];
              v1169[24] = v1184;
              uint64_t v1185 = v1170[26];
              v1169[25] = v1170[25];
              v1169[26] = v1185;
              v1169[27] = v1170[27];
              uint64_t v1186 = v1171[22];
              v2458 = (char *)v1169 + v1186;
              v2391 = (char *)v1170 + v1186;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2391, 1, v2629))
              {
                uint64_t v1187 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2458, v2391, *(void *)(*(void *)(v1187 - 8) + 64));
              }
              else
              {
                v2613(v2458, v2391, v2629);
                __swift_storeEnumTagSinglePayload((uint64_t)v2458, 0, 1, v2629);
              }
              uint64_t v1229 = v1171[23];
              v1230 = (char *)v1169 + v1229;
              v1231 = (char *)v1170 + v1229;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1170 + v1229, 1, v2629))
              {
                uint64_t v1232 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1230, v1231, *(void *)(*(void *)(v1232 - 8) + 64));
              }
              else
              {
                v2613(v1230, v1231, v2629);
                __swift_storeEnumTagSinglePayload((uint64_t)v1230, 0, 1, v2629);
              }
              uint64_t v1241 = v1171[24];
              v1242 = (char *)v1169 + v1241;
              v1243 = (char *)v1170 + v1241;
              *(void *)v1242 = *(void *)v1243;
              v1242[8] = v1243[8];
              uint64_t v1244 = v1171[25];
              v1245 = (char *)v1169 + v1244;
              v1246 = (char *)v1170 + v1244;
              uint64_t v1247 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1246, 1, v1247))
              {
                uint64_t v1248 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1245, v1246, *(void *)(*(void *)(v1248 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1247 - 8) + 16))(v1245, v1246, v1247);
                __swift_storeEnumTagSinglePayload((uint64_t)v1245, 0, 1, v1247);
              }
              v302 = v2509;
              __swift_storeEnumTagSinglePayload((uint64_t)v1169, 0, 1, (uint64_t)v1171);
              v300 = v2546;
              v773 = v2578;
            }
            uint64_t v1264 = v302[11];
            v1265 = (void *)((char *)v300 + v1264);
            v1266 = (uint64_t *)((char *)v773 + v1264);
            v1267 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1266, 1, (uint64_t)v1267))
            {
              uint64_t v1268 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1265, v1266, *(void *)(*(void *)(v1268 - 8) + 64));
            }
            else
            {
              uint64_t v1269 = v1266[1];
              void *v1265 = *v1266;
              v1265[1] = v1269;
              uint64_t v1270 = v1266[3];
              v1265[2] = v1266[2];
              v1265[3] = v1270;
              uint64_t v1271 = v1266[5];
              v1265[4] = v1266[4];
              v1265[5] = v1271;
              uint64_t v1272 = v1266[7];
              v1265[6] = v1266[6];
              v1265[7] = v1272;
              uint64_t v1273 = v1266[9];
              v1265[8] = v1266[8];
              v1265[9] = v1273;
              uint64_t v1274 = v1266[11];
              v1265[10] = v1266[10];
              v1265[11] = v1274;
              *((unsigned char *)v1265 + 96) = *((unsigned char *)v1266 + 96);
              uint64_t v1275 = v1266[14];
              v1265[13] = v1266[13];
              v1265[14] = v1275;
              uint64_t v1276 = v1267[13];
              v2484 = (char *)v1265 + v1276;
              v1277 = (char *)v1266 + v1276;
              v2410 = (void *)type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1277, 1, (uint64_t)v2410))
              {
                uint64_t v1278 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2484, v1277, *(void *)(*(void *)(v1278 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2410 - 1) + 16))(v2484, v1277, v2410);
                __swift_storeEnumTagSinglePayload((uint64_t)v2484, 0, 1, (uint64_t)v2410);
              }
              uint64_t v1306 = v1267[14];
              v1307 = (char *)v1265 + v1306;
              v1308 = (char *)v1266 + v1306;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1266 + v1306, 1, (uint64_t)v2410))
              {
                uint64_t v1309 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1307, v1308, *(void *)(*(void *)(v1309 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2410 - 1) + 16))(v1307, v1308, v2410);
                __swift_storeEnumTagSinglePayload((uint64_t)v1307, 0, 1, (uint64_t)v2410);
              }
              uint64_t v1318 = v1267[15];
              v1319 = (void *)((char *)v1265 + v1318);
              v1320 = (void *)((char *)v1266 + v1318);
              uint64_t v2487 = v1320[1];
              void *v1319 = *v1320;
              v1319[1] = v2487;
              uint64_t v1321 = v1267[16];
              v1322 = (void *)((char *)v1265 + v1321);
              v1323 = (void *)((char *)v1266 + v1321);
              v2459 = (void *)v1323[1];
              void *v1322 = *v1323;
              v1322[1] = v2459;
              uint64_t v1324 = v1267[17];
              v1325 = (void *)((char *)v1265 + v1324);
              v1326 = (void *)((char *)v1266 + v1324);
              uint64_t v1327 = v1326[1];
              void *v1325 = *v1326;
              v1325[1] = v1327;
              uint64_t v1328 = v1267[18];
              v2435 = (char *)v1266 + v1328;
              v2443 = (char *)v1265 + v1328;
              uint64_t v1329 = type metadata accessor for DateComponents();
              v1330 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1329 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1330(v2443, v2435, v1329);
              v1330((char *)v1265 + v1267[19], (char *)v1266 + v1267[19], v1329);
              uint64_t v1331 = v1267[20];
              v1332 = (void *)((char *)v1265 + v1331);
              v1333 = (void *)((char *)v1266 + v1331);
              uint64_t v1334 = v1333[1];
              void *v1332 = *v1333;
              v1332[1] = v1334;
              uint64_t v1335 = v1267[21];
              v1336 = (void *)((char *)v1265 + v1335);
              v1337 = (void *)((char *)v1266 + v1335);
              uint64_t v2488 = v1337[1];
              void *v1336 = *v1337;
              v1336[1] = v2488;
              uint64_t v1338 = v1267[22];
              v1339 = (void *)((char *)v1265 + v1338);
              v1340 = (void *)((char *)v1266 + v1338);
              v2460 = (void *)v1340[1];
              void *v1339 = *v1340;
              v1339[1] = v2460;
              uint64_t v1341 = v1267[23];
              v1342 = (void *)((char *)v1265 + v1341);
              v1343 = (void *)((char *)v1266 + v1341);
              uint64_t v2444 = v1343[1];
              void *v1342 = *v1343;
              v1342[1] = v2444;
              uint64_t v1344 = v1267[24];
              v1345 = (void *)((char *)v1265 + v1344);
              v1346 = (void *)((char *)v1266 + v1344);
              uint64_t v2427 = v1346[1];
              void *v1345 = *v1346;
              v1345[1] = v2427;
              uint64_t v1347 = v1267[25];
              v1348 = (void *)((char *)v1265 + v1347);
              v1349 = (void *)((char *)v1266 + v1347);
              v2419 = (void *)v1349[1];
              void *v1348 = *v1349;
              v1348[1] = v2419;
              uint64_t v1350 = v1267[26];
              v1351 = (void *)((char *)v1265 + v1350);
              v1352 = (void *)((char *)v1266 + v1350);
              v2411 = (void *)v1352[1];
              void *v1351 = *v1352;
              v1351[1] = v2411;
              uint64_t v1353 = v1267[27];
              v1354 = (void *)((char *)v1265 + v1353);
              v1355 = (void *)((char *)v1266 + v1353);
              v2405 = (void *)v1355[1];
              void *v1354 = *v1355;
              v1354[1] = v2405;
              uint64_t v1356 = v1267[28];
              v1357 = (void *)((char *)v1265 + v1356);
              v1358 = (void *)((char *)v1266 + v1356);
              v2401 = (void *)v1358[1];
              void *v1357 = *v1358;
              v1357[1] = v2401;
              uint64_t v1359 = v1267[29];
              v1360 = (void *)((char *)v1265 + v1359);
              v1361 = (void *)((char *)v1266 + v1359);
              v2397 = (void *)v1361[1];
              void *v1360 = *v1361;
              v1360[1] = v2397;
              uint64_t v1362 = v1267[30];
              v1363 = (void *)((char *)v1265 + v1362);
              v1364 = (void *)((char *)v1266 + v1362);
              uint64_t v2394 = v1364[1];
              void *v1363 = *v1364;
              v1363[1] = v2394;
              uint64_t v1365 = v1267[31];
              v1366 = (void *)((char *)v1265 + v1365);
              v1367 = (void *)((char *)v1266 + v1365);
              uint64_t v2392 = v1367[1];
              void *v1366 = *v1367;
              v1366[1] = v2392;
              uint64_t v1368 = v1267[32];
              v1369 = (void *)((char *)v1265 + v1368);
              v1370 = (void *)((char *)v1266 + v1368);
              uint64_t v1371 = v1370[1];
              void *v1369 = *v1370;
              v1369[1] = v1371;
              *(void *)((char *)v1265 + v1267[33]) = *(void *)((char *)v1266 + v1267[33]);
              *(void *)((char *)v1265 + v1267[34]) = *(void *)((char *)v1266 + v1267[34]);
              uint64_t v1372 = v1267[35];
              v1373 = (void *)((char *)v1265 + v1372);
              v1374 = (void *)((char *)v1266 + v1372);
              uint64_t v1375 = v1374[1];
              void *v1373 = *v1374;
              v1373[1] = v1375;
              uint64_t v1376 = v1267[36];
              v1377 = (void *)((char *)v1265 + v1376);
              v1378 = (void *)((char *)v1266 + v1376);
              uint64_t v1379 = v1378[1];
              void *v1377 = *v1378;
              v1377[1] = v1379;
              uint64_t v1380 = v1267[37];
              v1381 = (void *)((char *)v1265 + v1380);
              v1382 = (void *)((char *)v1266 + v1380);
              uint64_t v1383 = v1382[1];
              void *v1381 = *v1382;
              v1381[1] = v1383;
              uint64_t v1384 = v1267[38];
              v2436 = (char *)v1265 + v1384;
              v2387 = (char *)v1266 + v1384;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2387, 1, v2629))
              {
                uint64_t v1385 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2436, v2387, *(void *)(*(void *)(v1385 - 8) + 64));
              }
              else
              {
                v2613(v2436, v2387, v2629);
                __swift_storeEnumTagSinglePayload((uint64_t)v2436, 0, 1, v2629);
              }
              uint64_t v1524 = v1267[39];
              v1525 = (void *)((char *)v1265 + v1524);
              v1526 = (void *)((char *)v1266 + v1524);
              uint64_t v1527 = v1526[1];
              void *v1525 = *v1526;
              v1525[1] = v1527;
              uint64_t v1528 = v1267[40];
              v1529 = (void *)((char *)v1265 + v1528);
              v1530 = (void *)((char *)v1266 + v1528);
              uint64_t v2493 = v1530[1];
              void *v1529 = *v1530;
              v1529[1] = v2493;
              uint64_t v1531 = v1267[41];
              v1532 = (char *)v1265 + v1531;
              v1533 = (char *)v1266 + v1531;
              v1532[8] = v1533[8];
              *(void *)v1532 = *(void *)v1533;
              uint64_t v1534 = v1267[42];
              v1535 = (void *)((char *)v1265 + v1534);
              v1536 = (void *)((char *)v1266 + v1534);
              uint64_t v1537 = v1536[1];
              void *v1535 = *v1536;
              v1535[1] = v1537;
              uint64_t v1538 = v1267[43];
              v1539 = (char *)v1265 + v1538;
              v1540 = (char *)v1266 + v1538;
              *(_OWORD *)v1539 = *(_OWORD *)v1540;
              *(void *)(v1539 + 13) = *(void *)(v1540 + 13);
              uint64_t v1541 = v1267[44];
              v1542 = (void *)((char *)v1265 + v1541);
              v1543 = (void *)((char *)v1266 + v1541);
              uint64_t v1544 = v1543[1];
              void *v1542 = *v1543;
              v1542[1] = v1544;
              uint64_t v1545 = v1267[45];
              v1546 = (void *)((char *)v1265 + v1545);
              v1547 = (void *)((char *)v1266 + v1545);
              uint64_t v1548 = v1547[1];
              void *v1546 = *v1547;
              v1546[1] = v1548;
              uint64_t v1549 = v1267[46];
              v1550 = (void *)((char *)v1265 + v1549);
              v1551 = (void *)((char *)v1266 + v1549);
              uint64_t v1552 = v1551[1];
              void *v1550 = *v1551;
              v1550[1] = v1552;
              uint64_t v1553 = v1267[47];
              v1554 = (void *)((char *)v1265 + v1553);
              v1555 = (void *)((char *)v1266 + v1553);
              uint64_t v1556 = v1555[1];
              void *v1554 = *v1555;
              v1554[1] = v1556;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1265, 0, 1, (uint64_t)v1267);
              v302 = v2509;
              v300 = v2546;
              v773 = v2578;
            }
            uint64_t v1557 = v302[12];
            v1558 = (void *)((char *)v300 + v1557);
            v1559 = (uint64_t *)((char *)v773 + v1557);
            v1560 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1559, 1, (uint64_t)v1560))
            {
              uint64_t v1561 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1558, v1559, *(void *)(*(void *)(v1561 - 8) + 64));
            }
            else
            {
              uint64_t v1562 = v1559[1];
              void *v1558 = *v1559;
              v1558[1] = v1562;
              uint64_t v1563 = v1559[3];
              v1558[2] = v1559[2];
              v1558[3] = v1563;
              uint64_t v1564 = v1559[5];
              v1558[4] = v1559[4];
              v1558[5] = v1564;
              uint64_t v1565 = v1559[7];
              v1558[6] = v1559[6];
              v1558[7] = v1565;
              uint64_t v1566 = v1559[9];
              v1558[8] = v1559[8];
              v1558[9] = v1566;
              uint64_t v1567 = v1559[11];
              v1558[10] = v1559[10];
              v1558[11] = v1567;
              *((unsigned char *)v1558 + 96) = *((unsigned char *)v1559 + 96);
              uint64_t v1568 = v1559[14];
              v1558[13] = v1559[13];
              v1558[14] = v1568;
              uint64_t v1569 = v1559[16];
              v1558[15] = v1559[15];
              v1558[16] = v1569;
              uint64_t v1570 = v1560[14];
              v2494 = (char *)v1558 + v1570;
              v2414 = (char *)v1559 + v1570;
              v2408 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2414, 1, (uint64_t)v2408))
              {
                uint64_t v1571 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2494, v2414, *(void *)(*(void *)(v1571 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2408 - 1) + 16))(v2494, v2414, v2408);
                __swift_storeEnumTagSinglePayload((uint64_t)v2494, 0, 1, (uint64_t)v2408);
              }
              uint64_t v1668 = v1560[15];
              v1669 = (char *)v1558 + v1668;
              v1670 = (char *)v1559 + v1668;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1559 + v1668, 1, (uint64_t)v2408))
              {
                uint64_t v1671 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1669, v1670, *(void *)(*(void *)(v1671 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2408 - 1) + 16))(v1669, v1670, v2408);
                __swift_storeEnumTagSinglePayload((uint64_t)v1669, 0, 1, (uint64_t)v2408);
              }
              uint64_t v1680 = v1560[16];
              v1681 = (void *)((char *)v1558 + v1680);
              v1682 = (void *)((char *)v1559 + v1680);
              uint64_t v1683 = v1682[1];
              void *v1681 = *v1682;
              v1681[1] = v1683;
              uint64_t v1684 = v1560[17];
              v1685 = (void *)((char *)v1558 + v1684);
              v1686 = (void *)((char *)v1559 + v1684);
              uint64_t v2497 = v1686[1];
              void *v1685 = *v1686;
              v1685[1] = v2497;
              uint64_t v1687 = v1560[18];
              v1688 = (void *)((char *)v1558 + v1687);
              v1689 = (void *)((char *)v1559 + v1687);
              v2464 = (void *)v1689[1];
              void *v1688 = *v1689;
              v1688[1] = v2464;
              uint64_t v1690 = v1560[19];
              v1691 = (void *)((char *)v1558 + v1690);
              v1692 = (void *)((char *)v1559 + v1690);
              uint64_t v2448 = v1692[1];
              void *v1691 = *v1692;
              v1691[1] = v2448;
              uint64_t v1693 = v1560[20];
              v1694 = (void *)((char *)v1558 + v1693);
              v1695 = (void *)((char *)v1559 + v1693);
              v2423 = (void *)v1695[1];
              void *v1694 = *v1695;
              v1694[1] = v2423;
              *(void *)((char *)v1558 + v1560[21]) = *(void *)((char *)v1559 + v1560[21]);
              *(void *)((char *)v1558 + v1560[22]) = *(void *)((char *)v1559 + v1560[22]);
              uint64_t v1696 = v1560[23];
              v1697 = (char *)v1558 + v1696;
              v1698 = (char *)v1559 + v1696;
              *(void *)v1697 = *(void *)v1698;
              v1697[8] = v1698[8];
              uint64_t v1699 = v1560[24];
              v1700 = (char *)v1558 + v1699;
              v1701 = (char *)v1559 + v1699;
              *(void *)v1700 = *(void *)v1701;
              v1700[8] = v1701[8];
              uint64_t v1702 = v1560[25];
              v1703 = (void *)((char *)v1558 + v1702);
              v1704 = (void *)((char *)v1559 + v1702);
              uint64_t v1705 = v1704[1];
              void *v1703 = *v1704;
              v1703[1] = v1705;
              uint64_t v1706 = v1560[26];
              v1707 = (void *)((char *)v1558 + v1706);
              v1708 = (void *)((char *)v1559 + v1706);
              uint64_t v1709 = v1708[1];
              void *v1707 = *v1708;
              v1707[1] = v1709;
              uint64_t v1710 = v1560[27];
              v1711 = (void *)((char *)v1558 + v1710);
              v1712 = (void *)((char *)v1559 + v1710);
              uint64_t v1713 = v1712[1];
              void *v1711 = *v1712;
              v1711[1] = v1713;
              uint64_t v1714 = v1560[28];
              v1715 = (void *)((char *)v1558 + v1714);
              v1716 = (void *)((char *)v1559 + v1714);
              uint64_t v1717 = v1716[1];
              void *v1715 = *v1716;
              v1715[1] = v1717;
              uint64_t v1718 = v1560[29];
              v1719 = (char *)v1558 + v1718;
              v1720 = (char *)v1559 + v1718;
              *(void *)v1719 = *(void *)v1720;
              v1719[8] = v1720[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1558, 0, 1, (uint64_t)v1560);
              v302 = v2509;
              v300 = v2546;
              v773 = v2578;
            }
            uint64_t v1721 = v302[13];
            v1722 = (void *)((char *)v300 + v1721);
            v1723 = (uint64_t *)((char *)v773 + v1721);
            v1724 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1723, 1, (uint64_t)v1724))
            {
              uint64_t v1725 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1722, v1723, *(void *)(*(void *)(v1725 - 8) + 64));
            }
            else
            {
              uint64_t v1726 = v1723[1];
              void *v1722 = *v1723;
              v1722[1] = v1726;
              uint64_t v2498 = v1723[3];
              v1722[2] = v1723[2];
              v1722[3] = v2498;
              uint64_t v1727 = v1723[5];
              v1722[4] = v1723[4];
              v1722[5] = v1727;
              uint64_t v1728 = v1723[7];
              v1722[6] = v1723[6];
              v1722[7] = v1728;
              uint64_t v1729 = v1723[9];
              v1722[8] = v1723[8];
              v1722[9] = v1729;
              uint64_t v1730 = v1723[11];
              v1722[10] = v1723[10];
              v1722[11] = v1730;
              *((unsigned char *)v1722 + 96) = *((unsigned char *)v1723 + 96);
              uint64_t v1731 = v1723[14];
              v1722[13] = v1723[13];
              v1722[14] = v1731;
              uint64_t v1732 = v1723[16];
              v1722[15] = v1723[15];
              v1722[16] = v1732;
              uint64_t v1733 = v1724[14];
              v2583 = (char *)v1722 + v1733;
              v2424 = (char *)v1723 + v1733;
              v2416 = (void *)type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2424, 1, (uint64_t)v2416))
              {
                uint64_t v1734 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2583, v2424, *(void *)(*(void *)(v1734 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, void *))(*(v2416 - 1) + 16))(v2583, v2424, v2416);
                __swift_storeEnumTagSinglePayload((uint64_t)v2583, 0, 1, (uint64_t)v2416);
              }
              uint64_t v1844 = v1724[15];
              v1845 = (void *)((char *)v1722 + v1844);
              v1846 = (void *)((char *)v1723 + v1844);
              uint64_t v1847 = v1846[1];
              void *v1845 = *v1846;
              v1845[1] = v1847;
              uint64_t v1848 = v1724[16];
              v1849 = (void *)((char *)v1722 + v1848);
              v1850 = (void *)((char *)v1723 + v1848);
              uint64_t v2585 = v1850[1];
              void *v1849 = *v1850;
              v1849[1] = v2585;
              uint64_t v1851 = v1724[17];
              v1852 = (void *)((char *)v1722 + v1851);
              v1853 = (void *)((char *)v1723 + v1851);
              uint64_t v2502 = v1853[1];
              void *v1852 = *v1853;
              v1852[1] = v2502;
              uint64_t v1854 = v1724[18];
              v1855 = (void *)((char *)v1722 + v1854);
              v1856 = (void *)((char *)v1723 + v1854);
              v2466 = (void *)v1856[1];
              void *v1855 = *v1856;
              v1855[1] = v2466;
              uint64_t v1857 = v1724[19];
              v1858 = (void *)((char *)v1722 + v1857);
              v1859 = (void *)((char *)v1723 + v1857);
              uint64_t v1860 = v1859[1];
              void *v1858 = *v1859;
              v1858[1] = v1860;
              *(void *)((char *)v1722 + v1724[20]) = *(void *)((char *)v1723 + v1724[20]);
              uint64_t v1861 = v1724[21];
              v1862 = (void *)((char *)v1722 + v1861);
              v1863 = (void *)((char *)v1723 + v1861);
              uint64_t v1864 = v1863[1];
              void *v1862 = *v1863;
              v1862[1] = v1864;
              uint64_t v1865 = v1724[22];
              v1866 = (void *)((char *)v1722 + v1865);
              v1867 = (void *)((char *)v1723 + v1865);
              uint64_t v1868 = v1867[1];
              void *v1866 = *v1867;
              v1866[1] = v1868;
              uint64_t v1869 = v1724[23];
              v1870 = (void *)((char *)v1722 + v1869);
              v1871 = (void *)((char *)v1723 + v1869);
              uint64_t v1872 = v1871[1];
              void *v1870 = *v1871;
              v1870[1] = v1872;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1722, 0, 1, (uint64_t)v1724);
              v302 = v2509;
              v300 = v2546;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v300, 0, 1, (uint64_t)v302);
          }
          uint64_t v1873 = v2657[22];
          v1874 = (void *)((char *)v13 + v1873);
          v1875 = (void *)((char *)v14 + v1873);
          uint64_t v1876 = type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1875, 1, v1876))
          {
            uint64_t v1877 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v1874, v1875, *(void *)(*(void *)(v1877 - 8) + 64));
          }
          else
          {
            uint64_t v1878 = v1875[1];
            void *v1874 = *v1875;
            v1874[1] = v1878;
            uint64_t v1879 = v1875[3];
            v1874[2] = v1875[2];
            v1874[3] = v1879;
            uint64_t v1880 = v1875[5];
            v1881 = (int *)v1876;
            v1874[4] = v1875[4];
            v1874[5] = v1880;
            uint64_t v1882 = v1875[7];
            v1874[6] = v1875[6];
            v1874[7] = v1882;
            uint64_t v1883 = v1875[9];
            v1874[8] = v1875[8];
            v1874[9] = v1883;
            uint64_t v1884 = v1875[11];
            v1874[10] = v1875[10];
            v1874[11] = v1884;
            v2586 = v1881;
            uint64_t v1885 = v1881[10];
            v2534 = (char *)v1875 + v1885;
            v2561 = (char *)v1874 + v1885;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2534, 1, v2629))
            {
              uint64_t v1886 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2561, v2534, *(void *)(*(void *)(v1886 - 8) + 64));
            }
            else
            {
              v2613(v2561, v2534, v2629);
              __swift_storeEnumTagSinglePayload((uint64_t)v2561, 0, 1, v2629);
            }
            uint64_t v1887 = v2586[11];
            v1888 = (char *)v1874 + v1887;
            v1889 = (char *)v1875 + v1887;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1875 + v1887, 1, v2629))
            {
              uint64_t v1890 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1888, v1889, *(void *)(*(void *)(v1890 - 8) + 64));
            }
            else
            {
              v2613(v1888, v1889, v2629);
              __swift_storeEnumTagSinglePayload((uint64_t)v1888, 0, 1, v2629);
            }
            uint64_t v1891 = v2586[12];
            v1892 = (void *)((char *)v1874 + v1891);
            v1893 = (void *)((char *)v1875 + v1891);
            uint64_t v1894 = v1893[1];
            void *v1892 = *v1893;
            v1892[1] = v1894;
            uint64_t v1895 = v2586[13];
            v1896 = (void *)((char *)v1874 + v1895);
            v1897 = (void *)((char *)v1875 + v1895);
            uint64_t v1898 = v1897[1];
            void *v1896 = *v1897;
            v1896[1] = v1898;
            uint64_t v1899 = v2586[14];
            v1900 = (void *)((char *)v1874 + v1899);
            v1901 = (void *)((char *)v1875 + v1899);
            uint64_t v1902 = v1901[1];
            void *v1900 = *v1901;
            v1900[1] = v1902;
            uint64_t v1903 = v2586[15];
            v1904 = (char *)v1874 + v1903;
            v1905 = (char *)v1875 + v1903;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1905, 1, v2629))
            {
              uint64_t v1906 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1904, v1905, *(void *)(*(void *)(v1906 - 8) + 64));
            }
            else
            {
              v2613(v1904, v1905, v2629);
              __swift_storeEnumTagSinglePayload((uint64_t)v1904, 0, 1, v2629);
            }
            uint64_t v1907 = v2586[16];
            v1908 = (void *)((char *)v1874 + v1907);
            v1909 = (void *)((char *)v1875 + v1907);
            uint64_t v1910 = v1909[1];
            void *v1908 = *v1909;
            v1908[1] = v1910;
            uint64_t v1911 = v2586[17];
            v1912 = (void *)((char *)v1874 + v1911);
            v1913 = (void *)((char *)v1875 + v1911);
            uint64_t v2562 = v1913[1];
            void *v1912 = *v1913;
            v1912[1] = v2562;
            uint64_t v1914 = v2586[18];
            v1915 = (void *)((char *)v1874 + v1914);
            v1916 = (void *)((char *)v1875 + v1914);
            uint64_t v2535 = v1916[1];
            void *v1915 = *v1916;
            v1915[1] = v2535;
            uint64_t v1917 = v2586[19];
            v1918 = (void *)((char *)v1874 + v1917);
            v1919 = (void *)((char *)v1875 + v1917);
            uint64_t v1920 = v1919[1];
            void *v1918 = *v1919;
            v1918[1] = v1920;
            uint64_t v1921 = v2586[20];
            v1922 = (void *)((char *)v1874 + v1921);
            v1923 = (void *)((char *)v1875 + v1921);
            uint64_t v1924 = v1923[1];
            void *v1922 = *v1923;
            v1922[1] = v1924;
            uint64_t v1925 = v2586[21];
            v1926 = (void *)((char *)v1874 + v1925);
            v1927 = (void *)((char *)v1875 + v1925);
            uint64_t v1928 = v1927[1];
            void *v1926 = *v1927;
            v1926[1] = v1928;
            uint64_t v1929 = v2586[22];
            v1930 = (void *)((char *)v1874 + v1929);
            v1931 = (void *)((char *)v1875 + v1929);
            uint64_t v1932 = v1931[1];
            void *v1930 = *v1931;
            v1930[1] = v1932;
            uint64_t v1933 = v2586[23];
            v1934 = (void *)((char *)v1874 + v1933);
            v1935 = (void *)((char *)v1875 + v1933);
            uint64_t v1936 = v1935[1];
            void *v1934 = *v1935;
            v1934[1] = v1936;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1874, 0, 1, (uint64_t)v2586);
          }
          uint64_t v1937 = v2657[23];
          v1938 = (void *)((char *)v13 + v1937);
          v1939 = (void *)((char *)v14 + v1937);
          v1940 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1939, 1, (uint64_t)v1940))
          {
            uint64_t v1941 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v1938, v1939, *(void *)(*(void *)(v1941 - 8) + 64));
          }
          else
          {
            uint64_t v1942 = v1939[1];
            void *v1938 = *v1939;
            v1938[1] = v1942;
            uint64_t v1943 = v1939[3];
            v1938[2] = v1939[2];
            v1938[3] = v1943;
            uint64_t v1944 = v1939[5];
            v1938[4] = v1939[4];
            v1938[5] = v1944;
            uint64_t v1945 = v1939[7];
            v1938[6] = v1939[6];
            v1938[7] = v1945;
            uint64_t v2563 = v1939[9];
            v1938[8] = v1939[8];
            v1938[9] = v2563;
            uint64_t v2536 = v1939[11];
            v1938[10] = v1939[10];
            v1938[11] = v2536;
            uint64_t v1946 = v1940[11];
            v2587 = (char *)v1938 + v1946;
            v2503 = (char *)v1939 + v1946;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2503, 1, v2629))
            {
              uint64_t v1947 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2587, v2503, *(void *)(*(void *)(v1947 - 8) + 64));
            }
            else
            {
              v2613(v2587, v2503, v2629);
              __swift_storeEnumTagSinglePayload((uint64_t)v2587, 0, 1, v2629);
            }
            uint64_t v1948 = v1940[12];
            v1949 = (void *)((char *)v1938 + v1948);
            v1950 = (void *)((char *)v1939 + v1948);
            uint64_t v1951 = v1950[1];
            void *v1949 = *v1950;
            v1949[1] = v1951;
            *(void *)((char *)v1938 + v1940[13]) = *(void *)((char *)v1939 + v1940[13]);
            uint64_t v1952 = v1940[14];
            v1953 = (char *)v1938 + v1952;
            v1954 = (char *)v1939 + v1952;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1954, 1, v2629))
            {
              uint64_t v1955 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1953, v1954, *(void *)(*(void *)(v1955 - 8) + 64));
            }
            else
            {
              v2613(v1953, v1954, v2629);
              __swift_storeEnumTagSinglePayload((uint64_t)v1953, 0, 1, v2629);
            }
            *(void *)((char *)v1938 + v1940[15]) = *(void *)((char *)v1939 + v1940[15]);
            *(void *)((char *)v1938 + v1940[16]) = *(void *)((char *)v1939 + v1940[16]);
            uint64_t v1956 = v1940[17];
            v1957 = (void *)((char *)v1938 + v1956);
            v1958 = (void *)((char *)v1939 + v1956);
            uint64_t v1959 = v1958[1];
            void *v1957 = *v1958;
            v1957[1] = v1959;
            *(void *)((char *)v1938 + v1940[18]) = *(void *)((char *)v1939 + v1940[18]);
            *(void *)((char *)v1938 + v1940[19]) = *(void *)((char *)v1939 + v1940[19]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1938, 0, 1, (uint64_t)v1940);
          }
          uint64_t v1960 = v2657[24];
          v1961 = (void *)((char *)v13 + v1960);
          v1962 = (void *)((char *)v14 + v1960);
          v1963 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1962, 1, (uint64_t)v1963))
          {
            uint64_t v1964 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v1961, v1962, *(void *)(*(void *)(v1964 - 8) + 64));
          }
          else
          {
            uint64_t v1965 = v1962[1];
            void *v1961 = *v1962;
            v1961[1] = v1965;
            uint64_t v1966 = v1962[3];
            v1961[2] = v1962[2];
            v1961[3] = v1966;
            uint64_t v1967 = v1962[5];
            v1961[4] = v1962[4];
            v1961[5] = v1967;
            uint64_t v1968 = v1962[7];
            v1961[6] = v1962[6];
            v1961[7] = v1968;
            uint64_t v1969 = v1963[8];
            v2564 = (char *)v1962 + v1969;
            v2588 = (char *)v1961 + v1969;
            uint64_t v2537 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2564, 1, v2537))
            {
              uint64_t v1970 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2588, v2564, *(void *)(*(void *)(v1970 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2537 - 8) + 16))(v2588, v2564, v2537);
              __swift_storeEnumTagSinglePayload((uint64_t)v2588, 0, 1, v2537);
            }
            uint64_t v1971 = v1963[9];
            v1972 = (void *)((char *)v1961 + v1971);
            v1973 = (void *)((char *)v1962 + v1971);
            uint64_t v1974 = v1973[1];
            void *v1972 = *v1973;
            v1972[1] = v1974;
            uint64_t v1975 = v1963[10];
            v1976 = (void *)((char *)v1961 + v1975);
            v1977 = (void *)((char *)v1962 + v1975);
            uint64_t v1978 = v1977[1];
            void *v1976 = *v1977;
            v1976[1] = v1978;
            uint64_t v1979 = v1963[11];
            v1980 = (void *)((char *)v1961 + v1979);
            v1981 = (void *)((char *)v1962 + v1979);
            uint64_t v1982 = v1981[1];
            void *v1980 = *v1981;
            v1980[1] = v1982;
            uint64_t v1983 = v1963[12];
            v1984 = (char *)v1961 + v1983;
            v1985 = (char *)v1962 + v1983;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1985, 1, v2629))
            {
              uint64_t v1986 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1984, v1985, *(void *)(*(void *)(v1986 - 8) + 64));
            }
            else
            {
              v2613(v1984, v1985, v2629);
              __swift_storeEnumTagSinglePayload((uint64_t)v1984, 0, 1, v2629);
            }
            uint64_t v1987 = v1963[13];
            v1988 = (char *)v1961 + v1987;
            v1989 = (char *)v1962 + v1987;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1962 + v1987, 1, v2629))
            {
              uint64_t v1990 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1988, v1989, *(void *)(*(void *)(v1990 - 8) + 64));
            }
            else
            {
              v2613(v1988, v1989, v2629);
              __swift_storeEnumTagSinglePayload((uint64_t)v1988, 0, 1, v2629);
            }
            uint64_t v1991 = v1963[14];
            v1992 = (char *)v1961 + v1991;
            v1993 = (char *)v1962 + v1991;
            *(void *)v1992 = *(void *)v1993;
            v1992[8] = v1993[8];
            uint64_t v1994 = v1963[15];
            v1995 = (void *)((char *)v1961 + v1994);
            v1996 = (void *)((char *)v1962 + v1994);
            uint64_t v1997 = v1996[1];
            void *v1995 = *v1996;
            v1995[1] = v1997;
            uint64_t v1998 = v1963[16];
            v1999 = (void *)((char *)v1961 + v1998);
            v2000 = (void *)((char *)v1962 + v1998);
            uint64_t v2001 = v2000[1];
            void *v1999 = *v2000;
            v1999[1] = v2001;
            uint64_t v2002 = v1963[17];
            v2003 = (void *)((char *)v1961 + v2002);
            v2004 = (void *)((char *)v1962 + v2002);
            uint64_t v2005 = v2004[1];
            void *v2003 = *v2004;
            v2003[1] = v2005;
            uint64_t v2006 = v1963[18];
            v2007 = (void *)((char *)v1961 + v2006);
            v2008 = (void *)((char *)v1962 + v2006);
            uint64_t v2009 = v2008[1];
            void *v2007 = *v2008;
            v2007[1] = v2009;
            uint64_t v2010 = v1963[19];
            v2011 = (void *)((char *)v1961 + v2010);
            v2012 = (void *)((char *)v1962 + v2010);
            uint64_t v2013 = v2012[1];
            void *v2011 = *v2012;
            v2011[1] = v2013;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1961, 0, 1, (uint64_t)v1963);
          }
          uint64_t v2014 = v2657[25];
LABEL_537:
          v2189 = (void *)((char *)v13 + v2014);
          v2190 = (void *)((char *)v14 + v2014);
          uint64_t v2370 = *(void *)((char *)v14 + v2014 + 8);
          if (v2370)
          {
            void *v2189 = *v2190;
            v2189[1] = v2370;
            uint64_t v2371 = v2190[3];
            v2189[2] = v2190[2];
            v2189[3] = v2371;
            uint64_t v2372 = v2190[5];
            v2189[4] = v2190[4];
            v2189[5] = v2372;
            uint64_t v2373 = v2190[7];
            v2189[6] = v2190[6];
            v2189[7] = v2373;
            uint64_t v2374 = v2190[9];
            v2189[8] = v2190[8];
            v2189[9] = v2374;
            uint64_t v2540 = v2190[11];
            v2189[10] = v2190[10];
            v2189[11] = v2540;
            uint64_t v2594 = v2190[13];
            v2189[12] = v2190[12];
            v2189[13] = v2594;
            uint64_t v2628 = v2190[15];
            v2189[14] = v2190[14];
            v2189[15] = v2628;
            uint64_t v2677 = v2190[17];
            v2189[16] = v2190[16];
            v2189[17] = v2677;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_539:
            swift_bridgeObjectRetain();
LABEL_540:
            swift_bridgeObjectRetain();
          }
          else
          {
LABEL_544:
            memcpy(v2189, v2190, 0x90uLL);
          }
LABEL_541:
          uint64_t v15 = v2678;
          goto LABEL_542;
      }
    }
  }
  return a1;
}

uint64_t destroy for IdCardEntity(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  unint64_t v4 = *(void *)(a1 + 32);
  if (v4 >> 60 != 15) {
    outlined consume of Data._Representation(*(void *)(a1 + 24), v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 32);
  uint64_t v6 = type metadata accessor for SearchResult(0);
  uint64_t result = __swift_getEnumTagSinglePayload(v5, 1, v6);
  if (!result)
  {
    type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v8 = (int *)type metadata accessor for EmailDocument(0);
        uint64_t v9 = v5 + v8[12];
        uint64_t v10 = type metadata accessor for Date();
        uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
        v11(v9, v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v5 + v8[19]))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v12 = v5 + v8[21];
        v13 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v12, 1, (uint64_t)v13))
        {
          swift_bridgeObjectRelease();
          uint64_t v14 = v12 + v13[5];
          uint64_t v15 = type metadata accessor for RentalCarReservation(0);
          if (!__swift_getEnumTagSinglePayload(v14, 1, v15))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v16 = v14 + *(int *)(v15 + 140);
            if (!__swift_getEnumTagSinglePayload(v16, 1, v10)) {
              v11(v16, v10);
            }
            uint64_t v17 = v14 + *(int *)(v15 + 144);
            if (!__swift_getEnumTagSinglePayload(v17, 1, v10)) {
              v11(v17, v10);
            }
          }
          uint64_t v18 = v12 + v13[6];
          uint64_t v19 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v18, 1, v19))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v20 = v18 + *(int *)(v19 + 112);
            if (!__swift_getEnumTagSinglePayload(v20, 1, v10)) {
              v11(v20, v10);
            }
            uint64_t v21 = v18 + *(int *)(v19 + 116);
            if (!__swift_getEnumTagSinglePayload(v21, 1, v10)) {
              v11(v21, v10);
            }
          }
          uint64_t v22 = v12 + v13[7];
          uint64_t v23 = (int *)type metadata accessor for TicketedShow(0);
          uint64_t v286 = v13;
          if (!__swift_getEnumTagSinglePayload(v22, 1, (uint64_t)v23))
          {
            uint64_t v24 = v11;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v25 = v22 + v23[29];
            uint64_t v26 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v25, 1, v26)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
            }
            swift_bridgeObjectRelease();
            uint64_t v27 = v22 + v23[31];
            uint64_t v11 = v24;
            if (!__swift_getEnumTagSinglePayload(v27, 1, v10)) {
              v24(v27, v10);
            }
            uint64_t v28 = v22 + v23[32];
            v13 = v286;
            if (!__swift_getEnumTagSinglePayload(v28, 1, v10)) {
              v11(v28, v10);
            }
          }
          uint64_t v29 = v12 + v13[8];
          uint64_t v30 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v29, 1, v30))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v31 = v29 + *(int *)(v30 + 108);
            if (!__swift_getEnumTagSinglePayload(v31, 1, v10)) {
              v11(v31, v10);
            }
            uint64_t v32 = v29 + *(int *)(v30 + 112);
            if (!__swift_getEnumTagSinglePayload(v32, 1, v10)) {
              v11(v32, v10);
            }
          }
          uint64_t v33 = v12 + v13[9];
          uint64_t v34 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v33, 1, (uint64_t)v34))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v35 = v33 + v34[24];
            if (!__swift_getEnumTagSinglePayload(v35, 1, v10)) {
              v11(v35, v10);
            }
            uint64_t v36 = v33 + v34[25];
            if (!__swift_getEnumTagSinglePayload(v36, 1, v10)) {
              v11(v36, v10);
            }
            uint64_t v37 = v33 + v34[26];
            uint64_t v38 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v37, 1, v38)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
            }
          }
          uint64_t v39 = v12 + v13[10];
          uint64_t v40 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v39, 1, (uint64_t)v40))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v41 = v39 + v40[22];
            if (!__swift_getEnumTagSinglePayload(v41, 1, v10)) {
              v11(v41, v10);
            }
            uint64_t v42 = v39 + v40[23];
            if (!__swift_getEnumTagSinglePayload(v42, 1, v10)) {
              v11(v42, v10);
            }
            uint64_t v43 = v39 + v40[25];
            uint64_t v44 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v43, 1, v44)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
            }
          }
          uint64_t v45 = v12 + v13[11];
          uint64_t v46 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v45, 1, (uint64_t)v46))
          {
            uint64_t v284 = v11;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v47 = v45 + v46[13];
            uint64_t v48 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v47, 1, v48)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
            }
            uint64_t v283 = v12;
            uint64_t v49 = v45 + v46[14];
            if (!__swift_getEnumTagSinglePayload(v49, 1, v48)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v49, v48);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v50 = v45 + v46[18];
            uint64_t v51 = type metadata accessor for DateComponents();
            v52 = *(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8);
            v52(v50, v51);
            v52(v45 + v46[19], v51);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v53 = v45 + v46[38];
            uint64_t v11 = v284;
            if (!__swift_getEnumTagSinglePayload(v53, 1, v10)) {
              v284(v53, v10);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v12 = v283;
            v13 = v286;
          }
          uint64_t v54 = v12 + v13[12];
          uint64_t v55 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v54, 1, v55))
          {
            v56 = v11;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v57 = v54 + *(int *)(v55 + 56);
            uint64_t v58 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v57, 1, v58)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v57, v58);
            }
            uint64_t v59 = v54 + *(int *)(v55 + 60);
            if (!__swift_getEnumTagSinglePayload(v59, 1, v58)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v59, v58);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v11 = v56;
            v13 = v286;
          }
          uint64_t v60 = v12 + v13[13];
          uint64_t v61 = type metadata accessor for RestaurantReservation(0);
          if (!__swift_getEnumTagSinglePayload(v60, 1, v61))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v62 = v60 + *(int *)(v61 + 56);
            uint64_t v63 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v62, 1, v63)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(v62, v63);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v64 = v5 + v8[22];
        uint64_t v65 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v64, 1, (uint64_t)v65))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v66 = v64 + v65[10];
          if (!__swift_getEnumTagSinglePayload(v66, 1, v10)) {
            v11(v66, v10);
          }
          uint64_t v67 = v64 + v65[11];
          if (!__swift_getEnumTagSinglePayload(v67, 1, v10)) {
            v11(v67, v10);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v68 = v64 + v65[15];
          if (!__swift_getEnumTagSinglePayload(v68, 1, v10)) {
            v11(v68, v10);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v69 = v5 + v8[23];
        uint64_t v70 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v69, 1, v70))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v71 = v69 + *(int *)(v70 + 44);
          if (!__swift_getEnumTagSinglePayload(v71, 1, v10)) {
            v11(v71, v10);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v72 = v69 + *(int *)(v70 + 56);
          if (!__swift_getEnumTagSinglePayload(v72, 1, v10)) {
            v11(v72, v10);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v73 = v5 + v8[24];
        uint64_t v74 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v73, 1, (uint64_t)v74))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v75 = v73 + v74[8];
          uint64_t v76 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v75, 1, v76)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v76 - 8) + 8))(v75, v76);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v77 = v73 + v74[12];
          if (!__swift_getEnumTagSinglePayload(v77, 1, v10)) {
            v11(v77, v10);
          }
          uint64_t v78 = v73 + v74[13];
          if (!__swift_getEnumTagSinglePayload(v78, 1, v10)) {
            v11(v78, v10);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v79 = v8[25];
        goto LABEL_255;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v80 = (int *)type metadata accessor for MobileSMSDocument(0);
        uint64_t v81 = v5 + v80[10];
        uint64_t v82 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v81, 1, v82)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v81, v82);
        }
        uint64_t v83 = v5 + v80[11];
        uint64_t v84 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v83, 1, v84)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v84 - 8) + 8))(v83, v84);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v5 + v80[17]))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v85 = v5 + v80[19];
        uint64_t v86 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v85, 1, (uint64_t)v86))
        {
          swift_bridgeObjectRelease();
          uint64_t v87 = v85 + v86[5];
          uint64_t v88 = type metadata accessor for RentalCarReservation(0);
          if (!__swift_getEnumTagSinglePayload(v87, 1, v88))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v89 = v87 + *(int *)(v88 + 140);
            if (!__swift_getEnumTagSinglePayload(v89, 1, v82)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v89, v82);
            }
            uint64_t v90 = v87 + *(int *)(v88 + 144);
            if (!__swift_getEnumTagSinglePayload(v90, 1, v82)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v90, v82);
            }
          }
          uint64_t v91 = v85 + v86[6];
          uint64_t v92 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v91, 1, v92))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v93 = v91 + *(int *)(v92 + 112);
            if (!__swift_getEnumTagSinglePayload(v93, 1, v82)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v93, v82);
            }
            uint64_t v94 = v91 + *(int *)(v92 + 116);
            if (!__swift_getEnumTagSinglePayload(v94, 1, v82)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v94, v82);
            }
          }
          uint64_t v95 = v85 + v86[7];
          v96 = (int *)type metadata accessor for TicketedShow(0);
          if (!__swift_getEnumTagSinglePayload(v95, 1, (uint64_t)v96))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v97 = v95 + v96[29];
            if (!__swift_getEnumTagSinglePayload(v97, 1, v84)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v84 - 8) + 8))(v97, v84);
            }
            swift_bridgeObjectRelease();
            uint64_t v98 = v95 + v96[31];
            if (!__swift_getEnumTagSinglePayload(v98, 1, v82)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v98, v82);
            }
            uint64_t v99 = v95 + v96[32];
            if (!__swift_getEnumTagSinglePayload(v99, 1, v82)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v99, v82);
            }
          }
          uint64_t v100 = v85 + v86[8];
          uint64_t v101 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v100, 1, v101))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v102 = v100 + *(int *)(v101 + 108);
            if (!__swift_getEnumTagSinglePayload(v102, 1, v82)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v102, v82);
            }
            uint64_t v103 = v100 + *(int *)(v101 + 112);
            if (!__swift_getEnumTagSinglePayload(v103, 1, v82)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v103, v82);
            }
          }
          uint64_t v104 = v85 + v86[9];
          v105 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v104, 1, (uint64_t)v105))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v106 = v104 + v105[24];
            if (!__swift_getEnumTagSinglePayload(v106, 1, v82)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v106, v82);
            }
            uint64_t v107 = v104 + v105[25];
            if (!__swift_getEnumTagSinglePayload(v107, 1, v82)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v107, v82);
            }
            uint64_t v108 = v104 + v105[26];
            if (!__swift_getEnumTagSinglePayload(v108, 1, v84)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v84 - 8) + 8))(v108, v84);
            }
          }
          uint64_t v109 = v85 + v86[10];
          uint64_t v110 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v109, 1, (uint64_t)v110))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v111 = v109 + v110[22];
            if (!__swift_getEnumTagSinglePayload(v111, 1, v82)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v111, v82);
            }
            uint64_t v112 = v109 + v110[23];
            if (!__swift_getEnumTagSinglePayload(v112, 1, v82)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v112, v82);
            }
            uint64_t v113 = v109 + v110[25];
            if (!__swift_getEnumTagSinglePayload(v113, 1, v84)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v84 - 8) + 8))(v113, v84);
            }
          }
          uint64_t v114 = v85 + v86[11];
          uint64_t v115 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v114, 1, (uint64_t)v115))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v116 = v114 + v115[13];
            if (!__swift_getEnumTagSinglePayload(v116, 1, v84)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v84 - 8) + 8))(v116, v84);
            }
            uint64_t v285 = v85;
            uint64_t v117 = v114 + v115[14];
            if (!__swift_getEnumTagSinglePayload(v117, 1, v84)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v84 - 8) + 8))(v117, v84);
            }
            uint64_t v287 = v84;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v118 = v114 + v115[18];
            uint64_t v119 = type metadata accessor for DateComponents();
            v120 = *(void (**)(uint64_t, uint64_t))(*(void *)(v119 - 8) + 8);
            v120(v118, v119);
            v120(v114 + v115[19], v119);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v121 = v114 + v115[38];
            if (!__swift_getEnumTagSinglePayload(v121, 1, v82)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v121, v82);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v85 = v285;
            uint64_t v84 = v287;
          }
          uint64_t v122 = v85 + v86[12];
          uint64_t v123 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v122, 1, v123))
          {
            uint64_t v289 = v86;
            uint64_t v124 = v84;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v125 = v122 + *(int *)(v123 + 56);
            uint64_t v126 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v125, 1, v126)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v126 - 8) + 8))(v125, v126);
            }
            uint64_t v127 = v122 + *(int *)(v123 + 60);
            if (!__swift_getEnumTagSinglePayload(v127, 1, v126)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v126 - 8) + 8))(v127, v126);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v84 = v124;
            uint64_t v86 = v289;
          }
          uint64_t v128 = v85 + v86[13];
          uint64_t v129 = type metadata accessor for RestaurantReservation(0);
          if (!__swift_getEnumTagSinglePayload(v128, 1, v129))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v130 = v128 + *(int *)(v129 + 56);
            uint64_t v131 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v130, 1, v131)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v131 - 8) + 8))(v130, v131);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v132 = v5 + v80[20];
        uint64_t v133 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v132, 1, (uint64_t)v133))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v134 = v132 + v133[10];
          if (!__swift_getEnumTagSinglePayload(v134, 1, v82)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v134, v82);
          }
          uint64_t v135 = v132 + v133[11];
          if (!__swift_getEnumTagSinglePayload(v135, 1, v82)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v135, v82);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v136 = v132 + v133[15];
          if (!__swift_getEnumTagSinglePayload(v136, 1, v82)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v136, v82);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v137 = v5 + v80[21];
        uint64_t v138 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v137, 1, v138))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v139 = v137 + *(int *)(v138 + 44);
          if (!__swift_getEnumTagSinglePayload(v139, 1, v82)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v139, v82);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v140 = v137 + *(int *)(v138 + 56);
          if (!__swift_getEnumTagSinglePayload(v140, 1, v82)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v140, v82);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v141 = v5 + v80[22];
        uint64_t v142 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v141, 1, (uint64_t)v142))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v143 = v141 + v142[8];
          if (!__swift_getEnumTagSinglePayload(v143, 1, v84)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v84 - 8) + 8))(v143, v84);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v144 = v141 + v142[12];
          if (!__swift_getEnumTagSinglePayload(v144, 1, v82)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v144, v82);
          }
          uint64_t v145 = v141 + v142[13];
          if (!__swift_getEnumTagSinglePayload(v145, 1, v82)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v145, v82);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v79 = v80[23];
        goto LABEL_255;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v146 = (int *)type metadata accessor for CalendarEvent(0);
        uint64_t v147 = v5 + v146[7];
        uint64_t v148 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v147, 1, v148)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v147, v148);
        }
        uint64_t v149 = v5 + v146[8];
        if (!__swift_getEnumTagSinglePayload(v149, 1, v148)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v149, v148);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!*(void *)(v5 + v146[13])) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_337;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v150 = (int *)type metadata accessor for Photo(0);
        uint64_t v151 = v5 + v150[11];
        uint64_t v152 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v151, 1, v152)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v151, v152);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v153 = v5 + v150[17];
        v154 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v153, 1, (uint64_t)v154))
        {
          swift_bridgeObjectRelease();
          uint64_t v155 = v153 + v154[5];
          uint64_t v156 = type metadata accessor for RentalCarReservation(0);
          if (!__swift_getEnumTagSinglePayload(v155, 1, v156))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v157 = v155 + *(int *)(v156 + 140);
            if (!__swift_getEnumTagSinglePayload(v157, 1, v152)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v157, v152);
            }
            uint64_t v158 = v155 + *(int *)(v156 + 144);
            if (!__swift_getEnumTagSinglePayload(v158, 1, v152)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v158, v152);
            }
          }
          uint64_t v159 = v153 + v154[6];
          uint64_t v160 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v159, 1, v160))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v161 = v159 + *(int *)(v160 + 112);
            if (!__swift_getEnumTagSinglePayload(v161, 1, v152)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v161, v152);
            }
            uint64_t v162 = v159 + *(int *)(v160 + 116);
            if (!__swift_getEnumTagSinglePayload(v162, 1, v152)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v162, v152);
            }
          }
          uint64_t v163 = v153 + v154[7];
          uint64_t v164 = (int *)type metadata accessor for TicketedShow(0);
          if (!__swift_getEnumTagSinglePayload(v163, 1, (uint64_t)v164))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v165 = v163 + v164[29];
            uint64_t v166 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v165, 1, v166)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v166 - 8) + 8))(v165, v166);
            }
            swift_bridgeObjectRelease();
            uint64_t v167 = v163 + v164[31];
            if (!__swift_getEnumTagSinglePayload(v167, 1, v152)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v167, v152);
            }
            uint64_t v168 = v163 + v164[32];
            if (!__swift_getEnumTagSinglePayload(v168, 1, v152)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v168, v152);
            }
          }
          uint64_t v169 = v153 + v154[8];
          uint64_t v170 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v169, 1, v170))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v171 = v169 + *(int *)(v170 + 108);
            if (!__swift_getEnumTagSinglePayload(v171, 1, v152)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v171, v152);
            }
            uint64_t v172 = v169 + *(int *)(v170 + 112);
            if (!__swift_getEnumTagSinglePayload(v172, 1, v152)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v172, v152);
            }
          }
          uint64_t v173 = v153 + v154[9];
          uint64_t v174 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v173, 1, (uint64_t)v174))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v175 = v173 + v174[24];
            if (!__swift_getEnumTagSinglePayload(v175, 1, v152)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v175, v152);
            }
            uint64_t v176 = v173 + v174[25];
            if (!__swift_getEnumTagSinglePayload(v176, 1, v152)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v176, v152);
            }
            uint64_t v177 = v173 + v174[26];
            uint64_t v178 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v177, 1, v178)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v178 - 8) + 8))(v177, v178);
            }
          }
          uint64_t v179 = v153 + v154[10];
          uint64_t v180 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v179, 1, (uint64_t)v180))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v181 = v179 + v180[22];
            if (!__swift_getEnumTagSinglePayload(v181, 1, v152)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v181, v152);
            }
            uint64_t v182 = v179 + v180[23];
            if (!__swift_getEnumTagSinglePayload(v182, 1, v152)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v182, v152);
            }
            uint64_t v183 = v179 + v180[25];
            uint64_t v184 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v183, 1, v184)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v184 - 8) + 8))(v183, v184);
            }
          }
          uint64_t v185 = v153 + v154[11];
          uint64_t v186 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v185, 1, (uint64_t)v186))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v187 = v185 + v186[13];
            uint64_t v188 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v187, 1, v188)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v188 - 8) + 8))(v187, v188);
            }
            uint64_t v288 = v154;
            uint64_t v189 = v185 + v186[14];
            if (!__swift_getEnumTagSinglePayload(v189, 1, v188)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v188 - 8) + 8))(v189, v188);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v190 = v185 + v186[18];
            uint64_t v191 = type metadata accessor for DateComponents();
            uint64_t v192 = *(void (**)(uint64_t, uint64_t))(*(void *)(v191 - 8) + 8);
            v192(v190, v191);
            v192(v185 + v186[19], v191);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v193 = v185 + v186[38];
            if (!__swift_getEnumTagSinglePayload(v193, 1, v152)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v193, v152);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v154 = v288;
          }
          uint64_t v194 = v153 + v154[12];
          uint64_t v195 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v194, 1, v195))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v196 = v194 + *(int *)(v195 + 56);
            uint64_t v197 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v196, 1, v197)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v197 - 8) + 8))(v196, v197);
            }
            uint64_t v198 = v194 + *(int *)(v195 + 60);
            if (!__swift_getEnumTagSinglePayload(v198, 1, v197)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v197 - 8) + 8))(v198, v197);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v199 = v153 + v154[13];
          uint64_t v200 = type metadata accessor for RestaurantReservation(0);
          if (!__swift_getEnumTagSinglePayload(v199, 1, v200))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v201 = v199 + *(int *)(v200 + 56);
            uint64_t v202 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v201, 1, v202)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v202 - 8) + 8))(v201, v202);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v203 = v5 + v150[18];
        uint64_t v204 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v203, 1, (uint64_t)v204))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v205 = v203 + v204[10];
          if (!__swift_getEnumTagSinglePayload(v205, 1, v152)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v205, v152);
          }
          uint64_t v206 = v203 + v204[11];
          if (!__swift_getEnumTagSinglePayload(v206, 1, v152)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v206, v152);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v207 = v203 + v204[15];
          if (!__swift_getEnumTagSinglePayload(v207, 1, v152)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v207, v152);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v208 = v5 + v150[19];
        uint64_t v209 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v208, 1, v209))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v210 = v208 + *(int *)(v209 + 44);
          if (!__swift_getEnumTagSinglePayload(v210, 1, v152)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v210, v152);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v211 = v208 + *(int *)(v209 + 56);
          if (!__swift_getEnumTagSinglePayload(v211, 1, v152)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v211, v152);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v212 = v5 + v150[20];
        uint64_t v213 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v212, 1, (uint64_t)v213))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v214 = v212 + v213[8];
          uint64_t v215 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v214, 1, v215)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v215 - 8) + 8))(v214, v215);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v216 = v212 + v213[12];
          if (!__swift_getEnumTagSinglePayload(v216, 1, v152)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v216, v152);
          }
          uint64_t v217 = v212 + v213[13];
          if (!__swift_getEnumTagSinglePayload(v217, 1, v152)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v152 - 8) + 8))(v217, v152);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v79 = v150[21];
LABEL_255:
        if (!*(void *)(v5 + v79 + 8)) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_337;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v218 = (int *)type metadata accessor for NoteDocument(0);
        uint64_t v219 = v5 + v218[8];
        uint64_t v220 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v219, 1, v220)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v220 - 8) + 8))(v219, v220);
        }
        goto LABEL_276;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v221 = (int *)type metadata accessor for Reminder(0);
        uint64_t v222 = v5 + v221[7];
        uint64_t v223 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v222, 1, v223)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v223 - 8) + 8))(v222, v223);
        }
        uint64_t v224 = v5 + v221[8];
        if (!__swift_getEnumTagSinglePayload(v224, 1, v223)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v223 - 8) + 8))(v224, v223);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v225 = v221[12];
        goto LABEL_326;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v226 = type metadata accessor for PhoneHistory(0);
        uint64_t v227 = v5 + *(int *)(v226 + 40);
        uint64_t v228 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v227, 1, v228)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v228 - 8) + 8))(v227, v228);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v225 = *(int *)(v226 + 52);
        goto LABEL_326;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v229 = (int *)type metadata accessor for VoicemailTranscript(0);
        uint64_t v230 = v229[7];
        goto LABEL_270;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v225 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
        goto LABEL_326;
      case 9u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v229 = (int *)type metadata accessor for VoiceMemo(0);
        uint64_t v230 = v229[6];
LABEL_270:
        uint64_t v231 = v5 + v230;
        uint64_t v232 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v231, 1, v232)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v232 - 8) + 8))(v231, v232);
        }
        uint64_t v225 = v229[8];
        goto LABEL_326;
      case 0xAu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v218 = (int *)type metadata accessor for Safari(0);
        uint64_t v233 = v5 + v218[6];
        uint64_t v220 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v233, 1, v220)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v220 - 8) + 8))(v233, v220);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_276:
        uint64_t v234 = v218[9];
        goto LABEL_314;
      case 0xBu:
        swift_bridgeObjectRelease();

        break;
      case 0xCu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v235 = v5 + *(int *)(type metadata accessor for WalletTransaction(0) + 28);
        uint64_t v236 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v235, 1, v236)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v236 - 8) + 8))(v235, v236);
        }
        goto LABEL_280;
      case 0xDu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v237 = v5 + *(int *)(type metadata accessor for WalletPass(0) + 28);
        uint64_t v238 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v237, 1, v238)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v238 - 8) + 8))(v237, v238);
        }
        swift_bridgeObjectRelease();
        goto LABEL_337;
      case 0xEu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_337;
      case 0xFu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v239 = (int *)type metadata accessor for FlightReservation(0);
        uint64_t v240 = v5 + v239[13];
        uint64_t v241 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v240, 1, v241)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v241 - 8) + 8))(v240, v241);
        }
        uint64_t v242 = v5 + v239[14];
        if (!__swift_getEnumTagSinglePayload(v242, 1, v241)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v241 - 8) + 8))(v242, v241);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v243 = v5 + v239[18];
        uint64_t v244 = type metadata accessor for DateComponents();
        uint64_t v245 = *(void (**)(uint64_t, uint64_t))(*(void *)(v244 - 8) + 8);
        v245(v243, v244);
        v245(v5 + v239[19], v244);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v246 = v5 + v239[38];
        uint64_t v247 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v246, 1, v247)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v247 - 8) + 8))(v246, v247);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v248 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
        goto LABEL_334;
      case 0x10u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v249 = type metadata accessor for HotelReservation(0);
        uint64_t v250 = v5 + *(int *)(v249 + 56);
        uint64_t v251 = type metadata accessor for DateComponents();
        if (!__swift_getEnumTagSinglePayload(v250, 1, v251)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v251 - 8) + 8))(v250, v251);
        }
        uint64_t v252 = v5 + *(int *)(v249 + 60);
        if (!__swift_getEnumTagSinglePayload(v252, 1, v251)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v251 - 8) + 8))(v252, v251);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_337;
      case 0x11u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v253 = v5 + *(int *)(type metadata accessor for RestaurantReservation(0) + 56);
        uint64_t v254 = type metadata accessor for DateComponents();
        if (!__swift_getEnumTagSinglePayload(v253, 1, v254)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v254 - 8) + 8))(v253, v254);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_337;
      case 0x12u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v255 = type metadata accessor for RentalCarReservation(0);
        uint64_t v256 = v5 + *(int *)(v255 + 140);
        uint64_t v220 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v256, 1, v220)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v220 - 8) + 8))(v256, v220);
        }
        uint64_t v234 = *(int *)(v255 + 144);
        goto LABEL_314;
      case 0x13u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v257 = type metadata accessor for TicketedTransportation(0);
        uint64_t v258 = v5 + *(int *)(v257 + 112);
        uint64_t v220 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v258, 1, v220)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v220 - 8) + 8))(v258, v220);
        }
        uint64_t v234 = *(int *)(v257 + 116);
        goto LABEL_314;
      case 0x14u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v259 = (int *)type metadata accessor for TicketedShow(0);
        uint64_t v260 = v5 + v259[29];
        uint64_t v261 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v260, 1, v261)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v261 - 8) + 8))(v260, v261);
        }
        swift_bridgeObjectRelease();
        uint64_t v262 = v5 + v259[31];
        uint64_t v263 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v262, 1, v263)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v263 - 8) + 8))(v262, v263);
        }
        uint64_t v264 = v5 + v259[32];
        goto LABEL_327;
      case 0x15u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v265 = type metadata accessor for Appointment(0);
        uint64_t v266 = v5 + *(int *)(v265 + 108);
        uint64_t v220 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v266, 1, v220)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v220 - 8) + 8))(v266, v220);
        }
        uint64_t v234 = *(int *)(v265 + 112);
LABEL_314:
        uint64_t v267 = v5 + v234;
        if (!__swift_getEnumTagSinglePayload(v5 + v234, 1, v220)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v220 - 8) + 8))(v267, v220);
        }
        break;
      case 0x16u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v268 = (int *)type metadata accessor for Party(0);
        uint64_t v269 = v5 + v268[24];
        uint64_t v270 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v269, 1, v270)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v270 - 8) + 8))(v269, v270);
        }
        uint64_t v271 = v5 + v268[25];
        if (!__swift_getEnumTagSinglePayload(v271, 1, v270)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v270 - 8) + 8))(v271, v270);
        }
        uint64_t v225 = v268[26];
        goto LABEL_326;
      case 0x17u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v272 = (int *)type metadata accessor for Trip(0);
        uint64_t v273 = v5 + v272[22];
        uint64_t v274 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v273, 1, v274)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v274 - 8) + 8))(v273, v274);
        }
        uint64_t v275 = v5 + v272[23];
        if (!__swift_getEnumTagSinglePayload(v275, 1, v274)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v274 - 8) + 8))(v275, v274);
        }
        uint64_t v225 = v272[25];
LABEL_326:
        uint64_t v264 = v5 + v225;
        uint64_t v263 = type metadata accessor for URL();
LABEL_327:
        if (!__swift_getEnumTagSinglePayload(v264, 1, v263)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v263 - 8) + 8))(v264, v263);
        }
        break;
      case 0x18u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v276 = type metadata accessor for GlobalItem();
        uint64_t v277 = v5 + *(int *)(v276 + 28);
        uint64_t v278 = type metadata accessor for GlobalDialog();
        if (!__swift_getEnumTagSinglePayload(v277, 1, v278)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v278 - 8) + 8))(v277, v278);
        }
        v279 = (uint64_t *)(v5 + *(int *)(v276 + 32));
        unint64_t v280 = v279[1];
        if (v280 >> 60 != 15) {
          outlined consume of Data._Representation(*v279, v280);
        }
        uint64_t v248 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_334:
        __swift_instantiateConcreteTypeFromMangledName(v248);
        goto LABEL_337;
      case 0x19u:
LABEL_280:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_337;
      case 0x1Au:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v281 = v5 + *(int *)(type metadata accessor for Answer(0) + 36);
        uint64_t v282 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v281, 1, v282)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v282 - 8) + 8))(v281, v282);
        }
LABEL_337:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }

    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for IdCardEntity(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a2 + 3;
  unint64_t v8 = a2[4];
  swift_retain();
  swift_retain();
  swift_retain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(v5 + 3) = *(_OWORD *)v7;
  }
  else
  {
    uint64_t v9 = *v7;
    outlined copy of Data._Representation(*v7, v8);
    v5[3] = v9;
    v5[4] = v8;
  }
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (void *)((char *)v5 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for SearchResult(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v2670 = v5;
        uint64_t v2680 = v13;
        uint64_t v36 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v36;
        uint64_t v37 = v12[3];
        v11[2] = v12[2];
        v11[3] = v37;
        uint64_t v38 = v12[5];
        v11[4] = v12[4];
        v11[5] = v38;
        uint64_t v39 = v12[7];
        v11[6] = v12[6];
        v11[7] = v39;
        uint64_t v40 = v12[9];
        v11[8] = v12[8];
        v11[9] = v40;
        uint64_t v41 = type metadata accessor for MobileSMSDocument(0);
        uint64_t v42 = *(int *)(v41 + 40);
        uint64_t v2641 = (char *)v11 + v42;
        uint64_t v2655 = (int *)v41;
        uint64_t v43 = (char *)v12 + v42;
        uint64_t v44 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
        {
          uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2641, v43, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v2641, v43, v44);
          __swift_storeEnumTagSinglePayload((uint64_t)v2641, 0, 1, v44);
        }
        uint64_t v312 = v2655[11];
        v313 = (char *)v11 + v312;
        uint64_t v314 = (char *)v12 + v312;
        uint64_t v315 = type metadata accessor for URL();
        uint64_t v2650 = v44;
        if (__swift_getEnumTagSinglePayload((uint64_t)v314, 1, v315))
        {
          uint64_t v316 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v313, v314, *(void *)(*(void *)(v316 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 16))(v313, v314, v315);
          __swift_storeEnumTagSinglePayload((uint64_t)v313, 0, 1, v315);
        }
        *(void *)((char *)v11 + v2655[12]) = *(void *)((char *)v12 + v2655[12]);
        uint64_t v460 = v2655[13];
        v461 = (void *)((char *)v11 + v460);
        uint64_t v462 = (void *)((char *)v12 + v460);
        uint64_t v463 = v462[1];
        void *v461 = *v462;
        v461[1] = v463;
        uint64_t v464 = v2655[14];
        v465 = (void *)((char *)v11 + v464);
        v466 = (void *)((char *)v12 + v464);
        uint64_t v467 = v466[1];
        void *v465 = *v466;
        v465[1] = v467;
        *(void *)((char *)v11 + v2655[15]) = *(void *)((char *)v12 + v2655[15]);
        *(void *)((char *)v11 + v2655[16]) = *(void *)((char *)v12 + v2655[16]);
        uint64_t v468 = v2655[17];
        v469 = (void *)((char *)v11 + v468);
        v470 = (char *)v12 + v468;
        uint64_t v471 = *(void *)((char *)v12 + v468);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v471)
        {
          uint64_t v472 = *((void *)v470 + 1);
          uint64_t v473 = *((void *)v470 + 2);
          void *v469 = v471;
          v469[1] = v472;
          uint64_t v474 = *((void *)v470 + 3);
          uint64_t v475 = *((void *)v470 + 4);
          v469[2] = v473;
          v469[3] = v474;
          v469[4] = v475;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v635 = *((_OWORD *)v470 + 1);
          *(_OWORD *)v469 = *(_OWORD *)v470;
          *((_OWORD *)v469 + 1) = v635;
          v469[4] = *((void *)v470 + 4);
        }
        uint64_t v636 = v2655[18];
        v637 = (void *)((char *)v11 + v636);
        uint64_t v638 = (void *)((char *)v12 + v636);
        uint64_t v639 = v638[1];
        void *v637 = *v638;
        v637[1] = v639;
        uint64_t v640 = v2655[19];
        v641 = (void *)((char *)v11 + v640);
        v642 = (void *)((char *)v12 + v640);
        uint64_t v643 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        swift_bridgeObjectRetain();
        uint64_t v2633 = v315;
        if (__swift_getEnumTagSinglePayload((uint64_t)v642, 1, (uint64_t)v643))
        {
          uint64_t v644 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v641, v642, *(void *)(*(void *)(v644 - 8) + 64));
        }
        else
        {
          uint64_t v681 = v642[1];
          void *v641 = *v642;
          v641[1] = v681;
          uint64_t v682 = v643[5];
          uint64_t v683 = (void *)((char *)v641 + v682);
          uint64_t v684 = (void *)((char *)v642 + v682);
          uint64_t v685 = type metadata accessor for RentalCarReservation(0);
          swift_bridgeObjectRetain();
          v2597 = v643;
          uint64_t v2615 = v641;
          uint64_t v2569 = v642;
          if (__swift_getEnumTagSinglePayload((uint64_t)v684, 1, v685))
          {
            uint64_t v686 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v683, v684, *(void *)(*(void *)(v686 - 8) + 64));
          }
          else
          {
            uint64_t v741 = v684[1];
            *uint64_t v683 = *v684;
            v683[1] = v741;
            uint64_t v742 = v684[3];
            v683[2] = v684[2];
            v683[3] = v742;
            uint64_t v743 = v684[5];
            v683[4] = v684[4];
            v683[5] = v743;
            uint64_t v744 = v684[7];
            v683[6] = v684[6];
            v683[7] = v744;
            uint64_t v745 = v684[9];
            v683[8] = v684[8];
            v683[9] = v745;
            uint64_t v746 = v684[11];
            v683[10] = v684[10];
            v683[11] = v746;
            uint64_t v747 = v684[13];
            v683[12] = v684[12];
            v683[13] = v747;
            uint64_t v748 = v684[15];
            v683[14] = v684[14];
            v683[15] = v748;
            *((unsigned char *)v683 + 128) = *((unsigned char *)v684 + 128);
            *(_WORD *)((char *)v683 + 129) = *(_WORD *)((char *)v684 + 129);
            uint64_t v749 = v684[18];
            v683[17] = v684[17];
            v683[18] = v749;
            uint64_t v750 = v684[20];
            v683[19] = v684[19];
            v683[20] = v750;
            uint64_t v751 = v684[22];
            v683[21] = v684[21];
            v683[22] = v751;
            uint64_t v2404 = v684[24];
            v683[23] = v684[23];
            v683[24] = v2404;
            uint64_t v752 = v684[26];
            v683[25] = v684[25];
            v683[26] = v752;
            uint64_t v753 = v684[28];
            v683[27] = v684[27];
            v683[28] = v753;
            uint64_t v754 = v684[30];
            v683[29] = v684[29];
            v683[30] = v754;
            uint64_t v2504 = v684[32];
            v683[31] = v684[31];
            v683[32] = v2504;
            uint64_t v755 = v684[34];
            v683[33] = v684[33];
            v683[34] = v755;
            uint64_t v756 = v684[36];
            v683[35] = v684[35];
            v683[36] = v756;
            uint64_t v757 = v684[38];
            v683[37] = v684[37];
            v683[38] = v757;
            uint64_t v758 = v684[40];
            v683[39] = v684[39];
            v683[40] = v758;
            uint64_t v759 = v684[42];
            v683[41] = v684[41];
            v683[42] = v759;
            uint64_t v760 = v684[44];
            v683[43] = v684[43];
            v683[44] = v760;
            uint64_t v761 = v684[46];
            v683[45] = v684[45];
            v683[46] = v761;
            uint64_t v762 = v684[47];
            *((unsigned char *)v683 + 384) = *((unsigned char *)v684 + 384);
            v683[47] = v762;
            uint64_t v763 = v684[50];
            v683[49] = v684[49];
            v683[50] = v763;
            uint64_t v764 = v684[52];
            v683[51] = v684[51];
            v683[52] = v764;
            uint64_t v765 = *(int *)(v685 + 140);
            uint64_t v2533 = (char *)v683 + v765;
            v766 = (char *)v684 + v765;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v766, 1, v2650))
            {
              uint64_t v767 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2533, v766, *(void *)(*(void *)(v767 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2533, v766, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v2533, 0, 1, v2650);
            }
            uint64_t v776 = *(int *)(v685 + 144);
            uint64_t v777 = (char *)v683 + v776;
            uint64_t v778 = (char *)v684 + v776;
            if (__swift_getEnumTagSinglePayload((uint64_t)v684 + v776, 1, v2650))
            {
              uint64_t v779 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v777, v778, *(void *)(*(void *)(v779 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v777, v778, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v777, 0, 1, v2650);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v683, 0, 1, v685);
            v641 = v2615;
          }
          uint64_t v832 = v643[6];
          uint64_t v833 = (void *)((char *)v641 + v832);
          uint64_t v834 = (void *)((char *)v642 + v832);
          uint64_t v835 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v834, 1, v835))
          {
            uint64_t v836 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v833, v834, *(void *)(*(void *)(v836 - 8) + 64));
          }
          else
          {
            uint64_t v837 = v834[1];
            *uint64_t v833 = *v834;
            v833[1] = v837;
            uint64_t v838 = v834[3];
            v833[2] = v834[2];
            v833[3] = v838;
            uint64_t v839 = v834[5];
            v833[4] = v834[4];
            v833[5] = v839;
            uint64_t v840 = v834[7];
            v833[6] = v834[6];
            v833[7] = v840;
            uint64_t v841 = v834[9];
            v833[8] = v834[8];
            v833[9] = v841;
            uint64_t v842 = v834[11];
            v833[10] = v834[10];
            v833[11] = v842;
            uint64_t v843 = v834[13];
            v833[12] = v834[12];
            v833[13] = v843;
            uint64_t v844 = v834[15];
            v833[14] = v834[14];
            v833[15] = v844;
            *((unsigned char *)v833 + 128) = *((unsigned char *)v834 + 128);
            *(_WORD *)((char *)v833 + 129) = *(_WORD *)((char *)v834 + 129);
            uint64_t v845 = v834[18];
            v833[17] = v834[17];
            v833[18] = v845;
            uint64_t v846 = v834[20];
            v833[19] = v834[19];
            v833[20] = v846;
            uint64_t v847 = v834[22];
            v833[21] = v834[21];
            v833[22] = v847;
            uint64_t v848 = v834[24];
            v833[23] = v834[23];
            v833[24] = v848;
            uint64_t v2506 = v834[26];
            v833[25] = v834[25];
            v833[26] = v2506;
            uint64_t v849 = v834[28];
            v833[27] = v834[27];
            v833[28] = v849;
            uint64_t v850 = v834[30];
            v833[29] = v834[29];
            v833[30] = v850;
            uint64_t v851 = v834[32];
            v833[31] = v834[31];
            v833[32] = v851;
            uint64_t v852 = v834[34];
            v833[33] = v834[33];
            v833[34] = v852;
            uint64_t v853 = v834[36];
            uint64_t v854 = v834[35];
            *((unsigned char *)v833 + 296) = *((unsigned char *)v834 + 296);
            v833[35] = v854;
            v833[36] = v853;
            uint64_t v855 = *(int *)(v835 + 112);
            uint64_t v2535 = (char *)v833 + v855;
            uint64_t v856 = (char *)v834 + v855;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v856, 1, v2650))
            {
              uint64_t v857 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2535, v856, *(void *)(*(void *)(v857 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2535, v856, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v2535, 0, 1, v2650);
            }
            uint64_t v867 = v835;
            uint64_t v868 = *(int *)(v835 + 116);
            uint64_t v869 = (char *)v833 + v868;
            uint64_t v870 = (char *)v834 + v868;
            v642 = v2569;
            if (__swift_getEnumTagSinglePayload((uint64_t)v834 + v868, 1, v2650))
            {
              uint64_t v871 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v869, v870, *(void *)(*(void *)(v871 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v869, v870, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v869, 0, 1, v2650);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v833, 0, 1, v867);
            v641 = v2615;
          }
          uint64_t v925 = v643[7];
          uint64_t v926 = (void *)((char *)v641 + v925);
          uint64_t v927 = (void *)((char *)v642 + v925);
          uint64_t v928 = type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v927, 1, v928))
          {
            uint64_t v929 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v926, v927, *(void *)(*(void *)(v929 - 8) + 64));
          }
          else
          {
            uint64_t v930 = v927[1];
            *uint64_t v926 = *v927;
            v926[1] = v930;
            uint64_t v931 = v927[3];
            v926[2] = v927[2];
            v926[3] = v931;
            uint64_t v932 = v927[5];
            v926[4] = v927[4];
            v926[5] = v932;
            uint64_t v933 = v927[7];
            v926[6] = v927[6];
            v926[7] = v933;
            uint64_t v934 = v927[9];
            v926[8] = v927[8];
            v926[9] = v934;
            uint64_t v935 = v927[11];
            v926[10] = v927[10];
            v926[11] = v935;
            uint64_t v936 = v927[13];
            v926[12] = v927[12];
            v926[13] = v936;
            uint64_t v937 = v927[15];
            v926[14] = v927[14];
            v926[15] = v937;
            *((unsigned char *)v926 + 128) = *((unsigned char *)v927 + 128);
            *(_WORD *)((char *)v926 + 129) = *(_WORD *)((char *)v927 + 129);
            uint64_t v938 = v927[18];
            v926[17] = v927[17];
            v926[18] = v938;
            uint64_t v939 = v927[20];
            v926[19] = v927[19];
            v926[20] = v939;
            uint64_t v940 = v927[22];
            v926[21] = v927[21];
            v926[22] = v940;
            uint64_t v941 = v927[24];
            v926[23] = v927[23];
            v926[24] = v941;
            uint64_t v942 = v927[26];
            v926[25] = v927[25];
            v926[26] = v942;
            uint64_t v943 = v927[28];
            v926[27] = v927[27];
            v926[28] = v943;
            v2482 = (void *)v927[30];
            v926[29] = v927[29];
            v926[30] = v2482;
            uint64_t v944 = v927[32];
            v926[31] = v927[31];
            v926[32] = v944;
            uint64_t v945 = v927[34];
            v926[33] = v927[33];
            v926[34] = v945;
            uint64_t v946 = v927[36];
            uint64_t v947 = v927[35];
            *((unsigned char *)v926 + 296) = *((unsigned char *)v927 + 296);
            v926[35] = v947;
            v926[36] = v946;
            uint64_t v948 = v927[39];
            v926[38] = v927[38];
            v926[39] = v948;
            uint64_t v949 = *(int *)(v928 + 116);
            uint64_t v2508 = (char *)v926 + v949;
            uint64_t v2537 = (int *)v928;
            v950 = (char *)v927 + v949;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v950, 1, v2633))
            {
              uint64_t v951 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2508, v950, *(void *)(*(void *)(v951 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2633 - 8) + 16))(v2508, v950, v2633);
              __swift_storeEnumTagSinglePayload((uint64_t)v2508, 0, 1, v2633);
            }
            uint64_t v968 = v2537[30];
            uint64_t v969 = (void *)((char *)v926 + v968);
            v970 = (void *)((char *)v927 + v968);
            uint64_t v971 = v970[1];
            *uint64_t v969 = *v970;
            v969[1] = v971;
            uint64_t v972 = v2537[31];
            uint64_t v973 = (char *)v926 + v972;
            v974 = (char *)v927 + v972;
            swift_bridgeObjectRetain();
            v642 = v2569;
            if (__swift_getEnumTagSinglePayload((uint64_t)v974, 1, v2650))
            {
              uint64_t v975 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v973, v974, *(void *)(*(void *)(v975 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v973, v974, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v973, 0, 1, v2650);
            }
            uint64_t v984 = v2537[32];
            uint64_t v985 = (char *)v926 + v984;
            uint64_t v986 = (char *)v927 + v984;
            if (__swift_getEnumTagSinglePayload((uint64_t)v927 + v984, 1, v2650))
            {
              uint64_t v987 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v985, v986, *(void *)(*(void *)(v987 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v985, v986, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v985, 0, 1, v2650);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v926, 0, 1, (uint64_t)v2537);
            v641 = v2615;
          }
          uint64_t v1042 = v643[8];
          uint64_t v1043 = (void *)((char *)v641 + v1042);
          uint64_t v1044 = (void *)((char *)v642 + v1042);
          uint64_t v1045 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1044, 1, v1045))
          {
            uint64_t v1046 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v1043, v1044, *(void *)(*(void *)(v1046 - 8) + 64));
          }
          else
          {
            uint64_t v1047 = v1044[1];
            *uint64_t v1043 = *v1044;
            v1043[1] = v1047;
            uint64_t v1048 = v1044[3];
            v1043[2] = v1044[2];
            v1043[3] = v1048;
            uint64_t v1049 = v1044[5];
            v1043[4] = v1044[4];
            v1043[5] = v1049;
            uint64_t v1050 = v1044[7];
            v1043[6] = v1044[6];
            v1043[7] = v1050;
            uint64_t v1051 = v1044[9];
            v1043[8] = v1044[8];
            v1043[9] = v1051;
            uint64_t v1052 = v1044[11];
            v1043[10] = v1044[10];
            v1043[11] = v1052;
            uint64_t v1053 = v1044[13];
            v1043[12] = v1044[12];
            v1043[13] = v1053;
            uint64_t v1054 = v1044[15];
            v1043[14] = v1044[14];
            v1043[15] = v1054;
            *((unsigned char *)v1043 + 128) = *((unsigned char *)v1044 + 128);
            *(_WORD *)((char *)v1043 + 129) = *(_WORD *)((char *)v1044 + 129);
            uint64_t v1055 = v1044[18];
            v1043[17] = v1044[17];
            v1043[18] = v1055;
            uint64_t v1056 = v1044[20];
            v1043[19] = v1044[19];
            v1043[20] = v1056;
            uint64_t v1057 = v1044[22];
            v1043[21] = v1044[21];
            v1043[22] = v1057;
            uint64_t v1058 = v1044[24];
            v1043[23] = v1044[23];
            v1043[24] = v1058;
            uint64_t v1059 = v1044[26];
            v1043[25] = v1044[25];
            v1043[26] = v1059;
            uint64_t v1060 = v1044[28];
            v1043[27] = v1044[27];
            v1043[28] = v1060;
            uint64_t v1061 = v1044[30];
            v1043[29] = v1044[29];
            v1043[30] = v1061;
            uint64_t v1062 = v1044[32];
            v1043[31] = v1044[31];
            v1043[32] = v1062;
            uint64_t v1063 = v1044[34];
            uint64_t v1064 = v1044[33];
            *((unsigned char *)v1043 + 280) = *((unsigned char *)v1044 + 280);
            v1043[33] = v1064;
            v1043[34] = v1063;
            uint64_t v1065 = v1044[37];
            v1043[36] = v1044[36];
            v1043[37] = v1065;
            uint64_t v1066 = *(int *)(v1045 + 108);
            v2539 = (char *)v1043 + v1066;
            uint64_t v1067 = (char *)v1044 + v1066;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1067, 1, v2650))
            {
              uint64_t v1068 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2539, v1067, *(void *)(*(void *)(v1068 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2539, v1067, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v2539, 0, 1, v2650);
            }
            uint64_t v1078 = v1045;
            uint64_t v1079 = *(int *)(v1045 + 112);
            uint64_t v1080 = (char *)v1043 + v1079;
            uint64_t v1081 = (char *)v1044 + v1079;
            v642 = v2569;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1044 + v1079, 1, v2650))
            {
              uint64_t v1082 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1080, v1081, *(void *)(*(void *)(v1082 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v1080, v1081, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v1080, 0, 1, v2650);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v1043, 0, 1, v1078);
            v641 = v2615;
          }
          uint64_t v1127 = v643[9];
          uint64_t v1128 = (void *)((char *)v641 + v1127);
          uint64_t v1129 = (void *)((char *)v642 + v1127);
          uint64_t v1130 = type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1129, 1, v1130))
          {
            uint64_t v1131 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v1128, v1129, *(void *)(*(void *)(v1131 - 8) + 64));
          }
          else
          {
            uint64_t v1132 = v1129[1];
            *uint64_t v1128 = *v1129;
            v1128[1] = v1132;
            uint64_t v1133 = v1129[3];
            v1128[2] = v1129[2];
            v1128[3] = v1133;
            uint64_t v1134 = v1129[5];
            v1128[4] = v1129[4];
            v1128[5] = v1134;
            uint64_t v1135 = v1129[7];
            v1128[6] = v1129[6];
            v1128[7] = v1135;
            uint64_t v1136 = v1129[9];
            v1128[8] = v1129[8];
            v1128[9] = v1136;
            uint64_t v1137 = v1129[11];
            v1128[10] = v1129[10];
            v1128[11] = v1137;
            uint64_t v1138 = v1129[13];
            v1128[12] = v1129[12];
            v1128[13] = v1138;
            uint64_t v1139 = v1129[15];
            v1128[14] = v1129[14];
            v1128[15] = v1139;
            *((unsigned char *)v1128 + 128) = *((unsigned char *)v1129 + 128);
            *(_WORD *)((char *)v1128 + 129) = *(_WORD *)((char *)v1129 + 129);
            uint64_t v1140 = v1129[18];
            v1128[17] = v1129[17];
            v1128[18] = v1140;
            uint64_t v1141 = v1129[20];
            v1128[19] = v1129[19];
            v1128[20] = v1141;
            uint64_t v1142 = v1129[22];
            v1128[21] = v1129[21];
            v1128[22] = v1142;
            uint64_t v1143 = v1129[24];
            v1128[23] = v1129[23];
            v1128[24] = v1143;
            uint64_t v1144 = v1129[26];
            v1128[25] = v1129[25];
            v1128[26] = v1144;
            uint64_t v1145 = v1129[28];
            v1128[27] = v1129[27];
            v1128[28] = v1145;
            uint64_t v1146 = v1129[30];
            v1128[29] = v1129[29];
            v1128[30] = v1146;
            v1128[31] = v1129[31];
            uint64_t v2541 = v1130;
            uint64_t v1147 = *(int *)(v1130 + 96);
            v2509 = (char *)v1128 + v1147;
            v2412 = (char *)v1129 + v1147;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2412, 1, v2650))
            {
              uint64_t v1148 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2509, v2412, *(void *)(*(void *)(v1148 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2509, v2412, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v2509, 0, 1, v2650);
            }
            uint64_t v1157 = *(int *)(v1130 + 100);
            uint64_t v1158 = (char *)v1128 + v1157;
            uint64_t v1159 = (char *)v1129 + v1157;
            v642 = v2569;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1129 + v1157, 1, v2650))
            {
              uint64_t v1160 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1158, v1159, *(void *)(*(void *)(v1160 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v1158, v1159, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v1158, 0, 1, v2650);
            }
            uint64_t v1171 = *(int *)(v2541 + 104);
            uint64_t v1172 = (char *)v1128 + v1171;
            uint64_t v1173 = (char *)v1129 + v1171;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1129 + v1171, 1, v2633))
            {
              uint64_t v1174 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1172, v1173, *(void *)(*(void *)(v1174 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2633 - 8) + 16))(v1172, v1173, v2633);
              __swift_storeEnumTagSinglePayload((uint64_t)v1172, 0, 1, v2633);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v1128, 0, 1, v2541);
            v641 = v2615;
          }
          uint64_t v1215 = v643[10];
          uint64_t v1216 = (void *)((char *)v641 + v1215);
          uint64_t v1217 = (void *)((char *)v642 + v1215);
          uint64_t v1218 = type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1217, 1, v1218))
          {
            uint64_t v1219 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v1216, v1217, *(void *)(*(void *)(v1219 - 8) + 64));
          }
          else
          {
            uint64_t v1220 = v1217[1];
            *uint64_t v1216 = *v1217;
            v1216[1] = v1220;
            uint64_t v1221 = v1217[3];
            v1216[2] = v1217[2];
            v1216[3] = v1221;
            uint64_t v1222 = v1217[5];
            v1216[4] = v1217[4];
            v1216[5] = v1222;
            uint64_t v1223 = v1217[7];
            v1216[6] = v1217[6];
            v1216[7] = v1223;
            uint64_t v1224 = v1217[9];
            v1216[8] = v1217[8];
            v1216[9] = v1224;
            uint64_t v1225 = v1217[11];
            v1216[10] = v1217[10];
            v1216[11] = v1225;
            uint64_t v1226 = v1217[13];
            v1216[12] = v1217[12];
            v1216[13] = v1226;
            uint64_t v1227 = v1217[15];
            v1216[14] = v1217[14];
            v1216[15] = v1227;
            *((unsigned char *)v1216 + 128) = *((unsigned char *)v1217 + 128);
            *(_WORD *)((char *)v1216 + 129) = *(_WORD *)((char *)v1217 + 129);
            uint64_t v1228 = v1217[18];
            v1216[17] = v1217[17];
            v1216[18] = v1228;
            uint64_t v1229 = v1217[20];
            v1216[19] = v1217[19];
            v1216[20] = v1229;
            uint64_t v1230 = v1217[22];
            v1216[21] = v1217[21];
            v1216[22] = v1230;
            uint64_t v1231 = v1217[24];
            v1216[23] = v1217[23];
            v1216[24] = v1231;
            uint64_t v1232 = v1217[26];
            v1216[25] = v1217[25];
            v1216[26] = v1232;
            v1216[27] = v1217[27];
            uint64_t v2543 = v1218;
            uint64_t v1233 = *(int *)(v1218 + 88);
            uint64_t v2510 = (char *)v1216 + v1233;
            v2418 = (char *)v1217 + v1233;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2418, 1, v2650))
            {
              uint64_t v1234 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2510, v2418, *(void *)(*(void *)(v1234 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2510, v2418, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v2510, 0, 1, v2650);
            }
            uint64_t v1243 = *(int *)(v1218 + 92);
            uint64_t v1244 = (char *)v1216 + v1243;
            v1245 = (char *)v1217 + v1243;
            v642 = v2569;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1217 + v1243, 1, v2650))
            {
              uint64_t v1246 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1244, v1245, *(void *)(*(void *)(v1246 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v1244, v1245, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v1244, 0, 1, v2650);
            }
            uint64_t v1263 = *(int *)(v2543 + 96);
            uint64_t v1264 = (char *)v1216 + v1263;
            v1265 = (char *)v1217 + v1263;
            *(void *)uint64_t v1264 = *(void *)v1265;
            v1264[8] = v1265[8];
            uint64_t v1266 = *(int *)(v2543 + 100);
            v1267 = (char *)v1216 + v1266;
            uint64_t v1268 = (char *)v1217 + v1266;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1217 + v1266, 1, v2633))
            {
              uint64_t v1269 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1267, v1268, *(void *)(*(void *)(v1269 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2633 - 8) + 16))(v1267, v1268, v2633);
              __swift_storeEnumTagSinglePayload((uint64_t)v1267, 0, 1, v2633);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v1216, 0, 1, v2543);
            v641 = v2615;
          }
          uint64_t v1300 = v643[11];
          uint64_t v1301 = (void *)((char *)v641 + v1300);
          uint64_t v1302 = (void *)((char *)v642 + v1300);
          uint64_t v1303 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1302, 1, (uint64_t)v1303))
          {
            uint64_t v1304 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v1301, v1302, *(void *)(*(void *)(v1304 - 8) + 64));
          }
          else
          {
            uint64_t v1305 = v1302[1];
            *uint64_t v1301 = *v1302;
            v1301[1] = v1305;
            uint64_t v1306 = v1302[3];
            v1301[2] = v1302[2];
            v1301[3] = v1306;
            uint64_t v1307 = v1302[5];
            v1301[4] = v1302[4];
            v1301[5] = v1307;
            uint64_t v2512 = v1302[7];
            v1301[6] = v1302[6];
            v1301[7] = v2512;
            uint64_t v1308 = v1302[9];
            v1301[8] = v1302[8];
            v1301[9] = v1308;
            uint64_t v1309 = v1302[11];
            v1301[10] = v1302[10];
            v1301[11] = v1309;
            *((unsigned char *)v1301 + 96) = *((unsigned char *)v1302 + 96);
            uint64_t v1310 = v1302[14];
            v1301[13] = v1302[13];
            v1301[14] = v1310;
            uint64_t v1311 = v1303[13];
            uint64_t v2545 = (char *)v1301 + v1311;
            uint64_t v2471 = (char *)v1302 + v1311;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2471, 1, v2633))
            {
              uint64_t v1312 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2545, v2471, *(void *)(*(void *)(v1312 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2633 - 8) + 16))(v2545, v2471, v2633);
              __swift_storeEnumTagSinglePayload((uint64_t)v2545, 0, 1, v2633);
            }
            uint64_t v1321 = v1303[14];
            v1322 = (char *)v1301 + v1321;
            v1323 = (char *)v1302 + v1321;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1302 + v1321, 1, v2633))
            {
              uint64_t v1324 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1322, v1323, *(void *)(*(void *)(v1324 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2633 - 8) + 16))(v1322, v1323, v2633);
              __swift_storeEnumTagSinglePayload((uint64_t)v1322, 0, 1, v2633);
            }
            uint64_t v1465 = v1303[15];
            uint64_t v1466 = (void *)((char *)v1301 + v1465);
            uint64_t v1467 = (void *)((char *)v1302 + v1465);
            uint64_t v2548 = v1467[1];
            *uint64_t v1466 = *v1467;
            v1466[1] = v2548;
            uint64_t v1468 = v1303[16];
            uint64_t v1469 = (void *)((char *)v1301 + v1468);
            v1470 = (void *)((char *)v1302 + v1468);
            uint64_t v1471 = v1470[1];
            *uint64_t v1469 = *v1470;
            v1469[1] = v1471;
            uint64_t v1472 = v1303[17];
            uint64_t v1473 = (void *)((char *)v1301 + v1472);
            v1474 = (void *)((char *)v1302 + v1472);
            uint64_t v1475 = v1474[1];
            *uint64_t v1473 = *v1474;
            v1473[1] = v1475;
            uint64_t v1476 = v1303[18];
            uint64_t v2515 = (char *)v1301 + v1476;
            uint64_t v2490 = (char *)v1302 + v1476;
            uint64_t v1477 = type metadata accessor for DateComponents();
            v1478 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1477 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1478(v2515, v2490, v1477);
            v1478((char *)v1301 + v1303[19], (char *)v1302 + v1303[19], v1477);
            uint64_t v1479 = v1303[20];
            v1480 = (void *)((char *)v1301 + v1479);
            v1481 = (void *)((char *)v1302 + v1479);
            uint64_t v1482 = v1481[1];
            void *v1480 = *v1481;
            v1480[1] = v1482;
            uint64_t v1483 = v1303[21];
            v1484 = (void *)((char *)v1301 + v1483);
            uint64_t v1485 = (void *)((char *)v1302 + v1483);
            uint64_t v1486 = v1485[1];
            void *v1484 = *v1485;
            v1484[1] = v1486;
            uint64_t v1487 = v1303[22];
            uint64_t v1488 = (void *)((char *)v1301 + v1487);
            v1489 = (void *)((char *)v1302 + v1487);
            uint64_t v2516 = v1489[1];
            *uint64_t v1488 = *v1489;
            v1488[1] = v2516;
            uint64_t v1490 = v1303[23];
            uint64_t v1491 = (void *)((char *)v1301 + v1490);
            v1492 = (void *)((char *)v1302 + v1490);
            uint64_t v2491 = (void *)v1492[1];
            *uint64_t v1491 = *v1492;
            v1491[1] = v2491;
            uint64_t v1493 = v1303[24];
            uint64_t v1494 = (void *)((char *)v1301 + v1493);
            v1495 = (void *)((char *)v1302 + v1493);
            uint64_t v2475 = (void *)v1495[1];
            *uint64_t v1494 = *v1495;
            v1494[1] = v2475;
            uint64_t v1496 = v1303[25];
            uint64_t v1497 = (void *)((char *)v1301 + v1496);
            v1498 = (void *)((char *)v1302 + v1496);
            v2460 = (void *)v1498[1];
            *uint64_t v1497 = *v1498;
            v1497[1] = v2460;
            uint64_t v1499 = v1303[26];
            uint64_t v1500 = (void *)((char *)v1301 + v1499);
            v1501 = (void *)((char *)v1302 + v1499);
            uint64_t v2451 = v1501[1];
            *uint64_t v1500 = *v1501;
            v1500[1] = v2451;
            uint64_t v1502 = v1303[27];
            uint64_t v1503 = (void *)((char *)v1301 + v1502);
            v1504 = (void *)((char *)v1302 + v1502);
            uint64_t v2445 = (void *)v1504[1];
            *uint64_t v1503 = *v1504;
            v1503[1] = v2445;
            uint64_t v1505 = v1303[28];
            uint64_t v1506 = (void *)((char *)v1301 + v1505);
            v1507 = (void *)((char *)v1302 + v1505);
            v2438 = (void *)v1507[1];
            *uint64_t v1506 = *v1507;
            v1506[1] = v2438;
            uint64_t v1508 = v1303[29];
            uint64_t v1509 = (void *)((char *)v1301 + v1508);
            uint64_t v1510 = (void *)((char *)v1302 + v1508);
            v2432 = (void *)v1510[1];
            *uint64_t v1509 = *v1510;
            v1509[1] = v2432;
            uint64_t v1511 = v1303[30];
            v1512 = (void *)((char *)v1301 + v1511);
            uint64_t v1513 = (void *)((char *)v1302 + v1511);
            uint64_t v2427 = (void *)v1513[1];
            void *v1512 = *v1513;
            v1512[1] = v2427;
            uint64_t v1514 = v1303[31];
            v1515 = (void *)((char *)v1301 + v1514);
            v1516 = (void *)((char *)v1302 + v1514);
            v2421 = (void *)v1516[1];
            void *v1515 = *v1516;
            v1515[1] = v2421;
            uint64_t v1517 = v1303[32];
            uint64_t v1518 = (void *)((char *)v1301 + v1517);
            v1519 = (void *)((char *)v1302 + v1517);
            uint64_t v1520 = v1519[1];
            *uint64_t v1518 = *v1519;
            v1518[1] = v1520;
            *(void *)((char *)v1301 + v1303[33]) = *(void *)((char *)v1302 + v1303[33]);
            *(void *)((char *)v1301 + v1303[34]) = *(void *)((char *)v1302 + v1303[34]);
            uint64_t v1521 = v1303[35];
            uint64_t v1522 = (void *)((char *)v1301 + v1521);
            uint64_t v1523 = (void *)((char *)v1302 + v1521);
            uint64_t v1524 = v1523[1];
            *uint64_t v1522 = *v1523;
            v1522[1] = v1524;
            uint64_t v1525 = v1303[36];
            v1526 = (void *)((char *)v1301 + v1525);
            uint64_t v1527 = (void *)((char *)v1302 + v1525);
            uint64_t v1528 = v1527[1];
            void *v1526 = *v1527;
            v1526[1] = v1528;
            uint64_t v1529 = v1303[37];
            v1530 = (void *)((char *)v1301 + v1529);
            uint64_t v1531 = (void *)((char *)v1302 + v1529);
            uint64_t v1532 = v1531[1];
            void *v1530 = *v1531;
            v1530[1] = v1532;
            uint64_t v1533 = v1303[38];
            v2549 = (char *)v1301 + v1533;
            v2411 = (char *)v1302 + v1533;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2411, 1, v2650))
            {
              uint64_t v1534 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2549, v2411, *(void *)(*(void *)(v1534 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2549, v2411, v2650);
              __swift_storeEnumTagSinglePayload((uint64_t)v2549, 0, 1, v2650);
            }
            uint64_t v1631 = v1303[39];
            v1632 = (void *)((char *)v1301 + v1631);
            v1633 = (void *)((char *)v1302 + v1631);
            uint64_t v1634 = v1633[1];
            void *v1632 = *v1633;
            v1632[1] = v1634;
            uint64_t v1635 = v1303[40];
            v1636 = (void *)((char *)v1301 + v1635);
            v1637 = (void *)((char *)v1302 + v1635);
            uint64_t v1638 = v1637[1];
            void *v1636 = *v1637;
            v1636[1] = v1638;
            uint64_t v1639 = v1303[41];
            v1640 = (char *)v1301 + v1639;
            uint64_t v1641 = (char *)v1302 + v1639;
            v1640[8] = v1641[8];
            *(void *)v1640 = *(void *)v1641;
            uint64_t v1642 = v1303[42];
            v1643 = (void *)((char *)v1301 + v1642);
            v1644 = (void *)((char *)v1302 + v1642);
            uint64_t v1645 = v1644[1];
            void *v1643 = *v1644;
            v1643[1] = v1645;
            uint64_t v1646 = v1303[43];
            v1647 = (char *)v1301 + v1646;
            v1648 = (char *)v1302 + v1646;
            *(_OWORD *)v1647 = *(_OWORD *)v1648;
            *(void *)(v1647 + 13) = *(void *)(v1648 + 13);
            uint64_t v1649 = v1303[44];
            uint64_t v1650 = (void *)((char *)v1301 + v1649);
            v1651 = (void *)((char *)v1302 + v1649);
            uint64_t v1652 = v1651[1];
            *uint64_t v1650 = *v1651;
            v1650[1] = v1652;
            uint64_t v1653 = v1303[45];
            uint64_t v1654 = (void *)((char *)v1301 + v1653);
            v1655 = (void *)((char *)v1302 + v1653);
            uint64_t v1656 = v1655[1];
            *uint64_t v1654 = *v1655;
            v1654[1] = v1656;
            uint64_t v1657 = v1303[46];
            uint64_t v1658 = (void *)((char *)v1301 + v1657);
            uint64_t v1659 = (void *)((char *)v1302 + v1657);
            uint64_t v1660 = v1659[1];
            *uint64_t v1658 = *v1659;
            v1658[1] = v1660;
            uint64_t v1661 = v1303[47];
            uint64_t v1662 = (void *)((char *)v1301 + v1661);
            uint64_t v1663 = (void *)((char *)v1302 + v1661);
            uint64_t v1664 = v1663[1];
            *uint64_t v1662 = *v1663;
            v1662[1] = v1664;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1301, 0, 1, (uint64_t)v1303);
            uint64_t v643 = v2597;
            v641 = v2615;
            v642 = v2569;
          }
          uint64_t v1665 = v643[12];
          uint64_t v1666 = (void *)((char *)v641 + v1665);
          uint64_t v1667 = (void *)((char *)v642 + v1665);
          uint64_t v1668 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1667, 1, (uint64_t)v1668))
          {
            uint64_t v1669 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v1666, v1667, *(void *)(*(void *)(v1669 - 8) + 64));
          }
          else
          {
            uint64_t v1670 = v1667[1];
            *uint64_t v1666 = *v1667;
            v1666[1] = v1670;
            uint64_t v2518 = v1667[3];
            v1666[2] = v1667[2];
            v1666[3] = v2518;
            uint64_t v1671 = v1667[5];
            v1666[4] = v1667[4];
            v1666[5] = v1671;
            uint64_t v1672 = v1667[7];
            v1666[6] = v1667[6];
            v1666[7] = v1672;
            uint64_t v1673 = v1667[9];
            v1666[8] = v1667[8];
            v1666[9] = v1673;
            uint64_t v1674 = v1667[11];
            v1666[10] = v1667[10];
            v1666[11] = v1674;
            *((unsigned char *)v1666 + 96) = *((unsigned char *)v1667 + 96);
            uint64_t v1675 = v1667[14];
            v1666[13] = v1667[13];
            v1666[14] = v1675;
            uint64_t v1676 = v1667[16];
            v1666[15] = v1667[15];
            v1666[16] = v1676;
            uint64_t v1677 = v1668[14];
            v2551 = (char *)v1666 + v1677;
            v2453 = (char *)v1667 + v1677;
            v2446 = (void *)type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2453, 1, (uint64_t)v2446))
            {
              uint64_t v1678 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2551, v2453, *(void *)(*(void *)(v1678 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v2446 - 1) + 16))(v2551, v2453, v2446);
              __swift_storeEnumTagSinglePayload((uint64_t)v2551, 0, 1, (uint64_t)v2446);
            }
            uint64_t v1687 = v1668[15];
            v1688 = (char *)v1666 + v1687;
            v1689 = (char *)v1667 + v1687;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1667 + v1687, 1, (uint64_t)v2446))
            {
              uint64_t v1690 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1688, v1689, *(void *)(*(void *)(v1690 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v2446 - 1) + 16))(v1688, v1689, v2446);
              __swift_storeEnumTagSinglePayload((uint64_t)v1688, 0, 1, (uint64_t)v2446);
            }
            uint64_t v1804 = v1668[16];
            v1805 = (void *)((char *)v1666 + v1804);
            uint64_t v1806 = (void *)((char *)v1667 + v1804);
            uint64_t v1807 = v1806[1];
            void *v1805 = *v1806;
            v1805[1] = v1807;
            uint64_t v1808 = v1668[17];
            uint64_t v1809 = (void *)((char *)v1666 + v1808);
            v1810 = (void *)((char *)v1667 + v1808);
            uint64_t v2554 = v1810[1];
            *uint64_t v1809 = *v1810;
            v1809[1] = v2554;
            uint64_t v1811 = v1668[18];
            uint64_t v1812 = (void *)((char *)v1666 + v1811);
            v1813 = (void *)((char *)v1667 + v1811);
            uint64_t v2522 = v1813[1];
            *uint64_t v1812 = *v1813;
            v1812[1] = v2522;
            uint64_t v1814 = v1668[19];
            uint64_t v1815 = (void *)((char *)v1666 + v1814);
            uint64_t v1816 = (void *)((char *)v1667 + v1814);
            v2494 = (void *)v1816[1];
            *uint64_t v1815 = *v1816;
            v1815[1] = v2494;
            uint64_t v1817 = v1668[20];
            v1818 = (void *)((char *)v1666 + v1817);
            uint64_t v1819 = (void *)((char *)v1667 + v1817);
            uint64_t v1820 = v1819[1];
            void *v1818 = *v1819;
            v1818[1] = v1820;
            *(void *)((char *)v1666 + v1668[21]) = *(void *)((char *)v1667 + v1668[21]);
            *(void *)((char *)v1666 + v1668[22]) = *(void *)((char *)v1667 + v1668[22]);
            uint64_t v1821 = v1668[23];
            v1822 = (char *)v1666 + v1821;
            uint64_t v1823 = (char *)v1667 + v1821;
            *(void *)v1822 = *(void *)v1823;
            v1822[8] = v1823[8];
            uint64_t v1824 = v1668[24];
            v1825 = (char *)v1666 + v1824;
            v1826 = (char *)v1667 + v1824;
            *(void *)v1825 = *(void *)v1826;
            v1825[8] = v1826[8];
            uint64_t v1827 = v1668[25];
            uint64_t v1828 = (void *)((char *)v1666 + v1827);
            v1829 = (void *)((char *)v1667 + v1827);
            uint64_t v1830 = v1829[1];
            *uint64_t v1828 = *v1829;
            v1828[1] = v1830;
            uint64_t v1831 = v1668[26];
            v1832 = (void *)((char *)v1666 + v1831);
            v1833 = (void *)((char *)v1667 + v1831);
            uint64_t v1834 = v1833[1];
            void *v1832 = *v1833;
            v1832[1] = v1834;
            uint64_t v1835 = v1668[27];
            uint64_t v1836 = (void *)((char *)v1666 + v1835);
            uint64_t v1837 = (void *)((char *)v1667 + v1835);
            uint64_t v1838 = v1837[1];
            *uint64_t v1836 = *v1837;
            v1836[1] = v1838;
            uint64_t v1839 = v1668[28];
            uint64_t v1840 = (void *)((char *)v1666 + v1839);
            uint64_t v1841 = (void *)((char *)v1667 + v1839);
            uint64_t v1842 = v1841[1];
            *uint64_t v1840 = *v1841;
            v1840[1] = v1842;
            uint64_t v1843 = v1668[29];
            uint64_t v1844 = (char *)v1666 + v1843;
            v1845 = (char *)v1667 + v1843;
            *(void *)uint64_t v1844 = *(void *)v1845;
            v1844[8] = v1845[8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1666, 0, 1, (uint64_t)v1668);
            uint64_t v643 = v2597;
            v641 = v2615;
            v642 = v2569;
          }
          uint64_t v1846 = v643[13];
          uint64_t v1847 = (void *)((char *)v641 + v1846);
          uint64_t v1848 = (void *)((char *)v642 + v1846);
          v1849 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1848, 1, (uint64_t)v1849))
          {
            uint64_t v1850 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v1847, v1848, *(void *)(*(void *)(v1850 - 8) + 64));
          }
          else
          {
            uint64_t v1851 = v1848[1];
            *uint64_t v1847 = *v1848;
            v1847[1] = v1851;
            uint64_t v2555 = v1848[3];
            v1847[2] = v1848[2];
            v1847[3] = v2555;
            uint64_t v2523 = v1848[5];
            v1847[4] = v1848[4];
            v1847[5] = v2523;
            uint64_t v1852 = v1848[7];
            v1847[6] = v1848[6];
            v1847[7] = v1852;
            uint64_t v1853 = v1848[9];
            v1847[8] = v1848[8];
            v1847[9] = v1853;
            uint64_t v1854 = v1848[11];
            v1847[10] = v1848[10];
            v1847[11] = v1854;
            *((unsigned char *)v1847 + 96) = *((unsigned char *)v1848 + 96);
            uint64_t v1855 = v1848[14];
            v1847[13] = v1848[13];
            v1847[14] = v1855;
            uint64_t v1856 = v1848[16];
            v1847[15] = v1848[15];
            v1847[16] = v1856;
            uint64_t v1857 = v1849[14];
            v2578 = (char *)v1847 + v1857;
            v2454 = (char *)v1848 + v1857;
            uint64_t v1858 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2454, 1, v1858))
            {
              uint64_t v1859 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2578, v2454, *(void *)(*(void *)(v1859 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1858 - 8) + 16))(v2578, v2454, v1858);
              __swift_storeEnumTagSinglePayload((uint64_t)v2578, 0, 1, v1858);
            }
            uint64_t v2216 = v1849[15];
            v2217 = (void *)((char *)v1847 + v2216);
            v2218 = (void *)((char *)v1848 + v2216);
            uint64_t v2219 = v2218[1];
            void *v2217 = *v2218;
            v2217[1] = v2219;
            uint64_t v2220 = v1849[16];
            v2221 = (void *)((char *)v1847 + v2220);
            v2222 = (void *)((char *)v1848 + v2220);
            uint64_t v2585 = v2222[1];
            void *v2221 = *v2222;
            v2221[1] = v2585;
            uint64_t v2223 = v1849[17];
            uint64_t v2224 = (void *)((char *)v1847 + v2223);
            v2225 = (void *)((char *)v1848 + v2223);
            uint64_t v2559 = v2225[1];
            *uint64_t v2224 = *v2225;
            v2224[1] = v2559;
            uint64_t v2226 = v1849[18];
            uint64_t v2227 = (void *)((char *)v1847 + v2226);
            uint64_t v2228 = (void *)((char *)v1848 + v2226);
            uint64_t v2229 = v2228[1];
            *uint64_t v2227 = *v2228;
            v2227[1] = v2229;
            uint64_t v2230 = v1849[19];
            uint64_t v2231 = (void *)((char *)v1847 + v2230);
            uint64_t v2232 = (void *)((char *)v1848 + v2230);
            uint64_t v2233 = v2232[1];
            *uint64_t v2231 = *v2232;
            v2231[1] = v2233;
            *(void *)((char *)v1847 + v1849[20]) = *(void *)((char *)v1848 + v1849[20]);
            uint64_t v2234 = v1849[21];
            v2235 = (void *)((char *)v1847 + v2234);
            uint64_t v2236 = (void *)((char *)v1848 + v2234);
            uint64_t v2237 = v2236[1];
            void *v2235 = *v2236;
            v2235[1] = v2237;
            uint64_t v2238 = v1849[22];
            uint64_t v2239 = (void *)((char *)v1847 + v2238);
            uint64_t v2240 = (void *)((char *)v1848 + v2238);
            uint64_t v2241 = v2240[1];
            *uint64_t v2239 = *v2240;
            v2239[1] = v2241;
            uint64_t v2242 = v1849[23];
            v2243 = (void *)((char *)v1847 + v2242);
            v2244 = (void *)((char *)v1848 + v2242);
            uint64_t v2245 = v2244[1];
            void *v2243 = *v2244;
            v2243[1] = v2245;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1847, 0, 1, (uint64_t)v1849);
            uint64_t v643 = v2597;
            v641 = v2615;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v641, 0, 1, (uint64_t)v643);
        }
        uint64_t v2246 = v2655[20];
        v2247 = (void *)((char *)v11 + v2246);
        v2248 = (void *)((char *)v12 + v2246);
        uint64_t v2249 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2248, 1, (uint64_t)v2249))
        {
          uint64_t v2250 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v2247, v2248, *(void *)(*(void *)(v2250 - 8) + 64));
        }
        else
        {
          uint64_t v2251 = v2248[1];
          void *v2247 = *v2248;
          v2247[1] = v2251;
          uint64_t v2252 = v2248[3];
          v2247[2] = v2248[2];
          v2247[3] = v2252;
          uint64_t v2253 = v2248[5];
          v2247[4] = v2248[4];
          v2247[5] = v2253;
          uint64_t v2254 = v2248[7];
          v2247[6] = v2248[6];
          v2247[7] = v2254;
          uint64_t v2255 = v2248[9];
          v2247[8] = v2248[8];
          v2247[9] = v2255;
          uint64_t v2256 = v2248[11];
          v2247[10] = v2248[10];
          v2247[11] = v2256;
          uint64_t v2257 = v2249[10];
          uint64_t v2601 = (char *)v2248 + v2257;
          uint64_t v2619 = (char *)v2247 + v2257;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2601, 1, v2650))
          {
            uint64_t v2258 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2619, v2601, *(void *)(*(void *)(v2258 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2619, v2601, v2650);
            __swift_storeEnumTagSinglePayload((uint64_t)v2619, 0, 1, v2650);
          }
          uint64_t v2259 = v2249[11];
          v2260 = (char *)v2247 + v2259;
          uint64_t v2261 = (char *)v2248 + v2259;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2248 + v2259, 1, v2650))
          {
            uint64_t v2262 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2260, v2261, *(void *)(*(void *)(v2262 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2260, v2261, v2650);
            __swift_storeEnumTagSinglePayload((uint64_t)v2260, 0, 1, v2650);
          }
          uint64_t v2263 = v2249[12];
          v2264 = (void *)((char *)v2247 + v2263);
          uint64_t v2265 = (void *)((char *)v2248 + v2263);
          uint64_t v2266 = v2265[1];
          void *v2264 = *v2265;
          v2264[1] = v2266;
          uint64_t v2267 = v2249[13];
          v2268 = (void *)((char *)v2247 + v2267);
          uint64_t v2269 = (void *)((char *)v2248 + v2267);
          uint64_t v2270 = v2269[1];
          void *v2268 = *v2269;
          v2268[1] = v2270;
          uint64_t v2271 = v2249[14];
          uint64_t v2272 = (void *)((char *)v2247 + v2271);
          v2273 = (void *)((char *)v2248 + v2271);
          uint64_t v2274 = v2273[1];
          *uint64_t v2272 = *v2273;
          v2272[1] = v2274;
          uint64_t v2275 = v2249[15];
          uint64_t v2276 = (char *)v2247 + v2275;
          v2277 = (char *)v2248 + v2275;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2277, 1, v2650))
          {
            uint64_t v2278 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2276, v2277, *(void *)(*(void *)(v2278 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2276, v2277, v2650);
            __swift_storeEnumTagSinglePayload((uint64_t)v2276, 0, 1, v2650);
          }
          uint64_t v2279 = v2249[16];
          uint64_t v2280 = (void *)((char *)v2247 + v2279);
          v2281 = (void *)((char *)v2248 + v2279);
          uint64_t v2282 = v2281[1];
          *uint64_t v2280 = *v2281;
          v2280[1] = v2282;
          uint64_t v2283 = v2249[17];
          uint64_t v2284 = (void *)((char *)v2247 + v2283);
          v2285 = (void *)((char *)v2248 + v2283);
          uint64_t v2620 = v2285[1];
          *uint64_t v2284 = *v2285;
          v2284[1] = v2620;
          uint64_t v2286 = v2249[18];
          uint64_t v2287 = (void *)((char *)v2247 + v2286);
          uint64_t v2288 = (void *)((char *)v2248 + v2286);
          uint64_t v2289 = v2288[1];
          *uint64_t v2287 = *v2288;
          v2287[1] = v2289;
          uint64_t v2290 = v2249[19];
          uint64_t v2291 = (void *)((char *)v2247 + v2290);
          uint64_t v2292 = (void *)((char *)v2248 + v2290);
          uint64_t v2293 = v2292[1];
          *uint64_t v2291 = *v2292;
          v2291[1] = v2293;
          uint64_t v2294 = v2249[20];
          v2295 = (void *)((char *)v2247 + v2294);
          uint64_t v2296 = (void *)((char *)v2248 + v2294);
          uint64_t v2297 = v2296[1];
          void *v2295 = *v2296;
          v2295[1] = v2297;
          uint64_t v2298 = v2249[21];
          uint64_t v2299 = (void *)((char *)v2247 + v2298);
          uint64_t v2300 = (void *)((char *)v2248 + v2298);
          uint64_t v2301 = v2300[1];
          *uint64_t v2299 = *v2300;
          v2299[1] = v2301;
          uint64_t v2302 = v2249[22];
          uint64_t v2303 = (void *)((char *)v2247 + v2302);
          v2304 = (void *)((char *)v2248 + v2302);
          uint64_t v2305 = v2304[1];
          *uint64_t v2303 = *v2304;
          v2303[1] = v2305;
          uint64_t v2306 = v2249[23];
          uint64_t v2307 = (void *)((char *)v2247 + v2306);
          v2308 = (void *)((char *)v2248 + v2306);
          uint64_t v2309 = v2308[1];
          *uint64_t v2307 = *v2308;
          v2307[1] = v2309;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2247, 0, 1, (uint64_t)v2249);
        }
        uint64_t v2310 = v2655[21];
        uint64_t v2311 = (void *)((char *)v11 + v2310);
        v2312 = (void *)((char *)v12 + v2310);
        v2313 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2312, 1, (uint64_t)v2313))
        {
          uint64_t v2314 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v2311, v2312, *(void *)(*(void *)(v2314 - 8) + 64));
        }
        else
        {
          uint64_t v2315 = v2312[1];
          *uint64_t v2311 = *v2312;
          v2311[1] = v2315;
          uint64_t v2316 = v2312[3];
          v2311[2] = v2312[2];
          v2311[3] = v2316;
          uint64_t v2317 = v2312[5];
          v2311[4] = v2312[4];
          v2311[5] = v2317;
          uint64_t v2318 = v2312[7];
          v2311[6] = v2312[6];
          v2311[7] = v2318;
          uint64_t v2319 = v2312[9];
          v2311[8] = v2312[8];
          v2311[9] = v2319;
          uint64_t v2602 = v2312[11];
          v2311[10] = v2312[10];
          v2311[11] = v2602;
          uint64_t v2320 = v2313[11];
          uint64_t v2621 = (char *)v2311 + v2320;
          v2586 = (char *)v2312 + v2320;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2586, 1, v2650))
          {
            uint64_t v2321 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2621, v2586, *(void *)(*(void *)(v2321 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2621, v2586, v2650);
            __swift_storeEnumTagSinglePayload((uint64_t)v2621, 0, 1, v2650);
          }
          uint64_t v2322 = v2313[12];
          uint64_t v2323 = (void *)((char *)v2311 + v2322);
          uint64_t v2324 = (void *)((char *)v2312 + v2322);
          uint64_t v2325 = v2324[1];
          *uint64_t v2323 = *v2324;
          v2323[1] = v2325;
          *(void *)((char *)v2311 + v2313[13]) = *(void *)((char *)v2312 + v2313[13]);
          uint64_t v2326 = v2313[14];
          uint64_t v2327 = (char *)v2311 + v2326;
          v2328 = (char *)v2312 + v2326;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2328, 1, v2650))
          {
            uint64_t v2329 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2327, v2328, *(void *)(*(void *)(v2329 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2327, v2328, v2650);
            __swift_storeEnumTagSinglePayload((uint64_t)v2327, 0, 1, v2650);
          }
          *(void *)((char *)v2311 + v2313[15]) = *(void *)((char *)v2312 + v2313[15]);
          *(void *)((char *)v2311 + v2313[16]) = *(void *)((char *)v2312 + v2313[16]);
          uint64_t v2330 = v2313[17];
          uint64_t v2331 = (void *)((char *)v2311 + v2330);
          v2332 = (void *)((char *)v2312 + v2330);
          uint64_t v2333 = v2332[1];
          *uint64_t v2331 = *v2332;
          v2331[1] = v2333;
          *(void *)((char *)v2311 + v2313[18]) = *(void *)((char *)v2312 + v2313[18]);
          *(void *)((char *)v2311 + v2313[19]) = *(void *)((char *)v2312 + v2313[19]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2311, 0, 1, (uint64_t)v2313);
        }
        uint64_t v2334 = v2655[22];
        uint64_t v2335 = (void *)((char *)v11 + v2334);
        v2336 = (void *)((char *)v12 + v2334);
        v2337 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2336, 1, (uint64_t)v2337))
        {
          uint64_t v2338 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v2335, v2336, *(void *)(*(void *)(v2338 - 8) + 64));
        }
        else
        {
          uint64_t v2339 = v2336[1];
          *uint64_t v2335 = *v2336;
          v2335[1] = v2339;
          uint64_t v2340 = v2336[3];
          v2335[2] = v2336[2];
          v2335[3] = v2340;
          uint64_t v2341 = v2336[5];
          v2335[4] = v2336[4];
          v2335[5] = v2341;
          uint64_t v2342 = v2336[7];
          v2335[6] = v2336[6];
          v2335[7] = v2342;
          uint64_t v2343 = v2337[8];
          v2344 = (char *)v2335 + v2343;
          v2345 = (char *)v2336 + v2343;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2345, 1, v2633))
          {
            uint64_t v2346 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2344, v2345, *(void *)(*(void *)(v2346 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2633 - 8) + 16))(v2344, v2345, v2633);
            __swift_storeEnumTagSinglePayload((uint64_t)v2344, 0, 1, v2633);
          }
          uint64_t v2347 = v2337[9];
          v2348 = (void *)((char *)v2335 + v2347);
          v2349 = (void *)((char *)v2336 + v2347);
          uint64_t v2350 = v2349[1];
          void *v2348 = *v2349;
          v2348[1] = v2350;
          uint64_t v2351 = v2337[10];
          v2352 = (void *)((char *)v2335 + v2351);
          uint64_t v2353 = (void *)((char *)v2336 + v2351);
          uint64_t v2354 = v2353[1];
          void *v2352 = *v2353;
          v2352[1] = v2354;
          uint64_t v2355 = v2337[11];
          v2356 = (void *)((char *)v2335 + v2355);
          uint64_t v2357 = (void *)((char *)v2336 + v2355);
          uint64_t v2358 = v2357[1];
          void *v2356 = *v2357;
          v2356[1] = v2358;
          uint64_t v2359 = v2337[12];
          v2360 = (char *)v2335 + v2359;
          uint64_t v2361 = (char *)v2336 + v2359;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2361, 1, v2650))
          {
            uint64_t v2362 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2360, v2361, *(void *)(*(void *)(v2362 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2360, v2361, v2650);
            __swift_storeEnumTagSinglePayload((uint64_t)v2360, 0, 1, v2650);
          }
          uint64_t v2363 = v2337[13];
          v2364 = (char *)v2335 + v2363;
          uint64_t v2365 = (char *)v2336 + v2363;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2336 + v2363, 1, v2650))
          {
            uint64_t v2366 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2364, v2365, *(void *)(*(void *)(v2366 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2650 - 8) + 16))(v2364, v2365, v2650);
            __swift_storeEnumTagSinglePayload((uint64_t)v2364, 0, 1, v2650);
          }
          uint64_t v2367 = v2337[14];
          v2368 = (char *)v2335 + v2367;
          uint64_t v2369 = (char *)v2336 + v2367;
          *(void *)v2368 = *(void *)v2369;
          v2368[8] = v2369[8];
          uint64_t v2370 = v2337[15];
          uint64_t v2371 = (void *)((char *)v2335 + v2370);
          uint64_t v2372 = (void *)((char *)v2336 + v2370);
          uint64_t v2373 = v2372[1];
          *uint64_t v2371 = *v2372;
          v2371[1] = v2373;
          uint64_t v2374 = v2337[16];
          uint64_t v2375 = (void *)((char *)v2335 + v2374);
          v2376 = (void *)((char *)v2336 + v2374);
          uint64_t v2377 = v2376[1];
          *uint64_t v2375 = *v2376;
          v2375[1] = v2377;
          uint64_t v2378 = v2337[17];
          v2379 = (void *)((char *)v2335 + v2378);
          uint64_t v2380 = (void *)((char *)v2336 + v2378);
          uint64_t v2381 = v2380[1];
          void *v2379 = *v2380;
          v2379[1] = v2381;
          uint64_t v2382 = v2337[18];
          uint64_t v2383 = (void *)((char *)v2335 + v2382);
          uint64_t v2384 = (void *)((char *)v2336 + v2382);
          uint64_t v2385 = v2384[1];
          *uint64_t v2383 = *v2384;
          v2383[1] = v2385;
          uint64_t v2386 = v2337[19];
          v2387 = (void *)((char *)v2335 + v2386);
          v2388 = (void *)((char *)v2336 + v2386);
          uint64_t v2389 = v2388[1];
          void *v2387 = *v2388;
          v2387[1] = v2389;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2335, 0, 1, (uint64_t)v2337);
        }
        uint64_t v2215 = v2655[23];
        goto LABEL_537;
      case 2u:
        uint64_t v2681 = v13;
        uint64_t v46 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v46;
        uint64_t v47 = v12[3];
        v11[2] = v12[2];
        v11[3] = v47;
        uint64_t v48 = v12[5];
        v11[4] = v12[4];
        v11[5] = v48;
        uint64_t v49 = (int *)type metadata accessor for CalendarEvent(0);
        uint64_t v50 = v49[7];
        uint64_t v51 = (char *)v11 + v50;
        v52 = (char *)v12 + v50;
        uint64_t v53 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
        {
          uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
          __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v53);
        }
        uint64_t v13 = v2681;
        uint64_t v317 = v49[8];
        uint64_t v318 = (char *)v11 + v317;
        uint64_t v319 = (char *)v12 + v317;
        if (__swift_getEnumTagSinglePayload((uint64_t)v12 + v317, 1, v53))
        {
          uint64_t v320 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v318, v319, *(void *)(*(void *)(v320 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v318, v319, v53);
          __swift_storeEnumTagSinglePayload((uint64_t)v318, 0, 1, v53);
        }
        uint64_t v476 = v49[9];
        uint64_t v477 = (void *)((char *)v11 + v476);
        uint64_t v478 = (void *)((char *)v12 + v476);
        uint64_t v479 = v478[1];
        *uint64_t v477 = *v478;
        v477[1] = v479;
        *(void *)((char *)v11 + v49[10]) = *(void *)((char *)v12 + v49[10]);
        *(void *)((char *)v11 + v49[11]) = *(void *)((char *)v12 + v49[11]);
        uint64_t v480 = v49[12];
        v481 = (void *)((char *)v11 + v480);
        v482 = (void *)((char *)v12 + v480);
        uint64_t v483 = v482[1];
        void *v481 = *v482;
        v481[1] = v483;
        uint64_t v484 = v49[13];
        v485 = (void *)((char *)v11 + v484);
        v486 = (char *)v12 + v484;
        uint64_t v487 = *(void *)((char *)v12 + v484);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v487)
        {
          uint64_t v488 = *((void *)v486 + 1);
          uint64_t v489 = *((void *)v486 + 2);
          void *v485 = v487;
          v485[1] = v488;
          uint64_t v490 = *((void *)v486 + 3);
          uint64_t v491 = *((void *)v486 + 4);
          v485[2] = v489;
          v485[3] = v490;
          v485[4] = v491;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_164:
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v645 = *((_OWORD *)v486 + 1);
          *(_OWORD *)v485 = *(_OWORD *)v486;
          *((_OWORD *)v485 + 1) = v645;
          v485[4] = *((void *)v486 + 4);
        }
        goto LABEL_543;
      case 3u:
        v2670 = v5;
        uint64_t v2680 = v13;
        uint64_t v55 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v55;
        uint64_t v56 = v12[3];
        v11[2] = v12[2];
        v11[3] = v56;
        uint64_t v57 = v12[5];
        v11[4] = v12[4];
        v11[5] = v57;
        uint64_t v58 = v12[7];
        v11[6] = v12[6];
        v11[7] = v58;
        uint64_t v59 = v12[9];
        v11[8] = v12[8];
        v11[9] = v59;
        v11[10] = v12[10];
        uint64_t v2656 = (int *)type metadata accessor for Photo(0);
        uint64_t v60 = v2656[11];
        uint64_t v2605 = (char *)v11 + v60;
        uint64_t v2623 = (char *)v12 + v60;
        uint64_t v61 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v2642 = v61;
        if (__swift_getEnumTagSinglePayload((uint64_t)v2623, 1, v61))
        {
          uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2605, v2623, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v2605, v2623, v61);
          __swift_storeEnumTagSinglePayload((uint64_t)v2605, 0, 1, v61);
        }
        *(void *)((char *)v11 + v2656[12]) = *(void *)((char *)v12 + v2656[12]);
        *(void *)((char *)v11 + v2656[13]) = *(void *)((char *)v12 + v2656[13]);
        *(void *)((char *)v11 + v2656[14]) = *(void *)((char *)v12 + v2656[14]);
        *(void *)((char *)v11 + v2656[15]) = *(void *)((char *)v12 + v2656[15]);
        uint64_t v321 = v2656[16];
        uint64_t v322 = (void *)((char *)v11 + v321);
        v323 = (void *)((char *)v12 + v321);
        uint64_t v324 = v323[1];
        *uint64_t v322 = *v323;
        v322[1] = v324;
        uint64_t v325 = v2656[17];
        uint64_t v326 = (void *)((char *)v11 + v325);
        v327 = (void *)((char *)v12 + v325);
        uint64_t v328 = type metadata accessor for PartialExtractedAttributes(0);
        swift_bridgeObjectRetain();
        uint64_t v329 = (int *)v328;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v327, 1, v328))
        {
          uint64_t v330 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v326, v327, *(void *)(*(void *)(v330 - 8) + 64));
        }
        else
        {
          uint64_t v492 = v327[1];
          *uint64_t v326 = *v327;
          v326[1] = v492;
          uint64_t v493 = *(int *)(v328 + 20);
          uint64_t v494 = (void *)((char *)v326 + v493);
          uint64_t v495 = (void *)((char *)v327 + v493);
          uint64_t v496 = type metadata accessor for RentalCarReservation(0);
          swift_bridgeObjectRetain();
          v2613 = v329;
          v2630 = v326;
          v2595 = v327;
          if (__swift_getEnumTagSinglePayload((uint64_t)v495, 1, v496))
          {
            uint64_t v497 = (uint64_t)v326;
            uint64_t v498 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v494, v495, *(void *)(*(void *)(v498 - 8) + 64));
          }
          else
          {
            uint64_t v714 = v495[1];
            *uint64_t v494 = *v495;
            v494[1] = v714;
            uint64_t v715 = v495[3];
            v494[2] = v495[2];
            v494[3] = v715;
            uint64_t v716 = v495[5];
            v494[4] = v495[4];
            v494[5] = v716;
            uint64_t v717 = v495[7];
            v494[6] = v495[6];
            v494[7] = v717;
            uint64_t v718 = v495[9];
            v494[8] = v495[8];
            v494[9] = v718;
            uint64_t v719 = v495[11];
            v494[10] = v495[10];
            v494[11] = v719;
            uint64_t v720 = v495[13];
            v494[12] = v495[12];
            v494[13] = v720;
            uint64_t v721 = v495[15];
            v494[14] = v495[14];
            v494[15] = v721;
            *((unsigned char *)v494 + 128) = *((unsigned char *)v495 + 128);
            *(_WORD *)((char *)v494 + 129) = *(_WORD *)((char *)v495 + 129);
            uint64_t v722 = v495[18];
            v494[17] = v495[17];
            v494[18] = v722;
            uint64_t v723 = v495[20];
            v494[19] = v495[19];
            v494[20] = v723;
            uint64_t v724 = v495[22];
            v494[21] = v495[21];
            v494[22] = v724;
            uint64_t v725 = v495[24];
            v494[23] = v495[23];
            v494[24] = v725;
            uint64_t v726 = v495[26];
            v494[25] = v495[25];
            v494[26] = v726;
            uint64_t v727 = v495[28];
            v494[27] = v495[27];
            v494[28] = v727;
            uint64_t v728 = v495[30];
            v494[29] = v495[29];
            v494[30] = v728;
            uint64_t v2532 = v495[32];
            v494[31] = v495[31];
            v494[32] = v2532;
            uint64_t v2503 = v495[34];
            v494[33] = v495[33];
            v494[34] = v2503;
            uint64_t v729 = v495[36];
            v494[35] = v495[35];
            v494[36] = v729;
            uint64_t v730 = v495[38];
            v494[37] = v495[37];
            v494[38] = v730;
            uint64_t v731 = v495[40];
            v494[39] = v495[39];
            v494[40] = v731;
            uint64_t v732 = v495[42];
            v494[41] = v495[41];
            v494[42] = v732;
            uint64_t v733 = v495[44];
            v494[43] = v495[43];
            v494[44] = v733;
            uint64_t v734 = v495[46];
            v494[45] = v495[45];
            v494[46] = v734;
            uint64_t v735 = v495[47];
            *((unsigned char *)v494 + 384) = *((unsigned char *)v495 + 384);
            v494[47] = v735;
            uint64_t v736 = v495[50];
            v494[49] = v495[49];
            v494[50] = v736;
            uint64_t v737 = v495[52];
            v494[51] = v495[51];
            v494[52] = v737;
            uint64_t v738 = *(int *)(v496 + 140);
            v2570 = (char *)v494 + v738;
            uint64_t v739 = (char *)v495 + v738;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v739, 1, v2642))
            {
              uint64_t v740 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2570, v739, *(void *)(*(void *)(v740 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v2570, v739, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v2570, 0, 1, v2642);
            }
            uint64_t v772 = *(int *)(v496 + 144);
            v773 = (char *)v494 + v772;
            uint64_t v774 = (char *)v495 + v772;
            if (__swift_getEnumTagSinglePayload((uint64_t)v495 + v772, 1, v2642))
            {
              uint64_t v775 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v773, v774, *(void *)(*(void *)(v775 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v773, v774, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v773, 0, 1, v2642);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v494, 0, 1, v496);
            uint64_t v329 = v2613;
            uint64_t v497 = (uint64_t)v326;
          }
          uint64_t v806 = v329[6];
          uint64_t v807 = (void *)(v497 + v806);
          uint64_t v808 = (void *)((char *)v327 + v806);
          uint64_t v809 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v808, 1, v809))
          {
            uint64_t v810 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v807, v808, *(void *)(*(void *)(v810 - 8) + 64));
          }
          else
          {
            uint64_t v811 = v808[1];
            *uint64_t v807 = *v808;
            v807[1] = v811;
            uint64_t v812 = v808[3];
            v807[2] = v808[2];
            v807[3] = v812;
            uint64_t v813 = v808[5];
            v807[4] = v808[4];
            v807[5] = v813;
            uint64_t v814 = v808[7];
            v807[6] = v808[6];
            v807[7] = v814;
            uint64_t v815 = v808[9];
            v807[8] = v808[8];
            v807[9] = v815;
            uint64_t v816 = v808[11];
            v807[10] = v808[10];
            v807[11] = v816;
            uint64_t v817 = v808[13];
            v807[12] = v808[12];
            v807[13] = v817;
            uint64_t v818 = v808[15];
            v807[14] = v808[14];
            v807[15] = v818;
            *((unsigned char *)v807 + 128) = *((unsigned char *)v808 + 128);
            *(_WORD *)((char *)v807 + 129) = *(_WORD *)((char *)v808 + 129);
            uint64_t v819 = v808[18];
            v807[17] = v808[17];
            v807[18] = v819;
            uint64_t v820 = v808[20];
            v807[19] = v808[19];
            v807[20] = v820;
            uint64_t v821 = v808[22];
            v807[21] = v808[21];
            v807[22] = v821;
            uint64_t v822 = v808[24];
            v807[23] = v808[23];
            v807[24] = v822;
            uint64_t v2505 = v808[26];
            v807[25] = v808[25];
            v807[26] = v2505;
            uint64_t v823 = v808[28];
            v807[27] = v808[27];
            v807[28] = v823;
            uint64_t v824 = v808[30];
            v807[29] = v808[29];
            v807[30] = v824;
            uint64_t v825 = v808[32];
            v807[31] = v808[31];
            v807[32] = v825;
            uint64_t v826 = v808[34];
            v807[33] = v808[33];
            v807[34] = v826;
            uint64_t v827 = v808[36];
            uint64_t v828 = v808[35];
            *((unsigned char *)v807 + 296) = *((unsigned char *)v808 + 296);
            v807[35] = v828;
            v807[36] = v827;
            uint64_t v829 = *(int *)(v809 + 112);
            v2534 = (char *)v807 + v829;
            uint64_t v830 = (char *)v808 + v829;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v830, 1, v2642))
            {
              uint64_t v831 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2534, v830, *(void *)(*(void *)(v831 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v2534, v830, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v2534, 0, 1, v2642);
            }
            uint64_t v863 = *(int *)(v809 + 116);
            uint64_t v864 = (char *)v807 + v863;
            v865 = (char *)v808 + v863;
            if (__swift_getEnumTagSinglePayload((uint64_t)v808 + v863, 1, v2642))
            {
              uint64_t v866 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v864, v865, *(void *)(*(void *)(v866 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v864, v865, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v864, 0, 1, v2642);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v807, 0, 1, v809);
            uint64_t v329 = v2613;
            uint64_t v497 = (uint64_t)v2630;
          }
          uint64_t v899 = v329[7];
          uint64_t v900 = (void *)(v497 + v899);
          uint64_t v901 = (void *)((char *)v327 + v899);
          uint64_t v902 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v901, 1, (uint64_t)v902))
          {
            uint64_t v903 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v900, v901, *(void *)(*(void *)(v903 - 8) + 64));
          }
          else
          {
            uint64_t v904 = v901[1];
            *uint64_t v900 = *v901;
            v900[1] = v904;
            uint64_t v905 = v901[3];
            v900[2] = v901[2];
            v900[3] = v905;
            uint64_t v906 = v901[5];
            v900[4] = v901[4];
            v900[5] = v906;
            uint64_t v907 = v901[7];
            v900[6] = v901[6];
            v900[7] = v907;
            uint64_t v908 = v901[9];
            v900[8] = v901[8];
            v900[9] = v908;
            uint64_t v909 = v901[11];
            v900[10] = v901[10];
            v900[11] = v909;
            uint64_t v910 = v901[13];
            v900[12] = v901[12];
            v900[13] = v910;
            uint64_t v911 = v901[15];
            v900[14] = v901[14];
            v900[15] = v911;
            *((unsigned char *)v900 + 128) = *((unsigned char *)v901 + 128);
            *(_WORD *)((char *)v900 + 129) = *(_WORD *)((char *)v901 + 129);
            uint64_t v912 = v901[18];
            v900[17] = v901[17];
            v900[18] = v912;
            uint64_t v913 = v901[20];
            v900[19] = v901[19];
            v900[20] = v913;
            uint64_t v914 = v901[22];
            v900[21] = v901[21];
            v900[22] = v914;
            __dsta = (void *)v901[24];
            v900[23] = v901[23];
            v900[24] = __dsta;
            uint64_t v915 = v901[26];
            v900[25] = v901[25];
            v900[26] = v915;
            uint64_t v916 = v901[28];
            v900[27] = v901[27];
            v900[28] = v916;
            uint64_t v2536 = v901[30];
            v900[29] = v901[29];
            v900[30] = v2536;
            uint64_t v2507 = v901[32];
            v900[31] = v901[31];
            v900[32] = v2507;
            uint64_t v917 = v901[34];
            v900[33] = v901[33];
            v900[34] = v917;
            uint64_t v918 = v901[36];
            uint64_t v919 = v901[35];
            *((unsigned char *)v900 + 296) = *((unsigned char *)v901 + 296);
            v900[35] = v919;
            v900[36] = v918;
            uint64_t v920 = v901[39];
            v900[38] = v901[38];
            v900[39] = v920;
            uint64_t v921 = v902[29];
            v2571 = (char *)v900 + v921;
            uint64_t v922 = (char *)v901 + v921;
            uint64_t v923 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v922, 1, v923))
            {
              uint64_t v924 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2571, v922, *(void *)(*(void *)(v924 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v923 - 8) + 16))(v2571, v922, v923);
              __swift_storeEnumTagSinglePayload((uint64_t)v2571, 0, 1, v923);
            }
            uint64_t v960 = v902[30];
            uint64_t v961 = (void *)((char *)v900 + v960);
            v962 = (void *)((char *)v901 + v960);
            uint64_t v963 = v962[1];
            *uint64_t v961 = *v962;
            v961[1] = v963;
            uint64_t v964 = v902[31];
            uint64_t v965 = (char *)v900 + v964;
            v966 = (char *)v901 + v964;
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v966, 1, v2642))
            {
              uint64_t v967 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v965, v966, *(void *)(*(void *)(v967 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v965, v966, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v965, 0, 1, v2642);
            }
            uint64_t v980 = v902[32];
            uint64_t v981 = (char *)v900 + v980;
            v982 = (char *)v901 + v980;
            if (__swift_getEnumTagSinglePayload((uint64_t)v901 + v980, 1, v2642))
            {
              uint64_t v983 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v981, v982, *(void *)(*(void *)(v983 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v981, v982, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v981, 0, 1, v2642);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v900, 0, 1, (uint64_t)v902);
            uint64_t v329 = v2613;
            uint64_t v497 = (uint64_t)v2630;
          }
          uint64_t v1015 = v329[8];
          uint64_t v1016 = (void *)(v497 + v1015);
          uint64_t v1017 = (void *)((char *)v327 + v1015);
          uint64_t v1018 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1017, 1, v1018))
          {
            uint64_t v1019 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v1016, v1017, *(void *)(*(void *)(v1019 - 8) + 64));
          }
          else
          {
            uint64_t v1020 = v1017[1];
            *uint64_t v1016 = *v1017;
            v1016[1] = v1020;
            uint64_t v1021 = v1017[3];
            v1016[2] = v1017[2];
            v1016[3] = v1021;
            uint64_t v1022 = v1017[5];
            v1016[4] = v1017[4];
            v1016[5] = v1022;
            uint64_t v1023 = v1017[7];
            v1016[6] = v1017[6];
            v1016[7] = v1023;
            uint64_t v1024 = v1017[9];
            v1016[8] = v1017[8];
            v1016[9] = v1024;
            uint64_t v1025 = v1017[11];
            v1016[10] = v1017[10];
            v1016[11] = v1025;
            uint64_t v1026 = v1017[13];
            v1016[12] = v1017[12];
            v1016[13] = v1026;
            uint64_t v1027 = v1017[15];
            v1016[14] = v1017[14];
            v1016[15] = v1027;
            *((unsigned char *)v1016 + 128) = *((unsigned char *)v1017 + 128);
            *(_WORD *)((char *)v1016 + 129) = *(_WORD *)((char *)v1017 + 129);
            uint64_t v1028 = v1017[18];
            v1016[17] = v1017[17];
            v1016[18] = v1028;
            uint64_t v1029 = v1017[20];
            v1016[19] = v1017[19];
            v1016[20] = v1029;
            uint64_t v1030 = v1017[22];
            v1016[21] = v1017[21];
            v1016[22] = v1030;
            uint64_t v1031 = v1017[24];
            v1016[23] = v1017[23];
            v1016[24] = v1031;
            uint64_t v1032 = v1017[26];
            v1016[25] = v1017[25];
            v1016[26] = v1032;
            uint64_t v1033 = v1017[28];
            v1016[27] = v1017[27];
            v1016[28] = v1033;
            uint64_t v1034 = v1017[30];
            v1016[29] = v1017[29];
            v1016[30] = v1034;
            uint64_t v1035 = v1017[32];
            v1016[31] = v1017[31];
            v1016[32] = v1035;
            uint64_t v1036 = v1017[34];
            uint64_t v1037 = v1017[33];
            *((unsigned char *)v1016 + 280) = *((unsigned char *)v1017 + 280);
            v1016[33] = v1037;
            v1016[34] = v1036;
            uint64_t v1038 = v1017[37];
            v1016[36] = v1017[36];
            v1016[37] = v1038;
            uint64_t v1039 = *(int *)(v1018 + 108);
            uint64_t v2538 = (char *)v1016 + v1039;
            uint64_t v1040 = (char *)v1017 + v1039;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1040, 1, v2642))
            {
              uint64_t v1041 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2538, v1040, *(void *)(*(void *)(v1041 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v2538, v1040, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v2538, 0, 1, v2642);
            }
            uint64_t v1074 = *(int *)(v1018 + 112);
            uint64_t v1075 = (char *)v1016 + v1074;
            v1076 = (char *)v1017 + v1074;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1017 + v1074, 1, v2642))
            {
              uint64_t v1077 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1075, v1076, *(void *)(*(void *)(v1077 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v1075, v1076, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v1075, 0, 1, v2642);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v1016, 0, 1, v1018);
            uint64_t v329 = v2613;
            uint64_t v497 = (uint64_t)v2630;
          }
          uint64_t v1105 = v329[9];
          uint64_t v1106 = (void *)(v497 + v1105);
          uint64_t v1107 = (void *)((char *)v327 + v1105);
          uint64_t v1108 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1107, 1, (uint64_t)v1108))
          {
            uint64_t v1109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v1106, v1107, *(void *)(*(void *)(v1109 - 8) + 64));
          }
          else
          {
            uint64_t v1110 = v1107[1];
            *uint64_t v1106 = *v1107;
            v1106[1] = v1110;
            uint64_t v1111 = v1107[3];
            v1106[2] = v1107[2];
            v1106[3] = v1111;
            uint64_t v1112 = v1107[5];
            v1106[4] = v1107[4];
            v1106[5] = v1112;
            uint64_t v1113 = v1107[7];
            v1106[6] = v1107[6];
            v1106[7] = v1113;
            uint64_t v1114 = v1107[9];
            v1106[8] = v1107[8];
            v1106[9] = v1114;
            uint64_t v1115 = v1107[11];
            v1106[10] = v1107[10];
            v1106[11] = v1115;
            uint64_t v1116 = v1107[13];
            v1106[12] = v1107[12];
            v1106[13] = v1116;
            uint64_t v1117 = v1107[15];
            v1106[14] = v1107[14];
            v1106[15] = v1117;
            *((unsigned char *)v1106 + 128) = *((unsigned char *)v1107 + 128);
            *(_WORD *)((char *)v1106 + 129) = *(_WORD *)((char *)v1107 + 129);
            uint64_t v1118 = v1107[18];
            v1106[17] = v1107[17];
            v1106[18] = v1118;
            uint64_t v1119 = v1107[20];
            v1106[19] = v1107[19];
            v1106[20] = v1119;
            uint64_t v1120 = v1107[22];
            v1106[21] = v1107[21];
            v1106[22] = v1120;
            uint64_t v1121 = v1107[24];
            v1106[23] = v1107[23];
            v1106[24] = v1121;
            uint64_t v1122 = v1107[26];
            v1106[25] = v1107[25];
            v1106[26] = v1122;
            uint64_t v1123 = v1107[28];
            v1106[27] = v1107[27];
            v1106[28] = v1123;
            uint64_t v1124 = v1107[30];
            v1106[29] = v1107[29];
            v1106[30] = v1124;
            v1106[31] = v1107[31];
            uint64_t v1125 = v1108[24];
            uint64_t v2540 = (char *)v1106 + v1125;
            v2415 = (char *)v1107 + v1125;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2415, 1, v2642))
            {
              uint64_t v1126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2540, v2415, *(void *)(*(void *)(v1126 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v2540, v2415, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v2540, 0, 1, v2642);
            }
            uint64_t v1153 = v1108[25];
            uint64_t v1154 = (char *)v1106 + v1153;
            v1155 = (char *)v1107 + v1153;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1107 + v1153, 1, v2642))
            {
              uint64_t v1156 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1154, v1155, *(void *)(*(void *)(v1156 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v1154, v1155, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v1154, 0, 1, v2642);
            }
            uint64_t v1166 = v1108[26];
            uint64_t v1167 = (char *)v1106 + v1166;
            uint64_t v1168 = (char *)v1107 + v1166;
            uint64_t v1169 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1168, 1, v1169))
            {
              uint64_t v1170 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1167, v1168, *(void *)(*(void *)(v1170 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1169 - 8) + 16))(v1167, v1168, v1169);
              __swift_storeEnumTagSinglePayload((uint64_t)v1167, 0, 1, v1169);
            }
            v327 = v2595;
            __swift_storeEnumTagSinglePayload((uint64_t)v1106, 0, 1, (uint64_t)v1108);
            uint64_t v329 = v2613;
            uint64_t v497 = (uint64_t)v2630;
          }
          uint64_t v1195 = v329[10];
          uint64_t v1196 = (void *)(v497 + v1195);
          uint64_t v1197 = (void *)((char *)v327 + v1195);
          uint64_t v1198 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1197, 1, (uint64_t)v1198))
          {
            uint64_t v1199 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v1196, v1197, *(void *)(*(void *)(v1199 - 8) + 64));
          }
          else
          {
            uint64_t v1200 = v1197[1];
            *uint64_t v1196 = *v1197;
            v1196[1] = v1200;
            uint64_t v1201 = v1197[3];
            v1196[2] = v1197[2];
            v1196[3] = v1201;
            uint64_t v1202 = v1197[5];
            v1196[4] = v1197[4];
            v1196[5] = v1202;
            uint64_t v1203 = v1197[7];
            v1196[6] = v1197[6];
            v1196[7] = v1203;
            uint64_t v1204 = v1197[9];
            v1196[8] = v1197[8];
            v1196[9] = v1204;
            uint64_t v1205 = v1197[11];
            v1196[10] = v1197[10];
            v1196[11] = v1205;
            uint64_t v1206 = v1197[13];
            v1196[12] = v1197[12];
            v1196[13] = v1206;
            uint64_t v1207 = v1197[15];
            v1196[14] = v1197[14];
            v1196[15] = v1207;
            *((unsigned char *)v1196 + 128) = *((unsigned char *)v1197 + 128);
            *(_WORD *)((char *)v1196 + 129) = *(_WORD *)((char *)v1197 + 129);
            uint64_t v1208 = v1197[18];
            v1196[17] = v1197[17];
            v1196[18] = v1208;
            uint64_t v1209 = v1197[20];
            v1196[19] = v1197[19];
            v1196[20] = v1209;
            uint64_t v1210 = v1197[22];
            v1196[21] = v1197[21];
            v1196[22] = v1210;
            uint64_t v1211 = v1197[24];
            v1196[23] = v1197[23];
            v1196[24] = v1211;
            uint64_t v1212 = v1197[26];
            v1196[25] = v1197[25];
            v1196[26] = v1212;
            v1196[27] = v1197[27];
            uint64_t v1213 = v1198[22];
            uint64_t v2542 = (char *)v1196 + v1213;
            v2424 = (char *)v1197 + v1213;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2424, 1, v2642))
            {
              uint64_t v1214 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2542, v2424, *(void *)(*(void *)(v1214 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v2542, v2424, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v2542, 0, 1, v2642);
            }
            uint64_t v1239 = v1198[23];
            uint64_t v1240 = (char *)v1196 + v1239;
            uint64_t v1241 = (char *)v1197 + v1239;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1197 + v1239, 1, v2642))
            {
              uint64_t v1242 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1240, v1241, *(void *)(*(void *)(v1242 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v1240, v1241, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v1240, 0, 1, v2642);
            }
            uint64_t v1255 = v1198[24];
            uint64_t v1256 = (char *)v1196 + v1255;
            uint64_t v1257 = (char *)v1197 + v1255;
            *(void *)uint64_t v1256 = *(void *)v1257;
            v1256[8] = v1257[8];
            uint64_t v1258 = v1198[25];
            v1259 = (char *)v1196 + v1258;
            uint64_t v1260 = (char *)v1197 + v1258;
            uint64_t v1261 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1260, 1, v1261))
            {
              uint64_t v1262 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1259, v1260, *(void *)(*(void *)(v1262 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1261 - 8) + 16))(v1259, v1260, v1261);
              __swift_storeEnumTagSinglePayload((uint64_t)v1259, 0, 1, v1261);
            }
            v327 = v2595;
            __swift_storeEnumTagSinglePayload((uint64_t)v1196, 0, 1, (uint64_t)v1198);
            uint64_t v329 = v2613;
            uint64_t v497 = (uint64_t)v2630;
          }
          uint64_t v1286 = v329[11];
          uint64_t v1287 = (void *)(v497 + v1286);
          uint64_t v1288 = (void *)((char *)v327 + v1286);
          uint64_t v1289 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1288, 1, (uint64_t)v1289))
          {
            uint64_t v1290 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v1287, v1288, *(void *)(*(void *)(v1290 - 8) + 64));
          }
          else
          {
            uint64_t v1291 = v1288[1];
            *uint64_t v1287 = *v1288;
            v1287[1] = v1291;
            uint64_t v2544 = v1288[3];
            v1287[2] = v1288[2];
            v1287[3] = v2544;
            uint64_t v2511 = v1288[5];
            v1287[4] = v1288[4];
            v1287[5] = v2511;
            uint64_t v1292 = v1288[7];
            v1287[6] = v1288[6];
            v1287[7] = v1292;
            uint64_t v1293 = v1288[9];
            v1287[8] = v1288[8];
            v1287[9] = v1293;
            uint64_t v1294 = v1288[11];
            v1287[10] = v1288[10];
            v1287[11] = v1294;
            *((unsigned char *)v1287 + 96) = *((unsigned char *)v1288 + 96);
            uint64_t v1295 = v1288[14];
            v1287[13] = v1288[13];
            v1287[14] = v1295;
            uint64_t v1296 = v1289[13];
            v2572 = (char *)v1287 + v1296;
            uint64_t v1297 = (char *)v1288 + v1296;
            uint64_t v1298 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1297, 1, v1298))
            {
              uint64_t v1299 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2572, v1297, *(void *)(*(void *)(v1299 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1298 - 8) + 16))(v2572, v1297, v1298);
              __swift_storeEnumTagSinglePayload((uint64_t)v2572, 0, 1, v1298);
            }
            uint64_t v1317 = v1289[14];
            uint64_t v1318 = (char *)v1287 + v1317;
            v1319 = (char *)v1288 + v1317;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1288 + v1317, 1, v1298))
            {
              uint64_t v1320 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1318, v1319, *(void *)(*(void *)(v1320 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1298 - 8) + 16))(v1318, v1319, v1298);
              __swift_storeEnumTagSinglePayload((uint64_t)v1318, 0, 1, v1298);
            }
            uint64_t v1395 = v1289[15];
            uint64_t v1396 = (void *)((char *)v1287 + v1395);
            uint64_t v1397 = (void *)((char *)v1288 + v1395);
            uint64_t v2573 = v1397[1];
            *uint64_t v1396 = *v1397;
            v1396[1] = v2573;
            uint64_t v1398 = v1289[16];
            v1399 = (void *)((char *)v1287 + v1398);
            uint64_t v1400 = (void *)((char *)v1288 + v1398);
            uint64_t v1401 = v1400[1];
            void *v1399 = *v1400;
            v1399[1] = v1401;
            uint64_t v1402 = v1289[17];
            uint64_t v1403 = (void *)((char *)v1287 + v1402);
            uint64_t v1404 = (void *)((char *)v1288 + v1402);
            uint64_t v1405 = v1404[1];
            *uint64_t v1403 = *v1404;
            v1403[1] = v1405;
            uint64_t v1406 = v1289[18];
            uint64_t v2513 = (char *)v1288 + v1406;
            v2546 = (char *)v1287 + v1406;
            uint64_t v1407 = type metadata accessor for DateComponents();
            v1408 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1407 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1408(v2546, v2513, v1407);
            v1408((char *)v1287 + v1289[19], (char *)v1288 + v1289[19], v1407);
            uint64_t v1409 = v1289[20];
            uint64_t v1410 = (void *)((char *)v1287 + v1409);
            v1411 = (void *)((char *)v1288 + v1409);
            uint64_t v1412 = v1411[1];
            *uint64_t v1410 = *v1411;
            v1410[1] = v1412;
            uint64_t v1413 = v1289[21];
            v1414 = (void *)((char *)v1287 + v1413);
            v1415 = (void *)((char *)v1288 + v1413);
            uint64_t v2474 = (void *)v1415[1];
            void *v1414 = *v1415;
            v1414[1] = v2474;
            uint64_t v1416 = v1289[22];
            v1417 = (void *)((char *)v1287 + v1416);
            v1418 = (void *)((char *)v1288 + v1416);
            uint64_t v2547 = v1418[1];
            void *v1417 = *v1418;
            v1417[1] = v2547;
            uint64_t v1419 = v1289[23];
            v1420 = (void *)((char *)v1287 + v1419);
            v1421 = (void *)((char *)v1288 + v1419);
            uint64_t v2514 = v1421[1];
            void *v1420 = *v1421;
            v1420[1] = v2514;
            uint64_t v1422 = v1289[24];
            v1423 = (void *)((char *)v1287 + v1422);
            v1424 = (void *)((char *)v1288 + v1422);
            v2489 = (void *)v1424[1];
            void *v1423 = *v1424;
            v1423[1] = v2489;
            uint64_t v1425 = v1289[25];
            v1426 = (void *)((char *)v1287 + v1425);
            v1427 = (void *)((char *)v1288 + v1425);
            v2459 = (void *)v1427[1];
            void *v1426 = *v1427;
            v1426[1] = v2459;
            uint64_t v1428 = v1289[26];
            v1429 = (void *)((char *)v1287 + v1428);
            v1430 = (void *)((char *)v1288 + v1428);
            uint64_t v2450 = v1430[1];
            void *v1429 = *v1430;
            v1429[1] = v2450;
            uint64_t v1431 = v1289[27];
            v1432 = (void *)((char *)v1287 + v1431);
            v1433 = (void *)((char *)v1288 + v1431);
            uint64_t v2444 = (void *)v1433[1];
            void *v1432 = *v1433;
            v1432[1] = v2444;
            uint64_t v1434 = v1289[28];
            v1435 = (void *)((char *)v1287 + v1434);
            v1436 = (void *)((char *)v1288 + v1434);
            v2437 = (void *)v1436[1];
            void *v1435 = *v1436;
            v1435[1] = v2437;
            uint64_t v1437 = v1289[29];
            v1438 = (void *)((char *)v1287 + v1437);
            v1439 = (void *)((char *)v1288 + v1437);
            v2431 = (void *)v1439[1];
            void *v1438 = *v1439;
            v1438[1] = v2431;
            uint64_t v1440 = v1289[30];
            uint64_t v1441 = (void *)((char *)v1287 + v1440);
            v1442 = (void *)((char *)v1288 + v1440);
            v2426 = (void *)v1442[1];
            *uint64_t v1441 = *v1442;
            v1441[1] = v2426;
            uint64_t v1443 = v1289[31];
            uint64_t v1444 = (void *)((char *)v1287 + v1443);
            uint64_t v1445 = (void *)((char *)v1288 + v1443);
            v2420 = (void *)v1445[1];
            *uint64_t v1444 = *v1445;
            v1444[1] = v2420;
            uint64_t v1446 = v1289[32];
            v1447 = (void *)((char *)v1287 + v1446);
            uint64_t v1448 = (void *)((char *)v1288 + v1446);
            uint64_t v1449 = v1448[1];
            void *v1447 = *v1448;
            v1447[1] = v1449;
            *(void *)((char *)v1287 + v1289[33]) = *(void *)((char *)v1288 + v1289[33]);
            *(void *)((char *)v1287 + v1289[34]) = *(void *)((char *)v1288 + v1289[34]);
            uint64_t v1450 = v1289[35];
            v1451 = (void *)((char *)v1287 + v1450);
            uint64_t v1452 = (void *)((char *)v1288 + v1450);
            uint64_t v1453 = v1452[1];
            void *v1451 = *v1452;
            v1451[1] = v1453;
            uint64_t v1454 = v1289[36];
            uint64_t v1455 = (void *)((char *)v1287 + v1454);
            uint64_t v1456 = (void *)((char *)v1288 + v1454);
            uint64_t v1457 = v1456[1];
            *uint64_t v1455 = *v1456;
            v1455[1] = v1457;
            uint64_t v1458 = v1289[37];
            uint64_t v1459 = (void *)((char *)v1287 + v1458);
            v1460 = (void *)((char *)v1288 + v1458);
            uint64_t v1461 = v1460[1];
            *uint64_t v1459 = *v1460;
            v1459[1] = v1461;
            uint64_t v1462 = v1289[38];
            uint64_t v2574 = (char *)v1287 + v1462;
            v1463 = (char *)v1288 + v1462;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1463, 1, v2642))
            {
              uint64_t v1464 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2574, v1463, *(void *)(*(void *)(v1464 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v2574, v1463, v2642);
              __swift_storeEnumTagSinglePayload((uint64_t)v2574, 0, 1, v2642);
            }
            uint64_t v1584 = v1289[39];
            v1585 = (void *)((char *)v1287 + v1584);
            uint64_t v1586 = (void *)((char *)v1288 + v1584);
            uint64_t v1587 = v1586[1];
            void *v1585 = *v1586;
            v1585[1] = v1587;
            uint64_t v1588 = v1289[40];
            v1589 = (void *)((char *)v1287 + v1588);
            uint64_t v1590 = (void *)((char *)v1288 + v1588);
            uint64_t v1591 = v1590[1];
            void *v1589 = *v1590;
            v1589[1] = v1591;
            uint64_t v1592 = v1289[41];
            uint64_t v1593 = (char *)v1287 + v1592;
            uint64_t v1594 = (char *)v1288 + v1592;
            v1593[8] = v1594[8];
            *(void *)uint64_t v1593 = *(void *)v1594;
            uint64_t v1595 = v1289[42];
            v1596 = (void *)((char *)v1287 + v1595);
            uint64_t v1597 = (void *)((char *)v1288 + v1595);
            uint64_t v1598 = v1597[1];
            void *v1596 = *v1597;
            v1596[1] = v1598;
            uint64_t v1599 = v1289[43];
            v1600 = (char *)v1287 + v1599;
            uint64_t v1601 = (char *)v1288 + v1599;
            *(_OWORD *)v1600 = *(_OWORD *)v1601;
            *(void *)(v1600 + 13) = *(void *)(v1601 + 13);
            uint64_t v1602 = v1289[44];
            v1603 = (void *)((char *)v1287 + v1602);
            v1604 = (void *)((char *)v1288 + v1602);
            uint64_t v1605 = v1604[1];
            void *v1603 = *v1604;
            v1603[1] = v1605;
            uint64_t v1606 = v1289[45];
            v1607 = (void *)((char *)v1287 + v1606);
            v1608 = (void *)((char *)v1288 + v1606);
            uint64_t v1609 = v1608[1];
            void *v1607 = *v1608;
            v1607[1] = v1609;
            uint64_t v1610 = v1289[46];
            uint64_t v1611 = (void *)((char *)v1287 + v1610);
            uint64_t v1612 = (void *)((char *)v1288 + v1610);
            uint64_t v1613 = v1612[1];
            *uint64_t v1611 = *v1612;
            v1611[1] = v1613;
            uint64_t v1614 = v1289[47];
            uint64_t v1615 = (void *)((char *)v1287 + v1614);
            uint64_t v1616 = (void *)((char *)v1288 + v1614);
            uint64_t v1617 = v1616[1];
            *uint64_t v1615 = *v1616;
            v1615[1] = v1617;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1287, 0, 1, (uint64_t)v1289);
            uint64_t v329 = v2613;
            uint64_t v497 = (uint64_t)v2630;
            v327 = v2595;
          }
          uint64_t v1618 = v329[12];
          uint64_t v1619 = (void *)(v497 + v1618);
          uint64_t v1620 = (void *)((char *)v327 + v1618);
          uint64_t v1621 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1620, 1, (uint64_t)v1621))
          {
            uint64_t v1622 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v1619, v1620, *(void *)(*(void *)(v1622 - 8) + 64));
          }
          else
          {
            uint64_t v1623 = v1620[1];
            *uint64_t v1619 = *v1620;
            v1619[1] = v1623;
            uint64_t v2550 = v1620[3];
            v1619[2] = v1620[2];
            v1619[3] = v2550;
            uint64_t v1624 = v1620[5];
            v1619[4] = v1620[4];
            v1619[5] = v1624;
            uint64_t v2517 = v1620[7];
            v1619[6] = v1620[6];
            v1619[7] = v2517;
            uint64_t v1625 = v1620[9];
            v1619[8] = v1620[8];
            v1619[9] = v1625;
            uint64_t v1626 = v1620[11];
            v1619[10] = v1620[10];
            v1619[11] = v1626;
            *((unsigned char *)v1619 + 96) = *((unsigned char *)v1620 + 96);
            uint64_t v1627 = v1620[14];
            v1619[13] = v1620[13];
            v1619[14] = v1627;
            uint64_t v1628 = v1620[16];
            v1619[15] = v1620[15];
            v1619[16] = v1628;
            uint64_t v1629 = v1621[14];
            uint64_t v2575 = (char *)v1619 + v1629;
            v2461 = (char *)v1620 + v1629;
            uint64_t v2452 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2461, 1, v2452))
            {
              uint64_t v1630 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2575, v2461, *(void *)(*(void *)(v1630 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2452 - 8) + 16))(v2575, v2461, v2452);
              __swift_storeEnumTagSinglePayload((uint64_t)v2575, 0, 1, v2452);
            }
            uint64_t v1683 = v1621[15];
            uint64_t v1684 = (char *)v1619 + v1683;
            v1685 = (char *)v1620 + v1683;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1620 + v1683, 1, v2452))
            {
              uint64_t v1686 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1684, v1685, *(void *)(*(void *)(v1686 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2452 - 8) + 16))(v1684, v1685, v2452);
              __swift_storeEnumTagSinglePayload((uint64_t)v1684, 0, 1, v2452);
            }
            uint64_t v1749 = v1621[16];
            v1750 = (void *)((char *)v1619 + v1749);
            v1751 = (void *)((char *)v1620 + v1749);
            uint64_t v1752 = v1751[1];
            void *v1750 = *v1751;
            v1750[1] = v1752;
            uint64_t v1753 = v1621[17];
            v1754 = (void *)((char *)v1619 + v1753);
            uint64_t v1755 = (void *)((char *)v1620 + v1753);
            uint64_t v2576 = v1755[1];
            void *v1754 = *v1755;
            v1754[1] = v2576;
            uint64_t v1756 = v1621[18];
            v1757 = (void *)((char *)v1619 + v1756);
            uint64_t v1758 = (void *)((char *)v1620 + v1756);
            uint64_t v2552 = v1758[1];
            void *v1757 = *v1758;
            v1757[1] = v2552;
            uint64_t v1759 = v1621[19];
            v1760 = (void *)((char *)v1619 + v1759);
            uint64_t v1761 = (void *)((char *)v1620 + v1759);
            uint64_t v2520 = v1761[1];
            void *v1760 = *v1761;
            v1760[1] = v2520;
            uint64_t v1762 = v1621[20];
            v1763 = (void *)((char *)v1619 + v1762);
            v1764 = (void *)((char *)v1620 + v1762);
            uint64_t v1765 = v1764[1];
            void *v1763 = *v1764;
            v1763[1] = v1765;
            *(void *)((char *)v1619 + v1621[21]) = *(void *)((char *)v1620 + v1621[21]);
            *(void *)((char *)v1619 + v1621[22]) = *(void *)((char *)v1620 + v1621[22]);
            uint64_t v1766 = v1621[23];
            v1767 = (char *)v1619 + v1766;
            v1768 = (char *)v1620 + v1766;
            *(void *)v1767 = *(void *)v1768;
            v1767[8] = v1768[8];
            uint64_t v1769 = v1621[24];
            uint64_t v1770 = (char *)v1619 + v1769;
            v1771 = (char *)v1620 + v1769;
            *(void *)uint64_t v1770 = *(void *)v1771;
            v1770[8] = v1771[8];
            uint64_t v1772 = v1621[25];
            uint64_t v1773 = (void *)((char *)v1619 + v1772);
            uint64_t v1774 = (void *)((char *)v1620 + v1772);
            uint64_t v1775 = v1774[1];
            *uint64_t v1773 = *v1774;
            v1773[1] = v1775;
            uint64_t v1776 = v1621[26];
            uint64_t v1777 = (void *)((char *)v1619 + v1776);
            v1778 = (void *)((char *)v1620 + v1776);
            uint64_t v1779 = v1778[1];
            *uint64_t v1777 = *v1778;
            v1777[1] = v1779;
            uint64_t v1780 = v1621[27];
            uint64_t v1781 = (void *)((char *)v1619 + v1780);
            uint64_t v1782 = (void *)((char *)v1620 + v1780);
            uint64_t v1783 = v1782[1];
            *uint64_t v1781 = *v1782;
            v1781[1] = v1783;
            uint64_t v1784 = v1621[28];
            uint64_t v1785 = (void *)((char *)v1619 + v1784);
            uint64_t v1786 = (void *)((char *)v1620 + v1784);
            uint64_t v1787 = v1786[1];
            *uint64_t v1785 = *v1786;
            v1785[1] = v1787;
            uint64_t v1788 = v1621[29];
            uint64_t v1789 = (char *)v1619 + v1788;
            uint64_t v1790 = (char *)v1620 + v1788;
            *(void *)uint64_t v1789 = *(void *)v1790;
            v1789[8] = v1790[8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1619, 0, 1, (uint64_t)v1621);
            uint64_t v329 = v2613;
            uint64_t v497 = (uint64_t)v2630;
            v327 = v2595;
          }
          uint64_t v1791 = v329[13];
          v1792 = (void *)(v497 + v1791);
          uint64_t v1793 = (void *)((char *)v327 + v1791);
          uint64_t v1794 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1793, 1, (uint64_t)v1794))
          {
            uint64_t v1795 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v1792, v1793, *(void *)(*(void *)(v1795 - 8) + 64));
          }
          else
          {
            uint64_t v1796 = v1793[1];
            void *v1792 = *v1793;
            v1792[1] = v1796;
            uint64_t v2577 = v1793[3];
            v1792[2] = v1793[2];
            v1792[3] = v2577;
            uint64_t v2553 = v1793[5];
            v1792[4] = v1793[4];
            v1792[5] = v2553;
            uint64_t v2521 = v1793[7];
            v1792[6] = v1793[6];
            v1792[7] = v2521;
            uint64_t v1797 = v1793[9];
            v1792[8] = v1793[8];
            v1792[9] = v1797;
            uint64_t v1798 = v1793[11];
            v1792[10] = v1793[10];
            v1792[11] = v1798;
            *((unsigned char *)v1792 + 96) = *((unsigned char *)v1793 + 96);
            uint64_t v1799 = v1793[14];
            v1792[13] = v1793[13];
            v1792[14] = v1799;
            uint64_t v1800 = v1793[16];
            v1792[15] = v1793[15];
            v1792[16] = v1800;
            uint64_t v1801 = v1794[14];
            uint64_t v2598 = (char *)v1792 + v1801;
            v2463 = (char *)v1793 + v1801;
            uint64_t v1802 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2463, 1, v1802))
            {
              uint64_t v1803 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2598, v2463, *(void *)(*(void *)(v1803 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1802 - 8) + 16))(v2598, v2463, v1802);
              __swift_storeEnumTagSinglePayload((uint64_t)v2598, 0, 1, v1802);
            }
            uint64_t v2042 = v1794[15];
            v2043 = (void *)((char *)v1792 + v2042);
            uint64_t v2044 = (void *)((char *)v1793 + v2042);
            uint64_t v2045 = v2044[1];
            void *v2043 = *v2044;
            v2043[1] = v2045;
            uint64_t v2046 = v1794[16];
            v2047 = (void *)((char *)v1792 + v2046);
            v2048 = (void *)((char *)v1793 + v2046);
            uint64_t v2599 = v2048[1];
            void *v2047 = *v2048;
            v2047[1] = v2599;
            uint64_t v2049 = v1794[17];
            uint64_t v2050 = (void *)((char *)v1792 + v2049);
            uint64_t v2051 = (void *)((char *)v1793 + v2049);
            uint64_t v2584 = v2051[1];
            *uint64_t v2050 = *v2051;
            v2050[1] = v2584;
            uint64_t v2052 = v1794[18];
            uint64_t v2053 = (void *)((char *)v1792 + v2052);
            uint64_t v2054 = (void *)((char *)v1793 + v2052);
            uint64_t v2055 = v2054[1];
            *uint64_t v2053 = *v2054;
            v2053[1] = v2055;
            uint64_t v2056 = v1794[19];
            uint64_t v2057 = (void *)((char *)v1792 + v2056);
            uint64_t v2058 = (void *)((char *)v1793 + v2056);
            uint64_t v2059 = v2058[1];
            *uint64_t v2057 = *v2058;
            v2057[1] = v2059;
            *(void *)((char *)v1792 + v1794[20]) = *(void *)((char *)v1793 + v1794[20]);
            uint64_t v2060 = v1794[21];
            uint64_t v2061 = (void *)((char *)v1792 + v2060);
            uint64_t v2062 = (void *)((char *)v1793 + v2060);
            uint64_t v2063 = v2062[1];
            *uint64_t v2061 = *v2062;
            v2061[1] = v2063;
            uint64_t v2064 = v1794[22];
            uint64_t v2065 = (void *)((char *)v1792 + v2064);
            uint64_t v2066 = (void *)((char *)v1793 + v2064);
            uint64_t v2067 = v2066[1];
            *uint64_t v2065 = *v2066;
            v2065[1] = v2067;
            uint64_t v2068 = v1794[23];
            uint64_t v2069 = (void *)((char *)v1792 + v2068);
            uint64_t v2070 = (void *)((char *)v1793 + v2068);
            uint64_t v2071 = v2070[1];
            *uint64_t v2069 = *v2070;
            v2069[1] = v2071;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1792, 0, 1, (uint64_t)v1794);
            uint64_t v329 = v2613;
            uint64_t v497 = (uint64_t)v2630;
          }
          __swift_storeEnumTagSinglePayload(v497, 0, 1, (uint64_t)v329);
        }
        uint64_t v2072 = v2656[18];
        uint64_t v2073 = (void *)((char *)v11 + v2072);
        uint64_t v2074 = (void *)((char *)v12 + v2072);
        v2075 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2074, 1, (uint64_t)v2075))
        {
          uint64_t v2076 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v2073, v2074, *(void *)(*(void *)(v2076 - 8) + 64));
        }
        else
        {
          uint64_t v2077 = v2074[1];
          *uint64_t v2073 = *v2074;
          v2073[1] = v2077;
          uint64_t v2078 = v2074[3];
          v2073[2] = v2074[2];
          v2073[3] = v2078;
          uint64_t v2079 = v2074[5];
          v2073[4] = v2074[4];
          v2073[5] = v2079;
          uint64_t v2080 = v2074[7];
          v2073[6] = v2074[6];
          v2073[7] = v2080;
          uint64_t v2081 = v2074[9];
          v2073[8] = v2074[8];
          v2073[9] = v2081;
          uint64_t v2082 = v2074[11];
          v2073[10] = v2074[10];
          v2073[11] = v2082;
          uint64_t v2083 = v2075[10];
          uint64_t v2616 = (char *)v2074 + v2083;
          uint64_t v2635 = (char *)v2073 + v2083;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2616, 1, v2642))
          {
            uint64_t v2084 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2635, v2616, *(void *)(*(void *)(v2084 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v2635, v2616, v2642);
            __swift_storeEnumTagSinglePayload((uint64_t)v2635, 0, 1, v2642);
          }
          uint64_t v2085 = v2075[11];
          v2086 = (char *)v2073 + v2085;
          v2087 = (char *)v2074 + v2085;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2074 + v2085, 1, v2642))
          {
            uint64_t v2088 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2086, v2087, *(void *)(*(void *)(v2088 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v2086, v2087, v2642);
            __swift_storeEnumTagSinglePayload((uint64_t)v2086, 0, 1, v2642);
          }
          uint64_t v2089 = v2075[12];
          v2090 = (void *)((char *)v2073 + v2089);
          v2091 = (void *)((char *)v2074 + v2089);
          uint64_t v2092 = v2091[1];
          void *v2090 = *v2091;
          v2090[1] = v2092;
          uint64_t v2093 = v2075[13];
          v2094 = (void *)((char *)v2073 + v2093);
          v2095 = (void *)((char *)v2074 + v2093);
          uint64_t v2096 = v2095[1];
          void *v2094 = *v2095;
          v2094[1] = v2096;
          uint64_t v2097 = v2075[14];
          v2098 = (void *)((char *)v2073 + v2097);
          v2099 = (void *)((char *)v2074 + v2097);
          uint64_t v2100 = v2099[1];
          void *v2098 = *v2099;
          v2098[1] = v2100;
          uint64_t v2101 = v2075[15];
          v2102 = (char *)v2073 + v2101;
          v2103 = (char *)v2074 + v2101;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2103, 1, v2642))
          {
            uint64_t v2104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2102, v2103, *(void *)(*(void *)(v2104 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v2102, v2103, v2642);
            __swift_storeEnumTagSinglePayload((uint64_t)v2102, 0, 1, v2642);
          }
          uint64_t v2105 = v2075[16];
          v2106 = (void *)((char *)v2073 + v2105);
          v2107 = (void *)((char *)v2074 + v2105);
          uint64_t v2108 = v2107[1];
          void *v2106 = *v2107;
          v2106[1] = v2108;
          uint64_t v2109 = v2075[17];
          v2110 = (void *)((char *)v2073 + v2109);
          v2111 = (void *)((char *)v2074 + v2109);
          uint64_t v2636 = v2111[1];
          void *v2110 = *v2111;
          v2110[1] = v2636;
          uint64_t v2112 = v2075[18];
          uint64_t v2113 = (void *)((char *)v2073 + v2112);
          uint64_t v2114 = (void *)((char *)v2074 + v2112);
          uint64_t v2115 = v2114[1];
          *uint64_t v2113 = *v2114;
          v2113[1] = v2115;
          uint64_t v2116 = v2075[19];
          uint64_t v2117 = (void *)((char *)v2073 + v2116);
          uint64_t v2118 = (void *)((char *)v2074 + v2116);
          uint64_t v2119 = v2118[1];
          *uint64_t v2117 = *v2118;
          v2117[1] = v2119;
          uint64_t v2120 = v2075[20];
          uint64_t v2121 = (void *)((char *)v2073 + v2120);
          v2122 = (void *)((char *)v2074 + v2120);
          uint64_t v2123 = v2122[1];
          *uint64_t v2121 = *v2122;
          v2121[1] = v2123;
          uint64_t v2124 = v2075[21];
          uint64_t v2125 = (void *)((char *)v2073 + v2124);
          v2126 = (void *)((char *)v2074 + v2124);
          uint64_t v2127 = v2126[1];
          *uint64_t v2125 = *v2126;
          v2125[1] = v2127;
          uint64_t v2128 = v2075[22];
          uint64_t v2129 = (void *)((char *)v2073 + v2128);
          v2130 = (void *)((char *)v2074 + v2128);
          uint64_t v2131 = v2130[1];
          *uint64_t v2129 = *v2130;
          v2129[1] = v2131;
          uint64_t v2132 = v2075[23];
          uint64_t v2133 = (void *)((char *)v2073 + v2132);
          v2134 = (void *)((char *)v2074 + v2132);
          uint64_t v2135 = v2134[1];
          *uint64_t v2133 = *v2134;
          v2133[1] = v2135;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2073, 0, 1, (uint64_t)v2075);
        }
        uint64_t v2136 = v2656[19];
        uint64_t v2137 = (void *)((char *)v11 + v2136);
        uint64_t v2138 = (void *)((char *)v12 + v2136);
        uint64_t v2139 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2138, 1, (uint64_t)v2139))
        {
          uint64_t v2140 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v2137, v2138, *(void *)(*(void *)(v2140 - 8) + 64));
        }
        else
        {
          uint64_t v2141 = v2138[1];
          *uint64_t v2137 = *v2138;
          v2137[1] = v2141;
          uint64_t v2142 = v2138[3];
          v2137[2] = v2138[2];
          v2137[3] = v2142;
          uint64_t v2143 = v2138[5];
          v2137[4] = v2138[4];
          v2137[5] = v2143;
          uint64_t v2144 = v2138[7];
          v2137[6] = v2138[6];
          v2137[7] = v2144;
          uint64_t v2145 = v2138[9];
          v2137[8] = v2138[8];
          v2137[9] = v2145;
          uint64_t v2617 = v2138[11];
          v2137[10] = v2138[10];
          v2137[11] = v2617;
          uint64_t v2146 = v2139[11];
          uint64_t v2637 = (char *)v2137 + v2146;
          uint64_t v2600 = (char *)v2138 + v2146;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2600, 1, v2642))
          {
            uint64_t v2147 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2637, v2600, *(void *)(*(void *)(v2147 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v2637, v2600, v2642);
            __swift_storeEnumTagSinglePayload((uint64_t)v2637, 0, 1, v2642);
          }
          uint64_t v2148 = v2139[12];
          uint64_t v2149 = (void *)((char *)v2137 + v2148);
          v2150 = (void *)((char *)v2138 + v2148);
          uint64_t v2151 = v2150[1];
          *uint64_t v2149 = *v2150;
          v2149[1] = v2151;
          *(void *)((char *)v2137 + v2139[13]) = *(void *)((char *)v2138 + v2139[13]);
          uint64_t v2152 = v2139[14];
          uint64_t v2153 = (char *)v2137 + v2152;
          v2154 = (char *)v2138 + v2152;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2154, 1, v2642))
          {
            uint64_t v2155 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2153, v2154, *(void *)(*(void *)(v2155 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v2153, v2154, v2642);
            __swift_storeEnumTagSinglePayload((uint64_t)v2153, 0, 1, v2642);
          }
          *(void *)((char *)v2137 + v2139[15]) = *(void *)((char *)v2138 + v2139[15]);
          *(void *)((char *)v2137 + v2139[16]) = *(void *)((char *)v2138 + v2139[16]);
          uint64_t v2156 = v2139[17];
          uint64_t v2157 = (void *)((char *)v2137 + v2156);
          v2158 = (void *)((char *)v2138 + v2156);
          uint64_t v2159 = v2158[1];
          *uint64_t v2157 = *v2158;
          v2157[1] = v2159;
          *(void *)((char *)v2137 + v2139[18]) = *(void *)((char *)v2138 + v2139[18]);
          *(void *)((char *)v2137 + v2139[19]) = *(void *)((char *)v2138 + v2139[19]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2137, 0, 1, (uint64_t)v2139);
        }
        uint64_t v2160 = v2656[20];
        uint64_t v2161 = (void *)((char *)v11 + v2160);
        v2162 = (void *)((char *)v12 + v2160);
        v2163 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2162, 1, (uint64_t)v2163))
        {
          uint64_t v2164 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v2161, v2162, *(void *)(*(void *)(v2164 - 8) + 64));
        }
        else
        {
          uint64_t v2165 = v2162[1];
          *uint64_t v2161 = *v2162;
          v2161[1] = v2165;
          uint64_t v2166 = v2162[3];
          v2161[2] = v2162[2];
          v2161[3] = v2166;
          uint64_t v2167 = v2162[5];
          v2161[4] = v2162[4];
          v2161[5] = v2167;
          uint64_t v2168 = v2162[7];
          v2161[6] = v2162[6];
          v2161[7] = v2168;
          uint64_t v2169 = v2163[8];
          uint64_t v2618 = (char *)v2162 + v2169;
          uint64_t v2638 = (char *)v2161 + v2169;
          uint64_t v2170 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2618, 1, v2170))
          {
            uint64_t v2171 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2638, v2618, *(void *)(*(void *)(v2171 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2170 - 8) + 16))(v2638, v2618, v2170);
            __swift_storeEnumTagSinglePayload((uint64_t)v2638, 0, 1, v2170);
          }
          uint64_t v2172 = v2163[9];
          v2173 = (void *)((char *)v2161 + v2172);
          v2174 = (void *)((char *)v2162 + v2172);
          uint64_t v2175 = v2174[1];
          void *v2173 = *v2174;
          v2173[1] = v2175;
          uint64_t v2176 = v2163[10];
          v2177 = (void *)((char *)v2161 + v2176);
          v2178 = (void *)((char *)v2162 + v2176);
          uint64_t v2179 = v2178[1];
          void *v2177 = *v2178;
          v2177[1] = v2179;
          uint64_t v2180 = v2163[11];
          v2181 = (void *)((char *)v2161 + v2180);
          v2182 = (void *)((char *)v2162 + v2180);
          uint64_t v2183 = v2182[1];
          void *v2181 = *v2182;
          v2181[1] = v2183;
          uint64_t v2184 = v2163[12];
          v2185 = (char *)v2161 + v2184;
          v2186 = (char *)v2162 + v2184;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2186, 1, v2642))
          {
            uint64_t v2187 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2185, v2186, *(void *)(*(void *)(v2187 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v2185, v2186, v2642);
            __swift_storeEnumTagSinglePayload((uint64_t)v2185, 0, 1, v2642);
          }
          uint64_t v2188 = v2163[13];
          v2189 = (char *)v2161 + v2188;
          v2190 = (char *)v2162 + v2188;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2162 + v2188, 1, v2642))
          {
            uint64_t v2191 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2189, v2190, *(void *)(*(void *)(v2191 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2642 - 8) + 16))(v2189, v2190, v2642);
            __swift_storeEnumTagSinglePayload((uint64_t)v2189, 0, 1, v2642);
          }
          uint64_t v2192 = v2163[14];
          uint64_t v2193 = (char *)v2161 + v2192;
          uint64_t v2194 = (char *)v2162 + v2192;
          *(void *)uint64_t v2193 = *(void *)v2194;
          v2193[8] = v2194[8];
          uint64_t v2195 = v2163[15];
          uint64_t v2196 = (void *)((char *)v2161 + v2195);
          uint64_t v2197 = (void *)((char *)v2162 + v2195);
          uint64_t v2198 = v2197[1];
          *uint64_t v2196 = *v2197;
          v2196[1] = v2198;
          uint64_t v2199 = v2163[16];
          v2200 = (void *)((char *)v2161 + v2199);
          v2201 = (void *)((char *)v2162 + v2199);
          uint64_t v2202 = v2201[1];
          void *v2200 = *v2201;
          v2200[1] = v2202;
          uint64_t v2203 = v2163[17];
          v2204 = (void *)((char *)v2161 + v2203);
          v2205 = (void *)((char *)v2162 + v2203);
          uint64_t v2206 = v2205[1];
          void *v2204 = *v2205;
          v2204[1] = v2206;
          uint64_t v2207 = v2163[18];
          v2208 = (void *)((char *)v2161 + v2207);
          uint64_t v2209 = (void *)((char *)v2162 + v2207);
          uint64_t v2210 = v2209[1];
          void *v2208 = *v2209;
          v2208[1] = v2210;
          uint64_t v2211 = v2163[19];
          uint64_t v2212 = (void *)((char *)v2161 + v2211);
          v2213 = (void *)((char *)v2162 + v2211);
          uint64_t v2214 = v2213[1];
          *uint64_t v2212 = *v2213;
          v2212[1] = v2214;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2161, 0, 1, (uint64_t)v2163);
        }
        uint64_t v2215 = v2656[21];
LABEL_537:
        v2034 = (void *)((char *)v11 + v2215);
        v2035 = (void *)((char *)v12 + v2215);
        uint64_t v2390 = *(void *)((char *)v12 + v2215 + 8);
        if (!v2390) {
          goto LABEL_541;
        }
        void *v2034 = *v2035;
        v2034[1] = v2390;
        uint64_t v2391 = v2035[3];
        v2034[2] = v2035[2];
        v2034[3] = v2391;
        uint64_t v2392 = v2035[5];
        v2034[4] = v2035[4];
        v2034[5] = v2392;
        uint64_t v2393 = v2035[7];
        v2034[6] = v2035[6];
        v2034[7] = v2393;
        uint64_t v2394 = v2035[9];
        v2034[8] = v2035[8];
        v2034[9] = v2394;
        uint64_t v2560 = v2035[11];
        v2034[10] = v2035[10];
        v2034[11] = v2560;
        uint64_t v2603 = v2035[13];
        v2034[12] = v2035[12];
        v2034[13] = v2603;
        uint64_t v2639 = v2035[15];
        v2034[14] = v2035[14];
        v2034[15] = v2639;
        uint64_t v2669 = v2035[17];
        v2034[16] = v2035[16];
        v2034[17] = v2669;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_539;
      case 4u:
        uint64_t v2671 = v5;
        uint64_t v2682 = v13;
        uint64_t v63 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v63;
        uint64_t v64 = v12[3];
        v11[2] = v12[2];
        v11[3] = v64;
        uint64_t v65 = v12[5];
        v11[4] = v12[4];
        v11[5] = v65;
        uint64_t v66 = v12[7];
        v11[6] = v12[6];
        v11[7] = v66;
        uint64_t v67 = type metadata accessor for NoteDocument(0);
        uint64_t v68 = *(int *)(v67 + 32);
        uint64_t v69 = (char *)v11 + v68;
        uint64_t v70 = (char *)v12 + v68;
        uint64_t v71 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v71))
        {
          uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
          __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v71);
        }
        uint64_t v5 = v2671;
        uint64_t v13 = v2682;
        uint64_t v331 = *(int *)(v67 + 36);
        goto LABEL_146;
      case 5u:
        uint64_t v2683 = v13;
        uint64_t v73 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v73;
        uint64_t v74 = v12[3];
        v11[2] = v12[2];
        v11[3] = v74;
        uint64_t v75 = v12[5];
        v11[4] = v12[4];
        v11[5] = v75;
        uint64_t v76 = (int *)type metadata accessor for Reminder(0);
        uint64_t v77 = v76[7];
        uint64_t v78 = (char *)v11 + v77;
        uint64_t v79 = (char *)v12 + v77;
        uint64_t v80 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v79, 1, v80))
        {
          uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v78, v79, v80);
          __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v80);
        }
        uint64_t v13 = v2683;
        uint64_t v332 = v76[8];
        uint64_t v333 = (char *)v11 + v332;
        v334 = (char *)v12 + v332;
        if (__swift_getEnumTagSinglePayload((uint64_t)v12 + v332, 1, v80))
        {
          uint64_t v335 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v333, v334, *(void *)(*(void *)(v335 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v333, v334, v80);
          __swift_storeEnumTagSinglePayload((uint64_t)v333, 0, 1, v80);
        }
        *((unsigned char *)v11 + v76[9]) = *((unsigned char *)v12 + v76[9]);
        uint64_t v499 = v76[10];
        uint64_t v500 = (void *)((char *)v11 + v499);
        uint64_t v501 = (void *)((char *)v12 + v499);
        uint64_t v502 = v501[1];
        *uint64_t v500 = *v501;
        v500[1] = v502;
        uint64_t v503 = v76[11];
        v504 = (void *)((char *)v11 + v503);
        v505 = (void *)((char *)v12 + v503);
        uint64_t v506 = v505[1];
        void *v504 = *v505;
        v504[1] = v506;
        uint64_t v507 = v76[12];
        uint64_t v103 = (char *)v11 + v507;
        uint64_t v104 = (char *)v12 + v507;
        uint64_t v105 = type metadata accessor for URL();
        goto LABEL_134;
      case 6u:
        uint64_t v2684 = v13;
        uint64_t v82 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v82;
        uint64_t v83 = v12[3];
        v11[2] = v12[2];
        v11[3] = v83;
        uint64_t v84 = v12[5];
        v11[4] = v12[4];
        v11[5] = v84;
        uint64_t v85 = v12[7];
        v11[6] = v12[6];
        v11[7] = v85;
        uint64_t v86 = (int *)type metadata accessor for PhoneHistory(0);
        uint64_t v87 = v86[10];
        uint64_t v2643 = (char *)v11 + v87;
        v2657 = (char *)v12 + v87;
        uint64_t v88 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v2657, 1, v88))
        {
          uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2643, v2657, *(void *)(*(void *)(v89 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v2643, v2657, v88);
          __swift_storeEnumTagSinglePayload((uint64_t)v2643, 0, 1, v88);
        }
        uint64_t v13 = v2684;
        uint64_t v336 = v86[11];
        uint64_t v337 = (void *)((char *)v11 + v336);
        v338 = (void *)((char *)v12 + v336);
        uint64_t v339 = v338[1];
        *uint64_t v337 = *v338;
        v337[1] = v339;
        uint64_t v340 = v86[12];
        uint64_t v341 = (void *)((char *)v11 + v340);
        uint64_t v342 = (void *)((char *)v12 + v340);
        uint64_t v343 = v342[1];
        *uint64_t v341 = *v342;
        v341[1] = v343;
        uint64_t v344 = v86[13];
        uint64_t v103 = (char *)v11 + v344;
        uint64_t v104 = (char *)v12 + v344;
        uint64_t v105 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        goto LABEL_135;
      case 7u:
        uint64_t v2685 = v13;
        uint64_t v90 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v90;
        uint64_t v91 = v12[3];
        v11[2] = v12[2];
        v11[3] = v91;
        uint64_t v92 = v12[5];
        v11[4] = v12[4];
        v11[5] = v92;
        uint64_t v93 = (int *)type metadata accessor for VoicemailTranscript(0);
        uint64_t v94 = v93[7];
        uint64_t v95 = (char *)v11 + v94;
        v96 = (char *)v12 + v94;
        uint64_t v97 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v96, 1, v97))
        {
          uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
          __swift_storeEnumTagSinglePayload((uint64_t)v95, 0, 1, v97);
        }
        uint64_t v13 = v2685;
        goto LABEL_80;
      case 8u:
        uint64_t v99 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v99;
        uint64_t v100 = v12[3];
        v11[2] = v12[2];
        v11[3] = v100;
        uint64_t v101 = v12[5];
        v11[4] = v12[4];
        v11[5] = v101;
        uint64_t v102 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
        uint64_t v103 = (char *)v11 + v102;
        uint64_t v104 = (char *)v12 + v102;
        uint64_t v105 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
LABEL_134:
        swift_bridgeObjectRetain();
LABEL_135:
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v104, 1, v105))
        {
          uint64_t v508 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v103, v104, *(void *)(*(void *)(v508 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16))(v103, v104, v105);
          __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, v105);
        }
        goto LABEL_543;
      case 9u:
        uint64_t v106 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v106;
        uint64_t v107 = v12[3];
        v11[2] = v12[2];
        v11[3] = v107;
        uint64_t v93 = (int *)type metadata accessor for VoiceMemo(0);
        uint64_t v108 = v93[6];
        uint64_t v109 = (char *)v11 + v108;
        uint64_t v110 = (char *)v12 + v108;
        uint64_t v111 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v111))
        {
          uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v109, v110, *(void *)(*(void *)(v112 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16))(v109, v110, v111);
          __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v111);
        }
        uint64_t v345 = v93[7];
        v346 = (char *)v11 + v345;
        uint64_t v347 = (char *)v12 + v345;
        *(void *)v346 = *(void *)v347;
        v346[8] = v347[8];
LABEL_80:
        uint64_t v348 = v93[8];
        goto LABEL_153;
      case 0xAu:
        uint64_t v113 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v113;
        uint64_t v114 = v12[3];
        v11[2] = v12[2];
        v11[3] = v114;
        uint64_t v115 = (int *)type metadata accessor for Safari(0);
        uint64_t v116 = v115[6];
        uint64_t v117 = (char *)v11 + v116;
        uint64_t v118 = (char *)v12 + v116;
        uint64_t v119 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v118, 1, v119))
        {
          uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v117, v118, v119);
          __swift_storeEnumTagSinglePayload((uint64_t)v117, 0, 1, v119);
        }
        uint64_t v349 = v115[7];
        uint64_t v350 = (void *)((char *)v11 + v349);
        size_t v351 = (void *)((char *)v12 + v349);
        uint64_t v352 = v351[1];
        *uint64_t v350 = *v351;
        v350[1] = v352;
        uint64_t v353 = v115[8];
        uint64_t v354 = (void *)((char *)v11 + v353);
        v355 = (void *)((char *)v12 + v353);
        uint64_t v356 = v355[1];
        *uint64_t v354 = *v355;
        v354[1] = v356;
        uint64_t v357 = v115[9];
        uint64_t v358 = (char *)v11 + v357;
        v359 = (char *)v12 + v357;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v359, 1, v119))
        {
          uint64_t v360 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v358, v359, *(void *)(*(void *)(v360 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v358, v359, v119);
          __swift_storeEnumTagSinglePayload((uint64_t)v358, 0, 1, v119);
        }
        goto LABEL_543;
      case 0xBu:
        uint64_t v121 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v121;
        uint64_t v122 = (void *)v12[2];
        v11[2] = v122;
        swift_bridgeObjectRetain();
        id v123 = v122;
        goto LABEL_543;
      case 0xCu:
        uint64_t v2686 = v13;
        uint64_t v124 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v124;
        uint64_t v125 = v12[3];
        v11[2] = v12[2];
        v11[3] = v125;
        uint64_t v126 = v12[5];
        v11[4] = v12[4];
        v11[5] = v126;
        uint64_t v127 = (int *)type metadata accessor for WalletTransaction(0);
        uint64_t v128 = v127[7];
        uint64_t v129 = (char *)v11 + v128;
        uint64_t v130 = (char *)v12 + v128;
        uint64_t v131 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v131))
        {
          uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v129, v130, *(void *)(*(void *)(v132 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16))(v129, v130, v131);
          __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v131);
        }
        uint64_t v13 = v2686;
        uint64_t v361 = v127[8];
        uint64_t v362 = (void *)((char *)v11 + v361);
        uint64_t v363 = (void *)((char *)v12 + v361);
        uint64_t v364 = v363[1];
        *uint64_t v362 = *v363;
        v362[1] = v364;
        uint64_t v365 = v127[9];
        uint64_t v366 = (void *)((char *)v11 + v365);
        uint64_t v367 = (void *)((char *)v12 + v365);
        uint64_t v368 = v367[1];
        *uint64_t v366 = *v367;
        v366[1] = v368;
        uint64_t v369 = v127[10];
        uint64_t v370 = (void *)((char *)v11 + v369);
        uint64_t v371 = (void *)((char *)v12 + v369);
        uint64_t v372 = v371[1];
        *uint64_t v370 = *v371;
        v370[1] = v372;
        uint64_t v373 = v127[11];
        uint64_t v374 = (char *)v11 + v373;
        uint64_t v375 = (char *)v12 + v373;
        *(_OWORD *)uint64_t v374 = *(_OWORD *)v375;
        *(void *)(v374 + 13) = *(void *)(v375 + 13);
        uint64_t v376 = v127[12];
        v377 = (void *)((char *)v11 + v376);
        uint64_t v378 = (void *)((char *)v12 + v376);
        uint64_t v379 = v378[1];
        void *v377 = *v378;
        v377[1] = v379;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_164;
      case 0xDu:
        uint64_t v2687 = v13;
        uint64_t v133 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v133;
        uint64_t v134 = v12[3];
        v11[2] = v12[2];
        v11[3] = v134;
        uint64_t v135 = v12[5];
        v11[4] = v12[4];
        v11[5] = v135;
        uint64_t v136 = (int *)type metadata accessor for WalletPass(0);
        uint64_t v137 = v136[7];
        uint64_t v138 = (char *)v11 + v137;
        uint64_t v139 = (char *)v12 + v137;
        uint64_t v140 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v140))
        {
          uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v138, v139, *(void *)(*(void *)(v141 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
          __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v140);
        }
        uint64_t v13 = v2687;
        uint64_t v380 = v136[8];
        uint64_t v381 = (void *)((char *)v11 + v380);
        uint64_t v382 = (void *)((char *)v12 + v380);
        uint64_t v383 = v382[1];
        *uint64_t v381 = *v382;
        v381[1] = v383;
        *(void *)((char *)v11 + v136[9]) = *(void *)((char *)v12 + v136[9]);
        swift_bridgeObjectRetain();
        goto LABEL_164;
      case 0xEu:
        uint64_t v142 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v142;
        uint64_t v143 = v12[3];
        v11[2] = v12[2];
        v11[3] = v143;
        uint64_t v144 = v12[5];
        v11[4] = v12[4];
        v11[5] = v144;
        uint64_t v145 = v12[7];
        v11[6] = v12[6];
        v11[7] = v145;
        uint64_t v146 = v12[9];
        v11[8] = v12[8];
        v11[9] = v146;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_164;
      case 0xFu:
        uint64_t v2672 = v5;
        uint64_t v2688 = v13;
        uint64_t v147 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v147;
        uint64_t v148 = v12[3];
        v11[2] = v12[2];
        v11[3] = v148;
        uint64_t v149 = v12[5];
        v11[4] = v12[4];
        v11[5] = v149;
        uint64_t v2658 = v12[7];
        v11[6] = v12[6];
        v11[7] = v2658;
        uint64_t v2644 = v12[9];
        v11[8] = v12[8];
        v11[9] = v2644;
        uint64_t v150 = v12[11];
        v11[10] = v12[10];
        v11[11] = v150;
        *((unsigned char *)v11 + 96) = *((unsigned char *)v12 + 96);
        uint64_t v151 = v12[14];
        v11[13] = v12[13];
        v11[14] = v151;
        uint64_t v152 = (int *)type metadata accessor for FlightReservation(0);
        uint64_t v153 = v152[13];
        v2606 = (char *)v11 + v153;
        v154 = (char *)v12 + v153;
        uint64_t v2624 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v154, 1, v2624))
        {
          uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v2606, v154, *(void *)(*(void *)(v155 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v2624 - 8) + 16))(v2606, v154, v2624);
          __swift_storeEnumTagSinglePayload((uint64_t)v2606, 0, 1, v2624);
        }
        uint64_t v384 = v152[14];
        uint64_t v385 = (char *)v11 + v384;
        uint64_t v386 = (char *)v12 + v384;
        if (__swift_getEnumTagSinglePayload((uint64_t)v12 + v384, 1, v2624))
        {
          uint64_t v387 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v385, v386, *(void *)(*(void *)(v387 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v2624 - 8) + 16))(v385, v386, v2624);
          __swift_storeEnumTagSinglePayload((uint64_t)v385, 0, 1, v2624);
        }
        uint64_t v509 = v152[15];
        uint64_t v510 = (void *)((char *)v11 + v509);
        uint64_t v511 = (void *)((char *)v12 + v509);
        uint64_t v512 = v511[1];
        *uint64_t v510 = *v511;
        v510[1] = v512;
        uint64_t v513 = v152[16];
        v514 = (void *)((char *)v11 + v513);
        v515 = (void *)((char *)v12 + v513);
        uint64_t v516 = v515[1];
        void *v514 = *v515;
        v514[1] = v516;
        uint64_t v517 = v152[17];
        v518 = (void *)((char *)v11 + v517);
        v519 = (void *)((char *)v12 + v517);
        uint64_t v520 = v519[1];
        void *v518 = *v519;
        v518[1] = v520;
        uint64_t v521 = v152[18];
        uint64_t v2665 = (char *)v11 + v521;
        v522 = (char *)v12 + v521;
        uint64_t v523 = type metadata accessor for DateComponents();
        uint64_t v524 = *(void (**)(char *, char *, uint64_t))(*(void *)(v523 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v524(v2665, v522, v523);
        v524((char *)v11 + v152[19], (char *)v12 + v152[19], v523);
        uint64_t v525 = v152[20];
        uint64_t v526 = (void *)((char *)v11 + v525);
        v527 = (void *)((char *)v12 + v525);
        uint64_t v2614 = v527[1];
        *uint64_t v526 = *v527;
        v526[1] = v2614;
        uint64_t v528 = v152[21];
        v529 = (void *)((char *)v11 + v528);
        v530 = (void *)((char *)v12 + v528);
        uint64_t v2666 = v530[1];
        void *v529 = *v530;
        v529[1] = v2666;
        uint64_t v531 = v152[22];
        v532 = (void *)((char *)v11 + v531);
        v533 = (void *)((char *)v12 + v531);
        uint64_t v2651 = v533[1];
        void *v532 = *v533;
        v532[1] = v2651;
        uint64_t v534 = v152[23];
        v535 = (void *)((char *)v11 + v534);
        v536 = (void *)((char *)v12 + v534);
        uint64_t v2631 = v536[1];
        void *v535 = *v536;
        v535[1] = v2631;
        uint64_t v537 = v152[24];
        v538 = (void *)((char *)v11 + v537);
        v539 = (void *)((char *)v12 + v537);
        uint64_t v2596 = v539[1];
        void *v538 = *v539;
        v538[1] = v2596;
        uint64_t v540 = v152[25];
        v541 = (void *)((char *)v11 + v540);
        v542 = (void *)((char *)v12 + v540);
        uint64_t v2568 = v542[1];
        void *v541 = *v542;
        v541[1] = v2568;
        uint64_t v543 = v152[26];
        v544 = (void *)((char *)v11 + v543);
        v545 = (void *)((char *)v12 + v543);
        uint64_t v2531 = v545[1];
        void *v544 = *v545;
        v544[1] = v2531;
        uint64_t v546 = v152[27];
        v547 = (void *)((char *)v11 + v546);
        v548 = (void *)((char *)v12 + v546);
        uint64_t v2502 = v548[1];
        void *v547 = *v548;
        v547[1] = v2502;
        uint64_t v549 = v152[28];
        v550 = (void *)((char *)v11 + v549);
        v551 = (void *)((char *)v12 + v549);
        v2478 = (void *)v551[1];
        void *v550 = *v551;
        v550[1] = v2478;
        uint64_t v552 = v152[29];
        v553 = (void *)((char *)v11 + v552);
        v554 = (void *)((char *)v12 + v552);
        v2465 = (void *)v554[1];
        void *v553 = *v554;
        v553[1] = v2465;
        uint64_t v555 = v152[30];
        v556 = (void *)((char *)v11 + v555);
        v557 = (void *)((char *)v12 + v555);
        v2456 = (void *)v557[1];
        void *v556 = *v557;
        v556[1] = v2456;
        uint64_t v558 = v152[31];
        v559 = (void *)((char *)v11 + v558);
        v560 = (void *)((char *)v12 + v558);
        uint64_t v2448 = v560[1];
        void *v559 = *v560;
        v559[1] = v2448;
        uint64_t v561 = v152[32];
        v562 = (void *)((char *)v11 + v561);
        v563 = (void *)((char *)v12 + v561);
        uint64_t v564 = v563[1];
        void *v562 = *v563;
        v562[1] = v564;
        *(void *)((char *)v11 + v152[33]) = *(void *)((char *)v12 + v152[33]);
        *(void *)((char *)v11 + v152[34]) = *(void *)((char *)v12 + v152[34]);
        uint64_t v565 = v152[35];
        v566 = (void *)((char *)v11 + v565);
        uint64_t v567 = (void *)((char *)v12 + v565);
        uint64_t v568 = v567[1];
        void *v566 = *v567;
        v566[1] = v568;
        uint64_t v569 = v152[36];
        v570 = (void *)((char *)v11 + v569);
        uint64_t v571 = (void *)((char *)v12 + v569);
        uint64_t v572 = v571[1];
        void *v570 = *v571;
        v570[1] = v572;
        uint64_t v573 = v152[37];
        v574 = (void *)((char *)v11 + v573);
        uint64_t v575 = (void *)((char *)v12 + v573);
        uint64_t v576 = v575[1];
        void *v574 = *v575;
        v574[1] = v576;
        uint64_t v577 = v152[38];
        v2435 = (char *)v11 + v577;
        uint64_t v2442 = (char *)v12 + v577;
        uint64_t v578 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v2442, 1, v578))
        {
          uint64_t v579 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2435, v2442, *(void *)(*(void *)(v579 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v578 - 8) + 16))(v2435, v2442, v578);
          __swift_storeEnumTagSinglePayload((uint64_t)v2435, 0, 1, v578);
        }
        uint64_t v5 = v2672;
        uint64_t v13 = v2688;
        uint64_t v646 = v152[39];
        uint64_t v647 = (void *)((char *)v11 + v646);
        uint64_t v648 = (void *)((char *)v12 + v646);
        uint64_t v649 = v648[1];
        *uint64_t v647 = *v648;
        v647[1] = v649;
        uint64_t v650 = v152[40];
        uint64_t v651 = (void *)((char *)v11 + v650);
        v652 = (void *)((char *)v12 + v650);
        uint64_t v653 = v652[1];
        *uint64_t v651 = *v652;
        v651[1] = v653;
        uint64_t v654 = v152[41];
        uint64_t v655 = (char *)v11 + v654;
        v656 = (char *)v12 + v654;
        v655[8] = v656[8];
        *(void *)uint64_t v655 = *(void *)v656;
        uint64_t v657 = v152[42];
        uint64_t v658 = (void *)((char *)v11 + v657);
        v659 = (void *)((char *)v12 + v657);
        uint64_t v660 = v659[1];
        *uint64_t v658 = *v659;
        v658[1] = v660;
        uint64_t v661 = v152[43];
        uint64_t v662 = (char *)v11 + v661;
        v663 = (char *)v12 + v661;
        *(_OWORD *)uint64_t v662 = *(_OWORD *)v663;
        *(void *)(v662 + 13) = *(void *)(v663 + 13);
        uint64_t v664 = v152[44];
        uint64_t v665 = (void *)((char *)v11 + v664);
        uint64_t v666 = (void *)((char *)v12 + v664);
        uint64_t v667 = v666[1];
        *uint64_t v665 = *v666;
        v665[1] = v667;
        uint64_t v668 = v152[45];
        uint64_t v669 = (void *)((char *)v11 + v668);
        uint64_t v670 = (void *)((char *)v12 + v668);
        uint64_t v671 = v670[1];
        *uint64_t v669 = *v670;
        v669[1] = v671;
        uint64_t v672 = v152[46];
        uint64_t v673 = (void *)((char *)v11 + v672);
        uint64_t v674 = (void *)((char *)v12 + v672);
        uint64_t v675 = v674[1];
        *uint64_t v673 = *v674;
        v673[1] = v675;
        uint64_t v676 = v152[47];
        v677 = (void *)((char *)v11 + v676);
        v678 = (void *)((char *)v12 + v676);
        uint64_t v679 = v678[1];
        void *v677 = *v678;
        v677[1] = v679;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v680 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
        *(void *)((char *)v11 + *(int *)(v680 + 48)) = *(void *)((char *)v12 + *(int *)(v680 + 48));
        goto LABEL_164;
      case 0x10u:
        v2670 = v5;
        uint64_t v2680 = v13;
        uint64_t v156 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v156;
        uint64_t v157 = v12[3];
        v11[2] = v12[2];
        v11[3] = v157;
        uint64_t v158 = v12[5];
        v11[4] = v12[4];
        v11[5] = v158;
        uint64_t v2659 = v12[7];
        v11[6] = v12[6];
        v11[7] = v2659;
        uint64_t v159 = v12[9];
        v11[8] = v12[8];
        v11[9] = v159;
        uint64_t v2645 = v12[11];
        v11[10] = v12[10];
        v11[11] = v2645;
        *((unsigned char *)v11 + 96) = *((unsigned char *)v12 + 96);
        uint64_t v160 = v12[14];
        v11[13] = v12[13];
        v11[14] = v160;
        uint64_t v161 = v12[16];
        v11[15] = v12[15];
        v11[16] = v161;
        uint64_t v162 = (int *)type metadata accessor for HotelReservation(0);
        uint64_t v163 = v162[14];
        v2588 = (char *)v11 + v163;
        uint64_t v2625 = (char *)v12 + v163;
        uint64_t v2607 = type metadata accessor for DateComponents();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v2625, 1, v2607))
        {
          uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v2588, v2625, *(void *)(*(void *)(v164 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v2607 - 8) + 16))(v2588, v2625, v2607);
          __swift_storeEnumTagSinglePayload((uint64_t)v2588, 0, 1, v2607);
        }
        uint64_t v388 = v162[15];
        uint64_t v389 = (char *)v11 + v388;
        uint64_t v390 = (char *)v12 + v388;
        if (__swift_getEnumTagSinglePayload((uint64_t)v12 + v388, 1, v2607))
        {
          uint64_t v391 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v389, v390, *(void *)(*(void *)(v391 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v2607 - 8) + 16))(v389, v390, v2607);
          __swift_storeEnumTagSinglePayload((uint64_t)v389, 0, 1, v2607);
        }
        uint64_t v580 = v162[16];
        uint64_t v581 = (void *)((char *)v11 + v580);
        uint64_t v582 = (void *)((char *)v12 + v580);
        uint64_t v583 = v582[1];
        *uint64_t v581 = *v582;
        v581[1] = v583;
        uint64_t v584 = v162[17];
        uint64_t v585 = (void *)((char *)v11 + v584);
        uint64_t v586 = (void *)((char *)v12 + v584);
        uint64_t v2667 = v586[1];
        *uint64_t v585 = *v586;
        v585[1] = v2667;
        uint64_t v587 = v162[18];
        v588 = (void *)((char *)v11 + v587);
        uint64_t v589 = (void *)((char *)v12 + v587);
        uint64_t v2652 = v589[1];
        void *v588 = *v589;
        v588[1] = v2652;
        uint64_t v590 = v162[19];
        v591 = (void *)((char *)v11 + v590);
        uint64_t v592 = (void *)((char *)v12 + v590);
        uint64_t v2632 = v592[1];
        void *v591 = *v592;
        v591[1] = v2632;
        uint64_t v593 = v162[20];
        v594 = (void *)((char *)v11 + v593);
        uint64_t v595 = (void *)((char *)v12 + v593);
        uint64_t v596 = v595[1];
        void *v594 = *v595;
        v594[1] = v596;
        *(void *)((char *)v11 + v162[21]) = *(void *)((char *)v12 + v162[21]);
        *(void *)((char *)v11 + v162[22]) = *(void *)((char *)v12 + v162[22]);
        uint64_t v597 = v162[23];
        uint64_t v598 = (char *)v11 + v597;
        uint64_t v599 = (char *)v12 + v597;
        *(void *)uint64_t v598 = *(void *)v599;
        v598[8] = v599[8];
        uint64_t v600 = v162[24];
        v601 = (char *)v11 + v600;
        uint64_t v602 = (char *)v12 + v600;
        *(void *)v601 = *(void *)v602;
        v601[8] = v602[8];
        uint64_t v603 = v162[25];
        v604 = (void *)((char *)v11 + v603);
        uint64_t v605 = (void *)((char *)v12 + v603);
        uint64_t v606 = v605[1];
        void *v604 = *v605;
        v604[1] = v606;
        uint64_t v607 = v162[26];
        uint64_t v608 = (void *)((char *)v11 + v607);
        uint64_t v609 = (void *)((char *)v12 + v607);
        uint64_t v610 = v609[1];
        *uint64_t v608 = *v609;
        v608[1] = v610;
        uint64_t v611 = v162[27];
        uint64_t v612 = (void *)((char *)v11 + v611);
        uint64_t v613 = (void *)((char *)v12 + v611);
        uint64_t v614 = v613[1];
        *uint64_t v612 = *v613;
        v612[1] = v614;
        uint64_t v615 = v162[28];
        uint64_t v616 = (void *)((char *)v11 + v615);
        uint64_t v617 = (void *)((char *)v12 + v615);
        uint64_t v618 = v617[1];
        *uint64_t v616 = *v617;
        v616[1] = v618;
        uint64_t v619 = v162[29];
        uint64_t v620 = (char *)v11 + v619;
        uint64_t v621 = (char *)v12 + v619;
        *(void *)uint64_t v620 = *(void *)v621;
        v620[8] = v621[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_540;
      case 0x11u:
        v2670 = v5;
        uint64_t v2680 = v13;
        uint64_t v165 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v165;
        uint64_t v166 = v12[3];
        v11[2] = v12[2];
        v11[3] = v166;
        uint64_t v167 = v12[5];
        v11[4] = v12[4];
        v11[5] = v167;
        uint64_t v2660 = v12[7];
        v11[6] = v12[6];
        v11[7] = v2660;
        uint64_t v2646 = v12[9];
        v11[8] = v12[8];
        v11[9] = v2646;
        uint64_t v2626 = v12[11];
        v11[10] = v12[10];
        v11[11] = v2626;
        *((unsigned char *)v11 + 96) = *((unsigned char *)v12 + 96);
        uint64_t v168 = v12[14];
        v11[13] = v12[13];
        v11[14] = v168;
        uint64_t v169 = v12[16];
        v11[15] = v12[15];
        v11[16] = v169;
        uint64_t v170 = (int *)type metadata accessor for RestaurantReservation(0);
        uint64_t v171 = v170[14];
        uint64_t v2589 = (char *)v11 + v171;
        uint64_t v2608 = (char *)v12 + v171;
        uint64_t v172 = type metadata accessor for DateComponents();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v2608, 1, v172))
        {
          uint64_t v173 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v2589, v2608, *(void *)(*(void *)(v173 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 16))(v2589, v2608, v172);
          __swift_storeEnumTagSinglePayload((uint64_t)v2589, 0, 1, v172);
        }
        uint64_t v392 = v170[15];
        uint64_t v393 = (void *)((char *)v11 + v392);
        uint64_t v394 = (void *)((char *)v12 + v392);
        uint64_t v395 = v394[1];
        *uint64_t v393 = *v394;
        v393[1] = v395;
        uint64_t v396 = v170[16];
        uint64_t v397 = (void *)((char *)v11 + v396);
        uint64_t v398 = (void *)((char *)v12 + v396);
        uint64_t v399 = v398[1];
        *uint64_t v397 = *v398;
        v397[1] = v399;
        uint64_t v400 = v170[17];
        uint64_t v401 = (void *)((char *)v11 + v400);
        v402 = (void *)((char *)v12 + v400);
        uint64_t v403 = v402[1];
        *uint64_t v401 = *v402;
        v401[1] = v403;
        uint64_t v404 = v170[18];
        uint64_t v405 = (void *)((char *)v11 + v404);
        v406 = (void *)((char *)v12 + v404);
        uint64_t v407 = v406[1];
        *uint64_t v405 = *v406;
        v405[1] = v407;
        uint64_t v408 = v170[19];
        uint64_t v409 = (void *)((char *)v11 + v408);
        v410 = (void *)((char *)v12 + v408);
        uint64_t v411 = v410[1];
        *uint64_t v409 = *v410;
        v409[1] = v411;
        *(void *)((char *)v11 + v170[20]) = *(void *)((char *)v12 + v170[20]);
        uint64_t v412 = v170[21];
        uint64_t v413 = (void *)((char *)v11 + v412);
        v414 = (void *)((char *)v12 + v412);
        uint64_t v415 = v414[1];
        *uint64_t v413 = *v414;
        v413[1] = v415;
        uint64_t v416 = v170[22];
        uint64_t v417 = (void *)((char *)v11 + v416);
        v418 = (void *)((char *)v12 + v416);
        uint64_t v419 = v418[1];
        *uint64_t v417 = *v418;
        v417[1] = v419;
        uint64_t v420 = v170[23];
        uint64_t v421 = (void *)((char *)v11 + v420);
        v422 = (void *)((char *)v12 + v420);
        uint64_t v423 = v422[1];
        *uint64_t v421 = *v422;
        v421[1] = v423;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_540;
      case 0x12u:
        v2673 = v5;
        uint64_t v2689 = v13;
        uint64_t v174 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v174;
        uint64_t v175 = v12[3];
        v11[2] = v12[2];
        v11[3] = v175;
        uint64_t v176 = v12[5];
        v11[4] = v12[4];
        v11[5] = v176;
        uint64_t v177 = v12[7];
        v11[6] = v12[6];
        v11[7] = v177;
        uint64_t v178 = v12[9];
        v11[8] = v12[8];
        v11[9] = v178;
        uint64_t v179 = v12[11];
        v11[10] = v12[10];
        v11[11] = v179;
        uint64_t v180 = v12[13];
        v11[12] = v12[12];
        v11[13] = v180;
        uint64_t v181 = v12[15];
        v11[14] = v12[14];
        v11[15] = v181;
        *((unsigned char *)v11 + 128) = *((unsigned char *)v12 + 128);
        *(_WORD *)((char *)v11 + 129) = *(_WORD *)((char *)v12 + 129);
        uint64_t v182 = v12[18];
        v11[17] = v12[17];
        v11[18] = v182;
        uint64_t v183 = v12[20];
        v11[19] = v12[19];
        v11[20] = v183;
        uint64_t v184 = v12[22];
        v11[21] = v12[21];
        v11[22] = v184;
        uint64_t v185 = v12[24];
        v11[23] = v12[23];
        v11[24] = v185;
        uint64_t v186 = v12[26];
        v11[25] = v12[25];
        v11[26] = v186;
        uint64_t v187 = v12[28];
        v11[27] = v12[27];
        v11[28] = v187;
        uint64_t v188 = v12[30];
        v11[29] = v12[29];
        v11[30] = v188;
        uint64_t v2661 = v12[32];
        v11[31] = v12[31];
        v11[32] = v2661;
        uint64_t v2647 = v12[34];
        v11[33] = v12[33];
        v11[34] = v2647;
        uint64_t v2627 = v12[36];
        v11[35] = v12[35];
        v11[36] = v2627;
        uint64_t v2609 = v12[38];
        v11[37] = v12[37];
        v11[38] = v2609;
        uint64_t v2590 = v12[40];
        v11[39] = v12[39];
        v11[40] = v2590;
        uint64_t v2562 = v12[42];
        v11[41] = v12[41];
        v11[42] = v2562;
        uint64_t v2526 = v12[44];
        v11[43] = v12[43];
        v11[44] = v2526;
        uint64_t v2496 = v12[46];
        v11[45] = v12[45];
        v11[46] = v2496;
        uint64_t v189 = v12[47];
        *((unsigned char *)v11 + 384) = *((unsigned char *)v12 + 384);
        v11[47] = v189;
        uint64_t v190 = v12[50];
        v11[49] = v12[49];
        v11[50] = v190;
        uint64_t v191 = v12[52];
        v11[51] = v12[51];
        v11[52] = v191;
        uint64_t v192 = type metadata accessor for RentalCarReservation(0);
        uint64_t v193 = *(int *)(v192 + 140);
        __dst = (char *)v11 + v193;
        uint64_t v2408 = v192;
        uint64_t v194 = (char *)v12 + v193;
        uint64_t v195 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v194, 1, v195))
        {
          uint64_t v196 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(__dst, v194, *(void *)(*(void *)(v196 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(__dst, v194, v195);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v195);
        }
        uint64_t v5 = v2673;
        uint64_t v13 = v2689;
        uint64_t v424 = *(int *)(v2408 + 144);
        goto LABEL_105;
      case 0x13u:
        uint64_t v2674 = v5;
        uint64_t v2690 = v13;
        uint64_t v2497 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v2497;
        uint64_t v197 = v12[3];
        v11[2] = v12[2];
        v11[3] = v197;
        uint64_t v198 = v12[5];
        v11[4] = v12[4];
        v11[5] = v198;
        uint64_t v199 = v12[7];
        v11[6] = v12[6];
        v11[7] = v199;
        uint64_t v200 = v12[9];
        v11[8] = v12[8];
        v11[9] = v200;
        uint64_t v201 = v12[11];
        v11[10] = v12[10];
        v11[11] = v201;
        uint64_t v202 = v12[13];
        v11[12] = v12[12];
        v11[13] = v202;
        uint64_t v203 = v12[15];
        v11[14] = v12[14];
        v11[15] = v203;
        *((unsigned char *)v11 + 128) = *((unsigned char *)v12 + 128);
        *(_WORD *)((char *)v11 + 129) = *(_WORD *)((char *)v12 + 129);
        uint64_t v204 = v12[18];
        v11[17] = v12[17];
        v11[18] = v204;
        uint64_t v205 = v12[20];
        v11[19] = v12[19];
        v11[20] = v205;
        uint64_t v206 = v12[22];
        v11[21] = v12[21];
        v11[22] = v206;
        uint64_t v207 = v12[24];
        v11[23] = v12[23];
        v11[24] = v207;
        uint64_t v2662 = v12[26];
        v11[25] = v12[25];
        v11[26] = v2662;
        uint64_t v2648 = v12[28];
        v11[27] = v12[27];
        v11[28] = v2648;
        uint64_t v2628 = v12[30];
        v11[29] = v12[29];
        v11[30] = v2628;
        uint64_t v2610 = v12[32];
        v11[31] = v12[31];
        v11[32] = v2610;
        uint64_t v208 = v12[34];
        v11[33] = v12[33];
        v11[34] = v208;
        uint64_t v209 = v12[36];
        uint64_t v2563 = v12[35];
        *((unsigned char *)v11 + 296) = *((unsigned char *)v12 + 296);
        v11[35] = v2563;
        v11[36] = v209;
        uint64_t v210 = type metadata accessor for TicketedTransportation(0);
        uint64_t v211 = *(int *)(v210 + 112);
        v2422 = (char *)v11 + v211;
        uint64_t v2428 = (int *)v210;
        uint64_t v212 = (char *)v12 + v211;
        uint64_t v195 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v212, 1, v195))
        {
          uint64_t v213 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2422, v212, *(void *)(*(void *)(v213 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(v2422, v212, v195);
          __swift_storeEnumTagSinglePayload((uint64_t)v2422, 0, 1, v195);
        }
        uint64_t v5 = v2674;
        uint64_t v13 = v2690;
        uint64_t v424 = v2428[29];
        goto LABEL_105;
      case 0x14u:
        uint64_t v2675 = v5;
        uint64_t v2691 = v13;
        uint64_t v214 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v214;
        uint64_t v215 = v12[3];
        v11[2] = v12[2];
        v11[3] = v215;
        uint64_t v216 = v12[5];
        v11[4] = v12[4];
        v11[5] = v216;
        uint64_t v217 = v12[7];
        v11[6] = v12[6];
        v11[7] = v217;
        uint64_t v218 = v12[9];
        v11[8] = v12[8];
        v11[9] = v218;
        uint64_t v219 = v12[11];
        v11[10] = v12[10];
        v11[11] = v219;
        uint64_t v220 = v12[13];
        v11[12] = v12[12];
        v11[13] = v220;
        uint64_t v221 = v12[15];
        v11[14] = v12[14];
        v11[15] = v221;
        *((unsigned char *)v11 + 128) = *((unsigned char *)v12 + 128);
        *(_WORD *)((char *)v11 + 129) = *(_WORD *)((char *)v12 + 129);
        uint64_t v222 = v12[18];
        v11[17] = v12[17];
        v11[18] = v222;
        uint64_t v223 = v12[20];
        v11[19] = v12[19];
        v11[20] = v223;
        uint64_t v224 = v12[22];
        v11[21] = v12[21];
        v11[22] = v224;
        uint64_t v225 = v12[24];
        v11[23] = v12[23];
        v11[24] = v225;
        uint64_t v226 = v12[26];
        v11[25] = v12[25];
        v11[26] = v226;
        uint64_t v227 = v12[28];
        v11[27] = v12[27];
        v11[28] = v227;
        uint64_t v2663 = v12[30];
        v11[29] = v12[29];
        v11[30] = v2663;
        uint64_t v2649 = v12[32];
        v11[31] = v12[31];
        v11[32] = v2649;
        uint64_t v228 = v12[34];
        v11[33] = v12[33];
        v11[34] = v228;
        uint64_t v229 = v12[36];
        uint64_t v2611 = v12[35];
        *((unsigned char *)v11 + 296) = *((unsigned char *)v12 + 296);
        v11[35] = v2611;
        v11[36] = v229;
        uint64_t v2591 = v12[39];
        v11[38] = v12[38];
        v11[39] = v2591;
        uint64_t v230 = type metadata accessor for TicketedShow(0);
        uint64_t v231 = *(int *)(v230 + 116);
        v2417 = (char *)v11 + v231;
        v2423 = (int *)v230;
        uint64_t v232 = (char *)v12 + v231;
        uint64_t v233 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v232, 1, v233))
        {
          uint64_t v234 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v2417, v232, *(void *)(*(void *)(v234 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v233 - 8) + 16))(v2417, v232, v233);
          __swift_storeEnumTagSinglePayload((uint64_t)v2417, 0, 1, v233);
        }
        uint64_t v5 = v2675;
        uint64_t v13 = v2691;
        uint64_t v425 = v2423[30];
        uint64_t v426 = (void *)((char *)v11 + v425);
        v427 = (void *)((char *)v12 + v425);
        uint64_t v428 = v427[1];
        *uint64_t v426 = *v427;
        v426[1] = v428;
        uint64_t v429 = v2423[31];
        uint64_t v430 = (char *)v11 + v429;
        v431 = (char *)v12 + v429;
        uint64_t v71 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v431, 1, v71))
        {
          uint64_t v432 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v430, v431, *(void *)(*(void *)(v432 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v430, v431, v71);
          __swift_storeEnumTagSinglePayload((uint64_t)v430, 0, 1, v71);
        }
        uint64_t v331 = v2423[32];
LABEL_146:
        v622 = (char *)v11 + v331;
        v623 = (char *)v12 + v331;
        if (__swift_getEnumTagSinglePayload((uint64_t)v12 + v331, 1, v71))
        {
          size_t v624 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                       - 8)
                           + 64);
          uint64_t v625 = v622;
          uint64_t v626 = v623;
          goto LABEL_155;
        }
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v622, v623, v71);
        uint64_t v627 = (uint64_t)v622;
        uint64_t v628 = v71;
        goto LABEL_157;
      case 0x15u:
        uint64_t v2676 = v5;
        uint64_t v2692 = v13;
        uint64_t v2592 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v2592;
        uint64_t v2564 = v12[3];
        v11[2] = v12[2];
        v11[3] = v2564;
        uint64_t v2527 = v12[5];
        v11[4] = v12[4];
        v11[5] = v2527;
        uint64_t v2498 = v12[7];
        v11[6] = v12[6];
        v11[7] = v2498;
        uint64_t v235 = v12[9];
        v11[8] = v12[8];
        v11[9] = v235;
        uint64_t v236 = v12[11];
        v11[10] = v12[10];
        v11[11] = v236;
        uint64_t v237 = v12[13];
        v11[12] = v12[12];
        v11[13] = v237;
        uint64_t v238 = v12[15];
        v11[14] = v12[14];
        v11[15] = v238;
        *((unsigned char *)v11 + 128) = *((unsigned char *)v12 + 128);
        *(_WORD *)((char *)v11 + 129) = *(_WORD *)((char *)v12 + 129);
        uint64_t v239 = v12[18];
        v11[17] = v12[17];
        v11[18] = v239;
        uint64_t v240 = v12[20];
        v11[19] = v12[19];
        v11[20] = v240;
        uint64_t v241 = v12[22];
        v11[21] = v12[21];
        v11[22] = v241;
        uint64_t v242 = v12[24];
        v11[23] = v12[23];
        v11[24] = v242;
        uint64_t v243 = v12[26];
        v11[25] = v12[25];
        v11[26] = v243;
        uint64_t v244 = v12[28];
        v11[27] = v12[27];
        v11[28] = v244;
        uint64_t v245 = v12[30];
        v11[29] = v12[29];
        v11[30] = v245;
        uint64_t v246 = v12[32];
        v11[31] = v12[31];
        v11[32] = v246;
        uint64_t v247 = v12[34];
        uint64_t v248 = v12[33];
        *((unsigned char *)v11 + 280) = *((unsigned char *)v12 + 280);
        v11[33] = v248;
        v11[34] = v247;
        uint64_t v249 = v12[37];
        v11[36] = v12[36];
        v11[37] = v249;
        uint64_t v250 = type metadata accessor for Appointment(0);
        uint64_t v251 = *(int *)(v250 + 108);
        uint64_t v2429 = (char *)v11 + v251;
        v2434 = (int *)v250;
        uint64_t v252 = (char *)v12 + v251;
        uint64_t v195 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v252, 1, v195))
        {
          uint64_t v253 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2429, v252, *(void *)(*(void *)(v253 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(v2429, v252, v195);
          __swift_storeEnumTagSinglePayload((uint64_t)v2429, 0, 1, v195);
        }
        uint64_t v5 = v2676;
        uint64_t v13 = v2692;
        uint64_t v424 = v2434[28];
LABEL_105:
        uint64_t v433 = (char *)v11 + v424;
        v434 = (char *)v12 + v424;
        if (__swift_getEnumTagSinglePayload((uint64_t)v12 + v424, 1, v195))
        {
          uint64_t v435 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v433, v434, *(void *)(*(void *)(v435 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(v433, v434, v195);
          __swift_storeEnumTagSinglePayload((uint64_t)v433, 0, 1, v195);
        }
        goto LABEL_543;
      case 0x16u:
        uint64_t v2677 = v5;
        uint64_t v2693 = v13;
        uint64_t v2593 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v2593;
        uint64_t v2565 = v12[3];
        v11[2] = v12[2];
        v11[3] = v2565;
        uint64_t v2528 = v12[5];
        v11[4] = v12[4];
        v11[5] = v2528;
        uint64_t v2499 = v12[7];
        v11[6] = v12[6];
        v11[7] = v2499;
        uint64_t v254 = v12[9];
        v11[8] = v12[8];
        v11[9] = v254;
        uint64_t v255 = v12[11];
        v11[10] = v12[10];
        v11[11] = v255;
        uint64_t v256 = v12[13];
        v11[12] = v12[12];
        v11[13] = v256;
        uint64_t v257 = v12[15];
        v11[14] = v12[14];
        v11[15] = v257;
        *((unsigned char *)v11 + 128) = *((unsigned char *)v12 + 128);
        *(_WORD *)((char *)v11 + 129) = *(_WORD *)((char *)v12 + 129);
        uint64_t v258 = v12[18];
        v11[17] = v12[17];
        v11[18] = v258;
        uint64_t v259 = v12[20];
        v11[19] = v12[19];
        v11[20] = v259;
        uint64_t v260 = v12[22];
        v11[21] = v12[21];
        v11[22] = v260;
        uint64_t v261 = v12[24];
        v11[23] = v12[23];
        v11[24] = v261;
        uint64_t v262 = v12[26];
        v11[25] = v12[25];
        v11[26] = v262;
        uint64_t v263 = v12[28];
        v11[27] = v12[27];
        v11[28] = v263;
        uint64_t v264 = v12[30];
        v11[29] = v12[29];
        v11[30] = v264;
        v11[31] = v12[31];
        uint64_t v265 = type metadata accessor for Party(0);
        uint64_t v266 = *(int *)(v265 + 96);
        uint64_t v2441 = (char *)v11 + v266;
        uint64_t v2447 = v265;
        uint64_t v267 = (char *)v12 + v266;
        uint64_t v268 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v267, 1, v268))
        {
          uint64_t v269 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2441, v267, *(void *)(*(void *)(v269 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 16))(v2441, v267, v268);
          __swift_storeEnumTagSinglePayload((uint64_t)v2441, 0, 1, v268);
        }
        uint64_t v5 = v2677;
        uint64_t v13 = v2693;
        uint64_t v436 = *(int *)(v2447 + 100);
        uint64_t v437 = (char *)v11 + v436;
        uint64_t v438 = (char *)v12 + v436;
        if (__swift_getEnumTagSinglePayload((uint64_t)v12 + v436, 1, v268))
        {
          uint64_t v439 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v437, v438, *(void *)(*(void *)(v439 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 16))(v437, v438, v268);
          __swift_storeEnumTagSinglePayload((uint64_t)v437, 0, 1, v268);
        }
        uint64_t v348 = *(int *)(v2447 + 104);
        goto LABEL_153;
      case 0x17u:
        uint64_t v2678 = v5;
        uint64_t v2694 = v13;
        uint64_t v270 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v270;
        uint64_t v2629 = v12[3];
        v11[2] = v12[2];
        v11[3] = v2629;
        uint64_t v271 = v12[5];
        v11[4] = v12[4];
        v11[5] = v271;
        uint64_t v2612 = v12[7];
        v11[6] = v12[6];
        v11[7] = v2612;
        uint64_t v2594 = v12[9];
        v11[8] = v12[8];
        v11[9] = v2594;
        uint64_t v2566 = v12[11];
        v11[10] = v12[10];
        v11[11] = v2566;
        uint64_t v272 = v12[13];
        v11[12] = v12[12];
        v11[13] = v272;
        uint64_t v2529 = v12[15];
        v11[14] = v12[14];
        v11[15] = v2529;
        *((unsigned char *)v11 + 128) = *((unsigned char *)v12 + 128);
        *(_WORD *)((char *)v11 + 129) = *(_WORD *)((char *)v12 + 129);
        uint64_t v273 = v12[18];
        v11[17] = v12[17];
        v11[18] = v273;
        uint64_t v274 = v12[20];
        v11[19] = v12[19];
        v11[20] = v274;
        uint64_t v275 = v12[22];
        v11[21] = v12[21];
        v11[22] = v275;
        uint64_t v2500 = v12[24];
        v11[23] = v12[23];
        v11[24] = v2500;
        uint64_t v276 = v12[26];
        v11[25] = v12[25];
        v11[26] = v276;
        v11[27] = v12[27];
        uint64_t v277 = type metadata accessor for Trip(0);
        uint64_t v278 = *(int *)(v277 + 88);
        v2455 = (char *)v11 + v278;
        v2464 = (int *)v277;
        v2477 = (char *)v12 + v278;
        uint64_t v279 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v2477, 1, v279))
        {
          uint64_t v280 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2455, v2477, *(void *)(*(void *)(v280 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v279 - 8) + 16))(v2455, v2477, v279);
          __swift_storeEnumTagSinglePayload((uint64_t)v2455, 0, 1, v279);
        }
        uint64_t v5 = v2678;
        uint64_t v13 = v2694;
        uint64_t v440 = v2464[23];
        uint64_t v441 = (char *)v11 + v440;
        uint64_t v442 = (char *)v12 + v440;
        if (__swift_getEnumTagSinglePayload((uint64_t)v12 + v440, 1, v279))
        {
          uint64_t v443 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v441, v442, *(void *)(*(void *)(v443 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v279 - 8) + 16))(v441, v442, v279);
          __swift_storeEnumTagSinglePayload((uint64_t)v441, 0, 1, v279);
        }
        uint64_t v629 = v2464[24];
        uint64_t v630 = (char *)v11 + v629;
        v631 = (char *)v12 + v629;
        *(void *)uint64_t v630 = *(void *)v631;
        v630[8] = v631[8];
        uint64_t v348 = v2464[25];
LABEL_153:
        v632 = (char *)v11 + v348;
        uint64_t v633 = (uint64_t)v12 + v348;
        uint64_t v634 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload(v633, 1, v634))
        {
          size_t v624 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                       - 8)
                           + 64);
          uint64_t v625 = v632;
          uint64_t v626 = (const void *)v633;
LABEL_155:
          memcpy(v625, v626, v624);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v634 - 8) + 16))(v632, v633, v634);
          uint64_t v627 = (uint64_t)v632;
          uint64_t v628 = v634;
LABEL_157:
          __swift_storeEnumTagSinglePayload(v627, 0, 1, v628);
        }
LABEL_543:
        swift_storeEnumTagMultiPayload();
        uint64_t v2395 = *(int *)(v13 + 20);
        v2396 = *(void **)((char *)v12 + v2395);
        *(void *)((char *)v11 + v2395) = v2396;
        uint64_t v2397 = *(int *)(v13 + 24);
        v2398 = (void *)((char *)v11 + v2397);
        v2399 = (void *)((char *)v12 + v2397);
        uint64_t v2400 = v2399[1];
        void *v2398 = *v2399;
        v2398[1] = v2400;
        id v2401 = v2396;
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
        break;
      case 0x18u:
        uint64_t v2695 = v13;
        uint64_t v281 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v281;
        uint64_t v282 = v12[3];
        v11[2] = v12[2];
        v11[3] = v282;
        uint64_t v283 = v12[5];
        v11[4] = v12[4];
        v11[5] = v283;
        uint64_t v284 = (int *)type metadata accessor for GlobalItem();
        uint64_t v285 = v284[7];
        uint64_t v286 = (char *)v11 + v285;
        uint64_t v287 = (char *)v12 + v285;
        uint64_t v288 = type metadata accessor for GlobalDialog();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v287, 1, v288))
        {
          uint64_t v289 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
          memcpy(v286, v287, *(void *)(*(void *)(v289 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v288 - 8) + 16))(v286, v287, v288);
          __swift_storeEnumTagSinglePayload((uint64_t)v286, 0, 1, v288);
        }
        uint64_t v13 = v2695;
        uint64_t v444 = v284[8];
        uint64_t v445 = (char *)v11 + v444;
        uint64_t v446 = (char *)v12 + v444;
        unint64_t v447 = *((void *)v446 + 1);
        if (v447 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v445 = *(_OWORD *)v446;
        }
        else
        {
          uint64_t v448 = *(void *)v446;
          outlined copy of Data._Representation(*(void *)v446, *((void *)v446 + 1));
          *(void *)uint64_t v445 = v448;
          *((void *)v445 + 1) = v447;
        }
        *((unsigned char *)v11 + v284[9]) = *((unsigned char *)v12 + v284[9]);
        uint64_t v449 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
        *(void *)((char *)v11 + *(int *)(v449 + 48)) = *(void *)((char *)v12 + *(int *)(v449 + 48));
        goto LABEL_164;
      case 0x19u:
        uint64_t v290 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v290;
        uint64_t v291 = v12[3];
        v11[2] = v12[2];
        v11[3] = v291;
        uint64_t v292 = v12[5];
        v11[4] = v12[4];
        v11[5] = v292;
        uint64_t v293 = v12[7];
        v11[6] = v12[6];
        v11[7] = v293;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_164;
      case 0x1Au:
        uint64_t v2679 = v5;
        uint64_t v294 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v294;
        uint64_t v295 = v12[3];
        v11[2] = v12[2];
        v11[3] = v295;
        uint64_t v296 = v12[5];
        v11[4] = v12[4];
        v11[5] = v296;
        v11[6] = v12[6];
        v297 = (int *)type metadata accessor for Answer(0);
        uint64_t v298 = v297[9];
        uint64_t v2664 = (char *)v11 + v298;
        uint64_t v299 = (char *)v12 + v298;
        uint64_t v300 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v299, 1, v300))
        {
          uint64_t v301 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v2664, v299, *(void *)(*(void *)(v301 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v300 - 8) + 16))(v2664, v299, v300);
          __swift_storeEnumTagSinglePayload((uint64_t)v2664, 0, 1, v300);
        }
        uint64_t v5 = v2679;
        *((unsigned char *)v11 + v297[10]) = *((unsigned char *)v12 + v297[10]);
        uint64_t v450 = v297[11];
        uint64_t v451 = (void *)((char *)v11 + v450);
        uint64_t v452 = (void *)((char *)v12 + v450);
        uint64_t v453 = v452[1];
        *uint64_t v451 = *v452;
        v451[1] = v453;
        goto LABEL_164;
      default:
        v2670 = v5;
        uint64_t v2680 = v13;
        uint64_t v15 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v15;
        uint64_t v16 = v12[3];
        v11[2] = v12[2];
        v11[3] = v16;
        uint64_t v17 = v12[5];
        v11[4] = v12[4];
        v11[5] = v17;
        uint64_t v18 = v12[7];
        v11[6] = v12[6];
        v11[7] = v18;
        uint64_t v19 = v12[9];
        v11[8] = v12[8];
        v11[9] = v19;
        uint64_t v2653 = v12[11];
        v11[10] = v12[10];
        v11[11] = v2653;
        uint64_t v20 = (int *)type metadata accessor for EmailDocument(0);
        uint64_t v21 = v20[12];
        v2604 = (char *)v11 + v21;
        v2561 = (char *)v12 + v21;
        uint64_t v22 = type metadata accessor for Date();
        v2587 = v11;
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v2622 = v23;
        uint64_t v2640 = v22;
        v23(v2604, v2561, v22);
        uint64_t v11 = v2587;
        *(void *)((char *)v2587 + v20[13]) = *(void *)((char *)v12 + v20[13]);
        *(void *)((char *)v2587 + v20[14]) = *(void *)((char *)v12 + v20[14]);
        *(void *)((char *)v2587 + v20[15]) = *(void *)((char *)v12 + v20[15]);
        *((unsigned char *)v2587 + v20[16]) = *((unsigned char *)v12 + v20[16]);
        *((unsigned char *)v2587 + v20[17]) = *((unsigned char *)v12 + v20[17]);
        uint64_t v24 = v20[18];
        uint64_t v25 = (void *)((char *)v2587 + v24);
        uint64_t v26 = (void *)((char *)v12 + v24);
        uint64_t v27 = v26[1];
        *uint64_t v25 = *v26;
        v25[1] = v27;
        uint64_t v2654 = v20;
        uint64_t v28 = v20[19];
        uint64_t v29 = (void *)((char *)v2587 + v28);
        uint64_t v30 = (char *)v12 + v28;
        uint64_t v31 = *(void *)((char *)v12 + v28);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v31)
        {
          uint64_t v32 = *((void *)v30 + 1);
          uint64_t v33 = *((void *)v30 + 2);
          *uint64_t v29 = v31;
          v29[1] = v32;
          uint64_t v34 = *((void *)v30 + 3);
          uint64_t v35 = *((void *)v30 + 4);
          v29[2] = v33;
          v29[3] = v34;
          v29[4] = v35;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v302 = *((_OWORD *)v30 + 1);
          *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
          *((_OWORD *)v29 + 1) = v302;
          v29[4] = *((void *)v30 + 4);
        }
        uint64_t v303 = v20[20];
        int v304 = (void *)((char *)v2587 + v303);
        uint64_t v305 = (void *)((char *)v12 + v303);
        uint64_t v306 = v305[1];
        *int v304 = *v305;
        v304[1] = v306;
        uint64_t v307 = v20[21];
        v308 = (void *)((char *)v2587 + v307);
        uint64_t v309 = (void *)((char *)v12 + v307);
        uint64_t v310 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v309, 1, (uint64_t)v310))
        {
          uint64_t v311 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v308, v309, *(void *)(*(void *)(v311 - 8) + 64));
        }
        else
        {
          uint64_t v454 = v309[1];
          void *v308 = *v309;
          v308[1] = v454;
          uint64_t v455 = v310[5];
          v456 = (void *)((char *)v308 + v455);
          uint64_t v457 = (void *)((char *)v309 + v455);
          uint64_t v458 = type metadata accessor for RentalCarReservation(0);
          swift_bridgeObjectRetain();
          uint64_t v2530 = v310;
          v2567 = v308;
          uint64_t v2501 = v309;
          if (__swift_getEnumTagSinglePayload((uint64_t)v457, 1, v458))
          {
            uint64_t v459 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v456, v457, *(void *)(*(void *)(v459 - 8) + 64));
          }
          else
          {
            uint64_t v687 = v457[1];
            void *v456 = *v457;
            v456[1] = v687;
            uint64_t v688 = v457[3];
            v456[2] = v457[2];
            v456[3] = v688;
            uint64_t v689 = v457[5];
            v456[4] = v457[4];
            v456[5] = v689;
            uint64_t v690 = v457[7];
            v456[6] = v457[6];
            v456[7] = v690;
            uint64_t v691 = v457[9];
            v456[8] = v457[8];
            v456[9] = v691;
            uint64_t v692 = v457[11];
            v456[10] = v457[10];
            v456[11] = v692;
            uint64_t v693 = v457[13];
            v456[12] = v457[12];
            v456[13] = v693;
            uint64_t v694 = v457[15];
            v456[14] = v457[14];
            v456[15] = v694;
            *((unsigned char *)v456 + 128) = *((unsigned char *)v457 + 128);
            *(_WORD *)((char *)v456 + 129) = *(_WORD *)((char *)v457 + 129);
            uint64_t v695 = v457[18];
            v456[17] = v457[17];
            v456[18] = v695;
            uint64_t v696 = v457[20];
            v456[19] = v457[19];
            v456[20] = v696;
            uint64_t v697 = v457[22];
            v456[21] = v457[21];
            v456[22] = v697;
            uint64_t v2403 = v457[24];
            v456[23] = v457[23];
            v456[24] = v2403;
            uint64_t v698 = v457[26];
            v456[25] = v457[25];
            v456[26] = v698;
            uint64_t v699 = v457[28];
            v456[27] = v457[27];
            v456[28] = v699;
            uint64_t v700 = v457[30];
            v456[29] = v457[29];
            v456[30] = v700;
            v2466 = (void *)v457[32];
            v456[31] = v457[31];
            v456[32] = v2466;
            uint64_t v701 = v457[34];
            v456[33] = v457[33];
            v456[34] = v701;
            uint64_t v702 = v457[36];
            v456[35] = v457[35];
            v456[36] = v702;
            uint64_t v703 = v457[38];
            v456[37] = v457[37];
            v456[38] = v703;
            uint64_t v704 = v457[40];
            v456[39] = v457[39];
            v456[40] = v704;
            uint64_t v705 = v457[42];
            v456[41] = v457[41];
            v456[42] = v705;
            uint64_t v706 = v457[44];
            v456[43] = v457[43];
            v456[44] = v706;
            uint64_t v707 = v457[46];
            v456[45] = v457[45];
            v456[46] = v707;
            uint64_t v708 = v457[47];
            *((unsigned char *)v456 + 384) = *((unsigned char *)v457 + 384);
            v456[47] = v708;
            uint64_t v709 = v457[50];
            v456[49] = v457[49];
            v456[50] = v709;
            uint64_t v710 = v457[52];
            v456[51] = v457[51];
            v456[52] = v710;
            uint64_t v711 = *(int *)(v458 + 140);
            uint64_t v2479 = (char *)v456 + v711;
            uint64_t v712 = (char *)v457 + v711;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v712, 1, v2640))
            {
              uint64_t v713 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2479, v712, *(void *)(*(void *)(v713 - 8) + 64));
            }
            else
            {
              v2622(v2479, v712, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v2479, 0, 1, v2640);
            }
            uint64_t v768 = *(int *)(v458 + 144);
            uint64_t v769 = (char *)v456 + v768;
            v770 = (char *)v457 + v768;
            if (__swift_getEnumTagSinglePayload((uint64_t)v457 + v768, 1, v2640))
            {
              uint64_t v771 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v769, v770, *(void *)(*(void *)(v771 - 8) + 64));
            }
            else
            {
              v2622(v769, v770, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v769, 0, 1, v2640);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v456, 0, 1, v458);
            v308 = v2567;
          }
          uint64_t v780 = v310[6];
          uint64_t v781 = (void *)((char *)v308 + v780);
          uint64_t v782 = (void *)((char *)v309 + v780);
          uint64_t v783 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v782, 1, v783))
          {
            uint64_t v784 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v781, v782, *(void *)(*(void *)(v784 - 8) + 64));
          }
          else
          {
            uint64_t v785 = v782[1];
            *uint64_t v781 = *v782;
            v781[1] = v785;
            uint64_t v786 = v782[3];
            v781[2] = v782[2];
            v781[3] = v786;
            uint64_t v787 = v782[5];
            v781[4] = v782[4];
            v781[5] = v787;
            uint64_t v788 = v782[7];
            v781[6] = v782[6];
            v781[7] = v788;
            uint64_t v789 = v782[9];
            v781[8] = v782[8];
            v781[9] = v789;
            uint64_t v790 = v782[11];
            v781[10] = v782[10];
            v781[11] = v790;
            uint64_t v791 = v782[13];
            v781[12] = v782[12];
            v781[13] = v791;
            uint64_t v792 = v782[15];
            v781[14] = v782[14];
            v781[15] = v792;
            *((unsigned char *)v781 + 128) = *((unsigned char *)v782 + 128);
            *(_WORD *)((char *)v781 + 129) = *(_WORD *)((char *)v782 + 129);
            uint64_t v793 = v782[18];
            v781[17] = v782[17];
            v781[18] = v793;
            uint64_t v794 = v782[20];
            v781[19] = v782[19];
            v781[20] = v794;
            uint64_t v795 = v782[22];
            v781[21] = v782[21];
            v781[22] = v795;
            uint64_t v796 = v782[24];
            v781[23] = v782[23];
            v781[24] = v796;
            uint64_t v2467 = (void *)v782[26];
            v781[25] = v782[25];
            v781[26] = v2467;
            uint64_t v797 = v782[28];
            v781[27] = v782[27];
            v781[28] = v797;
            uint64_t v798 = v782[30];
            v781[29] = v782[29];
            v781[30] = v798;
            uint64_t v799 = v782[32];
            v781[31] = v782[31];
            v781[32] = v799;
            uint64_t v800 = v782[34];
            v781[33] = v782[33];
            v781[34] = v800;
            uint64_t v801 = v782[36];
            uint64_t v802 = v782[35];
            *((unsigned char *)v781 + 296) = *((unsigned char *)v782 + 296);
            v781[35] = v802;
            v781[36] = v801;
            uint64_t v803 = *(int *)(v783 + 112);
            v2480 = (char *)v781 + v803;
            uint64_t v804 = (char *)v782 + v803;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v804, 1, v2640))
            {
              uint64_t v805 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2480, v804, *(void *)(*(void *)(v805 - 8) + 64));
            }
            else
            {
              v2622(v2480, v804, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v2480, 0, 1, v2640);
            }
            uint64_t v858 = v783;
            uint64_t v859 = *(int *)(v783 + 116);
            uint64_t v860 = (char *)v781 + v859;
            v861 = (char *)v782 + v859;
            uint64_t v309 = v2501;
            if (__swift_getEnumTagSinglePayload((uint64_t)v782 + v859, 1, v2640))
            {
              uint64_t v862 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v860, v861, *(void *)(*(void *)(v862 - 8) + 64));
            }
            else
            {
              v2622(v860, v861, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v860, 0, 1, v2640);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v781, 0, 1, v858);
            v308 = v2567;
          }
          uint64_t v872 = v310[7];
          uint64_t v873 = (void *)((char *)v308 + v872);
          uint64_t v874 = (void *)((char *)v309 + v872);
          uint64_t v875 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v874, 1, (uint64_t)v875))
          {
            uint64_t v876 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v873, v874, *(void *)(*(void *)(v876 - 8) + 64));
          }
          else
          {
            uint64_t v877 = v874[1];
            *uint64_t v873 = *v874;
            v873[1] = v877;
            uint64_t v878 = v874[3];
            v873[2] = v874[2];
            v873[3] = v878;
            uint64_t v879 = v874[5];
            v873[4] = v874[4];
            v873[5] = v879;
            uint64_t v880 = v874[7];
            v873[6] = v874[6];
            v873[7] = v880;
            uint64_t v881 = v874[9];
            v873[8] = v874[8];
            v873[9] = v881;
            uint64_t v882 = v874[11];
            v873[10] = v874[10];
            v873[11] = v882;
            uint64_t v883 = v874[13];
            v873[12] = v874[12];
            v873[13] = v883;
            uint64_t v884 = v874[15];
            v873[14] = v874[14];
            v873[15] = v884;
            *((unsigned char *)v873 + 128) = *((unsigned char *)v874 + 128);
            *(_WORD *)((char *)v873 + 129) = *(_WORD *)((char *)v874 + 129);
            uint64_t v885 = v874[18];
            v873[17] = v874[17];
            v873[18] = v885;
            uint64_t v886 = v874[20];
            v873[19] = v874[19];
            v873[20] = v886;
            uint64_t v887 = v874[22];
            v873[21] = v874[21];
            v873[22] = v887;
            uint64_t v2405 = v874[24];
            v873[23] = v874[23];
            v873[24] = v2405;
            uint64_t v888 = v874[26];
            v873[25] = v874[25];
            v873[26] = v888;
            uint64_t v889 = v874[28];
            v873[27] = v874[27];
            v873[28] = v889;
            uint64_t v2468 = (void *)v874[30];
            v873[29] = v874[29];
            v873[30] = v2468;
            uint64_t v890 = v874[32];
            v873[31] = v874[31];
            v873[32] = v890;
            uint64_t v891 = v874[34];
            v873[33] = v874[33];
            v873[34] = v891;
            uint64_t v892 = v874[36];
            uint64_t v893 = v874[35];
            *((unsigned char *)v873 + 296) = *((unsigned char *)v874 + 296);
            v873[35] = v893;
            v873[36] = v892;
            uint64_t v894 = v874[39];
            v873[38] = v874[38];
            v873[39] = v894;
            uint64_t v895 = v875[29];
            v2481 = (char *)v873 + v895;
            uint64_t v896 = (char *)v874 + v895;
            uint64_t v897 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v896, 1, v897))
            {
              uint64_t v898 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2481, v896, *(void *)(*(void *)(v898 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v897 - 8) + 16))(v2481, v896, v897);
              __swift_storeEnumTagSinglePayload((uint64_t)v2481, 0, 1, v897);
            }
            uint64_t v952 = v875[30];
            uint64_t v953 = (void *)((char *)v873 + v952);
            v954 = (void *)((char *)v874 + v952);
            uint64_t v955 = v954[1];
            *uint64_t v953 = *v954;
            v953[1] = v955;
            uint64_t v956 = v875[31];
            uint64_t v957 = (char *)v873 + v956;
            v958 = (char *)v874 + v956;
            swift_bridgeObjectRetain();
            uint64_t v309 = v2501;
            if (__swift_getEnumTagSinglePayload((uint64_t)v958, 1, v2640))
            {
              uint64_t v959 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v957, v958, *(void *)(*(void *)(v959 - 8) + 64));
            }
            else
            {
              v2622(v957, v958, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v957, 0, 1, v2640);
            }
            uint64_t v976 = v875[32];
            uint64_t v977 = (char *)v873 + v976;
            v978 = (char *)v874 + v976;
            if (__swift_getEnumTagSinglePayload((uint64_t)v874 + v976, 1, v2640))
            {
              uint64_t v979 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v977, v978, *(void *)(*(void *)(v979 - 8) + 64));
            }
            else
            {
              v2622(v977, v978, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v977, 0, 1, v2640);
            }
            uint64_t v310 = v2530;
            __swift_storeEnumTagSinglePayload((uint64_t)v873, 0, 1, (uint64_t)v875);
            v308 = v2567;
          }
          uint64_t v988 = v310[8];
          uint64_t v989 = (void *)((char *)v308 + v988);
          uint64_t v990 = (void *)((char *)v309 + v988);
          uint64_t v991 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v990, 1, v991))
          {
            uint64_t v992 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v989, v990, *(void *)(*(void *)(v992 - 8) + 64));
          }
          else
          {
            uint64_t v993 = v990[1];
            *uint64_t v989 = *v990;
            v989[1] = v993;
            uint64_t v994 = v990[3];
            v989[2] = v990[2];
            v989[3] = v994;
            uint64_t v995 = v990[5];
            v989[4] = v990[4];
            v989[5] = v995;
            uint64_t v996 = v990[7];
            v989[6] = v990[6];
            v989[7] = v996;
            uint64_t v997 = v990[9];
            v989[8] = v990[8];
            v989[9] = v997;
            uint64_t v998 = v990[11];
            v989[10] = v990[10];
            v989[11] = v998;
            uint64_t v999 = v990[13];
            v989[12] = v990[12];
            v989[13] = v999;
            uint64_t v1000 = v990[15];
            v989[14] = v990[14];
            v989[15] = v1000;
            *((unsigned char *)v989 + 128) = *((unsigned char *)v990 + 128);
            *(_WORD *)((char *)v989 + 129) = *(_WORD *)((char *)v990 + 129);
            uint64_t v1001 = v990[18];
            v989[17] = v990[17];
            v989[18] = v1001;
            uint64_t v1002 = v990[20];
            v989[19] = v990[19];
            v989[20] = v1002;
            uint64_t v1003 = v990[22];
            v989[21] = v990[21];
            v989[22] = v1003;
            uint64_t v1004 = v990[24];
            v989[23] = v990[23];
            v989[24] = v1004;
            uint64_t v1005 = v990[26];
            v989[25] = v990[25];
            v989[26] = v1005;
            uint64_t v1006 = v990[28];
            v989[27] = v990[27];
            v989[28] = v1006;
            uint64_t v1007 = v990[30];
            v989[29] = v990[29];
            v989[30] = v1007;
            uint64_t v1008 = v990[32];
            v989[31] = v990[31];
            v989[32] = v1008;
            uint64_t v1009 = v990[34];
            uint64_t v1010 = v990[33];
            *((unsigned char *)v989 + 280) = *((unsigned char *)v990 + 280);
            v989[33] = v1010;
            v989[34] = v1009;
            uint64_t v1011 = v990[37];
            v989[36] = v990[36];
            v989[37] = v1011;
            uint64_t v1012 = *(int *)(v991 + 108);
            v2483 = (char *)v989 + v1012;
            uint64_t v1013 = (char *)v990 + v1012;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1013, 1, v2640))
            {
              uint64_t v1014 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2483, v1013, *(void *)(*(void *)(v1014 - 8) + 64));
            }
            else
            {
              v2622(v2483, v1013, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v2483, 0, 1, v2640);
            }
            uint64_t v1069 = v991;
            uint64_t v1070 = *(int *)(v991 + 112);
            uint64_t v1071 = (char *)v989 + v1070;
            v1072 = (char *)v990 + v1070;
            uint64_t v309 = v2501;
            if (__swift_getEnumTagSinglePayload((uint64_t)v990 + v1070, 1, v2640))
            {
              uint64_t v1073 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1071, v1072, *(void *)(*(void *)(v1073 - 8) + 64));
            }
            else
            {
              v2622(v1071, v1072, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v1071, 0, 1, v2640);
            }
            uint64_t v310 = v2530;
            __swift_storeEnumTagSinglePayload((uint64_t)v989, 0, 1, v1069);
            v308 = v2567;
          }
          uint64_t v1083 = v310[9];
          uint64_t v1084 = (void *)((char *)v308 + v1083);
          uint64_t v1085 = (void *)((char *)v309 + v1083);
          uint64_t v1086 = type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1085, 1, v1086))
          {
            uint64_t v1087 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v1084, v1085, *(void *)(*(void *)(v1087 - 8) + 64));
          }
          else
          {
            uint64_t v1088 = v1085[1];
            *uint64_t v1084 = *v1085;
            v1084[1] = v1088;
            uint64_t v1089 = v1085[3];
            v1084[2] = v1085[2];
            v1084[3] = v1089;
            uint64_t v1090 = v1085[5];
            v1084[4] = v1085[4];
            v1084[5] = v1090;
            uint64_t v1091 = v1085[7];
            v1084[6] = v1085[6];
            v1084[7] = v1091;
            uint64_t v1092 = v1085[9];
            v1084[8] = v1085[8];
            v1084[9] = v1092;
            uint64_t v1093 = v1085[11];
            v1084[10] = v1085[10];
            v1084[11] = v1093;
            uint64_t v1094 = v1085[13];
            v1084[12] = v1085[12];
            v1084[13] = v1094;
            uint64_t v1095 = v1085[15];
            v1084[14] = v1085[14];
            v1084[15] = v1095;
            *((unsigned char *)v1084 + 128) = *((unsigned char *)v1085 + 128);
            *(_WORD *)((char *)v1084 + 129) = *(_WORD *)((char *)v1085 + 129);
            uint64_t v1096 = v1085[18];
            v1084[17] = v1085[17];
            v1084[18] = v1096;
            uint64_t v1097 = v1085[20];
            v1084[19] = v1085[19];
            v1084[20] = v1097;
            uint64_t v1098 = v1085[22];
            v1084[21] = v1085[21];
            v1084[22] = v1098;
            uint64_t v1099 = v1085[24];
            v1084[23] = v1085[23];
            v1084[24] = v1099;
            uint64_t v1100 = v1085[26];
            v1084[25] = v1085[25];
            v1084[26] = v1100;
            uint64_t v1101 = v1085[28];
            v1084[27] = v1085[27];
            v1084[28] = v1101;
            uint64_t v1102 = v1085[30];
            v1084[29] = v1085[29];
            v1084[30] = v1102;
            v1084[31] = v1085[31];
            v2484 = (int *)v1086;
            uint64_t v1103 = *(int *)(v1086 + 96);
            uint64_t v2469 = (char *)v1084 + v1103;
            v2409 = (char *)v1085 + v1103;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2409, 1, v2640))
            {
              uint64_t v1104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2469, v2409, *(void *)(*(void *)(v1104 - 8) + 64));
            }
            else
            {
              v2622(v2469, v2409, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v2469, 0, 1, v2640);
            }
            uint64_t v1149 = *(int *)(v1086 + 100);
            uint64_t v1150 = (char *)v1084 + v1149;
            v1151 = (char *)v1085 + v1149;
            uint64_t v309 = v2501;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1085 + v1149, 1, v2640))
            {
              uint64_t v1152 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1150, v1151, *(void *)(*(void *)(v1152 - 8) + 64));
            }
            else
            {
              v2622(v1150, v1151, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v1150, 0, 1, v2640);
            }
            uint64_t v1161 = v2484[26];
            uint64_t v1162 = (char *)v1084 + v1161;
            uint64_t v1163 = (char *)v1085 + v1161;
            uint64_t v1164 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1163, 1, v1164))
            {
              uint64_t v1165 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1162, v1163, *(void *)(*(void *)(v1165 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1164 - 8) + 16))(v1162, v1163, v1164);
              __swift_storeEnumTagSinglePayload((uint64_t)v1162, 0, 1, v1164);
            }
            uint64_t v310 = v2530;
            __swift_storeEnumTagSinglePayload((uint64_t)v1084, 0, 1, (uint64_t)v2484);
            v308 = v2567;
          }
          uint64_t v1175 = v310[10];
          uint64_t v1176 = (void *)((char *)v308 + v1175);
          uint64_t v1177 = (void *)((char *)v309 + v1175);
          uint64_t v1178 = type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1177, 1, v1178))
          {
            uint64_t v1179 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v1176, v1177, *(void *)(*(void *)(v1179 - 8) + 64));
          }
          else
          {
            uint64_t v1180 = v1177[1];
            *uint64_t v1176 = *v1177;
            v1176[1] = v1180;
            uint64_t v1181 = v1177[3];
            v1176[2] = v1177[2];
            v1176[3] = v1181;
            uint64_t v1182 = v1177[5];
            v1176[4] = v1177[4];
            v1176[5] = v1182;
            uint64_t v1183 = v1177[7];
            v1176[6] = v1177[6];
            v1176[7] = v1183;
            uint64_t v1184 = v1177[9];
            v1176[8] = v1177[8];
            v1176[9] = v1184;
            uint64_t v1185 = v1177[11];
            v1176[10] = v1177[10];
            v1176[11] = v1185;
            uint64_t v1186 = v1177[13];
            v1176[12] = v1177[12];
            v1176[13] = v1186;
            uint64_t v1187 = v1177[15];
            v1176[14] = v1177[14];
            v1176[15] = v1187;
            *((unsigned char *)v1176 + 128) = *((unsigned char *)v1177 + 128);
            *(_WORD *)((char *)v1176 + 129) = *(_WORD *)((char *)v1177 + 129);
            uint64_t v1188 = v1177[18];
            v1176[17] = v1177[17];
            v1176[18] = v1188;
            uint64_t v1189 = v1177[20];
            v1176[19] = v1177[19];
            v1176[20] = v1189;
            uint64_t v1190 = v1177[22];
            v1176[21] = v1177[21];
            v1176[22] = v1190;
            uint64_t v1191 = v1177[24];
            v1176[23] = v1177[23];
            v1176[24] = v1191;
            uint64_t v1192 = v1177[26];
            v1176[25] = v1177[25];
            v1176[26] = v1192;
            v1176[27] = v1177[27];
            uint64_t v2485 = (int *)v1178;
            uint64_t v1193 = *(int *)(v1178 + 88);
            uint64_t v2470 = (char *)v1176 + v1193;
            v2413 = (char *)v1177 + v1193;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2413, 1, v2640))
            {
              uint64_t v1194 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2470, v2413, *(void *)(*(void *)(v1194 - 8) + 64));
            }
            else
            {
              v2622(v2470, v2413, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v2470, 0, 1, v2640);
            }
            uint64_t v1235 = *(int *)(v1178 + 92);
            uint64_t v1236 = (char *)v1176 + v1235;
            uint64_t v1237 = (char *)v1177 + v1235;
            uint64_t v309 = v2501;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1177 + v1235, 1, v2640))
            {
              uint64_t v1238 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1236, v1237, *(void *)(*(void *)(v1238 - 8) + 64));
            }
            else
            {
              v2622(v1236, v1237, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v1236, 0, 1, v2640);
            }
            uint64_t v1247 = v2485[24];
            uint64_t v1248 = (char *)v1176 + v1247;
            uint64_t v1249 = (char *)v1177 + v1247;
            *(void *)uint64_t v1248 = *(void *)v1249;
            v1248[8] = v1249[8];
            uint64_t v1250 = v2485[25];
            v1251 = (char *)v1176 + v1250;
            uint64_t v1252 = (char *)v1177 + v1250;
            uint64_t v1253 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1252, 1, v1253))
            {
              uint64_t v1254 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1251, v1252, *(void *)(*(void *)(v1254 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1253 - 8) + 16))(v1251, v1252, v1253);
              __swift_storeEnumTagSinglePayload((uint64_t)v1251, 0, 1, v1253);
            }
            uint64_t v310 = v2530;
            __swift_storeEnumTagSinglePayload((uint64_t)v1176, 0, 1, (uint64_t)v2485);
            v308 = v2567;
          }
          uint64_t v1270 = v310[11];
          uint64_t v1271 = (void *)((char *)v308 + v1270);
          uint64_t v1272 = (void *)((char *)v309 + v1270);
          uint64_t v1273 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1272, 1, (uint64_t)v1273))
          {
            uint64_t v1274 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v1271, v1272, *(void *)(*(void *)(v1274 - 8) + 64));
          }
          else
          {
            uint64_t v1275 = v1272[1];
            *uint64_t v1271 = *v1272;
            v1271[1] = v1275;
            uint64_t v1276 = v1272[3];
            v1271[2] = v1272[2];
            v1271[3] = v1276;
            uint64_t v1277 = v1272[5];
            v1271[4] = v1272[4];
            v1271[5] = v1277;
            uint64_t v1278 = v1272[7];
            v1271[6] = v1272[6];
            v1271[7] = v1278;
            uint64_t v1279 = v1272[9];
            v1271[8] = v1272[8];
            v1271[9] = v1279;
            uint64_t v1280 = v1272[11];
            v1271[10] = v1272[10];
            v1271[11] = v1280;
            *((unsigned char *)v1271 + 96) = *((unsigned char *)v1272 + 96);
            uint64_t v1281 = v1272[14];
            v1271[13] = v1272[13];
            v1271[14] = v1281;
            uint64_t v1282 = v1273[13];
            uint64_t v2486 = (char *)v1271 + v1282;
            uint64_t v1283 = (char *)v1272 + v1282;
            uint64_t v1284 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1283, 1, v1284))
            {
              uint64_t v1285 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2486, v1283, *(void *)(*(void *)(v1285 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1284 - 8) + 16))(v2486, v1283, v1284);
              __swift_storeEnumTagSinglePayload((uint64_t)v2486, 0, 1, v1284);
            }
            uint64_t v1313 = v1273[14];
            uint64_t v1314 = (char *)v1271 + v1313;
            v1315 = (char *)v1272 + v1313;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1272 + v1313, 1, v1284))
            {
              uint64_t v1316 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1314, v1315, *(void *)(*(void *)(v1316 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1284 - 8) + 16))(v1314, v1315, v1284);
              __swift_storeEnumTagSinglePayload((uint64_t)v1314, 0, 1, v1284);
            }
            uint64_t v1325 = v1273[15];
            v1326 = (void *)((char *)v1271 + v1325);
            uint64_t v1327 = (void *)((char *)v1272 + v1325);
            uint64_t v2487 = (void *)v1327[1];
            void *v1326 = *v1327;
            v1326[1] = v2487;
            uint64_t v1328 = v1273[16];
            uint64_t v1329 = (void *)((char *)v1271 + v1328);
            v1330 = (void *)((char *)v1272 + v1328);
            uint64_t v1331 = v1330[1];
            *uint64_t v1329 = *v1330;
            v1329[1] = v1331;
            uint64_t v1332 = v1273[17];
            v1333 = (void *)((char *)v1271 + v1332);
            uint64_t v1334 = (void *)((char *)v1272 + v1332);
            uint64_t v1335 = v1334[1];
            void *v1333 = *v1334;
            v1333[1] = v1335;
            uint64_t v1336 = v1273[18];
            v2457 = (char *)v1272 + v1336;
            uint64_t v2472 = (char *)v1271 + v1336;
            uint64_t v1337 = type metadata accessor for DateComponents();
            uint64_t v1338 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1337 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1338(v2472, v2457, v1337);
            v1338((char *)v1271 + v1273[19], (char *)v1272 + v1273[19], v1337);
            uint64_t v1339 = v1273[20];
            v1340 = (void *)((char *)v1271 + v1339);
            uint64_t v1341 = (void *)((char *)v1272 + v1339);
            uint64_t v1342 = v1341[1];
            void *v1340 = *v1341;
            v1340[1] = v1342;
            uint64_t v1343 = v1273[21];
            uint64_t v1344 = (void *)((char *)v1271 + v1343);
            v1345 = (void *)((char *)v1272 + v1343);
            v2436 = (void *)v1345[1];
            *uint64_t v1344 = *v1345;
            v1344[1] = v2436;
            uint64_t v1346 = v1273[22];
            uint64_t v1347 = (void *)((char *)v1271 + v1346);
            v1348 = (void *)((char *)v1272 + v1346);
            uint64_t v2488 = (void *)v1348[1];
            *uint64_t v1347 = *v1348;
            v1347[1] = v2488;
            uint64_t v1349 = v1273[23];
            uint64_t v1350 = (void *)((char *)v1271 + v1349);
            v1351 = (void *)((char *)v1272 + v1349);
            v2473 = (void *)v1351[1];
            *uint64_t v1350 = *v1351;
            v1350[1] = v2473;
            uint64_t v1352 = v1273[24];
            uint64_t v1353 = (void *)((char *)v1271 + v1352);
            v1354 = (void *)((char *)v1272 + v1352);
            uint64_t v2449 = v1354[1];
            *uint64_t v1353 = *v1354;
            v1353[1] = v2449;
            uint64_t v1355 = v1273[25];
            uint64_t v1356 = (void *)((char *)v1271 + v1355);
            v1357 = (void *)((char *)v1272 + v1355);
            v2443 = (void *)v1357[1];
            *uint64_t v1356 = *v1357;
            v1356[1] = v2443;
            uint64_t v1358 = v1273[26];
            uint64_t v1359 = (void *)((char *)v1271 + v1358);
            v1360 = (void *)((char *)v1272 + v1358);
            uint64_t v2430 = (void *)v1360[1];
            *uint64_t v1359 = *v1360;
            v1359[1] = v2430;
            uint64_t v1361 = v1273[27];
            uint64_t v1362 = (void *)((char *)v1271 + v1361);
            v1363 = (void *)((char *)v1272 + v1361);
            v2425 = (void *)v1363[1];
            *uint64_t v1362 = *v1363;
            v1362[1] = v2425;
            uint64_t v1364 = v1273[28];
            uint64_t v1365 = (void *)((char *)v1271 + v1364);
            v1366 = (void *)((char *)v1272 + v1364);
            v2419 = (void *)v1366[1];
            *uint64_t v1365 = *v1366;
            v1365[1] = v2419;
            uint64_t v1367 = v1273[29];
            uint64_t v1368 = (void *)((char *)v1271 + v1367);
            v1369 = (void *)((char *)v1272 + v1367);
            uint64_t v2416 = v1369[1];
            *uint64_t v1368 = *v1369;
            v1368[1] = v2416;
            uint64_t v1370 = v1273[30];
            uint64_t v1371 = (void *)((char *)v1271 + v1370);
            uint64_t v1372 = (void *)((char *)v1272 + v1370);
            uint64_t v2414 = v1372[1];
            *uint64_t v1371 = *v1372;
            v1371[1] = v2414;
            uint64_t v1373 = v1273[31];
            v1374 = (void *)((char *)v1271 + v1373);
            uint64_t v1375 = (void *)((char *)v1272 + v1373);
            uint64_t v2410 = v1375[1];
            void *v1374 = *v1375;
            v1374[1] = v2410;
            uint64_t v1376 = v1273[32];
            v1377 = (void *)((char *)v1271 + v1376);
            v1378 = (void *)((char *)v1272 + v1376);
            uint64_t v1379 = v1378[1];
            void *v1377 = *v1378;
            v1377[1] = v1379;
            *(void *)((char *)v1271 + v1273[33]) = *(void *)((char *)v1272 + v1273[33]);
            *(void *)((char *)v1271 + v1273[34]) = *(void *)((char *)v1272 + v1273[34]);
            uint64_t v1380 = v1273[35];
            v1381 = (void *)((char *)v1271 + v1380);
            v1382 = (void *)((char *)v1272 + v1380);
            uint64_t v1383 = v1382[1];
            void *v1381 = *v1382;
            v1381[1] = v1383;
            uint64_t v1384 = v1273[36];
            uint64_t v1385 = (void *)((char *)v1271 + v1384);
            uint64_t v1386 = (void *)((char *)v1272 + v1384);
            uint64_t v1387 = v1386[1];
            *uint64_t v1385 = *v1386;
            v1385[1] = v1387;
            uint64_t v1388 = v1273[37];
            uint64_t v1389 = (void *)((char *)v1271 + v1388);
            uint64_t v1390 = (void *)((char *)v1272 + v1388);
            uint64_t v1391 = v1390[1];
            *uint64_t v1389 = *v1390;
            v1389[1] = v1391;
            uint64_t v1392 = v1273[38];
            v2458 = (char *)v1271 + v1392;
            uint64_t v1393 = (char *)v1272 + v1392;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1393, 1, v2640))
            {
              uint64_t v1394 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2458, v1393, *(void *)(*(void *)(v1394 - 8) + 64));
            }
            else
            {
              v2622(v2458, v1393, v2640);
              __swift_storeEnumTagSinglePayload((uint64_t)v2458, 0, 1, v2640);
            }
            uint64_t v1535 = v1273[39];
            v1536 = (void *)((char *)v1271 + v1535);
            uint64_t v1537 = (void *)((char *)v1272 + v1535);
            uint64_t v1538 = v1537[1];
            void *v1536 = *v1537;
            v1536[1] = v1538;
            uint64_t v1539 = v1273[40];
            v1540 = (void *)((char *)v1271 + v1539);
            uint64_t v1541 = (void *)((char *)v1272 + v1539);
            uint64_t v1542 = v1541[1];
            void *v1540 = *v1541;
            v1540[1] = v1542;
            uint64_t v1543 = v1273[41];
            uint64_t v1544 = (char *)v1271 + v1543;
            uint64_t v1545 = (char *)v1272 + v1543;
            v1544[8] = v1545[8];
            *(void *)uint64_t v1544 = *(void *)v1545;
            uint64_t v1546 = v1273[42];
            v1547 = (void *)((char *)v1271 + v1546);
            uint64_t v1548 = (void *)((char *)v1272 + v1546);
            uint64_t v1549 = v1548[1];
            void *v1547 = *v1548;
            v1547[1] = v1549;
            uint64_t v1550 = v1273[43];
            v1551 = (char *)v1271 + v1550;
            uint64_t v1552 = (char *)v1272 + v1550;
            *(_OWORD *)v1551 = *(_OWORD *)v1552;
            *(void *)(v1551 + 13) = *(void *)(v1552 + 13);
            uint64_t v1553 = v1273[44];
            v1554 = (void *)((char *)v1271 + v1553);
            v1555 = (void *)((char *)v1272 + v1553);
            uint64_t v1556 = v1555[1];
            void *v1554 = *v1555;
            v1554[1] = v1556;
            uint64_t v1557 = v1273[45];
            v1558 = (void *)((char *)v1271 + v1557);
            v1559 = (void *)((char *)v1272 + v1557);
            uint64_t v1560 = v1559[1];
            void *v1558 = *v1559;
            v1558[1] = v1560;
            uint64_t v1561 = v1273[46];
            uint64_t v1562 = (void *)((char *)v1271 + v1561);
            uint64_t v1563 = (void *)((char *)v1272 + v1561);
            uint64_t v1564 = v1563[1];
            *uint64_t v1562 = *v1563;
            v1562[1] = v1564;
            uint64_t v1565 = v1273[47];
            uint64_t v1566 = (void *)((char *)v1271 + v1565);
            uint64_t v1567 = (void *)((char *)v1272 + v1565);
            uint64_t v1568 = v1567[1];
            *uint64_t v1566 = *v1567;
            v1566[1] = v1568;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1271, 0, 1, (uint64_t)v1273);
            uint64_t v310 = v2530;
            v308 = v2567;
            uint64_t v309 = v2501;
          }
          uint64_t v1569 = v310[12];
          uint64_t v1570 = (void *)((char *)v308 + v1569);
          uint64_t v1571 = (void *)((char *)v309 + v1569);
          uint64_t v1572 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1571, 1, (uint64_t)v1572))
          {
            uint64_t v1573 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v1570, v1571, *(void *)(*(void *)(v1573 - 8) + 64));
          }
          else
          {
            uint64_t v1574 = v1571[1];
            *uint64_t v1570 = *v1571;
            v1570[1] = v1574;
            uint64_t v1575 = v1571[3];
            v1570[2] = v1571[2];
            v1570[3] = v1575;
            uint64_t v1576 = v1571[5];
            v1570[4] = v1571[4];
            v1570[5] = v1576;
            uint64_t v1577 = v1571[7];
            v1570[6] = v1571[6];
            v1570[7] = v1577;
            uint64_t v1578 = v1571[9];
            v1570[8] = v1571[8];
            v1570[9] = v1578;
            uint64_t v1579 = v1571[11];
            v1570[10] = v1571[10];
            v1570[11] = v1579;
            *((unsigned char *)v1570 + 96) = *((unsigned char *)v1571 + 96);
            uint64_t v1580 = v1571[14];
            v1570[13] = v1571[13];
            v1570[14] = v1580;
            uint64_t v1581 = v1571[16];
            v1570[15] = v1571[15];
            v1570[16] = v1581;
            uint64_t v1582 = v1572[14];
            v2492 = (char *)v1570 + v1582;
            v2439 = (char *)v1571 + v1582;
            v2433 = (void *)type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2439, 1, (uint64_t)v2433))
            {
              uint64_t v1583 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2492, v2439, *(void *)(*(void *)(v1583 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v2433 - 1) + 16))(v2492, v2439, v2433);
              __swift_storeEnumTagSinglePayload((uint64_t)v2492, 0, 1, (uint64_t)v2433);
            }
            uint64_t v1679 = v1572[15];
            uint64_t v1680 = (char *)v1570 + v1679;
            v1681 = (char *)v1571 + v1679;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1571 + v1679, 1, (uint64_t)v2433))
            {
              uint64_t v1682 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1680, v1681, *(void *)(*(void *)(v1682 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v2433 - 1) + 16))(v1680, v1681, v2433);
              __swift_storeEnumTagSinglePayload((uint64_t)v1680, 0, 1, (uint64_t)v2433);
            }
            uint64_t v1691 = v1572[16];
            v1692 = (void *)((char *)v1570 + v1691);
            uint64_t v1693 = (void *)((char *)v1571 + v1691);
            uint64_t v1694 = v1693[1];
            void *v1692 = *v1693;
            v1692[1] = v1694;
            uint64_t v1695 = v1572[17];
            uint64_t v1696 = (void *)((char *)v1570 + v1695);
            v1697 = (void *)((char *)v1571 + v1695);
            uint64_t v2493 = (void *)v1697[1];
            *uint64_t v1696 = *v1697;
            v1696[1] = v2493;
            uint64_t v1698 = v1572[18];
            uint64_t v1699 = (void *)((char *)v1570 + v1698);
            v1700 = (void *)((char *)v1571 + v1698);
            uint64_t v2476 = (void *)v1700[1];
            *uint64_t v1699 = *v1700;
            v1699[1] = v2476;
            uint64_t v1701 = v1572[19];
            uint64_t v1702 = (void *)((char *)v1570 + v1701);
            v1703 = (void *)((char *)v1571 + v1701);
            v2462 = (void *)v1703[1];
            *uint64_t v1702 = *v1703;
            v1702[1] = v2462;
            uint64_t v1704 = v1572[20];
            uint64_t v1705 = (void *)((char *)v1570 + v1704);
            uint64_t v1706 = (void *)((char *)v1571 + v1704);
            uint64_t v1707 = v1706[1];
            *uint64_t v1705 = *v1706;
            v1705[1] = v1707;
            *(void *)((char *)v1570 + v1572[21]) = *(void *)((char *)v1571 + v1572[21]);
            *(void *)((char *)v1570 + v1572[22]) = *(void *)((char *)v1571 + v1572[22]);
            uint64_t v1708 = v1572[23];
            uint64_t v1709 = (char *)v1570 + v1708;
            uint64_t v1710 = (char *)v1571 + v1708;
            *(void *)uint64_t v1709 = *(void *)v1710;
            v1709[8] = v1710[8];
            uint64_t v1711 = v1572[24];
            v1712 = (char *)v1570 + v1711;
            uint64_t v1713 = (char *)v1571 + v1711;
            *(void *)v1712 = *(void *)v1713;
            v1712[8] = v1713[8];
            uint64_t v1714 = v1572[25];
            v1715 = (void *)((char *)v1570 + v1714);
            v1716 = (void *)((char *)v1571 + v1714);
            uint64_t v1717 = v1716[1];
            void *v1715 = *v1716;
            v1715[1] = v1717;
            uint64_t v1718 = v1572[26];
            v1719 = (void *)((char *)v1570 + v1718);
            v1720 = (void *)((char *)v1571 + v1718);
            uint64_t v1721 = v1720[1];
            void *v1719 = *v1720;
            v1719[1] = v1721;
            uint64_t v1722 = v1572[27];
            v1723 = (void *)((char *)v1570 + v1722);
            v1724 = (void *)((char *)v1571 + v1722);
            uint64_t v1725 = v1724[1];
            void *v1723 = *v1724;
            v1723[1] = v1725;
            uint64_t v1726 = v1572[28];
            uint64_t v1727 = (void *)((char *)v1570 + v1726);
            uint64_t v1728 = (void *)((char *)v1571 + v1726);
            uint64_t v1729 = v1728[1];
            *uint64_t v1727 = *v1728;
            v1727[1] = v1729;
            uint64_t v1730 = v1572[29];
            uint64_t v1731 = (char *)v1570 + v1730;
            uint64_t v1732 = (char *)v1571 + v1730;
            *(void *)uint64_t v1731 = *(void *)v1732;
            v1731[8] = v1732[8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1570, 0, 1, (uint64_t)v1572);
            uint64_t v310 = v2530;
            v308 = v2567;
            uint64_t v309 = v2501;
          }
          uint64_t v1733 = v310[13];
          uint64_t v1734 = (void *)((char *)v308 + v1733);
          uint64_t v1735 = (void *)((char *)v309 + v1733);
          v1736 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1735, 1, (uint64_t)v1736))
          {
            uint64_t v1737 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v1734, v1735, *(void *)(*(void *)(v1737 - 8) + 64));
          }
          else
          {
            uint64_t v1738 = v1735[1];
            *uint64_t v1734 = *v1735;
            v1734[1] = v1738;
            uint64_t v1739 = v1735[3];
            v1734[2] = v1735[2];
            v1734[3] = v1739;
            uint64_t v1740 = v1735[5];
            v1734[4] = v1735[4];
            v1734[5] = v1740;
            uint64_t v1741 = v1735[7];
            v1734[6] = v1735[6];
            v1734[7] = v1741;
            uint64_t v1742 = v1735[9];
            v1734[8] = v1735[8];
            v1734[9] = v1742;
            uint64_t v1743 = v1735[11];
            v1734[10] = v1735[10];
            v1734[11] = v1743;
            *((unsigned char *)v1734 + 96) = *((unsigned char *)v1735 + 96);
            uint64_t v1744 = v1735[14];
            v1734[13] = v1735[13];
            v1734[14] = v1744;
            uint64_t v1745 = v1735[16];
            v1734[15] = v1735[15];
            v1734[16] = v1745;
            uint64_t v1746 = v1736[14];
            v2519 = (char *)v1734 + v1746;
            v2440 = (char *)v1735 + v1746;
            uint64_t v1747 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2440, 1, v1747))
            {
              uint64_t v1748 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2519, v2440, *(void *)(*(void *)(v1748 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1747 - 8) + 16))(v2519, v2440, v1747);
              __swift_storeEnumTagSinglePayload((uint64_t)v2519, 0, 1, v1747);
            }
            uint64_t v1860 = v1736[15];
            uint64_t v1861 = (void *)((char *)v1734 + v1860);
            v1862 = (void *)((char *)v1735 + v1860);
            uint64_t v1863 = v1862[1];
            *uint64_t v1861 = *v1862;
            v1861[1] = v1863;
            uint64_t v1864 = v1736[16];
            uint64_t v1865 = (void *)((char *)v1734 + v1864);
            v1866 = (void *)((char *)v1735 + v1864);
            uint64_t v2524 = v1866[1];
            *uint64_t v1865 = *v1866;
            v1865[1] = v2524;
            uint64_t v1867 = v1736[17];
            uint64_t v1868 = (void *)((char *)v1734 + v1867);
            uint64_t v1869 = (void *)((char *)v1735 + v1867);
            uint64_t v2495 = (void *)v1869[1];
            *uint64_t v1868 = *v1869;
            v1868[1] = v2495;
            uint64_t v1870 = v1736[18];
            v1871 = (void *)((char *)v1734 + v1870);
            uint64_t v1872 = (void *)((char *)v1735 + v1870);
            uint64_t v1873 = v1872[1];
            void *v1871 = *v1872;
            v1871[1] = v1873;
            uint64_t v1874 = v1736[19];
            v1875 = (void *)((char *)v1734 + v1874);
            uint64_t v1876 = (void *)((char *)v1735 + v1874);
            uint64_t v1877 = v1876[1];
            void *v1875 = *v1876;
            v1875[1] = v1877;
            *(void *)((char *)v1734 + v1736[20]) = *(void *)((char *)v1735 + v1736[20]);
            uint64_t v1878 = v1736[21];
            uint64_t v1879 = (void *)((char *)v1734 + v1878);
            uint64_t v1880 = (void *)((char *)v1735 + v1878);
            uint64_t v1881 = v1880[1];
            *uint64_t v1879 = *v1880;
            v1879[1] = v1881;
            uint64_t v1882 = v1736[22];
            uint64_t v1883 = (void *)((char *)v1734 + v1882);
            uint64_t v1884 = (void *)((char *)v1735 + v1882);
            uint64_t v1885 = v1884[1];
            *uint64_t v1883 = *v1884;
            v1883[1] = v1885;
            uint64_t v1886 = v1736[23];
            uint64_t v1887 = (void *)((char *)v1734 + v1886);
            v1888 = (void *)((char *)v1735 + v1886);
            uint64_t v1889 = v1888[1];
            *uint64_t v1887 = *v1888;
            v1887[1] = v1889;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1734, 0, 1, (uint64_t)v1736);
            uint64_t v310 = v2530;
            v308 = v2567;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v308, 0, 1, (uint64_t)v310);
        }
        uint64_t v1890 = v2654[22];
        uint64_t v1891 = (void *)((char *)v2587 + v1890);
        v1892 = (void *)((char *)v12 + v1890);
        v1893 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1892, 1, (uint64_t)v1893))
        {
          uint64_t v1894 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v1891, v1892, *(void *)(*(void *)(v1894 - 8) + 64));
        }
        else
        {
          uint64_t v1895 = v1892[1];
          *uint64_t v1891 = *v1892;
          v1891[1] = v1895;
          uint64_t v1896 = v1892[3];
          v1891[2] = v1892[2];
          v1891[3] = v1896;
          uint64_t v1897 = v1892[5];
          v1891[4] = v1892[4];
          v1891[5] = v1897;
          uint64_t v1898 = v1892[7];
          v1891[6] = v1892[6];
          v1891[7] = v1898;
          uint64_t v1899 = v1892[9];
          v1891[8] = v1892[8];
          v1891[9] = v1899;
          uint64_t v1900 = v1892[11];
          v1891[10] = v1892[10];
          v1891[11] = v1900;
          uint64_t v1901 = v1893[10];
          v2556 = (char *)v1892 + v1901;
          v2579 = (char *)v1891 + v1901;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2556, 1, v2640))
          {
            uint64_t v1902 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2579, v2556, *(void *)(*(void *)(v1902 - 8) + 64));
          }
          else
          {
            v2622(v2579, v2556, v2640);
            __swift_storeEnumTagSinglePayload((uint64_t)v2579, 0, 1, v2640);
          }
          uint64_t v1903 = v1893[11];
          v1904 = (char *)v1891 + v1903;
          v1905 = (char *)v1892 + v1903;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1892 + v1903, 1, v2640))
          {
            uint64_t v1906 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1904, v1905, *(void *)(*(void *)(v1906 - 8) + 64));
          }
          else
          {
            v2622(v1904, v1905, v2640);
            __swift_storeEnumTagSinglePayload((uint64_t)v1904, 0, 1, v2640);
          }
          uint64_t v1907 = v1893[12];
          v1908 = (void *)((char *)v1891 + v1907);
          v1909 = (void *)((char *)v1892 + v1907);
          uint64_t v1910 = v1909[1];
          void *v1908 = *v1909;
          v1908[1] = v1910;
          uint64_t v1911 = v1893[13];
          v1912 = (void *)((char *)v1891 + v1911);
          v1913 = (void *)((char *)v1892 + v1911);
          uint64_t v1914 = v1913[1];
          void *v1912 = *v1913;
          v1912[1] = v1914;
          uint64_t v1915 = v1893[14];
          v1916 = (void *)((char *)v1891 + v1915);
          uint64_t v1917 = (void *)((char *)v1892 + v1915);
          uint64_t v1918 = v1917[1];
          void *v1916 = *v1917;
          v1916[1] = v1918;
          uint64_t v1919 = v1893[15];
          uint64_t v1920 = (char *)v1891 + v1919;
          uint64_t v1921 = (char *)v1892 + v1919;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1921, 1, v2640))
          {
            uint64_t v1922 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1920, v1921, *(void *)(*(void *)(v1922 - 8) + 64));
          }
          else
          {
            v2622(v1920, v1921, v2640);
            __swift_storeEnumTagSinglePayload((uint64_t)v1920, 0, 1, v2640);
          }
          uint64_t v1923 = v1893[16];
          uint64_t v1924 = (void *)((char *)v1891 + v1923);
          uint64_t v1925 = (void *)((char *)v1892 + v1923);
          uint64_t v1926 = v1925[1];
          *uint64_t v1924 = *v1925;
          v1924[1] = v1926;
          uint64_t v1927 = v1893[17];
          uint64_t v1928 = (void *)((char *)v1891 + v1927);
          uint64_t v1929 = (void *)((char *)v1892 + v1927);
          uint64_t v2580 = v1929[1];
          *uint64_t v1928 = *v1929;
          v1928[1] = v2580;
          uint64_t v1930 = v1893[18];
          v1931 = (void *)((char *)v1891 + v1930);
          uint64_t v1932 = (void *)((char *)v1892 + v1930);
          uint64_t v1933 = v1932[1];
          void *v1931 = *v1932;
          v1931[1] = v1933;
          uint64_t v1934 = v1893[19];
          v1935 = (void *)((char *)v1891 + v1934);
          uint64_t v1936 = (void *)((char *)v1892 + v1934);
          uint64_t v1937 = v1936[1];
          void *v1935 = *v1936;
          v1935[1] = v1937;
          uint64_t v1938 = v1893[20];
          v1939 = (void *)((char *)v1891 + v1938);
          v1940 = (void *)((char *)v1892 + v1938);
          uint64_t v1941 = v1940[1];
          void *v1939 = *v1940;
          v1939[1] = v1941;
          uint64_t v1942 = v1893[21];
          uint64_t v1943 = (void *)((char *)v1891 + v1942);
          uint64_t v1944 = (void *)((char *)v1892 + v1942);
          uint64_t v1945 = v1944[1];
          *uint64_t v1943 = *v1944;
          v1943[1] = v1945;
          uint64_t v1946 = v1893[22];
          uint64_t v1947 = (void *)((char *)v1891 + v1946);
          uint64_t v1948 = (void *)((char *)v1892 + v1946);
          uint64_t v1949 = v1948[1];
          *uint64_t v1947 = *v1948;
          v1947[1] = v1949;
          uint64_t v1950 = v1893[23];
          uint64_t v1951 = (void *)((char *)v1891 + v1950);
          uint64_t v1952 = (void *)((char *)v1892 + v1950);
          uint64_t v1953 = v1952[1];
          *uint64_t v1951 = *v1952;
          v1951[1] = v1953;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v1891, 0, 1, (uint64_t)v1893);
        }
        uint64_t v1954 = v2654[23];
        uint64_t v1955 = (void *)((char *)v2587 + v1954);
        uint64_t v1956 = (void *)((char *)v12 + v1954);
        v1957 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1956, 1, (uint64_t)v1957))
        {
          uint64_t v1958 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v1955, v1956, *(void *)(*(void *)(v1958 - 8) + 64));
        }
        else
        {
          uint64_t v1959 = v1956[1];
          *uint64_t v1955 = *v1956;
          v1955[1] = v1959;
          uint64_t v1960 = v1956[3];
          v1955[2] = v1956[2];
          v1955[3] = v1960;
          uint64_t v1961 = v1956[5];
          v1955[4] = v1956[4];
          v1955[5] = v1961;
          uint64_t v1962 = v1956[7];
          v1955[6] = v1956[6];
          v1955[7] = v1962;
          uint64_t v1963 = v1956[9];
          v1955[8] = v1956[8];
          v1955[9] = v1963;
          uint64_t v2557 = v1956[11];
          v1955[10] = v1956[10];
          v1955[11] = v2557;
          uint64_t v1964 = v1957[11];
          v2581 = (char *)v1955 + v1964;
          uint64_t v2525 = (char *)v1956 + v1964;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2525, 1, v2640))
          {
            uint64_t v1965 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2581, v2525, *(void *)(*(void *)(v1965 - 8) + 64));
          }
          else
          {
            v2622(v2581, v2525, v2640);
            __swift_storeEnumTagSinglePayload((uint64_t)v2581, 0, 1, v2640);
          }
          uint64_t v1966 = v1957[12];
          uint64_t v1967 = (void *)((char *)v1955 + v1966);
          uint64_t v1968 = (void *)((char *)v1956 + v1966);
          uint64_t v1969 = v1968[1];
          *uint64_t v1967 = *v1968;
          v1967[1] = v1969;
          *(void *)((char *)v1955 + v1957[13]) = *(void *)((char *)v1956 + v1957[13]);
          uint64_t v1970 = v1957[14];
          uint64_t v1971 = (char *)v1955 + v1970;
          v1972 = (char *)v1956 + v1970;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1972, 1, v2640))
          {
            uint64_t v1973 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1971, v1972, *(void *)(*(void *)(v1973 - 8) + 64));
          }
          else
          {
            v2622(v1971, v1972, v2640);
            __swift_storeEnumTagSinglePayload((uint64_t)v1971, 0, 1, v2640);
          }
          *(void *)((char *)v1955 + v1957[15]) = *(void *)((char *)v1956 + v1957[15]);
          *(void *)((char *)v1955 + v1957[16]) = *(void *)((char *)v1956 + v1957[16]);
          uint64_t v1974 = v1957[17];
          uint64_t v1975 = (void *)((char *)v1955 + v1974);
          v1976 = (void *)((char *)v1956 + v1974);
          uint64_t v1977 = v1976[1];
          *uint64_t v1975 = *v1976;
          v1975[1] = v1977;
          *(void *)((char *)v1955 + v1957[18]) = *(void *)((char *)v1956 + v1957[18]);
          *(void *)((char *)v1955 + v1957[19]) = *(void *)((char *)v1956 + v1957[19]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v1955, 0, 1, (uint64_t)v1957);
        }
        uint64_t v1978 = v2654[24];
        uint64_t v1979 = (void *)((char *)v2587 + v1978);
        v1980 = (void *)((char *)v12 + v1978);
        v1981 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1980, 1, (uint64_t)v1981))
        {
          uint64_t v1982 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v1979, v1980, *(void *)(*(void *)(v1982 - 8) + 64));
        }
        else
        {
          uint64_t v1983 = v1980[1];
          *uint64_t v1979 = *v1980;
          v1979[1] = v1983;
          uint64_t v1984 = v1980[3];
          v1979[2] = v1980[2];
          v1979[3] = v1984;
          uint64_t v1985 = v1980[5];
          v1979[4] = v1980[4];
          v1979[5] = v1985;
          uint64_t v1986 = v1980[7];
          v1979[6] = v1980[6];
          v1979[7] = v1986;
          uint64_t v1987 = v1981[8];
          uint64_t v2558 = (char *)v1980 + v1987;
          v2582 = (char *)v1979 + v1987;
          uint64_t v1988 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2558, 1, v1988))
          {
            uint64_t v1989 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2582, v2558, *(void *)(*(void *)(v1989 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1988 - 8) + 16))(v2582, v2558, v1988);
            __swift_storeEnumTagSinglePayload((uint64_t)v2582, 0, 1, v1988);
          }
          uint64_t v1990 = v1981[9];
          uint64_t v1991 = (void *)((char *)v1979 + v1990);
          v1992 = (void *)((char *)v1980 + v1990);
          uint64_t v1993 = v1992[1];
          *uint64_t v1991 = *v1992;
          v1991[1] = v1993;
          uint64_t v1994 = v1981[10];
          v1995 = (void *)((char *)v1979 + v1994);
          v1996 = (void *)((char *)v1980 + v1994);
          uint64_t v1997 = v1996[1];
          void *v1995 = *v1996;
          v1995[1] = v1997;
          uint64_t v1998 = v1981[11];
          v1999 = (void *)((char *)v1979 + v1998);
          v2000 = (void *)((char *)v1980 + v1998);
          uint64_t v2001 = v2000[1];
          void *v1999 = *v2000;
          v1999[1] = v2001;
          uint64_t v2002 = v1981[12];
          v2003 = (char *)v1979 + v2002;
          v2004 = (char *)v1980 + v2002;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2004, 1, v2640))
          {
            uint64_t v2005 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2003, v2004, *(void *)(*(void *)(v2005 - 8) + 64));
          }
          else
          {
            v2622(v2003, v2004, v2640);
            __swift_storeEnumTagSinglePayload((uint64_t)v2003, 0, 1, v2640);
          }
          uint64_t v2006 = v1981[13];
          v2007 = (char *)v1979 + v2006;
          v2008 = (char *)v1980 + v2006;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1980 + v2006, 1, v2640))
          {
            uint64_t v2009 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2007, v2008, *(void *)(*(void *)(v2009 - 8) + 64));
          }
          else
          {
            v2622(v2007, v2008, v2640);
            __swift_storeEnumTagSinglePayload((uint64_t)v2007, 0, 1, v2640);
          }
          uint64_t v2010 = v1981[14];
          v2011 = (char *)v1979 + v2010;
          v2012 = (char *)v1980 + v2010;
          *(void *)v2011 = *(void *)v2012;
          v2011[8] = v2012[8];
          uint64_t v2013 = v1981[15];
          uint64_t v2014 = (void *)((char *)v1979 + v2013);
          uint64_t v2015 = (void *)((char *)v1980 + v2013);
          uint64_t v2016 = v2015[1];
          *uint64_t v2014 = *v2015;
          v2014[1] = v2016;
          uint64_t v2017 = v1981[16];
          uint64_t v2018 = (void *)((char *)v1979 + v2017);
          uint64_t v2019 = (void *)((char *)v1980 + v2017);
          uint64_t v2020 = v2019[1];
          *uint64_t v2018 = *v2019;
          v2018[1] = v2020;
          uint64_t v2021 = v1981[17];
          uint64_t v2022 = (void *)((char *)v1979 + v2021);
          uint64_t v2023 = (void *)((char *)v1980 + v2021);
          uint64_t v2024 = v2023[1];
          *uint64_t v2022 = *v2023;
          v2022[1] = v2024;
          uint64_t v2025 = v1981[18];
          uint64_t v2026 = (void *)((char *)v1979 + v2025);
          v2027 = (void *)((char *)v1980 + v2025);
          uint64_t v2028 = v2027[1];
          *uint64_t v2026 = *v2027;
          v2026[1] = v2028;
          uint64_t v2029 = v1981[19];
          v2030 = (void *)((char *)v1979 + v2029);
          v2031 = (void *)((char *)v1980 + v2029);
          uint64_t v2032 = v2031[1];
          void *v2030 = *v2031;
          v2030[1] = v2032;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v1979, 0, 1, (uint64_t)v1981);
        }
        uint64_t v2033 = v2654[25];
        v2034 = (void *)((char *)v2587 + v2033);
        v2035 = (void *)((char *)v12 + v2033);
        uint64_t v2036 = *(void *)((char *)v12 + v2033 + 8);
        if (v2036)
        {
          void *v2034 = *v2035;
          v2034[1] = v2036;
          uint64_t v2037 = v2035[3];
          v2034[2] = v2035[2];
          v2034[3] = v2037;
          uint64_t v2038 = v2035[5];
          v2034[4] = v2035[4];
          v2034[5] = v2038;
          uint64_t v2039 = v2035[7];
          v2034[6] = v2035[6];
          v2034[7] = v2039;
          uint64_t v2040 = v2035[9];
          v2034[8] = v2035[8];
          v2034[9] = v2040;
          uint64_t v2041 = v2035[11];
          v2034[10] = v2035[10];
          v2034[11] = v2041;
          uint64_t v2583 = v2035[13];
          v2034[12] = v2035[12];
          v2034[13] = v2583;
          uint64_t v2634 = v2035[15];
          v2034[14] = v2035[14];
          v2034[15] = v2634;
          uint64_t v2668 = v2035[17];
          v2034[16] = v2035[16];
          v2034[17] = v2668;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_539:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_540:
          swift_bridgeObjectRetain();
        }
        else
        {
LABEL_541:
          memcpy(v2034, v2035, 0x90uLL);
        }
        uint64_t v5 = v2670;
        uint64_t v13 = v2680;
        goto LABEL_543;
    }
  }
  return v5;
}

#error "257F9FC18: too big function (funcsize=0)"

uint64_t outlined destroy of Data(uint64_t a1)
{
  return a1;
}

uint64_t outlined destroy of IdCardEntity(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t initializeWithTake for IdCardEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (_OWORD *)(a1 + v4);
  uint64_t v6 = (_OWORD *)(a2 + v4);
  uint64_t v7 = type metadata accessor for SearchResult(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        long long v10 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v10;
        long long v11 = v6[3];
        v5[2] = v6[2];
        v5[3] = v11;
        long long v12 = v6[5];
        v5[4] = v6[4];
        v5[5] = v12;
        uint64_t v13 = (int *)type metadata accessor for EmailDocument(0);
        uint64_t v14 = v13[12];
        uint64_t v15 = (char *)v5 + v14;
        uint64_t v16 = (char *)v6 + v14;
        uint64_t v17 = type metadata accessor for Date();
        uint64_t v1149 = *(void (**)(char *, char *))(*(void *)(v17 - 8) + 32);
        uint64_t v1152 = (void *)v17;
        v1149(v15, v16);
        *(void *)((char *)v5 + v13[13]) = *(void *)((char *)v6 + v13[13]);
        *(void *)((char *)v5 + v13[14]) = *(void *)((char *)v6 + v13[14]);
        *(void *)((char *)v5 + v13[15]) = *(void *)((char *)v6 + v13[15]);
        *((unsigned char *)v5 + v13[16]) = *((unsigned char *)v6 + v13[16]);
        *((unsigned char *)v5 + v13[17]) = *((unsigned char *)v6 + v13[17]);
        *(_OWORD *)((char *)v5 + v13[18]) = *(_OWORD *)((char *)v6 + v13[18]);
        uint64_t v18 = v13[19];
        uint64_t v19 = (char *)v5 + v18;
        uint64_t v20 = (char *)v6 + v18;
        long long v21 = *((_OWORD *)v20 + 1);
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        *((_OWORD *)v19 + 1) = v21;
        *((void *)v19 + 4) = *((void *)v20 + 4);
        *(_OWORD *)((char *)v5 + v13[20]) = *(_OWORD *)((char *)v6 + v13[20]);
        uint64_t v1156 = v13;
        uint64_t v22 = v13[21];
        uint64_t v23 = (_OWORD *)((char *)v5 + v22);
        uint64_t v24 = (_OWORD *)((char *)v6 + v22);
        uint64_t v25 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, (uint64_t)v25))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
          uint64_t v27 = v1156;
        }
        else
        {
          *uint64_t v23 = *v24;
          uint64_t v229 = v25[5];
          uint64_t v230 = (_OWORD *)((char *)v23 + v229);
          uint64_t v231 = (_OWORD *)((char *)v24 + v229);
          uint64_t v232 = type metadata accessor for RentalCarReservation(0);
          __dst = v23;
          uint64_t v1144 = v25;
          uint64_t v1134 = v24;
          if (__swift_getEnumTagSinglePayload((uint64_t)v231, 1, v232))
          {
            uint64_t v233 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v230, v231, *(void *)(*(void *)(v233 - 8) + 64));
          }
          else
          {
            long long v353 = v231[1];
            *uint64_t v230 = *v231;
            v230[1] = v353;
            long long v354 = v231[3];
            v230[2] = v231[2];
            v230[3] = v354;
            long long v355 = v231[5];
            v230[4] = v231[4];
            v230[5] = v355;
            long long v356 = v231[7];
            v230[6] = v231[6];
            v230[7] = v356;
            *((unsigned char *)v230 + 128) = *((unsigned char *)v231 + 128);
            *(_WORD *)((char *)v230 + 129) = *(_WORD *)((char *)v231 + 129);
            *((void *)v230 + 17) = *((void *)v231 + 17);
            long long v357 = v231[10];
            v230[9] = v231[9];
            v230[10] = v357;
            long long v358 = v231[12];
            v230[11] = v231[11];
            v230[12] = v358;
            long long v359 = v231[14];
            v230[13] = v231[13];
            v230[14] = v359;
            v230[15] = v231[15];
            *((void *)v230 + 32) = *((void *)v231 + 32);
            *(_OWORD *)((char *)v230 + 264) = *(_OWORD *)((char *)v231 + 264);
            *(_OWORD *)((char *)v230 + 280) = *(_OWORD *)((char *)v231 + 280);
            *(_OWORD *)((char *)v230 + 296) = *(_OWORD *)((char *)v231 + 296);
            *(_OWORD *)((char *)v230 + 312) = *(_OWORD *)((char *)v231 + 312);
            *(_OWORD *)((char *)v230 + 328) = *(_OWORD *)((char *)v231 + 328);
            *(_OWORD *)((char *)v230 + 344) = *(_OWORD *)((char *)v231 + 344);
            *(_OWORD *)((char *)v230 + 360) = *(_OWORD *)((char *)v231 + 360);
            *((unsigned char *)v230 + 384) = *((unsigned char *)v231 + 384);
            *((void *)v230 + 47) = *((void *)v231 + 47);
            *(_OWORD *)((char *)v230 + 392) = *(_OWORD *)((char *)v231 + 392);
            *(_OWORD *)((char *)v230 + 408) = *(_OWORD *)((char *)v231 + 408);
            uint64_t v360 = *(int *)(v232 + 140);
            uint64_t v361 = (char *)v230 + v360;
            uint64_t v362 = (char *)v231 + v360;
            if (__swift_getEnumTagSinglePayload((uint64_t)v231 + v360, 1, (uint64_t)v1152))
            {
              uint64_t v363 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v361, v362, *(void *)(*(void *)(v363 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v361, v362, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v361, 0, 1, (uint64_t)v1152);
            }
            uint64_t v386 = *(int *)(v232 + 144);
            uint64_t v387 = (char *)v230 + v386;
            uint64_t v388 = (char *)v231 + v386;
            if (__swift_getEnumTagSinglePayload((uint64_t)v231 + v386, 1, (uint64_t)v1152))
            {
              uint64_t v389 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v387, v388, *(void *)(*(void *)(v389 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v387, v388, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v387, 0, 1, (uint64_t)v1152);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v230, 0, 1, v232);
            uint64_t v23 = __dst;
            uint64_t v25 = v1144;
          }
          uint64_t v398 = v25[6];
          uint64_t v399 = (_OWORD *)((char *)v23 + v398);
          uint64_t v400 = (_OWORD *)((char *)v24 + v398);
          uint64_t v401 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v400, 1, v401))
          {
            uint64_t v402 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v399, v400, *(void *)(*(void *)(v402 - 8) + 64));
          }
          else
          {
            long long v403 = v400[1];
            _OWORD *v399 = *v400;
            v399[1] = v403;
            long long v404 = v400[3];
            v399[2] = v400[2];
            v399[3] = v404;
            long long v405 = v400[5];
            v399[4] = v400[4];
            v399[5] = v405;
            long long v406 = v400[7];
            v399[6] = v400[6];
            v399[7] = v406;
            *((unsigned char *)v399 + 128) = *((unsigned char *)v400 + 128);
            *(_WORD *)((char *)v399 + 129) = *(_WORD *)((char *)v400 + 129);
            *((void *)v399 + 17) = *((void *)v400 + 17);
            long long v407 = v400[10];
            v399[9] = v400[9];
            v399[10] = v407;
            long long v408 = v400[12];
            v399[11] = v400[11];
            v399[12] = v408;
            *((void *)v399 + 26) = *((void *)v400 + 26);
            *(_OWORD *)((char *)v399 + 216) = *(_OWORD *)((char *)v400 + 216);
            *(_OWORD *)((char *)v399 + 232) = *(_OWORD *)((char *)v400 + 232);
            *(_OWORD *)((char *)v399 + 248) = *(_OWORD *)((char *)v400 + 248);
            *(_OWORD *)((char *)v399 + 264) = *(_OWORD *)((char *)v400 + 264);
            *((unsigned char *)v399 + 296) = *((unsigned char *)v400 + 296);
            uint64_t v409 = *((void *)v400 + 36);
            *((void *)v399 + 35) = *((void *)v400 + 35);
            *((void *)v399 + 36) = v409;
            uint64_t v410 = *(int *)(v401 + 112);
            uint64_t v411 = (char *)v399 + v410;
            uint64_t v412 = (char *)v400 + v410;
            if (__swift_getEnumTagSinglePayload((uint64_t)v400 + v410, 1, (uint64_t)v1152))
            {
              uint64_t v413 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v411, v412, *(void *)(*(void *)(v413 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v411, v412, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v411, 0, 1, (uint64_t)v1152);
            }
            uint64_t v446 = *(int *)(v401 + 116);
            unint64_t v447 = (char *)v399 + v446;
            uint64_t v448 = (char *)v400 + v446;
            if (__swift_getEnumTagSinglePayload((uint64_t)v400 + v446, 1, (uint64_t)v1152))
            {
              uint64_t v449 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v447, v448, *(void *)(*(void *)(v449 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v447, v448, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v447, 0, 1, (uint64_t)v1152);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v399, 0, 1, v401);
            uint64_t v23 = __dst;
            uint64_t v25 = v1144;
          }
          uint64_t v458 = v25[7];
          uint64_t v459 = (_OWORD *)((char *)v23 + v458);
          uint64_t v460 = (_OWORD *)((char *)v24 + v458);
          v461 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v460, 1, (uint64_t)v461))
          {
            uint64_t v462 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v459, v460, *(void *)(*(void *)(v462 - 8) + 64));
          }
          else
          {
            long long v463 = v460[1];
            *uint64_t v459 = *v460;
            v459[1] = v463;
            long long v464 = v460[3];
            v459[2] = v460[2];
            v459[3] = v464;
            long long v465 = v460[5];
            v459[4] = v460[4];
            v459[5] = v465;
            long long v466 = v460[7];
            v459[6] = v460[6];
            v459[7] = v466;
            *((unsigned char *)v459 + 128) = *((unsigned char *)v460 + 128);
            *(_WORD *)((char *)v459 + 129) = *(_WORD *)((char *)v460 + 129);
            *((void *)v459 + 17) = *((void *)v460 + 17);
            long long v467 = v460[10];
            v459[9] = v460[9];
            v459[10] = v467;
            long long v468 = v460[12];
            v459[11] = v460[11];
            v459[12] = v468;
            long long v469 = v460[14];
            v459[13] = v460[13];
            v459[14] = v469;
            *((void *)v459 + 30) = *((void *)v460 + 30);
            *(_OWORD *)((char *)v459 + 248) = *(_OWORD *)((char *)v460 + 248);
            *(_OWORD *)((char *)v459 + 264) = *(_OWORD *)((char *)v460 + 264);
            *((unsigned char *)v459 + 296) = *((unsigned char *)v460 + 296);
            uint64_t v470 = *((void *)v460 + 36);
            *((void *)v459 + 35) = *((void *)v460 + 35);
            *((void *)v459 + 36) = v470;
            v459[19] = v460[19];
            uint64_t v471 = v461[29];
            uint64_t v472 = (char *)v459 + v471;
            uint64_t v473 = (char *)v460 + v471;
            uint64_t v474 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v473, 1, v474))
            {
              uint64_t v475 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v472, v473, *(void *)(*(void *)(v475 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v474 - 8) + 32))(v472, v473, v474);
              __swift_storeEnumTagSinglePayload((uint64_t)v472, 0, 1, v474);
            }
            *(_OWORD *)((char *)v459 + v461[30]) = *(_OWORD *)((char *)v460 + v461[30]);
            uint64_t v511 = v461[31];
            uint64_t v512 = (char *)v459 + v511;
            uint64_t v513 = (char *)v460 + v511;
            if (__swift_getEnumTagSinglePayload((uint64_t)v460 + v511, 1, (uint64_t)v1152))
            {
              uint64_t v514 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v512, v513, *(void *)(*(void *)(v514 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v512, v513, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v512, 0, 1, (uint64_t)v1152);
            }
            uint64_t v523 = v461[32];
            uint64_t v524 = (char *)v459 + v523;
            uint64_t v525 = (char *)v460 + v523;
            if (__swift_getEnumTagSinglePayload((uint64_t)v460 + v523, 1, (uint64_t)v1152))
            {
              uint64_t v526 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v524, v525, *(void *)(*(void *)(v526 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v524, v525, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v524, 0, 1, (uint64_t)v1152);
            }
            uint64_t v24 = v1134;
            __swift_storeEnumTagSinglePayload((uint64_t)v459, 0, 1, (uint64_t)v461);
            uint64_t v23 = __dst;
            uint64_t v25 = v1144;
          }
          uint64_t v535 = v25[8];
          v536 = (_OWORD *)((char *)v23 + v535);
          uint64_t v537 = (_OWORD *)((char *)v24 + v535);
          uint64_t v538 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v537, 1, v538))
          {
            uint64_t v539 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v536, v537, *(void *)(*(void *)(v539 - 8) + 64));
          }
          else
          {
            long long v540 = v537[1];
            _OWORD *v536 = *v537;
            v536[1] = v540;
            long long v541 = v537[3];
            v536[2] = v537[2];
            v536[3] = v541;
            long long v542 = v537[5];
            v536[4] = v537[4];
            v536[5] = v542;
            long long v543 = v537[7];
            v536[6] = v537[6];
            v536[7] = v543;
            *((unsigned char *)v536 + 128) = *((unsigned char *)v537 + 128);
            *(_WORD *)((char *)v536 + 129) = *(_WORD *)((char *)v537 + 129);
            *((void *)v536 + 17) = *((void *)v537 + 17);
            long long v544 = v537[10];
            v536[9] = v537[9];
            v536[10] = v544;
            long long v545 = v537[12];
            v536[11] = v537[11];
            v536[12] = v545;
            long long v546 = v537[14];
            v536[13] = v537[13];
            v536[14] = v546;
            long long v547 = v537[16];
            v536[15] = v537[15];
            v536[16] = v547;
            *((unsigned char *)v536 + 280) = *((unsigned char *)v537 + 280);
            *((void *)v536 + 34) = *((void *)v537 + 34);
            v536[18] = v537[18];
            uint64_t v548 = *(int *)(v538 + 108);
            uint64_t v549 = (char *)v536 + v548;
            v550 = (char *)v537 + v548;
            if (__swift_getEnumTagSinglePayload((uint64_t)v537 + v548, 1, (uint64_t)v1152))
            {
              uint64_t v551 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v549, v550, *(void *)(*(void *)(v551 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v549, v550, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v549, 0, 1, (uint64_t)v1152);
            }
            uint64_t v586 = *(int *)(v538 + 112);
            uint64_t v587 = (char *)v536 + v586;
            v588 = (char *)v537 + v586;
            if (__swift_getEnumTagSinglePayload((uint64_t)v537 + v586, 1, (uint64_t)v1152))
            {
              uint64_t v589 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v587, v588, *(void *)(*(void *)(v589 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v587, v588, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v587, 0, 1, (uint64_t)v1152);
            }
            uint64_t v24 = v1134;
            __swift_storeEnumTagSinglePayload((uint64_t)v536, 0, 1, v538);
            uint64_t v23 = __dst;
            uint64_t v25 = v1144;
          }
          uint64_t v598 = v25[9];
          uint64_t v599 = (_OWORD *)((char *)v23 + v598);
          uint64_t v600 = (_OWORD *)((char *)v24 + v598);
          v601 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v600, 1, (uint64_t)v601))
          {
            uint64_t v602 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v599, v600, *(void *)(*(void *)(v602 - 8) + 64));
          }
          else
          {
            long long v603 = v600[1];
            *uint64_t v599 = *v600;
            v599[1] = v603;
            long long v604 = v600[3];
            v599[2] = v600[2];
            v599[3] = v604;
            long long v605 = v600[5];
            v599[4] = v600[4];
            v599[5] = v605;
            long long v606 = v600[7];
            v599[6] = v600[6];
            v599[7] = v606;
            *((unsigned char *)v599 + 128) = *((unsigned char *)v600 + 128);
            *(_WORD *)((char *)v599 + 129) = *(_WORD *)((char *)v600 + 129);
            *((void *)v599 + 17) = *((void *)v600 + 17);
            long long v607 = v600[10];
            v599[9] = v600[9];
            v599[10] = v607;
            long long v608 = v600[12];
            v599[11] = v600[11];
            v599[12] = v608;
            long long v609 = v600[14];
            v599[13] = v600[13];
            v599[14] = v609;
            v599[15] = v600[15];
            uint64_t v610 = v601[24];
            uint64_t v611 = (char *)v599 + v610;
            uint64_t v612 = (char *)v600 + v610;
            if (__swift_getEnumTagSinglePayload((uint64_t)v600 + v610, 1, (uint64_t)v1152))
            {
              uint64_t v613 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v611, v612, *(void *)(*(void *)(v613 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v611, v612, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v611, 0, 1, (uint64_t)v1152);
            }
            uint64_t v646 = v601[25];
            uint64_t v647 = (char *)v599 + v646;
            uint64_t v648 = (char *)v600 + v646;
            if (__swift_getEnumTagSinglePayload((uint64_t)v600 + v646, 1, (uint64_t)v1152))
            {
              uint64_t v649 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v647, v648, *(void *)(*(void *)(v649 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v647, v648, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v647, 0, 1, (uint64_t)v1152);
            }
            uint64_t v658 = v601[26];
            v659 = (char *)v599 + v658;
            uint64_t v660 = (char *)v600 + v658;
            uint64_t v661 = type metadata accessor for URL();
            uint64_t v23 = __dst;
            if (__swift_getEnumTagSinglePayload((uint64_t)v660, 1, v661))
            {
              uint64_t v662 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v659, v660, *(void *)(*(void *)(v662 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v661 - 8) + 32))(v659, v660, v661);
              __swift_storeEnumTagSinglePayload((uint64_t)v659, 0, 1, v661);
            }
            uint64_t v25 = v1144;
            __swift_storeEnumTagSinglePayload((uint64_t)v599, 0, 1, (uint64_t)v601);
            uint64_t v24 = v1134;
          }
          uint64_t v672 = v25[10];
          uint64_t v673 = (_OWORD *)((char *)v23 + v672);
          uint64_t v674 = (_OWORD *)((char *)v24 + v672);
          uint64_t v675 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v674, 1, (uint64_t)v675))
          {
            uint64_t v676 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v673, v674, *(void *)(*(void *)(v676 - 8) + 64));
          }
          else
          {
            long long v677 = v674[1];
            *uint64_t v673 = *v674;
            v673[1] = v677;
            long long v678 = v674[3];
            v673[2] = v674[2];
            v673[3] = v678;
            long long v679 = v674[5];
            v673[4] = v674[4];
            v673[5] = v679;
            long long v680 = v674[7];
            v673[6] = v674[6];
            v673[7] = v680;
            *((unsigned char *)v673 + 128) = *((unsigned char *)v674 + 128);
            *(_WORD *)((char *)v673 + 129) = *(_WORD *)((char *)v674 + 129);
            *((void *)v673 + 17) = *((void *)v674 + 17);
            long long v681 = v674[10];
            v673[9] = v674[9];
            v673[10] = v681;
            long long v682 = v674[12];
            v673[11] = v674[11];
            v673[12] = v682;
            v673[13] = v674[13];
            uint64_t v683 = v675[22];
            uint64_t v684 = (char *)v673 + v683;
            uint64_t v685 = (char *)v674 + v683;
            if (__swift_getEnumTagSinglePayload((uint64_t)v674 + v683, 1, (uint64_t)v1152))
            {
              uint64_t v686 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v684, v685, *(void *)(*(void *)(v686 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v684, v685, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v684, 0, 1, (uint64_t)v1152);
            }
            uint64_t v717 = v675[23];
            uint64_t v718 = (char *)v673 + v717;
            uint64_t v719 = (char *)v674 + v717;
            if (__swift_getEnumTagSinglePayload((uint64_t)v674 + v717, 1, (uint64_t)v1152))
            {
              uint64_t v720 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v718, v719, *(void *)(*(void *)(v720 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v718, v719, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v718, 0, 1, (uint64_t)v1152);
            }
            uint64_t v729 = v675[24];
            uint64_t v730 = (char *)v673 + v729;
            uint64_t v731 = (char *)v674 + v729;
            *(void *)uint64_t v730 = *(void *)v731;
            v730[8] = v731[8];
            uint64_t v732 = v675[25];
            uint64_t v733 = (char *)v673 + v732;
            uint64_t v734 = (char *)v674 + v732;
            uint64_t v735 = type metadata accessor for URL();
            uint64_t v23 = __dst;
            if (__swift_getEnumTagSinglePayload((uint64_t)v734, 1, v735))
            {
              uint64_t v736 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v733, v734, *(void *)(*(void *)(v736 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v735 - 8) + 32))(v733, v734, v735);
              __swift_storeEnumTagSinglePayload((uint64_t)v733, 0, 1, v735);
            }
            uint64_t v25 = v1144;
            __swift_storeEnumTagSinglePayload((uint64_t)v673, 0, 1, (uint64_t)v675);
            uint64_t v24 = v1134;
          }
          uint64_t v752 = v25[11];
          uint64_t v753 = (_OWORD *)((char *)v23 + v752);
          uint64_t v754 = (_OWORD *)((char *)v24 + v752);
          uint64_t v755 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v754, 1, (uint64_t)v755))
          {
            uint64_t v756 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v753, v754, *(void *)(*(void *)(v756 - 8) + 64));
          }
          else
          {
            long long v757 = v754[1];
            *uint64_t v753 = *v754;
            v753[1] = v757;
            long long v758 = v754[3];
            v753[2] = v754[2];
            v753[3] = v758;
            long long v759 = v754[5];
            v753[4] = v754[4];
            v753[5] = v759;
            *((unsigned char *)v753 + 96) = *((unsigned char *)v754 + 96);
            *(_OWORD *)((char *)v753 + 104) = *(_OWORD *)((char *)v754 + 104);
            uint64_t v760 = v755[13];
            uint64_t v761 = (char *)v753 + v760;
            uint64_t v762 = (char *)v754 + v760;
            uint64_t v763 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v762, 1, v763))
            {
              uint64_t v764 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v761, v762, *(void *)(*(void *)(v764 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v763 - 8) + 32))(v761, v762, v763);
              __swift_storeEnumTagSinglePayload((uint64_t)v761, 0, 1, v763);
            }
            uint64_t v790 = v755[14];
            uint64_t v791 = (char *)v753 + v790;
            uint64_t v792 = (char *)v754 + v790;
            if (__swift_getEnumTagSinglePayload((uint64_t)v754 + v790, 1, v763))
            {
              uint64_t v793 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v791, v792, *(void *)(*(void *)(v793 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v763 - 8) + 32))(v791, v792, v763);
              __swift_storeEnumTagSinglePayload((uint64_t)v791, 0, 1, v763);
            }
            *(_OWORD *)((char *)v753 + v755[15]) = *(_OWORD *)((char *)v754 + v755[15]);
            *(_OWORD *)((char *)v753 + v755[16]) = *(_OWORD *)((char *)v754 + v755[16]);
            *(_OWORD *)((char *)v753 + v755[17]) = *(_OWORD *)((char *)v754 + v755[17]);
            uint64_t v802 = v755[18];
            uint64_t v1131 = (char *)v754 + v802;
            uint64_t v1132 = (char *)v753 + v802;
            uint64_t v803 = type metadata accessor for DateComponents();
            uint64_t v804 = *(void (**)(char *, char *, uint64_t))(*(void *)(v803 - 8) + 32);
            v804(v1132, v1131, v803);
            v804((char *)v753 + v755[19], (char *)v754 + v755[19], v803);
            *(_OWORD *)((char *)v753 + v755[20]) = *(_OWORD *)((char *)v754 + v755[20]);
            *(_OWORD *)((char *)v753 + v755[21]) = *(_OWORD *)((char *)v754 + v755[21]);
            *(_OWORD *)((char *)v753 + v755[22]) = *(_OWORD *)((char *)v754 + v755[22]);
            *(_OWORD *)((char *)v753 + v755[23]) = *(_OWORD *)((char *)v754 + v755[23]);
            *(_OWORD *)((char *)v753 + v755[24]) = *(_OWORD *)((char *)v754 + v755[24]);
            *(_OWORD *)((char *)v753 + v755[25]) = *(_OWORD *)((char *)v754 + v755[25]);
            *(_OWORD *)((char *)v753 + v755[26]) = *(_OWORD *)((char *)v754 + v755[26]);
            *(_OWORD *)((char *)v753 + v755[27]) = *(_OWORD *)((char *)v754 + v755[27]);
            *(_OWORD *)((char *)v753 + v755[28]) = *(_OWORD *)((char *)v754 + v755[28]);
            *(_OWORD *)((char *)v753 + v755[29]) = *(_OWORD *)((char *)v754 + v755[29]);
            *(_OWORD *)((char *)v753 + v755[30]) = *(_OWORD *)((char *)v754 + v755[30]);
            *(_OWORD *)((char *)v753 + v755[31]) = *(_OWORD *)((char *)v754 + v755[31]);
            *(_OWORD *)((char *)v753 + v755[32]) = *(_OWORD *)((char *)v754 + v755[32]);
            *(void *)((char *)v753 + v755[33]) = *(void *)((char *)v754 + v755[33]);
            *(void *)((char *)v753 + v755[34]) = *(void *)((char *)v754 + v755[34]);
            *(_OWORD *)((char *)v753 + v755[35]) = *(_OWORD *)((char *)v754 + v755[35]);
            *(_OWORD *)((char *)v753 + v755[36]) = *(_OWORD *)((char *)v754 + v755[36]);
            *(_OWORD *)((char *)v753 + v755[37]) = *(_OWORD *)((char *)v754 + v755[37]);
            uint64_t v805 = v755[38];
            uint64_t v806 = (char *)v753 + v805;
            uint64_t v807 = (char *)v754 + v805;
            if (__swift_getEnumTagSinglePayload((uint64_t)v754 + v805, 1, (uint64_t)v1152))
            {
              uint64_t v808 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v806, v807, *(void *)(*(void *)(v808 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v1149)(v806, v807, v1152);
              __swift_storeEnumTagSinglePayload((uint64_t)v806, 0, 1, (uint64_t)v1152);
            }
            uint64_t v24 = v1134;
            *(_OWORD *)((char *)v753 + v755[39]) = *(_OWORD *)((char *)v754 + v755[39]);
            *(_OWORD *)((char *)v753 + v755[40]) = *(_OWORD *)((char *)v754 + v755[40]);
            uint64_t v823 = v755[41];
            uint64_t v824 = (char *)v753 + v823;
            uint64_t v825 = (char *)v754 + v823;
            *(void *)uint64_t v824 = *(void *)v825;
            v824[8] = v825[8];
            *(_OWORD *)((char *)v753 + v755[42]) = *(_OWORD *)((char *)v754 + v755[42]);
            uint64_t v826 = v755[43];
            uint64_t v827 = (char *)v753 + v826;
            uint64_t v828 = (char *)v754 + v826;
            *(_OWORD *)uint64_t v827 = *(_OWORD *)v828;
            *(void *)(v827 + 13) = *(void *)(v828 + 13);
            *(_OWORD *)((char *)v753 + v755[44]) = *(_OWORD *)((char *)v754 + v755[44]);
            *(_OWORD *)((char *)v753 + v755[45]) = *(_OWORD *)((char *)v754 + v755[45]);
            *(_OWORD *)((char *)v753 + v755[46]) = *(_OWORD *)((char *)v754 + v755[46]);
            *(_OWORD *)((char *)v753 + v755[47]) = *(_OWORD *)((char *)v754 + v755[47]);
            __swift_storeEnumTagSinglePayload((uint64_t)v753, 0, 1, (uint64_t)v755);
            uint64_t v23 = __dst;
            uint64_t v25 = v1144;
          }
          uint64_t v829 = v25[12];
          uint64_t v830 = (_OWORD *)((char *)v23 + v829);
          uint64_t v831 = (_OWORD *)((char *)v24 + v829);
          uint64_t v832 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v831, 1, (uint64_t)v832))
          {
            uint64_t v833 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v830, v831, *(void *)(*(void *)(v833 - 8) + 64));
          }
          else
          {
            long long v834 = v831[1];
            *uint64_t v830 = *v831;
            v830[1] = v834;
            long long v835 = v831[3];
            v830[2] = v831[2];
            v830[3] = v835;
            long long v836 = v831[5];
            v830[4] = v831[4];
            v830[5] = v836;
            *((unsigned char *)v830 + 96) = *((unsigned char *)v831 + 96);
            *(_OWORD *)((char *)v830 + 104) = *(_OWORD *)((char *)v831 + 104);
            *(_OWORD *)((char *)v830 + 120) = *(_OWORD *)((char *)v831 + 120);
            uint64_t v837 = v832[14];
            uint64_t v838 = (char *)v830 + v837;
            uint64_t v839 = (char *)v831 + v837;
            uint64_t v840 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v839, 1, v840))
            {
              uint64_t v841 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v838, v839, *(void *)(*(void *)(v841 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v840 - 8) + 32))(v838, v839, v840);
              __swift_storeEnumTagSinglePayload((uint64_t)v838, 0, 1, v840);
            }
            uint64_t v878 = v832[15];
            uint64_t v879 = (char *)v830 + v878;
            uint64_t v880 = (char *)v831 + v878;
            if (__swift_getEnumTagSinglePayload((uint64_t)v831 + v878, 1, v840))
            {
              uint64_t v881 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v879, v880, *(void *)(*(void *)(v881 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v840 - 8) + 32))(v879, v880, v840);
              __swift_storeEnumTagSinglePayload((uint64_t)v879, 0, 1, v840);
            }
            uint64_t v24 = v1134;
            *(_OWORD *)((char *)v830 + v832[16]) = *(_OWORD *)((char *)v831 + v832[16]);
            *(_OWORD *)((char *)v830 + v832[17]) = *(_OWORD *)((char *)v831 + v832[17]);
            *(_OWORD *)((char *)v830 + v832[18]) = *(_OWORD *)((char *)v831 + v832[18]);
            *(_OWORD *)((char *)v830 + v832[19]) = *(_OWORD *)((char *)v831 + v832[19]);
            *(_OWORD *)((char *)v830 + v832[20]) = *(_OWORD *)((char *)v831 + v832[20]);
            *(void *)((char *)v830 + v832[21]) = *(void *)((char *)v831 + v832[21]);
            *(void *)((char *)v830 + v832[22]) = *(void *)((char *)v831 + v832[22]);
            uint64_t v888 = v832[23];
            uint64_t v889 = (char *)v830 + v888;
            uint64_t v890 = (char *)v831 + v888;
            v889[8] = v890[8];
            *(void *)uint64_t v889 = *(void *)v890;
            uint64_t v891 = v832[24];
            uint64_t v892 = (char *)v830 + v891;
            uint64_t v893 = (char *)v831 + v891;
            v892[8] = v893[8];
            *(void *)uint64_t v892 = *(void *)v893;
            *(_OWORD *)((char *)v830 + v832[25]) = *(_OWORD *)((char *)v831 + v832[25]);
            *(_OWORD *)((char *)v830 + v832[26]) = *(_OWORD *)((char *)v831 + v832[26]);
            *(_OWORD *)((char *)v830 + v832[27]) = *(_OWORD *)((char *)v831 + v832[27]);
            *(_OWORD *)((char *)v830 + v832[28]) = *(_OWORD *)((char *)v831 + v832[28]);
            uint64_t v894 = v832[29];
            uint64_t v895 = (char *)v830 + v894;
            uint64_t v896 = (char *)v831 + v894;
            *(void *)uint64_t v895 = *(void *)v896;
            v895[8] = v896[8];
            __swift_storeEnumTagSinglePayload((uint64_t)v830, 0, 1, (uint64_t)v832);
            uint64_t v23 = __dst;
            uint64_t v25 = v1144;
          }
          uint64_t v897 = v25[13];
          uint64_t v898 = (_OWORD *)((char *)v23 + v897);
          uint64_t v899 = (_OWORD *)((char *)v24 + v897);
          uint64_t v900 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v899, 1, (uint64_t)v900))
          {
            uint64_t v901 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v898, v899, *(void *)(*(void *)(v901 - 8) + 64));
            uint64_t v27 = v1156;
          }
          else
          {
            long long v902 = v899[1];
            *uint64_t v898 = *v899;
            v898[1] = v902;
            long long v903 = v899[3];
            v898[2] = v899[2];
            v898[3] = v903;
            long long v904 = v899[5];
            v898[4] = v899[4];
            v898[5] = v904;
            *((unsigned char *)v898 + 96) = *((unsigned char *)v899 + 96);
            *(_OWORD *)((char *)v898 + 104) = *(_OWORD *)((char *)v899 + 104);
            *(_OWORD *)((char *)v898 + 120) = *(_OWORD *)((char *)v899 + 120);
            uint64_t v905 = v900[14];
            uint64_t v906 = (char *)v898 + v905;
            uint64_t v907 = (char *)v899 + v905;
            uint64_t v908 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v907, 1, v908))
            {
              uint64_t v909 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v906, v907, *(void *)(*(void *)(v909 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v908 - 8) + 32))(v906, v907, v908);
              __swift_storeEnumTagSinglePayload((uint64_t)v906, 0, 1, v908);
            }
            uint64_t v27 = v1156;
            *(_OWORD *)((char *)v898 + v900[15]) = *(_OWORD *)((char *)v899 + v900[15]);
            *(_OWORD *)((char *)v898 + v900[16]) = *(_OWORD *)((char *)v899 + v900[16]);
            *(_OWORD *)((char *)v898 + v900[17]) = *(_OWORD *)((char *)v899 + v900[17]);
            *(_OWORD *)((char *)v898 + v900[18]) = *(_OWORD *)((char *)v899 + v900[18]);
            *(_OWORD *)((char *)v898 + v900[19]) = *(_OWORD *)((char *)v899 + v900[19]);
            *(void *)((char *)v898 + v900[20]) = *(void *)((char *)v899 + v900[20]);
            *(_OWORD *)((char *)v898 + v900[21]) = *(_OWORD *)((char *)v899 + v900[21]);
            *(_OWORD *)((char *)v898 + v900[22]) = *(_OWORD *)((char *)v899 + v900[22]);
            *(_OWORD *)((char *)v898 + v900[23]) = *(_OWORD *)((char *)v899 + v900[23]);
            __swift_storeEnumTagSinglePayload((uint64_t)v898, 0, 1, (uint64_t)v900);
            uint64_t v23 = __dst;
            uint64_t v25 = v1144;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, (uint64_t)v25);
        }
        uint64_t v954 = v27[22];
        uint64_t v955 = (_OWORD *)((char *)v5 + v954);
        uint64_t v956 = (_OWORD *)((char *)v6 + v954);
        uint64_t v957 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v956, 1, (uint64_t)v957))
        {
          uint64_t v958 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v955, v956, *(void *)(*(void *)(v958 - 8) + 64));
        }
        else
        {
          long long v959 = v956[1];
          _OWORD *v955 = *v956;
          v955[1] = v959;
          long long v960 = v956[3];
          v955[2] = v956[2];
          v955[3] = v960;
          long long v961 = v956[5];
          v955[4] = v956[4];
          v955[5] = v961;
          uint64_t v962 = v957[10];
          uint64_t v963 = (char *)v955 + v962;
          uint64_t v964 = (char *)v956 + v962;
          if (__swift_getEnumTagSinglePayload((uint64_t)v956 + v962, 1, (uint64_t)v1152))
          {
            uint64_t v965 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v963, v964, *(void *)(*(void *)(v965 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1149)(v963, v964, v1152);
            __swift_storeEnumTagSinglePayload((uint64_t)v963, 0, 1, (uint64_t)v1152);
          }
          uint64_t v966 = v957[11];
          uint64_t v967 = (char *)v955 + v966;
          uint64_t v968 = (char *)v956 + v966;
          if (__swift_getEnumTagSinglePayload((uint64_t)v956 + v966, 1, (uint64_t)v1152))
          {
            uint64_t v969 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v967, v968, *(void *)(*(void *)(v969 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1149)(v967, v968, v1152);
            __swift_storeEnumTagSinglePayload((uint64_t)v967, 0, 1, (uint64_t)v1152);
          }
          *(_OWORD *)((char *)v955 + v957[12]) = *(_OWORD *)((char *)v956 + v957[12]);
          *(_OWORD *)((char *)v955 + v957[13]) = *(_OWORD *)((char *)v956 + v957[13]);
          *(_OWORD *)((char *)v955 + v957[14]) = *(_OWORD *)((char *)v956 + v957[14]);
          uint64_t v970 = v957[15];
          uint64_t v971 = (char *)v955 + v970;
          uint64_t v972 = (char *)v956 + v970;
          if (__swift_getEnumTagSinglePayload((uint64_t)v956 + v970, 1, (uint64_t)v1152))
          {
            uint64_t v973 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v971, v972, *(void *)(*(void *)(v973 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1149)(v971, v972, v1152);
            __swift_storeEnumTagSinglePayload((uint64_t)v971, 0, 1, (uint64_t)v1152);
          }
          uint64_t v27 = v1156;
          *(_OWORD *)((char *)v955 + v957[16]) = *(_OWORD *)((char *)v956 + v957[16]);
          *(_OWORD *)((char *)v955 + v957[17]) = *(_OWORD *)((char *)v956 + v957[17]);
          *(_OWORD *)((char *)v955 + v957[18]) = *(_OWORD *)((char *)v956 + v957[18]);
          *(_OWORD *)((char *)v955 + v957[19]) = *(_OWORD *)((char *)v956 + v957[19]);
          *(_OWORD *)((char *)v955 + v957[20]) = *(_OWORD *)((char *)v956 + v957[20]);
          *(_OWORD *)((char *)v955 + v957[21]) = *(_OWORD *)((char *)v956 + v957[21]);
          *(_OWORD *)((char *)v955 + v957[22]) = *(_OWORD *)((char *)v956 + v957[22]);
          *(_OWORD *)((char *)v955 + v957[23]) = *(_OWORD *)((char *)v956 + v957[23]);
          __swift_storeEnumTagSinglePayload((uint64_t)v955, 0, 1, (uint64_t)v957);
        }
        uint64_t v974 = v27[23];
        uint64_t v975 = (_OWORD *)((char *)v5 + v974);
        uint64_t v976 = (_OWORD *)((char *)v6 + v974);
        uint64_t v977 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v976, 1, (uint64_t)v977))
        {
          uint64_t v978 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v975, v976, *(void *)(*(void *)(v978 - 8) + 64));
        }
        else
        {
          long long v979 = v976[1];
          _OWORD *v975 = *v976;
          v975[1] = v979;
          long long v980 = v976[3];
          v975[2] = v976[2];
          v975[3] = v980;
          long long v981 = v976[5];
          v975[4] = v976[4];
          v975[5] = v981;
          uint64_t v982 = v977[11];
          uint64_t v983 = (char *)v975 + v982;
          uint64_t v984 = (char *)v976 + v982;
          if (__swift_getEnumTagSinglePayload((uint64_t)v976 + v982, 1, (uint64_t)v1152))
          {
            uint64_t v985 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v983, v984, *(void *)(*(void *)(v985 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1149)(v983, v984, v1152);
            __swift_storeEnumTagSinglePayload((uint64_t)v983, 0, 1, (uint64_t)v1152);
          }
          *(_OWORD *)((char *)v975 + v977[12]) = *(_OWORD *)((char *)v976 + v977[12]);
          *(void *)((char *)v975 + v977[13]) = *(void *)((char *)v976 + v977[13]);
          uint64_t v986 = v977[14];
          uint64_t v987 = (char *)v975 + v986;
          uint64_t v988 = (char *)v976 + v986;
          if (__swift_getEnumTagSinglePayload((uint64_t)v976 + v986, 1, (uint64_t)v1152))
          {
            uint64_t v989 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v987, v988, *(void *)(*(void *)(v989 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1149)(v987, v988, v1152);
            __swift_storeEnumTagSinglePayload((uint64_t)v987, 0, 1, (uint64_t)v1152);
          }
          uint64_t v27 = v1156;
          *(void *)((char *)v975 + v977[15]) = *(void *)((char *)v976 + v977[15]);
          *(void *)((char *)v975 + v977[16]) = *(void *)((char *)v976 + v977[16]);
          *(_OWORD *)((char *)v975 + v977[17]) = *(_OWORD *)((char *)v976 + v977[17]);
          *(void *)((char *)v975 + v977[18]) = *(void *)((char *)v976 + v977[18]);
          *(void *)((char *)v975 + v977[19]) = *(void *)((char *)v976 + v977[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v975, 0, 1, (uint64_t)v977);
        }
        uint64_t v990 = v27[24];
        uint64_t v991 = (_OWORD *)((char *)v5 + v990);
        uint64_t v992 = (_OWORD *)((char *)v6 + v990);
        uint64_t v993 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v992, 1, (uint64_t)v993))
        {
          uint64_t v994 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v991, v992, *(void *)(*(void *)(v994 - 8) + 64));
        }
        else
        {
          long long v995 = v992[1];
          *uint64_t v991 = *v992;
          v991[1] = v995;
          long long v996 = v992[3];
          v991[2] = v992[2];
          v991[3] = v996;
          uint64_t v997 = v993[8];
          uint64_t v998 = (char *)v991 + v997;
          uint64_t v999 = (char *)v992 + v997;
          uint64_t v1000 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v999, 1, v1000))
          {
            uint64_t v1001 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v998, v999, *(void *)(*(void *)(v1001 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1000 - 8) + 32))(v998, v999, v1000);
            __swift_storeEnumTagSinglePayload((uint64_t)v998, 0, 1, v1000);
          }
          *(_OWORD *)((char *)v991 + v993[9]) = *(_OWORD *)((char *)v992 + v993[9]);
          *(_OWORD *)((char *)v991 + v993[10]) = *(_OWORD *)((char *)v992 + v993[10]);
          *(_OWORD *)((char *)v991 + v993[11]) = *(_OWORD *)((char *)v992 + v993[11]);
          uint64_t v1002 = v993[12];
          uint64_t v1003 = (char *)v991 + v1002;
          uint64_t v1004 = (char *)v992 + v1002;
          if (__swift_getEnumTagSinglePayload((uint64_t)v992 + v1002, 1, (uint64_t)v1152))
          {
            uint64_t v1005 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1003, v1004, *(void *)(*(void *)(v1005 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1149)(v1003, v1004, v1152);
            __swift_storeEnumTagSinglePayload((uint64_t)v1003, 0, 1, (uint64_t)v1152);
          }
          uint64_t v1006 = v993[13];
          uint64_t v1007 = (char *)v991 + v1006;
          uint64_t v1008 = (char *)v992 + v1006;
          if (__swift_getEnumTagSinglePayload((uint64_t)v992 + v1006, 1, (uint64_t)v1152))
          {
            uint64_t v1009 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1007, v1008, *(void *)(*(void *)(v1009 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v1149)(v1007, v1008, v1152);
            __swift_storeEnumTagSinglePayload((uint64_t)v1007, 0, 1, (uint64_t)v1152);
          }
          uint64_t v27 = v1156;
          uint64_t v1010 = v993[14];
          uint64_t v1011 = (char *)v991 + v1010;
          uint64_t v1012 = (char *)v992 + v1010;
          *(void *)uint64_t v1011 = *(void *)v1012;
          v1011[8] = v1012[8];
          *(_OWORD *)((char *)v991 + v993[15]) = *(_OWORD *)((char *)v992 + v993[15]);
          *(_OWORD *)((char *)v991 + v993[16]) = *(_OWORD *)((char *)v992 + v993[16]);
          *(_OWORD *)((char *)v991 + v993[17]) = *(_OWORD *)((char *)v992 + v993[17]);
          *(_OWORD *)((char *)v991 + v993[18]) = *(_OWORD *)((char *)v992 + v993[18]);
          *(_OWORD *)((char *)v991 + v993[19]) = *(_OWORD *)((char *)v992 + v993[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v991, 0, 1, (uint64_t)v993);
        }
        memcpy((char *)v5 + v27[25], (char *)v6 + v27[25], 0x90uLL);
        goto LABEL_524;
      case 1u:
        long long v28 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v28;
        long long v29 = v6[3];
        v5[2] = v6[2];
        v5[3] = v29;
        v5[4] = v6[4];
        uint64_t v30 = (int *)type metadata accessor for MobileSMSDocument(0);
        uint64_t v31 = v30[10];
        uint64_t v32 = (char *)v5 + v31;
        uint64_t v33 = (char *)v6 + v31;
        uint64_t v34 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34))
        {
          uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
          __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v34);
        }
        uint64_t v234 = v30[11];
        uint64_t v235 = (char *)v5 + v234;
        uint64_t v236 = (char *)v6 + v234;
        uint64_t v237 = type metadata accessor for URL();
        uint64_t v1150 = v34;
        if (__swift_getEnumTagSinglePayload((uint64_t)v236, 1, v237))
        {
          uint64_t v238 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v235, v236, *(void *)(*(void *)(v238 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 32))(v235, v236, v237);
          __swift_storeEnumTagSinglePayload((uint64_t)v235, 0, 1, v237);
        }
        *(void *)((char *)v5 + v30[12]) = *(void *)((char *)v6 + v30[12]);
        *(_OWORD *)((char *)v5 + v30[13]) = *(_OWORD *)((char *)v6 + v30[13]);
        *(_OWORD *)((char *)v5 + v30[14]) = *(_OWORD *)((char *)v6 + v30[14]);
        *(void *)((char *)v5 + v30[15]) = *(void *)((char *)v6 + v30[15]);
        *(void *)((char *)v5 + v30[16]) = *(void *)((char *)v6 + v30[16]);
        uint64_t v292 = v30[17];
        uint64_t v293 = (char *)v5 + v292;
        uint64_t v294 = (char *)v6 + v292;
        long long v295 = *((_OWORD *)v294 + 1);
        *(_OWORD *)uint64_t v293 = *(_OWORD *)v294;
        *((_OWORD *)v293 + 1) = v295;
        *((void *)v293 + 4) = *((void *)v294 + 4);
        *(_OWORD *)((char *)v5 + v30[18]) = *(_OWORD *)((char *)v6 + v30[18]);
        uint64_t v296 = v30[19];
        v297 = (_OWORD *)((char *)v5 + v296);
        uint64_t v298 = (_OWORD *)((char *)v6 + v296);
        uint64_t v299 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        uint64_t v1147 = v237;
        uint64_t v1158 = v30;
        if (__swift_getEnumTagSinglePayload((uint64_t)v298, 1, (uint64_t)v299))
        {
          uint64_t v300 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v297, v298, *(void *)(*(void *)(v300 - 8) + 64));
          uint64_t v301 = v1150;
        }
        else
        {
          _OWORD *v297 = *v298;
          uint64_t v341 = v299[5];
          uint64_t v342 = (_OWORD *)((char *)v297 + v341);
          uint64_t v1154 = (char *)v298;
          uint64_t v343 = (_OWORD *)((char *)v298 + v341);
          uint64_t v344 = type metadata accessor for RentalCarReservation(0);
          __dsta = v297;
          uint64_t v1146 = v299;
          if (__swift_getEnumTagSinglePayload((uint64_t)v343, 1, v344))
          {
            uint64_t v345 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v342, v343, *(void *)(*(void *)(v345 - 8) + 64));
          }
          else
          {
            long long v375 = v343[1];
            *uint64_t v342 = *v343;
            v342[1] = v375;
            long long v376 = v343[3];
            v342[2] = v343[2];
            v342[3] = v376;
            long long v377 = v343[5];
            v342[4] = v343[4];
            v342[5] = v377;
            long long v378 = v343[7];
            v342[6] = v343[6];
            v342[7] = v378;
            *((unsigned char *)v342 + 128) = *((unsigned char *)v343 + 128);
            *(_WORD *)((char *)v342 + 129) = *(_WORD *)((char *)v343 + 129);
            *((void *)v342 + 17) = *((void *)v343 + 17);
            long long v379 = v343[10];
            v342[9] = v343[9];
            v342[10] = v379;
            long long v380 = v343[12];
            v342[11] = v343[11];
            v342[12] = v380;
            long long v381 = v343[14];
            v342[13] = v343[13];
            v342[14] = v381;
            v342[15] = v343[15];
            *((void *)v342 + 32) = *((void *)v343 + 32);
            *(_OWORD *)((char *)v342 + 264) = *(_OWORD *)((char *)v343 + 264);
            *(_OWORD *)((char *)v342 + 280) = *(_OWORD *)((char *)v343 + 280);
            *(_OWORD *)((char *)v342 + 296) = *(_OWORD *)((char *)v343 + 296);
            *(_OWORD *)((char *)v342 + 312) = *(_OWORD *)((char *)v343 + 312);
            *(_OWORD *)((char *)v342 + 328) = *(_OWORD *)((char *)v343 + 328);
            *(_OWORD *)((char *)v342 + 344) = *(_OWORD *)((char *)v343 + 344);
            *(_OWORD *)((char *)v342 + 360) = *(_OWORD *)((char *)v343 + 360);
            *((unsigned char *)v342 + 384) = *((unsigned char *)v343 + 384);
            *((void *)v342 + 47) = *((void *)v343 + 47);
            *(_OWORD *)((char *)v342 + 392) = *(_OWORD *)((char *)v343 + 392);
            *(_OWORD *)((char *)v342 + 408) = *(_OWORD *)((char *)v343 + 408);
            uint64_t v382 = *(int *)(v344 + 140);
            uint64_t v383 = (char *)v342 + v382;
            uint64_t v384 = (char *)v343 + v382;
            if (__swift_getEnumTagSinglePayload((uint64_t)v343 + v382, 1, v1150))
            {
              uint64_t v385 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v383, v384, *(void *)(*(void *)(v385 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v383, v384, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v383, 0, 1, v1150);
            }
            uint64_t v394 = *(int *)(v344 + 144);
            uint64_t v395 = (char *)v342 + v394;
            uint64_t v396 = (char *)v343 + v394;
            if (__swift_getEnumTagSinglePayload((uint64_t)v343 + v394, 1, v1150))
            {
              uint64_t v397 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v395, v396, *(void *)(*(void *)(v397 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v395, v396, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v395, 0, 1, v1150);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v342, 0, 1, v344);
            v297 = __dsta;
            uint64_t v299 = v1146;
          }
          uint64_t v430 = v299[6];
          v431 = (_OWORD *)((char *)v297 + v430);
          uint64_t v432 = (_OWORD *)((char *)v298 + v430);
          uint64_t v433 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v432, 1, v433))
          {
            uint64_t v434 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v431, v432, *(void *)(*(void *)(v434 - 8) + 64));
          }
          else
          {
            long long v435 = v432[1];
            _OWORD *v431 = *v432;
            v431[1] = v435;
            long long v436 = v432[3];
            v431[2] = v432[2];
            v431[3] = v436;
            long long v437 = v432[5];
            v431[4] = v432[4];
            v431[5] = v437;
            long long v438 = v432[7];
            v431[6] = v432[6];
            v431[7] = v438;
            *((unsigned char *)v431 + 128) = *((unsigned char *)v432 + 128);
            *(_WORD *)((char *)v431 + 129) = *(_WORD *)((char *)v432 + 129);
            *((void *)v431 + 17) = *((void *)v432 + 17);
            long long v439 = v432[10];
            v431[9] = v432[9];
            v431[10] = v439;
            long long v440 = v432[12];
            v431[11] = v432[11];
            v431[12] = v440;
            *((void *)v431 + 26) = *((void *)v432 + 26);
            *(_OWORD *)((char *)v431 + 216) = *(_OWORD *)((char *)v432 + 216);
            *(_OWORD *)((char *)v431 + 232) = *(_OWORD *)((char *)v432 + 232);
            *(_OWORD *)((char *)v431 + 248) = *(_OWORD *)((char *)v432 + 248);
            *(_OWORD *)((char *)v431 + 264) = *(_OWORD *)((char *)v432 + 264);
            *((unsigned char *)v431 + 296) = *((unsigned char *)v432 + 296);
            uint64_t v441 = *((void *)v432 + 36);
            *((void *)v431 + 35) = *((void *)v432 + 35);
            *((void *)v431 + 36) = v441;
            uint64_t v442 = *(int *)(v433 + 112);
            uint64_t v443 = (char *)v431 + v442;
            uint64_t v444 = (char *)v432 + v442;
            if (__swift_getEnumTagSinglePayload((uint64_t)v432 + v442, 1, v1150))
            {
              uint64_t v445 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v443, v444, *(void *)(*(void *)(v445 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v443, v444, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v443, 0, 1, v1150);
            }
            uint64_t v454 = *(int *)(v433 + 116);
            uint64_t v455 = (char *)v431 + v454;
            v456 = (char *)v432 + v454;
            if (__swift_getEnumTagSinglePayload((uint64_t)v432 + v454, 1, v1150))
            {
              uint64_t v457 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v455, v456, *(void *)(*(void *)(v457 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v455, v456, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v455, 0, 1, v1150);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v431, 0, 1, v433);
            v297 = __dsta;
            uint64_t v299 = v1146;
          }
          uint64_t v494 = v299[7];
          uint64_t v495 = (_OWORD *)((char *)v297 + v494);
          uint64_t v496 = (_OWORD *)((char *)v298 + v494);
          uint64_t v497 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v496, 1, (uint64_t)v497))
          {
            uint64_t v498 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v495, v496, *(void *)(*(void *)(v498 - 8) + 64));
          }
          else
          {
            long long v499 = v496[1];
            *uint64_t v495 = *v496;
            v495[1] = v499;
            long long v500 = v496[3];
            v495[2] = v496[2];
            v495[3] = v500;
            long long v501 = v496[5];
            v495[4] = v496[4];
            v495[5] = v501;
            long long v502 = v496[7];
            v495[6] = v496[6];
            v495[7] = v502;
            *((unsigned char *)v495 + 128) = *((unsigned char *)v496 + 128);
            *(_WORD *)((char *)v495 + 129) = *(_WORD *)((char *)v496 + 129);
            *((void *)v495 + 17) = *((void *)v496 + 17);
            long long v503 = v496[10];
            v495[9] = v496[9];
            v495[10] = v503;
            long long v504 = v496[12];
            v495[11] = v496[11];
            v495[12] = v504;
            long long v505 = v496[14];
            v495[13] = v496[13];
            v495[14] = v505;
            *((void *)v495 + 30) = *((void *)v496 + 30);
            *(_OWORD *)((char *)v495 + 248) = *(_OWORD *)((char *)v496 + 248);
            *(_OWORD *)((char *)v495 + 264) = *(_OWORD *)((char *)v496 + 264);
            *((unsigned char *)v495 + 296) = *((unsigned char *)v496 + 296);
            uint64_t v506 = *((void *)v496 + 36);
            *((void *)v495 + 35) = *((void *)v496 + 35);
            *((void *)v495 + 36) = v506;
            v495[19] = v496[19];
            uint64_t v507 = v497[29];
            uint64_t v508 = (char *)v495 + v507;
            uint64_t v509 = (char *)v496 + v507;
            if (__swift_getEnumTagSinglePayload((uint64_t)v496 + v507, 1, v1147))
            {
              uint64_t v510 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v508, v509, *(void *)(*(void *)(v510 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1147 - 8) + 32))(v508, v509, v1147);
              __swift_storeEnumTagSinglePayload((uint64_t)v508, 0, 1, v1147);
            }
            *(_OWORD *)((char *)v495 + v497[30]) = *(_OWORD *)((char *)v496 + v497[30]);
            uint64_t v519 = v497[31];
            uint64_t v520 = (char *)v495 + v519;
            uint64_t v521 = (char *)v496 + v519;
            if (__swift_getEnumTagSinglePayload((uint64_t)v496 + v519, 1, v1150))
            {
              uint64_t v522 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v520, v521, *(void *)(*(void *)(v522 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v520, v521, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v520, 0, 1, v1150);
            }
            uint64_t v531 = v497[32];
            v532 = (char *)v495 + v531;
            v533 = (char *)v496 + v531;
            if (__swift_getEnumTagSinglePayload((uint64_t)v496 + v531, 1, v1150))
            {
              uint64_t v534 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v532, v533, *(void *)(*(void *)(v534 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v532, v533, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v532, 0, 1, v1150);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v495, 0, 1, (uint64_t)v497);
            v297 = __dsta;
            uint64_t v299 = v1146;
          }
          uint64_t v569 = v299[8];
          v570 = (_OWORD *)((char *)v297 + v569);
          uint64_t v571 = (_OWORD *)((char *)v298 + v569);
          uint64_t v572 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v571, 1, v572))
          {
            uint64_t v573 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v570, v571, *(void *)(*(void *)(v573 - 8) + 64));
          }
          else
          {
            long long v574 = v571[1];
            _OWORD *v570 = *v571;
            v570[1] = v574;
            long long v575 = v571[3];
            v570[2] = v571[2];
            v570[3] = v575;
            long long v576 = v571[5];
            v570[4] = v571[4];
            v570[5] = v576;
            long long v577 = v571[7];
            v570[6] = v571[6];
            v570[7] = v577;
            *((unsigned char *)v570 + 128) = *((unsigned char *)v571 + 128);
            *(_WORD *)((char *)v570 + 129) = *(_WORD *)((char *)v571 + 129);
            *((void *)v570 + 17) = *((void *)v571 + 17);
            long long v578 = v571[10];
            v570[9] = v571[9];
            v570[10] = v578;
            long long v579 = v571[12];
            v570[11] = v571[11];
            v570[12] = v579;
            long long v580 = v571[14];
            v570[13] = v571[13];
            v570[14] = v580;
            long long v581 = v571[16];
            v570[15] = v571[15];
            v570[16] = v581;
            *((unsigned char *)v570 + 280) = *((unsigned char *)v571 + 280);
            *((void *)v570 + 34) = *((void *)v571 + 34);
            v570[18] = v571[18];
            uint64_t v582 = *(int *)(v572 + 108);
            uint64_t v583 = (char *)v570 + v582;
            uint64_t v584 = (char *)v571 + v582;
            if (__swift_getEnumTagSinglePayload((uint64_t)v571 + v582, 1, v1150))
            {
              uint64_t v585 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v583, v584, *(void *)(*(void *)(v585 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v583, v584, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v583, 0, 1, v1150);
            }
            uint64_t v594 = *(int *)(v572 + 112);
            uint64_t v595 = (char *)v570 + v594;
            uint64_t v596 = (char *)v571 + v594;
            if (__swift_getEnumTagSinglePayload((uint64_t)v571 + v594, 1, v1150))
            {
              uint64_t v597 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v595, v596, *(void *)(*(void *)(v597 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v595, v596, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v595, 0, 1, v1150);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v570, 0, 1, v572);
            v297 = __dsta;
            uint64_t v299 = v1146;
          }
          uint64_t v630 = v299[9];
          v631 = (_OWORD *)((char *)v297 + v630);
          v632 = (_OWORD *)((char *)v298 + v630);
          uint64_t v633 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v632, 1, (uint64_t)v633))
          {
            uint64_t v634 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v631, v632, *(void *)(*(void *)(v634 - 8) + 64));
          }
          else
          {
            long long v635 = v632[1];
            _OWORD *v631 = *v632;
            v631[1] = v635;
            long long v636 = v632[3];
            v631[2] = v632[2];
            v631[3] = v636;
            long long v637 = v632[5];
            v631[4] = v632[4];
            v631[5] = v637;
            long long v638 = v632[7];
            v631[6] = v632[6];
            v631[7] = v638;
            *((unsigned char *)v631 + 128) = *((unsigned char *)v632 + 128);
            *(_WORD *)((char *)v631 + 129) = *(_WORD *)((char *)v632 + 129);
            *((void *)v631 + 17) = *((void *)v632 + 17);
            long long v639 = v632[10];
            v631[9] = v632[9];
            v631[10] = v639;
            long long v640 = v632[12];
            v631[11] = v632[11];
            v631[12] = v640;
            long long v641 = v632[14];
            v631[13] = v632[13];
            v631[14] = v641;
            v631[15] = v632[15];
            uint64_t v642 = v633[24];
            uint64_t v643 = (char *)v631 + v642;
            uint64_t v644 = (char *)v632 + v642;
            if (__swift_getEnumTagSinglePayload((uint64_t)v632 + v642, 1, v1150))
            {
              uint64_t v645 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v643, v644, *(void *)(*(void *)(v645 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v643, v644, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v643, 0, 1, v1150);
            }
            uint64_t v654 = v633[25];
            uint64_t v655 = (char *)v631 + v654;
            v656 = (char *)v632 + v654;
            if (__swift_getEnumTagSinglePayload((uint64_t)v632 + v654, 1, v1150))
            {
              uint64_t v657 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v655, v656, *(void *)(*(void *)(v657 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v655, v656, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v655, 0, 1, v1150);
            }
            uint64_t v668 = v633[26];
            uint64_t v669 = (char *)v631 + v668;
            uint64_t v670 = (char *)v632 + v668;
            if (__swift_getEnumTagSinglePayload((uint64_t)v632 + v668, 1, v1147))
            {
              uint64_t v671 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v669, v670, *(void *)(*(void *)(v671 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1147 - 8) + 32))(v669, v670, v1147);
              __swift_storeEnumTagSinglePayload((uint64_t)v669, 0, 1, v1147);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v631, 0, 1, (uint64_t)v633);
            v297 = __dsta;
            uint64_t v299 = v1146;
          }
          uint64_t v702 = v299[10];
          uint64_t v703 = (_OWORD *)((char *)v297 + v702);
          uint64_t v704 = (_OWORD *)((char *)v298 + v702);
          uint64_t v705 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v704, 1, (uint64_t)v705))
          {
            uint64_t v706 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v703, v704, *(void *)(*(void *)(v706 - 8) + 64));
          }
          else
          {
            long long v707 = v704[1];
            *uint64_t v703 = *v704;
            v703[1] = v707;
            long long v708 = v704[3];
            v703[2] = v704[2];
            v703[3] = v708;
            long long v709 = v704[5];
            v703[4] = v704[4];
            v703[5] = v709;
            long long v710 = v704[7];
            v703[6] = v704[6];
            v703[7] = v710;
            *((unsigned char *)v703 + 128) = *((unsigned char *)v704 + 128);
            *(_WORD *)((char *)v703 + 129) = *(_WORD *)((char *)v704 + 129);
            *((void *)v703 + 17) = *((void *)v704 + 17);
            long long v711 = v704[10];
            v703[9] = v704[9];
            v703[10] = v711;
            long long v712 = v704[12];
            v703[11] = v704[11];
            v703[12] = v712;
            v703[13] = v704[13];
            uint64_t v713 = v705[22];
            uint64_t v714 = (char *)v703 + v713;
            uint64_t v715 = (char *)v704 + v713;
            if (__swift_getEnumTagSinglePayload((uint64_t)v704 + v713, 1, v1150))
            {
              uint64_t v716 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v714, v715, *(void *)(*(void *)(v716 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v714, v715, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v714, 0, 1, v1150);
            }
            uint64_t v725 = v705[23];
            uint64_t v726 = (char *)v703 + v725;
            uint64_t v727 = (char *)v704 + v725;
            if (__swift_getEnumTagSinglePayload((uint64_t)v704 + v725, 1, v1150))
            {
              uint64_t v728 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v726, v727, *(void *)(*(void *)(v728 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v726, v727, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v726, 0, 1, v1150);
            }
            uint64_t v745 = v705[24];
            uint64_t v746 = (char *)v703 + v745;
            uint64_t v747 = (char *)v704 + v745;
            *(void *)uint64_t v746 = *(void *)v747;
            v746[8] = v747[8];
            uint64_t v748 = v705[25];
            uint64_t v749 = (char *)v703 + v748;
            uint64_t v750 = (char *)v704 + v748;
            if (__swift_getEnumTagSinglePayload((uint64_t)v704 + v748, 1, v1147))
            {
              uint64_t v751 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v749, v750, *(void *)(*(void *)(v751 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1147 - 8) + 32))(v749, v750, v1147);
              __swift_storeEnumTagSinglePayload((uint64_t)v749, 0, 1, v1147);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v703, 0, 1, (uint64_t)v705);
            v297 = __dsta;
            uint64_t v299 = v1146;
          }
          uint64_t v778 = v299[11];
          uint64_t v779 = (_OWORD *)((char *)v297 + v778);
          uint64_t v780 = (_OWORD *)((char *)v298 + v778);
          uint64_t v781 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v780, 1, (uint64_t)v781))
          {
            uint64_t v782 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v779, v780, *(void *)(*(void *)(v782 - 8) + 64));
            uint64_t v301 = v1150;
          }
          else
          {
            long long v783 = v780[1];
            *uint64_t v779 = *v780;
            v779[1] = v783;
            long long v784 = v780[3];
            v779[2] = v780[2];
            v779[3] = v784;
            long long v785 = v780[5];
            v779[4] = v780[4];
            v779[5] = v785;
            *((unsigned char *)v779 + 96) = *((unsigned char *)v780 + 96);
            *(_OWORD *)((char *)v779 + 104) = *(_OWORD *)((char *)v780 + 104);
            uint64_t v786 = v781[13];
            uint64_t v787 = (char *)v779 + v786;
            uint64_t v788 = (char *)v780 + v786;
            if (__swift_getEnumTagSinglePayload((uint64_t)v780 + v786, 1, v1147))
            {
              uint64_t v789 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v787, v788, *(void *)(*(void *)(v789 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1147 - 8) + 32))(v787, v788, v1147);
              __swift_storeEnumTagSinglePayload((uint64_t)v787, 0, 1, v1147);
            }
            uint64_t v798 = v781[14];
            uint64_t v799 = (char *)v779 + v798;
            uint64_t v800 = (char *)v780 + v798;
            if (__swift_getEnumTagSinglePayload((uint64_t)v780 + v798, 1, v1147))
            {
              uint64_t v801 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v799, v800, *(void *)(*(void *)(v801 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1147 - 8) + 32))(v799, v800, v1147);
              __swift_storeEnumTagSinglePayload((uint64_t)v799, 0, 1, v1147);
            }
            *(_OWORD *)((char *)v779 + v781[15]) = *(_OWORD *)((char *)v780 + v781[15]);
            *(_OWORD *)((char *)v779 + v781[16]) = *(_OWORD *)((char *)v780 + v781[16]);
            *(_OWORD *)((char *)v779 + v781[17]) = *(_OWORD *)((char *)v780 + v781[17]);
            uint64_t v816 = v781[18];
            uint64_t v1133 = (char *)v780 + v816;
            uint64_t v1136 = (char *)v779 + v816;
            uint64_t v817 = type metadata accessor for DateComponents();
            uint64_t v818 = *(void (**)(char *, char *, uint64_t))(*(void *)(v817 - 8) + 32);
            v818(v1136, v1133, v817);
            v818((char *)v779 + v781[19], (char *)v780 + v781[19], v817);
            *(_OWORD *)((char *)v779 + v781[20]) = *(_OWORD *)((char *)v780 + v781[20]);
            *(_OWORD *)((char *)v779 + v781[21]) = *(_OWORD *)((char *)v780 + v781[21]);
            *(_OWORD *)((char *)v779 + v781[22]) = *(_OWORD *)((char *)v780 + v781[22]);
            *(_OWORD *)((char *)v779 + v781[23]) = *(_OWORD *)((char *)v780 + v781[23]);
            *(_OWORD *)((char *)v779 + v781[24]) = *(_OWORD *)((char *)v780 + v781[24]);
            *(_OWORD *)((char *)v779 + v781[25]) = *(_OWORD *)((char *)v780 + v781[25]);
            *(_OWORD *)((char *)v779 + v781[26]) = *(_OWORD *)((char *)v780 + v781[26]);
            *(_OWORD *)((char *)v779 + v781[27]) = *(_OWORD *)((char *)v780 + v781[27]);
            *(_OWORD *)((char *)v779 + v781[28]) = *(_OWORD *)((char *)v780 + v781[28]);
            *(_OWORD *)((char *)v779 + v781[29]) = *(_OWORD *)((char *)v780 + v781[29]);
            *(_OWORD *)((char *)v779 + v781[30]) = *(_OWORD *)((char *)v780 + v781[30]);
            *(_OWORD *)((char *)v779 + v781[31]) = *(_OWORD *)((char *)v780 + v781[31]);
            *(_OWORD *)((char *)v779 + v781[32]) = *(_OWORD *)((char *)v780 + v781[32]);
            *(void *)((char *)v779 + v781[33]) = *(void *)((char *)v780 + v781[33]);
            *(void *)((char *)v779 + v781[34]) = *(void *)((char *)v780 + v781[34]);
            *(_OWORD *)((char *)v779 + v781[35]) = *(_OWORD *)((char *)v780 + v781[35]);
            *(_OWORD *)((char *)v779 + v781[36]) = *(_OWORD *)((char *)v780 + v781[36]);
            *(_OWORD *)((char *)v779 + v781[37]) = *(_OWORD *)((char *)v780 + v781[37]);
            uint64_t v819 = v781[38];
            uint64_t v820 = (char *)v779 + v819;
            uint64_t v821 = (char *)v780 + v819;
            uint64_t v301 = v1150;
            if (__swift_getEnumTagSinglePayload((uint64_t)v780 + v819, 1, v1150))
            {
              uint64_t v822 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v820, v821, *(void *)(*(void *)(v822 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v820, v821, v1150);
              __swift_storeEnumTagSinglePayload((uint64_t)v820, 0, 1, v1150);
            }
            *(_OWORD *)((char *)v779 + v781[39]) = *(_OWORD *)((char *)v780 + v781[39]);
            *(_OWORD *)((char *)v779 + v781[40]) = *(_OWORD *)((char *)v780 + v781[40]);
            uint64_t v860 = v781[41];
            v861 = (char *)v779 + v860;
            uint64_t v862 = (char *)v780 + v860;
            *(void *)v861 = *(void *)v862;
            v861[8] = v862[8];
            *(_OWORD *)((char *)v779 + v781[42]) = *(_OWORD *)((char *)v780 + v781[42]);
            uint64_t v863 = v781[43];
            uint64_t v864 = (char *)v779 + v863;
            v865 = (char *)v780 + v863;
            *(_OWORD *)uint64_t v864 = *(_OWORD *)v865;
            *(void *)(v864 + 13) = *(void *)(v865 + 13);
            *(_OWORD *)((char *)v779 + v781[44]) = *(_OWORD *)((char *)v780 + v781[44]);
            *(_OWORD *)((char *)v779 + v781[45]) = *(_OWORD *)((char *)v780 + v781[45]);
            *(_OWORD *)((char *)v779 + v781[46]) = *(_OWORD *)((char *)v780 + v781[46]);
            *(_OWORD *)((char *)v779 + v781[47]) = *(_OWORD *)((char *)v780 + v781[47]);
            __swift_storeEnumTagSinglePayload((uint64_t)v779, 0, 1, (uint64_t)v781);
            v297 = __dsta;
            uint64_t v299 = v1146;
          }
          uint64_t v866 = v299[12];
          uint64_t v867 = (_OWORD *)((char *)v297 + v866);
          uint64_t v868 = &v1154[v866];
          uint64_t v869 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v868, 1, (uint64_t)v869))
          {
            uint64_t v870 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v867, v868, *(void *)(*(void *)(v870 - 8) + 64));
          }
          else
          {
            long long v871 = *((_OWORD *)v868 + 1);
            _OWORD *v867 = *(_OWORD *)v868;
            v867[1] = v871;
            long long v872 = *((_OWORD *)v868 + 3);
            v867[2] = *((_OWORD *)v868 + 2);
            v867[3] = v872;
            long long v873 = *((_OWORD *)v868 + 5);
            v867[4] = *((_OWORD *)v868 + 4);
            v867[5] = v873;
            *((unsigned char *)v867 + 96) = v868[96];
            *(_OWORD *)((char *)v867 + 104) = *(_OWORD *)(v868 + 104);
            *(_OWORD *)((char *)v867 + 120) = *(_OWORD *)(v868 + 120);
            uint64_t v874 = v869[14];
            uint64_t v1137 = (char *)v867 + v874;
            uint64_t v875 = &v868[v874];
            uint64_t v876 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v875, 1, v876))
            {
              uint64_t v877 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1137, v875, *(void *)(*(void *)(v877 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v876 - 8) + 32))(v1137, v875, v876);
              __swift_storeEnumTagSinglePayload((uint64_t)v1137, 0, 1, v876);
            }
            uint64_t v885 = v869[15];
            uint64_t v1138 = (char *)v867 + v885;
            uint64_t v886 = &v868[v885];
            if (__swift_getEnumTagSinglePayload((uint64_t)&v868[v885], 1, v876))
            {
              uint64_t v887 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1138, v886, *(void *)(*(void *)(v887 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v876 - 8) + 32))(v1138, v886, v876);
              __swift_storeEnumTagSinglePayload((uint64_t)v1138, 0, 1, v876);
            }
            uint64_t v299 = v1146;
            *(_OWORD *)((char *)v867 + v869[16]) = *(_OWORD *)&v868[v869[16]];
            *(_OWORD *)((char *)v867 + v869[17]) = *(_OWORD *)&v868[v869[17]];
            *(_OWORD *)((char *)v867 + v869[18]) = *(_OWORD *)&v868[v869[18]];
            *(_OWORD *)((char *)v867 + v869[19]) = *(_OWORD *)&v868[v869[19]];
            *(_OWORD *)((char *)v867 + v869[20]) = *(_OWORD *)&v868[v869[20]];
            *(void *)((char *)v867 + v869[21]) = *(void *)&v868[v869[21]];
            *(void *)((char *)v867 + v869[22]) = *(void *)&v868[v869[22]];
            uint64_t v932 = v869[23];
            uint64_t v933 = (char *)v867 + v932;
            uint64_t v934 = &v868[v932];
            v933[8] = v934[8];
            *(void *)uint64_t v933 = *(void *)v934;
            uint64_t v935 = v869[24];
            uint64_t v936 = (char *)v867 + v935;
            uint64_t v937 = &v868[v935];
            v936[8] = v937[8];
            *(void *)uint64_t v936 = *(void *)v937;
            *(_OWORD *)((char *)v867 + v869[25]) = *(_OWORD *)&v868[v869[25]];
            *(_OWORD *)((char *)v867 + v869[26]) = *(_OWORD *)&v868[v869[26]];
            *(_OWORD *)((char *)v867 + v869[27]) = *(_OWORD *)&v868[v869[27]];
            *(_OWORD *)((char *)v867 + v869[28]) = *(_OWORD *)&v868[v869[28]];
            uint64_t v938 = v869[29];
            uint64_t v939 = (char *)v867 + v938;
            uint64_t v940 = &v868[v938];
            *(void *)uint64_t v939 = *(void *)v940;
            v939[8] = v940[8];
            __swift_storeEnumTagSinglePayload((uint64_t)v867, 0, 1, (uint64_t)v869);
            v297 = __dsta;
          }
          uint64_t v941 = v299[13];
          uint64_t v942 = (_OWORD *)((char *)v297 + v941);
          uint64_t v943 = &v1154[v941];
          uint64_t v944 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v943, 1, (uint64_t)v944))
          {
            uint64_t v945 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v942, v943, *(void *)(*(void *)(v945 - 8) + 64));
          }
          else
          {
            long long v946 = *((_OWORD *)v943 + 1);
            *uint64_t v942 = *(_OWORD *)v943;
            v942[1] = v946;
            long long v947 = *((_OWORD *)v943 + 3);
            v942[2] = *((_OWORD *)v943 + 2);
            v942[3] = v947;
            long long v948 = *((_OWORD *)v943 + 5);
            v942[4] = *((_OWORD *)v943 + 4);
            v942[5] = v948;
            *((unsigned char *)v942 + 96) = v943[96];
            *(_OWORD *)((char *)v942 + 104) = *(_OWORD *)(v943 + 104);
            *(_OWORD *)((char *)v942 + 120) = *(_OWORD *)(v943 + 120);
            uint64_t v949 = v944[14];
            v950 = (char *)v942 + v949;
            uint64_t v951 = &v943[v949];
            uint64_t v952 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v951, 1, v952))
            {
              uint64_t v953 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v950, v951, *(void *)(*(void *)(v953 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v952 - 8) + 32))(v950, v951, v952);
              __swift_storeEnumTagSinglePayload((uint64_t)v950, 0, 1, v952);
            }
            uint64_t v301 = v1150;
            *(_OWORD *)((char *)v942 + v944[15]) = *(_OWORD *)&v943[v944[15]];
            *(_OWORD *)((char *)v942 + v944[16]) = *(_OWORD *)&v943[v944[16]];
            *(_OWORD *)((char *)v942 + v944[17]) = *(_OWORD *)&v943[v944[17]];
            *(_OWORD *)((char *)v942 + v944[18]) = *(_OWORD *)&v943[v944[18]];
            *(_OWORD *)((char *)v942 + v944[19]) = *(_OWORD *)&v943[v944[19]];
            *(void *)((char *)v942 + v944[20]) = *(void *)&v943[v944[20]];
            *(_OWORD *)((char *)v942 + v944[21]) = *(_OWORD *)&v943[v944[21]];
            *(_OWORD *)((char *)v942 + v944[22]) = *(_OWORD *)&v943[v944[22]];
            *(_OWORD *)((char *)v942 + v944[23]) = *(_OWORD *)&v943[v944[23]];
            __swift_storeEnumTagSinglePayload((uint64_t)v942, 0, 1, (uint64_t)v944);
            v297 = __dsta;
            uint64_t v299 = v1146;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v297, 0, 1, (uint64_t)v299);
          uint64_t v30 = v1158;
        }
        uint64_t v1072 = v30[20];
        uint64_t v1073 = (_OWORD *)((char *)v5 + v1072);
        uint64_t v1074 = (_OWORD *)((char *)v6 + v1072);
        uint64_t v1075 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1074, 1, (uint64_t)v1075))
        {
          uint64_t v1076 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v1073, v1074, *(void *)(*(void *)(v1076 - 8) + 64));
        }
        else
        {
          long long v1077 = v1074[1];
          _OWORD *v1073 = *v1074;
          v1073[1] = v1077;
          long long v1078 = v1074[3];
          v1073[2] = v1074[2];
          v1073[3] = v1078;
          long long v1079 = v1074[5];
          v1073[4] = v1074[4];
          v1073[5] = v1079;
          uint64_t v1080 = v1075[10];
          uint64_t v1081 = (char *)v1073 + v1080;
          uint64_t v1082 = (char *)v1074 + v1080;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1074 + v1080, 1, v301))
          {
            uint64_t v1083 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1081, v1082, *(void *)(*(void *)(v1083 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v301 - 8) + 32))(v1081, v1082, v301);
            __swift_storeEnumTagSinglePayload((uint64_t)v1081, 0, 1, v301);
          }
          uint64_t v1084 = v1075[11];
          uint64_t v1085 = (char *)v1073 + v1084;
          uint64_t v1086 = (char *)v1074 + v1084;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1074 + v1084, 1, v301))
          {
            uint64_t v1087 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1085, v1086, *(void *)(*(void *)(v1087 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v301 - 8) + 32))(v1085, v1086, v301);
            __swift_storeEnumTagSinglePayload((uint64_t)v1085, 0, 1, v301);
          }
          *(_OWORD *)((char *)v1073 + v1075[12]) = *(_OWORD *)((char *)v1074 + v1075[12]);
          *(_OWORD *)((char *)v1073 + v1075[13]) = *(_OWORD *)((char *)v1074 + v1075[13]);
          *(_OWORD *)((char *)v1073 + v1075[14]) = *(_OWORD *)((char *)v1074 + v1075[14]);
          uint64_t v1088 = v1075[15];
          uint64_t v1089 = (char *)v1073 + v1088;
          uint64_t v1090 = (char *)v1074 + v1088;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1074 + v1088, 1, v301))
          {
            uint64_t v1091 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1089, v1090, *(void *)(*(void *)(v1091 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v301 - 8) + 32))(v1089, v1090, v301);
            __swift_storeEnumTagSinglePayload((uint64_t)v1089, 0, 1, v301);
          }
          *(_OWORD *)((char *)v1073 + v1075[16]) = *(_OWORD *)((char *)v1074 + v1075[16]);
          *(_OWORD *)((char *)v1073 + v1075[17]) = *(_OWORD *)((char *)v1074 + v1075[17]);
          *(_OWORD *)((char *)v1073 + v1075[18]) = *(_OWORD *)((char *)v1074 + v1075[18]);
          *(_OWORD *)((char *)v1073 + v1075[19]) = *(_OWORD *)((char *)v1074 + v1075[19]);
          *(_OWORD *)((char *)v1073 + v1075[20]) = *(_OWORD *)((char *)v1074 + v1075[20]);
          *(_OWORD *)((char *)v1073 + v1075[21]) = *(_OWORD *)((char *)v1074 + v1075[21]);
          *(_OWORD *)((char *)v1073 + v1075[22]) = *(_OWORD *)((char *)v1074 + v1075[22]);
          *(_OWORD *)((char *)v1073 + v1075[23]) = *(_OWORD *)((char *)v1074 + v1075[23]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1073, 0, 1, (uint64_t)v1075);
        }
        uint64_t v1092 = v1158[21];
        uint64_t v1093 = (_OWORD *)((char *)v5 + v1092);
        uint64_t v1094 = (_OWORD *)((char *)v6 + v1092);
        uint64_t v1095 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1094, 1, (uint64_t)v1095))
        {
          uint64_t v1096 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v1093, v1094, *(void *)(*(void *)(v1096 - 8) + 64));
        }
        else
        {
          long long v1097 = v1094[1];
          *uint64_t v1093 = *v1094;
          v1093[1] = v1097;
          long long v1098 = v1094[3];
          v1093[2] = v1094[2];
          v1093[3] = v1098;
          long long v1099 = v1094[5];
          v1093[4] = v1094[4];
          v1093[5] = v1099;
          uint64_t v1100 = v1095[11];
          uint64_t v1101 = (char *)v1093 + v1100;
          uint64_t v1102 = (char *)v1094 + v1100;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1094 + v1100, 1, v301))
          {
            uint64_t v1103 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1101, v1102, *(void *)(*(void *)(v1103 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v301 - 8) + 32))(v1101, v1102, v301);
            __swift_storeEnumTagSinglePayload((uint64_t)v1101, 0, 1, v301);
          }
          *(_OWORD *)((char *)v1093 + v1095[12]) = *(_OWORD *)((char *)v1094 + v1095[12]);
          *(void *)((char *)v1093 + v1095[13]) = *(void *)((char *)v1094 + v1095[13]);
          uint64_t v1104 = v1095[14];
          uint64_t v1105 = (char *)v1093 + v1104;
          uint64_t v1106 = (char *)v1094 + v1104;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1094 + v1104, 1, v301))
          {
            uint64_t v1107 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1105, v1106, *(void *)(*(void *)(v1107 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v301 - 8) + 32))(v1105, v1106, v301);
            __swift_storeEnumTagSinglePayload((uint64_t)v1105, 0, 1, v301);
          }
          *(void *)((char *)v1093 + v1095[15]) = *(void *)((char *)v1094 + v1095[15]);
          *(void *)((char *)v1093 + v1095[16]) = *(void *)((char *)v1094 + v1095[16]);
          *(_OWORD *)((char *)v1093 + v1095[17]) = *(_OWORD *)((char *)v1094 + v1095[17]);
          *(void *)((char *)v1093 + v1095[18]) = *(void *)((char *)v1094 + v1095[18]);
          *(void *)((char *)v1093 + v1095[19]) = *(void *)((char *)v1094 + v1095[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1093, 0, 1, (uint64_t)v1095);
        }
        uint64_t v1108 = v1158;
        uint64_t v1109 = v1158[22];
        uint64_t v1110 = (_OWORD *)((char *)v5 + v1109);
        uint64_t v1111 = (_OWORD *)((char *)v6 + v1109);
        uint64_t v1112 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1111, 1, (uint64_t)v1112))
        {
          uint64_t v1113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v1110, v1111, *(void *)(*(void *)(v1113 - 8) + 64));
        }
        else
        {
          long long v1114 = v1111[1];
          *uint64_t v1110 = *v1111;
          v1110[1] = v1114;
          long long v1115 = v1111[3];
          v1110[2] = v1111[2];
          v1110[3] = v1115;
          uint64_t v1116 = v1112[8];
          uint64_t v1117 = (char *)v1110 + v1116;
          uint64_t v1118 = (char *)v1111 + v1116;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1111 + v1116, 1, v1147))
          {
            uint64_t v1119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v1117, v1118, *(void *)(*(void *)(v1119 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1147 - 8) + 32))(v1117, v1118, v1147);
            __swift_storeEnumTagSinglePayload((uint64_t)v1117, 0, 1, v1147);
          }
          *(_OWORD *)((char *)v1110 + v1112[9]) = *(_OWORD *)((char *)v1111 + v1112[9]);
          *(_OWORD *)((char *)v1110 + v1112[10]) = *(_OWORD *)((char *)v1111 + v1112[10]);
          *(_OWORD *)((char *)v1110 + v1112[11]) = *(_OWORD *)((char *)v1111 + v1112[11]);
          uint64_t v1120 = v1112[12];
          uint64_t v1121 = (char *)v1110 + v1120;
          uint64_t v1122 = (char *)v1111 + v1120;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1111 + v1120, 1, v1150))
          {
            uint64_t v1123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1121, v1122, *(void *)(*(void *)(v1123 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v1121, v1122, v1150);
            __swift_storeEnumTagSinglePayload((uint64_t)v1121, 0, 1, v1150);
          }
          uint64_t v1124 = v1112[13];
          v1155 = (char *)v1110 + v1124;
          uint64_t v1125 = (char *)v1111 + v1124;
          uint64_t v1108 = v1158;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1111 + v1124, 1, v1150))
          {
            uint64_t v1126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1155, v1125, *(void *)(*(void *)(v1126 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1150 - 8) + 32))(v1155, v1125, v1150);
            __swift_storeEnumTagSinglePayload((uint64_t)v1155, 0, 1, v1150);
          }
          uint64_t v1127 = v1112[14];
          uint64_t v1128 = (char *)v1110 + v1127;
          uint64_t v1129 = (char *)v1111 + v1127;
          *(void *)uint64_t v1128 = *(void *)v1129;
          v1128[8] = v1129[8];
          *(_OWORD *)((char *)v1110 + v1112[15]) = *(_OWORD *)((char *)v1111 + v1112[15]);
          *(_OWORD *)((char *)v1110 + v1112[16]) = *(_OWORD *)((char *)v1111 + v1112[16]);
          *(_OWORD *)((char *)v1110 + v1112[17]) = *(_OWORD *)((char *)v1111 + v1112[17]);
          *(_OWORD *)((char *)v1110 + v1112[18]) = *(_OWORD *)((char *)v1111 + v1112[18]);
          *(_OWORD *)((char *)v1110 + v1112[19]) = *(_OWORD *)((char *)v1111 + v1112[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1110, 0, 1, (uint64_t)v1112);
        }
        memcpy((char *)v5 + v1108[23], (char *)v6 + v1108[23], 0x90uLL);
        goto LABEL_524;
      case 2u:
        long long v36 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v36;
        v5[2] = v6[2];
        uint64_t v37 = (int *)type metadata accessor for CalendarEvent(0);
        uint64_t v38 = v37[7];
        uint64_t v39 = (char *)v5 + v38;
        uint64_t v40 = (char *)v6 + v38;
        uint64_t v41 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
        {
          uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
          __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
        }
        uint64_t v239 = v37[8];
        uint64_t v240 = (char *)v5 + v239;
        uint64_t v241 = (char *)v6 + v239;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v239, 1, v41))
        {
          uint64_t v242 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v240, v241, *(void *)(*(void *)(v242 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v240, v241, v41);
          __swift_storeEnumTagSinglePayload((uint64_t)v240, 0, 1, v41);
        }
        *(_OWORD *)((char *)v5 + v37[9]) = *(_OWORD *)((char *)v6 + v37[9]);
        *(void *)((char *)v5 + v37[10]) = *(void *)((char *)v6 + v37[10]);
        *(void *)((char *)v5 + v37[11]) = *(void *)((char *)v6 + v37[11]);
        *(_OWORD *)((char *)v5 + v37[12]) = *(_OWORD *)((char *)v6 + v37[12]);
        uint64_t v302 = v37[13];
        uint64_t v303 = (char *)v5 + v302;
        int v304 = (char *)v6 + v302;
        long long v305 = *((_OWORD *)v304 + 1);
        *(_OWORD *)uint64_t v303 = *(_OWORD *)v304;
        *((_OWORD *)v303 + 1) = v305;
        *((void *)v303 + 4) = *((void *)v304 + 4);
        goto LABEL_524;
      case 3u:
        long long v43 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v43;
        v5[2] = v6[2];
        *((void *)v5 + 6) = *((void *)v6 + 6);
        *(_OWORD *)((char *)v5 + 56) = *(_OWORD *)((char *)v6 + 56);
        *(_OWORD *)((char *)v5 + 72) = *(_OWORD *)((char *)v6 + 72);
        uint64_t v44 = (int *)type metadata accessor for Photo(0);
        uint64_t v45 = v44[11];
        uint64_t v46 = (char *)v5 + v45;
        uint64_t v47 = (char *)v6 + v45;
        uint64_t v48 = type metadata accessor for Date();
        uint64_t v1153 = (void *)v48;
        if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48))
        {
          uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
          __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v48);
        }
        *(void *)((char *)v5 + v44[12]) = *(void *)((char *)v6 + v44[12]);
        *(void *)((char *)v5 + v44[13]) = *(void *)((char *)v6 + v44[13]);
        *(void *)((char *)v5 + v44[14]) = *(void *)((char *)v6 + v44[14]);
        *(void *)((char *)v5 + v44[15]) = *(void *)((char *)v6 + v44[15]);
        *(_OWORD *)((char *)v5 + v44[16]) = *(_OWORD *)((char *)v6 + v44[16]);
        uint64_t v243 = v44[17];
        uint64_t v244 = (_OWORD *)((char *)v5 + v243);
        uint64_t v245 = (_OWORD *)((char *)v6 + v243);
        uint64_t v246 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        uint64_t v1157 = v44;
        if (__swift_getEnumTagSinglePayload((uint64_t)v245, 1, (uint64_t)v246))
        {
          uint64_t v247 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v244, v245, *(void *)(*(void *)(v247 - 8) + 64));
        }
        else
        {
          *uint64_t v244 = *v245;
          uint64_t v306 = v246[5];
          uint64_t v307 = (_OWORD *)((char *)v244 + v306);
          v308 = (_OWORD *)((char *)v245 + v306);
          uint64_t v309 = type metadata accessor for RentalCarReservation(0);
          uint64_t v1148 = v244;
          v1151 = v246;
          uint64_t v1145 = v245;
          if (__swift_getEnumTagSinglePayload((uint64_t)v308, 1, v309))
          {
            uint64_t v310 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v307, v308, *(void *)(*(void *)(v310 - 8) + 64));
          }
          else
          {
            long long v364 = v308[1];
            _OWORD *v307 = *v308;
            v307[1] = v364;
            long long v365 = v308[3];
            v307[2] = v308[2];
            v307[3] = v365;
            long long v366 = v308[5];
            v307[4] = v308[4];
            v307[5] = v366;
            long long v367 = v308[7];
            v307[6] = v308[6];
            v307[7] = v367;
            *((unsigned char *)v307 + 128) = *((unsigned char *)v308 + 128);
            *(_WORD *)((char *)v307 + 129) = *(_WORD *)((char *)v308 + 129);
            *((void *)v307 + 17) = *((void *)v308 + 17);
            long long v368 = v308[10];
            v307[9] = v308[9];
            v307[10] = v368;
            long long v369 = v308[12];
            v307[11] = v308[11];
            v307[12] = v369;
            long long v370 = v308[14];
            v307[13] = v308[13];
            v307[14] = v370;
            v307[15] = v308[15];
            *((void *)v307 + 32) = *((void *)v308 + 32);
            *(_OWORD *)((char *)v307 + 264) = *(_OWORD *)((char *)v308 + 264);
            *(_OWORD *)((char *)v307 + 280) = *(_OWORD *)((char *)v308 + 280);
            *(_OWORD *)((char *)v307 + 296) = *(_OWORD *)((char *)v308 + 296);
            *(_OWORD *)((char *)v307 + 312) = *(_OWORD *)((char *)v308 + 312);
            *(_OWORD *)((char *)v307 + 328) = *(_OWORD *)((char *)v308 + 328);
            *(_OWORD *)((char *)v307 + 344) = *(_OWORD *)((char *)v308 + 344);
            *(_OWORD *)((char *)v307 + 360) = *(_OWORD *)((char *)v308 + 360);
            *((unsigned char *)v307 + 384) = *((unsigned char *)v308 + 384);
            *((void *)v307 + 47) = *((void *)v308 + 47);
            *(_OWORD *)((char *)v307 + 392) = *(_OWORD *)((char *)v308 + 392);
            *(_OWORD *)((char *)v307 + 408) = *(_OWORD *)((char *)v308 + 408);
            uint64_t v371 = *(int *)(v309 + 140);
            uint64_t v372 = (char *)v307 + v371;
            uint64_t v373 = (char *)v308 + v371;
            if (__swift_getEnumTagSinglePayload((uint64_t)v308 + v371, 1, (uint64_t)v1153))
            {
              uint64_t v374 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v372, v373, *(void *)(*(void *)(v374 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v372, v373, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, (uint64_t)v1153);
            }
            uint64_t v390 = *(int *)(v309 + 144);
            uint64_t v391 = (char *)v307 + v390;
            uint64_t v392 = (char *)v308 + v390;
            if (__swift_getEnumTagSinglePayload((uint64_t)v308 + v390, 1, (uint64_t)v1153))
            {
              uint64_t v393 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v391, v392, *(void *)(*(void *)(v393 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v391, v392, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v391, 0, 1, (uint64_t)v1153);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v307, 0, 1, v309);
            uint64_t v246 = v1151;
            uint64_t v245 = v1145;
          }
          uint64_t v414 = v246[6];
          uint64_t v415 = (_OWORD *)((char *)v244 + v414);
          uint64_t v416 = (_OWORD *)((char *)v245 + v414);
          uint64_t v417 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v416, 1, v417))
          {
            uint64_t v418 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v415, v416, *(void *)(*(void *)(v418 - 8) + 64));
          }
          else
          {
            long long v419 = v416[1];
            _OWORD *v415 = *v416;
            v415[1] = v419;
            long long v420 = v416[3];
            v415[2] = v416[2];
            v415[3] = v420;
            long long v421 = v416[5];
            v415[4] = v416[4];
            v415[5] = v421;
            long long v422 = v416[7];
            v415[6] = v416[6];
            v415[7] = v422;
            *((unsigned char *)v415 + 128) = *((unsigned char *)v416 + 128);
            *(_WORD *)((char *)v415 + 129) = *(_WORD *)((char *)v416 + 129);
            *((void *)v415 + 17) = *((void *)v416 + 17);
            long long v423 = v416[10];
            v415[9] = v416[9];
            v415[10] = v423;
            long long v424 = v416[12];
            v415[11] = v416[11];
            v415[12] = v424;
            *((void *)v415 + 26) = *((void *)v416 + 26);
            *(_OWORD *)((char *)v415 + 216) = *(_OWORD *)((char *)v416 + 216);
            *(_OWORD *)((char *)v415 + 232) = *(_OWORD *)((char *)v416 + 232);
            *(_OWORD *)((char *)v415 + 248) = *(_OWORD *)((char *)v416 + 248);
            *(_OWORD *)((char *)v415 + 264) = *(_OWORD *)((char *)v416 + 264);
            *((unsigned char *)v415 + 296) = *((unsigned char *)v416 + 296);
            uint64_t v425 = *((void *)v416 + 36);
            *((void *)v415 + 35) = *((void *)v416 + 35);
            *((void *)v415 + 36) = v425;
            uint64_t v426 = *(int *)(v417 + 112);
            v427 = (char *)v415 + v426;
            uint64_t v428 = (char *)v416 + v426;
            if (__swift_getEnumTagSinglePayload((uint64_t)v416 + v426, 1, (uint64_t)v1153))
            {
              uint64_t v429 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v427, v428, *(void *)(*(void *)(v429 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v427, v428, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v427, 0, 1, (uint64_t)v1153);
            }
            uint64_t v450 = *(int *)(v417 + 116);
            uint64_t v451 = (char *)v415 + v450;
            uint64_t v452 = (char *)v416 + v450;
            if (__swift_getEnumTagSinglePayload((uint64_t)v416 + v450, 1, (uint64_t)v1153))
            {
              uint64_t v453 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v451, v452, *(void *)(*(void *)(v453 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v451, v452, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v451, 0, 1, (uint64_t)v1153);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v415, 0, 1, v417);
            uint64_t v246 = v1151;
            uint64_t v245 = v1145;
          }
          uint64_t v476 = v246[7];
          uint64_t v477 = (_OWORD *)((char *)v244 + v476);
          uint64_t v478 = (_OWORD *)((char *)v245 + v476);
          uint64_t v479 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v478, 1, (uint64_t)v479))
          {
            uint64_t v480 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v477, v478, *(void *)(*(void *)(v480 - 8) + 64));
          }
          else
          {
            long long v481 = v478[1];
            *uint64_t v477 = *v478;
            v477[1] = v481;
            long long v482 = v478[3];
            v477[2] = v478[2];
            v477[3] = v482;
            long long v483 = v478[5];
            v477[4] = v478[4];
            v477[5] = v483;
            long long v484 = v478[7];
            v477[6] = v478[6];
            v477[7] = v484;
            *((unsigned char *)v477 + 128) = *((unsigned char *)v478 + 128);
            *(_WORD *)((char *)v477 + 129) = *(_WORD *)((char *)v478 + 129);
            *((void *)v477 + 17) = *((void *)v478 + 17);
            long long v485 = v478[10];
            v477[9] = v478[9];
            v477[10] = v485;
            long long v486 = v478[12];
            v477[11] = v478[11];
            v477[12] = v486;
            long long v487 = v478[14];
            v477[13] = v478[13];
            v477[14] = v487;
            *((void *)v477 + 30) = *((void *)v478 + 30);
            *(_OWORD *)((char *)v477 + 248) = *(_OWORD *)((char *)v478 + 248);
            *(_OWORD *)((char *)v477 + 264) = *(_OWORD *)((char *)v478 + 264);
            *((unsigned char *)v477 + 296) = *((unsigned char *)v478 + 296);
            uint64_t v488 = *((void *)v478 + 36);
            *((void *)v477 + 35) = *((void *)v478 + 35);
            *((void *)v477 + 36) = v488;
            v477[19] = v478[19];
            uint64_t v489 = v479[29];
            uint64_t v490 = (char *)v477 + v489;
            uint64_t v491 = (char *)v478 + v489;
            uint64_t v492 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v491, 1, v492))
            {
              uint64_t v493 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v490, v491, *(void *)(*(void *)(v493 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v492 - 8) + 32))(v490, v491, v492);
              __swift_storeEnumTagSinglePayload((uint64_t)v490, 0, 1, v492);
            }
            *(_OWORD *)((char *)v477 + v479[30]) = *(_OWORD *)((char *)v478 + v479[30]);
            uint64_t v515 = v479[31];
            uint64_t v516 = (char *)v477 + v515;
            uint64_t v517 = (char *)v478 + v515;
            if (__swift_getEnumTagSinglePayload((uint64_t)v478 + v515, 1, (uint64_t)v1153))
            {
              uint64_t v518 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v516, v517, *(void *)(*(void *)(v518 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v516, v517, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v516, 0, 1, (uint64_t)v1153);
            }
            uint64_t v527 = v479[32];
            uint64_t v528 = (char *)v477 + v527;
            v529 = (char *)v478 + v527;
            if (__swift_getEnumTagSinglePayload((uint64_t)v478 + v527, 1, (uint64_t)v1153))
            {
              uint64_t v530 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v528, v529, *(void *)(*(void *)(v530 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v528, v529, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v528, 0, 1, (uint64_t)v1153);
            }
            uint64_t v244 = v1148;
            __swift_storeEnumTagSinglePayload((uint64_t)v477, 0, 1, (uint64_t)v479);
            uint64_t v246 = v1151;
            uint64_t v245 = v1145;
          }
          uint64_t v552 = v246[8];
          v553 = (_OWORD *)((char *)v244 + v552);
          v554 = (_OWORD *)((char *)v245 + v552);
          uint64_t v555 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v554, 1, v555))
          {
            uint64_t v556 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v553, v554, *(void *)(*(void *)(v556 - 8) + 64));
          }
          else
          {
            long long v557 = v554[1];
            _OWORD *v553 = *v554;
            v553[1] = v557;
            long long v558 = v554[3];
            v553[2] = v554[2];
            v553[3] = v558;
            long long v559 = v554[5];
            v553[4] = v554[4];
            v553[5] = v559;
            long long v560 = v554[7];
            v553[6] = v554[6];
            v553[7] = v560;
            *((unsigned char *)v553 + 128) = *((unsigned char *)v554 + 128);
            *(_WORD *)((char *)v553 + 129) = *(_WORD *)((char *)v554 + 129);
            *((void *)v553 + 17) = *((void *)v554 + 17);
            long long v561 = v554[10];
            v553[9] = v554[9];
            v553[10] = v561;
            long long v562 = v554[12];
            v553[11] = v554[11];
            v553[12] = v562;
            long long v563 = v554[14];
            v553[13] = v554[13];
            v553[14] = v563;
            long long v564 = v554[16];
            v553[15] = v554[15];
            v553[16] = v564;
            *((unsigned char *)v553 + 280) = *((unsigned char *)v554 + 280);
            *((void *)v553 + 34) = *((void *)v554 + 34);
            v553[18] = v554[18];
            uint64_t v565 = *(int *)(v555 + 108);
            v566 = (char *)v553 + v565;
            uint64_t v567 = (char *)v554 + v565;
            if (__swift_getEnumTagSinglePayload((uint64_t)v554 + v565, 1, (uint64_t)v1153))
            {
              uint64_t v568 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v566, v567, *(void *)(*(void *)(v568 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v566, v567, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v566, 0, 1, (uint64_t)v1153);
            }
            uint64_t v590 = *(int *)(v555 + 112);
            v591 = (char *)v553 + v590;
            uint64_t v592 = (char *)v554 + v590;
            if (__swift_getEnumTagSinglePayload((uint64_t)v554 + v590, 1, (uint64_t)v1153))
            {
              uint64_t v593 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v591, v592, *(void *)(*(void *)(v593 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v591, v592, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v591, 0, 1, (uint64_t)v1153);
            }
            uint64_t v244 = v1148;
            __swift_storeEnumTagSinglePayload((uint64_t)v553, 0, 1, v555);
            uint64_t v246 = v1151;
            uint64_t v245 = v1145;
          }
          uint64_t v614 = v246[9];
          uint64_t v615 = (_OWORD *)((char *)v244 + v614);
          uint64_t v616 = (_OWORD *)((char *)v245 + v614);
          uint64_t v617 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v616, 1, (uint64_t)v617))
          {
            uint64_t v618 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v615, v616, *(void *)(*(void *)(v618 - 8) + 64));
          }
          else
          {
            long long v619 = v616[1];
            _OWORD *v615 = *v616;
            v615[1] = v619;
            long long v620 = v616[3];
            v615[2] = v616[2];
            v615[3] = v620;
            long long v621 = v616[5];
            v615[4] = v616[4];
            v615[5] = v621;
            long long v622 = v616[7];
            v615[6] = v616[6];
            v615[7] = v622;
            *((unsigned char *)v615 + 128) = *((unsigned char *)v616 + 128);
            *(_WORD *)((char *)v615 + 129) = *(_WORD *)((char *)v616 + 129);
            *((void *)v615 + 17) = *((void *)v616 + 17);
            long long v623 = v616[10];
            v615[9] = v616[9];
            v615[10] = v623;
            long long v624 = v616[12];
            v615[11] = v616[11];
            v615[12] = v624;
            long long v625 = v616[14];
            v615[13] = v616[13];
            v615[14] = v625;
            v615[15] = v616[15];
            uint64_t v626 = v617[24];
            uint64_t v627 = (char *)v615 + v626;
            uint64_t v628 = (char *)v616 + v626;
            if (__swift_getEnumTagSinglePayload((uint64_t)v616 + v626, 1, (uint64_t)v1153))
            {
              uint64_t v629 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v627, v628, *(void *)(*(void *)(v629 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v627, v628, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v627, 0, 1, (uint64_t)v1153);
            }
            uint64_t v650 = v617[25];
            uint64_t v651 = (char *)v615 + v650;
            v652 = (char *)v616 + v650;
            if (__swift_getEnumTagSinglePayload((uint64_t)v616 + v650, 1, (uint64_t)v1153))
            {
              uint64_t v653 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v651, v652, *(void *)(*(void *)(v653 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v651, v652, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v651, 0, 1, (uint64_t)v1153);
            }
            uint64_t v663 = v617[26];
            uint64_t v664 = (char *)v615 + v663;
            uint64_t v665 = (char *)v616 + v663;
            uint64_t v666 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v665, 1, v666))
            {
              uint64_t v667 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v664, v665, *(void *)(*(void *)(v667 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v666 - 8) + 32))(v664, v665, v666);
              __swift_storeEnumTagSinglePayload((uint64_t)v664, 0, 1, v666);
            }
            uint64_t v244 = v1148;
            __swift_storeEnumTagSinglePayload((uint64_t)v615, 0, 1, (uint64_t)v617);
            uint64_t v246 = v1151;
            uint64_t v245 = v1145;
          }
          uint64_t v687 = v246[10];
          uint64_t v688 = (_OWORD *)((char *)v244 + v687);
          uint64_t v689 = (_OWORD *)((char *)v245 + v687);
          uint64_t v690 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v689, 1, (uint64_t)v690))
          {
            uint64_t v691 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v688, v689, *(void *)(*(void *)(v691 - 8) + 64));
          }
          else
          {
            long long v692 = v689[1];
            *uint64_t v688 = *v689;
            v688[1] = v692;
            long long v693 = v689[3];
            v688[2] = v689[2];
            v688[3] = v693;
            long long v694 = v689[5];
            v688[4] = v689[4];
            v688[5] = v694;
            long long v695 = v689[7];
            v688[6] = v689[6];
            v688[7] = v695;
            *((unsigned char *)v688 + 128) = *((unsigned char *)v689 + 128);
            *(_WORD *)((char *)v688 + 129) = *(_WORD *)((char *)v689 + 129);
            *((void *)v688 + 17) = *((void *)v689 + 17);
            long long v696 = v689[10];
            v688[9] = v689[9];
            v688[10] = v696;
            long long v697 = v689[12];
            v688[11] = v689[11];
            v688[12] = v697;
            v688[13] = v689[13];
            uint64_t v698 = v690[22];
            uint64_t v699 = (char *)v688 + v698;
            uint64_t v700 = (char *)v689 + v698;
            if (__swift_getEnumTagSinglePayload((uint64_t)v689 + v698, 1, (uint64_t)v1153))
            {
              uint64_t v701 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v699, v700, *(void *)(*(void *)(v701 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v699, v700, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v699, 0, 1, (uint64_t)v1153);
            }
            uint64_t v721 = v690[23];
            uint64_t v722 = (char *)v688 + v721;
            uint64_t v723 = (char *)v689 + v721;
            if (__swift_getEnumTagSinglePayload((uint64_t)v689 + v721, 1, (uint64_t)v1153))
            {
              uint64_t v724 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v722, v723, *(void *)(*(void *)(v724 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v722, v723, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v722, 0, 1, (uint64_t)v1153);
            }
            uint64_t v737 = v690[24];
            uint64_t v738 = (char *)v688 + v737;
            uint64_t v739 = (char *)v689 + v737;
            *(void *)uint64_t v738 = *(void *)v739;
            v738[8] = v739[8];
            uint64_t v740 = v690[25];
            uint64_t v741 = (char *)v688 + v740;
            uint64_t v742 = (char *)v689 + v740;
            uint64_t v743 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v742, 1, v743))
            {
              uint64_t v744 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v741, v742, *(void *)(*(void *)(v744 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v743 - 8) + 32))(v741, v742, v743);
              __swift_storeEnumTagSinglePayload((uint64_t)v741, 0, 1, v743);
            }
            uint64_t v244 = v1148;
            __swift_storeEnumTagSinglePayload((uint64_t)v688, 0, 1, (uint64_t)v690);
            uint64_t v246 = v1151;
            uint64_t v245 = v1145;
          }
          uint64_t v765 = v246[11];
          v766 = (_OWORD *)((char *)v244 + v765);
          uint64_t v767 = (_OWORD *)((char *)v245 + v765);
          uint64_t v768 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v767, 1, (uint64_t)v768))
          {
            uint64_t v769 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v766, v767, *(void *)(*(void *)(v769 - 8) + 64));
          }
          else
          {
            long long v770 = v767[1];
            _OWORD *v766 = *v767;
            v766[1] = v770;
            long long v771 = v767[3];
            v766[2] = v767[2];
            v766[3] = v771;
            long long v772 = v767[5];
            v766[4] = v767[4];
            v766[5] = v772;
            *((unsigned char *)v766 + 96) = *((unsigned char *)v767 + 96);
            *(_OWORD *)((char *)v766 + 104) = *(_OWORD *)((char *)v767 + 104);
            uint64_t v773 = v768[13];
            uint64_t v774 = (char *)v766 + v773;
            uint64_t v775 = (char *)v767 + v773;
            uint64_t v776 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v775, 1, v776))
            {
              uint64_t v777 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v774, v775, *(void *)(*(void *)(v777 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v776 - 8) + 32))(v774, v775, v776);
              __swift_storeEnumTagSinglePayload((uint64_t)v774, 0, 1, v776);
            }
            uint64_t v794 = v768[14];
            uint64_t v795 = (char *)v766 + v794;
            uint64_t v796 = (char *)v767 + v794;
            if (__swift_getEnumTagSinglePayload((uint64_t)v767 + v794, 1, v776))
            {
              uint64_t v797 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v795, v796, *(void *)(*(void *)(v797 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v776 - 8) + 32))(v795, v796, v776);
              __swift_storeEnumTagSinglePayload((uint64_t)v795, 0, 1, v776);
            }
            *(_OWORD *)((char *)v766 + v768[15]) = *(_OWORD *)((char *)v767 + v768[15]);
            *(_OWORD *)((char *)v766 + v768[16]) = *(_OWORD *)((char *)v767 + v768[16]);
            *(_OWORD *)((char *)v766 + v768[17]) = *(_OWORD *)((char *)v767 + v768[17]);
            uint64_t v809 = v768[18];
            uint64_t v1135 = (char *)v767 + v809;
            __dstd = (char *)v766 + v809;
            uint64_t v810 = type metadata accessor for DateComponents();
            uint64_t v811 = *(void (**)(char *, char *, uint64_t))(*(void *)(v810 - 8) + 32);
            v811(__dstd, v1135, v810);
            v811((char *)v766 + v768[19], (char *)v767 + v768[19], v810);
            *(_OWORD *)((char *)v766 + v768[20]) = *(_OWORD *)((char *)v767 + v768[20]);
            *(_OWORD *)((char *)v766 + v768[21]) = *(_OWORD *)((char *)v767 + v768[21]);
            *(_OWORD *)((char *)v766 + v768[22]) = *(_OWORD *)((char *)v767 + v768[22]);
            *(_OWORD *)((char *)v766 + v768[23]) = *(_OWORD *)((char *)v767 + v768[23]);
            *(_OWORD *)((char *)v766 + v768[24]) = *(_OWORD *)((char *)v767 + v768[24]);
            *(_OWORD *)((char *)v766 + v768[25]) = *(_OWORD *)((char *)v767 + v768[25]);
            *(_OWORD *)((char *)v766 + v768[26]) = *(_OWORD *)((char *)v767 + v768[26]);
            *(_OWORD *)((char *)v766 + v768[27]) = *(_OWORD *)((char *)v767 + v768[27]);
            *(_OWORD *)((char *)v766 + v768[28]) = *(_OWORD *)((char *)v767 + v768[28]);
            *(_OWORD *)((char *)v766 + v768[29]) = *(_OWORD *)((char *)v767 + v768[29]);
            *(_OWORD *)((char *)v766 + v768[30]) = *(_OWORD *)((char *)v767 + v768[30]);
            *(_OWORD *)((char *)v766 + v768[31]) = *(_OWORD *)((char *)v767 + v768[31]);
            *(_OWORD *)((char *)v766 + v768[32]) = *(_OWORD *)((char *)v767 + v768[32]);
            *(void *)((char *)v766 + v768[33]) = *(void *)((char *)v767 + v768[33]);
            *(void *)((char *)v766 + v768[34]) = *(void *)((char *)v767 + v768[34]);
            *(_OWORD *)((char *)v766 + v768[35]) = *(_OWORD *)((char *)v767 + v768[35]);
            *(_OWORD *)((char *)v766 + v768[36]) = *(_OWORD *)((char *)v767 + v768[36]);
            *(_OWORD *)((char *)v766 + v768[37]) = *(_OWORD *)((char *)v767 + v768[37]);
            uint64_t v812 = v768[38];
            uint64_t v813 = (char *)v766 + v812;
            uint64_t v814 = (char *)v767 + v812;
            if (__swift_getEnumTagSinglePayload((uint64_t)v767 + v812, 1, (uint64_t)v1153))
            {
              uint64_t v815 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v813, v814, *(void *)(*(void *)(v815 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v813, v814, v1153);
              __swift_storeEnumTagSinglePayload((uint64_t)v813, 0, 1, (uint64_t)v1153);
            }
            uint64_t v244 = v1148;
            *(_OWORD *)((char *)v766 + v768[39]) = *(_OWORD *)((char *)v767 + v768[39]);
            *(_OWORD *)((char *)v766 + v768[40]) = *(_OWORD *)((char *)v767 + v768[40]);
            uint64_t v842 = v768[41];
            uint64_t v843 = (char *)v766 + v842;
            uint64_t v844 = (char *)v767 + v842;
            *(void *)uint64_t v843 = *(void *)v844;
            v843[8] = v844[8];
            *(_OWORD *)((char *)v766 + v768[42]) = *(_OWORD *)((char *)v767 + v768[42]);
            uint64_t v845 = v768[43];
            uint64_t v846 = (char *)v766 + v845;
            uint64_t v847 = (char *)v767 + v845;
            *(_OWORD *)uint64_t v846 = *(_OWORD *)v847;
            *(void *)(v846 + 13) = *(void *)(v847 + 13);
            *(_OWORD *)((char *)v766 + v768[44]) = *(_OWORD *)((char *)v767 + v768[44]);
            *(_OWORD *)((char *)v766 + v768[45]) = *(_OWORD *)((char *)v767 + v768[45]);
            *(_OWORD *)((char *)v766 + v768[46]) = *(_OWORD *)((char *)v767 + v768[46]);
            *(_OWORD *)((char *)v766 + v768[47]) = *(_OWORD *)((char *)v767 + v768[47]);
            __swift_storeEnumTagSinglePayload((uint64_t)v766, 0, 1, (uint64_t)v768);
            uint64_t v246 = v1151;
            uint64_t v245 = v1145;
          }
          uint64_t v848 = v246[12];
          uint64_t v849 = (_OWORD *)((char *)v244 + v848);
          uint64_t v850 = (_OWORD *)((char *)v245 + v848);
          uint64_t v851 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v850, 1, (uint64_t)v851))
          {
            uint64_t v852 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v849, v850, *(void *)(*(void *)(v852 - 8) + 64));
          }
          else
          {
            long long v853 = v850[1];
            *uint64_t v849 = *v850;
            v849[1] = v853;
            long long v854 = v850[3];
            v849[2] = v850[2];
            v849[3] = v854;
            long long v855 = v850[5];
            v849[4] = v850[4];
            v849[5] = v855;
            *((unsigned char *)v849 + 96) = *((unsigned char *)v850 + 96);
            *(_OWORD *)((char *)v849 + 104) = *(_OWORD *)((char *)v850 + 104);
            *(_OWORD *)((char *)v849 + 120) = *(_OWORD *)((char *)v850 + 120);
            uint64_t v856 = v851[14];
            __dstb = (char *)v849 + v856;
            uint64_t v857 = (char *)v850 + v856;
            uint64_t v858 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v857, 1, v858))
            {
              uint64_t v859 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(__dstb, v857, *(void *)(*(void *)(v859 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v858 - 8) + 32))(__dstb, v857, v858);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v858);
            }
            uint64_t v882 = v851[15];
            __dstc = (char *)v849 + v882;
            uint64_t v883 = (char *)v850 + v882;
            if (__swift_getEnumTagSinglePayload((uint64_t)v850 + v882, 1, v858))
            {
              uint64_t v884 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(__dstc, v883, *(void *)(*(void *)(v884 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v858 - 8) + 32))(__dstc, v883, v858);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v858);
            }
            uint64_t v246 = v1151;
            *(_OWORD *)((char *)v849 + v851[16]) = *(_OWORD *)((char *)v850 + v851[16]);
            *(_OWORD *)((char *)v849 + v851[17]) = *(_OWORD *)((char *)v850 + v851[17]);
            *(_OWORD *)((char *)v849 + v851[18]) = *(_OWORD *)((char *)v850 + v851[18]);
            *(_OWORD *)((char *)v849 + v851[19]) = *(_OWORD *)((char *)v850 + v851[19]);
            *(_OWORD *)((char *)v849 + v851[20]) = *(_OWORD *)((char *)v850 + v851[20]);
            *(void *)((char *)v849 + v851[21]) = *(void *)((char *)v850 + v851[21]);
            *(void *)((char *)v849 + v851[22]) = *(void *)((char *)v850 + v851[22]);
            uint64_t v910 = v851[23];
            uint64_t v911 = (char *)v849 + v910;
            uint64_t v912 = (char *)v850 + v910;
            v911[8] = v912[8];
            *(void *)uint64_t v911 = *(void *)v912;
            uint64_t v913 = v851[24];
            uint64_t v914 = (char *)v849 + v913;
            uint64_t v915 = (char *)v850 + v913;
            v914[8] = v915[8];
            *(void *)uint64_t v914 = *(void *)v915;
            *(_OWORD *)((char *)v849 + v851[25]) = *(_OWORD *)((char *)v850 + v851[25]);
            *(_OWORD *)((char *)v849 + v851[26]) = *(_OWORD *)((char *)v850 + v851[26]);
            *(_OWORD *)((char *)v849 + v851[27]) = *(_OWORD *)((char *)v850 + v851[27]);
            *(_OWORD *)((char *)v849 + v851[28]) = *(_OWORD *)((char *)v850 + v851[28]);
            uint64_t v916 = v851[29];
            uint64_t v917 = (char *)v849 + v916;
            uint64_t v918 = (char *)v850 + v916;
            *(void *)uint64_t v917 = *(void *)v918;
            v917[8] = v918[8];
            __swift_storeEnumTagSinglePayload((uint64_t)v849, 0, 1, (uint64_t)v851);
            uint64_t v245 = v1145;
          }
          uint64_t v919 = v246[13];
          uint64_t v920 = (_OWORD *)((char *)v244 + v919);
          uint64_t v921 = (_OWORD *)((char *)v245 + v919);
          uint64_t v922 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v921, 1, (uint64_t)v922))
          {
            uint64_t v923 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v920, v921, *(void *)(*(void *)(v923 - 8) + 64));
          }
          else
          {
            long long v924 = v921[1];
            _OWORD *v920 = *v921;
            v920[1] = v924;
            long long v925 = v921[3];
            v920[2] = v921[2];
            v920[3] = v925;
            long long v926 = v921[5];
            v920[4] = v921[4];
            v920[5] = v926;
            *((unsigned char *)v920 + 96) = *((unsigned char *)v921 + 96);
            *(_OWORD *)((char *)v920 + 104) = *(_OWORD *)((char *)v921 + 104);
            *(_OWORD *)((char *)v920 + 120) = *(_OWORD *)((char *)v921 + 120);
            uint64_t v927 = v922[14];
            uint64_t v928 = (char *)v920 + v927;
            uint64_t v929 = (char *)v921 + v927;
            uint64_t v930 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v929, 1, v930))
            {
              uint64_t v931 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v928, v929, *(void *)(*(void *)(v931 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v930 - 8) + 32))(v928, v929, v930);
              __swift_storeEnumTagSinglePayload((uint64_t)v928, 0, 1, v930);
            }
            *(_OWORD *)((char *)v920 + v922[15]) = *(_OWORD *)((char *)v921 + v922[15]);
            *(_OWORD *)((char *)v920 + v922[16]) = *(_OWORD *)((char *)v921 + v922[16]);
            *(_OWORD *)((char *)v920 + v922[17]) = *(_OWORD *)((char *)v921 + v922[17]);
            *(_OWORD *)((char *)v920 + v922[18]) = *(_OWORD *)((char *)v921 + v922[18]);
            *(_OWORD *)((char *)v920 + v922[19]) = *(_OWORD *)((char *)v921 + v922[19]);
            *(void *)((char *)v920 + v922[20]) = *(void *)((char *)v921 + v922[20]);
            *(_OWORD *)((char *)v920 + v922[21]) = *(_OWORD *)((char *)v921 + v922[21]);
            *(_OWORD *)((char *)v920 + v922[22]) = *(_OWORD *)((char *)v921 + v922[22]);
            *(_OWORD *)((char *)v920 + v922[23]) = *(_OWORD *)((char *)v921 + v922[23]);
            __swift_storeEnumTagSinglePayload((uint64_t)v920, 0, 1, (uint64_t)v922);
            uint64_t v244 = v1148;
            uint64_t v246 = v1151;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v244, 0, 1, (uint64_t)v246);
          uint64_t v44 = v1157;
        }
        uint64_t v1013 = v44[18];
        uint64_t v1014 = (_OWORD *)((char *)v5 + v1013);
        uint64_t v1015 = (_OWORD *)((char *)v6 + v1013);
        uint64_t v1016 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1015, 1, (uint64_t)v1016))
        {
          uint64_t v1017 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v1014, v1015, *(void *)(*(void *)(v1017 - 8) + 64));
        }
        else
        {
          long long v1018 = v1015[1];
          *uint64_t v1014 = *v1015;
          v1014[1] = v1018;
          long long v1019 = v1015[3];
          v1014[2] = v1015[2];
          v1014[3] = v1019;
          long long v1020 = v1015[5];
          v1014[4] = v1015[4];
          v1014[5] = v1020;
          uint64_t v1021 = v1016[10];
          uint64_t v1022 = (char *)v1014 + v1021;
          uint64_t v1023 = (char *)v1015 + v1021;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1015 + v1021, 1, (uint64_t)v1153))
          {
            uint64_t v1024 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1022, v1023, *(void *)(*(void *)(v1024 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v1022, v1023, v1153);
            __swift_storeEnumTagSinglePayload((uint64_t)v1022, 0, 1, (uint64_t)v1153);
          }
          uint64_t v1025 = v1016[11];
          uint64_t v1026 = (char *)v1014 + v1025;
          uint64_t v1027 = (char *)v1015 + v1025;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1015 + v1025, 1, (uint64_t)v1153))
          {
            uint64_t v1028 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1026, v1027, *(void *)(*(void *)(v1028 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v1026, v1027, v1153);
            __swift_storeEnumTagSinglePayload((uint64_t)v1026, 0, 1, (uint64_t)v1153);
          }
          *(_OWORD *)((char *)v1014 + v1016[12]) = *(_OWORD *)((char *)v1015 + v1016[12]);
          *(_OWORD *)((char *)v1014 + v1016[13]) = *(_OWORD *)((char *)v1015 + v1016[13]);
          *(_OWORD *)((char *)v1014 + v1016[14]) = *(_OWORD *)((char *)v1015 + v1016[14]);
          uint64_t v1029 = v1016[15];
          uint64_t v1030 = (char *)v1014 + v1029;
          uint64_t v1031 = (char *)v1015 + v1029;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1015 + v1029, 1, (uint64_t)v1153))
          {
            uint64_t v1032 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1030, v1031, *(void *)(*(void *)(v1032 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v1030, v1031, v1153);
            __swift_storeEnumTagSinglePayload((uint64_t)v1030, 0, 1, (uint64_t)v1153);
          }
          *(_OWORD *)((char *)v1014 + v1016[16]) = *(_OWORD *)((char *)v1015 + v1016[16]);
          *(_OWORD *)((char *)v1014 + v1016[17]) = *(_OWORD *)((char *)v1015 + v1016[17]);
          *(_OWORD *)((char *)v1014 + v1016[18]) = *(_OWORD *)((char *)v1015 + v1016[18]);
          *(_OWORD *)((char *)v1014 + v1016[19]) = *(_OWORD *)((char *)v1015 + v1016[19]);
          *(_OWORD *)((char *)v1014 + v1016[20]) = *(_OWORD *)((char *)v1015 + v1016[20]);
          *(_OWORD *)((char *)v1014 + v1016[21]) = *(_OWORD *)((char *)v1015 + v1016[21]);
          *(_OWORD *)((char *)v1014 + v1016[22]) = *(_OWORD *)((char *)v1015 + v1016[22]);
          *(_OWORD *)((char *)v1014 + v1016[23]) = *(_OWORD *)((char *)v1015 + v1016[23]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1014, 0, 1, (uint64_t)v1016);
        }
        uint64_t v1033 = v1157[19];
        uint64_t v1034 = (_OWORD *)((char *)v5 + v1033);
        uint64_t v1035 = (_OWORD *)((char *)v6 + v1033);
        uint64_t v1036 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1035, 1, (uint64_t)v1036))
        {
          uint64_t v1037 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v1034, v1035, *(void *)(*(void *)(v1037 - 8) + 64));
        }
        else
        {
          long long v1038 = v1035[1];
          *uint64_t v1034 = *v1035;
          v1034[1] = v1038;
          long long v1039 = v1035[3];
          v1034[2] = v1035[2];
          v1034[3] = v1039;
          long long v1040 = v1035[5];
          v1034[4] = v1035[4];
          v1034[5] = v1040;
          uint64_t v1041 = v1036[11];
          uint64_t v1042 = (char *)v1034 + v1041;
          uint64_t v1043 = (char *)v1035 + v1041;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1035 + v1041, 1, (uint64_t)v1153))
          {
            uint64_t v1044 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1042, v1043, *(void *)(*(void *)(v1044 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v1042, v1043, v1153);
            __swift_storeEnumTagSinglePayload((uint64_t)v1042, 0, 1, (uint64_t)v1153);
          }
          *(_OWORD *)((char *)v1034 + v1036[12]) = *(_OWORD *)((char *)v1035 + v1036[12]);
          *(void *)((char *)v1034 + v1036[13]) = *(void *)((char *)v1035 + v1036[13]);
          uint64_t v1045 = v1036[14];
          uint64_t v1046 = (char *)v1034 + v1045;
          uint64_t v1047 = (char *)v1035 + v1045;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1035 + v1045, 1, (uint64_t)v1153))
          {
            uint64_t v1048 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1046, v1047, *(void *)(*(void *)(v1048 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v1046, v1047, v1153);
            __swift_storeEnumTagSinglePayload((uint64_t)v1046, 0, 1, (uint64_t)v1153);
          }
          *(void *)((char *)v1034 + v1036[15]) = *(void *)((char *)v1035 + v1036[15]);
          *(void *)((char *)v1034 + v1036[16]) = *(void *)((char *)v1035 + v1036[16]);
          *(_OWORD *)((char *)v1034 + v1036[17]) = *(_OWORD *)((char *)v1035 + v1036[17]);
          *(void *)((char *)v1034 + v1036[18]) = *(void *)((char *)v1035 + v1036[18]);
          *(void *)((char *)v1034 + v1036[19]) = *(void *)((char *)v1035 + v1036[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1034, 0, 1, (uint64_t)v1036);
        }
        uint64_t v1049 = v1157[20];
        uint64_t v1050 = (_OWORD *)((char *)v5 + v1049);
        uint64_t v1051 = (_OWORD *)((char *)v6 + v1049);
        uint64_t v1052 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1051, 1, (uint64_t)v1052))
        {
          uint64_t v1053 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v1050, v1051, *(void *)(*(void *)(v1053 - 8) + 64));
        }
        else
        {
          long long v1054 = v1051[1];
          *uint64_t v1050 = *v1051;
          v1050[1] = v1054;
          long long v1055 = v1051[3];
          v1050[2] = v1051[2];
          v1050[3] = v1055;
          uint64_t v1056 = v1052[8];
          uint64_t v1057 = (char *)v1050 + v1056;
          uint64_t v1058 = (char *)v1051 + v1056;
          uint64_t v1059 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1058, 1, v1059))
          {
            uint64_t v1060 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v1057, v1058, *(void *)(*(void *)(v1060 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1059 - 8) + 32))(v1057, v1058, v1059);
            __swift_storeEnumTagSinglePayload((uint64_t)v1057, 0, 1, v1059);
          }
          *(_OWORD *)((char *)v1050 + v1052[9]) = *(_OWORD *)((char *)v1051 + v1052[9]);
          *(_OWORD *)((char *)v1050 + v1052[10]) = *(_OWORD *)((char *)v1051 + v1052[10]);
          *(_OWORD *)((char *)v1050 + v1052[11]) = *(_OWORD *)((char *)v1051 + v1052[11]);
          uint64_t v1061 = v1052[12];
          uint64_t v1062 = (char *)v1050 + v1061;
          uint64_t v1063 = (char *)v1051 + v1061;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1051 + v1061, 1, (uint64_t)v1153))
          {
            uint64_t v1064 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1062, v1063, *(void *)(*(void *)(v1064 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v1062, v1063, v1153);
            __swift_storeEnumTagSinglePayload((uint64_t)v1062, 0, 1, (uint64_t)v1153);
          }
          uint64_t v1065 = v1052[13];
          uint64_t v1066 = (char *)v1050 + v1065;
          uint64_t v1067 = (char *)v1051 + v1065;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1051 + v1065, 1, (uint64_t)v1153))
          {
            uint64_t v1068 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1066, v1067, *(void *)(*(void *)(v1068 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v1153 - 1) + 32))(v1066, v1067, v1153);
            __swift_storeEnumTagSinglePayload((uint64_t)v1066, 0, 1, (uint64_t)v1153);
          }
          uint64_t v1069 = v1052[14];
          uint64_t v1070 = (char *)v1050 + v1069;
          uint64_t v1071 = (char *)v1051 + v1069;
          *(void *)uint64_t v1070 = *(void *)v1071;
          v1070[8] = v1071[8];
          *(_OWORD *)((char *)v1050 + v1052[15]) = *(_OWORD *)((char *)v1051 + v1052[15]);
          *(_OWORD *)((char *)v1050 + v1052[16]) = *(_OWORD *)((char *)v1051 + v1052[16]);
          *(_OWORD *)((char *)v1050 + v1052[17]) = *(_OWORD *)((char *)v1051 + v1052[17]);
          *(_OWORD *)((char *)v1050 + v1052[18]) = *(_OWORD *)((char *)v1051 + v1052[18]);
          *(_OWORD *)((char *)v1050 + v1052[19]) = *(_OWORD *)((char *)v1051 + v1052[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1050, 0, 1, (uint64_t)v1052);
        }
        memcpy((char *)v5 + v1157[21], (char *)v6 + v1157[21], 0x90uLL);
        goto LABEL_524;
      case 4u:
        long long v50 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v50;
        long long v51 = v6[3];
        v5[2] = v6[2];
        v5[3] = v51;
        uint64_t v52 = type metadata accessor for NoteDocument(0);
        uint64_t v53 = *(int *)(v52 + 32);
        uint64_t v54 = (char *)v5 + v53;
        uint64_t v55 = (char *)v6 + v53;
        uint64_t v56 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v55, 1, v56))
        {
          uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
          __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v56);
        }
        uint64_t v248 = *(int *)(v52 + 36);
        uint64_t v249 = (char *)v5 + v248;
        uint64_t v250 = (char *)v6 + v248;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v248, 1, v56)) {
          goto LABEL_106;
        }
        goto LABEL_136;
      case 5u:
        long long v58 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v58;
        v5[2] = v6[2];
        uint64_t v59 = (int *)type metadata accessor for Reminder(0);
        uint64_t v60 = v59[7];
        uint64_t v61 = (char *)v5 + v60;
        uint64_t v62 = (char *)v6 + v60;
        uint64_t v63 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v62, 1, v63))
        {
          uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
          __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v63);
        }
        uint64_t v251 = v59[8];
        uint64_t v252 = (char *)v5 + v251;
        uint64_t v253 = (char *)v6 + v251;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v251, 1, v63))
        {
          uint64_t v254 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v252, v253, *(void *)(*(void *)(v254 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v252, v253, v63);
          __swift_storeEnumTagSinglePayload((uint64_t)v252, 0, 1, v63);
        }
        *((unsigned char *)v5 + v59[9]) = *((unsigned char *)v6 + v59[9]);
        *(_OWORD *)((char *)v5 + v59[10]) = *(_OWORD *)((char *)v6 + v59[10]);
        *(_OWORD *)((char *)v5 + v59[11]) = *(_OWORD *)((char *)v6 + v59[11]);
        uint64_t v311 = v59[12];
        uint64_t v82 = (char *)v5 + v311;
        uint64_t v83 = (char *)v6 + v311;
        uint64_t v84 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v84)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 6u:
        long long v65 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v65;
        long long v66 = v6[3];
        v5[2] = v6[2];
        v5[3] = v66;
        uint64_t v67 = (int *)type metadata accessor for PhoneHistory(0);
        uint64_t v68 = v67[10];
        uint64_t v69 = (char *)v5 + v68;
        uint64_t v70 = (char *)v6 + v68;
        uint64_t v71 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v71))
        {
          uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
          __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v71);
        }
        *(_OWORD *)((char *)v5 + v67[11]) = *(_OWORD *)((char *)v6 + v67[11]);
        *(_OWORD *)((char *)v5 + v67[12]) = *(_OWORD *)((char *)v6 + v67[12]);
        uint64_t v255 = v67[13];
        uint64_t v82 = (char *)v5 + v255;
        uint64_t v83 = (char *)v6 + v255;
        uint64_t v84 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v84)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 7u:
        long long v73 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v73;
        v5[2] = v6[2];
        uint64_t v74 = type metadata accessor for VoicemailTranscript(0);
        uint64_t v75 = *(int *)(v74 + 28);
        uint64_t v76 = (char *)v5 + v75;
        uint64_t v77 = (char *)v6 + v75;
        uint64_t v78 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v78))
        {
          uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
          __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v78);
        }
        uint64_t v256 = *(int *)(v74 + 32);
        uint64_t v82 = (char *)v5 + v256;
        uint64_t v83 = (char *)v6 + v256;
        uint64_t v84 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v84)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 8u:
        long long v80 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v80;
        v5[2] = v6[2];
        uint64_t v81 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
        uint64_t v82 = (char *)v5 + v81;
        uint64_t v83 = (char *)v6 + v81;
        uint64_t v84 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v84)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 9u:
        long long v85 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v85;
        uint64_t v86 = (int *)type metadata accessor for VoiceMemo(0);
        uint64_t v87 = v86[6];
        uint64_t v88 = (char *)v5 + v87;
        uint64_t v89 = (char *)v6 + v87;
        uint64_t v90 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, v90))
        {
          uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v88, v89, *(void *)(*(void *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v88, v89, v90);
          __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v90);
        }
        uint64_t v257 = v86[7];
        uint64_t v258 = (char *)v5 + v257;
        uint64_t v259 = (char *)v6 + v257;
        *(void *)uint64_t v258 = *(void *)v259;
        v258[8] = v259[8];
        uint64_t v260 = v86[8];
        uint64_t v82 = (char *)v5 + v260;
        uint64_t v83 = (char *)v6 + v260;
        uint64_t v84 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v84)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 0xAu:
        long long v92 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v92;
        uint64_t v93 = (int *)type metadata accessor for Safari(0);
        uint64_t v94 = v93[6];
        uint64_t v95 = (char *)v5 + v94;
        v96 = (char *)v6 + v94;
        uint64_t v56 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v96, 1, v56))
        {
          uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v95, v96, *(void *)(*(void *)(v97 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v95, v96, v56);
          __swift_storeEnumTagSinglePayload((uint64_t)v95, 0, 1, v56);
        }
        *(_OWORD *)((char *)v5 + v93[7]) = *(_OWORD *)((char *)v6 + v93[7]);
        *(_OWORD *)((char *)v5 + v93[8]) = *(_OWORD *)((char *)v6 + v93[8]);
        uint64_t v261 = v93[9];
        uint64_t v249 = (char *)v5 + v261;
        uint64_t v250 = (char *)v6 + v261;
        if (!__swift_getEnumTagSinglePayload((uint64_t)v6 + v261, 1, v56)) {
          goto LABEL_136;
        }
        uint64_t v262 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(v249, v250, *(void *)(*(void *)(v262 - 8) + 64));
        goto LABEL_524;
      case 0xCu:
        long long v98 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v98;
        v5[2] = v6[2];
        uint64_t v99 = (int *)type metadata accessor for WalletTransaction(0);
        uint64_t v100 = v99[7];
        uint64_t v101 = (char *)v5 + v100;
        uint64_t v102 = (char *)v6 + v100;
        uint64_t v103 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v102, 1, v103))
        {
          uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v101, v102, *(void *)(*(void *)(v104 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32))(v101, v102, v103);
          __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v103);
        }
        *(_OWORD *)((char *)v5 + v99[8]) = *(_OWORD *)((char *)v6 + v99[8]);
        *(_OWORD *)((char *)v5 + v99[9]) = *(_OWORD *)((char *)v6 + v99[9]);
        *(_OWORD *)((char *)v5 + v99[10]) = *(_OWORD *)((char *)v6 + v99[10]);
        uint64_t v263 = v99[11];
        uint64_t v264 = (char *)v5 + v263;
        uint64_t v265 = (char *)v6 + v263;
        *(void *)(v264 + 13) = *(void *)(v265 + 13);
        *(_OWORD *)uint64_t v264 = *(_OWORD *)v265;
        *(_OWORD *)((char *)v5 + v99[12]) = *(_OWORD *)((char *)v6 + v99[12]);
        goto LABEL_524;
      case 0xDu:
        long long v105 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v105;
        v5[2] = v6[2];
        uint64_t v106 = (int *)type metadata accessor for WalletPass(0);
        uint64_t v107 = v106[7];
        uint64_t v108 = (char *)v5 + v107;
        uint64_t v109 = (char *)v6 + v107;
        uint64_t v110 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v110))
        {
          uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(v108, v109, v110);
          __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, v110);
        }
        *(_OWORD *)((char *)v5 + v106[8]) = *(_OWORD *)((char *)v6 + v106[8]);
        *(void *)((char *)v5 + v106[9]) = *(void *)((char *)v6 + v106[9]);
        goto LABEL_524;
      case 0xFu:
        long long v112 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v112;
        long long v113 = v6[3];
        v5[2] = v6[2];
        v5[3] = v113;
        long long v114 = v6[5];
        v5[4] = v6[4];
        v5[5] = v114;
        *((unsigned char *)v5 + 96) = *((unsigned char *)v6 + 96);
        *(_OWORD *)((char *)v5 + 104) = *(_OWORD *)((char *)v6 + 104);
        uint64_t v115 = (int *)type metadata accessor for FlightReservation(0);
        uint64_t v116 = v115[13];
        uint64_t v117 = (char *)v5 + v116;
        uint64_t v118 = (char *)v6 + v116;
        uint64_t v119 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v118, 1, v119))
        {
          uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
          __swift_storeEnumTagSinglePayload((uint64_t)v117, 0, 1, v119);
        }
        uint64_t v266 = v115[14];
        uint64_t v267 = (char *)v5 + v266;
        uint64_t v268 = (char *)v6 + v266;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v266, 1, v119))
        {
          uint64_t v269 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v267, v268, *(void *)(*(void *)(v269 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v267, v268, v119);
          __swift_storeEnumTagSinglePayload((uint64_t)v267, 0, 1, v119);
        }
        *(_OWORD *)((char *)v5 + v115[15]) = *(_OWORD *)((char *)v6 + v115[15]);
        *(_OWORD *)((char *)v5 + v115[16]) = *(_OWORD *)((char *)v6 + v115[16]);
        *(_OWORD *)((char *)v5 + v115[17]) = *(_OWORD *)((char *)v6 + v115[17]);
        uint64_t v312 = v115[18];
        v313 = (char *)v5 + v312;
        uint64_t v314 = (char *)v6 + v312;
        uint64_t v315 = type metadata accessor for DateComponents();
        uint64_t v316 = *(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 32);
        v316(v313, v314, v315);
        v316((char *)v5 + v115[19], (char *)v6 + v115[19], v315);
        *(_OWORD *)((char *)v5 + v115[20]) = *(_OWORD *)((char *)v6 + v115[20]);
        *(_OWORD *)((char *)v5 + v115[21]) = *(_OWORD *)((char *)v6 + v115[21]);
        *(_OWORD *)((char *)v5 + v115[22]) = *(_OWORD *)((char *)v6 + v115[22]);
        *(_OWORD *)((char *)v5 + v115[23]) = *(_OWORD *)((char *)v6 + v115[23]);
        *(_OWORD *)((char *)v5 + v115[24]) = *(_OWORD *)((char *)v6 + v115[24]);
        *(_OWORD *)((char *)v5 + v115[25]) = *(_OWORD *)((char *)v6 + v115[25]);
        *(_OWORD *)((char *)v5 + v115[26]) = *(_OWORD *)((char *)v6 + v115[26]);
        *(_OWORD *)((char *)v5 + v115[27]) = *(_OWORD *)((char *)v6 + v115[27]);
        *(_OWORD *)((char *)v5 + v115[28]) = *(_OWORD *)((char *)v6 + v115[28]);
        *(_OWORD *)((char *)v5 + v115[29]) = *(_OWORD *)((char *)v6 + v115[29]);
        *(_OWORD *)((char *)v5 + v115[30]) = *(_OWORD *)((char *)v6 + v115[30]);
        *(_OWORD *)((char *)v5 + v115[31]) = *(_OWORD *)((char *)v6 + v115[31]);
        *(_OWORD *)((char *)v5 + v115[32]) = *(_OWORD *)((char *)v6 + v115[32]);
        *(void *)((char *)v5 + v115[33]) = *(void *)((char *)v6 + v115[33]);
        *(void *)((char *)v5 + v115[34]) = *(void *)((char *)v6 + v115[34]);
        *(_OWORD *)((char *)v5 + v115[35]) = *(_OWORD *)((char *)v6 + v115[35]);
        *(_OWORD *)((char *)v5 + v115[36]) = *(_OWORD *)((char *)v6 + v115[36]);
        *(_OWORD *)((char *)v5 + v115[37]) = *(_OWORD *)((char *)v6 + v115[37]);
        uint64_t v317 = v115[38];
        uint64_t v318 = (char *)v5 + v317;
        uint64_t v319 = (char *)v6 + v317;
        uint64_t v320 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v319, 1, v320))
        {
          uint64_t v321 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v318, v319, *(void *)(*(void *)(v321 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v320 - 8) + 32))(v318, v319, v320);
          __swift_storeEnumTagSinglePayload((uint64_t)v318, 0, 1, v320);
        }
        *(_OWORD *)((char *)v5 + v115[39]) = *(_OWORD *)((char *)v6 + v115[39]);
        *(_OWORD *)((char *)v5 + v115[40]) = *(_OWORD *)((char *)v6 + v115[40]);
        uint64_t v346 = v115[41];
        uint64_t v347 = (char *)v5 + v346;
        uint64_t v348 = (char *)v6 + v346;
        *(void *)uint64_t v347 = *(void *)v348;
        v347[8] = v348[8];
        *(_OWORD *)((char *)v5 + v115[42]) = *(_OWORD *)((char *)v6 + v115[42]);
        uint64_t v349 = v115[43];
        uint64_t v350 = (char *)v5 + v349;
        size_t v351 = (char *)v6 + v349;
        *(_OWORD *)uint64_t v350 = *(_OWORD *)v351;
        *(void *)(v350 + 13) = *(void *)(v351 + 13);
        *(_OWORD *)((char *)v5 + v115[44]) = *(_OWORD *)((char *)v6 + v115[44]);
        *(_OWORD *)((char *)v5 + v115[45]) = *(_OWORD *)((char *)v6 + v115[45]);
        *(_OWORD *)((char *)v5 + v115[46]) = *(_OWORD *)((char *)v6 + v115[46]);
        *(_OWORD *)((char *)v5 + v115[47]) = *(_OWORD *)((char *)v6 + v115[47]);
        uint64_t v352 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
        *(void *)((char *)v5 + *(int *)(v352 + 48)) = *(void *)((char *)v6 + *(int *)(v352 + 48));
        goto LABEL_524;
      case 0x10u:
        long long v121 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v121;
        long long v122 = v6[3];
        v5[2] = v6[2];
        v5[3] = v122;
        long long v123 = v6[5];
        v5[4] = v6[4];
        v5[5] = v123;
        *((unsigned char *)v5 + 96) = *((unsigned char *)v6 + 96);
        *(_OWORD *)((char *)v5 + 104) = *(_OWORD *)((char *)v6 + 104);
        *(_OWORD *)((char *)v5 + 120) = *(_OWORD *)((char *)v6 + 120);
        uint64_t v124 = (int *)type metadata accessor for HotelReservation(0);
        uint64_t v125 = v124[14];
        uint64_t v126 = (char *)v5 + v125;
        uint64_t v127 = (char *)v6 + v125;
        uint64_t v128 = type metadata accessor for DateComponents();
        if (__swift_getEnumTagSinglePayload((uint64_t)v127, 1, v128))
        {
          uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v126, v127, *(void *)(*(void *)(v129 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v126, v127, v128);
          __swift_storeEnumTagSinglePayload((uint64_t)v126, 0, 1, v128);
        }
        uint64_t v270 = v124[15];
        uint64_t v271 = (char *)v5 + v270;
        uint64_t v272 = (char *)v6 + v270;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v270, 1, v128))
        {
          uint64_t v273 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v271, v272, *(void *)(*(void *)(v273 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v271, v272, v128);
          __swift_storeEnumTagSinglePayload((uint64_t)v271, 0, 1, v128);
        }
        *(_OWORD *)((char *)v5 + v124[16]) = *(_OWORD *)((char *)v6 + v124[16]);
        *(_OWORD *)((char *)v5 + v124[17]) = *(_OWORD *)((char *)v6 + v124[17]);
        *(_OWORD *)((char *)v5 + v124[18]) = *(_OWORD *)((char *)v6 + v124[18]);
        *(_OWORD *)((char *)v5 + v124[19]) = *(_OWORD *)((char *)v6 + v124[19]);
        *(_OWORD *)((char *)v5 + v124[20]) = *(_OWORD *)((char *)v6 + v124[20]);
        *(void *)((char *)v5 + v124[21]) = *(void *)((char *)v6 + v124[21]);
        *(void *)((char *)v5 + v124[22]) = *(void *)((char *)v6 + v124[22]);
        uint64_t v322 = v124[23];
        v323 = (char *)v5 + v322;
        uint64_t v324 = (char *)v6 + v322;
        v323[8] = v324[8];
        *(void *)v323 = *(void *)v324;
        uint64_t v325 = v124[24];
        uint64_t v326 = (char *)v5 + v325;
        v327 = (char *)v6 + v325;
        v326[8] = v327[8];
        *(void *)uint64_t v326 = *(void *)v327;
        *(_OWORD *)((char *)v5 + v124[25]) = *(_OWORD *)((char *)v6 + v124[25]);
        *(_OWORD *)((char *)v5 + v124[26]) = *(_OWORD *)((char *)v6 + v124[26]);
        *(_OWORD *)((char *)v5 + v124[27]) = *(_OWORD *)((char *)v6 + v124[27]);
        *(_OWORD *)((char *)v5 + v124[28]) = *(_OWORD *)((char *)v6 + v124[28]);
        uint64_t v328 = v124[29];
        uint64_t v329 = (char *)v5 + v328;
        uint64_t v330 = (char *)v6 + v328;
        *(void *)uint64_t v329 = *(void *)v330;
        v329[8] = v330[8];
        goto LABEL_524;
      case 0x11u:
        long long v130 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v130;
        long long v131 = v6[3];
        v5[2] = v6[2];
        v5[3] = v131;
        long long v132 = v6[5];
        v5[4] = v6[4];
        v5[5] = v132;
        *((unsigned char *)v5 + 96) = *((unsigned char *)v6 + 96);
        *(_OWORD *)((char *)v5 + 104) = *(_OWORD *)((char *)v6 + 104);
        *(_OWORD *)((char *)v5 + 120) = *(_OWORD *)((char *)v6 + 120);
        uint64_t v133 = (int *)type metadata accessor for RestaurantReservation(0);
        uint64_t v134 = v133[14];
        uint64_t v135 = (char *)v5 + v134;
        uint64_t v136 = (char *)v6 + v134;
        uint64_t v137 = type metadata accessor for DateComponents();
        if (__swift_getEnumTagSinglePayload((uint64_t)v136, 1, v137))
        {
          uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v135, v136, v137);
          __swift_storeEnumTagSinglePayload((uint64_t)v135, 0, 1, v137);
        }
        *(_OWORD *)((char *)v5 + v133[15]) = *(_OWORD *)((char *)v6 + v133[15]);
        *(_OWORD *)((char *)v5 + v133[16]) = *(_OWORD *)((char *)v6 + v133[16]);
        *(_OWORD *)((char *)v5 + v133[17]) = *(_OWORD *)((char *)v6 + v133[17]);
        *(_OWORD *)((char *)v5 + v133[18]) = *(_OWORD *)((char *)v6 + v133[18]);
        *(_OWORD *)((char *)v5 + v133[19]) = *(_OWORD *)((char *)v6 + v133[19]);
        *(void *)((char *)v5 + v133[20]) = *(void *)((char *)v6 + v133[20]);
        *(_OWORD *)((char *)v5 + v133[21]) = *(_OWORD *)((char *)v6 + v133[21]);
        *(_OWORD *)((char *)v5 + v133[22]) = *(_OWORD *)((char *)v6 + v133[22]);
        *(_OWORD *)((char *)v5 + v133[23]) = *(_OWORD *)((char *)v6 + v133[23]);
        goto LABEL_524;
      case 0x12u:
        long long v139 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v139;
        long long v140 = v6[3];
        v5[2] = v6[2];
        v5[3] = v140;
        long long v141 = v6[5];
        v5[4] = v6[4];
        v5[5] = v141;
        long long v142 = v6[7];
        v5[6] = v6[6];
        v5[7] = v142;
        *((unsigned char *)v5 + 128) = *((unsigned char *)v6 + 128);
        *(_WORD *)((char *)v5 + 129) = *(_WORD *)((char *)v6 + 129);
        *((void *)v5 + 17) = *((void *)v6 + 17);
        long long v143 = v6[10];
        v5[9] = v6[9];
        v5[10] = v143;
        long long v144 = v6[12];
        v5[11] = v6[11];
        v5[12] = v144;
        long long v145 = v6[14];
        v5[13] = v6[13];
        v5[14] = v145;
        v5[15] = v6[15];
        *((void *)v5 + 32) = *((void *)v6 + 32);
        *(_OWORD *)((char *)v5 + 264) = *(_OWORD *)((char *)v6 + 264);
        *(_OWORD *)((char *)v5 + 280) = *(_OWORD *)((char *)v6 + 280);
        *(_OWORD *)((char *)v5 + 296) = *(_OWORD *)((char *)v6 + 296);
        *(_OWORD *)((char *)v5 + 312) = *(_OWORD *)((char *)v6 + 312);
        *(_OWORD *)((char *)v5 + 328) = *(_OWORD *)((char *)v6 + 328);
        *(_OWORD *)((char *)v5 + 344) = *(_OWORD *)((char *)v6 + 344);
        *(_OWORD *)((char *)v5 + 360) = *(_OWORD *)((char *)v6 + 360);
        *((unsigned char *)v5 + 384) = *((unsigned char *)v6 + 384);
        *((void *)v5 + 47) = *((void *)v6 + 47);
        *(_OWORD *)((char *)v5 + 392) = *(_OWORD *)((char *)v6 + 392);
        *(_OWORD *)((char *)v5 + 408) = *(_OWORD *)((char *)v6 + 408);
        uint64_t v146 = type metadata accessor for RentalCarReservation(0);
        uint64_t v147 = *(int *)(v146 + 140);
        uint64_t v148 = (char *)v5 + v147;
        uint64_t v149 = (char *)v6 + v147;
        uint64_t v56 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v149, 1, v56))
        {
          uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v148, v149, *(void *)(*(void *)(v150 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v148, v149, v56);
          __swift_storeEnumTagSinglePayload((uint64_t)v148, 0, 1, v56);
        }
        uint64_t v274 = *(int *)(v146 + 144);
        uint64_t v249 = (char *)v5 + v274;
        uint64_t v250 = (char *)v6 + v274;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v274, 1, v56)) {
          goto LABEL_106;
        }
        goto LABEL_136;
      case 0x13u:
        long long v151 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v151;
        long long v152 = v6[3];
        v5[2] = v6[2];
        v5[3] = v152;
        long long v153 = v6[5];
        v5[4] = v6[4];
        v5[5] = v153;
        long long v154 = v6[7];
        v5[6] = v6[6];
        v5[7] = v154;
        *((unsigned char *)v5 + 128) = *((unsigned char *)v6 + 128);
        *(_WORD *)((char *)v5 + 129) = *(_WORD *)((char *)v6 + 129);
        *((void *)v5 + 17) = *((void *)v6 + 17);
        long long v155 = v6[10];
        v5[9] = v6[9];
        v5[10] = v155;
        long long v156 = v6[12];
        v5[11] = v6[11];
        v5[12] = v156;
        *((void *)v5 + 26) = *((void *)v6 + 26);
        *(_OWORD *)((char *)v5 + 216) = *(_OWORD *)((char *)v6 + 216);
        *(_OWORD *)((char *)v5 + 232) = *(_OWORD *)((char *)v6 + 232);
        *(_OWORD *)((char *)v5 + 248) = *(_OWORD *)((char *)v6 + 248);
        *(_OWORD *)((char *)v5 + 264) = *(_OWORD *)((char *)v6 + 264);
        *((unsigned char *)v5 + 296) = *((unsigned char *)v6 + 296);
        uint64_t v157 = *((void *)v6 + 36);
        *((void *)v5 + 35) = *((void *)v6 + 35);
        *((void *)v5 + 36) = v157;
        uint64_t v158 = type metadata accessor for TicketedTransportation(0);
        uint64_t v159 = *(int *)(v158 + 112);
        uint64_t v160 = (char *)v5 + v159;
        uint64_t v161 = (char *)v6 + v159;
        uint64_t v56 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v161, 1, v56))
        {
          uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v160, v161, *(void *)(*(void *)(v162 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v160, v161, v56);
          __swift_storeEnumTagSinglePayload((uint64_t)v160, 0, 1, v56);
        }
        uint64_t v275 = *(int *)(v158 + 116);
        uint64_t v249 = (char *)v5 + v275;
        uint64_t v250 = (char *)v6 + v275;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v275, 1, v56)) {
          goto LABEL_106;
        }
        goto LABEL_136;
      case 0x14u:
        long long v163 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v163;
        long long v164 = v6[3];
        v5[2] = v6[2];
        v5[3] = v164;
        long long v165 = v6[5];
        v5[4] = v6[4];
        v5[5] = v165;
        long long v166 = v6[7];
        v5[6] = v6[6];
        v5[7] = v166;
        *((unsigned char *)v5 + 128) = *((unsigned char *)v6 + 128);
        *(_WORD *)((char *)v5 + 129) = *(_WORD *)((char *)v6 + 129);
        *((void *)v5 + 17) = *((void *)v6 + 17);
        long long v167 = v6[10];
        v5[9] = v6[9];
        v5[10] = v167;
        long long v168 = v6[12];
        v5[11] = v6[11];
        v5[12] = v168;
        long long v169 = v6[14];
        v5[13] = v6[13];
        v5[14] = v169;
        *((void *)v5 + 30) = *((void *)v6 + 30);
        *(_OWORD *)((char *)v5 + 248) = *(_OWORD *)((char *)v6 + 248);
        *(_OWORD *)((char *)v5 + 264) = *(_OWORD *)((char *)v6 + 264);
        *((unsigned char *)v5 + 296) = *((unsigned char *)v6 + 296);
        uint64_t v170 = *((void *)v6 + 36);
        *((void *)v5 + 35) = *((void *)v6 + 35);
        *((void *)v5 + 36) = v170;
        v5[19] = v6[19];
        uint64_t v171 = (int *)type metadata accessor for TicketedShow(0);
        uint64_t v172 = v171[29];
        uint64_t v173 = (char *)v5 + v172;
        uint64_t v174 = (char *)v6 + v172;
        uint64_t v175 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v174, 1, v175))
        {
          uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v173, v174, *(void *)(*(void *)(v176 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 32))(v173, v174, v175);
          __swift_storeEnumTagSinglePayload((uint64_t)v173, 0, 1, v175);
        }
        *(_OWORD *)((char *)v5 + v171[30]) = *(_OWORD *)((char *)v6 + v171[30]);
        uint64_t v276 = v171[31];
        uint64_t v277 = (char *)v5 + v276;
        uint64_t v278 = (char *)v6 + v276;
        uint64_t v279 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v278, 1, v279))
        {
          uint64_t v280 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v277, v278, *(void *)(*(void *)(v280 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v279 - 8) + 32))(v277, v278, v279);
          __swift_storeEnumTagSinglePayload((uint64_t)v277, 0, 1, v279);
        }
        uint64_t v331 = v171[32];
        uint64_t v332 = (char *)v5 + v331;
        uint64_t v333 = (char *)v6 + v331;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v331, 1, v279))
        {
          uint64_t v334 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v332, v333, *(void *)(*(void *)(v334 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v279 - 8) + 32))(v332, v333, v279);
          __swift_storeEnumTagSinglePayload((uint64_t)v332, 0, 1, v279);
        }
        goto LABEL_524;
      case 0x15u:
        long long v177 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v177;
        long long v178 = v6[3];
        v5[2] = v6[2];
        v5[3] = v178;
        long long v179 = v6[5];
        v5[4] = v6[4];
        v5[5] = v179;
        long long v180 = v6[7];
        v5[6] = v6[6];
        v5[7] = v180;
        *((unsigned char *)v5 + 128) = *((unsigned char *)v6 + 128);
        *(_WORD *)((char *)v5 + 129) = *(_WORD *)((char *)v6 + 129);
        *((void *)v5 + 17) = *((void *)v6 + 17);
        long long v181 = v6[10];
        v5[9] = v6[9];
        v5[10] = v181;
        long long v182 = v6[12];
        v5[11] = v6[11];
        v5[12] = v182;
        long long v183 = v6[14];
        v5[13] = v6[13];
        v5[14] = v183;
        long long v184 = v6[16];
        v5[15] = v6[15];
        v5[16] = v184;
        *((unsigned char *)v5 + 280) = *((unsigned char *)v6 + 280);
        *((void *)v5 + 34) = *((void *)v6 + 34);
        v5[18] = v6[18];
        uint64_t v185 = type metadata accessor for Appointment(0);
        uint64_t v186 = *(int *)(v185 + 108);
        uint64_t v187 = (char *)v5 + v186;
        uint64_t v188 = (char *)v6 + v186;
        uint64_t v56 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v188, 1, v56))
        {
          uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v187, v188, *(void *)(*(void *)(v189 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v187, v188, v56);
          __swift_storeEnumTagSinglePayload((uint64_t)v187, 0, 1, v56);
        }
        uint64_t v281 = *(int *)(v185 + 112);
        uint64_t v249 = (char *)v5 + v281;
        uint64_t v250 = (char *)v6 + v281;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v281, 1, v56))
        {
LABEL_106:
          uint64_t v282 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v249, v250, *(void *)(*(void *)(v282 - 8) + 64));
        }
        else
        {
LABEL_136:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v249, v250, v56);
          __swift_storeEnumTagSinglePayload((uint64_t)v249, 0, 1, v56);
        }
        goto LABEL_524;
      case 0x16u:
        long long v190 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v190;
        long long v191 = v6[3];
        v5[2] = v6[2];
        v5[3] = v191;
        long long v192 = v6[5];
        v5[4] = v6[4];
        v5[5] = v192;
        long long v193 = v6[7];
        v5[6] = v6[6];
        v5[7] = v193;
        *((unsigned char *)v5 + 128) = *((unsigned char *)v6 + 128);
        *(_WORD *)((char *)v5 + 129) = *(_WORD *)((char *)v6 + 129);
        *((void *)v5 + 17) = *((void *)v6 + 17);
        long long v194 = v6[10];
        v5[9] = v6[9];
        v5[10] = v194;
        long long v195 = v6[12];
        v5[11] = v6[11];
        v5[12] = v195;
        long long v196 = v6[14];
        v5[13] = v6[13];
        v5[14] = v196;
        v5[15] = v6[15];
        uint64_t v197 = (int *)type metadata accessor for Party(0);
        uint64_t v198 = v197[24];
        uint64_t v199 = (char *)v5 + v198;
        uint64_t v200 = (char *)v6 + v198;
        uint64_t v201 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v200, 1, v201))
        {
          uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v199, v200, *(void *)(*(void *)(v202 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 32))(v199, v200, v201);
          __swift_storeEnumTagSinglePayload((uint64_t)v199, 0, 1, v201);
        }
        uint64_t v283 = v197[25];
        uint64_t v284 = (char *)v5 + v283;
        uint64_t v285 = (char *)v6 + v283;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v283, 1, v201))
        {
          uint64_t v286 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v284, v285, *(void *)(*(void *)(v286 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 32))(v284, v285, v201);
          __swift_storeEnumTagSinglePayload((uint64_t)v284, 0, 1, v201);
        }
        uint64_t v335 = v197[26];
        uint64_t v82 = (char *)v5 + v335;
        uint64_t v83 = (char *)v6 + v335;
        uint64_t v84 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v84)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 0x17u:
        long long v203 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v203;
        long long v204 = v6[3];
        v5[2] = v6[2];
        v5[3] = v204;
        long long v205 = v6[5];
        v5[4] = v6[4];
        v5[5] = v205;
        long long v206 = v6[7];
        v5[6] = v6[6];
        v5[7] = v206;
        *((unsigned char *)v5 + 128) = *((unsigned char *)v6 + 128);
        *(_WORD *)((char *)v5 + 129) = *(_WORD *)((char *)v6 + 129);
        *((void *)v5 + 17) = *((void *)v6 + 17);
        long long v207 = v6[10];
        v5[9] = v6[9];
        v5[10] = v207;
        long long v208 = v6[12];
        v5[11] = v6[11];
        v5[12] = v208;
        v5[13] = v6[13];
        uint64_t v209 = (int *)type metadata accessor for Trip(0);
        uint64_t v210 = v209[22];
        uint64_t v211 = (char *)v5 + v210;
        uint64_t v212 = (char *)v6 + v210;
        uint64_t v213 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v212, 1, v213))
        {
          uint64_t v214 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v211, v212, *(void *)(*(void *)(v214 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 32))(v211, v212, v213);
          __swift_storeEnumTagSinglePayload((uint64_t)v211, 0, 1, v213);
        }
        uint64_t v287 = v209[23];
        uint64_t v288 = (char *)v5 + v287;
        uint64_t v289 = (char *)v6 + v287;
        if (__swift_getEnumTagSinglePayload((uint64_t)v6 + v287, 1, v213))
        {
          uint64_t v290 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v288, v289, *(void *)(*(void *)(v290 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 32))(v288, v289, v213);
          __swift_storeEnumTagSinglePayload((uint64_t)v288, 0, 1, v213);
        }
        uint64_t v336 = v209[24];
        uint64_t v337 = (char *)v5 + v336;
        v338 = (char *)v6 + v336;
        *(void *)uint64_t v337 = *(void *)v338;
        v337[8] = v338[8];
        uint64_t v339 = v209[25];
        uint64_t v82 = (char *)v5 + v339;
        uint64_t v83 = (char *)v6 + v339;
        uint64_t v84 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v84))
        {
LABEL_146:
          uint64_t v340 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v82, v83, *(void *)(*(void *)(v340 - 8) + 64));
        }
        else
        {
LABEL_128:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
          __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v84);
        }
        goto LABEL_524;
      case 0x18u:
        long long v215 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v215;
        v5[2] = v6[2];
        uint64_t v216 = (int *)type metadata accessor for GlobalItem();
        uint64_t v217 = v216[7];
        uint64_t v218 = (char *)v5 + v217;
        uint64_t v219 = (char *)v6 + v217;
        uint64_t v220 = type metadata accessor for GlobalDialog();
        if (__swift_getEnumTagSinglePayload((uint64_t)v219, 1, v220))
        {
          uint64_t v221 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
          memcpy(v218, v219, *(void *)(*(void *)(v221 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 32))(v218, v219, v220);
          __swift_storeEnumTagSinglePayload((uint64_t)v218, 0, 1, v220);
        }
        *(_OWORD *)((char *)v5 + v216[8]) = *(_OWORD *)((char *)v6 + v216[8]);
        *((unsigned char *)v5 + v216[9]) = *((unsigned char *)v6 + v216[9]);
        uint64_t v291 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
        *(void *)((char *)v5 + *(int *)(v291 + 48)) = *(void *)((char *)v6 + *(int *)(v291 + 48));
        goto LABEL_524;
      case 0x1Au:
        long long v222 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v222;
        v5[2] = v6[2];
        *((void *)v5 + 6) = *((void *)v6 + 6);
        uint64_t v223 = (int *)type metadata accessor for Answer(0);
        uint64_t v224 = v223[9];
        uint64_t v225 = (char *)v5 + v224;
        uint64_t v226 = (char *)v6 + v224;
        uint64_t v227 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v226, 1, v227))
        {
          uint64_t v228 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v225, v226, *(void *)(*(void *)(v228 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 32))(v225, v226, v227);
          __swift_storeEnumTagSinglePayload((uint64_t)v225, 0, 1, v227);
        }
        *((unsigned char *)v5 + v223[10]) = *((unsigned char *)v6 + v223[10]);
        *(_OWORD *)((char *)v5 + v223[11]) = *(_OWORD *)((char *)v6 + v223[11]);
LABEL_524:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
    *(void *)((char *)v5 + *(int *)(v7 + 20)) = *(void *)((char *)v6 + *(int *)(v7 + 20));
    *(_OWORD *)((char *)v5 + *(int *)(v7 + 24)) = *(_OWORD *)((char *)v6 + *(int *)(v7 + 24));
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

#error "257FC478C: too big function (funcsize=0)"

uint64_t getEnumTagSinglePayload for IdCardEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_257FD5EA4);
}

uint64_t sub_257FD5EA4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 32);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for IdCardEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_257FD5F44);
}

void *sub_257FD5F44(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 32);
    return (void *)__swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

void type metadata completion function for IdCardEntity()
{
  type metadata accessor for SearchResult?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for SearchResult?()
{
  if (!lazy cache variable for type metadata for SearchResult?)
  {
    type metadata accessor for SearchResult(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for SearchResult?);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for CardSubType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x257FD6194);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for CardSubType()
{
}

uint64_t destroy for PersonalCardEntity(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  unint64_t v3 = *(void *)(a1 + 176);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 168);
    return outlined consume of Data._Representation(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for PersonalCardEntity(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = a2[11];
  *(void *)(a1 + 80) = a2[10];
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = a2[13];
  *(void *)(a1 + 96) = a2[12];
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = a2[15];
  *(void *)(a1 + 112) = a2[14];
  *(void *)(a1 + 120) = v10;
  uint64_t v11 = a2[17];
  *(void *)(a1 + 128) = a2[16];
  *(void *)(a1 + 136) = v11;
  uint64_t v12 = a2[19];
  *(void *)(a1 + 144) = a2[18];
  *(void *)(a1 + 152) = v12;
  *(void *)(a1 + 160) = a2[20];
  uint64_t v16 = a2 + 21;
  unint64_t v13 = a2[22];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v13 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 168) = *(_OWORD *)v16;
  }
  else
  {
    uint64_t v14 = *v16;
    outlined copy of Data._Representation(*v16, v13);
    *(void *)(a1 + 168) = v14;
    *(void *)(a1 + 176) = v13;
  }
  return a1;
}

void *assignWithCopy for PersonalCardEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  a1[14] = a2[14];
  swift_retain();
  swift_release();
  a1[15] = a2[15];
  swift_retain();
  swift_release();
  a1[16] = a2[16];
  swift_retain();
  swift_release();
  a1[17] = a2[17];
  swift_retain();
  swift_release();
  a1[18] = a2[18];
  swift_retain();
  swift_release();
  a1[19] = a2[19];
  swift_retain();
  swift_release();
  a1[20] = a2[20];
  swift_retain();
  swift_release();
  uint64_t v4 = a2 + 21;
  unint64_t v5 = a2[22];
  if (a1[22] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      outlined copy of Data._Representation(*v4, v5);
      uint64_t v8 = a1[21];
      unint64_t v9 = a1[22];
      a1[21] = v7;
      a1[22] = v5;
      outlined consume of Data._Representation(v8, v9);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 21));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 21) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  outlined copy of Data._Representation(*v4, v5);
  a1[21] = v6;
  a1[22] = v5;
  return a1;
}

void *__swift_memcpy184_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB8uLL);
}

void *assignWithTake for PersonalCardEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  a1[9] = a2[9];
  swift_release();
  a1[10] = a2[10];
  swift_release();
  a1[11] = a2[11];
  swift_release();
  a1[12] = a2[12];
  swift_release();
  a1[13] = a2[13];
  swift_release();
  a1[14] = a2[14];
  swift_release();
  a1[15] = a2[15];
  swift_release();
  a1[16] = a2[16];
  swift_release();
  a1[17] = a2[17];
  swift_release();
  a1[18] = a2[18];
  swift_release();
  a1[19] = a2[19];
  swift_release();
  a1[20] = a2[20];
  swift_release();
  uint64_t v4 = a2 + 21;
  unint64_t v5 = a1[22];
  if (v5 >> 60 != 15)
  {
    unint64_t v6 = a2[22];
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = a1[21];
      a1[21] = *v4;
      a1[22] = v6;
      outlined consume of Data._Representation(v7, v5);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 21));
  }
  *(_OWORD *)(a1 + 21) = *(_OWORD *)v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalCardEntity(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 184))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonalCardEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 184) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 184) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for PersonalCardEntity()
{
}

uint64_t destroy for BusinessCardEntity(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  unint64_t v3 = *(void *)(a1 + 80);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 72);
    return outlined consume of Data._Representation(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for BusinessCardEntity(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = a2[8];
  uint64_t v10 = a2 + 9;
  unint64_t v7 = a2[10];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v10;
  }
  else
  {
    uint64_t v8 = *v10;
    outlined copy of Data._Representation(*v10, v7);
    *(void *)(a1 + 72) = v8;
    *(void *)(a1 + 80) = v7;
  }
  return a1;
}

void *assignWithCopy for BusinessCardEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  uint64_t v4 = a2 + 9;
  unint64_t v5 = a2[10];
  if (a1[10] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      outlined copy of Data._Representation(*v4, v5);
      uint64_t v8 = a1[9];
      unint64_t v9 = a1[10];
      a1[9] = v7;
      a1[10] = v5;
      outlined consume of Data._Representation(v8, v9);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 9));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 9) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  outlined copy of Data._Representation(*v4, v5);
  a1[9] = v6;
  a1[10] = v5;
  return a1;
}

void *__swift_memcpy88_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

void *assignWithTake for BusinessCardEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  uint64_t v4 = a2 + 9;
  unint64_t v5 = a1[10];
  if (v5 >> 60 != 15)
  {
    unint64_t v6 = a2[10];
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = a1[9];
      a1[9] = *v4;
      a1[10] = v6;
      outlined consume of Data._Representation(v7, v5);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 9));
  }
  *(_OWORD *)(a1 + 9) = *(_OWORD *)v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for BusinessCardEntity(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BusinessCardEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for BusinessCardEntity()
{
}

unsigned char *storeEnumTagSinglePayload for Sex(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x257FD6F44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for Sex()
{
}

uint64_t outlined copy of BusinessCardEntity?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return outlined copy of Data?(a10, a11);
  }
  return result;
}

void *outlined release of PersonalCardEntity?(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22]);
  return a1;
}

uint64_t outlined copy of PersonalCardEntity?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unint64_t a23)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return outlined copy of Data?(a22, a23);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_16()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_4_14()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_6_14()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_7_15()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_10_17()
{
  return static EntityProperty<>.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_11_11(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_12_13@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 680) = a1;
  return outlined retain of PersonalCardEntity(v1 + 488);
}

uint64_t OUTLINED_FUNCTION_14_14()
{
  return outlined init with copy of SearchResult?(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_15_12()
{
  outlined copy of Data?(0, 0xF000000000000000);
  return v0 - 104;
}

uint64_t OUTLINED_FUNCTION_22_12()
{
  return static EntityProperty<>.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_23_7()
{
  return 0x20676E6975737349;
}

uint64_t OUTLINED_FUNCTION_24_8()
{
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t OUTLINED_FUNCTION_26_11()
{
  return 0x20676E6975737349;
}

uint64_t OUTLINED_FUNCTION_27_9()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_28_7()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_29_8()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_30_10()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_31_7@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return outlined init with copy of SearchResult?(v3, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
}

uint64_t OUTLINED_FUNCTION_32_7()
{
  return outlined consume of Data?(0, 0xF000000000000000);
}

uint64_t OUTLINED_FUNCTION_33_5()
{
  return outlined destroy of SearchResult?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_34_6()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

__n128 OUTLINED_FUNCTION_35_6(__n128 *a1)
{
  return a1[2];
}

uint64_t OUTLINED_FUNCTION_36_5()
{
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  return __swift_storeEnumTagSinglePayload(v0, 1, 1, v3);
}

uint64_t OUTLINED_FUNCTION_37_6()
{
  return outlined init with copy of IdCardEntity(v0, v1);
}

uint64_t OUTLINED_FUNCTION_38_4()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_39_2()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_40_5()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_41_6()
{
  outlined copy of Data?(v0, v1);
  return v0;
}

uint64_t OUTLINED_FUNCTION_42_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_44_6()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t OUTLINED_FUNCTION_45_3@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 104) = v1;
  *(void *)(v2 - 96) = a1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_47_4()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_48_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_50_6()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_52_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return __swift_instantiateConcreteTypeFromMangledName(a5);
}

uint64_t OUTLINED_FUNCTION_53_3(uint64_t a1)
{
  *uint64_t v1 = a1;
  return EntityProperty.wrappedValue.modify();
}

uint64_t OUTLINED_FUNCTION_54_3(uint64_t a1)
{
  *uint64_t v1 = a1;
  return EntityProperty.wrappedValue.modify();
}

uint64_t OUTLINED_FUNCTION_55_4(uint64_t a1)
{
  *uint64_t v1 = a1;
  return EntityProperty.wrappedValue.modify();
}

void OUTLINED_FUNCTION_56_4(uint64_t a1)
{
  outlined copy of Data?(a1, v1);
  JUMPOUT(0x25A2C5090);
}

uint64_t OUTLINED_FUNCTION_57_1()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_58_3()
{
  outlined consume of Data?(v3, v2);
  return outlined consume of Data?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_59_4()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_60_2()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_61_2()
{
  return __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_62_2()
{
  uint64_t v3 = *(void *)(v0 + 248);
  return outlined init with copy of IdCardEntity(v1, v3);
}

uint64_t OUTLINED_FUNCTION_63_2()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_65_2()
{
  JUMPOUT(0x25A2C4890);
}

uint64_t OUTLINED_FUNCTION_66_2()
{
  return v0;
}

void OUTLINED_FUNCTION_67_2()
{
  JUMPOUT(0x25A2C4900);
}

void OUTLINED_FUNCTION_68_1()
{
  JUMPOUT(0x25A2C4900);
}

uint64_t OUTLINED_FUNCTION_69_2(uint64_t a1)
{
  return outlined init with copy of SearchResult?(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_71_2()
{
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
  return type metadata accessor for DisplayRepresentation.Image();
}

uint64_t OUTLINED_FUNCTION_72_1()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void specialized CardDisplayable.card.setter()
{
  OUTLINED_FUNCTION_37_7();
  if (v4)
  {
    SFCard.data.getter();
    OUTLINED_FUNCTION_31_8();
  }
  else
  {
    OUTLINED_FUNCTION_36_6();
  }
  outlined consume of Data?(*(void *)(v0 + 24), *(void *)(v0 + 32));

  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v3;
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_37_7();
  if (v4)
  {
    SFCard.data.getter();
    OUTLINED_FUNCTION_31_8();
  }
  else
  {
    OUTLINED_FUNCTION_36_6();
  }
  outlined consume of Data?(*(void *)(v0 + 168), *(void *)(v0 + 176));

  *(void *)(v0 + 168) = v2;
  *(void *)(v0 + 176) = v3;
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_37_7();
  if (v4)
  {
    SFCard.data.getter();
    OUTLINED_FUNCTION_31_8();
  }
  else
  {
    OUTLINED_FUNCTION_36_6();
  }
  outlined consume of Data?(*(void *)(v0 + 72), *(void *)(v0 + 80));

  *(void *)(v0 + 72) = v2;
  *(void *)(v0 + 80) = v3;
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_37_7();
  if (v4)
  {
    SFCard.data.getter();
    OUTLINED_FUNCTION_31_8();
  }
  else
  {
    OUTLINED_FUNCTION_36_6();
  }
  outlined consume of Data?(*(void *)(v0 + 64), *(void *)(v0 + 72));

  *(void *)(v0 + 64) = v2;
  *(void *)(v0 + 72) = v3;
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_37_7();
  if (v4)
  {
    SFCard.data.getter();
    OUTLINED_FUNCTION_31_8();
  }
  else
  {
    OUTLINED_FUNCTION_36_6();
  }
  outlined consume of Data?(*(void *)(v0 + 8), *(void *)(v0 + 16));

  *(void *)(v0 + 8) = v2;
  *(void *)(v0 + 16) = v3;
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_37_7();
  if (v4)
  {
    SFCard.data.getter();
    OUTLINED_FUNCTION_31_8();
  }
  else
  {
    OUTLINED_FUNCTION_36_6();
  }
  outlined consume of Data?(*(void *)(v0 + 112), *(void *)(v0 + 120));

  *(void *)(v0 + 112) = v2;
  *(void *)(v0 + 120) = v3;
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_37_7();
  if (v4)
  {
    SFCard.data.getter();
    OUTLINED_FUNCTION_31_8();
  }
  else
  {
    OUTLINED_FUNCTION_36_6();
  }
  outlined consume of Data?(*(void *)(v0 + 104), *(void *)(v0 + 112));

  *(void *)(v0 + 104) = v2;
  *(void *)(v0 + 112) = v3;
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_37_7();
  if (v4)
  {
    SFCard.data.getter();
    OUTLINED_FUNCTION_31_8();
  }
  else
  {
    OUTLINED_FUNCTION_36_6();
  }
  outlined consume of Data?(*(void *)(v0 + 192), *(void *)(v0 + 200));

  *(void *)(v0 + 192) = v2;
  *(void *)(v0 + 200) = v3;
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_37_7();
  if (v4)
  {
    SFCard.data.getter();
    OUTLINED_FUNCTION_31_8();
  }
  else
  {
    OUTLINED_FUNCTION_36_6();
  }
  outlined consume of Data?(*(void *)(v0 + 128), *(void *)(v0 + 136));

  *(void *)(v0 + 128) = v2;
  *(void *)(v0 + 136) = v3;
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_37_7();
  if (v4)
  {
    SFCard.data.getter();
    OUTLINED_FUNCTION_31_8();
  }
  else
  {
    OUTLINED_FUNCTION_36_6();
  }
  outlined consume of Data?(*(void *)(v0 + 80), *(void *)(v0 + 88));

  *(void *)(v0 + 80) = v2;
  *(void *)(v0 + 88) = v3;
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_37_7();
  if (v4)
  {
    SFCard.data.getter();
    OUTLINED_FUNCTION_31_8();
  }
  else
  {
    OUTLINED_FUNCTION_36_6();
  }
  outlined consume of Data?(*(void *)(v0 + 88), *(void *)(v0 + 96));

  *(void *)(v0 + 88) = v2;
  *(void *)(v0 + 96) = v3;
}

void EventEntity.init(item:card:encodedSearchableItem:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v153 = v1;
  id v154 = v2;
  uint64_t v158 = v3;
  long long v155 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_184_0();
  uint64_t v8 = OUTLINED_FUNCTION_22_13(v7);
  uint64_t v9 = type metadata accessor for Trip(v8);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_185_0();
  uint64_t v151 = v11;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_27_10();
  uint64_t v14 = OUTLINED_FUNCTION_22_13(v13);
  uint64_t v15 = type metadata accessor for Party(v14);
  uint64_t v16 = OUTLINED_FUNCTION_81(v15);
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_185_0();
  uint64_t v150 = v17;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_27_10();
  uint64_t v20 = OUTLINED_FUNCTION_22_13(v19);
  uint64_t v21 = type metadata accessor for Appointment(v20);
  uint64_t v22 = OUTLINED_FUNCTION_81(v21);
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_185_0();
  uint64_t v148 = v23;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_27_10();
  uint64_t v26 = OUTLINED_FUNCTION_22_13(v25);
  uint64_t v27 = type metadata accessor for TicketedShow(v26);
  uint64_t v28 = OUTLINED_FUNCTION_81(v27);
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_185_0();
  uint64_t v146 = v29;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_27_10();
  uint64_t v32 = OUTLINED_FUNCTION_22_13(v31);
  uint64_t v33 = type metadata accessor for TicketedTransportation(v32);
  uint64_t v34 = OUTLINED_FUNCTION_81(v33);
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_185_0();
  uint64_t v144 = v35;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v36);
  OUTLINED_FUNCTION_27_10();
  uint64_t v38 = OUTLINED_FUNCTION_22_13(v37);
  uint64_t v39 = type metadata accessor for RentalCarReservation(v38);
  uint64_t v40 = OUTLINED_FUNCTION_81(v39);
  MEMORY[0x270FA5388](v40);
  OUTLINED_FUNCTION_185_0();
  uint64_t v142 = v41;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v42);
  OUTLINED_FUNCTION_27_10();
  uint64_t v44 = OUTLINED_FUNCTION_22_13(v43);
  uint64_t v45 = type metadata accessor for RestaurantReservation(v44);
  uint64_t v46 = OUTLINED_FUNCTION_81(v45);
  MEMORY[0x270FA5388](v46);
  OUTLINED_FUNCTION_185_0();
  uint64_t v140 = v47;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v48);
  OUTLINED_FUNCTION_27_10();
  uint64_t v50 = OUTLINED_FUNCTION_22_13(v49);
  uint64_t v51 = type metadata accessor for HotelReservation(v50);
  uint64_t v52 = OUTLINED_FUNCTION_81(v51);
  MEMORY[0x270FA5388](v52);
  OUTLINED_FUNCTION_185_0();
  uint64_t v138 = v53;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v54);
  uint64_t v56 = (char *)&v138 - v55;
  uint64_t v57 = type metadata accessor for FlightReservation(0);
  uint64_t v58 = OUTLINED_FUNCTION_81(v57);
  MEMORY[0x270FA5388](v58);
  OUTLINED_FUNCTION_95_1();
  uint64_t v61 = v59 - v60;
  MEMORY[0x270FA5388](v62);
  uint64_t v64 = (char *)&v138 - v63;
  type metadata accessor for SearchResultItem(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v65);
  OUTLINED_FUNCTION_95_1();
  uint64_t v68 = v66 - v67;
  MEMORY[0x270FA5388](v69);
  OUTLINED_FUNCTION_94_2();
  MEMORY[0x270FA5388](v70);
  uint64_t v72 = (char *)&v138 - v71;
  uint64_t v73 = type metadata accessor for LocalizedStringResource();
  uint64_t v74 = OUTLINED_FUNCTION_81(v73);
  MEMORY[0x270FA5388](v74);
  OUTLINED_FUNCTION_15();
  uint64_t v77 = v76 - v75;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<EventSubType>);
  OUTLINED_FUNCTION_11_12();
  unint64_t v78 = lazy protocol witness table accessor for type EventSubType and conformance EventSubType();
  *(void *)&long long v162 = MEMORY[0x25A2C4880](v77, v78);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<FlightReservationEntity?>);
  OUTLINED_FUNCTION_44_7();
  lazy protocol witness table accessor for type FlightReservationEntity and conformance FlightReservationEntity();
  OUTLINED_FUNCTION_74_2();
  v161.n128_u64[0] = v79;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<GenericEventEntity?>);
  OUTLINED_FUNCTION_20_9();
  lazy protocol witness table accessor for type GenericEventEntity and conformance GenericEventEntity();
  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_115_1(v80);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<HotelReservationEntity?>);
  OUTLINED_FUNCTION_44_7();
  lazy protocol witness table accessor for type HotelReservationEntity and conformance HotelReservationEntity();
  OUTLINED_FUNCTION_74_2();
  *(void *)&long long v159 = v81;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<RestaurantReservationEntity?>);
  OUTLINED_FUNCTION_44_7();
  lazy protocol witness table accessor for type RestaurantReservationEntity and conformance RestaurantReservationEntity();
  OUTLINED_FUNCTION_74_2();
  *(void *)&long long v157 = v82;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedTransportationEntity?>);
  OUTLINED_FUNCTION_44_7();
  lazy protocol witness table accessor for type TicketedTransportationEntity and conformance TicketedTransportationEntity();
  OUTLINED_FUNCTION_74_2();
  uint64_t v156 = v83;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<VehicleReservationEntity?>);
  OUTLINED_FUNCTION_44_7();
  lazy protocol witness table accessor for type VehicleReservationEntity and conformance VehicleReservationEntity();
  OUTLINED_FUNCTION_74_2();
  uint64_t v85 = v84;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedShowEntity?>);
  OUTLINED_FUNCTION_20_9();
  unint64_t v86 = lazy protocol witness table accessor for type TicketedShowEntity and conformance TicketedShowEntity();
  uint64_t v87 = v77;
  uint64_t v88 = v158;
  uint64_t v89 = MEMORY[0x25A2C4890](v87, v86);
  uint64_t v90 = OUTLINED_FUNCTION_121_1();
  _s10OmniSearch0B10ResultItemOWOcTm_0(v90, v91, v92);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0xFu:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
      swift_bridgeObjectRelease();
      outlined init with take of Trip((uint64_t)v72, (uint64_t)v64, (void (*)(void))type metadata accessor for FlightReservation);
      _s10OmniSearch0B10ResultItemOWOcTm_0((uint64_t)v64, v61, (void (*)(void))type metadata accessor for FlightReservation);
      EventEntity.init(reservation:)();
      uint64_t v93 = type metadata accessor for FlightReservation;
      uint64_t v94 = (uint64_t)v64;
      goto LABEL_16;
    case 0x10u:
      outlined init with take of Trip((uint64_t)v72, (uint64_t)v56, (void (*)(void))type metadata accessor for HotelReservation);
      OUTLINED_FUNCTION_55_5((uint64_t)v56, (void (*)(void))type metadata accessor for HotelReservation, (uint64_t)&v163);
      OUTLINED_FUNCTION_51_6();
      EventEntity.init(reservation:)();
      uint64_t v93 = type metadata accessor for HotelReservation;
      uint64_t v94 = (uint64_t)v56;
      goto LABEL_16;
    case 0x11u:
      OUTLINED_FUNCTION_67_3((uint64_t)v72, (void (*)(void))type metadata accessor for RestaurantReservation, (uint64_t)&v164);
      OUTLINED_FUNCTION_55_5((uint64_t)v72, (void (*)(void))type metadata accessor for RestaurantReservation, (uint64_t)&v164 + 8);
      uint64_t v103 = OUTLINED_FUNCTION_51_6();
      EventEntity.init(reservation:)(v103, v104, v105, v106, v107, v108, v109, v110, v138, v139, v140, v141, v142, v143, v144, v145, v146, v147, v148,
        v149);
      uint64_t v111 = type metadata accessor for RestaurantReservation;
      goto LABEL_15;
    case 0x12u:
      OUTLINED_FUNCTION_67_3((uint64_t)v72, (void (*)(void))type metadata accessor for RentalCarReservation, (uint64_t)&v165);
      OUTLINED_FUNCTION_55_5((uint64_t)v72, (void (*)(void))type metadata accessor for RentalCarReservation, (uint64_t)&v166);
      OUTLINED_FUNCTION_51_6();
      EventEntity.init(reservation:)();
      uint64_t v111 = type metadata accessor for RentalCarReservation;
      goto LABEL_15;
    case 0x13u:
      OUTLINED_FUNCTION_67_3((uint64_t)v72, (void (*)(void))type metadata accessor for TicketedTransportation, (uint64_t)&v167);
      OUTLINED_FUNCTION_55_5((uint64_t)v72, (void (*)(void))type metadata accessor for TicketedTransportation, (uint64_t)&v168);
      uint64_t v112 = OUTLINED_FUNCTION_51_6();
      EventEntity.init(reservation:)(v112, v113, v114, v115, v116, v117, v118, v119, v138, v139, v140, v141, v142, v143, v144, v145, v146, v147, v148,
        v149);
      uint64_t v111 = type metadata accessor for TicketedTransportation;
      goto LABEL_15;
    case 0x14u:
      OUTLINED_FUNCTION_67_3((uint64_t)v72, (void (*)(void))type metadata accessor for TicketedShow, (uint64_t)&v169);
      OUTLINED_FUNCTION_55_5((uint64_t)v72, (void (*)(void))type metadata accessor for TicketedShow, (uint64_t)&v170);
      OUTLINED_FUNCTION_51_6();
      EventEntity.init(reservation:)();
      uint64_t v111 = type metadata accessor for TicketedShow;
      goto LABEL_15;
    case 0x15u:
      OUTLINED_FUNCTION_67_3((uint64_t)v72, (void (*)(void))type metadata accessor for Appointment, (uint64_t)&v170 + 8);
      OUTLINED_FUNCTION_55_5((uint64_t)v72, (void (*)(void))type metadata accessor for Appointment, (uint64_t)&v171);
      OUTLINED_FUNCTION_51_6();
      EventEntity.init(appointment:)();
      uint64_t v111 = type metadata accessor for Appointment;
      goto LABEL_15;
    case 0x16u:
      OUTLINED_FUNCTION_67_3((uint64_t)v72, (void (*)(void))type metadata accessor for Party, (uint64_t)&v171.n128_i64[1]);
      OUTLINED_FUNCTION_55_5((uint64_t)v72, (void (*)(void))type metadata accessor for Party, (uint64_t)&v172);
      OUTLINED_FUNCTION_51_6();
      EventEntity.init(party:)();
      uint64_t v111 = type metadata accessor for Party;
      goto LABEL_15;
    case 0x17u:
      OUTLINED_FUNCTION_67_3((uint64_t)v72, (void (*)(void))type metadata accessor for Trip, (uint64_t)&v172 + 8);
      OUTLINED_FUNCTION_55_5((uint64_t)v72, (void (*)(void))type metadata accessor for Trip, (uint64_t)&v173);
      OUTLINED_FUNCTION_51_6();
      EventEntity.init(trip:)();
      uint64_t v111 = type metadata accessor for Trip;
LABEL_15:
      uint64_t v93 = v111;
      uint64_t v94 = (uint64_t)v72;
LABEL_16:
      _s10OmniSearch0B10ResultItemOWOhTm_2(v94, (void (*)(void))v93);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      OUTLINED_FUNCTION_113_2();
      OUTLINED_FUNCTION_86_2();
      OUTLINED_FUNCTION_116_2();
      swift_release();
      OUTLINED_FUNCTION_32_7();
      long long v162 = v170;
      __n128 v161 = v171;
      long long v160 = v172;
      long long v159 = v173;
      id v120 = v154;
      if (v154)
      {
        long long v157 = v174;
        id v121 = v154;
        uint64_t v122 = SFCard.data.getter();
        unint64_t v124 = v123;
        outlined consume of Data?(v157, *((unint64_t *)&v157 + 1));
      }
      else
      {
        outlined consume of Data?(v174, *((unint64_t *)&v174 + 1));
        uint64_t v122 = 0;
        unint64_t v124 = 0xF000000000000000;
      }
      __n128 v125 = OUTLINED_FUNCTION_87_2();
      long long v170 = v126;
      __n128 v171 = v125;
      long long v172 = v160;
      long long v173 = v159;
      *(void *)&long long v174 = v122;
      *((void *)&v174 + 1) = v124;
      EventEntity.representedEntity.getter();
      if (v166)
      {
        outlined init with take of AppEntity & CardDisplayable & SpotlightItemProviding(&v164, (uint64_t)&v170);
        uint64_t v127 = v153;
        uint64_t v128 = v152;
        outlined init with copy of PQAVerificationModelProtocol?(v153, v152, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
        unint64_t v129 = v171.n128_u64[1];
        uint64_t v130 = v173;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v170, v171.n128_i64[1]);
        OUTLINED_FUNCTION_77_2();
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v131 + 16))(v128, v129, v130);
        unint64_t v132 = v171.n128_u64[1];
        uint64_t v133 = *((void *)&v172 + 1);
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v170, v171.n128_i64[1]);
        (*(void (**)(id, unint64_t))(*(void *)(v133 + 16) + 16))(v120, v132);
        outlined destroy of SearchResult?(v127, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
        _s10OmniSearch0B10ResultItemOWOhTm_2(v88, (void (*)(void))type metadata accessor for SearchResultItem);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v170);
      }
      else
      {

        outlined destroy of SearchResult?(v153, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
        _s10OmniSearch0B10ResultItemOWOhTm_2(v88, (void (*)(void))type metadata accessor for SearchResultItem);
        outlined destroy of SearchResult?((uint64_t)&v164, &demangling cache variable for type metadata for (AppEntity & CardDisplayable & SpotlightItemProviding)?);
      }
      uint64_t v134 = v155;
      __n128 v135 = v161;
      *long long v155 = v162;
      v134[1] = v135;
      long long v136 = v159;
      v134[2] = v160;
      v134[3] = v136;
      *((void *)v134 + 8) = v122;
      *((void *)v134 + 9) = v124;
      break;
    default:
      uint64_t v152 = v89;
      if (one-time initialization token for search != -1) {
        swift_once();
      }
      uint64_t v95 = type metadata accessor for Logger();
      __swift_project_value_buffer(v95, (uint64_t)static Logging.search);
      uint64_t v96 = v0;
      _s10OmniSearch0B10ResultItemOWOcTm_0(v88, v0, (void (*)(void))type metadata accessor for SearchResultItem);
      uint64_t v97 = Logger.logObject.getter();
      os_log_type_t v98 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v97, v98))
      {
        uint64_t v99 = (uint8_t *)swift_slowAlloc();
        uint64_t v100 = swift_slowAlloc();
        uint64_t v151 = v85;
        *(void *)&long long v170 = v100;
        *(_DWORD *)uint64_t v99 = 136315138;
        _s10OmniSearch0B10ResultItemOWOcTm_0(v96, v68, (void (*)(void))type metadata accessor for SearchResultItem);
        uint64_t v101 = String.init<A>(describing:)();
        *(void *)&long long v164 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v101, v102, (uint64_t *)&v170);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _s10OmniSearch0B10ResultItemOWOhTm_2(v96, (void (*)(void))type metadata accessor for SearchResultItem);
        _os_log_impl(&dword_257DC6000, v97, v98, "Unhandled event type: %s - dropping", v99, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_34();
        OUTLINED_FUNCTION_34();

        outlined destroy of SearchResult?(v153, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
        _s10OmniSearch0B10ResultItemOWOhTm_2(v158, (void (*)(void))type metadata accessor for SearchResultItem);
      }
      else
      {

        _s10OmniSearch0B10ResultItemOWOhTm_2(v96, (void (*)(void))type metadata accessor for SearchResultItem);
        outlined destroy of SearchResult?(v153, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
        _s10OmniSearch0B10ResultItemOWOhTm_2(v88, (void (*)(void))type metadata accessor for SearchResultItem);
      }
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      OUTLINED_FUNCTION_113_2();
      OUTLINED_FUNCTION_86_2();
      OUTLINED_FUNCTION_116_2();
      swift_release();
      OUTLINED_FUNCTION_32_7();
      _s10OmniSearch0B10ResultItemOWOhTm_2((uint64_t)v72, (void (*)(void))type metadata accessor for SearchResultItem);
      uint64_t v137 = v155;
      *long long v155 = 0u;
      v137[1] = 0u;
      v137[2] = 0u;
      v137[3] = 0u;
      v137[4] = 0u;
      break;
  }
  OUTLINED_FUNCTION_119_0();
}

void EventEntity.init(reservation:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v24 = v0;
  uint64_t v26 = v1;
  uint64_t v2 = type metadata accessor for FlightReservation(0);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_184_0();
  uint64_t v25 = v4;
  uint64_t v5 = OUTLINED_FUNCTION_30_11();
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<EventSubType>);
  OUTLINED_FUNCTION_11_12();
  lazy protocol witness table accessor for type EventSubType and conformance EventSubType();
  OUTLINED_FUNCTION_92_2();
  uint64_t v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<FlightReservationEntity?>);
  OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_45_4();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type FlightReservationEntity and conformance FlightReservationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<GenericEventEntity?>);
  OUTLINED_FUNCTION_79_2();
  OUTLINED_FUNCTION_6_15();
  lazy protocol witness table accessor for type GenericEventEntity and conformance GenericEventEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<HotelReservationEntity?>);
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type HotelReservationEntity and conformance HotelReservationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<RestaurantReservationEntity?>);
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type RestaurantReservationEntity and conformance RestaurantReservationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v16 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedTransportationEntity?>);
  uint64_t v17 = v16;
  swift_retain();
  OUTLINED_FUNCTION_82_2();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type TicketedTransportationEntity and conformance TicketedTransportationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v19 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<VehicleReservationEntity?>);
  OUTLINED_FUNCTION_103_2();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type VehicleReservationEntity and conformance VehicleReservationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v21 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedShowEntity?>);
  OUTLINED_FUNCTION_78_2();
  OUTLINED_FUNCTION_6_15();
  lazy protocol witness table accessor for type TicketedShowEntity and conformance TicketedShowEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v23 = v22;
  v28[0] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_66_3();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_32_7();
  _s10OmniSearch0B10ResultItemOWOcTm_0(v24, v25, (void (*)(void))type metadata accessor for FlightReservation);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_66_3();
  FlightReservationEntity.init(reservation:)();
  destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType(v28);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v28, (uint64_t)&v27, &demangling cache variable for type metadata for FlightReservationEntity?);
  EntityProperty.wrappedValue.setter();
  _s10OmniSearch0B10ResultItemOWOhTm_2(v24, (void (*)(void))type metadata accessor for FlightReservation);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_34_7();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_53_4();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_54_4();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *uint64_t v26 = v8;
  v26[1] = v10;
  v26[2] = v12;
  v26[3] = v14;
  v26[4] = v17;
  v26[5] = v19;
  v26[6] = v21;
  v26[7] = v23;
  OUTLINED_FUNCTION_58_4((__n128)xmmword_258665BD0);
  OUTLINED_FUNCTION_119_0();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;

  OUTLINED_FUNCTION_104_0();
  uint64_t v21 = v0;
  uint64_t v22 = v1;
  uint64_t v2 = type metadata accessor for HotelReservation(0);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_184_0();
  uint64_t v20 = v4;
  uint64_t v5 = OUTLINED_FUNCTION_30_11();
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<EventSubType>);
  OUTLINED_FUNCTION_11_12();
  lazy protocol witness table accessor for type EventSubType and conformance EventSubType();
  OUTLINED_FUNCTION_92_2();
  uint64_t v23 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<FlightReservationEntity?>);
  OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_45_4();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type FlightReservationEntity and conformance FlightReservationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v19 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<GenericEventEntity?>);
  OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_6_15();
  lazy protocol witness table accessor for type GenericEventEntity and conformance GenericEventEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v18 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<HotelReservationEntity?>);
  OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type HotelReservationEntity and conformance HotelReservationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<RestaurantReservationEntity?>);
  OUTLINED_FUNCTION_103_2();
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type RestaurantReservationEntity and conformance RestaurantReservationEntity();
  OUTLINED_FUNCTION_65_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedTransportationEntity?>);
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_82_2();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type TicketedTransportationEntity and conformance TicketedTransportationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v13 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<VehicleReservationEntity?>);
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type VehicleReservationEntity and conformance VehicleReservationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedShowEntity?>);
  swift_retain();
  OUTLINED_FUNCTION_6_15();
  lazy protocol witness table accessor for type TicketedShowEntity and conformance TicketedShowEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v17 = v16;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_66_3();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_32_7();
  _s10OmniSearch0B10ResultItemOWOcTm_0(v21, v20, (void (*)(void))type metadata accessor for HotelReservation);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_66_3();
  HotelReservationEntity.init(reservation:)();
  EntityProperty.wrappedValue.setter();
  _s10OmniSearch0B10ResultItemOWOhTm_2(v21, (void (*)(void))type metadata accessor for HotelReservation);
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_107_2();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_34_7();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_53_4();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_54_4();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  int *v22 = v23;
  v22[1] = v19;
  v22[2] = v18;
  v22[3] = v11;
  v22[4] = v11;
  v22[5] = v13;
  v22[6] = v15;
  v22[7] = v17;
  OUTLINED_FUNCTION_58_4((__n128)xmmword_258665BD0);
  OUTLINED_FUNCTION_119_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void v13[4];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned char v18[152];

  OUTLINED_FUNCTION_104_0();
  uint64_t v15 = v0;
  uint64_t v16 = v1;
  uint64_t v2 = type metadata accessor for RentalCarReservation(0);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v14 = (uint64_t)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OUTLINED_FUNCTION_30_11();
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<EventSubType>);
  OUTLINED_FUNCTION_11_12();
  lazy protocol witness table accessor for type EventSubType and conformance EventSubType();
  OUTLINED_FUNCTION_92_2();
  v13[3] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<FlightReservationEntity?>);
  OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_45_4();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type FlightReservationEntity and conformance FlightReservationEntity();
  OUTLINED_FUNCTION_65_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<GenericEventEntity?>);
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_6_15();
  lazy protocol witness table accessor for type GenericEventEntity and conformance GenericEventEntity();
  OUTLINED_FUNCTION_65_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<HotelReservationEntity?>);
  OUTLINED_FUNCTION_79_2();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type HotelReservationEntity and conformance HotelReservationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<RestaurantReservationEntity?>);
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type RestaurantReservationEntity and conformance RestaurantReservationEntity();
  OUTLINED_FUNCTION_65_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedTransportationEntity?>);
  swift_retain();
  OUTLINED_FUNCTION_82_2();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type TicketedTransportationEntity and conformance TicketedTransportationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<VehicleReservationEntity?>);
  swift_retain();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type VehicleReservationEntity and conformance VehicleReservationEntity();
  OUTLINED_FUNCTION_65_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedShowEntity?>);
  OUTLINED_FUNCTION_78_2();
  OUTLINED_FUNCTION_6_15();
  lazy protocol witness table accessor for type TicketedShowEntity and conformance TicketedShowEntity();
  OUTLINED_FUNCTION_65_2();
  v18[0] = 3;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v13[1] = v11;
  swift_retain();
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v13[2] = v9;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_32_7();
  uint64_t v12 = v15;
  _s10OmniSearch0B10ResultItemOWOcTm_0(v15, v14, (void (*)(void))type metadata accessor for RentalCarReservation);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  VehicleReservationEntity.init(reservation:)();
  destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType(v18);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v18, (uint64_t)&v17, &demangling cache variable for type metadata for VehicleReservationEntity?);
  EntityProperty.wrappedValue.setter();
  _s10OmniSearch0B10ResultItemOWOhTm_2(v12, (void (*)(void))type metadata accessor for RentalCarReservation);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_107_2();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_34_7();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_53_4();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_54_4();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_75_1();
  OUTLINED_FUNCTION_58_4((__n128)xmmword_258665BD0);
  OUTLINED_FUNCTION_119_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void v13[4];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned char v18[136];

  OUTLINED_FUNCTION_104_0();
  uint64_t v15 = v0;
  uint64_t v16 = v1;
  uint64_t v2 = type metadata accessor for TicketedShow(0);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v14 = (uint64_t)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OUTLINED_FUNCTION_30_11();
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<EventSubType>);
  OUTLINED_FUNCTION_11_12();
  lazy protocol witness table accessor for type EventSubType and conformance EventSubType();
  OUTLINED_FUNCTION_92_2();
  v13[3] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<FlightReservationEntity?>);
  OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_45_4();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type FlightReservationEntity and conformance FlightReservationEntity();
  OUTLINED_FUNCTION_65_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<GenericEventEntity?>);
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_6_15();
  lazy protocol witness table accessor for type GenericEventEntity and conformance GenericEventEntity();
  OUTLINED_FUNCTION_65_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<HotelReservationEntity?>);
  OUTLINED_FUNCTION_79_2();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type HotelReservationEntity and conformance HotelReservationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<RestaurantReservationEntity?>);
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type RestaurantReservationEntity and conformance RestaurantReservationEntity();
  OUTLINED_FUNCTION_65_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedTransportationEntity?>);
  swift_retain();
  OUTLINED_FUNCTION_82_2();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type TicketedTransportationEntity and conformance TicketedTransportationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<VehicleReservationEntity?>);
  swift_retain();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type VehicleReservationEntity and conformance VehicleReservationEntity();
  OUTLINED_FUNCTION_65_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedShowEntity?>);
  OUTLINED_FUNCTION_78_2();
  OUTLINED_FUNCTION_6_15();
  lazy protocol witness table accessor for type TicketedShowEntity and conformance TicketedShowEntity();
  OUTLINED_FUNCTION_65_2();
  v18[0] = 5;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v13[1] = v11;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_66_3();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v13[2] = v9;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_32_7();
  uint64_t v12 = v15;
  _s10OmniSearch0B10ResultItemOWOcTm_0(v15, v14, (void (*)(void))type metadata accessor for TicketedShow);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_66_3();
  TicketedShowEntity.init(reservation:)();
  destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType(v18);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v18, (uint64_t)&v17, &demangling cache variable for type metadata for TicketedShowEntity?);
  EntityProperty.wrappedValue.setter();
  _s10OmniSearch0B10ResultItemOWOhTm_2(v12, (void (*)(void))type metadata accessor for TicketedShow);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_107_2();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_34_7();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_53_4();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_54_4();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_75_1();
  OUTLINED_FUNCTION_58_4((__n128)xmmword_258665BD0);
  OUTLINED_FUNCTION_119_0();
}

void EventEntity.init(reservation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_104_0();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = OUTLINED_FUNCTION_125_1(v25);
  uint64_t v27 = type metadata accessor for RestaurantReservation(v26);
  uint64_t v28 = OUTLINED_FUNCTION_81(v27);
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_184_0();
  uint64_t v33 = v29;
  uint64_t v30 = OUTLINED_FUNCTION_30_11();
  uint64_t v31 = OUTLINED_FUNCTION_81(v30);
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_97_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<EventSubType>);
  OUTLINED_FUNCTION_11_12();
  unint64_t v32 = lazy protocol witness table accessor for type EventSubType and conformance EventSubType();
  MEMORY[0x25A2C4880](v20, v32);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<FlightReservationEntity?>);
  swift_retain();
  OUTLINED_FUNCTION_16_14();
  lazy protocol witness table accessor for type FlightReservationEntity and conformance FlightReservationEntity();
  OUTLINED_FUNCTION_24_9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<GenericEventEntity?>);
  OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_20_9();
  lazy protocol witness table accessor for type GenericEventEntity and conformance GenericEventEntity();
  OUTLINED_FUNCTION_24_9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<HotelReservationEntity?>);
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_16_14();
  lazy protocol witness table accessor for type HotelReservationEntity and conformance HotelReservationEntity();
  OUTLINED_FUNCTION_24_9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<RestaurantReservationEntity?>);
  OUTLINED_FUNCTION_103_2();
  OUTLINED_FUNCTION_16_14();
  lazy protocol witness table accessor for type RestaurantReservationEntity and conformance RestaurantReservationEntity();
  OUTLINED_FUNCTION_24_9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedTransportationEntity?>);
  OUTLINED_FUNCTION_79_2();
  OUTLINED_FUNCTION_16_14();
  lazy protocol witness table accessor for type TicketedTransportationEntity and conformance TicketedTransportationEntity();
  OUTLINED_FUNCTION_24_9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<VehicleReservationEntity?>);
  OUTLINED_FUNCTION_78_2();
  OUTLINED_FUNCTION_16_14();
  lazy protocol witness table accessor for type VehicleReservationEntity and conformance VehicleReservationEntity();
  OUTLINED_FUNCTION_24_9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedShowEntity?>);
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_20_9();
  lazy protocol witness table accessor for type TicketedShowEntity and conformance TicketedShowEntity();
  OUTLINED_FUNCTION_24_9();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_32_7();
  _s10OmniSearch0B10ResultItemOWOcTm_0(v24, v33, (void (*)(void))type metadata accessor for RestaurantReservation);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  RestaurantReservationEntity.init(reservation:)();
  EntityProperty.wrappedValue.setter();
  _s10OmniSearch0B10ResultItemOWOhTm_2(v24, (void (*)(void))type metadata accessor for RestaurantReservation);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(0, 0xF000000000000000);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(0, 0xF000000000000000);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_76_1((uint64_t)&a14);
  OUTLINED_FUNCTION_58_4((__n128)xmmword_258665BD0);
  OUTLINED_FUNCTION_119_0();
}

{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_104_0();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = OUTLINED_FUNCTION_125_1(v25);
  uint64_t v27 = type metadata accessor for TicketedTransportation(v26);
  uint64_t v28 = OUTLINED_FUNCTION_81(v27);
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_184_0();
  uint64_t v33 = v29;
  uint64_t v30 = OUTLINED_FUNCTION_30_11();
  uint64_t v31 = OUTLINED_FUNCTION_81(v30);
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_97_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<EventSubType>);
  OUTLINED_FUNCTION_11_12();
  unint64_t v32 = lazy protocol witness table accessor for type EventSubType and conformance EventSubType();
  MEMORY[0x25A2C4880](v20, v32);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<FlightReservationEntity?>);
  swift_retain();
  OUTLINED_FUNCTION_16_14();
  lazy protocol witness table accessor for type FlightReservationEntity and conformance FlightReservationEntity();
  OUTLINED_FUNCTION_24_9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<GenericEventEntity?>);
  OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_20_9();
  lazy protocol witness table accessor for type GenericEventEntity and conformance GenericEventEntity();
  OUTLINED_FUNCTION_24_9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<HotelReservationEntity?>);
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_16_14();
  lazy protocol witness table accessor for type HotelReservationEntity and conformance HotelReservationEntity();
  OUTLINED_FUNCTION_24_9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<RestaurantReservationEntity?>);
  OUTLINED_FUNCTION_103_2();
  OUTLINED_FUNCTION_16_14();
  lazy protocol witness table accessor for type RestaurantReservationEntity and conformance RestaurantReservationEntity();
  OUTLINED_FUNCTION_24_9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedTransportationEntity?>);
  OUTLINED_FUNCTION_79_2();
  OUTLINED_FUNCTION_16_14();
  lazy protocol witness table accessor for type TicketedTransportationEntity and conformance TicketedTransportationEntity();
  OUTLINED_FUNCTION_24_9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<VehicleReservationEntity?>);
  OUTLINED_FUNCTION_78_2();
  OUTLINED_FUNCTION_16_14();
  lazy protocol witness table accessor for type VehicleReservationEntity and conformance VehicleReservationEntity();
  OUTLINED_FUNCTION_24_9();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedShowEntity?>);
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_20_9();
  lazy protocol witness table accessor for type TicketedShowEntity and conformance TicketedShowEntity();
  OUTLINED_FUNCTION_24_9();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_32_7();
  _s10OmniSearch0B10ResultItemOWOcTm_0(v24, v33, (void (*)(void))type metadata accessor for TicketedTransportation);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  TicketedTransportationEntity.init(reservation:)();
  EntityProperty.wrappedValue.setter();
  _s10OmniSearch0B10ResultItemOWOhTm_2(v24, (void (*)(void))type metadata accessor for TicketedTransportation);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(0, 0xF000000000000000);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(0, 0xF000000000000000);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_76_1((uint64_t)&a12);
  OUTLINED_FUNCTION_58_4((__n128)xmmword_258665BD0);
  OUTLINED_FUNCTION_119_0();
}

void EventEntity.init(appointment:)()
{
}

{
  void (*v0)(void *__return_ptr, uint64_t);
  void (*v1)(void);
  uint64_t v2;
  void (*v3)(void);
  void *v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(void);
  void (*v37)(void *__return_ptr, uint64_t);
  void (*v38)(void);
  void *v39;
  uint64_t v40;
  void v41[17];

  OUTLINED_FUNCTION_104_0();
  uint64_t v37 = v0;
  uint64_t v38 = v1;
  uint64_t v35 = v2;
  uint64_t v36 = v3;
  uint64_t v39 = v4;
  uint64_t v6 = v5(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v34 = (uint64_t)&v31 - v7;
  uint64_t v8 = OUTLINED_FUNCTION_30_11();
  uint64_t v9 = OUTLINED_FUNCTION_81(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<EventSubType>);
  OUTLINED_FUNCTION_11_12();
  lazy protocol witness table accessor for type EventSubType and conformance EventSubType();
  OUTLINED_FUNCTION_92_2();
  uint64_t v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<FlightReservationEntity?>);
  swift_retain();
  OUTLINED_FUNCTION_45_4();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type FlightReservationEntity and conformance FlightReservationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v13 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<GenericEventEntity?>);
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_6_15();
  lazy protocol witness table accessor for type GenericEventEntity and conformance GenericEventEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<HotelReservationEntity?>);
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type HotelReservationEntity and conformance HotelReservationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v17 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<RestaurantReservationEntity?>);
  OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type RestaurantReservationEntity and conformance RestaurantReservationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v19 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedTransportationEntity?>);
  OUTLINED_FUNCTION_103_2();
  OUTLINED_FUNCTION_82_2();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type TicketedTransportationEntity and conformance TicketedTransportationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v21 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<VehicleReservationEntity?>);
  OUTLINED_FUNCTION_79_2();
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type VehicleReservationEntity and conformance VehicleReservationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v23 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedShowEntity?>);
  OUTLINED_FUNCTION_78_2();
  OUTLINED_FUNCTION_6_15();
  lazy protocol witness table accessor for type TicketedShowEntity and conformance TicketedShowEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v25 = v24;
  LOBYTE(v41[0]) = 6;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v32 = v21;
  swift_retain();
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v33 = v17;
  swift_release();
  swift_release();
  uint64_t v26 = v13;
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_32_7();
  uint64_t v27 = v34;
  uint64_t v28 = v35;
  _s10OmniSearch0B10ResultItemOWOcTm_0(v35, v34, v36);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v29 = v32;
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  v37(v41, v27);
  destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType(v41);
  outlined init with take of PQAVerificationModelProtocol?((uint64_t)v41, (uint64_t)&v40, &demangling cache variable for type metadata for GenericEventEntity?);
  EntityProperty.wrappedValue.setter();
  _s10OmniSearch0B10ResultItemOWOhTm_2(v28, v38);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_107_2();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_34_7();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(0, 0xF000000000000000);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_66_3();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v30 = v39;
  *uint64_t v39 = v11;
  v30[1] = v26;
  v30[2] = v15;
  v30[3] = v15;
  v30[4] = v19;
  v30[5] = v29;
  v30[6] = v23;
  v30[7] = v25;
  OUTLINED_FUNCTION_58_4((__n128)xmmword_258665BD0);
  OUTLINED_FUNCTION_119_0();
}

void EventEntity.init(party:)()
{
}

void EventEntity.init(trip:)()
{
}

void FlightReservationEntity.init(reservation:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = v1;
  uint64_t v141 = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentCurrencyAmount?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_184_0();
  uint64_t v140 = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_184_0();
  uint64_t v145 = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v11 = OUTLINED_FUNCTION_81(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_184_0();
  uint64_t v144 = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FlightSnippet.Leg?);
  uint64_t v14 = OUTLINED_FUNCTION_81(v13);
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_185_0();
  uint64_t v139 = v15;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_43_4();
  uint64_t v130 = v17;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_43_4();
  uint64_t v124 = v19;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_43_4();
  uint64_t v114 = v21;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v91 - v23;
  uint64_t v103 = type metadata accessor for DateComponents();
  uint64_t v146 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  OUTLINED_FUNCTION_185_0();
  uint64_t v142 = v25;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v26);
  OUTLINED_FUNCTION_27_10();
  uint64_t v143 = v27;
  uint64_t v28 = OUTLINED_FUNCTION_30_11();
  uint64_t v29 = OUTLINED_FUNCTION_81(v28);
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_97_1();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_112_2();
  uint64_t v138 = v30;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v137 = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  OUTLINED_FUNCTION_123_1();
  uint64_t v136 = MEMORY[0x25A2C4900](v0);
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  OUTLINED_FUNCTION_60_3();
  uint64_t v135 = MEMORY[0x25A2C48D0](v0);
  OUTLINED_FUNCTION_117_1();
  OUTLINED_FUNCTION_112_2();
  uint64_t v134 = v31;
  OUTLINED_FUNCTION_117_1();
  uint64_t v133 = MEMORY[0x25A2C4900](v0);
  OUTLINED_FUNCTION_60_3();
  uint64_t v132 = MEMORY[0x25A2C4900](v0);
  OUTLINED_FUNCTION_93_2();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v131 = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents>);
  OUTLINED_FUNCTION_60_3();
  uint64_t v129 = MEMORY[0x25A2C48D0](v0);
  OUTLINED_FUNCTION_118_1();
  OUTLINED_FUNCTION_112_2();
  uint64_t v128 = v32;
  OUTLINED_FUNCTION_118_1();
  uint64_t v127 = MEMORY[0x25A2C4900](v0);
  OUTLINED_FUNCTION_30_10();
  uint64_t v126 = MEMORY[0x25A2C4900](v0);
  OUTLINED_FUNCTION_120_1();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v125 = MEMORY[0x25A2C4900](v0);
  OUTLINED_FUNCTION_16_14();
  uint64_t v123 = MEMORY[0x25A2C48D0](v0);
  OUTLINED_FUNCTION_14_15();
  uint64_t v122 = MEMORY[0x25A2C48D0](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_52_3();
  uint64_t v121 = MEMORY[0x25A2C4900](v0);
  OUTLINED_FUNCTION_40_6();
  uint64_t v120 = MEMORY[0x25A2C4900](v0);
  OUTLINED_FUNCTION_30_10();
  OUTLINED_FUNCTION_112_2();
  uint64_t v119 = v33;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v118 = MEMORY[0x25A2C4900](v0);
  uint64_t v34 = v103;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v117 = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v116 = MEMORY[0x25A2C48E0](v0);
  OUTLINED_FUNCTION_105_2();
  OUTLINED_FUNCTION_81_1();
  uint64_t v115 = MEMORY[0x25A2C48D0](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentCurrencyAmount?>);
  uint64_t v35 = v146;
  OUTLINED_FUNCTION_105_2();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v113 = MEMORY[0x25A2C48C0](v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_16_14();
  uint64_t v112 = MEMORY[0x25A2C48A0](v0);
  uint64_t v36 = (int *)type metadata accessor for FlightReservation(0);
  uint64_t v37 = (uint64_t *)(v2 + v36[22]);
  uint64_t v38 = v37[1];
  uint64_t v111 = *v37;
  uint64_t v39 = (uint64_t *)(v2 + v36[28]);
  uint64_t v40 = v39[1];
  uint64_t v109 = *v39;
  uint64_t v41 = v2 + v36[19];
  uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  uint64_t v43 = v34;
  uint64_t v146 = v35 + 16;
  uint64_t v100 = v42;
  v42(v143, v41, v34);
  uint64_t v108 = v40;
  swift_bridgeObjectRetain();
  uint64_t v110 = v38;
  swift_bridgeObjectRetain();
  FlightReservation.leg.getter();
  uint64_t v44 = type metadata accessor for FlightSnippet.Leg(0);
  OUTLINED_FUNCTION_43_5((uint64_t)v24);
  if (v45)
  {
    outlined destroy of SearchResult?((uint64_t)v24, &demangling cache variable for type metadata for FlightSnippet.Leg?);
    uint64_t v106 = 0;
    uint64_t v107 = 0;
  }
  else
  {
    uint64_t v46 = (uint64_t *)(*(void *)&v24[*(int *)(v44 + 20)]
                    + OBJC_IVAR____TtCVV10OmniSearch13FlightSnippet3LegP33_1432903E5DFDE0C5F6864C747BE81CE313_StorageClass__arrivalGate);
    OUTLINED_FUNCTION_0_1();
    uint64_t v47 = *v46;
    uint64_t v106 = v46[1];
    uint64_t v107 = v47;
    swift_bridgeObjectRetain();
    _s10OmniSearch0B10ResultItemOWOhTm_2((uint64_t)v24, (void (*)(void))type metadata accessor for FlightSnippet.Leg);
  }
  uint64_t v48 = v114;
  FlightReservation.leg.getter();
  OUTLINED_FUNCTION_43_5(v48);
  if (v45)
  {
    outlined destroy of SearchResult?(v48, &demangling cache variable for type metadata for FlightSnippet.Leg?);
    uint64_t v104 = 0;
    uint64_t v105 = 0;
  }
  else
  {
    uint64_t v49 = (uint64_t *)(*(void *)(v48 + *(int *)(v44 + 20))
                    + OBJC_IVAR____TtCVV10OmniSearch13FlightSnippet3LegP33_1432903E5DFDE0C5F6864C747BE81CE313_StorageClass__arrivalTerminal);
    OUTLINED_FUNCTION_0_1();
    uint64_t v50 = *v49;
    uint64_t v104 = v49[1];
    uint64_t v105 = v50;
    swift_bridgeObjectRetain();
    _s10OmniSearch0B10ResultItemOWOhTm_2(v48, (void (*)(void))type metadata accessor for FlightSnippet.Leg);
  }
  OUTLINED_FUNCTION_101_2(v144, 1);
  uint64_t v51 = (uint64_t *)(v2 + v36[37]);
  uint64_t v52 = v51[1];
  uint64_t v114 = *v51;
  uint64_t v53 = (uint64_t *)(v2 + v36[15]);
  uint64_t v54 = v53[1];
  uint64_t v102 = *v53;
  outlined init with copy of PQAVerificationModelProtocol?(v2 + v36[13], v145, &demangling cache variable for type metadata for URL?);
  uint64_t v55 = (uint64_t *)(v2 + v36[32]);
  uint64_t v56 = (void (*)(uint64_t, uint64_t, uint64_t))v55[1];
  uint64_t v101 = *v55;
  uint64_t v57 = (uint64_t *)(v2 + v36[23]);
  uint64_t v58 = v57[1];
  uint64_t v99 = *v57;
  uint64_t v59 = (uint64_t *)(v2 + v36[29]);
  uint64_t v60 = v59[1];
  uint64_t v97 = *v59;
  v100(v142, v2 + v36[18], v43);
  uint64_t v96 = v60;
  swift_bridgeObjectRetain();
  uint64_t v146 = v52;
  swift_bridgeObjectRetain();
  uint64_t v103 = v54;
  swift_bridgeObjectRetain();
  uint64_t v100 = v56;
  swift_bridgeObjectRetain();
  uint64_t v98 = v58;
  swift_bridgeObjectRetain();
  uint64_t v61 = v124;
  FlightReservation.leg.getter();
  OUTLINED_FUNCTION_43_5(v61);
  if (v45)
  {
    outlined destroy of SearchResult?(v61, &demangling cache variable for type metadata for FlightSnippet.Leg?);
    uint64_t v94 = 0;
    uint64_t v95 = 0;
  }
  else
  {
    uint64_t v62 = *(void *)(v61 + *(int *)(v44 + 20));
    OUTLINED_FUNCTION_0_1();
    uint64_t v63 = *(void *)(v62 + 80);
    uint64_t v94 = *(void *)(v62 + 88);
    uint64_t v95 = v63;
    swift_bridgeObjectRetain();
    _s10OmniSearch0B10ResultItemOWOhTm_2(v61, (void (*)(void))type metadata accessor for FlightSnippet.Leg);
  }
  uint64_t v64 = v139;
  uint64_t v65 = v130;
  FlightReservation.leg.getter();
  OUTLINED_FUNCTION_43_5(v65);
  if (v45)
  {
    outlined destroy of SearchResult?(v65, &demangling cache variable for type metadata for FlightSnippet.Leg?);
    uint64_t v139 = 0;
    uint64_t v124 = 0;
  }
  else
  {
    uint64_t v66 = *(void *)(v65 + *(int *)(v44 + 20));
    OUTLINED_FUNCTION_0_1();
    uint64_t v67 = *(void *)(v66 + 72);
    uint64_t v139 = *(void *)(v66 + 64);
    uint64_t v124 = v67;
    swift_bridgeObjectRetain();
    _s10OmniSearch0B10ResultItemOWOhTm_2(v65, (void (*)(void))type metadata accessor for FlightSnippet.Leg);
  }
  uint64_t v68 = (uint64_t *)(v2 + v36[17]);
  uint64_t v69 = v68[1];
  uint64_t v130 = *v68;
  uint64_t v70 = *(void *)(v2 + 112);
  uint64_t v92 = *(void *)(v2 + 104);
  uint64_t v71 = *(void *)(v2 + v36[33]);
  uint64_t v72 = *(void *)(v2 + v36[34]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v93 = v69;
  swift_bridgeObjectRetain();
  FlightReservation.leg.getter();
  OUTLINED_FUNCTION_43_5(v64);
  if (v45)
  {
    outlined destroy of SearchResult?(v64, &demangling cache variable for type metadata for FlightSnippet.Leg?);
    uint64_t v74 = 0;
    char v75 = 1;
  }
  else
  {
    uint64_t v73 = *(void *)(v64 + *(int *)(v44 + 20));
    OUTLINED_FUNCTION_0_1();
    uint64_t v74 = *(void *)(v73 + 16);
    char v75 = *(unsigned char *)(v73 + 24);
    _s10OmniSearch0B10ResultItemOWOhTm_2(v64, (void (*)(void))type metadata accessor for FlightSnippet.Leg);
  }
  v149[0] = v74;
  LOBYTE(v149[1]) = v75;
  uint64_t v76 = (void (*)(void))String.init<A>(describing:)();
  uint64_t v78 = v77;
  uint64_t v79 = v140;
  FlightReservation.flightCost.getter();
  uint64_t v80 = v2 + v36[41];
  LOBYTE(v89) = *(unsigned char *)(v80 + 8);
  FlightReservationEntity.init(arrivalAirportCode:arrivalAirportName:arrivalDateTime:arrivalGate:arrivalTerminal:boardingDateTime:bookingProvider:carrier:checkInUrl:confirmationNumber:departureAirportCode:departureAirportName:departureDateTime:departureGate:departureTerminal:designator:flightNumber:passengerNames:seatNumbers:status:totalCost:totalDuration:)(v111, v110, v109, v108, v143, v107, v106, v105, v81, v82, v83, v84, v85, v86, v87, v88, v104, v144, v114,
    v146,
    v102,
    v103,
    v145,
    v101,
    (uint64_t)v100,
    v99,
    v98,
    v97,
    v96,
    v142,
    v95,
    v94,
    v139,
    v124,
    v130,
    v93,
    v92,
    v70,
    v71,
    v72,
    v76,
    v78,
    v79,
    *(void *)v80,
    v89,
    v90,
    v91,
    v92,
    v93,
    v94,
    v95,
    v96,
    v97,
    v98,
    v99,
    *(double *)&v100,
    v101);
  _s10OmniSearch0B10ResultItemOWOhTm_2(v2, (void (*)(void))type metadata accessor for FlightReservation);
  v147[0] = v138;
  v147[1] = v137;
  v147[2] = v136;
  v147[3] = v135;
  v147[4] = v134;
  v147[5] = v133;
  v147[6] = v132;
  v147[7] = v131;
  v147[8] = v129;
  v147[9] = v128;
  v147[10] = v127;
  v147[11] = v126;
  v147[12] = v125;
  v147[13] = v123;
  v147[14] = v122;
  v147[15] = v121;
  v147[16] = v120;
  v147[17] = v119;
  v147[18] = v118;
  v147[19] = v117;
  v147[20] = v116;
  v147[21] = v115;
  v147[22] = v113;
  v147[23] = v112;
  long long v148 = xmmword_258665BD0;
  outlined release of FlightReservationEntity((uint64_t)v147);
  memcpy(v141, v149, 0xD0uLL);
  OUTLINED_FUNCTION_119_0();
}

void HotelReservationEntity.init(reservation:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v4 = v3;
  uint64_t v43 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_184_0();
  uint64_t v42 = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_94_2();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_65_3();
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = OUTLINED_FUNCTION_81(v12);
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_39();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_47_4();
  OUTLINED_FUNCTION_111_2();
  OUTLINED_FUNCTION_90_1();
  MEMORY[0x25A2C4900](v2);
  OUTLINED_FUNCTION_10_18();
  MEMORY[0x25A2C4900](v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  OUTLINED_FUNCTION_91_2();
  MEMORY[0x25A2C48D0](v2);
  OUTLINED_FUNCTION_91_2();
  MEMORY[0x25A2C48D0](v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents>);
  OUTLINED_FUNCTION_26_12();
  OUTLINED_FUNCTION_81_1();
  uint64_t v14 = MEMORY[0x25A2C48D0](v2);
  OUTLINED_FUNCTION_115_1(v14);
  OUTLINED_FUNCTION_128_1();
  OUTLINED_FUNCTION_111_2();
  uint64_t v40 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Int?>);
  OUTLINED_FUNCTION_77_2();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v39 = MEMORY[0x25A2C4930](v2);
  OUTLINED_FUNCTION_15_13();
  OUTLINED_FUNCTION_111_2();
  uint64_t v38 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_77_2();
  OUTLINED_FUNCTION_40_6();
  uint64_t v37 = MEMORY[0x25A2C4900](v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  OUTLINED_FUNCTION_77_2();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v36 = MEMORY[0x25A2C48E0](v2);
  OUTLINED_FUNCTION_90_1();
  OUTLINED_FUNCTION_111_2();
  uint64_t v35 = v17;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_90_1();
  uint64_t v34 = MEMORY[0x25A2C48A0](v2);
  uint64_t v18 = v4[14];
  uint64_t v33 = v4[13];
  uint64_t v19 = v4[16];
  uint64_t v20 = OUTLINED_FUNCTION_125_1(v4[15]);
  uint64_t v21 = (int *)type metadata accessor for HotelReservation(v20);
  uint64_t v22 = (void *)((char *)v4 + v21[16]);
  uint64_t v23 = v22[1];
  uint64_t v31 = *v22;
  uint64_t v24 = (void *)((char *)v4 + v21[19]);
  uint64_t v25 = v24[1];
  uint64_t v30 = *v24;
  outlined init with copy of PQAVerificationModelProtocol?((uint64_t)v4 + v21[14], v1, &demangling cache variable for type metadata for DateComponents?);
  uint64_t v41 = v0;
  outlined init with copy of PQAVerificationModelProtocol?((uint64_t)v4 + v21[15], v0, &demangling cache variable for type metadata for DateComponents?);
  uint64_t v26 = (void *)((char *)v4 + v21[18]);
  uint64_t v27 = *v26;
  uint64_t v28 = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  URL.init(string:)();
  swift_bridgeObjectRelease();
  HotelReservationEntity.init(confirmationNumber:guest:bookingProvider:businessName:roomNumbers:address:checkinDateTime:checkoutDateTime:phoneNumber:url:)(v33, v18, v32, v19, 0, 0, v31, v23, MEMORY[0x263F8EE78], v30, v25, v1, v41, v27, v28, v42, v29, v30, v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40);
  _s10OmniSearch0B10ResultItemOWOhTm_2((uint64_t)v4, (void (*)(void))type metadata accessor for HotelReservation);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_113_2();
  swift_release();
  OUTLINED_FUNCTION_86_2();
  swift_release();
  OUTLINED_FUNCTION_116_2();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(0, 0xF000000000000000);
  *(_OWORD *)uint64_t v43 = v44;
  *(_OWORD *)(v43 + 16) = v45;
  *(_OWORD *)(v43 + 32) = v46;
  *(_OWORD *)(v43 + 48) = v47;
  *(_OWORD *)(v43 + 64) = v48;
  *(_OWORD *)(v43 + 80) = v49;
  *(void *)(v43 + 96) = v50;
  *(_OWORD *)(v43 + 104) = v51;
  OUTLINED_FUNCTION_119_0();
}

void RestaurantReservationEntity.init(reservation:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_97_1();
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = OUTLINED_FUNCTION_81(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_47_4();
  OUTLINED_FUNCTION_72_2();
  OUTLINED_FUNCTION_177_0();
  OUTLINED_FUNCTION_30_10();
  MEMORY[0x25A2C4900](v0);
  OUTLINED_FUNCTION_10_18();
  MEMORY[0x25A2C4900](v0);
  OUTLINED_FUNCTION_128_1();
  MEMORY[0x25A2C4900](v0);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v64 = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Int?>);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v63 = MEMORY[0x25A2C4930](v0);
  OUTLINED_FUNCTION_15_13();
  OUTLINED_FUNCTION_72_2();
  OUTLINED_FUNCTION_115_1(v10);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  OUTLINED_FUNCTION_17_10();
  uint64_t v61 = MEMORY[0x25A2C48D0](v0);
  OUTLINED_FUNCTION_50_6();
  OUTLINED_FUNCTION_72_2();
  uint64_t v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_50_6();
  uint64_t v13 = MEMORY[0x25A2C48A0](v0);
  uint64_t v58 = v3[13];
  uint64_t v67 = v3[14];
  uint64_t v57 = v3[15];
  uint64_t v66 = v3[16];
  uint64_t v14 = type metadata accessor for RestaurantReservation(0);
  uint64_t v15 = (void *)((char *)v3 + *(int *)(v14 + 60));
  if (v15[1])
  {
    uint64_t v16 = *v15;
    unint64_t v17 = v15[1];
  }
  else
  {
    uint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
  }
  uint64_t v18 = HIBYTE(v17) & 0xF;
  uint64_t v19 = v16 & 0xFFFFFFFFFFFFLL;
  if ((v17 & 0x2000000000000000) != 0) {
    uint64_t v20 = HIBYTE(v17) & 0xF;
  }
  else {
    uint64_t v20 = v16 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v65 = v5;
  uint64_t v60 = v12;
  uint64_t v59 = v13;
  if (!v20)
  {
    uint64_t v53 = (int *)v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v37 = v53;
    uint64_t v36 = 0;
    char v35 = 1;
LABEL_45:
    uint64_t v38 = v37[17];
    uint64_t v39 = (void *)((char *)v3 + v37[16]);
    uint64_t v41 = *v39;
    uint64_t v40 = v39[1];
    uint64_t v42 = (void *)((char *)v3 + v37[18]);
    uint64_t v44 = *v42;
    uint64_t v43 = v42[1];
    uint64_t v45 = *(void *)((char *)v3 + v38);
    uint64_t v46 = *(void *)((char *)v3 + v38 + 8);
    outlined init with copy of PQAVerificationModelProtocol?((uint64_t)v3 + v37[14], v1, &demangling cache variable for type metadata for DateComponents?);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    RestaurantReservationEntity.init(confirmationNumber:guest:partySize:bookingProvider:businessName:address:phoneNumber:startDateTime:mealType:)(v58, v67, v57, v66, v36, v35 & 1, 0, 0, v41, v40, v44, v43, v45, v46, v1, 0, 0, v55, v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64);
    _s10OmniSearch0B10ResultItemOWOhTm_2((uint64_t)v3, (void (*)(void))type metadata accessor for RestaurantReservation);
    swift_release();
    OUTLINED_FUNCTION_113_2();
    swift_release();
    OUTLINED_FUNCTION_86_2();
    swift_release();
    OUTLINED_FUNCTION_116_2();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_32_7();
    *uint64_t v65 = v68;
    v65[1] = v69;
    v65[2] = v70;
    v65[3] = v71;
    v65[4] = v72;
    v65[5] = v73;
    OUTLINED_FUNCTION_119_0();
    return;
  }
  if ((v17 & 0x1000000000000000) != 0)
  {
    uint64_t v21 = (int *)v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = (uint64_t)specialized _parseInteger<A, B>(ascii:radix:)(v16, v17, 10);
    LOBYTE(v16) = v54;
    goto LABEL_41;
  }
  if ((v17 & 0x2000000000000000) == 0)
  {
    uint64_t v21 = (int *)v14;
    if ((v16 & 0x1000000000000000) != 0) {
      uint64_t v22 = (unsigned __int8 *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v22 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    uint64_t v23 = (uint64_t)specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(v22, v19, 10);
    LOBYTE(v16) = v24 & 1;
    goto LABEL_40;
  }
  *(void *)&long long v68 = v16;
  *((void *)&v68 + 1) = v17 & 0xFFFFFFFFFFFFFFLL;
  if (v16 == 43)
  {
    if (!v18) {
      goto LABEL_68;
    }
    if (v18 == 1) {
      goto LABEL_35;
    }
    OUTLINED_FUNCTION_62_3();
    if (!v28 & v27) {
      goto LABEL_35;
    }
    uint64_t v23 = v30;
    if (v29 != 2)
    {
      uint64_t v21 = (int *)v14;
      OUTLINED_FUNCTION_62_3();
      if (!(!v28 & v27))
      {
        uint64_t v23 = 10 * v23 + v32;
        if (v31 != 3)
        {
          while (1)
          {
            OUTLINED_FUNCTION_85_2();
            if (!v28 & v27) {
              goto LABEL_36;
            }
            OUTLINED_FUNCTION_59_5();
            if (!v28) {
              goto LABEL_36;
            }
            uint64_t v23 = v34 + v33;
            if (__OFADD__(v34, v33)) {
              goto LABEL_36;
            }
            OUTLINED_FUNCTION_88_2();
            if (v28) {
              goto LABEL_40;
            }
          }
        }
        goto LABEL_39;
      }
      goto LABEL_36;
    }
LABEL_38:
    uint64_t v21 = (int *)v14;
    goto LABEL_39;
  }
  if (v16 != 45)
  {
    if (!v18 || (v16 - 48) > 9u) {
      goto LABEL_35;
    }
    uint64_t v23 = (v16 - 48);
    if (v18 != 1)
    {
      uint64_t v21 = (int *)v14;
      OUTLINED_FUNCTION_62_3();
      if (!(!v28 & v27))
      {
        uint64_t v23 = 10 * (v16 - 48) + v48;
        if (v47 != 2)
        {
          while (1)
          {
            OUTLINED_FUNCTION_85_2();
            if (!v28 & v27) {
              goto LABEL_36;
            }
            OUTLINED_FUNCTION_59_5();
            if (!v28) {
              goto LABEL_36;
            }
            uint64_t v23 = v50 + v49;
            if (__OFADD__(v50, v49)) {
              goto LABEL_36;
            }
            OUTLINED_FUNCTION_88_2();
            if (v28) {
              goto LABEL_40;
            }
          }
        }
        goto LABEL_39;
      }
LABEL_36:
      uint64_t v23 = 0;
      LOBYTE(v16) = 1;
      goto LABEL_40;
    }
    goto LABEL_38;
  }
  if (v18)
  {
    if (v18 != 1)
    {
      OUTLINED_FUNCTION_62_3();
      if (!(!v28 & v27))
      {
        uint64_t v21 = (int *)v14;
        if (v25 == 2)
        {
          LOBYTE(v16) = 0;
          uint64_t v23 = -(uint64_t)v26;
LABEL_40:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_41:
          swift_bridgeObjectRelease();
          char v35 = v16 & 1;
          if (v16) {
            uint64_t v36 = 0;
          }
          else {
            uint64_t v36 = v23;
          }
          uint64_t v37 = v21;
          goto LABEL_45;
        }
        if ((BYTE2(v16) - 48) <= 9u)
        {
          uint64_t v23 = -10 * v26 - (BYTE2(v16) - 48);
          if (v25 != 3)
          {
            while (1)
            {
              OUTLINED_FUNCTION_85_2();
              if (!v28 & v27) {
                goto LABEL_36;
              }
              OUTLINED_FUNCTION_59_5();
              if (!v28) {
                goto LABEL_36;
              }
              uint64_t v23 = v52 - v51;
              if (__OFSUB__(v52, v51)) {
                goto LABEL_36;
              }
              OUTLINED_FUNCTION_88_2();
              if (v28) {
                goto LABEL_40;
              }
            }
          }
LABEL_39:
          LOBYTE(v16) = 0;
          goto LABEL_40;
        }
        goto LABEL_36;
      }
    }
LABEL_35:
    uint64_t v21 = (int *)v14;
    goto LABEL_36;
  }
  __break(1u);
LABEL_68:
  __break(1u);
}

void VehicleReservationEntity.init(reservation:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v3 = v2;
  uint64_t v69 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_184_0();
  uint64_t v71 = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Calendar?);
  uint64_t v9 = OUTLINED_FUNCTION_81(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_16();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v11 = OUTLINED_FUNCTION_81(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_185_0();
  uint64_t v68 = v12;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_43_4();
  uint64_t v67 = v14;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_27_10();
  uint64_t v74 = v16;
  uint64_t v17 = OUTLINED_FUNCTION_30_11();
  uint64_t v18 = OUTLINED_FUNCTION_81(v17);
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_21_7();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_177_0();
  OUTLINED_FUNCTION_30_10();
  OUTLINED_FUNCTION_106_2();
  uint64_t v65 = v19;
  OUTLINED_FUNCTION_57_2();
  uint64_t v63 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_30_10();
  uint64_t v61 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_32_8();
  uint64_t v59 = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  OUTLINED_FUNCTION_32_8();
  uint64_t v57 = MEMORY[0x25A2C48D0](v1);
  OUTLINED_FUNCTION_119_1();
  OUTLINED_FUNCTION_106_2();
  uint64_t v55 = v20;
  OUTLINED_FUNCTION_14_15();
  uint64_t v53 = MEMORY[0x25A2C48D0](v1);
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_106_2();
  uint64_t v51 = v21;
  OUTLINED_FUNCTION_119_1();
  MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_32_8();
  MEMORY[0x25A2C48D0](v1);
  OUTLINED_FUNCTION_32_8();
  OUTLINED_FUNCTION_106_2();
  LocalizedStringResource.init(stringLiteral:)();
  MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_123_1();
  MEMORY[0x25A2C4900](v1);
  LocalizedStringResource.init(stringLiteral:)();
  MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_32_8();
  MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_32_8();
  MEMORY[0x25A2C48A0](v1);
  uint64_t v73 = v3[42];
  uint64_t v22 = type metadata accessor for DateComponents();
  OUTLINED_FUNCTION_71_3(v74);
  uint64_t v23 = v3[46];
  uint64_t v42 = v3[45];
  uint64_t v24 = type metadata accessor for Calendar();
  uint64_t v27 = OUTLINED_FUNCTION_38_5(v0, v25, v26, v24);
  OUTLINED_FUNCTION_32(v71, v28, v29, v27);
  OUTLINED_FUNCTION_46_5();
  OUTLINED_FUNCTION_48_4();
  if (v31)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v30 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_47_5();
  if (v32)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_15();
    OUTLINED_FUNCTION_21_10();
    OUTLINED_FUNCTION_18_15();
    __swift_storeEnumTagSinglePayload(v67, 0, 1, v22);
    uint64_t v33 = v3[38];
    uint64_t v72 = v3[37];
    uint64_t v34 = v3[36];
    uint64_t v41 = v3[35];
    OUTLINED_FUNCTION_71_3(v68);
    uint64_t v35 = v3[34];
    uint64_t v36 = v3[52];
    uint64_t v39 = v3[51];
    uint64_t v40 = v3[33];
    uint64_t v37 = v3[29];
    uint64_t v38 = v3[28];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    VehicleReservationEntity.init(bookingProvider:cost:dropOffAddress:dropOffBusinessName:dropOffDateTime:dropOffPhoneNumber:duration:pickUpAddress:pickUpBusinessName:pickUpDateTime:pickUpPhoneNumber:renterName:status:vehicleClass:confirmationNumber:)(v33, v42, v35, v72, v23, v67, v68, v73, v74, v42, v23, v67, v72, v33, v41, v34, v68, v42, v23,
      v40,
      v35,
      v39,
      v36,
      0,
      0,
      v38,
      v37,
      v51,
      v53,
      v55,
      v57,
      v59,
      v61,
      v63,
      v65,
      v67,
      v68,
      v69,
      v72);
    _s10OmniSearch0B10ResultItemOWOhTm_2((uint64_t)v3, (void (*)(void))type metadata accessor for RentalCarReservation);
    v75[0] = v66;
    v75[1] = v64;
    v75[2] = v62;
    v75[3] = v60;
    v75[4] = v58;
    v75[5] = v56;
    v75[6] = v54;
    v75[7] = v52;
    v75[8] = v50;
    v75[9] = v49;
    v75[10] = v48;
    v75[11] = v47;
    v75[12] = v46;
    v75[13] = v45;
    v75[14] = v44;
    v75[15] = v43;
    long long v76 = xmmword_258665BD0;
    outlined release of VehicleReservationEntity((uint64_t)v75);
    memcpy(v70, v77, 0x90uLL);
    OUTLINED_FUNCTION_119_0();
    return;
  }
LABEL_8:
  __break(1u);
}

void TicketedTransportationEntity.init(reservation:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v3 = v2;
  uint64_t v75 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_184_0();
  uint64_t v76 = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Calendar?);
  uint64_t v9 = OUTLINED_FUNCTION_81(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_18_8();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v11 = OUTLINED_FUNCTION_81(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_185_0();
  uint64_t v59 = v12;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_94_2();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v54 - v15;
  uint64_t v17 = type metadata accessor for LocalizedStringResource();
  uint64_t v18 = OUTLINED_FUNCTION_81(v17);
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_15();
  uint64_t v21 = v20 - v19;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_177_0();
  OUTLINED_FUNCTION_20_9();
  uint64_t v73 = MEMORY[0x25A2C4900](v21);
  OUTLINED_FUNCTION_61_3();
  uint64_t v72 = MEMORY[0x25A2C4900](v21);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  OUTLINED_FUNCTION_120_1();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v71 = MEMORY[0x25A2C48D0](v21);
  OUTLINED_FUNCTION_61_3();
  uint64_t v70 = MEMORY[0x25A2C4900](v21);
  OUTLINED_FUNCTION_61_3();
  uint64_t v69 = MEMORY[0x25A2C4900](v21);
  OUTLINED_FUNCTION_93_2();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v68 = MEMORY[0x25A2C48D0](v21);
  OUTLINED_FUNCTION_14_15();
  uint64_t v63 = MEMORY[0x25A2C48D0](v21);
  OUTLINED_FUNCTION_12_14();
  uint64_t v22 = MEMORY[0x25A2C4900](v21);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_52_3();
  uint64_t v66 = MEMORY[0x25A2C4900](v21);
  OUTLINED_FUNCTION_40_6();
  uint64_t v23 = MEMORY[0x25A2C4900](v21);
  OUTLINED_FUNCTION_115_1(v23);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_61_3();
  uint64_t v62 = MEMORY[0x25A2C48A0](v21);
  uint64_t v24 = v3[32];
  uint64_t v65 = v3[31];
  uint64_t v25 = v3[34];
  OUTLINED_FUNCTION_125_1(v3[33]);
  uint64_t v26 = type metadata accessor for DateComponents();
  uint64_t v67 = v16;
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v26);
  uint64_t v27 = v3[28];
  uint64_t v60 = v3[27];
  uint64_t v28 = v3[30];
  uint64_t v61 = v3[29];
  uint64_t v74 = v0;
  uint64_t v29 = v0;
  uint64_t v30 = v76;
  __swift_storeEnumTagSinglePayload(v29, 1, 1, v26);
  uint64_t v31 = type metadata accessor for Calendar();
  uint64_t v34 = OUTLINED_FUNCTION_38_5(v1, v32, v33, v31);
  OUTLINED_FUNCTION_32(v30, v35, v36, v34);
  OUTLINED_FUNCTION_46_5();
  OUTLINED_FUNCTION_48_4();
  if (v38)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v37 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_47_5();
  if (!v40) {
    goto LABEL_14;
  }
  uint64_t v58 = v22;
  uint64_t v41 = (uint64_t)v39;
  uint64_t v57 = v28;
  swift_bridgeObjectRetain();
  uint64_t v56 = v24;
  swift_bridgeObjectRetain();
  uint64_t v55 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_15();
  uint64_t v60 = v41;
  OUTLINED_FUNCTION_21_10();
  uint64_t v42 = v59;
  OUTLINED_FUNCTION_18_15();
  __swift_storeEnumTagSinglePayload(v42, 0, 1, v26);
  uint64_t v43 = v75;
  uint64_t v45 = v3[12];
  uint64_t v44 = v3[13];
  if (v3[26]) {
    uint64_t v46 = v3[26];
  }
  else {
    uint64_t v46 = MEMORY[0x263F8EE78];
  }
  if (v3[35]) {
    uint64_t v47 = v3[35];
  }
  else {
    uint64_t v47 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  TicketedTransportationEntity.init(arrivalStationName:arrivalStationAddress:arrivalDateTime:departureStationName:departureStationAddress:departureDateTime:duration:eventSubType:passengerNames:seatNumbers:)(v65, v56, v64, v55, v57, v60, v27, v61, v57, v74, v42, v45, v44, v46, v47, v74, v75, v76, v77,
    *((uint64_t *)&v77 + 1),
    v78,
    *((uint64_t *)&v78 + 1),
    v79,
    *((uint64_t *)&v79 + 1),
    v80,
    *((uint64_t *)&v80 + 1),
    v81);
  _s10OmniSearch0B10ResultItemOWOhTm_2((uint64_t)v3, (void (*)(void))type metadata accessor for TicketedTransportation);
  swift_release();
  OUTLINED_FUNCTION_86_2();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(0, 0xF000000000000000);
  uint64_t v48 = v82;
  long long v49 = v83;
  long long v50 = v78;
  long long v51 = v79;
  long long v52 = v80;
  long long v53 = v81;
  *(_OWORD *)uint64_t v43 = v77;
  *(_OWORD *)(v43 + 16) = v50;
  *(_OWORD *)(v43 + 32) = v51;
  *(_OWORD *)(v43 + 48) = v52;
  *(_OWORD *)(v43 + 64) = v53;
  *(void *)(v43 + 80) = v48;
  *(_OWORD *)(v43 + 88) = v49;
  OUTLINED_FUNCTION_119_0();
}

void TicketedShowEntity.init(reservation:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v3 = v2;
  long long v83 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_184_0();
  uint64_t v82 = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  uint64_t v9 = OUTLINED_FUNCTION_81(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_21_7();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Calendar?);
  uint64_t v11 = OUTLINED_FUNCTION_81(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_184_0();
  uint64_t v84 = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v14 = OUTLINED_FUNCTION_81(v13);
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_185_0();
  uint64_t v81 = v15;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v16);
  uint64_t v80 = (uint64_t)&v54 - v17;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_27_10();
  uint64_t v78 = v19;
  uint64_t v20 = OUTLINED_FUNCTION_30_11();
  uint64_t v21 = OUTLINED_FUNCTION_81(v20);
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  OUTLINED_FUNCTION_14_15();
  uint64_t v79 = MEMORY[0x25A2C48D0](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]?>);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v77 = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v76 = MEMORY[0x25A2C4900](v0);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v75 = MEMORY[0x25A2C4900](v0);
  OUTLINED_FUNCTION_177_0();
  OUTLINED_FUNCTION_30_10();
  uint64_t v74 = MEMORY[0x25A2C4900](v0);
  OUTLINED_FUNCTION_40_6();
  uint64_t v67 = MEMORY[0x25A2C4900](v0);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v73 = MEMORY[0x25A2C4900](v0);
  OUTLINED_FUNCTION_12_14();
  uint64_t v72 = MEMORY[0x25A2C4900](v0);
  OUTLINED_FUNCTION_122_1();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v71 = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  OUTLINED_FUNCTION_122_1();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v70 = MEMORY[0x25A2C48E0](v0);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v66 = MEMORY[0x25A2C4900](v0);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v69 = MEMORY[0x25A2C48D0](v0);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v64 = MEMORY[0x25A2C48D0](v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_50_6();
  uint64_t v22 = v1;
  uint64_t v23 = MEMORY[0x25A2C48A0](v0);
  uint64_t v24 = v3[26];
  uint64_t v25 = v3[27];
  uint64_t v26 = v3[29];
  uint64_t v68 = v3[28];
  uint64_t v27 = v3[30];
  uint64_t v65 = v3[31];
  uint64_t v29 = v3[32];
  uint64_t v28 = v3[33];
  uint64_t v62 = v24;
  uint64_t v63 = v28;
  uint64_t v30 = v3[34];
  uint64_t v31 = v3[35];
  uint64_t v32 = type metadata accessor for Calendar();
  uint64_t v35 = OUTLINED_FUNCTION_38_5(v84, v33, v34, v32);
  OUTLINED_FUNCTION_32(v22, v36, v37, v35);
  OUTLINED_FUNCTION_46_5();
  OUTLINED_FUNCTION_48_4();
  if (v39)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v38 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_47_5();
  if (v41)
  {
    uint64_t v60 = v31;
    uint64_t v61 = v23;
    uint64_t v42 = (uint64_t)v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v59 = v26;
    swift_bridgeObjectRetain();
    uint64_t v58 = v27;
    swift_bridgeObjectRetain();
    uint64_t v57 = v29;
    swift_bridgeObjectRetain();
    uint64_t v56 = v30;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_15();
    uint64_t v60 = v42;
    OUTLINED_FUNCTION_21_10();
    uint64_t v43 = v78;
    OUTLINED_FUNCTION_18_15();
    uint64_t v44 = type metadata accessor for DateComponents();
    __swift_storeEnumTagSinglePayload(v43, 0, 1, v44);
    uint64_t v45 = v3[39];
    uint64_t v84 = v3[38];
    uint64_t v46 = type metadata accessor for TicketedShow(0);
    uint64_t v47 = v82;
    outlined init with copy of PQAVerificationModelProtocol?((uint64_t)v3 + *(int *)(v46 + 116), v82, &demangling cache variable for type metadata for URL?);
    uint64_t v48 = (void *)((char *)v3 + *(int *)(v46 + 120));
    uint64_t v49 = v48[1];
    uint64_t v54 = *v48;
    uint64_t v50 = v80;
    OUTLINED_FUNCTION_71_3(v80);
    uint64_t v55 = v25;
    uint64_t v51 = v81;
    OUTLINED_FUNCTION_71_3(v81);
    uint64_t v52 = v3[12];
    uint64_t v53 = v3[13];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    TicketedShowEntity.init(reservationId:provider:customerNames:locationName:address:seatNumbers:duration:ticketType:ticketUrl:totalCost:startDateTime:endDateTime:eventSubType:)(v62, v55, v45, v59, v58, v60, v57, v63, v56, v60, v43, v84, v45, v47, v54, v49, v50, v51, v52,
      v53,
      v76,
      v77,
      v78,
      v79,
      v80,
      v81,
      v82,
      (uint64_t)v83,
      v84,
      v85,
      v86,
      v87);
    _s10OmniSearch0B10ResultItemOWOhTm_2((uint64_t)v3, (void (*)(void))type metadata accessor for TicketedShow);
    uint64_t v85 = v79;
    uint64_t v86 = v77;
    uint64_t v87 = v76;
    uint64_t v88 = v75;
    uint64_t v89 = v74;
    uint64_t v90 = v67;
    uint64_t v91 = v73;
    uint64_t v92 = v72;
    uint64_t v93 = v71;
    uint64_t v94 = v70;
    uint64_t v95 = v66;
    uint64_t v96 = v69;
    uint64_t v97 = v64;
    uint64_t v98 = v61;
    long long v99 = xmmword_258665BD0;
    outlined release of GenericEventEntity((uint64_t)&v85);
    memcpy(v83, v100, 0x80uLL);
    OUTLINED_FUNCTION_119_0();
    return;
  }
LABEL_8:
  __break(1u);
}

void GenericEventEntity.init(appointment:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v4 = v3;
  uint64_t v82 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentPerson?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_184_0();
  uint64_t v83 = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_184_0();
  uint64_t v81 = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  uint64_t v13 = OUTLINED_FUNCTION_81(v12);
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_21_7();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Calendar?);
  uint64_t v15 = OUTLINED_FUNCTION_81(v14);
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_16();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v17 = OUTLINED_FUNCTION_81(v16);
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_185_0();
  uint64_t v80 = v18;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v19);
  uint64_t v85 = (uint64_t)&v59 - v20;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_27_10();
  uint64_t v84 = v22;
  uint64_t v23 = OUTLINED_FUNCTION_30_11();
  uint64_t v24 = OUTLINED_FUNCTION_81(v23);
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_18_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[IntentPerson]>);
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_64_2();
  uint64_t v79 = MEMORY[0x25A2C48B0](v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_10_18();
  uint64_t v78 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_57_2();
  uint64_t v77 = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  OUTLINED_FUNCTION_14_15();
  uint64_t v76 = MEMORY[0x25A2C48D0](v1);
  OUTLINED_FUNCTION_23_8();
  uint64_t v75 = MEMORY[0x25A2C48D0](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  OUTLINED_FUNCTION_127_0();
  OUTLINED_FUNCTION_42_4();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v74 = MEMORY[0x25A2C48E0](v1);
  OUTLINED_FUNCTION_39_3();
  uint64_t v73 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_42_4();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v25 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_12_14();
  uint64_t v72 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_19_9();
  uint64_t v71 = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentPerson?>);
  OUTLINED_FUNCTION_33_6();
  uint64_t v70 = MEMORY[0x25A2C48B0](v1);
  OUTLINED_FUNCTION_15_13();
  uint64_t v26 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_17_10();
  uint64_t v27 = MEMORY[0x25A2C48D0](v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_177_0();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v28 = MEMORY[0x25A2C48A0](v1);
  uint64_t v30 = v4[36];
  uint64_t v29 = v4[37];
  uint64_t v31 = type metadata accessor for Calendar();
  uint64_t v34 = OUTLINED_FUNCTION_38_5(v0, v32, v33, v31);
  OUTLINED_FUNCTION_32(v2, v35, v36, v34);
  OUTLINED_FUNCTION_46_5();
  OUTLINED_FUNCTION_48_4();
  if (v38)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v37 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_47_5();
  if (v40)
  {
    uint64_t v68 = v29;
    uint64_t v69 = v28;
    uint64_t v41 = (uint64_t)v39;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_15();
    uint64_t v65 = v41;
    OUTLINED_FUNCTION_21_10();
    uint64_t v42 = v84;
    OUTLINED_FUNCTION_18_15();
    uint64_t v43 = type metadata accessor for DateComponents();
    OUTLINED_FUNCTION_101_2(v42, 0);
    __swift_storeEnumTagSinglePayload(v85, 1, 1, v43);
    uint64_t v44 = type metadata accessor for URL();
    uint64_t v67 = v26;
    uint64_t v45 = v81;
    OUTLINED_FUNCTION_32(v81, v46, v47, v44);
    uint64_t v48 = v4[26];
    uint64_t v65 = v25;
    uint64_t v66 = v27;
    uint64_t v49 = v4[27];
    uint64_t v50 = v4[11];
    uint64_t v63 = v4[10];
    uint64_t v64 = v48;
    uint64_t v51 = v4[12];
    uint64_t v52 = v4[13];
    uint64_t v53 = v4[31];
    uint64_t v60 = v4[30];
    uint64_t v61 = v51;
    uint64_t v54 = type metadata accessor for IntentPerson();
    uint64_t v62 = v30;
    uint64_t v55 = v83;
    OUTLINED_FUNCTION_32(v83, v56, v57, v54);
    uint64_t v58 = v80;
    __swift_storeEnumTagSinglePayload(v80, 1, 1, v43);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    GenericEventEntity.init(attendees:businessName:cost:duration:endDateTime:eventLink:eventName:eventType:eventSubType:location:organizer:phoneNumber:startDateTime:)(MEMORY[0x263F8EE78], 0, 0, v62, v68, v84, v85, v45, v64, v49, v63, v50, v61, v52, v60, v53, v55, 0, 0,
      v58,
      v81,
      (uint64_t)v82,
      v83,
      v84,
      v85,
      v86,
      v87,
      v88,
      v89,
      v90,
      v91,
      v92);
    _s10OmniSearch0B10ResultItemOWOhTm_2((uint64_t)v4, (void (*)(void))type metadata accessor for Appointment);
    uint64_t v86 = v79;
    uint64_t v87 = v78;
    uint64_t v88 = v77;
    uint64_t v89 = v76;
    uint64_t v90 = v75;
    uint64_t v91 = v74;
    uint64_t v92 = v73;
    uint64_t v93 = v65;
    uint64_t v94 = v72;
    uint64_t v95 = v71;
    uint64_t v96 = v70;
    uint64_t v97 = v67;
    uint64_t v98 = v66;
    uint64_t v99 = v69;
    long long v100 = xmmword_258665BD0;
    outlined release of GenericEventEntity((uint64_t)&v86);
    memcpy(v82, v101, 0x80uLL);
    OUTLINED_FUNCTION_119_0();
    return;
  }
LABEL_8:
  __break(1u);
}

void GenericEventEntity.init(party:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = v1;
  uint64_t v69 = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentPerson?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_184_0();
  uint64_t v68 = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_15();
  uint64_t v11 = v10 - v9;
  uint64_t v50 = v10 - v9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v13 = OUTLINED_FUNCTION_81(v12);
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_185_0();
  uint64_t v66 = v14;
  OUTLINED_FUNCTION_113_1();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v47 - v17;
  uint64_t v51 = (uint64_t)&v47 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v47 - v19;
  uint64_t v52 = (uint64_t)&v47 - v19;
  uint64_t v21 = type metadata accessor for LocalizedStringResource();
  uint64_t v22 = OUTLINED_FUNCTION_81(v21);
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[IntentPerson]>);
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_64_2();
  uint64_t v67 = MEMORY[0x25A2C48B0](v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_10_18();
  OUTLINED_FUNCTION_72_2();
  uint64_t v65 = v23;
  OUTLINED_FUNCTION_57_2();
  uint64_t v64 = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  OUTLINED_FUNCTION_14_15();
  uint64_t v63 = MEMORY[0x25A2C48D0](v0);
  OUTLINED_FUNCTION_23_8();
  uint64_t v62 = MEMORY[0x25A2C48D0](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  OUTLINED_FUNCTION_63_3();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v61 = MEMORY[0x25A2C48E0](v0);
  OUTLINED_FUNCTION_39_3();
  OUTLINED_FUNCTION_72_2();
  uint64_t v60 = v24;
  OUTLINED_FUNCTION_63_3();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v59 = MEMORY[0x25A2C4900](v0);
  OUTLINED_FUNCTION_12_14();
  uint64_t v58 = MEMORY[0x25A2C4900](v0);
  OUTLINED_FUNCTION_19_9();
  uint64_t v57 = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentPerson?>);
  OUTLINED_FUNCTION_33_6();
  uint64_t v56 = MEMORY[0x25A2C48B0](v0);
  OUTLINED_FUNCTION_15_13();
  OUTLINED_FUNCTION_72_2();
  uint64_t v55 = v25;
  OUTLINED_FUNCTION_17_10();
  uint64_t v54 = MEMORY[0x25A2C48D0](v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v53 = MEMORY[0x25A2C48A0](v0);
  uint64_t v26 = type metadata accessor for DateComponents();
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 1, 1, v26);
  __swift_storeEnumTagSinglePayload((uint64_t)v18, 1, 1, v26);
  uint64_t v27 = type metadata accessor for Party(0);
  outlined init with copy of PQAVerificationModelProtocol?((uint64_t)v2 + *(int *)(v27 + 104), v11, &demangling cache variable for type metadata for URL?);
  uint64_t v28 = v2;
  uint64_t v29 = v2[27];
  uint64_t v48 = v2[26];
  uint64_t v49 = v2;
  uint64_t v30 = v2[11];
  uint64_t v47 = v2[10];
  uint64_t v31 = v2[12];
  uint64_t v32 = v2[13];
  uint64_t v33 = v2[30];
  uint64_t v34 = v28[31];
  uint64_t v35 = type metadata accessor for IntentPerson();
  uint64_t v36 = v68;
  OUTLINED_FUNCTION_32(v68, v37, v38, v35);
  uint64_t v39 = v66;
  __swift_storeEnumTagSinglePayload(v66, 1, 1, v26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v46 = v47;
  uint64_t v45 = v48;
  OUTLINED_FUNCTION_114_2();
  GenericEventEntity.init(attendees:businessName:cost:duration:endDateTime:eventLink:eventName:eventType:eventSubType:location:organizer:phoneNumber:startDateTime:)(v40, v41, v42, v43, v44, v52, v51, v50, v45, v29, v46, v30, v31, v32, v33, v34, v36, 0, 0,
    v39,
    v47,
    v48,
    (uint64_t)v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58);
  _s10OmniSearch0B10ResultItemOWOhTm_2((uint64_t)v49, (void (*)(void))type metadata accessor for Party);
  v70[0] = v67;
  v70[1] = v65;
  v70[2] = v64;
  v70[3] = v63;
  v70[4] = v62;
  v70[5] = v61;
  v70[6] = v60;
  v70[7] = v59;
  v70[8] = v58;
  v70[9] = v57;
  v70[10] = v56;
  v70[11] = v55;
  v70[12] = v54;
  v70[13] = v53;
  long long v71 = xmmword_258665BD0;
  outlined release of GenericEventEntity((uint64_t)v70);
  memcpy(v69, v72, 0x80uLL);
  OUTLINED_FUNCTION_119_0();
}

void GenericEventEntity.init(trip:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v4 = v3;
  uint64_t v75 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentPerson?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_184_0();
  uint64_t v74 = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_184_0();
  uint64_t v73 = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  uint64_t v13 = OUTLINED_FUNCTION_81(v12);
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_16();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Calendar?);
  uint64_t v15 = OUTLINED_FUNCTION_81(v14);
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_21_7();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v17 = OUTLINED_FUNCTION_81(v16);
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_185_0();
  uint64_t v72 = v18;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_43_4();
  uint64_t v77 = v20;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_27_10();
  uint64_t v23 = v22;
  uint64_t v24 = OUTLINED_FUNCTION_30_11();
  uint64_t v25 = OUTLINED_FUNCTION_81(v24);
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_39();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[IntentPerson]>);
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_64_2();
  uint64_t v71 = MEMORY[0x25A2C48B0](v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_10_18();
  uint64_t v70 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_57_2();
  uint64_t v69 = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  OUTLINED_FUNCTION_14_15();
  uint64_t v68 = MEMORY[0x25A2C48D0](v1);
  OUTLINED_FUNCTION_23_8();
  uint64_t v67 = MEMORY[0x25A2C48D0](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  OUTLINED_FUNCTION_127_0();
  OUTLINED_FUNCTION_26_12();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v65 = MEMORY[0x25A2C48E0](v1);
  OUTLINED_FUNCTION_26_12();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v63 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_26_12();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v61 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_12_14();
  uint64_t v59 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_19_9();
  uint64_t v57 = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentPerson?>);
  OUTLINED_FUNCTION_77_2();
  OUTLINED_FUNCTION_33_6();
  uint64_t v55 = MEMORY[0x25A2C48B0](v1);
  OUTLINED_FUNCTION_15_13();
  uint64_t v26 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_17_10();
  uint64_t v27 = MEMORY[0x25A2C48D0](v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v76 = MEMORY[0x25A2C48A0](v1);
  uint64_t v28 = type metadata accessor for Calendar();
  uint64_t v31 = OUTLINED_FUNCTION_38_5(v2, v29, v30, v28);
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v31);
  type metadata accessor for Trip(0);
  OUTLINED_FUNCTION_46_5();
  OUTLINED_FUNCTION_48_4();
  if (v33)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v32 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_47_5();
  if (v35)
  {
    uint64_t v36 = v34;
    OUTLINED_FUNCTION_18_15();
    type metadata accessor for DateComponents();
    OUTLINED_FUNCTION_101_2(v23, 0);
    OUTLINED_FUNCTION_101_2(v77, 1);
    outlined init with copy of PQAVerificationModelProtocol?((uint64_t)v4 + *(int *)(v36 + 100), v73, &demangling cache variable for type metadata for URL?);
    uint64_t v37 = v4[27];
    uint64_t v50 = v4[10];
    uint64_t v51 = v4[26];
    uint64_t v53 = v27;
    uint64_t v38 = v4[11];
    uint64_t v49 = v4[12];
    uint64_t v39 = v4[13];
    uint64_t v40 = type metadata accessor for IntentPerson();
    OUTLINED_FUNCTION_32(v74, v41, v42, v40);
    OUTLINED_FUNCTION_101_2(v72, 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_114_2();
    GenericEventEntity.init(attendees:businessName:cost:duration:endDateTime:eventLink:eventName:eventType:eventSubType:location:organizer:phoneNumber:startDateTime:)(v43, v44, v45, v46, v47, v23, v77, v73, v51, v37, v50, v38, v49, v39, 0, 0, v74, 0, 0,
      v72,
      v48,
      v49,
      v50,
      v51,
      v26,
      v53,
      v55,
      v57,
      v59,
      v61,
      v63,
      v65);
    _s10OmniSearch0B10ResultItemOWOhTm_2((uint64_t)v4, (void (*)(void))type metadata accessor for Trip);
    v78[0] = v71;
    v78[1] = v70;
    v78[2] = v69;
    v78[3] = v68;
    v78[4] = v67;
    v78[5] = v66;
    v78[6] = v64;
    v78[7] = v62;
    v78[8] = v60;
    v78[9] = v58;
    v78[10] = v56;
    v78[11] = v52;
    v78[12] = v54;
    v78[13] = v76;
    long long v79 = xmmword_258665BD0;
    outlined release of GenericEventEntity((uint64_t)v78);
    memcpy(v75, v80, 0x80uLL);
    OUTLINED_FUNCTION_119_0();
    return;
  }
LABEL_8:
  __break(1u);
}

double EventEntity.asNLGEntity.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v9 = v1[9];
  v26[0] = *v1;
  v26[1] = v2;
  v26[2] = v3;
  v26[3] = v4;
  v26[4] = v6;
  v26[5] = v5;
  v26[6] = v7;
  v26[7] = v8;
  unint64_t v24 = v9;
  uint64_t v25 = v10;
  v26[8] = v10;
  v26[9] = v9;
  EventEntity.representedEntity.getter();
  if (v27[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppEntity & CardDisplayable & SpotlightItemProviding);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchNLGEntityConvertible);
    if (swift_dynamicCast())
    {
      if (*((void *)&v29 + 1))
      {
        outlined init with take of SageSearchClient(&v28, (uint64_t)v31);
        uint64_t v11 = v32;
        uint64_t v12 = v33;
        __swift_project_boxed_opaque_existential_1(v31, v32);
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
        return result;
      }
    }
    else
    {
      uint64_t v30 = 0;
      long long v28 = 0u;
      long long v29 = 0u;
    }
  }
  else
  {
    outlined destroy of SearchResult?((uint64_t)v27, &demangling cache variable for type metadata for (AppEntity & CardDisplayable & SpotlightItemProviding)?);
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v30 = 0;
  }
  outlined destroy of SearchResult?((uint64_t)&v28, &demangling cache variable for type metadata for SearchNLGEntityConvertible?);
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)static Logging.search);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v25, v24);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v25, v24);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v15, v21))
  {
    log = v15;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    v26[0] = swift_slowAlloc();
    buf = v16;
    *(_DWORD *)uint64_t v16 = 136315138;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    outlined copy of Data?(v25, v24);
    EntityProperty.wrappedValue.getter();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    outlined consume of Data?(v25, v24);
    uint64_t v17 = 0xD000000000000011;
    unint64_t v18 = 0x800000025867C2D0;
    switch(LOBYTE(v27[0]))
    {
      case 1:
        uint64_t v17 = 0xD000000000000015;
        uint64_t v19 = "restaurantReservation";
        goto LABEL_16;
      case 2:
        unint64_t v18 = 0x800000025867C310;
        uint64_t v17 = 0xD000000000000010;
        break;
      case 3:
        uint64_t v17 = 0xD000000000000012;
        uint64_t v19 = "vehicleReservation";
        goto LABEL_16;
      case 4:
        uint64_t v17 = 0xD000000000000016;
        uint64_t v19 = "ticketedTransportation";
LABEL_16:
        unint64_t v18 = (unint64_t)(v19 - 32) | 0x8000000000000000;
        break;
      case 5:
        unint64_t v18 = 0xEC000000776F6853;
        uint64_t v17 = 0x646574656B636974;
        break;
      case 6:
        unint64_t v18 = 0xEC000000746E6576;
        uint64_t v17 = 0x45636972656E6567;
        break;
      default:
        break;
    }
    v27[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    outlined consume of Data?(v25, v24);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    outlined consume of Data?(v25, v24);
    _os_log_impl(&dword_257DC6000, log, v21, "Failed to convert %s to SearchNLGEntity", buf, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_34();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    outlined consume of Data?(v25, v24);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    outlined consume of Data?(v25, v24);
  }
  return SearchNLGEntity.init()(a1);
}

uint64_t FlightReservationEntity.asNLGEntity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_65_3();
  memcpy(__dst, v1, sizeof(__dst));
  SearchNLGEntity.init()(a1);
  outlined retain of FlightReservationEntity((uint64_t)__dst);
  EntityProperty.wrappedValue.getter();
  outlined release of FlightReservationEntity((uint64_t)__dst);
  __n128 v7 = OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_126_1(v8, v7);
  outlined retain of FlightReservationEntity((uint64_t)__dst);
  EntityProperty.wrappedValue.getter();
  outlined release of FlightReservationEntity((uint64_t)__dst);
  __n128 v9 = OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_126_1(v10, v9);
  outlined retain of FlightReservationEntity((uint64_t)__dst);
  EntityProperty.wrappedValue.getter();
  outlined release of FlightReservationEntity((uint64_t)__dst);
  uint64_t v11 = type metadata accessor for DateComponents();
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v11);
  OUTLINED_FUNCTION_50_7();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_104_2();
  outlined retain of FlightReservationEntity((uint64_t)__dst);
  EntityProperty.wrappedValue.getter();
  outlined release of FlightReservationEntity((uint64_t)__dst);
  __n128 v12 = OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_126_1(v13, v12);
  outlined retain of FlightReservationEntity((uint64_t)__dst);
  EntityProperty.wrappedValue.getter();
  outlined release of FlightReservationEntity((uint64_t)__dst);
  __n128 v14 = OUTLINED_FUNCTION_87_2();
  return OUTLINED_FUNCTION_126_1(v15, v14);
}

void HotelReservationEntity.asNLGEntity.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_185_0();
  uint64_t v12 = v5;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_27_10();
  uint64_t v13 = v7;
  uint64_t v14 = *(void *)(v0 + 104);
  unint64_t v15 = *(void *)(v0 + 112);
  SearchNLGEntity.init()(v2);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v14, v15);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v14, v15);
  EntityProperty.wrappedValue.setter();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v14, v15);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v14, v15);
  outlined init with copy of PQAVerificationModelProtocol?(v13, v12, &demangling cache variable for type metadata for DateComponents?);
  EntityProperty.wrappedValue.setter();
  outlined destroy of SearchResult?(v13, &demangling cache variable for type metadata for DateComponents?);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v14, v15);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v14, v15);
  outlined init with copy of PQAVerificationModelProtocol?(v13, v12, &demangling cache variable for type metadata for DateComponents?);
  EntityProperty.wrappedValue.setter();
  outlined destroy of SearchResult?(v13, &demangling cache variable for type metadata for DateComponents?);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v8 = OUTLINED_FUNCTION_121_1();
  outlined copy of Data?(v8, v9);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v10 = OUTLINED_FUNCTION_121_1();
  outlined consume of Data?(v10, v11);
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_119_0();
}

void RestaurantReservationEntity.asNLGEntity.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_185_0();
  uint64_t v20 = v5;
  OUTLINED_FUNCTION_113_1();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_124_1(v7, v8, v9, v10, v11, v12, v13, v14, v18);
  uint64_t v21 = *(void *)(v0 + 80);
  unint64_t v15 = *(void *)(v0 + 88);
  SearchNLGEntity.init()(v2);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v21, v15);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v16 = OUTLINED_FUNCTION_121_1();
  outlined consume of Data?(v16, v17);
  EntityProperty.wrappedValue.setter();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v21, v15);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v21, v15);
  outlined init with copy of PQAVerificationModelProtocol?(v19, v20, &demangling cache variable for type metadata for DateComponents?);
  EntityProperty.wrappedValue.setter();
  outlined destroy of SearchResult?(v19, &demangling cache variable for type metadata for DateComponents?);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v21, v15);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v21, v15);
  OUTLINED_FUNCTION_100_2();
  OUTLINED_FUNCTION_119_0();
}

uint64_t VehicleReservationEntity.asNLGEntity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_65_3();
  memcpy(__dst, v1, sizeof(__dst));
  SearchNLGEntity.init()(a1);
  outlined retain of VehicleReservationEntity((uint64_t)__dst);
  EntityProperty.wrappedValue.getter();
  outlined release of VehicleReservationEntity((uint64_t)__dst);
  EntityProperty.wrappedValue.setter();
  outlined retain of VehicleReservationEntity((uint64_t)__dst);
  EntityProperty.wrappedValue.getter();
  outlined release of VehicleReservationEntity((uint64_t)__dst);
  OUTLINED_FUNCTION_50_7();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_104_2();
  outlined retain of VehicleReservationEntity((uint64_t)__dst);
  EntityProperty.wrappedValue.getter();
  outlined release of VehicleReservationEntity((uint64_t)__dst);
  OUTLINED_FUNCTION_50_7();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_104_2();
  outlined retain of VehicleReservationEntity((uint64_t)__dst);
  EntityProperty.wrappedValue.getter();
  outlined release of VehicleReservationEntity((uint64_t)__dst);
  return EntityProperty.wrappedValue.setter();
}

void TicketedTransportationEntity.asNLGEntity.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_185_0();
  uint64_t v19 = v5;
  OUTLINED_FUNCTION_113_1();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_124_1(v7, v8, v9, v10, v11, v12, v13, v14, v17);
  uint64_t v15 = *(void *)(v0 + 88);
  unint64_t v16 = *(void *)(v0 + 96);
  uint64_t v20 = v15;
  SearchNLGEntity.init()(v2);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v20, v16);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v20, v16);
  outlined init with copy of PQAVerificationModelProtocol?(v18, v19, &demangling cache variable for type metadata for DateComponents?);
  EntityProperty.wrappedValue.setter();
  outlined destroy of SearchResult?(v18, &demangling cache variable for type metadata for DateComponents?);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v20, v16);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v20, v16);
  outlined init with copy of PQAVerificationModelProtocol?(v18, v19, &demangling cache variable for type metadata for DateComponents?);
  EntityProperty.wrappedValue.setter();
  outlined destroy of SearchResult?(v18, &demangling cache variable for type metadata for DateComponents?);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v20, v16);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v20, v16);
  OUTLINED_FUNCTION_100_2();
  OUTLINED_FUNCTION_119_0();
}

uint64_t TicketedShowEntity.asNLGEntity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_65_3();
  memcpy(__dst, v1, sizeof(__dst));
  SearchNLGEntity.init()(a1);
  outlined retain of GenericEventEntity((uint64_t)__dst);
  EntityProperty.wrappedValue.getter();
  outlined release of GenericEventEntity((uint64_t)__dst);
  OUTLINED_FUNCTION_50_7();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_104_2();
  outlined retain of GenericEventEntity((uint64_t)__dst);
  EntityProperty.wrappedValue.getter();
  outlined release of GenericEventEntity((uint64_t)__dst);
  OUTLINED_FUNCTION_50_7();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_104_2();
  outlined retain of GenericEventEntity((uint64_t)__dst);
  EntityProperty.wrappedValue.getter();
  outlined release of GenericEventEntity((uint64_t)__dst);
  return EntityProperty.wrappedValue.setter();
}

unint64_t lazy protocol witness table accessor for type EventSubType and conformance EventSubType()
{
  unint64_t result = lazy protocol witness table cache variable for type EventSubType and conformance EventSubType;
  if (!lazy protocol witness table cache variable for type EventSubType and conformance EventSubType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventSubType and conformance EventSubType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventSubType and conformance EventSubType;
  if (!lazy protocol witness table cache variable for type EventSubType and conformance EventSubType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventSubType and conformance EventSubType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventSubType and conformance EventSubType;
  if (!lazy protocol witness table cache variable for type EventSubType and conformance EventSubType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventSubType and conformance EventSubType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventSubType and conformance EventSubType;
  if (!lazy protocol witness table cache variable for type EventSubType and conformance EventSubType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventSubType and conformance EventSubType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventSubType and conformance EventSubType;
  if (!lazy protocol witness table cache variable for type EventSubType and conformance EventSubType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventSubType and conformance EventSubType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventSubType and conformance EventSubType;
  if (!lazy protocol witness table cache variable for type EventSubType and conformance EventSubType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventSubType and conformance EventSubType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventSubType and conformance EventSubType;
  if (!lazy protocol witness table cache variable for type EventSubType and conformance EventSubType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventSubType and conformance EventSubType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventSubType and conformance EventSubType;
  if (!lazy protocol witness table cache variable for type EventSubType and conformance EventSubType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventSubType and conformance EventSubType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventSubType and conformance EventSubType;
  if (!lazy protocol witness table cache variable for type EventSubType and conformance EventSubType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventSubType and conformance EventSubType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventSubType and conformance EventSubType;
  if (!lazy protocol witness table cache variable for type EventSubType and conformance EventSubType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventSubType and conformance EventSubType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventSubType and conformance EventSubType;
  if (!lazy protocol witness table cache variable for type EventSubType and conformance EventSubType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventSubType and conformance EventSubType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventSubType and conformance EventSubType;
  if (!lazy protocol witness table cache variable for type EventSubType and conformance EventSubType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventSubType and conformance EventSubType);
  }
  return result;
}

void *specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

{
  uint64_t v2;
  void *v4;
  size_t v5;

  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Character>);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 16);
  return v4;
}

uint64_t _StringGuts._slowEnsureMatchingEncoding(_:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v6 = String.UTF16View.index(_:offsetBy:)();
    OUTLINED_FUNCTION_84_1(v6);
    return v7 | 4;
  }
  else
  {
    uint64_t v3 = MEMORY[0x25A2C7CB0](15, a1 >> 16);
    OUTLINED_FUNCTION_84_1(v3);
    return v4 | 8;
  }
}

uint64_t outlined init with take of Trip(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_211();
  v5(v4);
  return a2;
}

uint64_t _s10OmniSearch0B10ResultItemOWOcTm_0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_210();
  v5(v4);
  return a2;
}

uint64_t _s10OmniSearch0B10ResultItemOWOhTm_2(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unsigned __int8 *specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(a1, a2, a3);
}

unsigned __int8 *specialized _parseInteger<A, B>(ascii:radix:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v12 = a1;
  uint64_t v13 = a2;
  swift_bridgeObjectRetain();
  uint64_t v6 = String.init<A>(_:)();
  unint64_t v7 = v5;
  if ((v5 & 0x1000000000000000) == 0)
  {
    if ((v5 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v9 = HIBYTE(v7) & 0xF;
    uint64_t v12 = v6;
    uint64_t v13 = v7 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v8 = (unsigned __int8 *)&v12;
    goto LABEL_7;
  }
  static String._copying(_:)();
  OUTLINED_FUNCTION_31_8();
  swift_bridgeObjectRelease();
  unint64_t v7 = v3;
  if ((v3 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v10 = specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(v8, v9, a3);
  swift_bridgeObjectRelease();
  return v10;
}

unsigned __int8 *specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v15 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v16 = a3 + 48;
        unsigned __int8 v17 = a3 + 55;
        unsigned __int8 v18 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = 58;
        }
        else
        {
          unsigned __int8 v18 = 97;
          unsigned __int8 v17 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          uint64_t v19 = result + 1;
          do
          {
            unsigned int v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                uint64_t v13 = 0;
                if (v20 < 0x61 || v20 >= v18) {
                  return (unsigned __int8 *)v13;
                }
                char v21 = -87;
              }
              else
              {
                char v21 = -55;
              }
            }
            else
            {
              char v21 = -48;
            }
            uint64_t v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21))) {
              return 0;
            }
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        unsigned __int8 v23 = a3 + 48;
        unsigned __int8 v24 = a3 + 55;
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v23 = 58;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v24 = 65;
        }
        if (result)
        {
          uint64_t v26 = 0;
          do
          {
            unsigned int v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                uint64_t v13 = 0;
                if (v27 < 0x61 || v27 >= v25) {
                  return (unsigned __int8 *)v13;
                }
                char v28 = -87;
              }
              else
              {
                char v28 = -55;
              }
            }
            else
            {
              char v28 = -48;
            }
            uint64_t v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
              return 0;
            }
            uint64_t v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28))) {
              return 0;
            }
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      uint64_t v5 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v6 = a3 + 48;
        unsigned __int8 v7 = a3 + 55;
        unsigned __int8 v8 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = 58;
        }
        else
        {
          unsigned __int8 v8 = 97;
          unsigned __int8 v7 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          for (i = result + 1; ; ++i)
          {
            unsigned int v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                uint64_t v13 = 0;
                if (v11 < 0x61 || v11 >= v8) {
                  return (unsigned __int8 *)v13;
                }
                char v12 = -87;
              }
              else
              {
                char v12 = -55;
              }
            }
            else
            {
              char v12 = -48;
            }
            uint64_t v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12))) {
              return 0;
            }
            if (!--v5) {
              return (unsigned __int8 *)v9;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t static String._copying(_:)()
{
  unint64_t v0 = specialized Collection.subscript.getter();
  uint64_t v4 = static String._copying(_:)(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t specialized Collection.subscript.getter()
{
  return String.subscript.getter();
}

uint64_t static String._copying(_:)(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = specialized Collection.count.getter(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(v9, 0);
      unint64_t v12 = specialized Sequence._copySequenceContents(initializing:)((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        _StringObject.sharedUTF8.getter();
LABEL_4:
        JUMPOUT(0x25A2C7BD0);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x25A2C7BD0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x25A2C7BD0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t specialized Collection.count.getter(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = _StringGuts._slowEnsureMatchingEncoding(_:)(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = _StringGuts._slowEnsureMatchingEncoding(_:)(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t specialized Sequence._copySequenceContents(initializing:)(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_38;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_35:
    void *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t result = v12;
    if ((v12 & 0xC) == v15) {
      unint64_t result = _StringGuts._slowEnsureMatchingEncoding(_:)(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      unint64_t result = _StringGuts._slowEnsureMatchingEncoding(_:)(v12, a6, a7);
      unint64_t v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16) {
      goto LABEL_37;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_31:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t OUTLINED_FUNCTION_6_15()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_10_18()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_11_12()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_12_14()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_14_15()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_15_13()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_16_14()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_17_10()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_18_15()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t OUTLINED_FUNCTION_19_9()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_20_9()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_22_13@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_23_8()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_24_9()
{
  JUMPOUT(0x25A2C4890);
}

uint64_t OUTLINED_FUNCTION_26_12()
{
  return 0x20746E657645;
}

uint64_t OUTLINED_FUNCTION_30_11()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t OUTLINED_FUNCTION_32_8()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_33_6()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_34_7()
{
  outlined consume of Data?(0, 0xF000000000000000);
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_38_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
  return type metadata accessor for TimeZone();
}

uint64_t OUTLINED_FUNCTION_39_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_40_6()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_42_4()
{
  return 0x20746E657645;
}

uint64_t OUTLINED_FUNCTION_43_5(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_44_7()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

unint64_t OUTLINED_FUNCTION_45_4()
{
  return 0xD000000000000019;
}

uint64_t OUTLINED_FUNCTION_49_4()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_50_7()
{
  return outlined init with copy of PQAVerificationModelProtocol?(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_51_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_52_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_53_4()
{
  outlined consume of Data?(0, 0xF000000000000000);
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_54_4()
{
  outlined copy of Data?(0, 0xF000000000000000);
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_55_5@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a3 - 256);
  return _s10OmniSearch0B10ResultItemOWOcTm_0(a1, v4, a2);
}

uint64_t OUTLINED_FUNCTION_57_2()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_58_4(__n128 a1)
{
  v1[4] = a1;
}

uint64_t OUTLINED_FUNCTION_60_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_61_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_63_3()
{
  return 0x20746E657645;
}

uint64_t OUTLINED_FUNCTION_64_2()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_66_3()
{
  return outlined copy of Data?(0, 0xF000000000000000);
}

uint64_t OUTLINED_FUNCTION_67_3@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a3 - 256);
  return outlined init with take of Trip(a1, v4, a2);
}

uint64_t OUTLINED_FUNCTION_69_3()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_70_3()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_71_3(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

void OUTLINED_FUNCTION_72_2()
{
  JUMPOUT(0x25A2C4900);
}

void OUTLINED_FUNCTION_74_2()
{
  JUMPOUT(0x25A2C4890);
}

void OUTLINED_FUNCTION_75_1()
{
  uint64_t v9 = *(void **)(v0 + 48);
  void *v9 = v4;
  v9[1] = v3;
  v9[2] = v6;
  v9[3] = v1;
  v9[4] = v7;
  v9[5] = v5;
  v9[6] = v8;
  v9[7] = v2;
}

void OUTLINED_FUNCTION_76_1(uint64_t a1@<X8>)
{
  uint64_t v9 = *(void **)(a1 - 256);
  void *v9 = v1;
  v9[1] = v2;
  v9[2] = v3;
  v9[3] = v5;
  v9[4] = v6;
  v9[5] = v8;
  v9[6] = v4;
  v9[7] = v7;
}

uint64_t OUTLINED_FUNCTION_78_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_79_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_81_1()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_82_2()
{
  return v0 | 0xA;
}

uint64_t OUTLINED_FUNCTION_83_0()
{
  return v0 | 9;
}

unint64_t OUTLINED_FUNCTION_84_1(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t OUTLINED_FUNCTION_86_2()
{
  return swift_release();
}

__n128 OUTLINED_FUNCTION_87_2()
{
  return *(__n128 *)(v0 - 272);
}

uint64_t OUTLINED_FUNCTION_90_1()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_91_2()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_92_2()
{
  JUMPOUT(0x25A2C4880);
}

uint64_t OUTLINED_FUNCTION_93_2()
{
  return 0x7275747261706544;
}

uint64_t OUTLINED_FUNCTION_100_2()
{
  *(_OWORD *)(v0 - 96) = *(_OWORD *)(v0 - 96);
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_101_2(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_103_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_104_2()
{
  return outlined destroy of SearchResult?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_105_2()
{
  return 0x206C61746F54;
}

void OUTLINED_FUNCTION_106_2()
{
  JUMPOUT(0x25A2C4900);
}

uint64_t OUTLINED_FUNCTION_107_2()
{
  return swift_release();
}

void OUTLINED_FUNCTION_111_2()
{
  JUMPOUT(0x25A2C4900);
}

void OUTLINED_FUNCTION_112_2()
{
  JUMPOUT(0x25A2C4900);
}

uint64_t OUTLINED_FUNCTION_113_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_115_1(uint64_t result)
{
  *(void *)(v1 - 288) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_116_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_117_1()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_118_1()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_119_1()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_120_1()
{
  return 0x206C617669727241;
}

uint64_t OUTLINED_FUNCTION_121_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_122_1()
{
  return 0x74656B636954;
}

uint64_t OUTLINED_FUNCTION_123_1()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_124_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 184) = (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_125_1@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_126_1@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  *(__n128 *)(a1 - 256) = a2;
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_128_1()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void EventEntity.representedEntity.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v132 = v1;
  uint64_t v2 = v0[1];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = v0[8];
  unint64_t v7 = v0[9];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v8, v7);
  EntityProperty.wrappedValue.getter();
  swift_release();
  uint64_t v141 = v5;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v8, v7);
  switch(v321)
  {
    case 1:
      swift_retain();
      OUTLINED_FUNCTION_183_1();
      OUTLINED_FUNCTION_73_1();
      OUTLINED_FUNCTION_137_1();
      swift_retain();
      OUTLINED_FUNCTION_154_1();
      OUTLINED_FUNCTION_185_1();
      swift_retain();
      outlined copy of Data?(v8, v7);
      EntityProperty.wrappedValue.getter();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      OUTLINED_FUNCTION_244();
      if (!v4) {
        goto LABEL_16;
      }
      uint64_t v30 = v317;
      long long v147 = v316;
      *(void *)(v132 + 24) = &type metadata for RestaurantReservationEntity;
      *(void *)(v132 + 32) = lazy protocol witness table accessor for type RestaurantReservationEntity and conformance RestaurantReservationEntity();
      *(void *)(v132 + 40) = lazy protocol witness table accessor for type RestaurantReservationEntity and conformance RestaurantReservationEntity();
      *(void *)(v132 + 48) = &protocol witness table for RestaurantReservationEntity;
      uint64_t v31 = swift_allocObject();
      *(void *)uint64_t v132 = v31;
      *(void *)(v31 + 16) = v4;
      *(_OWORD *)(v31 + 24) = v312;
      *(_OWORD *)(v31 + 40) = v313;
      *(_OWORD *)(v31 + 56) = v314;
      *(_OWORD *)(v31 + 72) = v315;
      *(_OWORD *)(v31 + 88) = v147;
      *(void *)(v31 + 104) = v30;
      goto LABEL_19;
    case 2:
      swift_retain();
      OUTLINED_FUNCTION_183_1();
      OUTLINED_FUNCTION_73_1();
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_154_1();
      OUTLINED_FUNCTION_185_1();
      swift_retain();
      outlined copy of Data?(v8, v7);
      EntityProperty.wrappedValue.getter();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      OUTLINED_FUNCTION_244();
      if (!v4) {
        goto LABEL_16;
      }
      uint64_t v32 = v320;
      uint64_t v33 = v319;
      *(void *)(v132 + 24) = &type metadata for HotelReservationEntity;
      *(void *)(v132 + 32) = lazy protocol witness table accessor for type HotelReservationEntity and conformance HotelReservationEntity();
      *(void *)(v132 + 40) = lazy protocol witness table accessor for type HotelReservationEntity and conformance HotelReservationEntity();
      *(void *)(v132 + 48) = &protocol witness table for HotelReservationEntity;
      uint64_t v34 = swift_allocObject();
      OUTLINED_FUNCTION_60_4(v34, v35, v36, v37, v38, v39, v40, v41, v105, v114, v123, v132, v6, v141, v3, v151, v156, v161, v166,
        v171,
        v176,
        v181,
        v186,
        v191,
        v196,
        v201,
        v206,
        v211,
        v216,
        v221,
        v226,
        v231,
        v236,
        v241,
        v246,
        v251,
        v256,
        v261,
        v266,
        v271,
        v276,
        v281,
        v286,
        v291,
        v292,
        v293,
        v294,
        v295,
        v296,
        v297,
        v298,
        v299,
        v300,
        v301,
        v302,
        v303,
        v304,
        v305,
        v306,
        v307,
        v308,
        v309,
        v310);
      *(_OWORD *)(v43 + 104) = *(_OWORD *)(v42 + 88);
      *(void *)(v43 + 120) = v33;
      *(void *)(v43 + 128) = v32;
      goto LABEL_19;
    case 3:
      swift_retain();
      OUTLINED_FUNCTION_183_1();
      OUTLINED_FUNCTION_73_1();
      OUTLINED_FUNCTION_137_1();
      OUTLINED_FUNCTION_186_0();
      OUTLINED_FUNCTION_154_1();
      swift_retain();
      swift_retain();
      outlined copy of Data?(v8, v7);
      EntityProperty.wrappedValue.getter();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v44 = OUTLINED_FUNCTION_243();
      uint64_t v52 = OUTLINED_FUNCTION_136_0(v44, v45, v46, v47, v48, v49, v50, v51, v105, v114, v123, v132, v6, v5, v3, v151, v156, v161, v166,
              v171,
              v176,
              v181,
              v186,
              v191,
              v196,
              v201,
              v206,
              v211,
              v216,
              v221,
              v226,
              v231,
              v236,
              v241,
              v246,
              v251,
              v256,
              v261,
              v266,
              v271,
              v276,
              v281,
              v286);
      OUTLINED_FUNCTION_134_1(v52, v53, v54, v55, v56, v57, v58, v59, v108, v117, v126, v134, v138, v143, v148, v153, v158, v163, v168,
        v173,
        v178,
        v183,
        v188,
        v193,
        v198,
        v203,
        v208,
        v213,
        v218,
        v223,
        v228,
        v233,
        v238,
        v243,
        v248,
        v253,
        v258,
        v263,
        v268,
        v273,
        v278,
        v283,
        v288,
        v291,
        v292,
        v293,
        v294,
        v295,
        v296,
        v297,
        v298,
        v299,
        v300,
        v301,
        v302,
        v303,
        v304,
        v305,
        v306,
        v307,
        v308,
        v309,
        v310);
      OUTLINED_FUNCTION_62_4(&v311);
      if (v25) {
        goto LABEL_16;
      }
      OUTLINED_FUNCTION_233((uint64_t)&type metadata for VehicleReservationEntity, v109, v118, v127, v132);
      lazy protocol witness table cache variable for type OpenVehicleReservationEntityIntent and conformance OpenVehicleReservationEntityIntent = lazy protocol witness table accessor for type VehicleReservationEntity and conformance VehicleReservationEntity();
      lazy protocol witness table cache variable for type OpenVehicleReservationEntityIntent and conformance OpenVehicleReservationEntityIntent = lazy protocol witness table accessor for type VehicleReservationEntity and conformance VehicleReservationEntity();
      async function pointer to protocol witness for AppIntent.perform() in conformance OpenVehicleReservationEntityIntent = &protocol witness table for VehicleReservationEntity;
      uint64_t v60 = swift_allocObject();
      unint64_t v27 = (void *)OUTLINED_FUNCTION_133_1(v60);
      size_t v29 = 144;
      goto LABEL_18;
    case 4:
      swift_retain();
      OUTLINED_FUNCTION_183_1();
      OUTLINED_FUNCTION_73_1();
      OUTLINED_FUNCTION_137_1();
      OUTLINED_FUNCTION_186_0();
      swift_retain();
      swift_retain();
      swift_retain();
      outlined copy of Data?(v8, v7);
      EntityProperty.wrappedValue.getter();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      OUTLINED_FUNCTION_244();
      if (!v5) {
        goto LABEL_16;
      }
      uint64_t v61 = v318;
      uint64_t v62 = v317;
      *(void *)(v132 + 24) = &type metadata for TicketedTransportationEntity;
      *(void *)(v132 + 32) = lazy protocol witness table accessor for type TicketedTransportationEntity and conformance TicketedTransportationEntity();
      *(void *)(v132 + 40) = lazy protocol witness table accessor for type TicketedTransportationEntity and conformance TicketedTransportationEntity();
      *(void *)(v132 + 48) = &protocol witness table for TicketedTransportationEntity;
      uint64_t v63 = swift_allocObject();
      OUTLINED_FUNCTION_60_4(v63, v64, v65, v66, v67, v68, v69, v70, v105, v114, v123, v132, v6, v141, v3, v151, v156, v161, v166,
        v171,
        v176,
        v181,
        v186,
        v191,
        v196,
        v201,
        v206,
        v211,
        v216,
        v221,
        v226,
        v231,
        v236,
        v241,
        v246,
        v251,
        v256,
        v261,
        v266,
        v271,
        v276,
        v281,
        v286,
        v291,
        v292,
        v293,
        v294,
        v295,
        v296,
        v297,
        v298,
        v299,
        v300,
        v301,
        v302,
        v303,
        v304,
        v305,
        v306,
        v307,
        v308,
        v309,
        v310);
      *(void *)(v71 + 104) = v62;
      *(void *)(v71 + 112) = v61;
      goto LABEL_19;
    case 5:
      swift_retain();
      OUTLINED_FUNCTION_183_1();
      OUTLINED_FUNCTION_73_1();
      OUTLINED_FUNCTION_137_1();
      OUTLINED_FUNCTION_186_0();
      OUTLINED_FUNCTION_154_1();
      OUTLINED_FUNCTION_185_1();
      swift_retain();
      outlined copy of Data?(v8, v7);
      EntityProperty.wrappedValue.getter();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v72 = OUTLINED_FUNCTION_243();
      uint64_t v80 = OUTLINED_FUNCTION_136_0(v72, v73, v74, v75, v76, v77, v78, v79, v105, v114, v123, v132, v6, v5, v3, v151, v156, v161, v166,
              v171,
              v176,
              v181,
              v186,
              v191,
              v196,
              v201,
              v206,
              v211,
              v216,
              v221,
              v226,
              v231,
              v236,
              v241,
              v246,
              v251,
              v256,
              v261,
              v266,
              v271,
              v276,
              v281,
              v286);
      OUTLINED_FUNCTION_134_1(v80, v81, v82, v83, v84, v85, v86, v87, v110, v119, v128, v135, v139, v144, v149, v154, v159, v164, v169,
        v174,
        v179,
        v184,
        v189,
        v194,
        v199,
        v204,
        v209,
        v214,
        v219,
        v224,
        v229,
        v234,
        v239,
        v244,
        v249,
        v254,
        v259,
        v264,
        v269,
        v274,
        v279,
        v284,
        v289,
        v291,
        v292,
        v293,
        v294,
        v295,
        v296,
        v297,
        v298,
        v299,
        v300,
        v301,
        v302,
        v303,
        v304,
        v305,
        v306,
        v307,
        v308,
        v309,
        v310);
      OUTLINED_FUNCTION_62_4(&v311);
      if (v25) {
        goto LABEL_16;
      }
      OUTLINED_FUNCTION_233((uint64_t)&type metadata for TicketedShowEntity, v111, v120, v129, v132);
      lazy protocol witness table cache variable for type OpenTicketedShowEntityIntent and conformance OpenTicketedShowEntityIntent = lazy protocol witness table accessor for type TicketedShowEntity and conformance TicketedShowEntity();
      lazy protocol witness table cache variable for type OpenTicketedShowEntityIntent and conformance OpenTicketedShowEntityIntent = lazy protocol witness table accessor for type TicketedShowEntity and conformance TicketedShowEntity();
      async function pointer to protocol witness for AppIntent.perform() in conformance OpenTicketedShowEntityIntent = &protocol witness table for TicketedShowEntity;
      goto LABEL_17;
    case 6:
      swift_retain();
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_137_1();
      swift_retain();
      OUTLINED_FUNCTION_154_1();
      OUTLINED_FUNCTION_185_1();
      swift_retain();
      outlined copy of Data?(v8, v7);
      EntityProperty.wrappedValue.getter();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v88 = OUTLINED_FUNCTION_243();
      uint64_t v96 = OUTLINED_FUNCTION_136_0(v88, v89, v90, v91, v92, v93, v94, v95, v105, v2, v123, v132, v6, v5, v3, v151, v156, v161, v166,
              v171,
              v176,
              v181,
              v186,
              v191,
              v196,
              v201,
              v206,
              v211,
              v216,
              v221,
              v226,
              v231,
              v236,
              v241,
              v246,
              v251,
              v256,
              v261,
              v266,
              v271,
              v276,
              v281,
              v286);
      OUTLINED_FUNCTION_134_1(v96, v97, v98, v99, v100, v101, v102, v103, v112, v121, v130, v136, v140, v145, v150, v155, v160, v165, v170,
        v175,
        v180,
        v185,
        v190,
        v195,
        v200,
        v205,
        v210,
        v215,
        v220,
        v225,
        v230,
        v235,
        v240,
        v245,
        v250,
        v255,
        v260,
        v265,
        v270,
        v275,
        v280,
        v285,
        v290,
        v291,
        v292,
        v293,
        v294,
        v295,
        v296,
        v297,
        v298,
        v299,
        v300,
        v301,
        v302,
        v303,
        v304,
        v305,
        v306,
        v307,
        v308,
        v309,
        v310);
      OUTLINED_FUNCTION_62_4(&v311);
      if (v25) {
        goto LABEL_16;
      }
      OUTLINED_FUNCTION_233((uint64_t)&type metadata for GenericEventEntity, v113, v122, v131, v132);
      lazy protocol witness table cache variable for type OpenGenericEventEntityIntent and conformance OpenGenericEventEntityIntent = lazy protocol witness table accessor for type GenericEventEntity and conformance GenericEventEntity();
      lazy protocol witness table cache variable for type OpenGenericEventEntityIntent and conformance OpenGenericEventEntityIntent = lazy protocol witness table accessor for type GenericEventEntity and conformance GenericEventEntity();
      async function pointer to protocol witness for AppIntent.perform() in conformance OpenGenericEventEntityIntent = &protocol witness table for GenericEventEntity;
LABEL_17:
      uint64_t v104 = swift_allocObject();
      unint64_t v27 = (void *)OUTLINED_FUNCTION_133_1(v104);
      size_t v29 = 128;
      goto LABEL_18;
    default:
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_73_1();
      OUTLINED_FUNCTION_137_1();
      OUTLINED_FUNCTION_186_0();
      OUTLINED_FUNCTION_154_1();
      OUTLINED_FUNCTION_185_1();
      swift_retain();
      outlined copy of Data?(v8, v7);
      EntityProperty.wrappedValue.getter();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v9 = OUTLINED_FUNCTION_243();
      uint64_t v17 = OUTLINED_FUNCTION_136_0(v9, v10, v11, v12, v13, v14, v15, v16, v105, v114, v123, v132, v6, v5, v3, v151, v156, v161, v166,
              v171,
              v176,
              v181,
              v186,
              v191,
              v196,
              v201,
              v206,
              v211,
              v216,
              v221,
              v226,
              v231,
              v236,
              v241,
              v246,
              v251,
              v256,
              v261,
              v266,
              v271,
              v276,
              v281,
              v286);
      OUTLINED_FUNCTION_134_1(v17, v18, v19, v20, v21, v22, v23, v24, v106, v115, v124, v133, v137, v142, v146, v152, v157, v162, v167,
        v172,
        v177,
        v182,
        v187,
        v192,
        v197,
        v202,
        v207,
        v212,
        v217,
        v222,
        v227,
        v232,
        v237,
        v242,
        v247,
        v252,
        v257,
        v262,
        v267,
        v272,
        v277,
        v282,
        v287,
        v291,
        v292,
        v293,
        v294,
        v295,
        v296,
        v297,
        v298,
        v299,
        v300,
        v301,
        v302,
        v303,
        v304,
        v305,
        v306,
        v307,
        v308,
        v309,
        v310);
      OUTLINED_FUNCTION_62_4(&v311);
      if (v25)
      {
LABEL_16:
        *(void *)(v132 + 48) = 0;
        *(_OWORD *)(v132 + 16) = 0u;
        *(_OWORD *)(v132 + 32) = 0u;
        *(_OWORD *)uint64_t v132 = 0u;
      }
      else
      {
        OUTLINED_FUNCTION_233((uint64_t)&type metadata for FlightReservationEntity, v107, v116, v125, v132);
        lazy protocol witness table cache variable for type OpenFlightReservationEntityIntent and conformance OpenFlightReservationEntityIntent = lazy protocol witness table accessor for type FlightReservationEntity and conformance FlightReservationEntity();
        lazy protocol witness table cache variable for type OpenFlightReservationEntityIntent and conformance OpenFlightReservationEntityIntent = lazy protocol witness table accessor for type FlightReservationEntity and conformance FlightReservationEntity();
        async function pointer to protocol witness for AppIntent.perform() in conformance OpenFlightReservationEntityIntent = &protocol witness table for FlightReservationEntity;
        uint64_t v26 = swift_allocObject();
        unint64_t v27 = (void *)OUTLINED_FUNCTION_133_1(v26);
        size_t v29 = 208;
LABEL_18:
        memcpy(v27, v28, v29);
      }
LABEL_19:
      OUTLINED_FUNCTION_119_0();
      return;
  }
}

uint64_t EventEntity.subType.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t EventEntity.flightReservation.setter(uint64_t a1)
{
  outlined init with take of GenericEventEntity?(a1, (uint64_t)v10, &demangling cache variable for type metadata for FlightReservationEntity?);
  OUTLINED_FUNCTION_219((uint64_t)v10, v1, v2, v3, v4, v5, v6, v7, v9);
  return EntityProperty.wrappedValue.setter();
}

uint64_t EventEntity.hotelReservation.setter(__n128 *a1)
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t EventEntity.restaurantReservation.setter(__n128 *a1)
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t EventEntity.vehicleReservation.setter(uint64_t a1)
{
  outlined init with take of GenericEventEntity?(a1, (uint64_t)v10, &demangling cache variable for type metadata for VehicleReservationEntity?);
  OUTLINED_FUNCTION_219((uint64_t)v10, v1, v2, v3, v4, v5, v6, v7, v9);
  return EntityProperty.wrappedValue.setter();
}

uint64_t EventEntity.ticketedTransportation.setter(__n128 *a1)
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t EventEntity.ticketedShow.setter(uint64_t a1)
{
  outlined init with take of GenericEventEntity?(a1, (uint64_t)v10, &demangling cache variable for type metadata for TicketedShowEntity?);
  OUTLINED_FUNCTION_219((uint64_t)v10, v1, v2, v3, v4, v5, v6, v7, v9);
  return EntityProperty.wrappedValue.setter();
}

uint64_t EventEntity.genericEvent.setter(uint64_t a1)
{
  outlined init with take of GenericEventEntity?(a1, (uint64_t)v10, &demangling cache variable for type metadata for GenericEventEntity?);
  OUTLINED_FUNCTION_219((uint64_t)v10, v1, v2, v3, v4, v5, v6, v7, v9);
  return EntityProperty.wrappedValue.setter();
}

uint64_t EventEntity.subType.getter()
{
  return EntityProperty.wrappedValue.getter();
}

unint64_t EventSubType.rawValue.getter()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0x646574656B636974;
      break;
    case 6:
      unint64_t result = 0x45636972656E6567;
      break;
    default:
      return result;
  }
  return result;
}

void FlightReservationEntity.init(arrivalAirportCode:arrivalAirportName:arrivalDateTime:arrivalGate:arrivalTerminal:boardingDateTime:bookingProvider:carrier:checkInUrl:confirmationNumber:departureAirportCode:departureAirportName:departureDateTime:departureGate:departureTerminal:designator:flightNumber:passengerNames:seatNumbers:status:totalCost:totalDuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void (*a41)(void),uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,double a56,unsigned __int8 a57)
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v149 = v50;
  uint64_t v150 = v51;
  uint64_t v148 = v52;
  uint64_t v181 = v53;
  uint64_t v182 = v54;
  uint64_t v191 = (void (*)(void))v55;
  uint64_t v145 = v56;
  uint64_t v142 = v58;
  uint64_t v143 = v57;
  int v176 = a57;
  uint64_t v177 = a55;
  uint64_t v175 = a54;
  uint64_t v174 = a53;
  uint64_t v173 = a52;
  uint64_t v170 = a51;
  uint64_t v169 = a50;
  uint64_t v168 = a49;
  uint64_t v167 = a48;
  uint64_t v166 = a47;
  uint64_t v165 = a46;
  uint64_t v164 = a45;
  uint64_t v163 = a44;
  uint64_t v162 = a43;
  uint64_t v186 = a42;
  uint64_t v160 = a41;
  uint64_t v159 = a40;
  uint64_t v158 = a39;
  uint64_t v157 = a38;
  uint64_t v156 = a37;
  uint64_t v184 = a35;
  uint64_t v155 = a36;
  uint64_t v154 = a34;
  uint64_t v153 = a33;
  uint64_t v152 = a32;
  uint64_t v151 = a31;
  uint64_t v185 = a30;
  uint64_t v147 = a29;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  uint64_t v60 = OUTLINED_FUNCTION_81(v59);
  MEMORY[0x270FA5388](v60);
  OUTLINED_FUNCTION_184_0();
  uint64_t v139 = v61;
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentCurrencyAmount?);
  uint64_t v63 = OUTLINED_FUNCTION_81(v62);
  MEMORY[0x270FA5388](v63);
  OUTLINED_FUNCTION_185_0();
  uint64_t v172 = v64;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v65);
  OUTLINED_FUNCTION_27_10();
  uint64_t v171 = v66;
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Calendar?);
  uint64_t v68 = OUTLINED_FUNCTION_81(v67);
  MEMORY[0x270FA5388](v68);
  OUTLINED_FUNCTION_185_0();
  uint64_t v141 = v69;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v70);
  OUTLINED_FUNCTION_27_10();
  uint64_t v161 = v71;
  uint64_t v189 = type metadata accessor for Calendar();
  OUTLINED_FUNCTION_1();
  uint64_t v180 = v72;
  MEMORY[0x270FA5388](v73);
  OUTLINED_FUNCTION_184_0();
  uint64_t v188 = v74;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v76 = OUTLINED_FUNCTION_81(v75);
  MEMORY[0x270FA5388](v76);
  uint64_t v146 = (uint64_t)&v138 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v78);
  OUTLINED_FUNCTION_27_10();
  uint64_t v144 = v79;
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v81 = OUTLINED_FUNCTION_81(v80);
  MEMORY[0x270FA5388](v81);
  OUTLINED_FUNCTION_185_0();
  uint64_t v179 = v82;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v83);
  OUTLINED_FUNCTION_27_10();
  uint64_t v178 = v84;
  uint64_t v208 = OUTLINED_FUNCTION_199_0();
  OUTLINED_FUNCTION_1();
  uint64_t v207 = v85;
  MEMORY[0x270FA5388](v86);
  OUTLINED_FUNCTION_185_0();
  uint64_t v206 = v87;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v88);
  OUTLINED_FUNCTION_27_10();
  uint64_t v187 = v89;
  uint64_t v90 = OUTLINED_FUNCTION_30_11();
  uint64_t v91 = OUTLINED_FUNCTION_81(v90);
  MEMORY[0x270FA5388](v91);
  OUTLINED_FUNCTION_18_8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_98_2();
  OUTLINED_FUNCTION_245();
  uint64_t v215 = v92;
  swift_retain();
  OUTLINED_FUNCTION_164_1();
  uint64_t v205 = MEMORY[0x25A2C4900](v49);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  OUTLINED_FUNCTION_92_3();
  OUTLINED_FUNCTION_123_1();
  uint64_t v192 = MEMORY[0x25A2C4900](v49);
  uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  swift_retain();
  OUTLINED_FUNCTION_207_0();
  uint64_t v204 = MEMORY[0x25A2C48D0](v49);
  swift_retain();
  OUTLINED_FUNCTION_205_0();
  OUTLINED_FUNCTION_245();
  uint64_t v203 = v93;
  swift_retain();
  OUTLINED_FUNCTION_205_0();
  uint64_t v202 = MEMORY[0x25A2C4900](v49);
  swift_retain();
  OUTLINED_FUNCTION_207_0();
  uint64_t v201 = MEMORY[0x25A2C4900](v49);
  swift_retain();
  OUTLINED_FUNCTION_96_1();
  uint64_t v200 = MEMORY[0x25A2C4900](v49);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents>);
  swift_retain();
  OUTLINED_FUNCTION_208_0();
  OUTLINED_FUNCTION_140_1();
  uint64_t v199 = v94;
  swift_retain();
  OUTLINED_FUNCTION_209_0();
  OUTLINED_FUNCTION_245();
  uint64_t v183 = v95;
  swift_retain();
  OUTLINED_FUNCTION_209_0();
  uint64_t v198 = MEMORY[0x25A2C4900](v49);
  swift_retain();
  OUTLINED_FUNCTION_30_10();
  uint64_t v214 = MEMORY[0x25A2C4900](v49);
  swift_retain();
  OUTLINED_FUNCTION_112_3();
  uint64_t v213 = MEMORY[0x25A2C4900](v49);
  swift_retain();
  OUTLINED_FUNCTION_19_10();
  OUTLINED_FUNCTION_140_1();
  uint64_t v197 = v96;
  swift_retain();
  OUTLINED_FUNCTION_14_15();
  uint64_t v212 = MEMORY[0x25A2C48D0](v49);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_92_3();
  OUTLINED_FUNCTION_52_3();
  uint64_t v211 = MEMORY[0x25A2C4900](v49);
  swift_retain();
  OUTLINED_FUNCTION_40_6();
  uint64_t v210 = MEMORY[0x25A2C4900](v49);
  swift_retain();
  OUTLINED_FUNCTION_30_10();
  OUTLINED_FUNCTION_245();
  uint64_t v209 = v97;
  swift_retain();
  OUTLINED_FUNCTION_143_1();
  uint64_t v98 = MEMORY[0x25A2C4900](v49);
  uint64_t v196 = v98;
  swift_retain();
  OUTLINED_FUNCTION_208_0();
  uint64_t v99 = MEMORY[0x25A2C4900](v49);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  uint64_t v195 = v99;
  swift_retain();
  OUTLINED_FUNCTION_141_1();
  uint64_t v100 = MEMORY[0x25A2C48E0](v49);
  uint64_t v194 = v100;
  swift_retain();
  OUTLINED_FUNCTION_81_1();
  uint64_t v101 = MEMORY[0x25A2C48D0](v49);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentCurrencyAmount?>);
  swift_retain();
  OUTLINED_FUNCTION_82_3();
  uint64_t v102 = MEMORY[0x25A2C48C0](v49);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_92_3();
  OUTLINED_FUNCTION_170_1();
  OUTLINED_FUNCTION_19_10();
  uint64_t v103 = v49;
  uint64_t v104 = v183;
  uint64_t v105 = MEMORY[0x25A2C48A0](v103);
  *(void *)&v218[0] = v215;
  *((void *)&v218[0] + 1) = v205;
  *(void *)&v218[1] = v192;
  *((void *)&v218[1] + 1) = v204;
  *(void *)&v218[2] = v203;
  *((void *)&v218[2] + 1) = v202;
  *(void *)&v218[3] = v201;
  *((void *)&v218[3] + 1) = v200;
  *(void *)&v218[4] = v199;
  *((void *)&v218[4] + 1) = v104;
  *(void *)&v218[5] = v198;
  *((void *)&v218[5] + 1) = v214;
  *(void *)&v218[6] = v213;
  *((void *)&v218[6] + 1) = v197;
  *(void *)&v218[7] = v212;
  *((void *)&v218[7] + 1) = v211;
  *(void *)&v218[8] = v210;
  *((void *)&v218[8] + 1) = v209;
  *(void *)&v218[9] = v98;
  *((void *)&v218[9] + 1) = v99;
  *(void *)&v218[10] = v100;
  uint64_t v190 = v101;
  *((void *)&v218[10] + 1) = v101;
  uint64_t v193 = v102;
  *(void *)&v218[11] = v102;
  *((void *)&v218[11] + 1) = v105;
  long long v140 = xmmword_258665BD0;
  v218[12] = xmmword_258665BD0;
  uint64_t v216 = v143;
  uint64_t v217 = v181;
  uint64_t v181 = v105;
  swift_retain();
  outlined retain of FlightReservationEntity((uint64_t)v218);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v216 = v145;
  OUTLINED_FUNCTION_61_4((uint64_t)v191);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v106 = v207;
  uint64_t v107 = *(void (**)(void))(v207 + 16);
  uint64_t v108 = v187;
  OUTLINED_FUNCTION_175_1();
  v107();
  OUTLINED_FUNCTION_175_1();
  v107();
  outlined retain of FlightReservationEntity((uint64_t)v218);
  EntityProperty.wrappedValue.setter();
  uint64_t v191 = *(void (**)(void))(v106 + 8);
  OUTLINED_FUNCTION_161_1();
  OUTLINED_FUNCTION_111_0();
  v109();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v216 = v148;
  OUTLINED_FUNCTION_61_4(v149);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v216 = v150;
  OUTLINED_FUNCTION_61_4(v147);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v110 = v178;
  outlined init with copy of SearchResult?(v185, v178, &demangling cache variable for type metadata for DateComponents?);
  outlined init with copy of SearchResult?(v110, v179, &demangling cache variable for type metadata for DateComponents?);
  outlined retain of FlightReservationEntity((uint64_t)v218);
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v110, &demangling cache variable for type metadata for DateComponents?);
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v216 = v151;
  OUTLINED_FUNCTION_61_4(v152);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v216 = v153;
  OUTLINED_FUNCTION_61_4(v154);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v111 = v144;
  outlined init with copy of SearchResult?(v184, v144, &demangling cache variable for type metadata for URL?);
  outlined init with copy of SearchResult?(v111, v146, &demangling cache variable for type metadata for URL?);
  outlined retain of FlightReservationEntity((uint64_t)v218);
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v111, &demangling cache variable for type metadata for URL?);
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v216 = v155;
  OUTLINED_FUNCTION_61_4(v156);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v216 = v157;
  OUTLINED_FUNCTION_61_4(v158);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v216 = v159;
  OUTLINED_FUNCTION_61_4((uint64_t)v160);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v112 = v208;
  OUTLINED_FUNCTION_175_1();
  v107();
  uint64_t v160 = v107;
  ((void (*)(uint64_t, uint64_t, uint64_t))v107)(v206, v108, v112);
  outlined retain of FlightReservationEntity((uint64_t)v218);
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_161_1();
  uint64_t v207 = v106 + 8;
  OUTLINED_FUNCTION_111_0();
  v113();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v216 = v162;
  OUTLINED_FUNCTION_61_4(v163);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v216 = v164;
  OUTLINED_FUNCTION_61_4(v165);
  uint64_t v114 = v189;
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v216 = v166;
  OUTLINED_FUNCTION_61_4(v167);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v115 = v161;
  DateComponents.calendar.getter();
  if (__swift_getEnumTagSinglePayload(v115, 1, v114) == 1)
  {
    static Calendar.current.getter();
    outlined destroy of PQAVerificationModelProtocol?(v115, (uint64_t *)&demangling cache variable for type metadata for Calendar?);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v180 + 32))(v188, v115, v114);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Calendar.Component>);
  type metadata accessor for Calendar.Component();
  OUTLINED_FUNCTION_1();
  uint64_t v117 = v116;
  uint64_t v118 = swift_allocObject();
  *(_OWORD *)(v118 + 16) = xmmword_258663010;
  uint64_t v119 = *(void (**)(void))(v117 + 104);
  OUTLINED_FUNCTION_130_1();
  v119();
  OUTLINED_FUNCTION_130_1();
  v119();
  OUTLINED_FUNCTION_130_1();
  v119();
  OUTLINED_FUNCTION_130_1();
  v119();
  outlined retain of FlightReservationEntity((uint64_t)v218);
  specialized Set.init(_nonEmptyArrayLiteral:)(v118);
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  uint64_t v120 = OUTLINED_FUNCTION_148();
  ((void (*)(uint64_t))v160)(v120);
  EntityProperty.wrappedValue.setter();
  uint64_t v121 = v191;
  OUTLINED_FUNCTION_30();
  v121();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v216 = v168;
  OUTLINED_FUNCTION_61_4(v169);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v216 = v170;
  outlined retain of FlightReservationEntity((uint64_t)v218);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v216 = v173;
  outlined retain of FlightReservationEntity((uint64_t)v218);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v216 = v174;
  OUTLINED_FUNCTION_61_4(v175);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v218);
  uint64_t v122 = v177;
  uint64_t v123 = v171;
  outlined init with copy of SearchResult?(v177, v171, &demangling cache variable for type metadata for IntentCurrencyAmount?);
  outlined init with copy of SearchResult?(v123, v172, &demangling cache variable for type metadata for IntentCurrencyAmount?);
  outlined retain of FlightReservationEntity((uint64_t)v218);
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v123, &demangling cache variable for type metadata for IntentCurrencyAmount?);
  outlined release of FlightReservationEntity((uint64_t)v218);
  if (v176)
  {
    outlined destroy of PQAVerificationModelProtocol?(v122, &demangling cache variable for type metadata for IntentCurrencyAmount?);
    OUTLINED_FUNCTION_30();
    v121();
    outlined destroy of PQAVerificationModelProtocol?(v184, &demangling cache variable for type metadata for URL?);
    outlined destroy of PQAVerificationModelProtocol?(v185, &demangling cache variable for type metadata for DateComponents?);
    OUTLINED_FUNCTION_30();
    v121();
    OUTLINED_FUNCTION_16_1();
    v137();
    OUTLINED_FUNCTION_236();
    uint64_t v136 = (_OWORD *)OUTLINED_FUNCTION_7_16();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_46_1();
  __swift_storeEnumTagSinglePayload(v124, v125, v126, v189);
  uint64_t v127 = type metadata accessor for TimeZone();
  OUTLINED_FUNCTION_32(v139, v128, v129, v127);
  if ((~*(void *)&a56 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (a56 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (a56 < 9.22337204e18)
  {
    outlined retain of FlightReservationEntity((uint64_t)v218);
    uint64_t v130 = v178;
    OUTLINED_FUNCTION_18_15();
    __swift_storeEnumTagSinglePayload(v130, 0, 1, v208);
    outlined init with copy of SearchResult?(v130, v179, &demangling cache variable for type metadata for DateComponents?);
    EntityProperty.wrappedValue.setter();
    uint64_t v131 = OUTLINED_FUNCTION_110_2();
    outlined destroy of PQAVerificationModelProtocol?(v131, v132);
    outlined destroy of PQAVerificationModelProtocol?(v122, &demangling cache variable for type metadata for IntentCurrencyAmount?);
    OUTLINED_FUNCTION_246();
    uint64_t v133 = v191;
    OUTLINED_FUNCTION_165_1();
    v133();
    outlined destroy of PQAVerificationModelProtocol?(v184, &demangling cache variable for type metadata for URL?);
    outlined destroy of PQAVerificationModelProtocol?(v185, &demangling cache variable for type metadata for DateComponents?);
    OUTLINED_FUNCTION_165_1();
    v133();
    OUTLINED_FUNCTION_30();
    v134();
    OUTLINED_FUNCTION_236();
    uint64_t v135 = OUTLINED_FUNCTION_7_16();
    outlined release of FlightReservationEntity(v135);
    uint64_t v136 = v218;
LABEL_10:
    outlined release of FlightReservationEntity((uint64_t)v136);
    outlined retain of FlightReservationEntity((uint64_t)v218);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    memcpy(v142, v218, 0xD0uLL);
    OUTLINED_FUNCTION_119_0();
    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t FlightReservationEntity.flightNumber.getter()
{
  OUTLINED_FUNCTION_174_1();
  return v1;
}

uint64_t FlightReservationEntity.carrier.getter()
{
  OUTLINED_FUNCTION_150_1();
  return v1;
}

uint64_t FlightReservationEntity.departureDateTime.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t FlightReservationEntity.arrivalAirportCode.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t FlightReservationEntity.departureAirportCode.getter()
{
  OUTLINED_FUNCTION_217();
  return v1;
}

void HotelReservationEntity.init(confirmationNumber:guest:bookingProvider:businessName:roomNumbers:address:checkinDateTime:checkoutDateTime:phoneNumber:url:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  OUTLINED_FUNCTION_104_0();
  a19 = v29;
  a20 = v30;
  uint64_t v149 = v31;
  uint64_t v148 = v32;
  uint64_t v146 = v33;
  uint64_t v147 = v34;
  uint64_t v145 = v35;
  uint64_t v144 = v36;
  uint64_t v142 = v37;
  uint64_t v143 = v38;
  uint64_t v162 = v39;
  uint64_t v167 = a28;
  uint64_t v159 = a27;
  uint64_t v158 = a26;
  uint64_t v168 = a25;
  uint64_t v169 = a24;
  uint64_t v153 = a23;
  uint64_t v152 = a22;
  uint64_t v150 = a21;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v41 = OUTLINED_FUNCTION_81(v40);
  MEMORY[0x270FA5388](v41);
  OUTLINED_FUNCTION_185_0();
  uint64_t v161 = v42;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v43);
  OUTLINED_FUNCTION_27_10();
  uint64_t v160 = v44;
  uint64_t v165 = type metadata accessor for Calendar();
  OUTLINED_FUNCTION_1();
  uint64_t v137 = v45;
  MEMORY[0x270FA5388](v46);
  OUTLINED_FUNCTION_184_0();
  OUTLINED_FUNCTION_194_0(v47);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  uint64_t v49 = OUTLINED_FUNCTION_81(v48);
  MEMORY[0x270FA5388](v49);
  OUTLINED_FUNCTION_184_0();
  OUTLINED_FUNCTION_194_0(v50);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Calendar?);
  uint64_t v52 = OUTLINED_FUNCTION_81(v51);
  MEMORY[0x270FA5388](v52);
  OUTLINED_FUNCTION_185_0();
  uint64_t v136 = v53;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v54);
  OUTLINED_FUNCTION_27_10();
  uint64_t v154 = v55;
  uint64_t v164 = OUTLINED_FUNCTION_199_0();
  OUTLINED_FUNCTION_1();
  uint64_t v157 = v56;
  MEMORY[0x270FA5388](v57);
  uint64_t v139 = (char *)&v135 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v59);
  OUTLINED_FUNCTION_43_4();
  uint64_t v141 = v60;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v61);
  OUTLINED_FUNCTION_43_4();
  uint64_t v163 = v62;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v63);
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_194_0(v64);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v66 = OUTLINED_FUNCTION_81(v65);
  MEMORY[0x270FA5388](v66);
  OUTLINED_FUNCTION_185_0();
  uint64_t v138 = v67;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v68);
  OUTLINED_FUNCTION_43_4();
  uint64_t v156 = v69;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v70);
  OUTLINED_FUNCTION_43_4();
  uint64_t v151 = v71;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v72);
  OUTLINED_FUNCTION_27_10();
  uint64_t v166 = v73;
  uint64_t v74 = OUTLINED_FUNCTION_30_11();
  uint64_t v75 = OUTLINED_FUNCTION_81(v74);
  MEMORY[0x270FA5388](v75);
  OUTLINED_FUNCTION_39();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_47_4();
  OUTLINED_FUNCTION_109_2();
  uint64_t v182 = v76;
  swift_retain();
  OUTLINED_FUNCTION_90_1();
  uint64_t v181 = MEMORY[0x25A2C4900](v28);
  swift_retain();
  OUTLINED_FUNCTION_10_18();
  uint64_t v179 = MEMORY[0x25A2C4900](v28);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  OUTLINED_FUNCTION_157_1();
  OUTLINED_FUNCTION_91_2();
  uint64_t v77 = MEMORY[0x25A2C48D0](v28);
  swift_retain();
  OUTLINED_FUNCTION_91_2();
  uint64_t v176 = MEMORY[0x25A2C48D0](v28);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents>);
  OUTLINED_FUNCTION_157_1();
  OUTLINED_FUNCTION_81_1();
  uint64_t v171 = MEMORY[0x25A2C48D0](v28);
  swift_retain();
  OUTLINED_FUNCTION_128_1();
  OUTLINED_FUNCTION_109_2();
  uint64_t v170 = v78;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Int?>);
  OUTLINED_FUNCTION_157_1();
  OUTLINED_FUNCTION_93_3();
  uint64_t v173 = MEMORY[0x25A2C4930](v28);
  swift_retain();
  OUTLINED_FUNCTION_15_13();
  OUTLINED_FUNCTION_109_2();
  uint64_t v80 = v79;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  uint64_t v81 = v80;
  swift_retain();
  OUTLINED_FUNCTION_40_6();
  uint64_t v82 = MEMORY[0x25A2C4900](v28);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v83 = MEMORY[0x25A2C48E0](v28);
  swift_retain();
  OUTLINED_FUNCTION_90_1();
  OUTLINED_FUNCTION_109_2();
  uint64_t v180 = v84;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_92_3();
  OUTLINED_FUNCTION_90_1();
  MEMORY[0x25A2C48A0](v28);
  OUTLINED_FUNCTION_158_1((uint64_t)&v173);
  uint64_t v178 = v85;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v175 = v83;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_103_3();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v177 = v77;
  swift_release();
  OUTLINED_FUNCTION_240();
  swift_release();
  OUTLINED_FUNCTION_189_0();
  OUTLINED_FUNCTION_32_7();
  uint64_t v183 = v144;
  uint64_t v184 = v145;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_239();
  swift_retain();
  OUTLINED_FUNCTION_116_3();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_32_7();
  uint64_t v183 = v147;
  uint64_t v184 = v146;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v174 = v82;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_115_2();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_234();
  swift_release();
  OUTLINED_FUNCTION_240();
  swift_release();
  OUTLINED_FUNCTION_189_0();
  OUTLINED_FUNCTION_32_7();
  uint64_t v183 = v148;
  uint64_t v184 = v149;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_239();
  swift_retain();
  OUTLINED_FUNCTION_116_3();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_234();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_189_0();
  OUTLINED_FUNCTION_32_7();
  uint64_t v183 = v150;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_48_5();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_32_7();
  uint64_t v183 = v152;
  uint64_t v184 = v153;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v172 = v81;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_48_5();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(0, 0xF000000000000000);
  uint64_t v86 = v166;
  outlined init with copy of SearchResult?(v169, (uint64_t)v166, &demangling cache variable for type metadata for DateComponents?);
  outlined init with copy of SearchResult?((uint64_t)v86, v151, &demangling cache variable for type metadata for DateComponents?);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_186_0();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_239();
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?((uint64_t)v86, &demangling cache variable for type metadata for DateComponents?);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_132_1();
  OUTLINED_FUNCTION_32_7();
  outlined init with copy of SearchResult?(v168, (uint64_t)v86, &demangling cache variable for type metadata for DateComponents?);
  uint64_t v87 = OUTLINED_FUNCTION_121_1();
  outlined init with copy of SearchResult?(v87, v88, &demangling cache variable for type metadata for DateComponents?);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?((uint64_t)v166, &demangling cache variable for type metadata for DateComponents?);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_32_7();
  OUTLINED_FUNCTION_46_1();
  __swift_storeEnumTagSinglePayload(v89, v90, v91, v165);
  uint64_t v92 = type metadata accessor for TimeZone();
  OUTLINED_FUNCTION_32(v155, v93, v94, v92);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_66_3();
  OUTLINED_FUNCTION_28_8();
  OUTLINED_FUNCTION_246();
  OUTLINED_FUNCTION_18_15();
  uint64_t v95 = v157;
  OUTLINED_FUNCTION_148();
  uint64_t v96 = v164;
  uint64_t v155 = v97;
  uint64_t v154 = v98;
  OUTLINED_FUNCTION_64_0();
  v99();
  EntityProperty.wrappedValue.setter();
  uint64_t v100 = v95;
  uint64_t v101 = v95 + 8;
  OUTLINED_FUNCTION_121_1();
  uint64_t v166 = v102;
  OUTLINED_FUNCTION_111_0();
  v103();
  uint64_t v104 = v156;
  swift_release();
  swift_release();
  uint64_t v105 = v96;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(0, 0xF000000000000000);
  outlined init with copy of SearchResult?(v169, v104, &demangling cache variable for type metadata for DateComponents?);
  if (__swift_getEnumTagSinglePayload(v104, 1, v96) == 1) {
    goto LABEL_4;
  }
  uint64_t v106 = *(void (**)(void))(v100 + 32);
  uint64_t v107 = v141;
  OUTLINED_FUNCTION_235();
  v106();
  uint64_t v104 = v138;
  outlined init with copy of SearchResult?(v168, v138, &demangling cache variable for type metadata for DateComponents?);
  if (__swift_getEnumTagSinglePayload(v104, 1, v105) == 1)
  {
    v166(v107, v105);
LABEL_4:
    outlined destroy of PQAVerificationModelProtocol?(v104, &demangling cache variable for type metadata for DateComponents?);
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_235();
  v106();
  uint64_t v108 = v136;
  DateComponents.calendar.getter();
  uint64_t v109 = v165;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v108, 1, v165);
  uint64_t v153 = v101;
  if (EnumTagSinglePayload == 1)
  {
    static Calendar.current.getter();
    outlined destroy of PQAVerificationModelProtocol?(v108, (uint64_t *)&demangling cache variable for type metadata for Calendar?);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v137 + 32))(v140, v108, v109);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Calendar.Component>);
  type metadata accessor for Calendar.Component();
  OUTLINED_FUNCTION_1();
  uint64_t v112 = v111;
  uint64_t v113 = swift_allocObject();
  *(_OWORD *)(v113 + 16) = xmmword_258663010;
  uint64_t v114 = *(void (**)(void))(v112 + 104);
  OUTLINED_FUNCTION_129_1();
  v114();
  OUTLINED_FUNCTION_129_1();
  v114();
  OUTLINED_FUNCTION_129_1();
  v114();
  OUTLINED_FUNCTION_129_1();
  v114();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_66_3();
  specialized Set.init(_nonEmptyArrayLiteral:)(v113);
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_208();
  OUTLINED_FUNCTION_64_0();
  v115();
  EntityProperty.wrappedValue.setter();
  uint64_t v116 = (void (*)(void))v166;
  OUTLINED_FUNCTION_165_1();
  v116();
  OUTLINED_FUNCTION_16_1();
  v117();
  OUTLINED_FUNCTION_165_1();
  v116();
  OUTLINED_FUNCTION_165_1();
  v116();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_32_7();
LABEL_9:
  OUTLINED_FUNCTION_158_1((uint64_t)&a13);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_239();
  swift_retain();
  OUTLINED_FUNCTION_48_5();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_32_7();
  uint64_t v118 = v160;
  outlined init with copy of SearchResult?(v167, v160, &demangling cache variable for type metadata for URL?);
  outlined init with copy of SearchResult?(v118, v161, &demangling cache variable for type metadata for URL?);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v119 = v172;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v118, &demangling cache variable for type metadata for URL?);
  outlined destroy of PQAVerificationModelProtocol?(v167, &demangling cache variable for type metadata for URL?);
  outlined destroy of PQAVerificationModelProtocol?(v168, &demangling cache variable for type metadata for DateComponents?);
  outlined destroy of PQAVerificationModelProtocol?(v169, &demangling cache variable for type metadata for DateComponents?);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v120 = v119;
  swift_release();
  uint64_t v121 = v173;
  swift_release();
  uint64_t v122 = v170;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_240();
  swift_release();
  swift_release();
  outlined consume of Data?(0, 0xF000000000000000);
  swift_release();
  swift_release();
  uint64_t v123 = v175;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v124 = v121;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_214_0();
  OUTLINED_FUNCTION_32_7();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v125 = v174;
  swift_retain();
  uint64_t v126 = v123;
  swift_retain();
  swift_retain();
  uint64_t v127 = v178;
  swift_retain();
  OUTLINED_FUNCTION_66_3();
  OUTLINED_FUNCTION_189_0();
  uint64_t v128 = v181;
  swift_release();
  swift_release();
  uint64_t v129 = v177;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v130 = v172;
  swift_release();
  uint64_t v131 = v125;
  swift_release();
  swift_release();
  uint64_t v132 = v180;
  swift_release();
  swift_release();
  uint64_t v133 = v162;
  void *v162 = v120;
  v133[1] = v128;
  v133[2] = v179;
  v133[3] = v129;
  uint64_t v134 = v171;
  v133[4] = v176;
  v133[5] = v134;
  v133[6] = v122;
  v133[7] = v124;
  v133[8] = v130;
  v133[9] = v131;
  v133[10] = v126;
  v133[11] = v132;
  v133[12] = v127;
  *(_OWORD *)(v133 + 13) = xmmword_258665BD0;
  OUTLINED_FUNCTION_119_0();
}

uint64_t HotelReservationEntity.guest.getter()
{
  OUTLINED_FUNCTION_216_0();
  return v1;
}

uint64_t HotelReservationEntity.checkinDateTime.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t HotelReservationEntity.checkoutDateTime.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t HotelReservationEntity.address.getter()
{
  OUTLINED_FUNCTION_174_1();
  return v1;
}

void RestaurantReservationEntity.init(confirmationNumber:guest:partySize:bookingProvider:businessName:address:phoneNumber:startDateTime:mealType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  OUTLINED_FUNCTION_104_0();
  a19 = v28;
  a20 = v29;
  uint64_t v49 = v30;
  uint64_t v48 = v31;
  uint64_t v53 = v32;
  uint64_t v55 = a27;
  uint64_t v50 = a22;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v34 = OUTLINED_FUNCTION_81(v33);
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_185_0();
  uint64_t v52 = v35;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v36);
  OUTLINED_FUNCTION_27_10();
  uint64_t v51 = v37;
  uint64_t v38 = OUTLINED_FUNCTION_30_11();
  uint64_t v39 = OUTLINED_FUNCTION_81(v38);
  MEMORY[0x270FA5388](v39);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_47_4();
  MEMORY[0x25A2C4900](v27);
  swift_retain();
  OUTLINED_FUNCTION_56_5();
  uint64_t v40 = MEMORY[0x25A2C4900](v27);
  swift_retain();
  OUTLINED_FUNCTION_10_18();
  uint64_t v54 = MEMORY[0x25A2C4900](v27);
  swift_retain();
  OUTLINED_FUNCTION_128_1();
  uint64_t v46 = MEMORY[0x25A2C4900](v27);
  swift_retain();
  OUTLINED_FUNCTION_125_2();
  uint64_t v47 = MEMORY[0x25A2C4900](v27);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Int?>);
  OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_124_2();
  uint64_t v41 = MEMORY[0x25A2C4930](v27);
  swift_retain();
  OUTLINED_FUNCTION_15_13();
  uint64_t v42 = MEMORY[0x25A2C4900](v27);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  uint64_t v43 = v42;
  swift_retain();
  OUTLINED_FUNCTION_17_10();
  uint64_t v44 = MEMORY[0x25A2C48D0](v27);
  swift_retain();
  OUTLINED_FUNCTION_50_6();
  uint64_t v45 = MEMORY[0x25A2C4900](v27);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_157_1();
  OUTLINED_FUNCTION_50_6();
  MEMORY[0x25A2C48A0](v27);
  OUTLINED_FUNCTION_158_1((uint64_t)&a13);
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(0, 0xF000000000000000);
  OUTLINED_FUNCTION_45_3(v48);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_146_1();
  OUTLINED_FUNCTION_32_7();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_15_12();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_146_1();
  outlined consume of Data?(0, 0xF000000000000000);
  OUTLINED_FUNCTION_45_3(v49);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_15_12();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_146_1();
  OUTLINED_FUNCTION_32_7();
  OUTLINED_FUNCTION_45_3(v50);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_15_12();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_32_7();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_203_0();
  OUTLINED_FUNCTION_116_3();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_32_7();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_231();
  OUTLINED_FUNCTION_48_5();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_214_0();
  outlined consume of Data?(0, 0xF000000000000000);
  outlined init with copy of SearchResult?(v55, v51, &demangling cache variable for type metadata for DateComponents?);
  outlined init with copy of SearchResult?(v51, v52, &demangling cache variable for type metadata for DateComponents?);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_203_0();
  OUTLINED_FUNCTION_66_3();
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v51, &demangling cache variable for type metadata for DateComponents?);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_240();
  OUTLINED_FUNCTION_132_1();
  OUTLINED_FUNCTION_32_7();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_115_2();
  outlined destroy of PQAVerificationModelProtocol?(v55, &demangling cache variable for type metadata for DateComponents?);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_132_1();
  outlined consume of Data?(0, 0xF000000000000000);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(void *)uint64_t v53 = v44;
  *(void *)(v53 + 8) = v52;
  *(void *)(v53 + 16) = v54;
  *(void *)(v53 + 24) = v46;
  *(void *)(v53 + 32) = v47;
  *(void *)(v53 + 40) = v41;
  *(void *)(v53 + 48) = v43;
  *(void *)(v53 + 56) = v44;
  *(void *)(v53 + 64) = v45;
  *(void *)(v53 + 72) = v40;
  *(_OWORD *)(v53 + 80) = xmmword_258665BD0;
  OUTLINED_FUNCTION_119_0();
}

uint64_t RestaurantReservationEntity.guest.getter()
{
  OUTLINED_FUNCTION_218();
  return v1;
}

uint64_t RestaurantReservationEntity.startDateTime.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t RestaurantReservationEntity.address.getter()
{
  OUTLINED_FUNCTION_174_1();
  return v1;
}

void VehicleReservationEntity.init(bookingProvider:cost:dropOffAddress:dropOffBusinessName:dropOffDateTime:dropOffPhoneNumber:duration:pickUpAddress:pickUpBusinessName:pickUpDateTime:pickUpPhoneNumber:renterName:status:vehicleClass:confirmationNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v89 = v40;
  uint64_t v90 = v41;
  uint64_t v87 = v42;
  uint64_t v88 = v43;
  uint64_t v84 = v44;
  uint64_t v85 = v45;
  uint64_t v81 = v46;
  uint64_t v82 = v47;
  __dst = v48;
  uint64_t v108 = a39;
  uint64_t v107 = a38;
  uint64_t v106 = a37;
  uint64_t v105 = a36;
  uint64_t v104 = a35;
  uint64_t v103 = a34;
  uint64_t v102 = a33;
  uint64_t v101 = a32;
  uint64_t v100 = a31;
  uint64_t v99 = a30;
  uint64_t v98 = a29;
  uint64_t v97 = a28;
  uint64_t v96 = a27;
  uint64_t v95 = a26;
  uint64_t v94 = a25;
  uint64_t v93 = a24;
  uint64_t v92 = a23;
  uint64_t v91 = a22;
  uint64_t v117 = a21;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v50 = OUTLINED_FUNCTION_81(v49);
  MEMORY[0x270FA5388](v50);
  uint64_t v86 = (uint64_t)&v78 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v52);
  uint64_t v83 = (uint64_t)&v78 - v53;
  uint64_t v54 = OUTLINED_FUNCTION_30_11();
  uint64_t v55 = OUTLINED_FUNCTION_81(v54);
  MEMORY[0x270FA5388](v55);
  OUTLINED_FUNCTION_18_8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_30_10();
  OUTLINED_FUNCTION_139_1();
  uint64_t v57 = v56;
  swift_retain();
  OUTLINED_FUNCTION_57_2();
  uint64_t v116 = MEMORY[0x25A2C4900](v39);
  swift_retain();
  OUTLINED_FUNCTION_30_10();
  uint64_t v114 = MEMORY[0x25A2C4900](v39);
  swift_retain();
  OUTLINED_FUNCTION_19_10();
  uint64_t v112 = MEMORY[0x25A2C4900](v39);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  swift_retain();
  OUTLINED_FUNCTION_19_10();
  OUTLINED_FUNCTION_140_1();
  uint64_t v111 = v58;
  swift_retain();
  OUTLINED_FUNCTION_206();
  OUTLINED_FUNCTION_139_1();
  uint64_t v110 = v59;
  swift_retain();
  OUTLINED_FUNCTION_14_15();
  OUTLINED_FUNCTION_140_1();
  uint64_t v118 = v60;
  swift_retain();
  OUTLINED_FUNCTION_104_3();
  OUTLINED_FUNCTION_139_1();
  uint64_t v121 = v61;
  swift_retain();
  OUTLINED_FUNCTION_206();
  uint64_t v120 = MEMORY[0x25A2C4900](v39);
  swift_retain();
  OUTLINED_FUNCTION_19_10();
  OUTLINED_FUNCTION_140_1();
  uint64_t v122 = v62;
  swift_retain();
  OUTLINED_FUNCTION_19_10();
  OUTLINED_FUNCTION_139_1();
  uint64_t v119 = v63;
  swift_retain();
  OUTLINED_FUNCTION_114_3();
  uint64_t v123 = MEMORY[0x25A2C4900](v39);
  swift_retain();
  OUTLINED_FUNCTION_123_1();
  uint64_t v64 = MEMORY[0x25A2C4900](v39);
  uint64_t v113 = v64;
  swift_retain();
  OUTLINED_FUNCTION_100_3();
  uint64_t v65 = MEMORY[0x25A2C4900](v39);
  uint64_t v115 = v65;
  swift_retain();
  OUTLINED_FUNCTION_19_10();
  uint64_t v66 = MEMORY[0x25A2C4900](v39);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_92_3();
  OUTLINED_FUNCTION_19_10();
  uint64_t v67 = MEMORY[0x25A2C48A0](v39);
  uint64_t v78 = v57;
  uint64_t v79 = v67;
  *(void *)&v124[0] = v57;
  *((void *)&v124[0] + 1) = v116;
  *(void *)&v124[1] = v114;
  *((void *)&v124[1] + 1) = v112;
  *(void *)&v124[2] = v111;
  *((void *)&v124[2] + 1) = v110;
  *(void *)&v124[3] = v118;
  *((void *)&v124[3] + 1) = v121;
  *(void *)&v124[4] = v120;
  *((void *)&v124[4] + 1) = v122;
  *(void *)&v124[5] = v119;
  *((void *)&v124[5] + 1) = v123;
  *(void *)&v124[6] = v64;
  *((void *)&v124[6] + 1) = v65;
  *(void *)&v124[7] = v66;
  *((void *)&v124[7] + 1) = v67;
  long long v80 = xmmword_258665BD0;
  v124[8] = xmmword_258665BD0;
  uint64_t v125 = v81;
  uint64_t v126 = v82;
  swift_retain();
  outlined retain of VehicleReservationEntity((uint64_t)v124);
  EntityProperty.wrappedValue.setter();
  outlined release of VehicleReservationEntity((uint64_t)v124);
  OUTLINED_FUNCTION_69_4(v85);
  EntityProperty.wrappedValue.setter();
  outlined release of VehicleReservationEntity((uint64_t)v124);
  OUTLINED_FUNCTION_69_4(v88);
  EntityProperty.wrappedValue.setter();
  outlined release of VehicleReservationEntity((uint64_t)v124);
  OUTLINED_FUNCTION_69_4(v90);
  EntityProperty.wrappedValue.setter();
  outlined release of VehicleReservationEntity((uint64_t)v124);
  uint64_t v68 = v83;
  outlined init with copy of SearchResult?(v117, v83, &demangling cache variable for type metadata for DateComponents?);
  uint64_t v69 = v86;
  outlined init with copy of SearchResult?(v68, v86, &demangling cache variable for type metadata for DateComponents?);
  outlined retain of VehicleReservationEntity((uint64_t)v124);
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v68, &demangling cache variable for type metadata for DateComponents?);
  outlined release of VehicleReservationEntity((uint64_t)v124);
  OUTLINED_FUNCTION_69_4(v92);
  EntityProperty.wrappedValue.setter();
  outlined release of VehicleReservationEntity((uint64_t)v124);
  uint64_t v70 = v93;
  uint64_t v71 = OUTLINED_FUNCTION_193_0();
  outlined init with copy of SearchResult?(v71, v72, &demangling cache variable for type metadata for DateComponents?);
  outlined init with copy of SearchResult?(v68, v69, &demangling cache variable for type metadata for DateComponents?);
  outlined retain of VehicleReservationEntity((uint64_t)v124);
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v68, &demangling cache variable for type metadata for DateComponents?);
  outlined release of VehicleReservationEntity((uint64_t)v124);
  OUTLINED_FUNCTION_69_4(v95);
  EntityProperty.wrappedValue.setter();
  outlined release of VehicleReservationEntity((uint64_t)v124);
  OUTLINED_FUNCTION_69_4(v97);
  EntityProperty.wrappedValue.setter();
  outlined release of VehicleReservationEntity((uint64_t)v124);
  uint64_t v73 = v98;
  uint64_t v74 = OUTLINED_FUNCTION_246();
  outlined init with copy of SearchResult?(v74, v75, &demangling cache variable for type metadata for DateComponents?);
  outlined init with copy of SearchResult?(v68, v69, &demangling cache variable for type metadata for DateComponents?);
  outlined retain of VehicleReservationEntity((uint64_t)v124);
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v68, &demangling cache variable for type metadata for DateComponents?);
  outlined release of VehicleReservationEntity((uint64_t)v124);
  OUTLINED_FUNCTION_69_4(v100);
  EntityProperty.wrappedValue.setter();
  outlined release of VehicleReservationEntity((uint64_t)v124);
  OUTLINED_FUNCTION_69_4(v102);
  EntityProperty.wrappedValue.setter();
  outlined release of VehicleReservationEntity((uint64_t)v124);
  OUTLINED_FUNCTION_69_4(v104);
  uint64_t v76 = v113;
  EntityProperty.wrappedValue.setter();
  outlined release of VehicleReservationEntity((uint64_t)v124);
  OUTLINED_FUNCTION_69_4(v106);
  uint64_t v77 = v115;
  EntityProperty.wrappedValue.setter();
  outlined release of VehicleReservationEntity((uint64_t)v124);
  OUTLINED_FUNCTION_69_4(v108);
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v73, &demangling cache variable for type metadata for DateComponents?);
  outlined destroy of PQAVerificationModelProtocol?(v70, &demangling cache variable for type metadata for DateComponents?);
  outlined destroy of PQAVerificationModelProtocol?(v117, &demangling cache variable for type metadata for DateComponents?);
  uint64_t v125 = v78;
  uint64_t v126 = v116;
  uint64_t v127 = v114;
  uint64_t v128 = v112;
  uint64_t v129 = v111;
  uint64_t v130 = v110;
  uint64_t v131 = v118;
  uint64_t v132 = v121;
  uint64_t v133 = v120;
  uint64_t v134 = v122;
  uint64_t v135 = v119;
  uint64_t v136 = v123;
  uint64_t v137 = v76;
  uint64_t v138 = v77;
  uint64_t v139 = v66;
  uint64_t v140 = v79;
  long long v141 = v80;
  outlined release of VehicleReservationEntity((uint64_t)&v125);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  memcpy(__dst, v124, 0x90uLL);
  OUTLINED_FUNCTION_119_0();
}

uint64_t VehicleReservationEntity.renterName.getter()
{
  OUTLINED_FUNCTION_254();
  return v1;
}

uint64_t VehicleReservationEntity.pickUpDateTime.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t VehicleReservationEntity.dropOffDateTime.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t VehicleReservationEntity.pickUpAddress.getter()
{
  OUTLINED_FUNCTION_172_1();
  return v1;
}

void TicketedTransportationEntity.init(arrivalStationName:arrivalStationAddress:arrivalDateTime:departureStationName:departureStationAddress:departureDateTime:duration:eventSubType:passengerNames:seatNumbers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  OUTLINED_FUNCTION_104_0();
  a19 = v28;
  a20 = v29;
  uint64_t v79 = v30;
  v77[6] = v31;
  v77[5] = v32;
  uint64_t v89 = v33;
  v77[4] = v34;
  v77[3] = v35;
  v77[1] = v36;
  v77[2] = v37;
  uint64_t v84 = v38;
  uint64_t v82 = a26;
  uint64_t v83 = a27;
  uint64_t v80 = a24;
  uint64_t v81 = a25;
  uint64_t v87 = a22;
  uint64_t v88 = a23;
  uint64_t v78 = a21;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v40 = OUTLINED_FUNCTION_81(v39);
  MEMORY[0x270FA5388](v40);
  uint64_t v86 = (uint64_t)v77 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v42);
  OUTLINED_FUNCTION_27_10();
  uint64_t v85 = v43;
  uint64_t v44 = OUTLINED_FUNCTION_30_11();
  uint64_t v45 = OUTLINED_FUNCTION_81(v44);
  MEMORY[0x270FA5388](v45);
  OUTLINED_FUNCTION_18_8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v97 = MEMORY[0x25A2C4900](v27);
  swift_retain();
  OUTLINED_FUNCTION_19_10();
  uint64_t v46 = MEMORY[0x25A2C4900](v27);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  uint64_t v95 = v46;
  swift_retain();
  OUTLINED_FUNCTION_99_2();
  uint64_t v47 = MEMORY[0x25A2C48D0](v27);
  swift_retain();
  OUTLINED_FUNCTION_19_10();
  uint64_t v91 = MEMORY[0x25A2C4900](v27);
  swift_retain();
  OUTLINED_FUNCTION_19_10();
  v77[0] = MEMORY[0x25A2C4900](v27);
  swift_retain();
  OUTLINED_FUNCTION_87_3();
  uint64_t v48 = MEMORY[0x25A2C48D0](v27);
  swift_retain();
  OUTLINED_FUNCTION_14_15();
  uint64_t v49 = MEMORY[0x25A2C48D0](v27);
  swift_retain();
  OUTLINED_FUNCTION_12_14();
  uint64_t v50 = MEMORY[0x25A2C4900](v27);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_52_3();
  uint64_t v51 = MEMORY[0x25A2C4900](v27);
  swift_retain();
  OUTLINED_FUNCTION_40_6();
  uint64_t v94 = MEMORY[0x25A2C4900](v27);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_92_3();
  OUTLINED_FUNCTION_19_10();
  MEMORY[0x25A2C48A0](v27);
  OUTLINED_FUNCTION_158_1((uint64_t)&a12);
  uint64_t v96 = v52;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v51;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_103_3();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v93 = v47;
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_214_0();
  OUTLINED_FUNCTION_32_7();
  OUTLINED_FUNCTION_158_1((uint64_t)&a15);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v53 = v48;
  swift_retain();
  swift_retain();
  uint64_t v90 = v50;
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_231();
  OUTLINED_FUNCTION_48_5();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v54 = v93;
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_32_7();
  uint64_t v55 = v85;
  outlined init with copy of SearchResult?(v89, v85, &demangling cache variable for type metadata for DateComponents?);
  outlined init with copy of SearchResult?(v55, v86, &demangling cache variable for type metadata for DateComponents?);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_231();
  outlined copy of Data?(0, 0xF000000000000000);
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v55, &demangling cache variable for type metadata for DateComponents?);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_234();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(0, 0xF000000000000000);
  OUTLINED_FUNCTION_158_1((uint64_t)&a17);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_231();
  OUTLINED_FUNCTION_103_3();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_146_1();
  outlined consume of Data?(0, 0xF000000000000000);
  OUTLINED_FUNCTION_45_3(v78);
  swift_retain();
  swift_retain();
  uint64_t v56 = v54;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_227();
  OUTLINED_FUNCTION_203_0();
  OUTLINED_FUNCTION_103_3();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v57 = v49;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_132_1();
  OUTLINED_FUNCTION_32_7();
  uint64_t v58 = v85;
  outlined init with copy of SearchResult?(v87, v85, &demangling cache variable for type metadata for DateComponents?);
  uint64_t v59 = v86;
  outlined init with copy of SearchResult?(v58, v86, &demangling cache variable for type metadata for DateComponents?);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_137_1();
  uint64_t v60 = v53;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_66_3();
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v58, &demangling cache variable for type metadata for DateComponents?);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_146_1();
  OUTLINED_FUNCTION_32_7();
  outlined init with copy of SearchResult?(v88, v58, &demangling cache variable for type metadata for DateComponents?);
  outlined init with copy of SearchResult?(v58, v59, &demangling cache variable for type metadata for DateComponents?);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v61 = v90;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_227();
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v58, &demangling cache variable for type metadata for DateComponents?);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_234();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_214_0();
  OUTLINED_FUNCTION_32_7();
  uint64_t v98 = v80;
  uint64_t v99 = v81;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v62 = v94;
  swift_retain();
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_132_1();
  outlined consume of Data?(0, 0xF000000000000000);
  uint64_t v98 = v82;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v63 = v57;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_203_0();
  outlined copy of Data?(0, 0xF000000000000000);
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_132_1();
  OUTLINED_FUNCTION_32_7();
  uint64_t v98 = v83;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v64 = v61;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_115_2();
  outlined destroy of PQAVerificationModelProtocol?(v88, &demangling cache variable for type metadata for DateComponents?);
  outlined destroy of PQAVerificationModelProtocol?(v87, &demangling cache variable for type metadata for DateComponents?);
  outlined destroy of PQAVerificationModelProtocol?(v89, &demangling cache variable for type metadata for DateComponents?);
  swift_release();
  uint64_t v65 = v62;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v66 = v57;
  swift_release();
  uint64_t v67 = v60;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v68 = v93;
  swift_release();
  uint64_t v69 = v95;
  swift_release();
  OUTLINED_FUNCTION_132_1();
  outlined consume of Data?(0, 0xF000000000000000);
  swift_release();
  uint64_t v70 = v69;
  swift_release();
  swift_release();
  uint64_t v71 = v63;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v72 = v66;
  swift_release();
  swift_release();
  uint64_t v73 = v92;
  swift_release();
  uint64_t v74 = v65;
  swift_release();
  uint64_t v75 = v96;
  swift_release();
  uint64_t v76 = v84;
  *uint64_t v84 = v97;
  v76[1] = v70;
  v76[2] = v68;
  v76[3] = v71;
  v76[4] = v56;
  v76[5] = v67;
  v76[6] = v72;
  v76[7] = v64;
  v76[8] = v73;
  v76[9] = v74;
  v76[10] = v75;
  *(_OWORD *)(v76 + 11) = xmmword_258665BD0;
  OUTLINED_FUNCTION_119_0();
}

uint64_t TicketedTransportationEntity.departureDateTime.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t TicketedTransportationEntity.arrivalDateTime.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t TicketedTransportationEntity.departureStationAddress.getter()
{
  OUTLINED_FUNCTION_217();
  return v1;
}

void TicketedShowEntity.init(reservationId:provider:customerNames:locationName:address:seatNumbers:duration:ticketType:ticketUrl:totalCost:startDateTime:endDateTime:eventSubType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v69 = v33;
  uint64_t v66 = v34;
  uint64_t v67 = v35;
  uint64_t v64 = v36;
  uint64_t v63 = v37;
  uint64_t v72 = v38;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v40 = OUTLINED_FUNCTION_81(v39);
  MEMORY[0x270FA5388](v40);
  OUTLINED_FUNCTION_185_0();
  uint64_t v71 = v41;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v42);
  OUTLINED_FUNCTION_27_10();
  uint64_t v70 = v43;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v45 = OUTLINED_FUNCTION_81(v44);
  MEMORY[0x270FA5388](v45);
  OUTLINED_FUNCTION_185_0();
  uint64_t v68 = v46;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v47);
  OUTLINED_FUNCTION_27_10();
  uint64_t v65 = v48;
  uint64_t v49 = OUTLINED_FUNCTION_30_11();
  uint64_t v50 = OUTLINED_FUNCTION_81(v49);
  MEMORY[0x270FA5388](v50);
  OUTLINED_FUNCTION_39();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  OUTLINED_FUNCTION_14_15();
  uint64_t v78 = MEMORY[0x25A2C48D0](v32);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]?>);
  swift_retain();
  OUTLINED_FUNCTION_108_2();
  uint64_t v75 = MEMORY[0x25A2C4900](v32);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  swift_retain();
  OUTLINED_FUNCTION_101_3();
  OUTLINED_FUNCTION_109_2();
  uint64_t v76 = v51;
  swift_retain();
  OUTLINED_FUNCTION_29_9();
  uint64_t v74 = MEMORY[0x25A2C4900](v32);
  swift_retain();
  OUTLINED_FUNCTION_30_10();
  uint64_t v52 = MEMORY[0x25A2C4900](v32);
  swift_retain();
  OUTLINED_FUNCTION_40_6();
  uint64_t v73 = MEMORY[0x25A2C4900](v32);
  swift_retain();
  OUTLINED_FUNCTION_181_1();
  OUTLINED_FUNCTION_109_2();
  uint64_t v54 = v53;
  swift_retain();
  OUTLINED_FUNCTION_12_14();
  OUTLINED_FUNCTION_109_2();
  uint64_t v80 = v55;
  swift_retain();
  OUTLINED_FUNCTION_222();
  OUTLINED_FUNCTION_230();
  uint64_t v77 = MEMORY[0x25A2C4900](v32);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  OUTLINED_FUNCTION_92_3();
  OUTLINED_FUNCTION_222();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v81 = MEMORY[0x25A2C48E0](v32);
  swift_retain();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_109_2();
  uint64_t v57 = v56;
  uint64_t v79 = v56;
  swift_retain();
  OUTLINED_FUNCTION_144_1();
  uint64_t v58 = MEMORY[0x25A2C48D0](v32);
  swift_retain();
  OUTLINED_FUNCTION_179_0();
  uint64_t v59 = MEMORY[0x25A2C48D0](v32);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_248();
  swift_retain();
  OUTLINED_FUNCTION_170_1();
  OUTLINED_FUNCTION_90_1();
  uint64_t v62 = MEMORY[0x25A2C48A0](v32);
  *(void *)&v82[0] = v78;
  *((void *)&v82[0] + 1) = v75;
  *(void *)&v82[1] = v76;
  *((void *)&v82[1] + 1) = v74;
  *(void *)&v82[2] = v52;
  *((void *)&v82[2] + 1) = v73;
  *(void *)&v82[3] = v54;
  *((void *)&v82[3] + 1) = v80;
  *(void *)&v82[4] = v77;
  *((void *)&v82[4] + 1) = v81;
  *(void *)&v82[5] = v57;
  *((void *)&v82[5] + 1) = v58;
  *(void *)&v82[6] = v59;
  *((void *)&v82[6] + 1) = v62;
  v82[7] = xmmword_258665BD0;
  uint64_t v83 = v63;
  uint64_t v84 = v64;
  swift_retain();
  outlined retain of TicketedShowEntity();
  EntityProperty.wrappedValue.setter();
  outlined release of TicketedShowEntity();
  OUTLINED_FUNCTION_59_6(v66);
  EntityProperty.wrappedValue.setter();
  outlined release of TicketedShowEntity();
  uint64_t v83 = v67;
  outlined retain of TicketedShowEntity();
  EntityProperty.wrappedValue.setter();
  outlined release of TicketedShowEntity();
  OUTLINED_FUNCTION_59_6(v69);
  EntityProperty.wrappedValue.setter();
  outlined release of TicketedShowEntity();
  OUTLINED_FUNCTION_59_6(a21);
  EntityProperty.wrappedValue.setter();
  outlined release of TicketedShowEntity();
  uint64_t v83 = a22;
  outlined retain of TicketedShowEntity();
  EntityProperty.wrappedValue.setter();
  outlined release of TicketedShowEntity();
  outlined init with copy of SearchResult?(a23, v65, &demangling cache variable for type metadata for DateComponents?);
  outlined init with copy of SearchResult?(v65, v68, &demangling cache variable for type metadata for DateComponents?);
  outlined retain of TicketedShowEntity();
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v65, &demangling cache variable for type metadata for DateComponents?);
  outlined release of TicketedShowEntity();
  OUTLINED_FUNCTION_59_6(a25);
  EntityProperty.wrappedValue.setter();
  outlined release of TicketedShowEntity();
  outlined init with copy of SearchResult?(a26, v70, &demangling cache variable for type metadata for URL?);
  outlined init with copy of SearchResult?(v70, v71, &demangling cache variable for type metadata for URL?);
  outlined retain of TicketedShowEntity();
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v70, &demangling cache variable for type metadata for URL?);
  outlined release of TicketedShowEntity();
  OUTLINED_FUNCTION_59_6(a28);
  EntityProperty.wrappedValue.setter();
  outlined release of TicketedShowEntity();
  outlined init with copy of SearchResult?(a29, v65, &demangling cache variable for type metadata for DateComponents?);
  outlined init with copy of SearchResult?(v65, v68, &demangling cache variable for type metadata for DateComponents?);
  outlined retain of TicketedShowEntity();
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v65, &demangling cache variable for type metadata for DateComponents?);
  outlined release of TicketedShowEntity();
  outlined init with copy of SearchResult?(a30, v65, &demangling cache variable for type metadata for DateComponents?);
  outlined init with copy of SearchResult?(v65, v68, &demangling cache variable for type metadata for DateComponents?);
  outlined retain of TicketedShowEntity();
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v65, &demangling cache variable for type metadata for DateComponents?);
  outlined release of TicketedShowEntity();
  OUTLINED_FUNCTION_59_6(a32);
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(a30, &demangling cache variable for type metadata for DateComponents?);
  uint64_t v60 = OUTLINED_FUNCTION_121_1();
  outlined destroy of PQAVerificationModelProtocol?(v60, v61);
  outlined destroy of PQAVerificationModelProtocol?(a26, &demangling cache variable for type metadata for URL?);
  outlined destroy of PQAVerificationModelProtocol?(a23, &demangling cache variable for type metadata for DateComponents?);
  uint64_t v83 = v78;
  uint64_t v84 = v75;
  uint64_t v85 = v76;
  uint64_t v86 = v74;
  uint64_t v87 = v52;
  uint64_t v88 = v73;
  uint64_t v89 = v54;
  uint64_t v90 = v80;
  uint64_t v91 = v77;
  uint64_t v92 = v81;
  uint64_t v93 = v79;
  uint64_t v94 = v58;
  uint64_t v95 = v59;
  uint64_t v96 = v62;
  long long v97 = xmmword_258665BD0;
  outlined release of TicketedShowEntity();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  memcpy(v72, v82, 0x80uLL);
  OUTLINED_FUNCTION_119_0();
}

uint64_t TicketedShowEntity.startDateTime.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t TicketedShowEntity.address.getter()
{
  OUTLINED_FUNCTION_217();
  return v1;
}

void GenericEventEntity.init(attendees:businessName:cost:duration:endDateTime:eventLink:eventName:eventType:eventSubType:location:organizer:phoneNumber:startDateTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v110 = v33;
  uint64_t v111 = v32;
  uint64_t v112 = v34;
  uint64_t v86 = v35;
  uint64_t v87 = v36;
  uint64_t v84 = v37;
  uint64_t v85 = v38;
  uint64_t v83 = v39;
  uint64_t v104 = v40;
  uint64_t v103 = a32;
  uint64_t v102 = a31;
  uint64_t v101 = a30;
  uint64_t v100 = a29;
  uint64_t v99 = a28;
  uint64_t v98 = a27;
  uint64_t v95 = a26;
  uint64_t v94 = a25;
  uint64_t v93 = a24;
  uint64_t v92 = a23;
  uint64_t v91 = a22;
  uint64_t v90 = a21;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentPerson?);
  uint64_t v42 = OUTLINED_FUNCTION_81(v41);
  MEMORY[0x270FA5388](v42);
  OUTLINED_FUNCTION_185_0();
  uint64_t v97 = v43;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v44);
  OUTLINED_FUNCTION_27_10();
  uint64_t v96 = v45;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v47 = OUTLINED_FUNCTION_81(v46);
  MEMORY[0x270FA5388](v47);
  OUTLINED_FUNCTION_185_0();
  uint64_t v89 = v48;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v49);
  OUTLINED_FUNCTION_27_10();
  uint64_t v88 = v50;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v52 = OUTLINED_FUNCTION_81(v51);
  MEMORY[0x270FA5388](v52);
  OUTLINED_FUNCTION_185_0();
  uint64_t v82 = v53;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v54);
  uint64_t v81 = (uint64_t)&v76 - v55;
  uint64_t v56 = OUTLINED_FUNCTION_30_11();
  uint64_t v57 = OUTLINED_FUNCTION_81(v56);
  MEMORY[0x270FA5388](v57);
  OUTLINED_FUNCTION_15();
  uint64_t v60 = v59 - v58;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[IntentPerson]>);
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_64_2();
  uint64_t v109 = MEMORY[0x25A2C48B0](v60);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  swift_retain();
  OUTLINED_FUNCTION_10_18();
  uint64_t v61 = MEMORY[0x25A2C4900](v60);
  swift_retain();
  OUTLINED_FUNCTION_57_2();
  uint64_t v62 = MEMORY[0x25A2C4900](v60);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  swift_retain();
  OUTLINED_FUNCTION_14_15();
  uint64_t v107 = MEMORY[0x25A2C48D0](v60);
  swift_retain();
  OUTLINED_FUNCTION_23_8();
  uint64_t v106 = MEMORY[0x25A2C48D0](v60);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  OUTLINED_FUNCTION_92_3();
  OUTLINED_FUNCTION_80_2();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v113 = MEMORY[0x25A2C48E0](v60);
  swift_retain();
  OUTLINED_FUNCTION_80_2();
  LocalizedStringResource.init(stringLiteral:)();
  *(void *)&long long v115 = MEMORY[0x25A2C4900](v60);
  swift_retain();
  OUTLINED_FUNCTION_80_2();
  LocalizedStringResource.init(stringLiteral:)();
  *((void *)&v115 + 1) = MEMORY[0x25A2C4900](v60);
  swift_retain();
  OUTLINED_FUNCTION_12_14();
  uint64_t v116 = MEMORY[0x25A2C4900](v60);
  swift_retain();
  OUTLINED_FUNCTION_182_1();
  uint64_t v63 = MEMORY[0x25A2C4900](v60);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentPerson?>);
  swift_retain();
  OUTLINED_FUNCTION_33_6();
  uint64_t v64 = MEMORY[0x25A2C48B0](v60);
  uint64_t v114 = v64;
  swift_retain();
  OUTLINED_FUNCTION_15_13();
  uint64_t v65 = MEMORY[0x25A2C4900](v60);
  uint64_t v76 = v65;
  swift_retain();
  OUTLINED_FUNCTION_17_10();
  uint64_t v66 = MEMORY[0x25A2C48D0](v60);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_248();
  uint64_t v108 = v66;
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v67 = MEMORY[0x25A2C48A0](v60);
  uint64_t v78 = v61;
  uint64_t v79 = v67;
  *(void *)&v117[0] = v109;
  *((void *)&v117[0] + 1) = v61;
  uint64_t v77 = v62;
  *(void *)&v117[1] = v62;
  *((void *)&v117[1] + 1) = v107;
  *(void *)&v117[2] = v106;
  *((void *)&v117[2] + 1) = v113;
  v117[3] = v115;
  *(void *)&v117[4] = v116;
  *((void *)&v117[4] + 1) = v63;
  *(void *)&v117[5] = v64;
  *((void *)&v117[5] + 1) = v65;
  *(void *)&v117[6] = v66;
  *((void *)&v117[6] + 1) = v67;
  long long v80 = xmmword_258665BD0;
  v117[7] = xmmword_258665BD0;
  uint64_t v118 = v83;
  swift_retain();
  outlined retain of TicketedShowEntity();
  EntityProperty.wrappedValue.setter();
  outlined release of TicketedShowEntity();
  OUTLINED_FUNCTION_59_6(v85);
  EntityProperty.wrappedValue.setter();
  outlined release of TicketedShowEntity();
  OUTLINED_FUNCTION_59_6(v87);
  EntityProperty.wrappedValue.setter();
  outlined release of TicketedShowEntity();
  uint64_t v68 = v81;
  outlined init with copy of SearchResult?(v112, v81, &demangling cache variable for type metadata for DateComponents?);
  uint64_t v69 = v82;
  outlined init with copy of SearchResult?(v68, v82, &demangling cache variable for type metadata for DateComponents?);
  outlined retain of TicketedShowEntity();
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v68, &demangling cache variable for type metadata for DateComponents?);
  outlined release of TicketedShowEntity();
  outlined init with copy of SearchResult?(v111, v68, &demangling cache variable for type metadata for DateComponents?);
  outlined init with copy of SearchResult?(v68, v69, &demangling cache variable for type metadata for DateComponents?);
  outlined retain of TicketedShowEntity();
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v68, &demangling cache variable for type metadata for DateComponents?);
  outlined release of TicketedShowEntity();
  uint64_t v70 = v88;
  outlined init with copy of SearchResult?(v110, v88, &demangling cache variable for type metadata for URL?);
  outlined init with copy of SearchResult?(v70, v89, &demangling cache variable for type metadata for URL?);
  outlined retain of TicketedShowEntity();
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v70, &demangling cache variable for type metadata for URL?);
  outlined release of TicketedShowEntity();
  OUTLINED_FUNCTION_59_6(v91);
  EntityProperty.wrappedValue.setter();
  outlined release of TicketedShowEntity();
  OUTLINED_FUNCTION_59_6(v93);
  EntityProperty.wrappedValue.setter();
  outlined release of TicketedShowEntity();
  OUTLINED_FUNCTION_59_6(v95);
  EntityProperty.wrappedValue.setter();
  outlined release of TicketedShowEntity();
  OUTLINED_FUNCTION_59_6(v99);
  uint64_t v105 = v63;
  EntityProperty.wrappedValue.setter();
  outlined release of TicketedShowEntity();
  uint64_t v71 = v100;
  uint64_t v72 = v96;
  outlined init with copy of SearchResult?(v100, v96, &demangling cache variable for type metadata for IntentPerson?);
  outlined init with copy of SearchResult?(v72, v97, &demangling cache variable for type metadata for IntentPerson?);
  outlined retain of TicketedShowEntity();
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v72, &demangling cache variable for type metadata for IntentPerson?);
  outlined release of TicketedShowEntity();
  OUTLINED_FUNCTION_59_6(v102);
  uint64_t v73 = v76;
  EntityProperty.wrappedValue.setter();
  outlined release of TicketedShowEntity();
  uint64_t v74 = v103;
  outlined init with copy of SearchResult?(v103, v68, &demangling cache variable for type metadata for DateComponents?);
  outlined init with copy of SearchResult?(v68, v69, &demangling cache variable for type metadata for DateComponents?);
  outlined retain of TicketedShowEntity();
  uint64_t v75 = v108;
  EntityProperty.wrappedValue.setter();
  outlined destroy of PQAVerificationModelProtocol?(v68, &demangling cache variable for type metadata for DateComponents?);
  outlined destroy of PQAVerificationModelProtocol?(v74, &demangling cache variable for type metadata for DateComponents?);
  outlined destroy of PQAVerificationModelProtocol?(v71, &demangling cache variable for type metadata for IntentPerson?);
  outlined destroy of PQAVerificationModelProtocol?(v110, &demangling cache variable for type metadata for URL?);
  outlined destroy of PQAVerificationModelProtocol?(v111, &demangling cache variable for type metadata for DateComponents?);
  outlined destroy of PQAVerificationModelProtocol?(v112, &demangling cache variable for type metadata for DateComponents?);
  uint64_t v118 = v109;
  uint64_t v119 = v78;
  uint64_t v120 = v77;
  uint64_t v121 = v107;
  uint64_t v122 = v106;
  uint64_t v123 = v113;
  long long v124 = v115;
  uint64_t v125 = v116;
  uint64_t v126 = v105;
  uint64_t v127 = v114;
  uint64_t v128 = v73;
  uint64_t v129 = v75;
  uint64_t v130 = v79;
  long long v131 = v80;
  outlined release of TicketedShowEntity();
  outlined release of TicketedShowEntity();
  outlined retain of TicketedShowEntity();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  memcpy(v104, v117, 0x80uLL);
  OUTLINED_FUNCTION_119_0();
}

uint64_t key path getter for EventEntity.subType : EventEntity@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EventEntity.subType.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for EventEntity.subType : EventEntity()
{
  return EventEntity.subType.setter();
}

uint64_t (*EventEntity.subType.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_55_4((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t EventEntity.$subType.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t EventEntity.flightReservation.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t key path getter for EventEntity.flightReservation : EventEntity@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = a1[1];
  v7[0] = *a1;
  v7[1] = v3;
  long long v4 = a1[3];
  v7[2] = a1[2];
  v7[3] = v4;
  v7[4] = a1[4];
  EventEntity.flightReservation.getter();
  outlined init with take of GenericEventEntity?((uint64_t)&v6, (uint64_t)v7, &demangling cache variable for type metadata for FlightReservationEntity?);
  return outlined init with take of GenericEventEntity?((uint64_t)v7, a2, &demangling cache variable for type metadata for FlightReservationEntity?);
}

uint64_t key path setter for EventEntity.flightReservation : EventEntity(uint64_t a1, _OWORD *a2)
{
  outlined init with take of GenericEventEntity?(a1, (uint64_t)v7, &demangling cache variable for type metadata for FlightReservationEntity?);
  long long v3 = a2[1];
  v6[13] = *a2;
  v6[14] = v3;
  long long v4 = a2[3];
  v6[15] = a2[2];
  v6[16] = v4;
  v6[17] = a2[4];
  outlined init with take of GenericEventEntity?((uint64_t)v7, (uint64_t)v6, &demangling cache variable for type metadata for FlightReservationEntity?);
  outlined release of FlightReservationEntity?(v7);
  return EventEntity.flightReservation.setter((uint64_t)v6);
}

uint64_t (*EventEntity.flightReservation.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_53_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t EventEntity.$flightReservation.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t EventEntity.genericEvent.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t (*EventEntity.genericEvent.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_54_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t EventEntity.$genericEvent.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t EventEntity.hotelReservation.getter()
{
  return EntityProperty.wrappedValue.getter();
}

double key path getter for EventEntity.hotelReservation : EventEntity@<D0>(uint64_t a1@<X8>)
{
  EventEntity.hotelReservation.getter();
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 80) = v8;
  double result = *(double *)&v9;
  *(_OWORD *)(a1 + 96) = v9;
  *(void *)(a1 + 112) = v10;
  return result;
}

uint64_t key path setter for EventEntity.hotelReservation : EventEntity(uint64_t *a1, long long *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  uint64_t v10 = a1[8];
  uint64_t v11 = a1[9];
  uint64_t v12 = a1[10];
  uint64_t v13 = a1[11];
  uint64_t v14 = a1[12];
  uint64_t v15 = a1[13];
  unint64_t v16 = a1[14];
  long long v17 = a2[1];
  long long v36 = *a2;
  long long v18 = a2[2];
  long long v19 = a2[3];
  long long v37 = v17;
  long long v38 = v18;
  long long v20 = a2[4];
  long long v39 = v19;
  long long v40 = v20;
  v22.n128_u64[0] = v2;
  v22.n128_u64[1] = v3;
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  uint64_t v25 = v6;
  uint64_t v26 = v7;
  uint64_t v27 = v8;
  uint64_t v28 = v9;
  uint64_t v29 = v10;
  uint64_t v30 = v11;
  uint64_t v31 = v12;
  uint64_t v32 = v13;
  uint64_t v33 = v14;
  uint64_t v34 = v15;
  unint64_t v35 = v16;
  outlined copy of HotelReservationEntity?(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  return EventEntity.hotelReservation.setter(&v22);
}

uint64_t (*EventEntity.hotelReservation.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_43_6((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t EventEntity.$hotelReservation.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t EventEntity.restaurantReservation.getter()
{
  return EntityProperty.wrappedValue.getter();
}

double key path getter for EventEntity.restaurantReservation : EventEntity@<D0>(_OWORD *a1@<X8>)
{
  EventEntity.restaurantReservation.getter();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  double result = *(double *)&v7;
  a1[4] = v7;
  a1[5] = v8;
  return result;
}

uint64_t key path setter for EventEntity.restaurantReservation : EventEntity(uint64_t *a1, long long *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  uint64_t v10 = a1[8];
  uint64_t v11 = a1[9];
  uint64_t v12 = a1[10];
  unint64_t v13 = a1[11];
  long long v14 = a2[1];
  long long v28 = *a2;
  long long v29 = v14;
  long long v15 = a2[3];
  long long v30 = a2[2];
  long long v31 = v15;
  long long v32 = a2[4];
  v17.n128_u64[0] = v2;
  v17.n128_u64[1] = v3;
  uint64_t v18 = v4;
  uint64_t v19 = v5;
  uint64_t v20 = v6;
  uint64_t v21 = v7;
  uint64_t v22 = v8;
  uint64_t v23 = v9;
  uint64_t v24 = v10;
  uint64_t v25 = v11;
  uint64_t v26 = v12;
  unint64_t v27 = v13;
  outlined copy of RestaurantReservationEntity?(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  return EventEntity.restaurantReservation.setter(&v17);
}

uint64_t (*EventEntity.restaurantReservation.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_45_5((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t EventEntity.$restaurantReservation.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t EventEntity.ticketedTransportation.getter()
{
  return EntityProperty.wrappedValue.getter();
}

double key path getter for EventEntity.ticketedTransportation : EventEntity@<D0>(uint64_t a1@<X8>)
{
  EventEntity.ticketedTransportation.getter();
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 80) = v8;
  *(void *)(a1 + 96) = v9;
  return result;
}

uint64_t key path setter for EventEntity.ticketedTransportation : EventEntity(uint64_t *a1, long long *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  uint64_t v10 = a1[8];
  uint64_t v11 = a1[9];
  uint64_t v12 = a1[10];
  uint64_t v13 = a1[11];
  unint64_t v14 = a1[12];
  long long v15 = a2[1];
  long long v30 = *a2;
  long long v31 = v15;
  long long v16 = a2[3];
  long long v32 = a2[2];
  long long v33 = v16;
  long long v34 = a2[4];
  v18.n128_u64[0] = v2;
  v18.n128_u64[1] = v3;
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  uint64_t v21 = v6;
  uint64_t v22 = v7;
  uint64_t v23 = v8;
  uint64_t v24 = v9;
  uint64_t v25 = v10;
  uint64_t v26 = v11;
  uint64_t v27 = v12;
  uint64_t v28 = v13;
  unint64_t v29 = v14;
  outlined copy of TicketedTransportationEntity?(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  return EventEntity.ticketedTransportation.setter(&v18);
}

uint64_t (*EventEntity.ticketedTransportation.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_40_7((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t EventEntity.$ticketedTransportation.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t EventEntity.vehicleReservation.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t key path getter for EventEntity.vehicleReservation : EventEntity@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = a1[1];
  v7[0] = *a1;
  v7[1] = v3;
  long long v4 = a1[3];
  v7[2] = a1[2];
  v7[3] = v4;
  v7[4] = a1[4];
  EventEntity.vehicleReservation.getter();
  outlined init with take of GenericEventEntity?((uint64_t)&v6, (uint64_t)v7, &demangling cache variable for type metadata for VehicleReservationEntity?);
  return outlined init with take of GenericEventEntity?((uint64_t)v7, a2, &demangling cache variable for type metadata for VehicleReservationEntity?);
}

uint64_t key path setter for EventEntity.vehicleReservation : EventEntity(uint64_t a1, _OWORD *a2)
{
  outlined init with take of GenericEventEntity?(a1, (uint64_t)v7, &demangling cache variable for type metadata for VehicleReservationEntity?);
  long long v3 = a2[1];
  v6[9] = *a2;
  v6[10] = v3;
  long long v4 = a2[3];
  v6[11] = a2[2];
  v6[12] = v4;
  v6[13] = a2[4];
  outlined init with take of GenericEventEntity?((uint64_t)v7, (uint64_t)v6, &demangling cache variable for type metadata for VehicleReservationEntity?);
  outlined release of VehicleReservationEntity?(v7);
  return EventEntity.vehicleReservation.setter((uint64_t)v6);
}

uint64_t (*EventEntity.vehicleReservation.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_41_7((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t EventEntity.$vehicleReservation.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t EventEntity.ticketedShow.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_105_3();
  if (!(!v3 & v2)) {
    outlined consume of Data._Representation(*(void *)(v0 + 128), v1);
  }
  return MEMORY[0x270FA0238](v0, 144, 7);
}

uint64_t sub_257FE884C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_105_3();
  if (!(!v3 & v2)) {
    outlined consume of Data._Representation(*(void *)(v0 + 104), v1);
  }
  return MEMORY[0x270FA0238](v0, 120, 7);
}

uint64_t sub_257FE8934()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_105_3();
  if (!(!v3 & v2)) {
    outlined consume of Data._Representation(*(void *)(v0 + 144), v1);
  }
  return MEMORY[0x270FA0238](v0, 160, 7);
}

uint64_t sub_257FE8A44()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_105_3();
  if (!(!v3 & v2)) {
    outlined consume of Data._Representation(*(void *)(v0 + 96), v1);
  }
  return MEMORY[0x270FA0238](v0, 112, 7);
}

uint64_t sub_257FE8B24()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_105_3();
  if (!(!v3 & v2)) {
    outlined consume of Data._Representation(*(void *)(v0 + 120), v1);
  }
  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t outlined init with take of GenericEventEntity?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_257FE8C78()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_105_3();
  if (!(!v3 & v2)) {
    outlined consume of Data._Representation(*(void *)(v0 + 208), v1);
  }
  return MEMORY[0x270FA0238](v0, 224, 7);
}

uint64_t key path getter for EventEntity.genericEvent : EventEntity@<X0>(_OWORD *a1@<X0>, void (*a2)(void *__return_ptr)@<X3>, uint64_t *a3@<X4>, uint64_t a4@<X8>)
{
  long long v6 = a1[1];
  v10[0] = *a1;
  v10[1] = v6;
  long long v7 = a1[3];
  v10[2] = a1[2];
  v10[3] = v7;
  v10[4] = a1[4];
  a2(v9);
  outlined init with take of GenericEventEntity?((uint64_t)v9, (uint64_t)v10, a3);
  return outlined init with take of GenericEventEntity?((uint64_t)v10, a4, a3);
}

uint64_t key path setter for EventEntity.genericEvent : EventEntity(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_OWORD *))
{
  outlined init with take of GenericEventEntity?(a1, (uint64_t)v13, a5);
  long long v9 = a2[1];
  v12[8] = *a2;
  v12[9] = v9;
  long long v10 = a2[3];
  v12[10] = a2[2];
  v12[11] = v10;
  v12[12] = a2[4];
  outlined init with take of GenericEventEntity?((uint64_t)v13, (uint64_t)v12, a5);
  outlined release of TicketedShowEntity?(v13);
  return a6(v12);
}

uint64_t (*EventEntity.ticketedShow.modify())()
{
  unint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_44_8((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t EventEntity.$ticketedShow.getter()
{
  return EntityProperty.projectedValue.getter();
}

void EventEntity.init()()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = OUTLINED_FUNCTION_202_0();
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<EventSubType>);
  LocalizedStringResource.init(stringLiteral:)();
  unint64_t v4 = lazy protocol witness table accessor for type EventSubType and conformance EventSubType();
  uint64_t v5 = MEMORY[0x25A2C4880](v1, v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<FlightReservationEntity?>);
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type FlightReservationEntity and conformance FlightReservationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<GenericEventEntity?>);
  OUTLINED_FUNCTION_6_15();
  lazy protocol witness table accessor for type GenericEventEntity and conformance GenericEventEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<HotelReservationEntity?>);
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type HotelReservationEntity and conformance HotelReservationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<RestaurantReservationEntity?>);
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type RestaurantReservationEntity and conformance RestaurantReservationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v13 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedTransportationEntity?>);
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type TicketedTransportationEntity and conformance TicketedTransportationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<VehicleReservationEntity?>);
  OUTLINED_FUNCTION_50_6();
  lazy protocol witness table accessor for type VehicleReservationEntity and conformance VehicleReservationEntity();
  OUTLINED_FUNCTION_65_2();
  uint64_t v17 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<TicketedShowEntity?>);
  OUTLINED_FUNCTION_6_15();
  lazy protocol witness table accessor for type TicketedShowEntity and conformance TicketedShowEntity();
  OUTLINED_FUNCTION_65_2();
  *(void *)uint64_t v0 = v5;
  *(void *)(v0 + 8) = v7;
  *(void *)(v0 + 16) = v9;
  *(void *)(v0 + 24) = v11;
  *(void *)(v0 + 32) = v13;
  *(void *)(v0 + 40) = v15;
  *(void *)(v0 + 48) = v17;
  *(void *)(v0 + 56) = v18;
  *(_OWORD *)(v0 + 64) = xmmword_258665BD0;
  OUTLINED_FUNCTION_119_0();
}

uint64_t static EventEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return static IdCardEntity.typeDisplayRepresentation.getter(&one-time initialization token for typeDisplayRepresentation, (uint64_t)static EventEntity.typeDisplayRepresentation, a1);
}

uint64_t static EventEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  return static EventEntity.typeDisplayRepresentation.setter(a1, &one-time initialization token for typeDisplayRepresentation, (uint64_t)static EventEntity.typeDisplayRepresentation);
}

uint64_t (*static EventEntity.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  OUTLINED_FUNCTION_11_11(v0, (uint64_t)static EventEntity.typeDisplayRepresentation);
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

void EventEntity.description.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation?);
  uint64_t v2 = OUTLINED_FUNCTION_81(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_184_0();
  uint64_t v23 = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_184_0();
  uint64_t v24 = v6;
  uint64_t v25 = OUTLINED_FUNCTION_30_11();
  OUTLINED_FUNCTION_1();
  uint64_t v21 = v7;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_185_0();
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_27_10();
  uint64_t v20 = v10;
  uint64_t v12 = *(void *)(v0 + 64);
  unint64_t v11 = *(void *)(v0 + 72);
  static EventSubType.caseDisplayRepresentations.getter();
  uint64_t v22 = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v12, v11);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v12, v11);
  specialized Dictionary.subscript.getter(v26, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t v14 = type metadata accessor for DisplayRepresentation();
  if (__swift_getEnumTagSinglePayload(v23, 1, v14) == 1)
  {
    outlined destroy of PQAVerificationModelProtocol?(v23, &demangling cache variable for type metadata for DisplayRepresentation?);
    uint64_t v15 = v24;
    OUTLINED_FUNCTION_32(v24, v16, v17, v25);
  }
  else
  {
    uint64_t v15 = v24;
    DisplayRepresentation.descriptionText.getter();
    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_16_1();
    v18();
    if (__swift_getEnumTagSinglePayload(v24, 1, v25) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v20, v24, v25);
      OUTLINED_FUNCTION_64_0();
      v19();
      String.init(localized:)();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v25);
      goto LABEL_6;
    }
  }
  outlined destroy of PQAVerificationModelProtocol?(v15, &demangling cache variable for type metadata for LocalizedStringResource?);
LABEL_6:
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_119_0();
}

void static EventSubType.caseDisplayRepresentations.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_15();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_15();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(EventSubType, DisplayRepresentation)>);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EventSubType, DisplayRepresentation))
      - 8;
  uint64_t v13 = *(void *)(*(void *)v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(*(void *)v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v12 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_258666A00;
  unint64_t v15 = v22 + v14;
  *(unsigned char *)(v22 + v14) = 0;
  OUTLINED_FUNCTION_50_6();
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  uint64_t v16 = type metadata accessor for DisplayRepresentation.Image();
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v16);
  DisplayRepresentation.init(title:subtitle:image:)();
  OUTLINED_FUNCTION_163_1();
  *uint64_t v17 = 1;
  OUTLINED_FUNCTION_50_6();
  OUTLINED_FUNCTION_6_16();
  OUTLINED_FUNCTION_163_1();
  *uint64_t v18 = 2;
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_6_16();
  OUTLINED_FUNCTION_163_1();
  *uint64_t v19 = 3;
  OUTLINED_FUNCTION_50_6();
  OUTLINED_FUNCTION_6_16();
  OUTLINED_FUNCTION_163_1();
  *uint64_t v20 = 4;
  OUTLINED_FUNCTION_50_6();
  OUTLINED_FUNCTION_6_16();
  OUTLINED_FUNCTION_163_1();
  *uint64_t v21 = 5;
  OUTLINED_FUNCTION_122_1();
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_6_16();
  *(unsigned char *)(v15 + 6 * v13) = 6;
  LocalizedStringResource.init(stringLiteral:)();
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v16);
  DisplayRepresentation.init(title:subtitle:image:)();
  type metadata accessor for DisplayRepresentation();
  lazy protocol witness table accessor for type EventSubType and conformance EventSubType();
  Dictionary.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_119_0();
}

uint64_t EventEntity.cardData.getter()
{
  return OUTLINED_FUNCTION_41_6();
}

uint64_t EventEntity.cardData.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = outlined consume of Data?(*(void *)(v1 + 64), *(void *)(v1 + 72));
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 72) = v0;
  return result;
}

uint64_t (*EventEntity.cardData.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void static EventEntity.== infix(_:_:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v1 = (uint64_t *)MEMORY[0x270FA5388](v0);
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v11 = v1[8];
  unint64_t v10 = v1[9];
  uint64_t v225 = v12[2];
  uint64_t v227 = v12[3];
  uint64_t v226 = v12[4];
  uint64_t v224 = v12[5];
  uint64_t v222 = *v12;
  uint64_t v223 = v12[6];
  uint64_t v229 = v12[8];
  unint64_t v228 = v12[9];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v11, v10);
  EntityProperty.wrappedValue.getter();
  uint64_t v219 = v9;
  swift_release();
  uint64_t v220 = v8;
  swift_release();
  uint64_t v221 = v7;
  swift_release();
  uint64_t v208 = v6;
  swift_release();
  uint64_t v209 = v5;
  swift_release();
  uint64_t v210 = v4;
  swift_release();
  uint64_t v211 = v3;
  swift_release();
  uint64_t v214 = v2;
  swift_release();
  unint64_t v212 = v10;
  uint64_t v213 = v11;
  outlined consume of Data?(v11, v10);
  LODWORD(v215) = v244;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_190_0();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v229, v228);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v229, v228);
  if ((specialized == infix<A>(_:_:)(v244, v294[0]) & 1) == 0) {
    goto LABEL_53;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_155_1();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v11, v10);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v11, v10);
  outlined init with take of GenericEventEntity?((uint64_t)v279, (uint64_t)v292, &demangling cache variable for type metadata for FlightReservationEntity?);
  OUTLINED_FUNCTION_187_0();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v229, v228);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v229, v228);
  outlined init with take of GenericEventEntity?((uint64_t)&v271, (uint64_t)v293, &demangling cache variable for type metadata for FlightReservationEntity?);
  outlined init with take of GenericEventEntity?((uint64_t)v292, (uint64_t)v294, &demangling cache variable for type metadata for FlightReservationEntity?);
  OUTLINED_FUNCTION_62_4(v294);
  if (v13)
  {
    outlined init with take of GenericEventEntity?((uint64_t)v293, (uint64_t)&v244, &demangling cache variable for type metadata for FlightReservationEntity?);
    OUTLINED_FUNCTION_62_4(&v244);
    if (v13) {
      goto LABEL_12;
    }
LABEL_10:
    OUTLINED_FUNCTION_184_1((uint64_t)v292);
    outlined init with take of GenericEventEntity?((uint64_t)v293, (uint64_t)v270, &demangling cache variable for type metadata for FlightReservationEntity?);
    outlined release of (FlightReservationEntity?, FlightReservationEntity?)((uint64_t)&v244);
    goto LABEL_53;
  }
  outlined init with take of GenericEventEntity?((uint64_t)v292, (uint64_t)__src, &demangling cache variable for type metadata for FlightReservationEntity?);
  outlined init with take of GenericEventEntity?((uint64_t)v293, (uint64_t)&v244, &demangling cache variable for type metadata for FlightReservationEntity?);
  OUTLINED_FUNCTION_62_4(&v244);
  if (v13)
  {
    memcpy(__dst, __src, sizeof(__dst));
    outlined init with take of GenericEventEntity?((uint64_t)v292, (uint64_t)v233, &demangling cache variable for type metadata for FlightReservationEntity?);
    outlined retain of FlightReservationEntity((uint64_t)v233);
    outlined release of FlightReservationEntity((uint64_t)__dst);
    goto LABEL_10;
  }
  uint64_t v14 = outlined init with take of GenericEventEntity?((uint64_t)v293, (uint64_t)v231, &demangling cache variable for type metadata for FlightReservationEntity?);
  uint64_t v22 = OUTLINED_FUNCTION_232(v14, v15, v16, v17, v18, v19, v20, v21, v145, v146, v147, v148, v149, v150, v151, v152, v153, v154, v155,
          v156,
          v157,
          v158,
          v159,
          v160,
          v161,
          v162.n128_i64[0],
          v162.n128_i64[1],
          *(uint64_t *)v163,
          *(uint64_t *)&v163[8],
          *(uint64_t *)&v163[16],
          *(uint64_t *)&v163[24],
          *(uint64_t *)&v163[32],
          *(uint64_t *)&v163[40],
          *(uint64_t *)&v163[48],
          *(uint64_t *)&v163[56],
          v164,
          v168,
          v172,
          v176,
          v180,
          v184,
          v188,
          v192,
          v196,
          v200,
          v204,
          v6,
          v5,
          v4,
          v3,
          v10,
          v11,
          v2,
          v215,
          v9,
          v8,
          v7,
          v222,
          v223,
          v224,
          v225,
          v226,
          v227);
  memcpy(v22, v23, 0xD0uLL);
  outlined init with take of GenericEventEntity?((uint64_t)v292, (uint64_t)__dst, &demangling cache variable for type metadata for FlightReservationEntity?);
  outlined retain of FlightReservationEntity((uint64_t)__dst);
  BOOL v24 = static FlightReservationEntity.== infix(_:_:)(__src);
  outlined release of FlightReservationEntity?(v293);
  memcpy(v233, __src, sizeof(v233));
  outlined release of FlightReservationEntity((uint64_t)v233);
  outlined release of FlightReservationEntity?(v292);
  if (!v24) {
    goto LABEL_53;
  }
LABEL_12:
  swift_retain();
  OUTLINED_FUNCTION_153_1();
  swift_retain();
  OUTLINED_FUNCTION_155_1();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v213, v212);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v213, v212);
  outlined init with take of GenericEventEntity?((uint64_t)v279, (uint64_t)v241, &demangling cache variable for type metadata for GenericEventEntity?);
  OUTLINED_FUNCTION_187_0();
  OUTLINED_FUNCTION_229();
  swift_retain();
  OUTLINED_FUNCTION_228();
  OUTLINED_FUNCTION_190_0();
  OUTLINED_FUNCTION_180_1();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v229, v228);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v229, v228);
  outlined init with take of GenericEventEntity?((uint64_t)&v271, (uint64_t)v242, &demangling cache variable for type metadata for GenericEventEntity?);
  outlined init with take of GenericEventEntity?((uint64_t)v241, (uint64_t)v243, &demangling cache variable for type metadata for GenericEventEntity?);
  OUTLINED_FUNCTION_62_4(v243);
  if (v13)
  {
    outlined init with take of GenericEventEntity?((uint64_t)v242, (uint64_t)&v244, &demangling cache variable for type metadata for GenericEventEntity?);
    OUTLINED_FUNCTION_62_4(&v244);
    if (v13) {
      goto LABEL_23;
    }
LABEL_20:
    char v26 = &demangling cache variable for type metadata for GenericEventEntity?;
    OUTLINED_FUNCTION_184_1((uint64_t)v241);
    uint64_t v27 = v242;
LABEL_21:
    outlined init with take of GenericEventEntity?((uint64_t)v27, (uint64_t)&v260, v26);
    outlined release of (GenericEventEntity?, GenericEventEntity?)();
    goto LABEL_53;
  }
  outlined init with take of GenericEventEntity?((uint64_t)v241, (uint64_t)__src, &demangling cache variable for type metadata for GenericEventEntity?);
  outlined init with take of GenericEventEntity?((uint64_t)v242, (uint64_t)&v244, &demangling cache variable for type metadata for GenericEventEntity?);
  OUTLINED_FUNCTION_62_4(&v244);
  if (v25)
  {
    memcpy(__dst, __src, 0x80uLL);
    outlined init with take of GenericEventEntity?((uint64_t)v241, (uint64_t)v233, &demangling cache variable for type metadata for GenericEventEntity?);
    outlined retain of TicketedShowEntity();
    outlined release of TicketedShowEntity();
    goto LABEL_20;
  }
  uint64_t v28 = outlined init with take of GenericEventEntity?((uint64_t)v242, (uint64_t)v231, &demangling cache variable for type metadata for GenericEventEntity?);
  long long v36 = OUTLINED_FUNCTION_232(v28, v29, v30, v31, v32, v33, v34, v35, v145, v146, v147, v148, v149, v150, v151, v152, v153, v154, v155,
          v156,
          v157,
          v158,
          v159,
          v160,
          v161,
          v162.n128_i64[0],
          v162.n128_i64[1],
          *(uint64_t *)v163,
          *(uint64_t *)&v163[8],
          *(uint64_t *)&v163[16],
          *(uint64_t *)&v163[24],
          *(uint64_t *)&v163[32],
          *(uint64_t *)&v163[40],
          *(uint64_t *)&v163[48],
          *(uint64_t *)&v163[56],
          v164,
          v168,
          v172,
          v176,
          v180,
          v184,
          v188,
          v192,
          v196,
          v200,
          v204,
          v208,
          v209,
          v210,
          v211,
          v212,
          v213,
          v214,
          v215,
          v219,
          v220,
          v221,
          v222,
          v223,
          v224,
          v225,
          v226,
          v227);
  memcpy(v36, v37, 0x80uLL);
  outlined init with take of GenericEventEntity?((uint64_t)v241, (uint64_t)__dst, &demangling cache variable for type metadata for GenericEventEntity?);
  outlined retain of TicketedShowEntity();
  BOOL v38 = static GenericEventEntity.== infix(_:_:)();
  outlined release of TicketedShowEntity?(v242);
  memcpy(v233, __src, 0x80uLL);
  outlined release of TicketedShowEntity();
  outlined release of TicketedShowEntity?(v241);
  if (!v38) {
    goto LABEL_53;
  }
LABEL_23:
  OUTLINED_FUNCTION_177_1();
  OUTLINED_FUNCTION_153_1();
  OUTLINED_FUNCTION_176_1();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v213, v212);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_111_3();
  uint64_t v173 = v39;
  uint64_t v177 = v40;
  uint64_t v189 = v282;
  uint64_t v193 = v280;
  *(void *)&v163[56] = v284;
  *(void *)&v163[40] = v41;
  *(void *)&v163[48] = v285;
  uint64_t v165 = v286;
  uint64_t v169 = v283;
  uint64_t v201 = v281;
  uint64_t v205 = v287;
  uint64_t v216 = v288;
  uint64_t v197 = v290;
  unint64_t v181 = v291;
  uint64_t v185 = v289;
  OUTLINED_FUNCTION_187_0();
  swift_retain();
  OUTLINED_FUNCTION_225();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_180_1();
  swift_retain();
  OUTLINED_FUNCTION_224();
  outlined copy of Data?(v229, v228);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v229, v228);
  unint64_t v42 = v271.n128_u64[1];
  unint64_t v43 = v272.n128_u64[1];
  unint64_t v44 = v272.n128_u64[0];
  unint64_t v45 = v273.n128_u64[1];
  unint64_t v46 = v273.n128_u64[0];
  unint64_t v47 = v274.n128_u64[1];
  unint64_t v48 = v274.n128_u64[0];
  unint64_t v50 = v275.n128_u64[1];
  uint64_t v49 = v275.n128_u64[0];
  uint64_t v52 = v276.n128_i64[1];
  uint64_t v51 = v276.n128_u64[0];
  uint64_t v54 = v277.n128_i64[1];
  uint64_t v53 = v277.n128_u64[0];
  *(void *)&v163[32] = v278;
  if (!*(void *)&v163[40])
  {
    uint64_t v55 = v177;
    unint64_t v56 = v181;
    uint64_t v58 = v197;
    uint64_t v57 = v201;
    uint64_t v59 = v205;
    uint64_t v60 = *(void *)&v163[56];
    uint64_t v61 = v165;
    uint64_t v62 = *(void *)&v163[48];
    unint64_t v63 = v271.n128_u64[0];
    uint64_t v64 = v169;
    uint64_t v65 = v173;
    uint64_t v66 = v189;
    uint64_t v67 = v193;
    if (!v271.n128_u64[0]) {
      goto LABEL_28;
    }
LABEL_33:
    uint64_t v244 = *(void *)&v163[40];
    uint64_t v245 = v55;
    uint64_t v246 = v65;
    uint64_t v247 = v67;
    uint64_t v248 = v57;
    uint64_t v249 = v66;
    uint64_t v250 = v64;
    uint64_t v251 = v60;
    uint64_t v252 = v62;
    uint64_t v253 = v61;
    uint64_t v254 = v59;
    unint64_t v255 = v216;
    unint64_t v256 = v185;
    unint64_t v257 = v58;
    unint64_t v258 = v56;
    unint64_t v259 = v63;
    unint64_t v260 = v42;
    unint64_t v261 = v44;
    unint64_t v262 = v43;
    unint64_t v263 = v46;
    unint64_t v264 = v45;
    unint64_t v265 = v48;
    unint64_t v266 = v47;
    unint64_t v267 = v49;
    unint64_t v268 = v50;
    unint64_t v269 = v51;
    v270[0] = v52;
    v270[1] = v53;
    v270[2] = v54;
    v270[3] = *(void *)&v163[32];
    outlined release of (HotelReservationEntity?, HotelReservationEntity?)((uint64_t)&v244);
    goto LABEL_53;
  }
  uint64_t v244 = *(void *)&v163[40];
  uint64_t v245 = v177;
  uint64_t v246 = v173;
  uint64_t v247 = v193;
  uint64_t v248 = v201;
  uint64_t v249 = v189;
  uint64_t v250 = v169;
  uint64_t v251 = *(void *)&v163[56];
  uint64_t v252 = *(void *)&v163[48];
  uint64_t v253 = v165;
  uint64_t v254 = v205;
  unint64_t v255 = v216;
  unint64_t v256 = v185;
  unint64_t v257 = v197;
  unint64_t v258 = v181;
  *(__n128 *)&v163[16] = v274;
  *(__n128 *)uint64_t v163 = v273;
  __n128 v162 = v272;
  uint64_t v160 = v275.n128_u64[0];
  unint64_t v161 = v271.n128_u64[1];
  uint64_t v158 = v276.n128_u64[0];
  unint64_t v159 = v275.n128_u64[1];
  uint64_t v156 = v277.n128_u64[0];
  uint64_t v157 = v276.n128_i64[1];
  uint64_t v154 = v271.n128_u64[0];
  uint64_t v155 = v277.n128_i64[1];
  if (!v271.n128_u64[0])
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    outlined copy of Data?(v197, v181);
    swift_release();
    unint64_t v63 = 0;
    swift_release();
    uint64_t v59 = v205;
    swift_release();
    uint64_t v61 = v165;
    swift_release();
    uint64_t v62 = *(void *)&v163[48];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v57 = v201;
    swift_release();
    swift_release();
    uint64_t v65 = v173;
    swift_release();
    swift_release();
    swift_release();
    uint64_t v58 = v197;
    unint64_t v56 = v181;
    outlined consume of Data?(v197, v181);
    uint64_t v54 = v155;
    uint64_t v53 = v156;
    uint64_t v52 = v157;
    uint64_t v51 = v158;
    unint64_t v50 = v159;
    uint64_t v49 = v160;
    unint64_t v42 = v161;
    unint64_t v43 = v162.n128_u64[1];
    unint64_t v44 = v162.n128_u64[0];
    unint64_t v45 = *(void *)&v163[8];
    unint64_t v46 = *(void *)v163;
    unint64_t v48 = *(void *)&v163[16];
    unint64_t v47 = *(void *)&v163[24];
    uint64_t v55 = v177;
    uint64_t v66 = v189;
    uint64_t v67 = v193;
    uint64_t v64 = v169;
    uint64_t v60 = *(void *)&v163[56];
    goto LABEL_33;
  }
  __src[0] = v271;
  __src[1] = v272;
  __src[2] = v273;
  __src[3] = v274;
  __src[4] = v275;
  __src[5] = v276;
  __src[6] = v277;
  __src[7].n128_u64[0] = v278;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v197, v181);
  HIDWORD(v153) = static HotelReservationEntity.== infix(_:_:)((uint64_t)&v244, (uint64_t)__src);
  outlined consume of HotelReservationEntity?(v154, v161, v162.n128_i64[0], v162.n128_i64[1], *(uint64_t *)v163, *(uint64_t *)&v163[8], *(uint64_t *)&v163[16], *(uint64_t *)&v163[24], v160, v159, v158, v157, v156, v155, *(unint64_t *)&v163[32]);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v197, v181);
  outlined consume of HotelReservationEntity?(*(uint64_t *)&v163[40], v177, v173, v193, v201, v189, v169, *(uint64_t *)&v163[56], *(uint64_t *)&v163[48], v165, v205, v216, v185, v197, v181);
  if ((v153 & 0x100000000) == 0) {
    goto LABEL_53;
  }
LABEL_28:
  OUTLINED_FUNCTION_177_1();
  OUTLINED_FUNCTION_153_1();
  OUTLINED_FUNCTION_176_1();
  OUTLINED_FUNCTION_155_1();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v213, v212);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_111_3();
  uint64_t v186 = v68;
  uint64_t v190 = v69;
  uint64_t v178 = v281;
  uint64_t v182 = v280;
  uint64_t v194 = v283;
  uint64_t v170 = v70;
  uint64_t v174 = v284;
  uint64_t v166 = v285;
  uint64_t v198 = v286;
  uint64_t v202 = v282;
  uint64_t v206 = v287;
  unint64_t v217 = v288;
  OUTLINED_FUNCTION_187_0();
  swift_retain();
  OUTLINED_FUNCTION_225();
  OUTLINED_FUNCTION_228();
  swift_retain();
  OUTLINED_FUNCTION_180_1();
  swift_retain();
  OUTLINED_FUNCTION_224();
  outlined copy of Data?(v229, v228);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v229, v228);
  unint64_t v71 = v271.n128_u64[1];
  uint64_t v72 = v271.n128_u64[0];
  unint64_t v73 = v272.n128_u64[1];
  unint64_t v74 = v272.n128_u64[0];
  unint64_t v75 = v273.n128_u64[1];
  unint64_t v76 = v273.n128_u64[0];
  unint64_t v77 = v274.n128_u64[1];
  unint64_t v78 = v274.n128_u64[0];
  unint64_t v80 = v275.n128_u64[1];
  unint64_t v79 = v275.n128_u64[0];
  unint64_t v82 = v276.n128_u64[1];
  unint64_t v81 = v276.n128_u64[0];
  if (!v170)
  {
    unint64_t v85 = v217;
    uint64_t v87 = v202;
    uint64_t v86 = v206;
    uint64_t v88 = v194;
    uint64_t v89 = v198;
    uint64_t v90 = v166;
    uint64_t v91 = v174;
    uint64_t v92 = v178;
    uint64_t v93 = v182;
    uint64_t v83 = v186;
    uint64_t v84 = v190;
    if (!v271.n128_u64[0]) {
      goto LABEL_35;
    }
LABEL_40:
    uint64_t v244 = v170;
    uint64_t v245 = v84;
    uint64_t v246 = v83;
    uint64_t v247 = v93;
    uint64_t v248 = v92;
    uint64_t v249 = v87;
    uint64_t v250 = v88;
    uint64_t v251 = v91;
    uint64_t v252 = v90;
    uint64_t v253 = v89;
    uint64_t v254 = v86;
    unint64_t v255 = v85;
    unint64_t v256 = v72;
    unint64_t v257 = v71;
    unint64_t v258 = v74;
    unint64_t v259 = v73;
    unint64_t v260 = v76;
    unint64_t v261 = v75;
    unint64_t v262 = v78;
    unint64_t v263 = v77;
    unint64_t v264 = v79;
    unint64_t v265 = v80;
    unint64_t v266 = v81;
    unint64_t v267 = v82;
    outlined release of (RestaurantReservationEntity?, RestaurantReservationEntity?)((uint64_t)&v244);
    goto LABEL_53;
  }
  uint64_t v244 = v170;
  uint64_t v83 = v186;
  uint64_t v84 = v190;
  uint64_t v245 = v190;
  uint64_t v246 = v186;
  uint64_t v247 = v182;
  uint64_t v248 = v178;
  uint64_t v249 = v202;
  uint64_t v250 = v194;
  uint64_t v251 = v174;
  uint64_t v252 = v166;
  uint64_t v253 = v198;
  uint64_t v254 = v206;
  unint64_t v255 = v217;
  *(__n128 *)&v163[48] = v274;
  *(__n128 *)&v163[32] = v273;
  *(__n128 *)&v163[16] = v272;
  *(void *)uint64_t v163 = v275.n128_u64[0];
  *(void *)&v163[8] = v271.n128_u64[1];
  v162.n128_u64[0] = v276.n128_u64[0];
  v162.n128_u64[1] = v275.n128_u64[1];
  unint64_t v161 = v276.n128_u64[1];
  if (!v271.n128_u64[0])
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v93 = v182;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    outlined copy of Data?(v206, v217);
    uint64_t v89 = v198;
    swift_release();
    uint64_t v90 = v166;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v86 = v206;
    unint64_t v85 = v217;
    outlined consume of Data?(v206, v217);
    unint64_t v82 = v161;
    unint64_t v80 = v162.n128_u64[1];
    unint64_t v81 = v162.n128_u64[0];
    unint64_t v71 = *(void *)&v163[8];
    unint64_t v79 = *(void *)v163;
    unint64_t v74 = *(void *)&v163[16];
    unint64_t v73 = *(void *)&v163[24];
    unint64_t v76 = *(void *)&v163[32];
    unint64_t v75 = *(void *)&v163[40];
    unint64_t v78 = *(void *)&v163[48];
    unint64_t v77 = *(void *)&v163[56];
    uint64_t v92 = v178;
    uint64_t v87 = v202;
    uint64_t v88 = v194;
    uint64_t v91 = v174;
    goto LABEL_40;
  }
  __src[0] = v271;
  __src[1] = v272;
  __src[2] = v273;
  __src[3] = v274;
  __src[4] = v275;
  __src[5] = v276;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v206, v217);
  LODWORD(v160) = static RestaurantReservationEntity.== infix(_:_:)(&v244, __src);
  outlined consume of RestaurantReservationEntity?(v72, *(uint64_t *)&v163[8], *(uint64_t *)&v163[16], *(uint64_t *)&v163[24], *(uint64_t *)&v163[32], *(uint64_t *)&v163[40], *(uint64_t *)&v163[48], *(uint64_t *)&v163[56], *(uint64_t *)v163, v162.n128_i64[1], v162.n128_i64[0], v161);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v206, v217);
  outlined consume of RestaurantReservationEntity?(v170, v190, v186, v182, v178, v202, v194, v174, v166, v198, v206, v217);
  if ((v160 & 1) == 0) {
    goto LABEL_53;
  }
LABEL_35:
  OUTLINED_FUNCTION_177_1();
  OUTLINED_FUNCTION_153_1();
  OUTLINED_FUNCTION_176_1();
  OUTLINED_FUNCTION_155_1();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v213, v212);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_111_3();
  uint64_t v183 = v94;
  uint64_t v187 = v95;
  uint64_t v167 = v96;
  uint64_t v171 = v281;
  uint64_t v203 = v282;
  uint64_t v207 = v280;
  uint64_t v175 = v284;
  uint64_t v179 = v283;
  *(void *)&v163[56] = v285;
  uint64_t v191 = v287;
  uint64_t v195 = v286;
  uint64_t v218 = v288;
  unint64_t v199 = v289;
  swift_retain();
  OUTLINED_FUNCTION_229();
  OUTLINED_FUNCTION_225();
  OUTLINED_FUNCTION_228();
  OUTLINED_FUNCTION_190_0();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_224();
  outlined copy of Data?(v229, v228);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v229, v228);
  unint64_t v97 = v271.n128_u64[1];
  uint64_t v98 = v271.n128_u64[0];
  unint64_t v99 = v272.n128_u64[1];
  unint64_t v100 = v272.n128_u64[0];
  unint64_t v101 = v273.n128_u64[1];
  unint64_t v102 = v273.n128_u64[0];
  unint64_t v103 = v274.n128_u64[1];
  unint64_t v104 = v274.n128_u64[0];
  unint64_t v106 = v275.n128_u64[1];
  unint64_t v105 = v275.n128_u64[0];
  uint64_t v108 = v276.n128_i64[1];
  unint64_t v107 = v276.n128_u64[0];
  unint64_t v109 = v277.n128_u64[0];
  if (!v167)
  {
    uint64_t v110 = v195;
    unint64_t v111 = v199;
    uint64_t v112 = v218;
    uint64_t v114 = v187;
    uint64_t v113 = v191;
    uint64_t v115 = *(void *)&v163[56];
    uint64_t v116 = v175;
    uint64_t v117 = v179;
    uint64_t v119 = v203;
    uint64_t v118 = v207;
    uint64_t v120 = v171;
    uint64_t v121 = v183;
    if (!v271.n128_u64[0]) {
      goto LABEL_42;
    }
LABEL_48:
    uint64_t v244 = v167;
    uint64_t v245 = v114;
    uint64_t v246 = v121;
    uint64_t v247 = v118;
    uint64_t v248 = v120;
    uint64_t v249 = v119;
    uint64_t v250 = v117;
    uint64_t v251 = v116;
    uint64_t v252 = v115;
    uint64_t v253 = v110;
    uint64_t v254 = v113;
    unint64_t v255 = v112;
    unint64_t v256 = v111;
    unint64_t v257 = v98;
    unint64_t v258 = v97;
    unint64_t v259 = v100;
    unint64_t v260 = v99;
    unint64_t v261 = v102;
    unint64_t v262 = v101;
    unint64_t v263 = v104;
    unint64_t v264 = v103;
    unint64_t v265 = v105;
    unint64_t v266 = v106;
    unint64_t v267 = v107;
    unint64_t v268 = v108;
    unint64_t v269 = v109;
    outlined release of (TicketedTransportationEntity?, TicketedTransportationEntity?)((uint64_t)&v244);
    goto LABEL_53;
  }
  uint64_t v244 = v167;
  uint64_t v245 = v187;
  uint64_t v246 = v183;
  uint64_t v247 = v207;
  uint64_t v248 = v171;
  uint64_t v249 = v203;
  uint64_t v250 = v179;
  uint64_t v251 = v175;
  uint64_t v252 = *(void *)&v163[56];
  uint64_t v253 = v195;
  uint64_t v254 = v191;
  unint64_t v255 = v218;
  unint64_t v256 = v199;
  *(__n128 *)&v163[40] = v274;
  *(__n128 *)&v163[24] = v273;
  *(__n128 *)&v163[8] = v272;
  v162.n128_u64[1] = v275.n128_u64[0];
  *(void *)uint64_t v163 = v271.n128_u64[1];
  unint64_t v161 = v276.n128_u64[0];
  v162.n128_u64[0] = v275.n128_u64[1];
  unint64_t v159 = v277.n128_u64[0];
  uint64_t v160 = v276.n128_i64[1];
  if (!v271.n128_u64[0])
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v120 = v171;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    outlined copy of Data?(v218, v199);
    uint64_t v113 = v191;
    swift_release();
    uint64_t v110 = v195;
    swift_release();
    uint64_t v115 = *(void *)&v163[56];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v121 = v183;
    swift_release();
    uint64_t v114 = v187;
    swift_release();
    swift_release();
    uint64_t v112 = v218;
    unint64_t v111 = v199;
    outlined consume of Data?(v218, v199);
    uint64_t v119 = v203;
    uint64_t v118 = v207;
    unint64_t v109 = v159;
    uint64_t v108 = v160;
    unint64_t v107 = v161;
    unint64_t v105 = v162.n128_u64[1];
    unint64_t v106 = v162.n128_u64[0];
    unint64_t v97 = *(void *)v163;
    unint64_t v100 = *(void *)&v163[8];
    unint64_t v99 = *(void *)&v163[16];
    unint64_t v102 = *(void *)&v163[24];
    unint64_t v101 = *(void *)&v163[32];
    unint64_t v104 = *(void *)&v163[40];
    unint64_t v103 = *(void *)&v163[48];
    uint64_t v116 = v175;
    uint64_t v117 = v179;
    goto LABEL_48;
  }
  __src[0] = v271;
  __src[1] = v272;
  __src[2] = v273;
  __src[3] = v274;
  __src[4] = v275;
  __src[5] = v276;
  __src[6].n128_u64[0] = v277.n128_u64[0];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v218, v199);
  LODWORD(v158) = static TicketedTransportationEntity.== infix(_:_:)((uint64_t)&v244, (uint64_t)__src);
  outlined consume of TicketedTransportationEntity?(v98, *(uint64_t *)v163, *(uint64_t *)&v163[8], *(uint64_t *)&v163[16], *(uint64_t *)&v163[24], *(uint64_t *)&v163[32], *(uint64_t *)&v163[40], *(uint64_t *)&v163[48], v162.n128_i64[1], v162.n128_i64[0], v161, v160, v159);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v218, v199);
  outlined consume of TicketedTransportationEntity?(v167, v187, v183, v207, v171, v203, v179, v175, *(uint64_t *)&v163[56], v195, v191, v218, v199);
  if ((v158 & 1) == 0) {
    goto LABEL_53;
  }
LABEL_42:
  OUTLINED_FUNCTION_177_1();
  OUTLINED_FUNCTION_153_1();
  OUTLINED_FUNCTION_176_1();
  OUTLINED_FUNCTION_155_1();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v213, v212);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v213, v212);
  outlined init with take of GenericEventEntity?((uint64_t)v233, (uint64_t)__src, &demangling cache variable for type metadata for VehicleReservationEntity?);
  OUTLINED_FUNCTION_187_0();
  OUTLINED_FUNCTION_229();
  OUTLINED_FUNCTION_225();
  OUTLINED_FUNCTION_228();
  OUTLINED_FUNCTION_190_0();
  OUTLINED_FUNCTION_180_1();
  swift_retain();
  OUTLINED_FUNCTION_224();
  outlined copy of Data?(v229, v228);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v229, v228);
  outlined init with take of GenericEventEntity?((uint64_t)__dst, (uint64_t)&v271, &demangling cache variable for type metadata for VehicleReservationEntity?);
  outlined init with take of GenericEventEntity?((uint64_t)__src, (uint64_t)v279, &demangling cache variable for type metadata for VehicleReservationEntity?);
  OUTLINED_FUNCTION_62_4(v279);
  if (v13)
  {
    outlined init with take of GenericEventEntity?((uint64_t)&v271, (uint64_t)&v244, &demangling cache variable for type metadata for VehicleReservationEntity?);
    OUTLINED_FUNCTION_62_4(&v244);
    if (v13)
    {
LABEL_55:
      OUTLINED_FUNCTION_177_1();
      OUTLINED_FUNCTION_153_1();
      OUTLINED_FUNCTION_176_1();
      OUTLINED_FUNCTION_155_1();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      outlined copy of Data?(v213, v212);
      EntityProperty.wrappedValue.getter();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v134 = outlined consume of Data?(v213, v212);
      long long v141 = OUTLINED_FUNCTION_232(v134, v135, (uint64_t)&demangling cache variable for type metadata for TicketedShowEntity?, v136, v137, v138, v139, v140, v145, v146, v147, v148, v149, v150, v151, v152, v153, v154, v155,
               v156,
               v157,
               v158,
               v159,
               v160,
               v161,
               v162.n128_i64[0],
               v162.n128_i64[1],
               *(uint64_t *)v163,
               *(uint64_t *)&v163[8],
               *(uint64_t *)&v163[16],
               *(uint64_t *)&v163[24],
               *(uint64_t *)&v163[32],
               *(uint64_t *)&v163[40],
               *(uint64_t *)&v163[48],
               *(uint64_t *)&v163[56],
               v167,
               v171,
               v175,
               v179,
               v183,
               v187,
               v191,
               v195,
               v199,
               v203,
               v207,
               v208,
               v209,
               v210,
               v211,
               v212,
               v213,
               v214,
               v218,
               v219,
               v220,
               v221,
               v222,
               v223,
               v224,
               v225,
               v226,
               v227);
      outlined init with take of GenericEventEntity?((uint64_t)v141, v142, v143);
      swift_retain();
      OUTLINED_FUNCTION_229();
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_190_0();
      OUTLINED_FUNCTION_180_1();
      swift_retain();
      swift_retain();
      outlined copy of Data?(v229, v228);
      EntityProperty.wrappedValue.getter();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      outlined consume of Data?(v229, v228);
      char v26 = &demangling cache variable for type metadata for TicketedShowEntity?;
      outlined init with take of GenericEventEntity?((uint64_t)v237, (uint64_t)__dst, &demangling cache variable for type metadata for TicketedShowEntity?);
      outlined init with take of GenericEventEntity?((uint64_t)v231, (uint64_t)v233, &demangling cache variable for type metadata for TicketedShowEntity?);
      OUTLINED_FUNCTION_62_4(v233);
      if (v13)
      {
        outlined init with take of GenericEventEntity?((uint64_t)__dst, (uint64_t)&v244, &demangling cache variable for type metadata for TicketedShowEntity?);
        OUTLINED_FUNCTION_62_4(&v244);
        if (v13) {
          goto LABEL_53;
        }
      }
      else
      {
        outlined init with take of GenericEventEntity?((uint64_t)v231, (uint64_t)v236, &demangling cache variable for type metadata for TicketedShowEntity?);
        OUTLINED_FUNCTION_184_1((uint64_t)__dst);
        OUTLINED_FUNCTION_62_4(&v244);
        if (!v144)
        {
          outlined init with take of GenericEventEntity?((uint64_t)__dst, (uint64_t)v239, &demangling cache variable for type metadata for TicketedShowEntity?);
          memcpy(v238, v239, sizeof(v238));
          outlined init with take of GenericEventEntity?((uint64_t)v231, (uint64_t)v240, &demangling cache variable for type metadata for TicketedShowEntity?);
          outlined retain of TicketedShowEntity();
          static TicketedShowEntity.== infix(_:_:)();
          outlined release of TicketedShowEntity?(__dst);
          memcpy(v235, v236, 0x80uLL);
          outlined release of TicketedShowEntity();
          outlined release of TicketedShowEntity?(v231);
          goto LABEL_53;
        }
        memcpy(v240, v236, sizeof(v240));
        outlined init with take of GenericEventEntity?((uint64_t)v231, (uint64_t)v235, &demangling cache variable for type metadata for TicketedShowEntity?);
        outlined retain of TicketedShowEntity();
        outlined release of TicketedShowEntity();
      }
      OUTLINED_FUNCTION_184_1((uint64_t)v231);
      uint64_t v27 = __dst;
      goto LABEL_21;
    }
LABEL_52:
    OUTLINED_FUNCTION_184_1((uint64_t)__src);
    outlined init with take of GenericEventEntity?((uint64_t)&v271, (uint64_t)&v262, &demangling cache variable for type metadata for VehicleReservationEntity?);
    outlined release of (VehicleReservationEntity?, VehicleReservationEntity?)((uint64_t)&v244);
    goto LABEL_53;
  }
  outlined init with take of GenericEventEntity?((uint64_t)__src, (uint64_t)v231, &demangling cache variable for type metadata for VehicleReservationEntity?);
  outlined init with take of GenericEventEntity?((uint64_t)&v271, (uint64_t)&v244, &demangling cache variable for type metadata for VehicleReservationEntity?);
  OUTLINED_FUNCTION_62_4(&v244);
  if (v122)
  {
    memcpy(v237, v231, sizeof(v237));
    outlined init with take of GenericEventEntity?((uint64_t)__src, (uint64_t)v230, &demangling cache variable for type metadata for VehicleReservationEntity?);
    outlined retain of VehicleReservationEntity((uint64_t)v230);
    outlined release of VehicleReservationEntity((uint64_t)v237);
    goto LABEL_52;
  }
  outlined init with take of GenericEventEntity?((uint64_t)&v271, (uint64_t)v236, &demangling cache variable for type metadata for VehicleReservationEntity?);
  memcpy(v235, v236, sizeof(v235));
  outlined init with take of GenericEventEntity?((uint64_t)__src, (uint64_t)v237, &demangling cache variable for type metadata for VehicleReservationEntity?);
  outlined retain of VehicleReservationEntity((uint64_t)v237);
  BOOL v123 = static VehicleReservationEntity.== infix(_:_:)(v231);
  uint64_t v124 = outlined release of VehicleReservationEntity?(&v271);
  uint64_t v132 = OUTLINED_FUNCTION_232(v124, v125, v126, v127, v128, v129, v130, v131, v145, v146, v147, v148, v149, v150, v151, v152, v153, v154, v155,
           v156,
           v157,
           v158,
           v159,
           v160,
           v161,
           v162.n128_i64[0],
           v162.n128_i64[1],
           *(uint64_t *)v163,
           *(uint64_t *)&v163[8],
           *(uint64_t *)&v163[16],
           *(uint64_t *)&v163[24],
           *(uint64_t *)&v163[32],
           *(uint64_t *)&v163[40],
           *(uint64_t *)&v163[48],
           *(uint64_t *)&v163[56],
           v167,
           v171,
           v175,
           v179,
           v183,
           v187,
           v191,
           v195,
           v199,
           v203,
           v207,
           v208,
           v209,
           v210,
           v211,
           v212,
           v213,
           v214,
           v218,
           v219,
           v220,
           v221,
           v222,
           v223,
           v224,
           v225,
           v226,
           v227);
  memcpy(v132, v133, 0x90uLL);
  outlined release of VehicleReservationEntity((uint64_t)v230);
  outlined release of VehicleReservationEntity?(__src);
  if (v123) {
    goto LABEL_55;
  }
LABEL_53:
  OUTLINED_FUNCTION_119_0();
}

uint64_t (*protocol witness for CardDisplayable.cardData.modify in conformance EventEntity())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t protocol witness for static AppEntity.defaultQuery.getter in conformance EventEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type EventEntity and conformance EventEntity();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t protocol witness for Identifiable.id.getter in conformance EventEntity()
{
  lazy protocol witness table accessor for type EventEntity and conformance EventEntity();
  return UUID.init()();
}

void protocol witness for InstanceDisplayRepresentable.displayRepresentation.getter in conformance EventEntity()
{
  memcpy(v1, v0, sizeof(v1));
  specialized CardDisplayable.displayRepresentation.getter();
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance EventEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type EventEntity and conformance EventEntity();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance EventEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type EventEntity and conformance EventEntity();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t static EventSubType.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return static IdCardEntity.typeDisplayRepresentation.getter(&one-time initialization token for typeDisplayRepresentation, (uint64_t)static EventSubType.typeDisplayRepresentation, a1);
}

uint64_t static EventSubType.typeDisplayRepresentation.setter(uint64_t a1)
{
  return static EventEntity.typeDisplayRepresentation.setter(a1, &one-time initialization token for typeDisplayRepresentation, (uint64_t)static EventSubType.typeDisplayRepresentation);
}

uint64_t (*static EventSubType.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  OUTLINED_FUNCTION_11_11(v0, (uint64_t)static EventSubType.typeDisplayRepresentation);
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

OmniSearch::EventSubType_optional __swiftcall EventSubType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v4 = v1;
  v3._object = object;
  unint64_t v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of EventSubType.init(rawValue:), v3);
  result.value = swift_bridgeObjectRelease();
  char v7 = 7;
  if (v5 < 7) {
    char v7 = v5;
  }
  *uint64_t v4 = v7;
  return result;
}

void *static EventSubType.allCases.getter()
{
  return &outlined read-only object #0 of static EventSubType.allCases.getter;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance EventSubType(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance EventSubType()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance EventSubType(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance EventSubType()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

OmniSearch::EventSubType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance EventSubType(Swift::String *a1)
{
  return EventSubType.init(rawValue:)(*a1);
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance EventSubType@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = EventSubType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance EventSubType(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static EventSubType.allCases.getter;
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance EventSubType(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type EventSubType and conformance EventSubType();
  return MEMORY[0x270EE0C40](a1, v2);
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance EventSubType(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type EventSubType and conformance EventSubType();
  return MEMORY[0x270EE1C28](a1, v2);
}

uint64_t FlightReservationEntity.flightNumber.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*FlightReservationEntity.flightNumber.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_55_4((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$flightNumber.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.carrier.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*FlightReservationEntity.carrier.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_53_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$carrier.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.status.getter()
{
  OUTLINED_FUNCTION_171_1();
  return v1;
}

uint64_t key path setter for FlightReservationEntity.status : FlightReservationEntity()
{
  return FlightReservationEntity.status.setter();
}

uint64_t FlightReservationEntity.status.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*FlightReservationEntity.status.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_54_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$status.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.boardingDateTime.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t FlightReservationEntity.boardingDateTime.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*FlightReservationEntity.boardingDateTime.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_43_6((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$boardingDateTime.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.departureAirportCode.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*FlightReservationEntity.departureAirportCode.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_45_5((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$departureAirportCode.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.departureAirportName.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t FlightReservationEntity.departureAirportName.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*FlightReservationEntity.departureAirportName.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_40_7((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$departureAirportName.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.departureTerminal.getter()
{
  OUTLINED_FUNCTION_216_0();
  return v1;
}

uint64_t FlightReservationEntity.departureTerminal.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*FlightReservationEntity.departureTerminal.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_41_7((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$departureTerminal.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.departureGate.getter()
{
  OUTLINED_FUNCTION_172_1();
  return v1;
}

uint64_t FlightReservationEntity.departureGate.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*FlightReservationEntity.departureGate.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_44_8((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$departureGate.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.departureDateTime.setter()
{
  OUTLINED_FUNCTION_191_0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v0);
  OUTLINED_FUNCTION_59_0();
  uint64_t v1 = OUTLINED_FUNCTION_36_7();
  v2(v1);
  EntityProperty.wrappedValue.setter();
  uint64_t v3 = OUTLINED_FUNCTION_54_5();
  return v4(v3);
}

uint64_t (*FlightReservationEntity.departureDateTime.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_52_4((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$departureDateTime.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.arrivalAirportCode.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*FlightReservationEntity.arrivalAirportCode.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_53_5((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$arrivalAirportCode.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.arrivalAirportName.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t FlightReservationEntity.arrivalAirportName.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*FlightReservationEntity.arrivalAirportName.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_68_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$arrivalAirportName.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.arrivalTerminal.getter()
{
  OUTLINED_FUNCTION_254();
  return v1;
}

uint64_t FlightReservationEntity.arrivalTerminal.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*FlightReservationEntity.arrivalTerminal.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_84_2((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$arrivalTerminal.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.arrivalGate.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t FlightReservationEntity.arrivalGate.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*FlightReservationEntity.arrivalGate.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_85_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$arrivalGate.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.arrivalDateTime.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t FlightReservationEntity.arrivalDateTime.setter()
{
  OUTLINED_FUNCTION_191_0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v0);
  OUTLINED_FUNCTION_145_0();
  uint64_t v1 = OUTLINED_FUNCTION_36_7();
  v2(v1);
  EntityProperty.wrappedValue.setter();
  uint64_t v3 = OUTLINED_FUNCTION_54_5();
  return v4(v3);
}

uint64_t (*FlightReservationEntity.arrivalDateTime.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_113_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$arrivalDateTime.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.duration.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t key path setter for FlightReservationEntity.departureDateTime : FlightReservationEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  type metadata accessor for DateComponents();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_59_0();
  uint64_t v8 = OUTLINED_FUNCTION_161_1();
  v9(v8);
  return a5(v5);
}

uint64_t FlightReservationEntity.duration.setter()
{
  OUTLINED_FUNCTION_191_0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v0);
  OUTLINED_FUNCTION_59_0();
  uint64_t v1 = OUTLINED_FUNCTION_36_7();
  v2(v1);
  EntityProperty.wrappedValue.setter();
  uint64_t v3 = OUTLINED_FUNCTION_54_5();
  return v4(v3);
}

uint64_t (*FlightReservationEntity.duration.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *uint64_t v0 = v1;
  v1[4] = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$duration.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.passengerNames.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for FlightReservationEntity.passengerNames : FlightReservationEntity()
{
  return FlightReservationEntity.passengerNames.setter();
}

uint64_t FlightReservationEntity.passengerNames.setter()
{
  return OUTLINED_FUNCTION_94_3();
}

uint64_t (*FlightReservationEntity.passengerNames.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *uint64_t v0 = v1;
  v1[4] = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$passengerNames.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.seatNumbers.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for FlightReservationEntity.seatNumbers : FlightReservationEntity()
{
  return FlightReservationEntity.seatNumbers.setter();
}

uint64_t FlightReservationEntity.seatNumbers.setter()
{
  return OUTLINED_FUNCTION_94_3();
}

uint64_t (*FlightReservationEntity.seatNumbers.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$seatNumbers.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.bookingProvider.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t FlightReservationEntity.bookingProvider.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*FlightReservationEntity.bookingProvider.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$bookingProvider.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.designator.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t FlightReservationEntity.designator.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*FlightReservationEntity.designator.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$designator.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.confirmationNumber.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for FlightReservationEntity.flightNumber : FlightReservationEntity()
{
  OUTLINED_FUNCTION_120_2();
  uint64_t v1 = OUTLINED_FUNCTION_110_2();
  return v0(v1);
}

uint64_t FlightReservationEntity.confirmationNumber.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*FlightReservationEntity.confirmationNumber.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$confirmationNumber.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.checkInUrl.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t key path setter for FlightReservationEntity.boardingDateTime : FlightReservationEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = OUTLINED_FUNCTION_52_2(a1, a2, a3, a4, a5);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_31_7(v9, v11);
  return v5(v6);
}

uint64_t FlightReservationEntity.checkInUrl.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*FlightReservationEntity.checkInUrl.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$checkInUrl.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.totalDuration.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t FlightReservationEntity.totalDuration.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*FlightReservationEntity.totalDuration.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$totalDuration.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.totalCost.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t FlightReservationEntity.totalCost.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentCurrencyAmount?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*FlightReservationEntity.totalCost.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$totalCost.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t FlightReservationEntity.encodedSearchableItem.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t FlightReservationEntity.encodedSearchableItem.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*FlightReservationEntity.encodedSearchableItem.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t FlightReservationEntity.$encodedSearchableItem.getter()
{
  return EntityProperty.projectedValue.getter();
}

void FlightReservationEntity.init()()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v83 = v0;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  uint64_t v2 = OUTLINED_FUNCTION_81(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_184_0();
  OUTLINED_FUNCTION_194_0(v3);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Calendar?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_184_0();
  uint64_t v81 = v6;
  uint64_t v85 = OUTLINED_FUNCTION_199_0();
  OUTLINED_FUNCTION_1();
  uint64_t v105 = v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v88 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_27_10();
  uint64_t v82 = v11;
  uint64_t v12 = OUTLINED_FUNCTION_30_11();
  uint64_t v13 = OUTLINED_FUNCTION_81(v12);
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_15();
  uint64_t v16 = v15 - v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_98_2();
  OUTLINED_FUNCTION_241();
  uint64_t v95 = v17;
  swift_retain();
  OUTLINED_FUNCTION_164_1();
  uint64_t v103 = MEMORY[0x25A2C4900](v16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_123_1();
  uint64_t v93 = MEMORY[0x25A2C4900](v16);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  swift_retain();
  OUTLINED_FUNCTION_211_0();
  uint64_t v102 = MEMORY[0x25A2C48D0](v16);
  swift_retain();
  OUTLINED_FUNCTION_78_3();
  OUTLINED_FUNCTION_241();
  uint64_t v101 = v18;
  swift_retain();
  OUTLINED_FUNCTION_78_3();
  uint64_t v100 = MEMORY[0x25A2C4900](v16);
  swift_retain();
  OUTLINED_FUNCTION_211_0();
  uint64_t v99 = MEMORY[0x25A2C4900](v16);
  swift_retain();
  OUTLINED_FUNCTION_96_1();
  uint64_t v98 = MEMORY[0x25A2C4900](v16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents>);
  swift_retain();
  OUTLINED_FUNCTION_78_3();
  uint64_t v104 = MEMORY[0x25A2C48D0](v16);
  swift_retain();
  OUTLINED_FUNCTION_212_0();
  OUTLINED_FUNCTION_241();
  uint64_t v97 = v19;
  swift_retain();
  OUTLINED_FUNCTION_212_0();
  uint64_t v92 = MEMORY[0x25A2C4900](v16);
  swift_retain();
  OUTLINED_FUNCTION_30_10();
  uint64_t v96 = MEMORY[0x25A2C4900](v16);
  swift_retain();
  OUTLINED_FUNCTION_112_3();
  uint64_t v91 = MEMORY[0x25A2C4900](v16);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v89 = MEMORY[0x25A2C48D0](v16);
  swift_retain();
  OUTLINED_FUNCTION_14_15();
  uint64_t v90 = MEMORY[0x25A2C48D0](v16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_52_3();
  uint64_t v94 = MEMORY[0x25A2C4900](v16);
  swift_retain();
  OUTLINED_FUNCTION_40_6();
  uint64_t v87 = MEMORY[0x25A2C4900](v16);
  swift_retain();
  OUTLINED_FUNCTION_30_10();
  OUTLINED_FUNCTION_241();
  uint64_t v21 = v20;
  uint64_t v73 = v20;
  swift_retain();
  OUTLINED_FUNCTION_143_1();
  uint64_t v22 = MEMORY[0x25A2C4900](v16);
  uint64_t v74 = v22;
  swift_retain();
  OUTLINED_FUNCTION_78_3();
  uint64_t v23 = MEMORY[0x25A2C4900](v16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  OUTLINED_FUNCTION_248();
  uint64_t v75 = v23;
  swift_retain();
  OUTLINED_FUNCTION_141_1();
  uint64_t v24 = MEMORY[0x25A2C48E0](v16);
  uint64_t v76 = v24;
  swift_retain();
  OUTLINED_FUNCTION_81_1();
  uint64_t v25 = MEMORY[0x25A2C48D0](v16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentCurrencyAmount?>);
  uint64_t v78 = v25;
  swift_retain();
  OUTLINED_FUNCTION_82_3();
  uint64_t v26 = MEMORY[0x25A2C48C0](v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  uint64_t v79 = v26;
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v77 = MEMORY[0x25A2C48A0](v16);
  v107[0] = v95;
  v107[1] = v103;
  v107[2] = v93;
  v107[3] = v102;
  v107[4] = v101;
  v107[5] = v100;
  v107[6] = v99;
  v107[7] = v98;
  v107[8] = v104;
  v107[9] = v97;
  v107[10] = v92;
  v107[11] = v96;
  v107[12] = v91;
  v107[13] = v89;
  v107[14] = v90;
  v107[15] = v94;
  v107[16] = v87;
  v107[17] = v21;
  v107[18] = v22;
  v107[19] = v23;
  v107[20] = v24;
  v107[21] = v25;
  v107[22] = v26;
  v107[23] = v77;
  long long v80 = xmmword_258665BD0;
  long long v108 = xmmword_258665BD0;
  long long v106 = xmmword_258666A10;
  swift_retain();
  outlined retain of FlightReservationEntity((uint64_t)v107);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v107);
  *(void *)&long long v106 = 0;
  *((void *)&v106 + 1) = 0xE000000000000000;
  outlined retain of FlightReservationEntity((uint64_t)v107);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v107);
  uint64_t v27 = type metadata accessor for Calendar();
  uint64_t v28 = OUTLINED_FUNCTION_247();
  uint64_t v71 = v27;
  __swift_storeEnumTagSinglePayload(v28, v29, v30, v31);
  uint64_t v86 = type metadata accessor for TimeZone();
  OUTLINED_FUNCTION_32(v84, v32, v33, v86);
  outlined retain of FlightReservationEntity((uint64_t)v107);
  uint64_t v34 = v82;
  OUTLINED_FUNCTION_18_15();
  uint64_t v35 = v105;
  uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 16);
  uint64_t v36 = OUTLINED_FUNCTION_208();
  uint64_t v37 = v85;
  v38(v36);
  EntityProperty.wrappedValue.setter();
  uint64_t v39 = v35 + 8;
  uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  uint64_t v105 = v39;
  uint64_t v41 = v37;
  v40(v34, v37);
  outlined release of FlightReservationEntity((uint64_t)v107);
  uint64_t v42 = OUTLINED_FUNCTION_247();
  OUTLINED_FUNCTION_148_1(v42, v43, v44, v45);
  OUTLINED_FUNCTION_17_11();
  unint64_t v46 = v88;
  unint64_t v47 = v72;
  v72(v88, v34, v41);
  EntityProperty.wrappedValue.setter();
  uint64_t v48 = OUTLINED_FUNCTION_156_1();
  ((void (*)(uint64_t))v40)(v48);
  outlined release of FlightReservationEntity((uint64_t)v107);
  OUTLINED_FUNCTION_46_1();
  OUTLINED_FUNCTION_148_1(v49, v50, v51, v71);
  OUTLINED_FUNCTION_17_11();
  v47(v46, v34, v41);
  EntityProperty.wrappedValue.setter();
  uint64_t v52 = OUTLINED_FUNCTION_156_1();
  ((void (*)(uint64_t))v40)(v52);
  outlined release of FlightReservationEntity((uint64_t)v107);
  outlined retain of FlightReservationEntity((uint64_t)v107);
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v107);
  outlined retain of FlightReservationEntity((uint64_t)v107);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v53 = v89;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v54 = v87;
  swift_release();
  uint64_t v55 = v73;
  swift_release();
  uint64_t v56 = v74;
  swift_release();
  uint64_t v57 = v75;
  swift_release();
  uint64_t v58 = v76;
  swift_release();
  uint64_t v59 = v78;
  swift_release();
  uint64_t v60 = v79;
  swift_release();
  uint64_t v61 = v77;
  swift_release();
  EntityProperty.wrappedValue.setter();
  outlined release of FlightReservationEntity((uint64_t)v107);
  uint64_t v62 = v83;
  uint64_t v63 = v103;
  *uint64_t v83 = v95;
  v62[1] = v63;
  uint64_t v64 = v102;
  v62[2] = v93;
  v62[3] = v64;
  uint64_t v65 = v100;
  v62[4] = v101;
  v62[5] = v65;
  uint64_t v66 = v98;
  v62[6] = v99;
  v62[7] = v66;
  uint64_t v67 = v97;
  v62[8] = v104;
  v62[9] = v67;
  uint64_t v68 = v96;
  v62[10] = v92;
  v62[11] = v68;
  v62[12] = v91;
  v62[13] = v53;
  uint64_t v69 = v94;
  v62[14] = v90;
  v62[15] = v69;
  v62[16] = v54;
  v62[17] = v55;
  v62[18] = v56;
  v62[19] = v57;
  v62[20] = v58;
  v62[21] = v59;
  v62[22] = v60;
  v62[23] = v61;
  *((_OWORD *)v62 + 12) = v80;
  OUTLINED_FUNCTION_119_0();
}

uint64_t static FlightReservationEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return static IdCardEntity.typeDisplayRepresentation.getter(&one-time initialization token for typeDisplayRepresentation, (uint64_t)static FlightReservationEntity.typeDisplayRepresentation, a1);
}

uint64_t static FlightReservationEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  return static EventEntity.typeDisplayRepresentation.setter(a1, &one-time initialization token for typeDisplayRepresentation, (uint64_t)static FlightReservationEntity.typeDisplayRepresentation);
}

uint64_t (*static FlightReservationEntity.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  OUTLINED_FUNCTION_11_11(v0, (uint64_t)static FlightReservationEntity.typeDisplayRepresentation);
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

uint64_t FlightReservationEntity.description.getter()
{
  memcpy(__dst, v0, sizeof(__dst));
  outlined retain of FlightReservationEntity((uint64_t)__dst);
  EntityProperty.wrappedValue.getter();
  outlined release of FlightReservationEntity((uint64_t)__dst);
  uint64_t v1 = OUTLINED_FUNCTION_178_0(v7);
  if (v3) {
    unint64_t v4 = 0xE000000000000000;
  }
  else {
    unint64_t v4 = v2;
  }
  unint64_t v5 = v4;
  String.append(_:)(*(Swift::String *)&v1);
  swift_bridgeObjectRelease();
  return 0x20746867696C46;
}

uint64_t FlightReservationEntity.cardData.getter()
{
  return OUTLINED_FUNCTION_41_6();
}

uint64_t FlightReservationEntity.cardData.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = outlined consume of Data?(*(void *)(v1 + 192), *(void *)(v1 + 200));
  *(void *)(v1 + 192) = v2;
  *(void *)(v1 + 200) = v0;
  return result;
}

uint64_t (*FlightReservationEntity.cardData.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

BOOL static FlightReservationEntity.== infix(_:_:)(void *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_131_1(a1);
  uint64_t v11 = v1[24];
  unint64_t v12 = v1[25];
  OUTLINED_FUNCTION_152_1(v2, *(void *)(v2 + 40));
  uint64_t v10 = *(void *)(v3 + 192);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type String? and conformance <A> A?);
  if ((OUTLINED_FUNCTION_58_5() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_58_5() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  OUTLINED_FUNCTION_110_2();
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  lazy protocol witness table accessor for type DateComponents? and conformance <A> A?();
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_58_5() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_58_5() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_58_5() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_58_5() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents>);
  lazy protocol witness table accessor for type DateComponents and conformance DateComponents((uint64_t)&lazy protocol witness table cache variable for type DateComponents and conformance DateComponents);
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_58_5() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_58_5() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_58_5() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_58_5() & 1) == 0) {
    return 0;
  }
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  char v4 = lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_58_5() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_58_5() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_58_5() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  lazy protocol witness table accessor for type URL? and conformance <A> A?();
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentCurrencyAmount?>);
  lazy protocol witness table accessor for type IntentCurrencyAmount? and conformance <A> A?();
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  lazy protocol witness table accessor for type IntentFile? and conformance <A> A?();
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_49_5();
  if (!v6 & v5)
  {
    OUTLINED_FUNCTION_49_5();
    if (!v6 & v5) {
      return 1;
    }
    goto LABEL_32;
  }
  OUTLINED_FUNCTION_49_5();
  if (!v6 & v5)
  {
LABEL_32:
    uint64_t v7 = OUTLINED_FUNCTION_19_0();
    outlined copy of Data?(v7, v8);
    OUTLINED_FUNCTION_39_4(v10);
    return 0;
  }
  outlined copy of Data?(v11, v12);
  OUTLINED_FUNCTION_56_4(v10);
  OUTLINED_FUNCTION_58_3();
  return (v4 & 1) != 0;
}

uint64_t (*protocol witness for CardDisplayable.cardData.modify in conformance FlightReservationEntity())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t (*protocol witness for SpotlightItemProviding.encodedSearchableItem.modify in conformance FlightReservationEntity(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t protocol witness for static AppEntity.defaultQuery.getter in conformance FlightReservationEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type FlightReservationEntity and conformance FlightReservationEntity();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t protocol witness for Identifiable.id.getter in conformance FlightReservationEntity()
{
  lazy protocol witness table accessor for type FlightReservationEntity and conformance FlightReservationEntity();
  return UUID.init()();
}

void protocol witness for InstanceDisplayRepresentable.displayRepresentation.getter in conformance FlightReservationEntity()
{
  memcpy(v1, v0, sizeof(v1));
  specialized CardDisplayable.displayRepresentation.getter();
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance FlightReservationEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type FlightReservationEntity and conformance FlightReservationEntity();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance FlightReservationEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type FlightReservationEntity and conformance FlightReservationEntity();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t HotelReservationEntity.address.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*HotelReservationEntity.address.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_55_4((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t HotelReservationEntity.$address.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t HotelReservationEntity.bookingProvider.getter()
{
  OUTLINED_FUNCTION_150_1();
  return v1;
}

uint64_t HotelReservationEntity.bookingProvider.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*HotelReservationEntity.bookingProvider.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_53_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t HotelReservationEntity.$bookingProvider.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t HotelReservationEntity.businessName.getter()
{
  OUTLINED_FUNCTION_171_1();
  return v1;
}

uint64_t HotelReservationEntity.businessName.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*HotelReservationEntity.businessName.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_54_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t HotelReservationEntity.$businessName.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t HotelReservationEntity.checkinDateTime.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*HotelReservationEntity.checkinDateTime.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_43_6((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t HotelReservationEntity.$checkinDateTime.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t key path setter for HotelReservationEntity.checkinDateTime : HotelReservationEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = OUTLINED_FUNCTION_52_2(a1, a2, a3, a4, a5);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_31_7(v9, v11);
  return v5(v6);
}

uint64_t HotelReservationEntity.checkoutDateTime.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*HotelReservationEntity.checkoutDateTime.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_45_5((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t HotelReservationEntity.$checkoutDateTime.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t HotelReservationEntity.eventDuration.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t key path setter for HotelReservationEntity.eventDuration : HotelReservationEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DateComponents();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t))(v6 + 16))((char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  uint64_t v7 = *(void *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 16);
  v12[0] = *(_OWORD *)a2;
  v12[1] = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  v12[2] = *(_OWORD *)(a2 + 32);
  v12[3] = v9;
  long long v10 = *(_OWORD *)(a2 + 80);
  v12[4] = *(_OWORD *)(a2 + 64);
  v12[5] = v10;
  uint64_t v13 = v7;
  long long v14 = *(_OWORD *)(a2 + 104);
  return HotelReservationEntity.eventDuration.setter();
}

uint64_t HotelReservationEntity.eventDuration.setter()
{
  OUTLINED_FUNCTION_191_0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = OUTLINED_FUNCTION_36_7();
  v2(v1);
  EntityProperty.wrappedValue.setter();
  uint64_t v3 = OUTLINED_FUNCTION_54_5();
  return v4(v3);
}

uint64_t (*HotelReservationEntity.eventDuration.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_40_7((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t HotelReservationEntity.$eventDuration.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t HotelReservationEntity.guest.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*HotelReservationEntity.guest.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_41_7((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t HotelReservationEntity.$guest.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t HotelReservationEntity.numberOfRooms.getter()
{
  OUTLINED_FUNCTION_172_1();
  return v1;
}

uint64_t key path getter for HotelReservationEntity.numberOfRooms : HotelReservationEntity@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = HotelReservationEntity.numberOfRooms.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t key path setter for HotelReservationEntity.numberOfRooms : HotelReservationEntity()
{
  return HotelReservationEntity.numberOfRooms.setter();
}

uint64_t HotelReservationEntity.numberOfRooms.setter()
{
  return OUTLINED_FUNCTION_213_0();
}

uint64_t (*HotelReservationEntity.numberOfRooms.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_44_8((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t HotelReservationEntity.$numberOfRooms.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t HotelReservationEntity.phoneNumber.getter()
{
  OUTLINED_FUNCTION_197_0();
  return v1;
}

uint64_t HotelReservationEntity.phoneNumber.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*HotelReservationEntity.phoneNumber.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_52_4((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t HotelReservationEntity.$phoneNumber.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t HotelReservationEntity.roomNumbers.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for HotelReservationEntity.roomNumbers : HotelReservationEntity@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HotelReservationEntity.roomNumbers.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for HotelReservationEntity.roomNumbers : HotelReservationEntity()
{
  return HotelReservationEntity.roomNumbers.setter();
}

uint64_t HotelReservationEntity.roomNumbers.setter()
{
  return OUTLINED_FUNCTION_94_3();
}

uint64_t (*HotelReservationEntity.roomNumbers.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_53_5((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t HotelReservationEntity.$roomNumbers.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t HotelReservationEntity.url.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t HotelReservationEntity.url.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*HotelReservationEntity.url.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_68_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t HotelReservationEntity.$url.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t HotelReservationEntity.confirmationNumber.getter()
{
  OUTLINED_FUNCTION_254();
  return v1;
}

uint64_t key path getter for HotelReservationEntity.address : HotelReservationEntity@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  OUTLINED_FUNCTION_127_1(a1);
  uint64_t result = v3();
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for HotelReservationEntity.address : HotelReservationEntity(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  OUTLINED_FUNCTION_147_1(a1, a2);
  swift_bridgeObjectRetain();
  uint64_t v6 = OUTLINED_FUNCTION_110_2();
  return a5(v6);
}

uint64_t HotelReservationEntity.confirmationNumber.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*HotelReservationEntity.confirmationNumber.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_84_2((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t HotelReservationEntity.$confirmationNumber.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t HotelReservationEntity.encodedSearchableItem.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t key path getter for HotelReservationEntity.checkinDateTime : HotelReservationEntity(__n128 *a1)
{
  OUTLINED_FUNCTION_72_3(a1);
  return v1();
}

uint64_t HotelReservationEntity.encodedSearchableItem.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*HotelReservationEntity.encodedSearchableItem.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_85_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t HotelReservationEntity.$encodedSearchableItem.getter()
{
  return EntityProperty.projectedValue.getter();
}

void HotelReservationEntity.init()()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v48 = v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TimeZone?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_184_0();
  uint64_t v51 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Calendar?);
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_184_0();
  uint64_t v49 = v7;
  OUTLINED_FUNCTION_199_0();
  OUTLINED_FUNCTION_1();
  uint64_t v53 = v9;
  uint64_t v54 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v52 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_27_10();
  uint64_t v50 = v12;
  uint64_t v13 = OUTLINED_FUNCTION_30_11();
  uint64_t v14 = OUTLINED_FUNCTION_81(v13);
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_59_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_47_4();
  OUTLINED_FUNCTION_192_0();
  uint64_t v58 = v15;
  swift_retain();
  OUTLINED_FUNCTION_61_3();
  uint64_t v63 = MEMORY[0x25A2C4900](v0);
  swift_retain();
  OUTLINED_FUNCTION_10_18();
  uint64_t v64 = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  OUTLINED_FUNCTION_157_1();
  OUTLINED_FUNCTION_166_1();
  uint64_t v62 = MEMORY[0x25A2C48D0](v0);
  swift_retain();
  OUTLINED_FUNCTION_166_1();
  uint64_t v16 = MEMORY[0x25A2C48D0](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents>);
  swift_retain();
  OUTLINED_FUNCTION_57_3();
  OUTLINED_FUNCTION_81_1();
  uint64_t v17 = MEMORY[0x25A2C48D0](v0);
  swift_retain();
  OUTLINED_FUNCTION_128_1();
  OUTLINED_FUNCTION_192_0();
  uint64_t v57 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Int?>);
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_93_3();
  uint64_t v56 = MEMORY[0x25A2C4930](v0);
  swift_retain();
  OUTLINED_FUNCTION_15_13();
  OUTLINED_FUNCTION_192_0();
  uint64_t v61 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_40_6();
  uint64_t v60 = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  OUTLINED_FUNCTION_69_3();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v59 = MEMORY[0x25A2C48E0](v0);
  swift_retain();
  OUTLINED_FUNCTION_61_3();
  OUTLINED_FUNCTION_192_0();
  uint64_t v21 = v20;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  swift_retain();
  OUTLINED_FUNCTION_61_3();
  uint64_t v22 = MEMORY[0x25A2C48A0](v0);
  uint64_t v65 = MEMORY[0x263F8EE78];
  uint64_t v46 = v22;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_227();
  swift_retain();
  uint64_t v55 = v21;
  swift_retain();
  OUTLINED_FUNCTION_66_3();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_32_7();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v47 = v16;
  swift_retain();
  uint64_t v45 = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_227();
  swift_retain();
  uint64_t v23 = v55;
  swift_retain();
  uint64_t v24 = v46;
  swift_retain();
  outlined copy of Data?(0, 0xF000000000000000);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v25 = v45;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v26 = type metadata accessor for Calendar();
  OUTLINED_FUNCTION_32(v49, v27, v28, v26);
  uint64_t v29 = type metadata accessor for TimeZone();
  OUTLINED_FUNCTION_32(v51, v30, v31, v29);
  OUTLINED_FUNCTION_28_8();
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_208();
  OUTLINED_FUNCTION_64_0();
  v32();
  EntityProperty.wrappedValue.setter();
  OUTLINED_FUNCTION_111_0();
  v33();
  uint64_t v34 = v24;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v35 = v61;
  swift_release();
  uint64_t v36 = v56;
  swift_release();
  uint64_t v37 = v57;
  swift_release();
  swift_release();
  uint64_t v38 = v47;
  swift_release();
  uint64_t v39 = v62;
  swift_release();
  uint64_t v40 = v64;
  swift_release();
  OUTLINED_FUNCTION_189_0();
  uint64_t v41 = v58;
  swift_release();
  outlined consume of Data?(0, 0xF000000000000000);
  uint64_t v42 = v48;
  *uint64_t v48 = v41;
  v42[1] = v23;
  v42[2] = v40;
  v42[3] = v39;
  v42[4] = v38;
  v42[5] = v25;
  v42[6] = v37;
  v42[7] = v36;
  uint64_t v43 = v60;
  v42[8] = v35;
  v42[9] = v43;
  uint64_t v44 = v55;
  v42[10] = v59;
  v42[11] = v44;
  v42[12] = v34;
  *(_OWORD *)(v42 + 13) = xmmword_258665BD0;
  OUTLINED_FUNCTION_119_0();
}

uint64_t static HotelReservationEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return static IdCardEntity.typeDisplayRepresentation.getter(&one-time initialization token for typeDisplayRepresentation, (uint64_t)static HotelReservationEntity.typeDisplayRepresentation, a1);
}

uint64_t static HotelReservationEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  return static EventEntity.typeDisplayRepresentation.setter(a1, &one-time initialization token for typeDisplayRepresentation, (uint64_t)static HotelReservationEntity.typeDisplayRepresentation);
}

uint64_t (*static HotelReservationEntity.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  OUTLINED_FUNCTION_11_11(v0, (uint64_t)static HotelReservationEntity.typeDisplayRepresentation);
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

uint64_t HotelReservationEntity.description.getter()
{
  uint64_t v7 = *(void *)(v0 + 104);
  unint64_t v8 = *(void *)(v0 + 112);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v7, v8);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v7, v8);
  if (v11) {
    return v10;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v7, v8);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v7, v8);
  uint64_t v2 = OUTLINED_FUNCTION_178_0(v9);
  if (v4) {
    unint64_t v5 = 0xE000000000000000;
  }
  else {
    unint64_t v5 = v3;
  }
  unint64_t v6 = v5;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  return 0x206C65746F48;
}

uint64_t HotelReservationEntity.cardData.getter()
{
  return OUTLINED_FUNCTION_41_6();
}

uint64_t HotelReservationEntity.cardData.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = outlined consume of Data?(*(void *)(v1 + 104), *(void *)(v1 + 112));
  *(void *)(v1 + 104) = v2;
  *(void *)(v1 + 112) = v0;
  return result;
}

uint64_t (*HotelReservationEntity.cardData.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

BOOL static HotelReservationEntity.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = *(void *)(a1 + 104);
  unint64_t v22 = *(void *)(a1 + 112);
  uint64_t v18 = *(void *)(a2 + 104);
  unint64_t v21 = *(void *)(a2 + 112);
  unint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type String? and conformance <A> A?);
  if ((OUTLINED_FUNCTION_91_3() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_91_3() & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_193_0();
  if ((OUTLINED_FUNCTION_91_3() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  lazy protocol witness table accessor for type DateComponents? and conformance <A> A?();
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents>);
  lazy protocol witness table accessor for type DateComponents and conformance DateComponents((uint64_t)&lazy protocol witness table cache variable for type DateComponents and conformance DateComponents);
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_91_3() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Int?>);
  lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type Int? and conformance <A> A?);
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_91_3() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  lazy protocol witness table accessor for type URL? and conformance <A> A?();
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_91_3() & 1) == 0) {
    return 0;
  }
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  lazy protocol witness table accessor for type IntentFile? and conformance <A> A?();
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_49_5();
  if (!(!v13 & v12))
  {
    unint64_t v14 = v21;
    if (v21 >> 60 == 15) {
      goto LABEL_19;
    }
    uint64_t v15 = OUTLINED_FUNCTION_195_0(v4, v5, v6, v7, v8, v9, v10, v11, v17, v18, v20, v21, v22);
    OUTLINED_FUNCTION_56_4(v15);
    OUTLINED_FUNCTION_58_3();
    return (v2 & 1) != 0;
  }
  unint64_t v14 = v21;
  if (v21 >> 60 == 15) {
    return 1;
  }
LABEL_19:
  OUTLINED_FUNCTION_196_0(v4, v5, v6, v7, v8, v9, v10, v11, v17, v18, v20, v21, v22);
  outlined copy of Data?(v19, v14);
  outlined consume of Data?(v3, v2);
  outlined consume of Data?(v19, v14);
  return 0;
}

uint64_t (*protocol witness for CardDisplayable.cardData.modify in conformance HotelReservationEntity())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t (*protocol witness for SpotlightItemProviding.encodedSearchableItem.modify in conformance HotelReservationEntity(void *a1))()
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t protocol witness for static AppEntity.defaultQuery.getter in conformance HotelReservationEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type HotelReservationEntity and conformance HotelReservationEntity();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t protocol witness for Identifiable.id.getter in conformance HotelReservationEntity()
{
  lazy protocol witness table accessor for type HotelReservationEntity and conformance HotelReservationEntity();
  return UUID.init()();
}

void protocol witness for InstanceDisplayRepresentable.displayRepresentation.getter in conformance HotelReservationEntity()
{
  memcpy(__dst, v0, sizeof(__dst));
  specialized CardDisplayable.displayRepresentation.getter();
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance HotelReservationEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type HotelReservationEntity and conformance HotelReservationEntity();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance HotelReservationEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type HotelReservationEntity and conformance HotelReservationEntity();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t RestaurantReservationEntity.address.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*RestaurantReservationEntity.address.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_55_4((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t RestaurantReservationEntity.$address.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t RestaurantReservationEntity.bookingProvider.getter()
{
  OUTLINED_FUNCTION_150_1();
  return v1;
}

uint64_t RestaurantReservationEntity.bookingProvider.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*RestaurantReservationEntity.bookingProvider.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_53_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t RestaurantReservationEntity.$bookingProvider.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t RestaurantReservationEntity.businessName.getter()
{
  OUTLINED_FUNCTION_171_1();
  return v1;
}

uint64_t RestaurantReservationEntity.businessName.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*RestaurantReservationEntity.businessName.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_54_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t RestaurantReservationEntity.$businessName.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t RestaurantReservationEntity.guest.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*RestaurantReservationEntity.guest.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_43_6((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t RestaurantReservationEntity.$guest.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t RestaurantReservationEntity.mealType.getter()
{
  OUTLINED_FUNCTION_217();
  return v1;
}

uint64_t RestaurantReservationEntity.mealType.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*RestaurantReservationEntity.mealType.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_45_5((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t RestaurantReservationEntity.$mealType.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t RestaurantReservationEntity.partySize.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for RestaurantReservationEntity.partySize : RestaurantReservationEntity@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = RestaurantReservationEntity.partySize.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t key path setter for RestaurantReservationEntity.partySize : RestaurantReservationEntity()
{
  return RestaurantReservationEntity.partySize.setter();
}

uint64_t RestaurantReservationEntity.partySize.setter()
{
  return OUTLINED_FUNCTION_213_0();
}

uint64_t (*RestaurantReservationEntity.partySize.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_40_7((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t RestaurantReservationEntity.$partySize.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t RestaurantReservationEntity.phoneNumber.getter()
{
  OUTLINED_FUNCTION_216_0();
  return v1;
}

uint64_t RestaurantReservationEntity.phoneNumber.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*RestaurantReservationEntity.phoneNumber.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_41_7((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t RestaurantReservationEntity.$phoneNumber.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t RestaurantReservationEntity.startDateTime.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*RestaurantReservationEntity.startDateTime.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_44_8((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t RestaurantReservationEntity.$startDateTime.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t RestaurantReservationEntity.confirmationNumber.getter()
{
  OUTLINED_FUNCTION_197_0();
  return v1;
}

uint64_t key path getter for RestaurantReservationEntity.address : RestaurantReservationEntity@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  __n128 v3 = OUTLINED_FUNCTION_128_2(a1);
  uint64_t result = v4(v3);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t key path setter for RestaurantReservationEntity.address : RestaurantReservationEntity(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  OUTLINED_FUNCTION_147_1(a1, a2);
  swift_bridgeObjectRetain();
  uint64_t v6 = OUTLINED_FUNCTION_110_2();
  return a5(v6);
}

uint64_t RestaurantReservationEntity.confirmationNumber.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*RestaurantReservationEntity.confirmationNumber.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_52_4((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t RestaurantReservationEntity.$confirmationNumber.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t RestaurantReservationEntity.encodedSearchableItem.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t key path getter for RestaurantReservationEntity.startDateTime : RestaurantReservationEntity(__n128 *a1)
{
  __n128 v1 = OUTLINED_FUNCTION_128_2(a1);
  return v2(v1);
}

uint64_t key path setter for RestaurantReservationEntity.startDateTime : RestaurantReservationEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = OUTLINED_FUNCTION_52_2(a1, a2, a3, a4, a5);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_31_7(v9, v11);
  return v5(v6);
}

uint64_t RestaurantReservationEntity.encodedSearchableItem.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*RestaurantReservationEntity.encodedSearchableItem.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_53_5((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t RestaurantReservationEntity.$encodedSearchableItem.getter()
{
  return EntityProperty.projectedValue.getter();
}

void RestaurantReservationEntity.init()()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = OUTLINED_FUNCTION_202_0();
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_47_4();
  OUTLINED_FUNCTION_72_2();
  uint64_t v16 = v4;
  OUTLINED_FUNCTION_56_5();
  uint64_t v15 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_10_18();
  uint64_t v14 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_128_1();
  uint64_t v5 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_125_2();
  uint64_t v6 = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Int?>);
  OUTLINED_FUNCTION_124_2();
  uint64_t v7 = MEMORY[0x25A2C4930](v1);
  OUTLINED_FUNCTION_15_13();
  OUTLINED_FUNCTION_72_2();
  uint64_t v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  OUTLINED_FUNCTION_17_10();
  uint64_t v10 = MEMORY[0x25A2C48D0](v1);
  OUTLINED_FUNCTION_50_6();
  OUTLINED_FUNCTION_72_2();
  uint64_t v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_50_6();
  uint64_t v13 = MEMORY[0x25A2C48A0](v1);
  *(void *)uint64_t v0 = v16;
  *(void *)(v0 + 8) = v15;
  *(void *)(v0 + 16) = v14;
  *(void *)(v0 + 24) = v5;
  *(void *)(v0 + 32) = v6;
  *(void *)(v0 + 40) = v7;
  *(void *)(v0 + 48) = v9;
  *(void *)(v0 + 56) = v10;
  *(void *)(v0 + 64) = v12;
  *(void *)(v0 + 72) = v13;
  *(_OWORD *)(v0 + 80) = xmmword_258665BD0;
  OUTLINED_FUNCTION_119_0();
}

uint64_t static RestaurantReservationEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return static IdCardEntity.typeDisplayRepresentation.getter(&one-time initialization token for typeDisplayRepresentation, (uint64_t)static RestaurantReservationEntity.typeDisplayRepresentation, a1);
}

uint64_t static RestaurantReservationEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  return static EventEntity.typeDisplayRepresentation.setter(a1, &one-time initialization token for typeDisplayRepresentation, (uint64_t)static RestaurantReservationEntity.typeDisplayRepresentation);
}

uint64_t (*static RestaurantReservationEntity.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  OUTLINED_FUNCTION_11_11(v0, (uint64_t)static RestaurantReservationEntity.typeDisplayRepresentation);
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

void RestaurantReservationEntity.description.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_162_1();
  uint64_t v30 = *(void *)(v24 + 80);
  unint64_t v31 = *(void *)(v24 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v30, v31);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v30, v31);
  if (!a24)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    outlined copy of Data?(v30, v31);
    EntityProperty.wrappedValue.getter();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    outlined consume of Data?(v30, v31);
    uint64_t v25 = OUTLINED_FUNCTION_178_0(a21);
    if (v27) {
      unint64_t v28 = 0xE000000000000000;
    }
    else {
      unint64_t v28 = v26;
    }
    unint64_t v29 = v28;
    String.append(_:)(*(Swift::String *)&v25);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_159_1();
}

uint64_t RestaurantReservationEntity.cardData.getter()
{
  return OUTLINED_FUNCTION_41_6();
}

uint64_t RestaurantReservationEntity.cardData.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = outlined consume of Data?(*(void *)(v1 + 80), *(void *)(v1 + 88));
  *(void *)(v1 + 80) = v2;
  *(void *)(v1 + 88) = v0;
  return result;
}

uint64_t (*RestaurantReservationEntity.cardData.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

#error "257FF1650: call analysis failed (funcsize=138)"

uint64_t (*protocol witness for CardDisplayable.cardData.modify in conformance RestaurantReservationEntity())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t (*protocol witness for SpotlightItemProviding.encodedSearchableItem.modify in conformance RestaurantReservationEntity(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t protocol witness for static AppEntity.defaultQuery.getter in conformance RestaurantReservationEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type RestaurantReservationEntity and conformance RestaurantReservationEntity();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t protocol witness for Identifiable.id.getter in conformance RestaurantReservationEntity()
{
  lazy protocol witness table accessor for type RestaurantReservationEntity and conformance RestaurantReservationEntity();
  return UUID.init()();
}

void protocol witness for InstanceDisplayRepresentable.displayRepresentation.getter in conformance RestaurantReservationEntity()
{
  memcpy(v1, v0, sizeof(v1));
  specialized CardDisplayable.displayRepresentation.getter();
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance RestaurantReservationEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type RestaurantReservationEntity and conformance RestaurantReservationEntity();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance RestaurantReservationEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type RestaurantReservationEntity and conformance RestaurantReservationEntity();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t TicketedTransportationEntity.arrivalStationName.getter()
{
  OUTLINED_FUNCTION_174_1();
  return v1;
}

uint64_t TicketedTransportationEntity.arrivalStationName.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*TicketedTransportationEntity.arrivalStationName.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_55_4((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedTransportationEntity.$arrivalStationName.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t TicketedTransportationEntity.arrivalStationAddress.getter()
{
  OUTLINED_FUNCTION_150_1();
  return v1;
}

uint64_t TicketedTransportationEntity.arrivalStationAddress.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*TicketedTransportationEntity.arrivalStationAddress.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_53_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedTransportationEntity.$arrivalStationAddress.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t TicketedTransportationEntity.arrivalDateTime.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*TicketedTransportationEntity.arrivalDateTime.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_54_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedTransportationEntity.$arrivalDateTime.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t TicketedTransportationEntity.departureStationName.getter()
{
  OUTLINED_FUNCTION_218();
  return v1;
}

uint64_t TicketedTransportationEntity.departureStationName.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*TicketedTransportationEntity.departureStationName.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_43_6((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedTransportationEntity.$departureStationName.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t TicketedTransportationEntity.departureStationAddress.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*TicketedTransportationEntity.departureStationAddress.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_45_5((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedTransportationEntity.$departureStationAddress.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t key path setter for TicketedTransportationEntity.arrivalDateTime : TicketedTransportationEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = OUTLINED_FUNCTION_52_2(a1, a2, a3, a4, a5);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_31_7(v9, v11);
  return v5(v6);
}

uint64_t TicketedTransportationEntity.departureDateTime.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*TicketedTransportationEntity.departureDateTime.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_40_7((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedTransportationEntity.$departureDateTime.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t TicketedTransportationEntity.duration.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t TicketedTransportationEntity.duration.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*TicketedTransportationEntity.duration.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_41_7((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedTransportationEntity.$duration.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t TicketedTransportationEntity.eventSubType.getter()
{
  OUTLINED_FUNCTION_172_1();
  return v1;
}

uint64_t key path getter for TicketedTransportationEntity.arrivalStationName : TicketedTransportationEntity(uint64_t a1)
{
  __n128 v2 = OUTLINED_FUNCTION_64_3(a1);
  uint64_t result = v3(v2);
  *uint64_t v1 = result;
  v1[1] = v5;
  return result;
}

uint64_t key path setter for TicketedTransportationEntity.arrivalStationName : TicketedTransportationEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  OUTLINED_FUNCTION_81_2(a1, a2);
  swift_bridgeObjectRetain();
  uint64_t v6 = OUTLINED_FUNCTION_110_2();
  return a5(v6);
}

uint64_t TicketedTransportationEntity.eventSubType.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*TicketedTransportationEntity.eventSubType.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_44_8((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedTransportationEntity.$eventSubType.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t TicketedTransportationEntity.passengerNames.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t TicketedTransportationEntity.passengerNames.setter()
{
  return OUTLINED_FUNCTION_94_3();
}

uint64_t (*TicketedTransportationEntity.passengerNames.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_52_4((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedTransportationEntity.$passengerNames.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t TicketedTransportationEntity.seatNumbers.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for TicketedTransportationEntity.passengerNames : TicketedTransportationEntity(uint64_t a1)
{
  __n128 v2 = OUTLINED_FUNCTION_64_3(a1);
  uint64_t result = v3(v2);
  *uint64_t v1 = result;
  return result;
}

uint64_t key path setter for TicketedTransportationEntity.passengerNames : TicketedTransportationEntity(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  OUTLINED_FUNCTION_81_2(*a1, a2);
  uint64_t v6 = swift_bridgeObjectRetain();
  return a5(v6);
}

uint64_t TicketedTransportationEntity.seatNumbers.setter()
{
  return OUTLINED_FUNCTION_94_3();
}

uint64_t (*TicketedTransportationEntity.seatNumbers.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_53_5((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedTransportationEntity.$seatNumbers.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t TicketedTransportationEntity.encodedSearchableItem.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t key path getter for TicketedTransportationEntity.arrivalDateTime : TicketedTransportationEntity(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return a4(a1, a2, a3, a4, a5, a6, a7, a8, *a1, a1[1], a1[2], a1[3], a1[4]);
}

uint64_t TicketedTransportationEntity.encodedSearchableItem.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*TicketedTransportationEntity.encodedSearchableItem.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_68_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedTransportationEntity.$encodedSearchableItem.getter()
{
  return EntityProperty.projectedValue.getter();
}

void TicketedTransportationEntity.init()()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v17 = v1;
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_18_8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  LocalizedStringResource.init(stringLiteral:)();
  OUTLINED_FUNCTION_139_1();
  uint64_t v20 = v4;
  swift_retain();
  OUTLINED_FUNCTION_19_10();
  uint64_t v5 = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  swift_retain();
  OUTLINED_FUNCTION_99_2();
  OUTLINED_FUNCTION_140_1();
  uint64_t v18 = v6;
  swift_retain();
  OUTLINED_FUNCTION_19_10();
  OUTLINED_FUNCTION_139_1();
  uint64_t v8 = v7;
  swift_retain();
  OUTLINED_FUNCTION_19_10();
  uint64_t v9 = MEMORY[0x25A2C4900](v0);
  swift_retain();
  OUTLINED_FUNCTION_87_3();
  OUTLINED_FUNCTION_140_1();
  uint64_t v16 = v10;
  swift_retain();
  OUTLINED_FUNCTION_14_15();
  uint64_t v15 = MEMORY[0x25A2C48D0](v0);
  swift_retain();
  OUTLINED_FUNCTION_12_14();
  OUTLINED_FUNCTION_139_1();
  uint64_t v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  swift_retain();
  OUTLINED_FUNCTION_52_3();
  uint64_t v13 = MEMORY[0x25A2C4900](v0);
  swift_retain();
  OUTLINED_FUNCTION_40_6();
  uint64_t v14 = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_19_10();
  uint64_t v19 = MEMORY[0x25A2C48A0](v0);
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_66_3();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_146_1();
  swift_release();
  OUTLINED_FUNCTION_32_7();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_66_3();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_32_7();
  *(void *)uint64_t v17 = v20;
  *(void *)(v17 + 8) = v5;
  *(void *)(v17 + 16) = v18;
  *(void *)(v17 + 24) = v8;
  *(void *)(v17 + 32) = v9;
  *(void *)(v17 + 40) = v16;
  *(void *)(v17 + 48) = v15;
  *(void *)(v17 + 56) = v12;
  *(void *)(v17 + 64) = v13;
  *(void *)(v17 + 72) = v14;
  *(void *)(v17 + 80) = v19;
  *(_OWORD *)(v17 + 88) = xmmword_258665BD0;
  OUTLINED_FUNCTION_119_0();
}

uint64_t static TicketedTransportationEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return static IdCardEntity.typeDisplayRepresentation.getter(&one-time initialization token for typeDisplayRepresentation, (uint64_t)static TicketedTransportationEntity.typeDisplayRepresentation, a1);
}

uint64_t static TicketedTransportationEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  return static EventEntity.typeDisplayRepresentation.setter(a1, &one-time initialization token for typeDisplayRepresentation, (uint64_t)static TicketedTransportationEntity.typeDisplayRepresentation);
}

uint64_t (*static TicketedTransportationEntity.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  OUTLINED_FUNCTION_11_11(v0, (uint64_t)static TicketedTransportationEntity.typeDisplayRepresentation);
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

unint64_t TicketedTransportationEntity.description.getter()
{
  uint64_t v4 = *(void *)(v0 + 88);
  unint64_t v3 = *(void *)(v0 + 96);
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v4, v3);
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v4, v3);
  v1._countAndFlagsBits = MEMORY[0x25A2C7E60](v5, MEMORY[0x263F8D310]);
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD00000000000001CLL;
}

uint64_t TicketedTransportationEntity.cardData.getter()
{
  return OUTLINED_FUNCTION_41_6();
}

uint64_t TicketedTransportationEntity.cardData.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = outlined consume of Data?(*(void *)(v1 + 88), *(void *)(v1 + 96));
  *(void *)(v1 + 88) = v2;
  *(void *)(v1 + 96) = v0;
  return result;
}

uint64_t (*TicketedTransportationEntity.cardData.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

BOOL static TicketedTransportationEntity.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = *(void *)(a1 + 88);
  unint64_t v16 = *(void *)(a1 + 96);
  uint64_t v14 = *(void *)(a2 + 88);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type String? and conformance <A> A?);
  OUTLINED_FUNCTION_208();
  if ((OUTLINED_FUNCTION_173_1() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_173_1() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  lazy protocol witness table accessor for type DateComponents? and conformance <A> A?();
  OUTLINED_FUNCTION_193_0();
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_173_1() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_173_1() & 1) == 0) {
    return 0;
  }
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_173_1() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]>);
  char v2 = lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  lazy protocol witness table accessor for type IntentFile? and conformance <A> A?();
  if ((OUTLINED_FUNCTION_204_0() & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_253();
  if (!v4 & v3)
  {
    OUTLINED_FUNCTION_142_1();
    if (!v4 & v3) {
      return 1;
    }
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_142_1();
  if (!v4 & v3)
  {
LABEL_19:
    OUTLINED_FUNCTION_74_3(v5, v6, v7, v8, v9, v10, v11, v12, v14, v15);
    return 0;
  }
  outlined copy of Data?(v15, v16);
  OUTLINED_FUNCTION_56_4(v14);
  OUTLINED_FUNCTION_58_3();
  return (v2 & 1) != 0;
}

uint64_t (*protocol witness for CardDisplayable.cardData.modify in conformance TicketedTransportationEntity())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t (*protocol witness for SpotlightItemProviding.encodedSearchableItem.modify in conformance TicketedTransportationEntity(void *a1))()
{
  char v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t protocol witness for static AppEntity.defaultQuery.getter in conformance TicketedTransportationEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type TicketedTransportationEntity and conformance TicketedTransportationEntity();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t protocol witness for Identifiable.id.getter in conformance TicketedTransportationEntity()
{
  lazy protocol witness table accessor for type TicketedTransportationEntity and conformance TicketedTransportationEntity();
  return UUID.init()();
}

void protocol witness for InstanceDisplayRepresentable.displayRepresentation.getter in conformance TicketedTransportationEntity()
{
  memcpy(__dst, v0, sizeof(__dst));
  specialized CardDisplayable.displayRepresentation.getter();
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance TicketedTransportationEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type TicketedTransportationEntity and conformance TicketedTransportationEntity();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance TicketedTransportationEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type TicketedTransportationEntity and conformance TicketedTransportationEntity();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t VehicleReservationEntity.bookingProvider.getter()
{
  OUTLINED_FUNCTION_174_1();
  return v1;
}

uint64_t VehicleReservationEntity.bookingProvider.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*VehicleReservationEntity.bookingProvider.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_55_4((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t VehicleReservationEntity.$bookingProvider.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t VehicleReservationEntity.cost.getter()
{
  OUTLINED_FUNCTION_150_1();
  return v1;
}

uint64_t VehicleReservationEntity.cost.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*VehicleReservationEntity.cost.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_53_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t VehicleReservationEntity.$cost.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t VehicleReservationEntity.dropOffAddress.getter()
{
  OUTLINED_FUNCTION_171_1();
  return v1;
}

uint64_t VehicleReservationEntity.dropOffAddress.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*VehicleReservationEntity.dropOffAddress.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_54_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t VehicleReservationEntity.$dropOffAddress.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t VehicleReservationEntity.dropOffBusinessName.getter()
{
  OUTLINED_FUNCTION_218();
  return v1;
}

uint64_t VehicleReservationEntity.dropOffBusinessName.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*VehicleReservationEntity.dropOffBusinessName.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_43_6((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t VehicleReservationEntity.$dropOffBusinessName.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t VehicleReservationEntity.dropOffDateTime.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*VehicleReservationEntity.dropOffDateTime.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_45_5((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t VehicleReservationEntity.$dropOffDateTime.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t VehicleReservationEntity.dropOffPhoneNumber.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t VehicleReservationEntity.dropOffPhoneNumber.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*VehicleReservationEntity.dropOffPhoneNumber.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_40_7((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t VehicleReservationEntity.$dropOffPhoneNumber.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t VehicleReservationEntity.duration.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t key path setter for VehicleReservationEntity.dropOffDateTime : VehicleReservationEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = OUTLINED_FUNCTION_52_2(a1, a2, a3, a4, a5);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_31_7(v9, v11);
  return v5(v6);
}

uint64_t VehicleReservationEntity.duration.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*VehicleReservationEntity.duration.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_41_7((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t VehicleReservationEntity.$duration.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t VehicleReservationEntity.pickUpAddress.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*VehicleReservationEntity.pickUpAddress.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_44_8((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t VehicleReservationEntity.$pickUpAddress.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t VehicleReservationEntity.pickUpBusinessName.getter()
{
  OUTLINED_FUNCTION_197_0();
  return v1;
}

uint64_t VehicleReservationEntity.pickUpBusinessName.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*VehicleReservationEntity.pickUpBusinessName.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_52_4((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t VehicleReservationEntity.$pickUpBusinessName.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t VehicleReservationEntity.pickUpDateTime.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*VehicleReservationEntity.pickUpDateTime.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_53_5((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t VehicleReservationEntity.$pickUpDateTime.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t VehicleReservationEntity.pickUpPhoneNumber.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t VehicleReservationEntity.pickUpPhoneNumber.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*VehicleReservationEntity.pickUpPhoneNumber.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_68_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t VehicleReservationEntity.$pickUpPhoneNumber.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t VehicleReservationEntity.renterName.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*VehicleReservationEntity.renterName.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_84_2((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t VehicleReservationEntity.$renterName.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t VehicleReservationEntity.status.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t VehicleReservationEntity.status.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*VehicleReservationEntity.status.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_85_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t VehicleReservationEntity.$status.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t VehicleReservationEntity.vehicleClass.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t VehicleReservationEntity.vehicleClass.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*VehicleReservationEntity.vehicleClass.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_113_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t VehicleReservationEntity.$vehicleClass.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t VehicleReservationEntity.confirmationNumber.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for VehicleReservationEntity.bookingProvider : VehicleReservationEntity()
{
  OUTLINED_FUNCTION_120_2();
  uint64_t v1 = OUTLINED_FUNCTION_110_2();
  return v0(v1);
}

uint64_t VehicleReservationEntity.confirmationNumber.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*VehicleReservationEntity.confirmationNumber.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *uint64_t v0 = v1;
  v1[4] = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t VehicleReservationEntity.$confirmationNumber.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t VehicleReservationEntity.encodedSearchableItem.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t VehicleReservationEntity.encodedSearchableItem.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*VehicleReservationEntity.encodedSearchableItem.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *uint64_t v0 = v1;
  v1[4] = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t VehicleReservationEntity.$encodedSearchableItem.getter()
{
  return EntityProperty.projectedValue.getter();
}

void VehicleReservationEntity.init()()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = OUTLINED_FUNCTION_202_0();
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_30_10();
  OUTLINED_FUNCTION_72_2();
  OUTLINED_FUNCTION_57_2();
  MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_56_5();
  MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_50_6();
  MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  OUTLINED_FUNCTION_50_6();
  MEMORY[0x25A2C48D0](v1);
  OUTLINED_FUNCTION_210_0();
  OUTLINED_FUNCTION_72_2();
  OUTLINED_FUNCTION_14_15();
  uint64_t v15 = MEMORY[0x25A2C48D0](v1);
  OUTLINED_FUNCTION_104_3();
  OUTLINED_FUNCTION_72_2();
  uint64_t v14 = v4;
  OUTLINED_FUNCTION_210_0();
  uint64_t v13 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_50_6();
  uint64_t v5 = MEMORY[0x25A2C48D0](v1);
  OUTLINED_FUNCTION_50_6();
  OUTLINED_FUNCTION_72_2();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_114_3();
  uint64_t v8 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_123_1();
  uint64_t v9 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_100_3();
  uint64_t v10 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_50_6();
  uint64_t v11 = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_50_6();
  MEMORY[0x25A2C48A0](v1);
  OUTLINED_FUNCTION_86_3();
  *(void *)(v0 + 48) = v15;
  *(void *)(v0 + 56) = v14;
  *(void *)(v0 + 64) = v13;
  *(void *)(v0 + 72) = v5;
  *(void *)(v0 + 80) = v7;
  *(void *)(v0 + 88) = v8;
  *(void *)(v0 + 96) = v9;
  *(void *)(v0 + 104) = v10;
  *(void *)(v0 + 112) = v11;
  *(void *)(v0 + 120) = v12;
  *(_OWORD *)(v0 + 128) = xmmword_258665BD0;
  OUTLINED_FUNCTION_119_0();
}

uint64_t static VehicleReservationEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return static IdCardEntity.typeDisplayRepresentation.getter(&one-time initialization token for typeDisplayRepresentation, (uint64_t)static VehicleReservationEntity.typeDisplayRepresentation, a1);
}

uint64_t static VehicleReservationEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  return static EventEntity.typeDisplayRepresentation.setter(a1, &one-time initialization token for typeDisplayRepresentation, (uint64_t)static VehicleReservationEntity.typeDisplayRepresentation);
}

uint64_t (*static VehicleReservationEntity.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  OUTLINED_FUNCTION_11_11(v0, (uint64_t)static VehicleReservationEntity.typeDisplayRepresentation);
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

uint64_t VehicleReservationEntity.description.getter()
{
  memcpy(__dst, v0, sizeof(__dst));
  outlined retain of VehicleReservationEntity((uint64_t)__dst);
  EntityProperty.wrappedValue.getter();
  outlined release of VehicleReservationEntity((uint64_t)__dst);
  if (v9) {
    return v8;
  }
  unint64_t v2 = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_223();
  outlined retain of VehicleReservationEntity((uint64_t)__dst);
  EntityProperty.wrappedValue.getter();
  outlined release of VehicleReservationEntity((uint64_t)__dst);
  uint64_t v3 = OUTLINED_FUNCTION_178_0(v7);
  if (!v5) {
    unint64_t v2 = v4;
  }
  unint64_t v6 = v2;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t VehicleReservationEntity.cardData.getter()
{
  return OUTLINED_FUNCTION_41_6();
}

uint64_t VehicleReservationEntity.cardData.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = outlined consume of Data?(*(void *)(v1 + 128), *(void *)(v1 + 136));
  *(void *)(v1 + 128) = v2;
  *(void *)(v1 + 136) = v0;
  return result;
}

uint64_t (*VehicleReservationEntity.cardData.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

BOOL static VehicleReservationEntity.== infix(_:_:)(void *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_131_1(a1);
  uint64_t v20 = v1[16];
  unint64_t v22 = v1[17];
  OUTLINED_FUNCTION_152_1(v2, *(void *)(v2 + 40));
  uint64_t v18 = *(void *)(v3 + 128);
  uint64_t v21 = *(void *)(v3 + 136);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type String? and conformance <A> A?);
  if ((OUTLINED_FUNCTION_10_17() & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_193_0();
  if ((OUTLINED_FUNCTION_10_17() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_10_17() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_10_17() & 1) == 0) {
    return 0;
  }
  char v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  lazy protocol witness table accessor for type DateComponents? and conformance <A> A?();
  if ((OUTLINED_FUNCTION_22_12() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_10_17() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_22_12() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_10_17() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_10_17() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_22_12() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_10_17() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_10_17() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_10_17() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_10_17() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_10_17() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  lazy protocol witness table accessor for type IntentFile? and conformance <A> A?();
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_49_5();
  if (!v6 & v5)
  {
    OUTLINED_FUNCTION_49_5();
    if (!v6 & v5) {
      return 1;
    }
    goto LABEL_24;
  }
  OUTLINED_FUNCTION_49_5();
  if (!v6 & v5)
  {
LABEL_24:
    OUTLINED_FUNCTION_196_0(v7, v8, v9, v10, v11, v12, v13, v14, v17, v18, v20, v21, v22);
    OUTLINED_FUNCTION_39_4(v19);
    return 0;
  }
  uint64_t v15 = OUTLINED_FUNCTION_195_0(v7, v8, v9, v10, v11, v12, v13, v14, v17, v18, v20, v21, v22);
  OUTLINED_FUNCTION_56_4(v15);
  OUTLINED_FUNCTION_58_3();
  return (v4 & 1) != 0;
}

uint64_t (*protocol witness for CardDisplayable.cardData.modify in conformance VehicleReservationEntity())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t (*protocol witness for SpotlightItemProviding.encodedSearchableItem.modify in conformance VehicleReservationEntity(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t protocol witness for static AppEntity.defaultQuery.getter in conformance VehicleReservationEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type VehicleReservationEntity and conformance VehicleReservationEntity();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t protocol witness for Identifiable.id.getter in conformance VehicleReservationEntity()
{
  lazy protocol witness table accessor for type VehicleReservationEntity and conformance VehicleReservationEntity();
  return UUID.init()();
}

void protocol witness for InstanceDisplayRepresentable.displayRepresentation.getter in conformance VehicleReservationEntity()
{
  memcpy(v1, v0, sizeof(v1));
  specialized CardDisplayable.displayRepresentation.getter();
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance VehicleReservationEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type VehicleReservationEntity and conformance VehicleReservationEntity();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance VehicleReservationEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type VehicleReservationEntity and conformance VehicleReservationEntity();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t TicketedShowEntity.duration.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t TicketedShowEntity.duration.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*TicketedShowEntity.duration.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_55_4((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedShowEntity.customerNames.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for TicketedShowEntity.customerNames : TicketedShowEntity()
{
  return TicketedShowEntity.customerNames.setter();
}

uint64_t TicketedShowEntity.customerNames.setter()
{
  return OUTLINED_FUNCTION_94_3();
}

uint64_t (*TicketedShowEntity.customerNames.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_53_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t (*TicketedShowEntity.reservationId.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_54_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedShowEntity.locationName.getter()
{
  OUTLINED_FUNCTION_218();
  return v1;
}

uint64_t key path setter for TicketedShowEntity.reservationId : TicketedShowEntity()
{
  OUTLINED_FUNCTION_120_2();
  uint64_t v1 = OUTLINED_FUNCTION_110_2();
  return v0(v1);
}

uint64_t TicketedShowEntity.locationName.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*TicketedShowEntity.locationName.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_43_6((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedShowEntity.address.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*TicketedShowEntity.address.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_45_5((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedShowEntity.seatNumbers.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for TicketedShowEntity.seatNumbers : TicketedShowEntity()
{
  return TicketedShowEntity.seatNumbers.setter();
}

uint64_t TicketedShowEntity.seatNumbers.setter()
{
  return OUTLINED_FUNCTION_94_3();
}

uint64_t (*TicketedShowEntity.seatNumbers.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_40_7((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t (*TicketedShowEntity.provider.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_41_7((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t (*TicketedShowEntity.eventSubType.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_44_8((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t (*TicketedShowEntity.ticketType.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_52_4((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedShowEntity.ticketUrl.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t TicketedShowEntity.ticketUrl.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*TicketedShowEntity.ticketUrl.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_53_5((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedShowEntity.totalCost.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t TicketedShowEntity.totalCost.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*TicketedShowEntity.totalCost.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_68_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t TicketedShowEntity.startDateTime.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*TicketedShowEntity.startDateTime.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_84_2((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t (*TicketedShowEntity.endDateTime.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_85_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t (*TicketedShowEntity.encodedSearchableItem.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_113_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

void TicketedShowEntity.init()()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = OUTLINED_FUNCTION_202_0();
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  OUTLINED_FUNCTION_14_15();
  MEMORY[0x25A2C48D0](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]?>);
  OUTLINED_FUNCTION_108_2();
  MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_101_3();
  MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_29_9();
  MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_56_5();
  MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_40_6();
  MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_181_1();
  uint64_t v4 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_12_14();
  uint64_t v5 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_122_1();
  OUTLINED_FUNCTION_230();
  uint64_t v6 = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  OUTLINED_FUNCTION_122_1();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v7 = MEMORY[0x25A2C48E0](v1);
  OUTLINED_FUNCTION_82_3();
  uint64_t v8 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_144_1();
  uint64_t v9 = MEMORY[0x25A2C48D0](v1);
  OUTLINED_FUNCTION_179_0();
  uint64_t v10 = MEMORY[0x25A2C48D0](v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_170_1();
  OUTLINED_FUNCTION_50_6();
  MEMORY[0x25A2C48A0](v1);
  OUTLINED_FUNCTION_86_3();
  *(void *)(v0 + 48) = v4;
  *(void *)(v0 + 56) = v5;
  *(void *)(v0 + 64) = v6;
  *(void *)(v0 + 72) = v7;
  *(void *)(v0 + 80) = v8;
  *(void *)(v0 + 88) = v9;
  *(void *)(v0 + 96) = v10;
  *(void *)(v0 + 104) = v11;
  *(_OWORD *)(v0 + 112) = xmmword_258665BD0;
  OUTLINED_FUNCTION_119_0();
}

uint64_t static TicketedShowEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return static IdCardEntity.typeDisplayRepresentation.getter(&one-time initialization token for typeDisplayRepresentation, (uint64_t)static TicketedShowEntity.typeDisplayRepresentation, a1);
}

uint64_t static TicketedShowEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  return static EventEntity.typeDisplayRepresentation.setter(a1, &one-time initialization token for typeDisplayRepresentation, (uint64_t)static TicketedShowEntity.typeDisplayRepresentation);
}

uint64_t (*static TicketedShowEntity.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  OUTLINED_FUNCTION_11_11(v0, (uint64_t)static TicketedShowEntity.typeDisplayRepresentation);
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

uint64_t TicketedShowEntity.description.getter()
{
  memcpy(__dst, v0, sizeof(__dst));
  uint64_t v1 = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_223();
  outlined retain of TicketedShowEntity();
  EntityProperty.wrappedValue.getter();
  outlined release of TicketedShowEntity();
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance [A]);
    uint64_t v2 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v1 = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  v4._countAndFlagsBits = v2;
  v4._object = v1;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t (*TicketedShowEntity.cardData.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

BOOL static TicketedShowEntity.== infix(_:_:)()
{
  OUTLINED_FUNCTION_50_8();
  unint64_t v1 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 112);
  OUTLINED_FUNCTION_67_4();
  uint64_t v7 = *(void *)(v2 + 112);
  char v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  lazy protocol witness table accessor for type DateComponents? and conformance <A> A?();
  if ((OUTLINED_FUNCTION_91_3() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[String]?>);
  lazy protocol witness table accessor for type [String]? and conformance <A> A?();
  OUTLINED_FUNCTION_161_1();
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type String? and conformance <A> A?);
  if ((OUTLINED_FUNCTION_123_2() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_123_2() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_123_2() & 1) == 0) {
    return 0;
  }
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_123_2() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_123_2() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_123_2() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  lazy protocol witness table accessor for type URL? and conformance <A> A?();
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_123_2() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_91_3() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_91_3() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  lazy protocol witness table accessor for type IntentFile? and conformance <A> A?();
  if ((OUTLINED_FUNCTION_204_0() & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_49_5();
  if (!v5 & v4)
  {
    OUTLINED_FUNCTION_49_5();
    if (!v5 & v4) {
      return 1;
    }
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_49_5();
  if (!v5 & v4)
  {
LABEL_22:
    outlined copy of Data?(v8, v1);
    OUTLINED_FUNCTION_39_4(v7);
    return 0;
  }
  outlined copy of Data?(v8, v1);
  OUTLINED_FUNCTION_56_4(v7);
  OUTLINED_FUNCTION_58_3();
  return (v3 & 1) != 0;
}

uint64_t (*protocol witness for CardDisplayable.cardData.modify in conformance TicketedShowEntity())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t (*protocol witness for SpotlightItemProviding.encodedSearchableItem.modify in conformance TicketedShowEntity(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t protocol witness for static AppEntity.defaultQuery.getter in conformance TicketedShowEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type TicketedShowEntity and conformance TicketedShowEntity();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t protocol witness for Identifiable.id.getter in conformance TicketedShowEntity()
{
  lazy protocol witness table accessor for type TicketedShowEntity and conformance TicketedShowEntity();
  return UUID.init()();
}

void protocol witness for InstanceDisplayRepresentable.displayRepresentation.getter in conformance TicketedShowEntity()
{
  memcpy(v1, v0, sizeof(v1));
  specialized CardDisplayable.displayRepresentation.getter();
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance TicketedShowEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type TicketedShowEntity and conformance TicketedShowEntity();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance TicketedShowEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type TicketedShowEntity and conformance TicketedShowEntity();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t GenericEventEntity.attendees.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for GenericEventEntity.attendees : GenericEventEntity()
{
  return GenericEventEntity.attendees.setter();
}

uint64_t GenericEventEntity.attendees.setter()
{
  return OUTLINED_FUNCTION_94_3();
}

uint64_t (*GenericEventEntity.attendees.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_55_4((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t GenericEventEntity.$attendees.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t GenericEventEntity.businessName.getter()
{
  OUTLINED_FUNCTION_150_1();
  return v1;
}

uint64_t GenericEventEntity.businessName.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*GenericEventEntity.businessName.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_53_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t GenericEventEntity.$businessName.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t TicketedShowEntity.reservationId.getter()
{
  OUTLINED_FUNCTION_171_1();
  return v1;
}

uint64_t TicketedShowEntity.reservationId.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*GenericEventEntity.cost.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_54_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t GenericEventEntity.$cost.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t GenericEventEntity.duration.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t GenericEventEntity.duration.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*GenericEventEntity.duration.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_43_6((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t GenericEventEntity.$duration.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t GenericEventEntity.endDateTime.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t GenericEventEntity.endDateTime.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*GenericEventEntity.endDateTime.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_45_5((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t GenericEventEntity.$endDateTime.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t GenericEventEntity.eventLink.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t GenericEventEntity.eventLink.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*GenericEventEntity.eventLink.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_40_7((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t GenericEventEntity.$eventLink.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t TicketedShowEntity.provider.getter()
{
  OUTLINED_FUNCTION_216_0();
  return v1;
}

uint64_t TicketedShowEntity.provider.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*GenericEventEntity.eventName.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_41_7((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t GenericEventEntity.$eventName.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t TicketedShowEntity.eventSubType.getter()
{
  OUTLINED_FUNCTION_172_1();
  return v1;
}

uint64_t TicketedShowEntity.eventSubType.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*GenericEventEntity.eventType.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_44_8((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t GenericEventEntity.$eventType.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t TicketedShowEntity.ticketType.getter()
{
  OUTLINED_FUNCTION_197_0();
  return v1;
}

uint64_t TicketedShowEntity.ticketType.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*GenericEventEntity.eventSubType.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_52_4((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t GenericEventEntity.$eventSubType.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t GenericEventEntity.location.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t GenericEventEntity.location.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*GenericEventEntity.location.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_53_5((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t GenericEventEntity.$location.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t GenericEventEntity.organizer.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t GenericEventEntity.organizer.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentPerson?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*GenericEventEntity.organizer.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_68_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t GenericEventEntity.$organizer.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t GenericEventEntity.phoneNumber.getter()
{
  OUTLINED_FUNCTION_254();
  return v1;
}

uint64_t GenericEventEntity.phoneNumber.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*GenericEventEntity.phoneNumber.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_84_2((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t GenericEventEntity.$phoneNumber.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t GenericEventEntity.startDateTime.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t TicketedShowEntity.endDateTime.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*GenericEventEntity.startDateTime.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_85_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t GenericEventEntity.$startDateTime.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t GenericEventEntity.encodedSearchableItem.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t key path setter for TicketedShowEntity.duration : TicketedShowEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = OUTLINED_FUNCTION_52_2(a1, a2, a3, a4, a5);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_31_7(v9, v11);
  return v5(v6);
}

uint64_t TicketedShowEntity.encodedSearchableItem.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IntentFile?);
  uint64_t v1 = OUTLINED_FUNCTION_81(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_145_0();
  OUTLINED_FUNCTION_14_14();
  EntityProperty.wrappedValue.setter();
  return OUTLINED_FUNCTION_24_10();
}

uint64_t (*GenericEventEntity.encodedSearchableItem.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  *(void *)(v0 + 32) = OUTLINED_FUNCTION_113_3((uint64_t)v1);
  return MemoryCreationQUResult.version.modify;
}

uint64_t GenericEventEntity.$encodedSearchableItem.getter()
{
  return EntityProperty.projectedValue.getter();
}

void GenericEventEntity.init()()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v14 = v1;
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_59_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[IntentPerson]>);
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_64_2();
  uint64_t v13 = MEMORY[0x25A2C48B0](v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  swift_retain();
  OUTLINED_FUNCTION_10_18();
  uint64_t v4 = MEMORY[0x25A2C4900](v0);
  swift_retain();
  OUTLINED_FUNCTION_57_2();
  uint64_t v12 = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  swift_retain();
  OUTLINED_FUNCTION_14_15();
  uint64_t v11 = MEMORY[0x25A2C48D0](v0);
  swift_retain();
  OUTLINED_FUNCTION_23_8();
  uint64_t v5 = MEMORY[0x25A2C48D0](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  OUTLINED_FUNCTION_248();
  swift_retain();
  OUTLINED_FUNCTION_57_3();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v6 = MEMORY[0x25A2C48E0](v0);
  swift_retain();
  OUTLINED_FUNCTION_57_3();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v7 = MEMORY[0x25A2C4900](v0);
  swift_retain();
  OUTLINED_FUNCTION_57_3();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v10 = MEMORY[0x25A2C4900](v0);
  swift_retain();
  OUTLINED_FUNCTION_12_14();
  uint64_t v9 = MEMORY[0x25A2C4900](v0);
  swift_retain();
  OUTLINED_FUNCTION_182_1();
  uint64_t v15 = MEMORY[0x25A2C4900](v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentPerson?>);
  OUTLINED_FUNCTION_92_3();
  OUTLINED_FUNCTION_33_6();
  uint64_t v17 = MEMORY[0x25A2C48B0](v0);
  swift_retain();
  OUTLINED_FUNCTION_15_13();
  uint64_t v16 = MEMORY[0x25A2C4900](v0);
  swift_retain();
  OUTLINED_FUNCTION_17_10();
  uint64_t v8 = MEMORY[0x25A2C48D0](v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  OUTLINED_FUNCTION_157_1();
  LocalizedStringResource.init(stringLiteral:)();
  *(void *)&v18[0] = v13;
  *((void *)&v18[0] + 1) = v4;
  *(void *)&v18[1] = v12;
  *((void *)&v18[1] + 1) = v11;
  *(void *)&v18[2] = v5;
  *((void *)&v18[2] + 1) = v6;
  *(void *)&v18[3] = v7;
  *((void *)&v18[3] + 1) = v10;
  *(void *)&v18[4] = v9;
  *((void *)&v18[4] + 1) = v15;
  *(void *)&v18[5] = v17;
  *((void *)&v18[5] + 1) = v16;
  *(void *)&v18[6] = v8;
  *((void *)&v18[6] + 1) = MEMORY[0x25A2C48A0](v0);
  v18[7] = xmmword_258665BD0;
  outlined retain of TicketedShowEntity();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  EntityProperty.wrappedValue.setter();
  outlined release of TicketedShowEntity();
  memcpy(v14, v18, 0x80uLL);
  OUTLINED_FUNCTION_119_0();
}

uint64_t static GenericEventEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return static IdCardEntity.typeDisplayRepresentation.getter(&one-time initialization token for typeDisplayRepresentation, (uint64_t)static GenericEventEntity.typeDisplayRepresentation, a1);
}

uint64_t static GenericEventEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  return static EventEntity.typeDisplayRepresentation.setter(a1, &one-time initialization token for typeDisplayRepresentation, (uint64_t)static GenericEventEntity.typeDisplayRepresentation);
}

uint64_t static EventEntity.typeDisplayRepresentation.setter(uint64_t a1, void *a2, uint64_t a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for TypeDisplayRepresentation();
  __swift_project_value_buffer(v5, a3);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = OUTLINED_FUNCTION_19_0();
  v8(v7);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
}

uint64_t (*static GenericEventEntity.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  OUTLINED_FUNCTION_11_11(v0, (uint64_t)static GenericEventEntity.typeDisplayRepresentation);
  return AnswerSynthesisModelOnDevice.modelVersion.modify;
}

uint64_t GenericEventEntity.description.getter()
{
  memcpy(__dst, v0, sizeof(__dst));
  outlined retain of TicketedShowEntity();
  EntityProperty.wrappedValue.getter();
  outlined release of TicketedShowEntity();
  uint64_t v1 = OUTLINED_FUNCTION_178_0(v7);
  if (v3) {
    unint64_t v4 = 0xE000000000000000;
  }
  else {
    unint64_t v4 = v2;
  }
  unint64_t v5 = v4;
  String.append(_:)(*(Swift::String *)&v1);
  swift_bridgeObjectRelease();
  return 0x203A746E657645;
}

uint64_t GenericEventEntity.cardData.getter()
{
  return OUTLINED_FUNCTION_41_6();
}

uint64_t TicketedShowEntity.cardData.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = outlined consume of Data?(*(void *)(v1 + 112), *(void *)(v1 + 120));
  *(void *)(v1 + 112) = v2;
  *(void *)(v1 + 120) = v0;
  return result;
}

uint64_t (*GenericEventEntity.cardData.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

BOOL static GenericEventEntity.== infix(_:_:)()
{
  OUTLINED_FUNCTION_50_8();
  uint64_t v7 = *(void *)(v0 + 112);
  unint64_t v8 = *(void *)(v0 + 120);
  OUTLINED_FUNCTION_67_4();
  uint64_t v6 = *(void *)(v1 + 112);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<[IntentPerson]>);
  lazy protocol witness table accessor for type [IntentPerson] and conformance <A> [A]();
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  char v2 = lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type String? and conformance <A> A?);
  if ((OUTLINED_FUNCTION_135_1() & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_246();
  if ((OUTLINED_FUNCTION_135_1() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<DateComponents?>);
  lazy protocol witness table accessor for type DateComponents? and conformance <A> A?();
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<URL?>);
  lazy protocol witness table accessor for type URL? and conformance <A> A?();
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_135_1() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_135_1() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_135_1() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_135_1() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<IntentPerson?>);
  lazy protocol witness table accessor for type IntentPerson? and conformance <A> A?();
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((OUTLINED_FUNCTION_135_1() & 1) == 0) {
    return 0;
  }
  if ((static EntityProperty<>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<IntentFile?>);
  lazy protocol witness table accessor for type IntentFile? and conformance <A> A?();
  if ((OUTLINED_FUNCTION_204_0() & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_49_5();
  if (!v4 & v3)
  {
    OUTLINED_FUNCTION_49_5();
    if (!v4 & v3) {
      return 1;
    }
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_49_5();
  if (!v4 & v3)
  {
LABEL_22:
    outlined copy of Data?(v7, v8);
    OUTLINED_FUNCTION_39_4(v6);
    return 0;
  }
  outlined copy of Data?(v7, v8);
  OUTLINED_FUNCTION_56_4(v6);
  OUTLINED_FUNCTION_58_3();
  return (v2 & 1) != 0;
}

uint64_t protocol witness for static AppEntity.defaultQuery.getter in conformance GenericEventEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type GenericEventEntity and conformance GenericEventEntity();
  return MEMORY[0x270EE09F0](a1, v2);
}

uint64_t protocol witness for Identifiable.id.getter in conformance GenericEventEntity()
{
  lazy protocol witness table accessor for type GenericEventEntity and conformance GenericEventEntity();
  return UUID.init()();
}

void protocol witness for InstanceDisplayRepresentable.displayRepresentation.getter in conformance GenericEventEntity()
{
  memcpy(v1, v0, sizeof(v1));
  specialized CardDisplayable.displayRepresentation.getter();
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance GenericEventEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type GenericEventEntity and conformance GenericEventEntity();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance GenericEventEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type GenericEventEntity and conformance GenericEventEntity();
  return MEMORY[0x270EE1D98](a1, v2);
}

void outlined retain of TicketedShowEntity()
{
  OUTLINED_FUNCTION_71_4();
  OUTLINED_FUNCTION_160_1(v1);
  unint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 112);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v3, v2);
  OUTLINED_FUNCTION_70_4();
}

void outlined release of TicketedShowEntity()
{
  OUTLINED_FUNCTION_71_4();
  uint64_t v2 = *(void *)(v0 + 112);
  unint64_t v1 = *(void *)(v0 + 120);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of Data?(v2, v1);
  OUTLINED_FUNCTION_70_4();
}

uint64_t outlined release of (FlightReservationEntity?, FlightReservationEntity?)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 216);
  uint64_t v20 = *(void *)(a1 + 208);
  uint64_t v3 = *(void *)(a1 + 224);
  uint64_t v4 = *(void *)(a1 + 232);
  uint64_t v5 = *(void *)(a1 + 240);
  uint64_t v6 = *(void *)(a1 + 248);
  uint64_t v7 = *(void *)(a1 + 256);
  uint64_t v8 = *(void *)(a1 + 264);
  long long v18 = *(_OWORD *)(a1 + 288);
  long long v19 = *(_OWORD *)(a1 + 272);
  long long v16 = *(_OWORD *)(a1 + 320);
  long long v17 = *(_OWORD *)(a1 + 304);
  long long v15 = *(_OWORD *)(a1 + 336);
  long long v13 = *(_OWORD *)(a1 + 368);
  long long v14 = *(_OWORD *)(a1 + 352);
  long long v12 = *(_OWORD *)(a1 + 384);
  uint64_t v10 = *(void *)(a1 + 400);
  unint64_t v9 = *(void *)(a1 + 408);
  outlined consume of FlightReservationEntity?(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200));
  outlined consume of FlightReservationEntity?(v20, v2, v3, v4, v5, v6, v7, v8, v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v10,
    v9);
  return a1;
}

uint64_t outlined consume of FlightReservationEntity?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return outlined consume of Data?(a25, a26);
  }
  return result;
}

uint64_t outlined release of (HotelReservationEntity?, HotelReservationEntity?)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 120);
  uint64_t v3 = *(void *)(a1 + 128);
  uint64_t v4 = *(void *)(a1 + 136);
  uint64_t v5 = *(void *)(a1 + 144);
  uint64_t v6 = *(void *)(a1 + 152);
  uint64_t v7 = *(void *)(a1 + 160);
  uint64_t v8 = *(void *)(a1 + 168);
  uint64_t v9 = *(void *)(a1 + 176);
  long long v13 = *(_OWORD *)(a1 + 200);
  long long v14 = *(_OWORD *)(a1 + 184);
  long long v12 = *(_OWORD *)(a1 + 216);
  unint64_t v10 = *(void *)(a1 + 232);
  outlined consume of HotelReservationEntity?(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112));
  outlined consume of HotelReservationEntity?(v2, v3, v4, v5, v6, v7, v8, v9, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v10);
  return a1;
}

uint64_t outlined consume of HotelReservationEntity?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return outlined consume of Data?(a14, a15);
  }
  return result;
}

uint64_t outlined release of (RestaurantReservationEntity?, RestaurantReservationEntity?)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v4 = *(void *)(a1 + 120);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v6 = *(void *)(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 144);
  uint64_t v8 = *(void *)(a1 + 152);
  long long v12 = *(_OWORD *)(a1 + 160);
  uint64_t v10 = *(void *)(a1 + 176);
  unint64_t v9 = *(void *)(a1 + 184);
  outlined consume of RestaurantReservationEntity?(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88));
  outlined consume of RestaurantReservationEntity?(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v10, v9);
  return a1;
}

uint64_t outlined consume of RestaurantReservationEntity?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return outlined consume of Data?(a11, a12);
  }
  return result;
}

uint64_t outlined release of (TicketedTransportationEntity?, TicketedTransportationEntity?)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v4 = *(void *)(a1 + 120);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v6 = *(void *)(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 144);
  uint64_t v8 = *(void *)(a1 + 152);
  uint64_t v9 = *(void *)(a1 + 160);
  long long v12 = *(_OWORD *)(a1 + 184);
  long long v13 = *(_OWORD *)(a1 + 168);
  unint64_t v10 = *(void *)(a1 + 200);
  outlined consume of TicketedTransportationEntity?(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96));
  outlined consume of TicketedTransportationEntity?(v2, v3, v4, v5, v6, v7, v8, v9, v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v10);
  return a1;
}

uint64_t outlined consume of TicketedTransportationEntity?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return outlined consume of Data?(a12, a13);
  }
  return result;
}

uint64_t outlined release of (VehicleReservationEntity?, VehicleReservationEntity?)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 152);
  uint64_t v16 = *(void *)(a1 + 144);
  uint64_t v3 = *(void *)(a1 + 160);
  uint64_t v4 = *(void *)(a1 + 168);
  uint64_t v5 = *(void *)(a1 + 176);
  uint64_t v6 = *(void *)(a1 + 184);
  uint64_t v7 = *(void *)(a1 + 192);
  uint64_t v8 = *(void *)(a1 + 200);
  long long v15 = *(_OWORD *)(a1 + 208);
  long long v13 = *(_OWORD *)(a1 + 240);
  long long v14 = *(_OWORD *)(a1 + 224);
  long long v12 = *(_OWORD *)(a1 + 256);
  uint64_t v10 = *(void *)(a1 + 272);
  unint64_t v9 = *(void *)(a1 + 280);
  outlined consume of VehicleReservationEntity?(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136));
  outlined consume of VehicleReservationEntity?(v16, v2, v3, v4, v5, v6, v7, v8, v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v10, v9);
  return a1;
}

uint64_t outlined consume of VehicleReservationEntity?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return outlined consume of Data?(a17, a18);
  }
  return result;
}

void outlined release of (GenericEventEntity?, GenericEventEntity?)()
{
  OUTLINED_FUNCTION_162_1();
  OUTLINED_FUNCTION_95_2(v1);
  uint64_t v3 = *(void *)(v0 + 128);
  outlined consume of GenericEventEntity?(v2);
  outlined consume of GenericEventEntity?(v3);
  OUTLINED_FUNCTION_159_1();
}

uint64_t outlined consume of GenericEventEntity?(uint64_t result)
{
  if (result)
  {
    OUTLINED_FUNCTION_71_4();
    OUTLINED_FUNCTION_37_8();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_70_4();
    return outlined consume of Data?(v1, v2);
  }
  return result;
}

uint64_t outlined release of TicketedShowEntity?(__n128 *a1)
{
  OUTLINED_FUNCTION_95_2(a1);
  v10(v2, v3, v4, v5, v6, v7, v8, v9);
  return v1;
}

unint64_t lazy protocol witness table accessor for type DateComponents? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type DateComponents? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type DateComponents? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for DateComponents?);
    lazy protocol witness table accessor for type DateComponents and conformance DateComponents((uint64_t)&lazy protocol witness table cache variable for type DateComponents and conformance DateComponents);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DateComponents? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type URL? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type URL? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type URL? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for URL?);
    lazy protocol witness table accessor for type DateComponents and conformance DateComponents((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type URL? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type IntentCurrencyAmount? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type IntentCurrencyAmount? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type IntentCurrencyAmount? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for IntentCurrencyAmount?);
    lazy protocol witness table accessor for type DateComponents and conformance DateComponents((uint64_t)&lazy protocol witness table cache variable for type IntentCurrencyAmount and conformance IntentCurrencyAmount);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IntentCurrencyAmount? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type String? and conformance <A> A?(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_160_1(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

{
  unint64_t *v1;
  unint64_t result;

  unint64_t result = OUTLINED_FUNCTION_160_1(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for String?);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [String]? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type [String]? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type [String]? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [String]?);
    lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [String]? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [IntentPerson] and conformance <A> [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [IntentPerson] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [IntentPerson] and conformance <A> [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [IntentPerson]);
    lazy protocol witness table accessor for type DateComponents and conformance DateComponents((uint64_t)&lazy protocol witness table cache variable for type IntentPerson and conformance IntentPerson);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [IntentPerson] and conformance <A> [A]);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type IntentPerson? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type IntentPerson? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type IntentPerson? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for IntentPerson?);
    lazy protocol witness table accessor for type DateComponents and conformance DateComponents((uint64_t)&lazy protocol witness table cache variable for type IntentPerson and conformance IntentPerson);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IntentPerson? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type EventEntity and conformance EventEntity()
{
  unint64_t result = lazy protocol witness table cache variable for type EventEntity and conformance EventEntity;
  if (!lazy protocol witness table cache variable for type EventEntity and conformance EventEntity)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventEntity and conformance EventEntity);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventEntity and conformance EventEntity;
  if (!lazy protocol witness table cache variable for type EventEntity and conformance EventEntity)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventEntity and conformance EventEntity);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventEntity and conformance EventEntity;
  if (!lazy protocol witness table cache variable for type EventEntity and conformance EventEntity)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventEntity and conformance EventEntity);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventEntity and conformance EventEntity;
  if (!lazy protocol witness table cache variable for type EventEntity and conformance EventEntity)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventEntity and conformance EventEntity);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventEntity and conformance EventEntity;
  if (!lazy protocol witness table cache variable for type EventEntity and conformance EventEntity)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventEntity and conformance EventEntity);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventEntity and conformance EventEntity;
  if (!lazy protocol witness table cache variable for type EventEntity and conformance EventEntity)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventEntity and conformance EventEntity);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventEntity and conformance EventEntity;
  if (!lazy protocol witness table cache variable for type EventEntity and conformance EventEntity)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventEntity and conformance EventEntity);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventEntity and conformance EventEntity;
  if (!lazy protocol witness table cache variable for type EventEntity and conformance EventEntity)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventEntity and conformance EventEntity);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventEntity and conformance EventEntity;
  if (!lazy protocol witness table cache variable for type EventEntity and conformance EventEntity)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventEntity and conformance EventEntity);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EventEntity and conformance EventEntity;
  if (!lazy protocol witness table cache variable for type EventEntity and conformance EventEntity)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EventEntity and conformance EventEntity);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for EventEntity(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type EventEntity and conformance EventEntity();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in EventEntity()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type _TransientAppEntityQuery<EventEntity> and conformance _TransientAppEntityQuery<A>);
}

unint64_t associated type witness table accessor for Identifiable.ID : Hashable in EventEntity()
{
  return lazy protocol witness table accessor for type DateComponents and conformance DateComponents((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
}

unint64_t lazy protocol witness table accessor for type DateComponents and conformance DateComponents(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_160_1(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in EventEntity()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type EmptyResolverSpecification<EventEntity> and conformance EmptyResolverSpecification<A>);
}

unint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in EventSubType()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type [EventSubType] and conformance [A]);
}

uint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in EventSubType()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t instantiation function for generic protocol witness table for FlightReservationEntity(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type FlightReservationEntity and conformance FlightReservationEntity();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in FlightReservationEntity()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type _TransientAppEntityQuery<FlightReservationEntity> and conformance _TransientAppEntityQuery<A>);
}

unint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in FlightReservationEntity()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type EmptyResolverSpecification<FlightReservationEntity> and conformance EmptyResolverSpecification<A>);
}

unint64_t instantiation function for generic protocol witness table for HotelReservationEntity(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type HotelReservationEntity and conformance HotelReservationEntity();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in HotelReservationEntity()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type _TransientAppEntityQuery<HotelReservationEntity> and conformance _TransientAppEntityQuery<A>);
}

unint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in HotelReservationEntity()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type EmptyResolverSpecification<HotelReservationEntity> and conformance EmptyResolverSpecification<A>);
}

unint64_t instantiation function for generic protocol witness table for RestaurantReservationEntity(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type RestaurantReservationEntity and conformance RestaurantReservationEntity();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in RestaurantReservationEntity()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type _TransientAppEntityQuery<RestaurantReservationEntity> and conformance _TransientAppEntityQuery<A>);
}

unint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in RestaurantReservationEntity()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type EmptyResolverSpecification<RestaurantReservationEntity> and conformance EmptyResolverSpecification<A>);
}

unint64_t instantiation function for generic protocol witness table for TicketedTransportationEntity(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type TicketedTransportationEntity and conformance TicketedTransportationEntity();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in TicketedTransportationEntity()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type _TransientAppEntityQuery<TicketedTransportationEntity> and conformance _TransientAppEntityQuery<A>);
}

unint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in TicketedTransportationEntity()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type EmptyResolverSpecification<TicketedTransportationEntity> and conformance EmptyResolverSpecification<A>);
}

unint64_t instantiation function for generic protocol witness table for VehicleReservationEntity(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type VehicleReservationEntity and conformance VehicleReservationEntity();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in VehicleReservationEntity()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type _TransientAppEntityQuery<VehicleReservationEntity> and conformance _TransientAppEntityQuery<A>);
}

unint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in VehicleReservationEntity()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type EmptyResolverSpecification<VehicleReservationEntity> and conformance EmptyResolverSpecification<A>);
}

unint64_t instantiation function for generic protocol witness table for TicketedShowEntity(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type TicketedShowEntity and conformance TicketedShowEntity();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in TicketedShowEntity()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type _TransientAppEntityQuery<TicketedShowEntity> and conformance _TransientAppEntityQuery<A>);
}

unint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in TicketedShowEntity()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type EmptyResolverSpecification<TicketedShowEntity> and conformance EmptyResolverSpecification<A>);
}

unint64_t instantiation function for generic protocol witness table for GenericEventEntity(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type GenericEventEntity and conformance GenericEventEntity();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in GenericEventEntity()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type _TransientAppEntityQuery<GenericEventEntity> and conformance _TransientAppEntityQuery<A>);
}

unint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in GenericEventEntity()
{
  return _sSaySSGSayxGSKsWlTm_0((uint64_t)&lazy protocol witness table cache variable for type EmptyResolverSpecification<GenericEventEntity> and conformance EmptyResolverSpecification<A>);
}

unint64_t _sSaySSGSayxGSKsWlTm_0(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_160_1(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_257FF9F38@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return key path getter for EventEntity.genericEvent : EventEntity(a1, (void (*)(void *__return_ptr))EventEntity.genericEvent.getter, &demangling cache variable for type metadata for GenericEventEntity?, a2);
}

uint64_t sub_257FF9F6C(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EventEntity.genericEvent : EventEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for GenericEventEntity?, (uint64_t (*)(_OWORD *))EventEntity.genericEvent.setter);
}

uint64_t sub_257FF9FC0@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return key path getter for EventEntity.genericEvent : EventEntity(a1, (void (*)(void *__return_ptr))EventEntity.ticketedShow.getter, &demangling cache variable for type metadata for TicketedShowEntity?, a2);
}

uint64_t sub_257FF9FF4(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EventEntity.genericEvent : EventEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for TicketedShowEntity?, (uint64_t (*)(_OWORD *))EventEntity.ticketedShow.setter);
}

uint64_t sub_257FFA028()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = FlightReservationEntity.flightNumber.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFA050()
{
  return key path setter for FlightReservationEntity.flightNumber : FlightReservationEntity();
}

uint64_t sub_257FFA07C()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = FlightReservationEntity.carrier.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFA0A4()
{
  return key path setter for FlightReservationEntity.flightNumber : FlightReservationEntity();
}

uint64_t sub_257FFA0D0()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = FlightReservationEntity.status.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFA0FC()
{
  return FlightReservationEntity.boardingDateTime.getter();
}

uint64_t sub_257FFA120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for FlightReservationEntity.boardingDateTime : FlightReservationEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for DateComponents?);
}

uint64_t sub_257FFA154()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = FlightReservationEntity.departureAirportCode.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFA17C()
{
  return key path setter for FlightReservationEntity.flightNumber : FlightReservationEntity();
}

uint64_t sub_257FFA1A8()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = FlightReservationEntity.departureAirportName.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFA1D0()
{
  return key path setter for FlightReservationEntity.flightNumber : FlightReservationEntity();
}

uint64_t sub_257FFA1FC()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = FlightReservationEntity.departureTerminal.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFA224()
{
  return key path setter for FlightReservationEntity.flightNumber : FlightReservationEntity();
}

uint64_t sub_257FFA250()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = FlightReservationEntity.departureGate.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFA278()
{
  return key path setter for FlightReservationEntity.flightNumber : FlightReservationEntity();
}

uint64_t sub_257FFA2A4()
{
  return FlightReservationEntity.departureDateTime.getter();
}

uint64_t sub_257FFA2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for FlightReservationEntity.departureDateTime : FlightReservationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))FlightReservationEntity.departureDateTime.setter);
}

uint64_t sub_257FFA2F4()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = FlightReservationEntity.arrivalAirportCode.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFA31C()
{
  return key path setter for FlightReservationEntity.flightNumber : FlightReservationEntity();
}

uint64_t sub_257FFA348()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = FlightReservationEntity.arrivalAirportName.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFA370()
{
  return key path setter for FlightReservationEntity.flightNumber : FlightReservationEntity();
}

uint64_t sub_257FFA39C()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = FlightReservationEntity.arrivalTerminal.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFA3C4()
{
  return key path setter for FlightReservationEntity.flightNumber : FlightReservationEntity();
}

uint64_t sub_257FFA3F0()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = FlightReservationEntity.arrivalGate.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFA418()
{
  return key path setter for FlightReservationEntity.flightNumber : FlightReservationEntity();
}

uint64_t sub_257FFA444()
{
  return FlightReservationEntity.arrivalDateTime.getter();
}

uint64_t sub_257FFA468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for FlightReservationEntity.departureDateTime : FlightReservationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))FlightReservationEntity.arrivalDateTime.setter);
}

uint64_t sub_257FFA494()
{
  return FlightReservationEntity.duration.getter();
}

uint64_t sub_257FFA4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for FlightReservationEntity.departureDateTime : FlightReservationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))FlightReservationEntity.duration.setter);
}

uint64_t sub_257FFA4E4()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = FlightReservationEntity.passengerNames.getter();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_257FFA510()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = FlightReservationEntity.seatNumbers.getter();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_257FFA53C()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = FlightReservationEntity.bookingProvider.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFA564()
{
  return key path setter for FlightReservationEntity.flightNumber : FlightReservationEntity();
}

uint64_t sub_257FFA590()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = FlightReservationEntity.designator.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFA5B8()
{
  return key path setter for FlightReservationEntity.flightNumber : FlightReservationEntity();
}

uint64_t sub_257FFA5E4()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = FlightReservationEntity.confirmationNumber.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFA60C()
{
  return key path setter for FlightReservationEntity.flightNumber : FlightReservationEntity();
}

uint64_t sub_257FFA638()
{
  return FlightReservationEntity.checkInUrl.getter();
}

uint64_t sub_257FFA65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for FlightReservationEntity.boardingDateTime : FlightReservationEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for URL?);
}

uint64_t sub_257FFA690()
{
  return FlightReservationEntity.totalDuration.getter();
}

uint64_t sub_257FFA6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for FlightReservationEntity.boardingDateTime : FlightReservationEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for DateComponents?);
}

uint64_t sub_257FFA6E8()
{
  return FlightReservationEntity.totalCost.getter();
}

uint64_t sub_257FFA70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for FlightReservationEntity.boardingDateTime : FlightReservationEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for IntentCurrencyAmount?);
}

uint64_t sub_257FFA740()
{
  return FlightReservationEntity.encodedSearchableItem.getter();
}

uint64_t sub_257FFA764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for FlightReservationEntity.boardingDateTime : FlightReservationEntity(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t sub_257FFA798@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for HotelReservationEntity.address : HotelReservationEntity(a1, a2);
}

uint64_t sub_257FFA7C4(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for HotelReservationEntity.address : HotelReservationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))HotelReservationEntity.address.setter);
}

uint64_t sub_257FFA7F0@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for HotelReservationEntity.address : HotelReservationEntity(a1, a2);
}

uint64_t sub_257FFA81C(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for HotelReservationEntity.address : HotelReservationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))HotelReservationEntity.bookingProvider.setter);
}

uint64_t sub_257FFA848@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for HotelReservationEntity.address : HotelReservationEntity(a1, a2);
}

uint64_t sub_257FFA874(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for HotelReservationEntity.address : HotelReservationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))HotelReservationEntity.businessName.setter);
}

uint64_t sub_257FFA8A0(__n128 *a1)
{
  return key path getter for HotelReservationEntity.checkinDateTime : HotelReservationEntity(a1);
}

uint64_t sub_257FFA8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for HotelReservationEntity.checkinDateTime : HotelReservationEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for DateComponents?);
}

uint64_t sub_257FFA900(__n128 *a1)
{
  return key path getter for HotelReservationEntity.checkinDateTime : HotelReservationEntity(a1);
}

uint64_t sub_257FFA92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for HotelReservationEntity.checkinDateTime : HotelReservationEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for DateComponents?);
}

uint64_t sub_257FFA960(__n128 *a1)
{
  return key path getter for HotelReservationEntity.checkinDateTime : HotelReservationEntity(a1);
}

uint64_t sub_257FFA990@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for HotelReservationEntity.address : HotelReservationEntity(a1, a2);
}

uint64_t sub_257FFA9BC(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for HotelReservationEntity.address : HotelReservationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))HotelReservationEntity.guest.setter);
}

uint64_t sub_257FFA9F0@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for HotelReservationEntity.address : HotelReservationEntity(a1, a2);
}

uint64_t sub_257FFAA1C(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for HotelReservationEntity.address : HotelReservationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))HotelReservationEntity.phoneNumber.setter);
}

uint64_t sub_257FFAA50(__n128 *a1)
{
  return key path getter for HotelReservationEntity.checkinDateTime : HotelReservationEntity(a1);
}

uint64_t sub_257FFAA7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for HotelReservationEntity.checkinDateTime : HotelReservationEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for URL?);
}

uint64_t sub_257FFAAB0@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for HotelReservationEntity.address : HotelReservationEntity(a1, a2);
}

uint64_t sub_257FFAADC(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for HotelReservationEntity.address : HotelReservationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))HotelReservationEntity.confirmationNumber.setter);
}

uint64_t sub_257FFAB08(__n128 *a1)
{
  return key path getter for HotelReservationEntity.checkinDateTime : HotelReservationEntity(a1);
}

uint64_t sub_257FFAB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for HotelReservationEntity.checkinDateTime : HotelReservationEntity(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t sub_257FFAB68@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for RestaurantReservationEntity.address : RestaurantReservationEntity(a1, a2);
}

uint64_t sub_257FFAB94(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for RestaurantReservationEntity.address : RestaurantReservationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))RestaurantReservationEntity.address.setter);
}

uint64_t sub_257FFABC0@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for RestaurantReservationEntity.address : RestaurantReservationEntity(a1, a2);
}

uint64_t sub_257FFABEC(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for RestaurantReservationEntity.address : RestaurantReservationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))RestaurantReservationEntity.bookingProvider.setter);
}

uint64_t sub_257FFAC18@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for RestaurantReservationEntity.address : RestaurantReservationEntity(a1, a2);
}

uint64_t sub_257FFAC44(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for RestaurantReservationEntity.address : RestaurantReservationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))RestaurantReservationEntity.businessName.setter);
}

uint64_t sub_257FFAC70@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for RestaurantReservationEntity.address : RestaurantReservationEntity(a1, a2);
}

uint64_t sub_257FFAC9C(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for RestaurantReservationEntity.address : RestaurantReservationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))RestaurantReservationEntity.guest.setter);
}

uint64_t sub_257FFACC8@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for RestaurantReservationEntity.address : RestaurantReservationEntity(a1, a2);
}

uint64_t sub_257FFACF4(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for RestaurantReservationEntity.address : RestaurantReservationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))RestaurantReservationEntity.mealType.setter);
}

uint64_t sub_257FFAD28@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for RestaurantReservationEntity.address : RestaurantReservationEntity(a1, a2);
}

uint64_t sub_257FFAD54(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for RestaurantReservationEntity.address : RestaurantReservationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))RestaurantReservationEntity.phoneNumber.setter);
}

uint64_t sub_257FFAD80(__n128 *a1)
{
  return key path getter for RestaurantReservationEntity.startDateTime : RestaurantReservationEntity(a1);
}

uint64_t sub_257FFADAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for RestaurantReservationEntity.startDateTime : RestaurantReservationEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for DateComponents?);
}

uint64_t sub_257FFADE0@<X0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for RestaurantReservationEntity.address : RestaurantReservationEntity(a1, a2);
}

uint64_t sub_257FFAE0C(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t a4)
{
  return key path setter for RestaurantReservationEntity.address : RestaurantReservationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))RestaurantReservationEntity.confirmationNumber.setter);
}

uint64_t sub_257FFAE38(__n128 *a1)
{
  return key path getter for RestaurantReservationEntity.startDateTime : RestaurantReservationEntity(a1);
}

uint64_t sub_257FFAE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for RestaurantReservationEntity.startDateTime : RestaurantReservationEntity(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t sub_257FFAE98(uint64_t a1)
{
  return key path getter for TicketedTransportationEntity.arrivalStationName : TicketedTransportationEntity(a1);
}

uint64_t sub_257FFAEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedTransportationEntity.arrivalStationName : TicketedTransportationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))TicketedTransportationEntity.arrivalStationName.setter);
}

uint64_t sub_257FFAEF0(uint64_t a1)
{
  return key path getter for TicketedTransportationEntity.arrivalStationName : TicketedTransportationEntity(a1);
}

uint64_t sub_257FFAF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedTransportationEntity.arrivalStationName : TicketedTransportationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))TicketedTransportationEntity.arrivalStationAddress.setter);
}

uint64_t sub_257FFAF48(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return key path getter for TicketedTransportationEntity.arrivalDateTime : TicketedTransportationEntity(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void))TicketedTransportationEntity.arrivalDateTime.getter, a5, a6, a7, a8);
}

uint64_t sub_257FFAF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedTransportationEntity.arrivalDateTime : TicketedTransportationEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for DateComponents?);
}

uint64_t sub_257FFAFA8(uint64_t a1)
{
  return key path getter for TicketedTransportationEntity.arrivalStationName : TicketedTransportationEntity(a1);
}

uint64_t sub_257FFAFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedTransportationEntity.arrivalStationName : TicketedTransportationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))TicketedTransportationEntity.departureStationName.setter);
}

uint64_t sub_257FFB000(uint64_t a1)
{
  return key path getter for TicketedTransportationEntity.arrivalStationName : TicketedTransportationEntity(a1);
}

uint64_t sub_257FFB02C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedTransportationEntity.arrivalStationName : TicketedTransportationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))TicketedTransportationEntity.departureStationAddress.setter);
}

uint64_t sub_257FFB058(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return key path getter for TicketedTransportationEntity.arrivalDateTime : TicketedTransportationEntity(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void))TicketedTransportationEntity.departureDateTime.getter, a5, a6, a7, a8);
}

uint64_t sub_257FFB084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedTransportationEntity.arrivalDateTime : TicketedTransportationEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for DateComponents?);
}

uint64_t sub_257FFB0B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return key path getter for TicketedTransportationEntity.arrivalDateTime : TicketedTransportationEntity(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void))TicketedTransportationEntity.duration.getter, a5, a6, a7, a8);
}

uint64_t sub_257FFB0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedTransportationEntity.arrivalDateTime : TicketedTransportationEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for DateComponents?);
}

uint64_t sub_257FFB118(uint64_t a1)
{
  return key path getter for TicketedTransportationEntity.arrivalStationName : TicketedTransportationEntity(a1);
}

uint64_t sub_257FFB144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedTransportationEntity.arrivalStationName : TicketedTransportationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))TicketedTransportationEntity.eventSubType.setter);
}

uint64_t sub_257FFB170(uint64_t a1)
{
  return key path getter for TicketedTransportationEntity.passengerNames : TicketedTransportationEntity(a1);
}

uint64_t sub_257FFB19C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedTransportationEntity.passengerNames : TicketedTransportationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))TicketedTransportationEntity.passengerNames.setter);
}

uint64_t sub_257FFB1C8(uint64_t a1)
{
  return key path getter for TicketedTransportationEntity.passengerNames : TicketedTransportationEntity(a1);
}

uint64_t sub_257FFB1F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedTransportationEntity.passengerNames : TicketedTransportationEntity(a1, a2, a3, a4, (uint64_t (*)(uint64_t))TicketedTransportationEntity.seatNumbers.setter);
}

uint64_t sub_257FFB220(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return key path getter for TicketedTransportationEntity.arrivalDateTime : TicketedTransportationEntity(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void))TicketedTransportationEntity.encodedSearchableItem.getter, a5, a6, a7, a8);
}

uint64_t sub_257FFB24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedTransportationEntity.arrivalDateTime : TicketedTransportationEntity(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t sub_257FFB280()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = VehicleReservationEntity.bookingProvider.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFB2A8()
{
  return key path setter for VehicleReservationEntity.bookingProvider : VehicleReservationEntity();
}

uint64_t sub_257FFB2D4()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = VehicleReservationEntity.cost.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFB2FC()
{
  return key path setter for VehicleReservationEntity.bookingProvider : VehicleReservationEntity();
}

uint64_t sub_257FFB328()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = VehicleReservationEntity.dropOffAddress.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFB350()
{
  return key path setter for VehicleReservationEntity.bookingProvider : VehicleReservationEntity();
}

uint64_t sub_257FFB37C()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = VehicleReservationEntity.dropOffBusinessName.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFB3A4()
{
  return key path setter for VehicleReservationEntity.bookingProvider : VehicleReservationEntity();
}

uint64_t sub_257FFB3D0()
{
  return VehicleReservationEntity.dropOffDateTime.getter();
}

uint64_t sub_257FFB3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for VehicleReservationEntity.dropOffDateTime : VehicleReservationEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for DateComponents?);
}

uint64_t sub_257FFB428()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = VehicleReservationEntity.dropOffPhoneNumber.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFB450()
{
  return key path setter for VehicleReservationEntity.bookingProvider : VehicleReservationEntity();
}

uint64_t sub_257FFB47C()
{
  return VehicleReservationEntity.duration.getter();
}

uint64_t sub_257FFB4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for VehicleReservationEntity.dropOffDateTime : VehicleReservationEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for DateComponents?);
}

uint64_t sub_257FFB4D4()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = VehicleReservationEntity.pickUpAddress.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFB4FC()
{
  return key path setter for VehicleReservationEntity.bookingProvider : VehicleReservationEntity();
}

uint64_t sub_257FFB528()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = VehicleReservationEntity.pickUpBusinessName.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFB550()
{
  return key path setter for VehicleReservationEntity.bookingProvider : VehicleReservationEntity();
}

uint64_t sub_257FFB57C()
{
  return VehicleReservationEntity.pickUpDateTime.getter();
}

uint64_t sub_257FFB5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for VehicleReservationEntity.dropOffDateTime : VehicleReservationEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for DateComponents?);
}

uint64_t sub_257FFB5D4()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = VehicleReservationEntity.pickUpPhoneNumber.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFB5FC()
{
  return key path setter for VehicleReservationEntity.bookingProvider : VehicleReservationEntity();
}

uint64_t sub_257FFB628()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = VehicleReservationEntity.renterName.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFB650()
{
  return key path setter for VehicleReservationEntity.bookingProvider : VehicleReservationEntity();
}

uint64_t sub_257FFB67C()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = VehicleReservationEntity.status.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFB6A4()
{
  return key path setter for VehicleReservationEntity.bookingProvider : VehicleReservationEntity();
}

uint64_t sub_257FFB6D0()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = VehicleReservationEntity.vehicleClass.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFB6F8()
{
  return key path setter for VehicleReservationEntity.bookingProvider : VehicleReservationEntity();
}

uint64_t sub_257FFB724()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = VehicleReservationEntity.confirmationNumber.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFB74C()
{
  return key path setter for VehicleReservationEntity.bookingProvider : VehicleReservationEntity();
}

uint64_t sub_257FFB778()
{
  return VehicleReservationEntity.encodedSearchableItem.getter();
}

uint64_t sub_257FFB79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for VehicleReservationEntity.dropOffDateTime : VehicleReservationEntity(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t sub_257FFB7D0()
{
  return TicketedShowEntity.duration.getter();
}

uint64_t sub_257FFB7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedShowEntity.duration : TicketedShowEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for DateComponents?);
}

uint64_t sub_257FFB828()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = TicketedShowEntity.customerNames.getter();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_257FFB854()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = GenericEventEntity.cost.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFB87C()
{
  return key path setter for TicketedShowEntity.reservationId : TicketedShowEntity();
}

uint64_t sub_257FFB8A8()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = TicketedShowEntity.locationName.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFB8D0()
{
  return key path setter for TicketedShowEntity.reservationId : TicketedShowEntity();
}

uint64_t sub_257FFB8FC()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = TicketedShowEntity.address.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFB924()
{
  return key path setter for TicketedShowEntity.reservationId : TicketedShowEntity();
}

uint64_t sub_257FFB950()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = TicketedShowEntity.seatNumbers.getter();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_257FFB97C()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = GenericEventEntity.eventName.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFB9A4()
{
  return key path setter for TicketedShowEntity.reservationId : TicketedShowEntity();
}

uint64_t sub_257FFB9D0()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = GenericEventEntity.eventType.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFB9F8()
{
  return key path setter for TicketedShowEntity.reservationId : TicketedShowEntity();
}

uint64_t sub_257FFBA24()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = GenericEventEntity.eventSubType.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFBA4C()
{
  return key path setter for TicketedShowEntity.reservationId : TicketedShowEntity();
}

uint64_t sub_257FFBA78()
{
  return TicketedShowEntity.ticketUrl.getter();
}

uint64_t sub_257FFBA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedShowEntity.duration : TicketedShowEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for URL?);
}

uint64_t sub_257FFBAD0()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = TicketedShowEntity.totalCost.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFBAF8()
{
  return key path setter for TicketedShowEntity.reservationId : TicketedShowEntity();
}

uint64_t sub_257FFBB24()
{
  return TicketedShowEntity.startDateTime.getter();
}

uint64_t sub_257FFBB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedShowEntity.duration : TicketedShowEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for DateComponents?);
}

uint64_t sub_257FFBB7C()
{
  return GenericEventEntity.startDateTime.getter();
}

uint64_t sub_257FFBBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedShowEntity.duration : TicketedShowEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for DateComponents?);
}

uint64_t sub_257FFBBD4()
{
  return GenericEventEntity.encodedSearchableItem.getter();
}

uint64_t sub_257FFBBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedShowEntity.duration : TicketedShowEntity(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t sub_257FFBC2C()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = GenericEventEntity.attendees.getter();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_257FFBC58()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = GenericEventEntity.businessName.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFBC80()
{
  return key path setter for TicketedShowEntity.reservationId : TicketedShowEntity();
}

uint64_t sub_257FFBCAC()
{
  return key path setter for TicketedShowEntity.reservationId : TicketedShowEntity();
}

uint64_t sub_257FFBCD8()
{
  return GenericEventEntity.duration.getter();
}

uint64_t sub_257FFBCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedShowEntity.duration : TicketedShowEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for DateComponents?);
}

uint64_t sub_257FFBD30()
{
  return GenericEventEntity.endDateTime.getter();
}

uint64_t sub_257FFBD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedShowEntity.duration : TicketedShowEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for DateComponents?);
}

uint64_t sub_257FFBD88()
{
  return GenericEventEntity.eventLink.getter();
}

uint64_t sub_257FFBDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedShowEntity.duration : TicketedShowEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for URL?);
}

uint64_t sub_257FFBDE0()
{
  return key path setter for TicketedShowEntity.reservationId : TicketedShowEntity();
}

uint64_t sub_257FFBE0C()
{
  return key path setter for TicketedShowEntity.reservationId : TicketedShowEntity();
}

uint64_t sub_257FFBE38()
{
  return key path setter for TicketedShowEntity.reservationId : TicketedShowEntity();
}

uint64_t sub_257FFBE64()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = GenericEventEntity.location.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFBE8C()
{
  return key path setter for TicketedShowEntity.reservationId : TicketedShowEntity();
}

uint64_t sub_257FFBEB8()
{
  return GenericEventEntity.organizer.getter();
}

uint64_t sub_257FFBEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedShowEntity.duration : TicketedShowEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for IntentPerson?);
}

uint64_t sub_257FFBF10()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = GenericEventEntity.phoneNumber.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_257FFBF38()
{
  return key path setter for TicketedShowEntity.reservationId : TicketedShowEntity();
}

uint64_t sub_257FFBF64()
{
  return GenericEventEntity.startDateTime.getter();
}

uint64_t sub_257FFBF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedShowEntity.duration : TicketedShowEntity(a1, a2, a3, a4, &demangling cache variable for type metadata for DateComponents?);
}

uint64_t sub_257FFBFBC()
{
  return GenericEventEntity.encodedSearchableItem.getter();
}

uint64_t sub_257FFBFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for TicketedShowEntity.duration : TicketedShowEntity(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for IntentFile?);
}

uint64_t destroy for EventEntity(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  unint64_t v3 = *(void *)(a1 + 72);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 64);
    return outlined consume of Data._Representation(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for EventEntity(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = a2 + 8;
  unint64_t v8 = a2[9];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)v7;
  }
  else
  {
    uint64_t v9 = *v7;
    outlined copy of Data._Representation(*v7, v8);
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v8;
  }
  return a1;
}

void *assignWithCopy for EventEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  uint64_t v4 = a2 + 8;
  unint64_t v5 = a2[9];
  if (a1[9] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      outlined copy of Data._Representation(*v4, v5);
      uint64_t v8 = a1[8];
      unint64_t v9 = a1[9];
      a1[8] = v7;
      a1[9] = v5;
      outlined consume of Data._Representation(v8, v9);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 8));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 4) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  outlined copy of Data._Representation(*v4, v5);
  a1[8] = v6;
  a1[9] = v5;
  return a1;
}

void *__swift_memcpy80_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

void *assignWithTake for EventEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  uint64_t v4 = a2 + 8;
  unint64_t v5 = a1[9];
  if (v5 >> 60 != 15)
  {
    unint64_t v6 = a2[9];
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = a1[8];
      a1[8] = *v4;
      a1[9] = v6;
      outlined consume of Data._Representation(v7, v5);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 8));
  }
  *((_OWORD *)a1 + 4) = *(_OWORD *)v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for EventEntity(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EventEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for EventEntity()
{
}

uint64_t getEnumTagSinglePayload for EventSubType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for EventSubType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x257FFC5E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void type metadata accessor for EventSubType()
{
}

uint64_t destroy for FlightReservationEntity(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  unint64_t v3 = *(void *)(a1 + 200);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 192);
    return outlined consume of Data._Representation(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for FlightReservationEntity(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = a2[11];
  *(void *)(a1 + 80) = a2[10];
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = a2[13];
  *(void *)(a1 + 96) = a2[12];
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = a2[15];
  *(void *)(a1 + 112) = a2[14];
  *(void *)(a1 + 120) = v10;
  uint64_t v11 = a2[17];
  *(void *)(a1 + 128) = a2[16];
  *(void *)(a1 + 136) = v11;
  uint64_t v12 = a2[19];
  *(void *)(a1 + 144) = a2[18];
  *(void *)(a1 + 152) = v12;
  uint64_t v13 = a2[21];
  *(void *)(a1 + 160) = a2[20];
  *(void *)(a1 + 168) = v13;
  uint64_t v14 = a2[23];
  *(void *)(a1 + 176) = a2[22];
  *(void *)(a1 + 184) = v14;
  long long v18 = a2 + 24;
  unint64_t v15 = a2[25];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 192) = *(_OWORD *)v18;
  }
  else
  {
    uint64_t v16 = *v18;
    outlined copy of Data._Representation(*v18, v15);
    *(void *)(a1 + 192) = v16;
    *(void *)(a1 + 200) = v15;
  }
  return a1;
}

void *assignWithCopy for FlightReservationEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  a1[14] = a2[14];
  swift_retain();
  swift_release();
  a1[15] = a2[15];
  swift_retain();
  swift_release();
  a1[16] = a2[16];
  swift_retain();
  swift_release();
  a1[17] = a2[17];
  swift_retain();
  swift_release();
  a1[18] = a2[18];
  swift_retain();
  swift_release();
  a1[19] = a2[19];
  swift_retain();
  swift_release();
  a1[20] = a2[20];
  swift_retain();
  swift_release();
  a1[21] = a2[21];
  swift_retain();
  swift_release();
  a1[22] = a2[22];
  swift_retain();
  swift_release();
  a1[23] = a2[23];
  swift_retain();
  swift_release();
  uint64_t v4 = a2 + 24;
  unint64_t v5 = a2[25];
  if (a1[25] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      outlined copy of Data._Representation(*v4, v5);
      uint64_t v8 = a1[24];
      unint64_t v9 = a1[25];
      a1[24] = v7;
      a1[25] = v5;
      outlined consume of Data._Representation(v8, v9);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 24));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 12) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  outlined copy of Data._Representation(*v4, v5);
  a1[24] = v6;
  a1[25] = v5;
  return a1;
}

void *__swift_memcpy208_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD0uLL);
}

void *assignWithTake for FlightReservationEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  a1[9] = a2[9];
  swift_release();
  a1[10] = a2[10];
  swift_release();
  a1[11] = a2[11];
  swift_release();
  a1[12] = a2[12];
  swift_release();
  a1[13] = a2[13];
  swift_release();
  a1[14] = a2[14];
  swift_release();
  a1[15] = a2[15];
  swift_release();
  a1[16] = a2[16];
  swift_release();
  a1[17] = a2[17];
  swift_release();
  a1[18] = a2[18];
  swift_release();
  a1[19] = a2[19];
  swift_release();
  a1[20] = a2[20];
  swift_release();
  a1[21] = a2[21];
  swift_release();
  a1[22] = a2[22];
  swift_release();
  a1[23] = a2[23];
  swift_release();
  uint64_t v4 = a2 + 24;
  unint64_t v5 = a1[25];
  if (v5 >> 60 != 15)
  {
    unint64_t v6 = a2[25];
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = a1[24];
      a1[24] = *v4;
      a1[25] = v6;
      outlined consume of Data._Representation(v7, v5);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 24));
  }
  *((_OWORD *)a1 + 12) = *(_OWORD *)v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for FlightReservationEntity(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 208))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FlightReservationEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for FlightReservationEntity()
{
}

uint64_t destroy for HotelReservationEntity(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  unint64_t v3 = *(void *)(a1 + 112);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 104);
    return outlined consume of Data._Representation(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for HotelReservationEntity(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = a2[11];
  *(void *)(a1 + 80) = a2[10];
  *(void *)(a1 + 88) = v8;
  *(void *)(a1 + 96) = a2[12];
  uint64_t v12 = a2 + 13;
  unint64_t v9 = a2[14];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)v12;
  }
  else
  {
    uint64_t v10 = *v12;
    outlined copy of Data._Representation(*v12, v9);
    *(void *)(a1 + 104) = v10;
    *(void *)(a1 + 112) = v9;
  }
  return a1;
}

void *assignWithCopy for HotelReservationEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  uint64_t v4 = a2 + 13;
  unint64_t v5 = a2[14];
  if (a1[14] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      outlined copy of Data._Representation(*v4, v5);
      uint64_t v8 = a1[13];
      unint64_t v9 = a1[14];
      a1[13] = v7;
      a1[14] = v5;
      outlined consume of Data._Representation(v8, v9);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 13));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 13) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  outlined copy of Data._Representation(*v4, v5);
  a1[13] = v6;
  a1[14] = v5;
  return a1;
}

void *__swift_memcpy120_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

void *assignWithTake for HotelReservationEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  a1[9] = a2[9];
  swift_release();
  a1[10] = a2[10];
  swift_release();
  a1[11] = a2[11];
  swift_release();
  a1[12] = a2[12];
  swift_release();
  uint64_t v4 = a2 + 13;
  unint64_t v5 = a1[14];
  if (v5 >> 60 != 15)
  {
    unint64_t v6 = a2[14];
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = a1[13];
      a1[13] = *v4;
      a1[14] = v6;
      outlined consume of Data._Representation(v7, v5);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 13));
  }
  *(_OWORD *)(a1 + 13) = *(_OWORD *)v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for HotelReservationEntity(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HotelReservationEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for HotelReservationEntity()
{
}

uint64_t destroy for RestaurantReservationEntity(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  unint64_t v3 = *(void *)(a1 + 88);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 80);
    return outlined consume of Data._Representation(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for RestaurantReservationEntity(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v7;
  uint64_t v11 = a2 + 10;
  unint64_t v8 = a2[11];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v11;
  }
  else
  {
    uint64_t v9 = *v11;
    outlined copy of Data._Representation(*v11, v8);
    *(void *)(a1 + 80) = v9;
    *(void *)(a1 + 88) = v8;
  }
  return a1;
}

void *assignWithCopy for RestaurantReservationEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  uint64_t v4 = a2 + 10;
  unint64_t v5 = a2[11];
  if (a1[11] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      outlined copy of Data._Representation(*v4, v5);
      uint64_t v8 = a1[10];
      unint64_t v9 = a1[11];
      a1[10] = v7;
      a1[11] = v5;
      outlined consume of Data._Representation(v8, v9);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 10));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 5) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  outlined copy of Data._Representation(*v4, v5);
  a1[10] = v6;
  a1[11] = v5;
  return a1;
}

void *__swift_memcpy96_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x60uLL);
}

void *assignWithTake for RestaurantReservationEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  a1[9] = a2[9];
  swift_release();
  uint64_t v4 = a2 + 10;
  unint64_t v5 = a1[11];
  if (v5 >> 60 != 15)
  {
    unint64_t v6 = a2[11];
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = a1[10];
      a1[10] = *v4;
      a1[11] = v6;
      outlined consume of Data._Representation(v7, v5);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 10));
  }
  *((_OWORD *)a1 + 5) = *(_OWORD *)v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for RestaurantReservationEntity(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RestaurantReservationEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for RestaurantReservationEntity()
{
}

uint64_t destroy for TicketedTransportationEntity(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  unint64_t v3 = *(void *)(a1 + 96);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 88);
    return outlined consume of Data._Representation(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for TicketedTransportationEntity(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = a2[10];
  uint64_t v11 = a2 + 11;
  unint64_t v8 = a2[12];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 88) = *(_OWORD *)v11;
  }
  else
  {
    uint64_t v9 = *v11;
    outlined copy of Data._Representation(*v11, v8);
    *(void *)(a1 + 88) = v9;
    *(void *)(a1 + 96) = v8;
  }
  return a1;
}

void *assignWithCopy for TicketedTransportationEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  uint64_t v4 = a2 + 11;
  unint64_t v5 = a2[12];
  if (a1[12] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      outlined copy of Data._Representation(*v4, v5);
      uint64_t v8 = a1[11];
      unint64_t v9 = a1[12];
      a1[11] = v7;
      a1[12] = v5;
      outlined consume of Data._Representation(v8, v9);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 11));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 11) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  outlined copy of Data._Representation(*v4, v5);
  a1[11] = v6;
  a1[12] = v5;
  return a1;
}

void *__swift_memcpy104_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

void *assignWithTake for TicketedTransportationEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  a1[9] = a2[9];
  swift_release();
  a1[10] = a2[10];
  swift_release();
  uint64_t v4 = a2 + 11;
  unint64_t v5 = a1[12];
  if (v5 >> 60 != 15)
  {
    unint64_t v6 = a2[12];
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = a1[11];
      a1[11] = *v4;
      a1[12] = v6;
      outlined consume of Data._Representation(v7, v5);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 11));
  }
  *(_OWORD *)(a1 + 11) = *(_OWORD *)v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for TicketedTransportationEntity(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TicketedTransportationEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for TicketedTransportationEntity()
{
}

uint64_t destroy for VehicleReservationEntity(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  unint64_t v3 = *(void *)(a1 + 136);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 128);
    return outlined consume of Data._Representation(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for VehicleReservationEntity(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = a2[11];
  *(void *)(a1 + 80) = a2[10];
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = a2[13];
  *(void *)(a1 + 96) = a2[12];
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = a2[15];
  *(void *)(a1 + 112) = a2[14];
  *(void *)(a1 + 120) = v10;
  uint64_t v14 = a2 + 16;
  unint64_t v11 = a2[17];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 128) = *(_OWORD *)v14;
  }
  else
  {
    uint64_t v12 = *v14;
    outlined copy of Data._Representation(*v14, v11);
    *(void *)(a1 + 128) = v12;
    *(void *)(a1 + 136) = v11;
  }
  return a1;
}

void *assignWithCopy for VehicleReservationEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  a1[14] = a2[14];
  swift_retain();
  swift_release();
  a1[15] = a2[15];
  swift_retain();
  swift_release();
  uint64_t v4 = a2 + 16;
  unint64_t v5 = a2[17];
  if (a1[17] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      outlined copy of Data._Representation(*v4, v5);
      uint64_t v8 = a1[16];
      unint64_t v9 = a1[17];
      a1[16] = v7;
      a1[17] = v5;
      outlined consume of Data._Representation(v8, v9);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 16));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 8) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  outlined copy of Data._Representation(*v4, v5);
  a1[16] = v6;
  a1[17] = v5;
  return a1;
}

void *__swift_memcpy144_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x90uLL);
}

void *assignWithTake for VehicleReservationEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  a1[9] = a2[9];
  swift_release();
  a1[10] = a2[10];
  swift_release();
  a1[11] = a2[11];
  swift_release();
  a1[12] = a2[12];
  swift_release();
  a1[13] = a2[13];
  swift_release();
  a1[14] = a2[14];
  swift_release();
  a1[15] = a2[15];
  swift_release();
  uint64_t v4 = a2 + 16;
  unint64_t v5 = a1[17];
  if (v5 >> 60 != 15)
  {
    unint64_t v6 = a2[17];
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = a1[16];
      a1[16] = *v4;
      a1[17] = v6;
      outlined consume of Data._Representation(v7, v5);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 16));
  }
  *((_OWORD *)a1 + 8) = *(_OWORD *)v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for VehicleReservationEntity(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 144))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VehicleReservationEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for VehicleReservationEntity()
{
}

void *__swift_memcpy128_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

void type metadata accessor for TicketedShowEntity()
{
}

void destroy for TicketedShowEntity(uint64_t a1)
{
  OUTLINED_FUNCTION_160_1(a1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_105_3();
  if (!(!v4 & v3))
  {
    uint64_t v5 = *(void *)(v1 + 112);
    outlined consume of Data._Representation(v5, v2);
  }
}

void initializeWithCopy for TicketedShowEntity()
{
  OUTLINED_FUNCTION_71_4();
  uint64_t v1 = v0;
  uint64_t v3 = v2[1];
  *uint64_t v0 = *v2;
  v0[1] = v3;
  uint64_t v4 = v2[3];
  v0[2] = v2[2];
  v0[3] = v4;
  uint64_t v5 = v2[5];
  v0[4] = v2[4];
  v0[5] = v5;
  uint64_t v6 = v2[7];
  v0[6] = v2[6];
  v0[7] = v6;
  uint64_t v7 = v2[9];
  v0[8] = v2[8];
  v0[9] = v7;
  uint64_t v8 = v2[11];
  v0[10] = v2[10];
  v0[11] = v8;
  uint64_t v9 = v2[13];
  v0[12] = v2[12];
  v0[13] = v9;
  uint64_t v14 = v2 + 14;
  unint64_t v10 = v2[15];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v10 >> 60 == 15)
  {
    *((_OWORD *)v1 + 7) = *v14;
  }
  else
  {
    uint64_t v11 = *(void *)v14;
    uint64_t v12 = OUTLINED_FUNCTION_148();
    outlined copy of Data._Representation(v12, v13);
    v1[14] = v11;
    v1[15] = v10;
  }
  OUTLINED_FUNCTION_70_4();
}

void *assignWithCopy for TicketedShowEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  uint64_t v4 = a2 + 14;
  unint64_t v5 = a2[15];
  OUTLINED_FUNCTION_49_5();
  if (!(!v8 & v7))
  {
    OUTLINED_FUNCTION_253();
    if (!(!v8 & v7))
    {
      uint64_t v9 = *v4;
      outlined copy of Data._Representation(*v4, v5);
      uint64_t v10 = a1[14];
      unint64_t v11 = a1[15];
      a1[14] = v9;
      a1[15] = v5;
      outlined consume of Data._Representation(v10, v11);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 14));
LABEL_8:
    *((_OWORD *)a1 + 7) = *(_OWORD *)v4;
    return a1;
  }
  OUTLINED_FUNCTION_253();
  if (!v8 & v7) {
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  outlined copy of Data._Representation(*v4, v5);
  a1[14] = v6;
  a1[15] = v5;
  return a1;
}

void *assignWithTake for TicketedShowEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  a1[9] = a2[9];
  swift_release();
  a1[10] = a2[10];
  swift_release();
  a1[11] = a2[11];
  swift_release();
  a1[12] = a2[12];
  swift_release();
  a1[13] = a2[13];
  swift_release();
  uint64_t v4 = a2 + 14;
  OUTLINED_FUNCTION_105_3();
  if (!(!v7 & v6))
  {
    unint64_t v8 = a2[15];
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = a1[14];
      a1[14] = *v4;
      a1[15] = v8;
      outlined consume of Data._Representation(v9, v5);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 14));
  }
  *((_OWORD *)a1 + 7) = *(_OWORD *)v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for TicketedShowEntity(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 128))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TicketedShowEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for GenericEventEntity()
{
}

uint64_t outlined release of VehicleReservationEntity?(__n128 *a1)
{
  __n128 v2 = OUTLINED_FUNCTION_88_3(a1);
  v11(v3, v4, v5, v6, v7, v8, v9, v10, v2.n128_u64[0], v2.n128_u64[1]);
  return v1;
}

uint64_t outlined copy of VehicleReservationEntity?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return outlined copy of Data?(a17, a18);
  }
  return result;
}

uint64_t outlined copy of TicketedTransportationEntity?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return outlined copy of Data?(a12, a13);
  }
  return result;
}

uint64_t outlined copy of RestaurantReservationEntity?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return outlined copy of Data?(a11, a12);
  }
  return result;
}

uint64_t outlined copy of HotelReservationEntity?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return outlined copy of Data?(a14, a15);
  }
  return result;
}

uint64_t outlined copy of TicketedShowEntity?(uint64_t result)
{
  if (result)
  {
    OUTLINED_FUNCTION_71_4();
    OUTLINED_FUNCTION_37_8();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    OUTLINED_FUNCTION_70_4();
    return outlined copy of Data?(v1, v2);
  }
  return result;
}

uint64_t outlined release of FlightReservationEntity?(__n128 *a1)
{
  __n128 v2 = OUTLINED_FUNCTION_88_3(a1);
  v11(v3, v4, v5, v6, v7, v8, v9, v10, v2.n128_u64[0], v2.n128_u64[1], v12, v13, v14, v15, v16, v17, *(void *)(v1 + 128), *(void *)(v1 + 136));
  return v1;
}

uint64_t outlined copy of FlightReservationEntity?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return outlined copy of Data?(a25, a26);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_6_16()
{
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v3);
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t OUTLINED_FUNCTION_7_16()
{
  *(void *)(v0 + 648) = v1;
  *(void *)(v0 + 656) = *(void *)(v0 + 536);
  *(void *)(v0 + 664) = *(void *)(v0 + 528);
  *(void *)(v0 + 672) = *(void *)(v0 + 520);
  uint64_t v2 = *(void *)(v0 + 504);
  *(void *)(v0 + 680) = *(void *)(v0 + 512);
  *(void *)(v0 + 688) = v2;
  uint64_t v3 = *(void *)(v0 + 488);
  *(void *)(v0 + 696) = *(void *)(v0 + 496);
  *(void *)(v0 + 704) = *(void *)(v0 + 368);
  *(void *)(v0 + 712) = v3;
  *(void *)(v0 + 720) = *(void *)(v0 + 616);
  *(void *)(v0 + 728) = *(void *)(v0 + 608);
  *(void *)(v0 + 736) = *(void *)(v0 + 480);
  *(void *)(v0 + 744) = *(void *)(v0 + 600);
  *(void *)(v0 + 752) = *(void *)(v0 + 592);
  *(void *)(v0 + 760) = *(void *)(v0 + 584);
  *(void *)(v0 + 768) = *(void *)(v0 + 576);
  *(void *)(v0 + 776) = *(void *)(v0 + 472);
  *(void *)(v0 + 784) = *(void *)(v0 + 464);
  *(void *)(v0 + 792) = *(void *)(v0 + 456);
  *(void *)(v0 + 800) = *(void *)(v0 + 424);
  *(void *)(v0 + 808) = *(void *)(v0 + 448);
  *(void *)(v0 + 816) = *(void *)(v0 + 352);
  *(_OWORD *)(v0 + 824) = *(_OWORD *)(v0 + 16);
  return v0 + 632;
}

uint64_t OUTLINED_FUNCTION_17_11()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t OUTLINED_FUNCTION_19_10()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_24_10()
{
  return outlined destroy of PQAVerificationModelProtocol?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_29_9()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_36_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_39_4(uint64_t a1)
{
  outlined copy of Data?(a1, v3);
  outlined consume of Data?(v2, v1);
  return outlined consume of Data?(v4, v3);
}

uint64_t OUTLINED_FUNCTION_40_7(uint64_t a1)
{
  *unint64_t v1 = a1;
  return EntityProperty.wrappedValue.modify();
}

uint64_t OUTLINED_FUNCTION_41_7(uint64_t a1)
{
  *unint64_t v1 = a1;
  return EntityProperty.wrappedValue.modify();
}

uint64_t OUTLINED_FUNCTION_43_6(uint64_t a1)
{
  *unint64_t v1 = a1;
  return EntityProperty.wrappedValue.modify();
}

uint64_t OUTLINED_FUNCTION_44_8(uint64_t a1)
{
  *unint64_t v1 = a1;
  return EntityProperty.wrappedValue.modify();
}

uint64_t OUTLINED_FUNCTION_45_5(uint64_t a1)
{
  *unint64_t v1 = a1;
  return EntityProperty.wrappedValue.modify();
}

uint64_t OUTLINED_FUNCTION_48_5()
{
  outlined copy of Data?(0, 0xF000000000000000);
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_52_4(uint64_t a1)
{
  *uint64_t v1 = a1;
  return EntityProperty.wrappedValue.modify();
}

uint64_t OUTLINED_FUNCTION_53_5(uint64_t a1)
{
  *uint64_t v1 = a1;
  return EntityProperty.wrappedValue.modify();
}

uint64_t OUTLINED_FUNCTION_54_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_56_5()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_57_3()
{
  return 0x20746E657645;
}

uint64_t OUTLINED_FUNCTION_58_5()
{
  return static EntityProperty<>.== infix(_:_:)();
}

void OUTLINED_FUNCTION_59_6(uint64_t a1@<X8>)
{
  *(void *)(v2 - 216) = v1;
  *(void *)(v2 - 208) = a1;
  outlined retain of TicketedShowEntity();
}

__n128 OUTLINED_FUNCTION_60_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *uint64_t v72 = a1;
  *(void *)(a1 + 16) = v71;
  *(_OWORD *)(a1 + 24) = a70;
  *(_OWORD *)(a1 + 40) = a71;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&STACK[0x208];
  *(_OWORD *)(a1 + 72) = *(_OWORD *)&STACK[0x218];
  __n128 result = *(__n128 *)&STACK[0x228];
  *(_OWORD *)(a1 + 88) = *(_OWORD *)&STACK[0x228];
  return result;
}

uint64_t OUTLINED_FUNCTION_61_4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 640) = a1;
  return outlined retain of FlightReservationEntity(v1 + 840);
}

uint64_t OUTLINED_FUNCTION_62_4(uint64_t *a1)
{
  return getEnumTag for DataFilter.FilterResult(a1);
}

__n128 OUTLINED_FUNCTION_64_3(uint64_t a1)
{
  return *(__n128 *)(a1 + 88);
}

uint64_t OUTLINED_FUNCTION_68_3(uint64_t a1)
{
  *uint64_t v1 = a1;
  return EntityProperty.wrappedValue.modify();
}

uint64_t OUTLINED_FUNCTION_69_4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 232) = v1;
  *(void *)(v3 - 224) = a1;
  return outlined retain of VehicleReservationEntity(v2 + 376);
}

__n128 OUTLINED_FUNCTION_72_3(__n128 *a1)
{
  return a1[4];
}

uint64_t OUTLINED_FUNCTION_73_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_74_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  outlined copy of Data?(a10, v10);
  outlined copy of Data?(a9, v11);
  outlined consume of Data?(a10, v10);
  return outlined consume of Data?(a9, v11);
}

uint64_t OUTLINED_FUNCTION_78_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_80_2()
{
  return 0x20746E657645;
}

__n128 OUTLINED_FUNCTION_81_2(uint64_t a1, uint64_t a2)
{
  return *(__n128 *)(a2 + 88);
}

uint64_t OUTLINED_FUNCTION_82_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_84_2(uint64_t a1)
{
  *uint64_t v1 = a1;
  return EntityProperty.wrappedValue.modify();
}

uint64_t OUTLINED_FUNCTION_85_3(uint64_t a1)
{
  *uint64_t v1 = a1;
  return EntityProperty.wrappedValue.modify();
}

void OUTLINED_FUNCTION_86_3()
{
  uint64_t v2 = *(void *)(v1 - 96);
  *uint64_t v0 = *(void *)(v1 - 88);
  v0[1] = v2;
  uint64_t v3 = *(void *)(v1 - 112);
  v0[2] = *(void *)(v1 - 104);
  v0[3] = v3;
  uint64_t v4 = *(void *)(v1 - 128);
  v0[4] = *(void *)(v1 - 120);
  v0[5] = v4;
}

uint64_t OUTLINED_FUNCTION_87_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

__n128 OUTLINED_FUNCTION_88_3(__n128 *a1)
{
  return a1[4];
}

uint64_t OUTLINED_FUNCTION_91_3()
{
  return static EntityProperty<>.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_92_3()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_93_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_94_3()
{
  return EntityProperty.wrappedValue.setter();
}

__n128 OUTLINED_FUNCTION_95_2(__n128 *a1)
{
  return a1[4];
}

uint64_t OUTLINED_FUNCTION_96_1()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_98_2()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_99_2()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_100_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_101_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_103_3()
{
  outlined copy of Data?(0, 0xF000000000000000);
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_104_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_108_2()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

void OUTLINED_FUNCTION_109_2()
{
  JUMPOUT(0x25A2C4900);
}

uint64_t OUTLINED_FUNCTION_110_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_111_3()
{
  return outlined consume of Data?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_112_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_113_3(uint64_t a1)
{
  *unint64_t v1 = a1;
  return EntityProperty.wrappedValue.modify();
}

uint64_t OUTLINED_FUNCTION_114_3()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_115_2()
{
  outlined copy of Data?(0, 0xF000000000000000);
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_116_3()
{
  outlined copy of Data?(0, 0xF000000000000000);
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_120_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_123_2()
{
  return static EntityProperty<>.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_124_2()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_125_2()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

__n128 OUTLINED_FUNCTION_127_1(__n128 *a1)
{
  return a1[4];
}

__n128 OUTLINED_FUNCTION_128_2(__n128 *a1)
{
  return a1[4];
}

void *OUTLINED_FUNCTION_131_1(void *result)
{
  *(void *)(v1 - 112) = result[5];
  *(void *)(v1 - 128) = result[6];
  *(void *)(v1 - 144) = result[7];
  return result;
}

uint64_t OUTLINED_FUNCTION_132_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_133_1(uint64_t a1)
{
  *uint64_t v1 = a1;
  return a1 + 16;
}

uint64_t OUTLINED_FUNCTION_134_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return outlined init with take of GenericEventEntity?((uint64_t)&a43, (uint64_t)&a69, v69);
}

uint64_t OUTLINED_FUNCTION_135_1()
{
  return static EntityProperty<>.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_136_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  return outlined init with take of GenericEventEntity?((uint64_t)&a17, (uint64_t)&a43, v43);
}

uint64_t OUTLINED_FUNCTION_137_1()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_139_1()
{
  JUMPOUT(0x25A2C4900);
}

void OUTLINED_FUNCTION_140_1()
{
  JUMPOUT(0x25A2C48D0);
}

uint64_t OUTLINED_FUNCTION_141_1()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_143_1()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_144_1()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_146_1()
{
  return swift_release();
}

__n128 OUTLINED_FUNCTION_147_1(uint64_t a1, __n128 *a2)
{
  return a2[4];
}

uint64_t OUTLINED_FUNCTION_148_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
  __swift_storeEnumTagSinglePayload(v4, 1, 1, *(void *)(v5 - 480));
  return outlined retain of FlightReservationEntity(v5 - 296);
}

uint64_t OUTLINED_FUNCTION_150_1()
{
  return EntityProperty.wrappedValue.getter();
}

void OUTLINED_FUNCTION_152_1(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(v2 - 120) = a2;
  *(void *)(v2 - 136) = *(void *)(a1 + 48);
  *(void *)(v2 - 152) = *(void *)(a1 + 56);
}

uint64_t OUTLINED_FUNCTION_153_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_154_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_155_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_156_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_157_1()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_158_1(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 - 256);
  *(void *)(v2 - 104) = v1;
  *(void *)(v2 - 96) = v3;
}

uint64_t OUTLINED_FUNCTION_160_1(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t OUTLINED_FUNCTION_161_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_164_1()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_166_1()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

unint64_t OUTLINED_FUNCTION_170_1()
{
  return 0xD000000000000018;
}

uint64_t OUTLINED_FUNCTION_171_1()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_172_1()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_173_1()
{
  return static EntityProperty<>.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_174_1()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_176_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_177_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_178_0@<X0>(uint64_t a1@<X8>)
{
  if (v1) {
    return a1;
  }
  else {
    return 0;
  }
}

uint64_t OUTLINED_FUNCTION_179_0()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_180_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_181_1()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_182_1()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_183_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_184_1(uint64_t a1)
{
  return outlined init with take of GenericEventEntity?(a1, (uint64_t)&STACK[0xA98], v1);
}

uint64_t OUTLINED_FUNCTION_185_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_186_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_187_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_189_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_190_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_191_0()
{
  return type metadata accessor for DateComponents();
}

void OUTLINED_FUNCTION_192_0()
{
  JUMPOUT(0x25A2C4900);
}

uint64_t OUTLINED_FUNCTION_193_0()
{
  return v0;
}

void OUTLINED_FUNCTION_194_0(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_195_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  return a10;
}

uint64_t OUTLINED_FUNCTION_196_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  return outlined copy of Data?(a11, a13);
}

uint64_t OUTLINED_FUNCTION_197_0()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_199_0()
{
  return type metadata accessor for DateComponents();
}

uint64_t OUTLINED_FUNCTION_202_0()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t OUTLINED_FUNCTION_203_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_204_0()
{
  return static EntityProperty<>.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_205_0()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_206()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_207_0()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_208_0()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_209_0()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_210_0()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_211_0()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_212_0()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_213_0()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t OUTLINED_FUNCTION_214_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_216_0()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_217()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_218()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t OUTLINED_FUNCTION_219(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return outlined init with take of GenericEventEntity?(a1, (uint64_t)&a9, v9);
}

uint64_t OUTLINED_FUNCTION_222()
{
  return 0x74656B636954;
}

uint64_t OUTLINED_FUNCTION_224()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_225()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_227()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_228()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_229()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_230()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_231()
{
  return swift_retain();
}

char *OUTLINED_FUNCTION_232(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return &a68;
}

void OUTLINED_FUNCTION_233(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + 24) = a1;
}

uint64_t OUTLINED_FUNCTION_234()
{
  return swift_release();
}

void OUTLINED_FUNCTION_236()
{
  v0[79] = v0[78];
  v0[80] = v0[68];
}

uint64_t OUTLINED_FUNCTION_239()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_240()
{
  return swift_release();
}

void OUTLINED_FUNCTION_241()
{
  JUMPOUT(0x25A2C4900);
}

uint64_t OUTLINED_FUNCTION_243()
{
  return outlined consume of Data?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_244()
{
  return outlined consume of Data?(v1, v0);
}

void OUTLINED_FUNCTION_245()
{
  JUMPOUT(0x25A2C4900);
}

uint64_t OUTLINED_FUNCTION_246()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_247()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_248()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_254()
{
  return EntityProperty.wrappedValue.getter();
}

void specialized CardDisplayable.displayRepresentation.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_184_0();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_59_0();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = OUTLINED_FUNCTION_2_6();
  uint64_t v9 = OUTLINED_FUNCTION_81(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_17();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_8_10();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v12);
  v13._countAndFlagsBits = IdCardEntity.description.getter();
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v13);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27_11();
  OUTLINED_FUNCTION_45_6();
  uint64_t v14 = (void *)type metadata accessor for SFCard();
  if (!OUTLINED_FUNCTION_41_8()) {
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_30_12();

  uint64_t v15 = type metadata accessor for RGPluginModel();
  OUTLINED_FUNCTION_10_19(v15);
  if (v19)
  {
    outlined destroy of RGPluginModel?(v1);
LABEL_7:
    uint64_t v20 = OUTLINED_FUNCTION_1_13();
    v21(v20);
    uint64_t v22 = OUTLINED_FUNCTION_5_11(v0);
    OUTLINED_FUNCTION_26_13(v22, v23, v24, v22);
    DisplayRepresentation.init(title:subtitle:image:)();
    goto LABEL_8;
  }
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel();
  OUTLINED_FUNCTION_29_10();
  OUTLINED_FUNCTION_13_17();
  uint64_t v16 = OUTLINED_FUNCTION_21_11();
  v17(v16);
  OUTLINED_FUNCTION_42_5();
  if (!v19 & v18) {
    goto LABEL_7;
  }
  uint64_t v27 = OUTLINED_FUNCTION_1_13();
  v28(v27);
  static RGPluginModel.bundleName.getter();
  OUTLINED_FUNCTION_39_5();
  DisplayRepresentation.init(title:snippetPluginModelData:bundleIdentifier:)();
LABEL_8:
  uint64_t v25 = OUTLINED_FUNCTION_37_9();
  v26(v25);
  OUTLINED_FUNCTION_119_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  char v21;
  char v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;

  OUTLINED_FUNCTION_104_0();
  OUTLINED_FUNCTION_53_6(v3);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_11_13(v6, v30);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_59_0();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = OUTLINED_FUNCTION_2_6();
  Swift::String v12 = OUTLINED_FUNCTION_81(v11);
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_3_17();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_8_10();
  OUTLINED_FUNCTION_25_10();
  _StringGuts.grow(_:)(16);
  outlined retain of PersonalCardEntity(v2);
  EntityProperty.wrappedValue.getter();
  outlined release of PersonalCardEntity(v2);
  uint64_t v15 = OUTLINED_FUNCTION_40_8();
  OUTLINED_FUNCTION_52_5(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0x7469746E65646920;
  v16._object = (void *)0xEE00647261632079;
  String.append(_:)(v16);
  OUTLINED_FUNCTION_32_9();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27_11();
  OUTLINED_FUNCTION_45_6();
  uint64_t v17 = (void *)type metadata accessor for SFCard();
  if (!OUTLINED_FUNCTION_41_8()) {
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_30_12();

  char v18 = type metadata accessor for RGPluginModel();
  OUTLINED_FUNCTION_10_19(v18);
  if (v22)
  {
    outlined destroy of RGPluginModel?(v1);
LABEL_7:
    uint64_t v23 = OUTLINED_FUNCTION_1_13();
    v24(v23);
    uint64_t v25 = OUTLINED_FUNCTION_5_11(v0);
    OUTLINED_FUNCTION_38_6(v25);
    goto LABEL_8;
  }
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel();
  OUTLINED_FUNCTION_29_10();
  OUTLINED_FUNCTION_13_17();
  char v19 = OUTLINED_FUNCTION_21_11();
  v20(v19);
  OUTLINED_FUNCTION_42_5();
  if (!v22 & v21) {
    goto LABEL_7;
  }
  unint64_t v28 = OUTLINED_FUNCTION_1_13();
  v29(v28);
  static RGPluginModel.bundleName.getter();
  OUTLINED_FUNCTION_20_10();
LABEL_8:
  unint64_t v26 = OUTLINED_FUNCTION_37_9();
  v27(v26);
  OUTLINED_FUNCTION_119_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  char v21;
  char v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;

  OUTLINED_FUNCTION_104_0();
  OUTLINED_FUNCTION_53_6(v3);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_11_13(v6, v30);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_59_0();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = OUTLINED_FUNCTION_2_6();
  Swift::String v12 = OUTLINED_FUNCTION_81(v11);
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_3_17();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_8_10();
  OUTLINED_FUNCTION_25_10();
  outlined retain of BusinessCardEntity(v2);
  EntityProperty.wrappedValue.getter();
  outlined release of BusinessCardEntity(v2);
  uint64_t v15 = OUTLINED_FUNCTION_40_8();
  OUTLINED_FUNCTION_52_5(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0x6472616320;
  v16._object = (void *)0xE500000000000000;
  String.append(_:)(v16);
  OUTLINED_FUNCTION_32_9();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27_11();
  OUTLINED_FUNCTION_45_6();
  uint64_t v17 = (void *)type metadata accessor for SFCard();
  if (!OUTLINED_FUNCTION_41_8()) {
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_30_12();

  char v18 = type metadata accessor for RGPluginModel();
  OUTLINED_FUNCTION_10_19(v18);
  if (v22)
  {
    outlined destroy of RGPluginModel?(v1);
LABEL_7:
    uint64_t v23 = OUTLINED_FUNCTION_1_13();
    v24(v23);
    uint64_t v25 = OUTLINED_FUNCTION_5_11(v0);
    OUTLINED_FUNCTION_38_6(v25);
    goto LABEL_8;
  }
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel();
  OUTLINED_FUNCTION_29_10();
  OUTLINED_FUNCTION_13_17();
  char v19 = OUTLINED_FUNCTION_21_11();
  v20(v19);
  OUTLINED_FUNCTION_42_5();
  if (!v22 & v21) {
    goto LABEL_7;
  }
  unint64_t v28 = OUTLINED_FUNCTION_1_13();
  v29(v28);
  static RGPluginModel.bundleName.getter();
  OUTLINED_FUNCTION_20_10();
LABEL_8:
  unint64_t v26 = OUTLINED_FUNCTION_37_9();
  v27(v26);
  OUTLINED_FUNCTION_119_0();
}

{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  char v16;
  char v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  unsigned char v28[80];
  Swift::String v29;

  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_184_0();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_184_0();
  uint64_t v27 = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = OUTLINED_FUNCTION_2_6();
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_3_17();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_31_9();
  memcpy(v28, v0, sizeof(v28));
  OUTLINED_FUNCTION_28_9();
  OUTLINED_FUNCTION_34_8();
  EventEntity.description.getter();
  OUTLINED_FUNCTION_48_6(v29);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27_11();
  OUTLINED_FUNCTION_49_6();
  type metadata accessor for SFCard();
  if (!OUTLINED_FUNCTION_15_14()) {
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_30_12();

  Swift::String v13 = type metadata accessor for RGPluginModel();
  OUTLINED_FUNCTION_18_16(v13);
  if (v17)
  {
    outlined destroy of RGPluginModel?(v1);
LABEL_7:
    char v18 = OUTLINED_FUNCTION_1_13();
    v19(v18);
    uint64_t v20 = OUTLINED_FUNCTION_5_11(v27);
    OUTLINED_FUNCTION_26_13(v20, v21, v22, v20);
    OUTLINED_FUNCTION_22_14();
    goto LABEL_8;
  }
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel();
  OUTLINED_FUNCTION_35_7();
  OUTLINED_FUNCTION_19_11();
  uint64_t v14 = OUTLINED_FUNCTION_24_11();
  v15(v14);
  OUTLINED_FUNCTION_253();
  if (!v17 & v16) {
    goto LABEL_7;
  }
  uint64_t v25 = OUTLINED_FUNCTION_1_13();
  v26(v25);
  static RGPluginModel.bundleName.getter();
  OUTLINED_FUNCTION_39_5();
  OUTLINED_FUNCTION_33_7();
LABEL_8:
  uint64_t v23 = OUTLINED_FUNCTION_7_17();
  v24(v23);
  OUTLINED_FUNCTION_119_0();
}

{
  uint64_t v0;
  void **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  char v20;
  char v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_104_0();
  OUTLINED_FUNCTION_53_6(v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_11_13(v5, v29);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_43_7(v8, v30);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = OUTLINED_FUNCTION_2_6();
  Swift::String v12 = OUTLINED_FUNCTION_81(v11);
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_3_17();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_8_10();
  OUTLINED_FUNCTION_25_10();
  uint64_t v15 = *v1;
  outlined retain of FlightReservationEntity((uint64_t)v1);
  EntityProperty.wrappedValue.getter();
  outlined release of FlightReservationEntity((uint64_t)v1);
  uint64_t v16 = OUTLINED_FUNCTION_40_8();
  OUTLINED_FUNCTION_52_5(v16);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32_9();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27_11();
  OUTLINED_FUNCTION_45_6();
  type metadata accessor for SFCard();
  if (!OUTLINED_FUNCTION_54_6()) {
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_30_12();

  uint64_t v17 = type metadata accessor for RGPluginModel();
  OUTLINED_FUNCTION_10_19(v17);
  if (v21)
  {
    outlined destroy of RGPluginModel?(v0);
LABEL_7:
    uint64_t v22 = OUTLINED_FUNCTION_1_13();
    v23(v22);
    uint64_t v24 = OUTLINED_FUNCTION_5_11(v31);
    __swift_storeEnumTagSinglePayload(v32, 1, 1, v24);
    OUTLINED_FUNCTION_22_14();
    goto LABEL_8;
  }
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel();
  OUTLINED_FUNCTION_29_10();
  OUTLINED_FUNCTION_13_17();
  char v18 = OUTLINED_FUNCTION_21_11();
  v19(v18);
  OUTLINED_FUNCTION_42_5();
  if (!v21 & v20) {
    goto LABEL_7;
  }
  uint64_t v27 = OUTLINED_FUNCTION_1_13();
  v28(v27);
  static RGPluginModel.bundleName.getter();
  OUTLINED_FUNCTION_20_10();
LABEL_8:
  uint64_t v25 = OUTLINED_FUNCTION_7_17();
  v26(v25);
  OUTLINED_FUNCTION_119_0();
}

{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  char v16;
  char v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  unsigned char v28[120];
  Swift::String v29;

  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_184_0();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_184_0();
  uint64_t v27 = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = OUTLINED_FUNCTION_2_6();
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_3_17();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_31_9();
  memcpy(v28, v0, sizeof(v28));
  OUTLINED_FUNCTION_28_9();
  OUTLINED_FUNCTION_34_8();
  v29._countAndFlagsBits = HotelReservationEntity.description.getter();
  OUTLINED_FUNCTION_48_6(v29);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27_11();
  OUTLINED_FUNCTION_49_6();
  type metadata accessor for SFCard();
  if (!OUTLINED_FUNCTION_15_14()) {
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_30_12();

  Swift::String v13 = type metadata accessor for RGPluginModel();
  OUTLINED_FUNCTION_18_16(v13);
  if (v17)
  {
    outlined destroy of RGPluginModel?(v1);
LABEL_7:
    char v18 = OUTLINED_FUNCTION_1_13();
    v19(v18);
    uint64_t v20 = OUTLINED_FUNCTION_5_11(v27);
    OUTLINED_FUNCTION_26_13(v20, v21, v22, v20);
    OUTLINED_FUNCTION_22_14();
    goto LABEL_8;
  }
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel();
  OUTLINED_FUNCTION_35_7();
  OUTLINED_FUNCTION_19_11();
  uint64_t v14 = OUTLINED_FUNCTION_24_11();
  v15(v14);
  OUTLINED_FUNCTION_253();
  if (!v17 & v16) {
    goto LABEL_7;
  }
  uint64_t v25 = OUTLINED_FUNCTION_1_13();
  v26(v25);
  static RGPluginModel.bundleName.getter();
  OUTLINED_FUNCTION_39_5();
  OUTLINED_FUNCTION_33_7();
LABEL_8:
  uint64_t v23 = OUTLINED_FUNCTION_7_17();
  v24(v23);
  OUTLINED_FUNCTION_119_0();
}

{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  char v26;
  char v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[12];
  Swift::String v43;

  OUTLINED_FUNCTION_104_0();
  uint64_t v41 = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_184_0();
  uint64_t v40 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_184_0();
  uint64_t v38 = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = OUTLINED_FUNCTION_2_6();
  Swift::String v12 = OUTLINED_FUNCTION_81(v11);
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_3_17();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_31_9();
  memcpy(v42, v0, sizeof(v42));
  OUTLINED_FUNCTION_28_9();
  OUTLINED_FUNCTION_34_8();
  RestaurantReservationEntity.description.getter(v15, v16, v17, v18, v19, v20, v21, v22, v37, v38, v40, v41, v42[0], v42[1], v42[2], v42[3], v42[4], v42[5], v42[6],
    v42[7],
    v42[8],
    v42[9],
    v42[10],
    v42[11]);
  OUTLINED_FUNCTION_48_6(v43);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27_11();
  OUTLINED_FUNCTION_49_6();
  type metadata accessor for SFCard();
  if (!OUTLINED_FUNCTION_15_14()) {
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_30_12();

  uint64_t v23 = type metadata accessor for RGPluginModel();
  OUTLINED_FUNCTION_18_16(v23);
  if (v27)
  {
    outlined destroy of RGPluginModel?(v1);
LABEL_7:
    unint64_t v28 = OUTLINED_FUNCTION_1_13();
    v29(v28);
    uint64_t v30 = OUTLINED_FUNCTION_5_11(v39);
    OUTLINED_FUNCTION_26_13(v30, v31, v32, v30);
    OUTLINED_FUNCTION_22_14();
    goto LABEL_8;
  }
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel();
  OUTLINED_FUNCTION_35_7();
  OUTLINED_FUNCTION_19_11();
  uint64_t v24 = OUTLINED_FUNCTION_24_11();
  v25(v24);
  OUTLINED_FUNCTION_253();
  if (!v27 & v26) {
    goto LABEL_7;
  }
  uint64_t v35 = OUTLINED_FUNCTION_1_13();
  v36(v35);
  static RGPluginModel.bundleName.getter();
  OUTLINED_FUNCTION_39_5();
  OUTLINED_FUNCTION_33_7();
LABEL_8:
  uint64_t v33 = OUTLINED_FUNCTION_7_17();
  v34(v33);
  OUTLINED_FUNCTION_119_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  char v21;
  char v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_184_0();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_11_13(v7, v32);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  uint64_t v9 = OUTLINED_FUNCTION_81(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = OUTLINED_FUNCTION_2_6();
  uint64_t v11 = OUTLINED_FUNCTION_81(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_3_17();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_8_10();
  OUTLINED_FUNCTION_25_10();
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  outlined retain of TicketedTransportationEntity(v0);
  EntityProperty.wrappedValue.getter();
  outlined release of TicketedTransportationEntity(v0);
  v14._countAndFlagsBits = MEMORY[0x25A2C7E60](v34, MEMORY[0x263F8D310]);
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32_9();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27_11();
  OUTLINED_FUNCTION_45_6();
  uint64_t v15 = (void *)type metadata accessor for SFCard();
  uint64_t v16 = *(void *)(v2 + 88);
  uint64_t v17 = *(void *)(v2 + 96);
  outlined copy of Data?(v16, v17);
  if (!SFCard.init(data:)(v16, v17)) {
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_30_12();

  char v18 = type metadata accessor for RGPluginModel();
  OUTLINED_FUNCTION_10_19(v18);
  if (v22)
  {
    outlined destroy of RGPluginModel?(v1);
LABEL_7:
    uint64_t v23 = OUTLINED_FUNCTION_1_13();
    v24(v23);
    uint64_t v25 = OUTLINED_FUNCTION_5_11(v33);
    OUTLINED_FUNCTION_26_13(v25, v26, v27, v25);
    OUTLINED_FUNCTION_22_14();
    goto LABEL_8;
  }
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel();
  OUTLINED_FUNCTION_29_10();
  OUTLINED_FUNCTION_13_17();
  char v19 = OUTLINED_FUNCTION_21_11();
  v20(v19);
  OUTLINED_FUNCTION_42_5();
  if (!v22 & v21) {
    goto LABEL_7;
  }
  uint64_t v30 = OUTLINED_FUNCTION_1_13();
  v31(v30);
  static RGPluginModel.bundleName.getter();
  OUTLINED_FUNCTION_39_5();
  DisplayRepresentation.init(title:snippetPluginModelData:bundleIdentifier:)();
LABEL_8:
  unint64_t v28 = OUTLINED_FUNCTION_7_17();
  v29(v28);
  OUTLINED_FUNCTION_119_0();
}

{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  char v16;
  char v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  unsigned char v28[152];
  Swift::String v29;

  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_184_0();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_184_0();
  uint64_t v27 = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = OUTLINED_FUNCTION_2_6();
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_3_17();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_31_9();
  memcpy(v28, v0, 0x90uLL);
  OUTLINED_FUNCTION_28_9();
  OUTLINED_FUNCTION_34_8();
  v29._countAndFlagsBits = VehicleReservationEntity.description.getter();
  OUTLINED_FUNCTION_48_6(v29);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27_11();
  OUTLINED_FUNCTION_49_6();
  type metadata accessor for SFCard();
  if (!OUTLINED_FUNCTION_15_14()) {
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_30_12();

  Swift::String v13 = type metadata accessor for RGPluginModel();
  OUTLINED_FUNCTION_18_16(v13);
  if (v17)
  {
    outlined destroy of RGPluginModel?(v1);
LABEL_7:
    char v18 = OUTLINED_FUNCTION_1_13();
    v19(v18);
    uint64_t v20 = OUTLINED_FUNCTION_5_11(v27);
    OUTLINED_FUNCTION_26_13(v20, v21, v22, v20);
    OUTLINED_FUNCTION_22_14();
    goto LABEL_8;
  }
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel();
  OUTLINED_FUNCTION_35_7();
  OUTLINED_FUNCTION_19_11();
  uint64_t v14 = OUTLINED_FUNCTION_24_11();
  v15(v14);
  OUTLINED_FUNCTION_253();
  if (!v17 & v16) {
    goto LABEL_7;
  }
  uint64_t v25 = OUTLINED_FUNCTION_1_13();
  v26(v25);
  static RGPluginModel.bundleName.getter();
  OUTLINED_FUNCTION_39_5();
  OUTLINED_FUNCTION_33_7();
LABEL_8:
  uint64_t v23 = OUTLINED_FUNCTION_7_17();
  v24(v23);
  OUTLINED_FUNCTION_119_0();
}

{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  char v16;
  char v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  unsigned char v28[136];
  Swift::String v29;

  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v3 = OUTLINED_FUNCTION_81(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_184_0();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_184_0();
  uint64_t v27 = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  uint64_t v8 = OUTLINED_FUNCTION_81(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = OUTLINED_FUNCTION_2_6();
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_3_17();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_31_9();
  memcpy(v28, v0, 0x80uLL);
  OUTLINED_FUNCTION_28_9();
  OUTLINED_FUNCTION_34_8();
  v29._countAndFlagsBits = TicketedShowEntity.description.getter();
  OUTLINED_FUNCTION_48_6(v29);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27_11();
  OUTLINED_FUNCTION_49_6();
  type metadata accessor for SFCard();
  if (!OUTLINED_FUNCTION_15_14()) {
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_30_12();

  Swift::String v13 = type metadata accessor for RGPluginModel();
  OUTLINED_FUNCTION_18_16(v13);
  if (v17)
  {
    outlined destroy of RGPluginModel?(v1);
LABEL_7:
    char v18 = OUTLINED_FUNCTION_1_13();
    v19(v18);
    uint64_t v20 = OUTLINED_FUNCTION_5_11(v27);
    OUTLINED_FUNCTION_26_13(v20, v21, v22, v20);
    OUTLINED_FUNCTION_22_14();
    goto LABEL_8;
  }
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel();
  OUTLINED_FUNCTION_35_7();
  OUTLINED_FUNCTION_19_11();
  uint64_t v14 = OUTLINED_FUNCTION_24_11();
  v15(v14);
  OUTLINED_FUNCTION_253();
  if (!v17 & v16) {
    goto LABEL_7;
  }
  uint64_t v25 = OUTLINED_FUNCTION_1_13();
  v26(v25);
  static RGPluginModel.bundleName.getter();
  OUTLINED_FUNCTION_39_5();
  OUTLINED_FUNCTION_33_7();
LABEL_8:
  uint64_t v23 = OUTLINED_FUNCTION_7_17();
  v24(v23);
  OUTLINED_FUNCTION_119_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  char v20;
  char v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_104_0();
  OUTLINED_FUNCTION_53_6(v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_11_13(v5, v29);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_43_7(v8, v30);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = OUTLINED_FUNCTION_2_6();
  Swift::String v12 = OUTLINED_FUNCTION_81(v11);
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_3_17();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_8_10();
  OUTLINED_FUNCTION_25_10();
  uint64_t v15 = *(void **)(v1 + 48);
  outlined retain of GenericEventEntity(v1);
  EntityProperty.wrappedValue.getter();
  outlined release of GenericEventEntity(v1);
  uint64_t v16 = OUTLINED_FUNCTION_40_8();
  OUTLINED_FUNCTION_52_5(v16);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32_9();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27_11();
  OUTLINED_FUNCTION_45_6();
  type metadata accessor for SFCard();
  if (!OUTLINED_FUNCTION_54_6()) {
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_30_12();

  uint64_t v17 = type metadata accessor for RGPluginModel();
  OUTLINED_FUNCTION_10_19(v17);
  if (v21)
  {
    outlined destroy of RGPluginModel?(v0);
LABEL_7:
    uint64_t v22 = OUTLINED_FUNCTION_1_13();
    v23(v22);
    uint64_t v24 = OUTLINED_FUNCTION_5_11(v31);
    __swift_storeEnumTagSinglePayload(v32, 1, 1, v24);
    OUTLINED_FUNCTION_22_14();
    goto LABEL_8;
  }
  lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel();
  OUTLINED_FUNCTION_29_10();
  OUTLINED_FUNCTION_13_17();
  char v18 = OUTLINED_FUNCTION_21_11();
  v19(v18);
  OUTLINED_FUNCTION_42_5();
  if (!v21 & v20) {
    goto LABEL_7;
  }
  uint64_t v27 = OUTLINED_FUNCTION_1_13();
  v28(v27);
  static RGPluginModel.bundleName.getter();
  OUTLINED_FUNCTION_20_10();
LABEL_8:
  uint64_t v25 = OUTLINED_FUNCTION_7_17();
  v26(v25);
  OUTLINED_FUNCTION_119_0();
}

uint64_t specialized CardDisplayable.displayRepresentation.getter@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v32[1] = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  MEMORY[0x270FA5388](v11 - 8);
  Swift::String v13 = (void *)((char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v15 = type metadata accessor for LocalizedStringResource();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  char v19 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v32 - v20;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
  v23._countAndFlagsBits = 0x525520616964654DLL;
  v23._object = (void *)0xEE006D657469204CLL;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v23);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v24);
  LocalizedStringResource.init(stringInterpolation:)();
  type metadata accessor for SFCard();
  outlined copy of Data?(a1, a2);
  id v25 = SFCard.init(data:)(a1, a2);
  if (v25)
  {
    unint64_t v26 = v25;
    SFCard.snippetPluginModel.getter(v13);

    uint64_t v27 = type metadata accessor for RGPluginModel();
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v27) == 1)
    {
      outlined destroy of RGPluginModel?((uint64_t)v13);
    }
    else
    {
      lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel();
      SnippetPluginModel.data.getter();
      unint64_t v29 = v28;
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v27 - 8) + 8))(v13, v27);
      if (v29 >> 60 != 15)
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
        static RGPluginModel.bundleName.getter();
        DisplayRepresentation.init(title:snippetPluginModelData:bundleIdentifier:)();
        return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
      }
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v15);
  uint64_t v30 = type metadata accessor for DisplayRepresentation.Image();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v30);
  DisplayRepresentation.init(title:subtitle:image:)();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
}

uint64_t static MediaEntity.urlRepresentation.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityURLRepresentation<MediaEntity>.StringInterpolation.Token);
  OUTLINED_FUNCTION_1();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_59_0();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityURLRepresentation<MediaEntity>.StringInterpolation);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_12_7();
  lazy protocol witness table accessor for type MediaEntity and conformance MediaEntity();
  EntityURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v6);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v0, *MEMORY[0x263EFBDB0], v1);
  EntityURLRepresentation.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  EntityURLRepresentation.StringInterpolation.appendLiteral(_:)(v7);
  return EntityURLRepresentation.init(stringInterpolation:)();
}

uint64_t MediaEntity.id.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for MediaEntity.id : MediaEntity@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MediaEntity.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t key path setter for MediaEntity.id : MediaEntity()
{
  return MediaEntity.id.setter();
}

uint64_t MediaEntity.id.setter()
{
  return EntityProperty.wrappedValue.setter();
}

void (*MediaEntity.id.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t MediaEntity.$id.getter()
{
  return EntityProperty.projectedValue.getter();
}

double MediaEntity.init(id:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_12_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  OUTLINED_FUNCTION_36_8();
  uint64_t v5 = MEMORY[0x25A2C4900](v1);
  swift_retain_n();
  OUTLINED_FUNCTION_66_3();
  EntityProperty.wrappedValue.setter();
  swift_release();
  outlined consume of Data?(0, 0xF000000000000000);
  swift_release();
  outlined consume of Data?(0, 0xF000000000000000);
  swift_retain();
  OUTLINED_FUNCTION_66_3();
  swift_release();
  *(void *)a1 = v5;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_258665BD0;
  return result;
}

uint64_t MediaEntity.Query.entities(for:)()
{
  OUTLINED_FUNCTION_27();
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_81(v2);
  *(void *)(v0 + 40) = swift_task_alloc();
  return MEMORY[0x270FA2498](MediaEntity.Query.entities(for:), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v13;
  uint64_t v14;

  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    Swift::String v13 = MEMORY[0x263F8EE78];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
    uint64_t v3 = v13;
    uint64_t v4 = (uint64_t *)(v1 + 40);
    do
    {
      uint64_t v5 = v0[5];
      Swift::String v7 = *(v4 - 1);
      Swift::String v6 = *v4;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_36_8();
      uint64_t v8 = MEMORY[0x25A2C4900](v5);
      v0[2] = v7;
      v0[3] = v6;
      swift_retain_n();
      OUTLINED_FUNCTION_66_3();
      EntityProperty.wrappedValue.setter();
      swift_release();
      outlined consume of Data?(0, 0xF000000000000000);
      swift_release();
      outlined consume of Data?(0, 0xF000000000000000);
      swift_retain();
      OUTLINED_FUNCTION_66_3();
      swift_release();
      uint64_t v9 = *(void *)(v13 + 16);
      if (v9 >= *(void *)(v13 + 24) >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      *(void *)(v13 + 16) = v9 + 1;
      uint64_t v10 = v13 + 24 * v9;
      *(void *)(v10 + 32) = v8;
      *(_OWORD *)(v10 + 40) = xmmword_258665BD0;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(v3);
}

uint64_t protocol witness for EntityQuery.entities(for:) in conformance MediaEntity.Query()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for EntityQuery.entities(for:) in conformance MediaEntity.Query;
  return MediaEntity.Query.entities(for:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_27();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_2();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  Swift::String v6 = swift_task_dealloc();
  Swift::String v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    Swift::String v6 = v3;
  }
  return v7(v6);
}

uint64_t protocol witness for EntityQuery.suggestedEntities() in conformance MediaEntity.Query(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::String v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = partial apply for closure #1 in SmartChunkingPreprocessing.preprocess(data:query:);
  return MEMORY[0x270EE0E30](a1, a2, a3);
}

uint64_t protocol witness for DynamicOptionsProvider.results() in conformance MediaEntity.Query(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = lazy protocol witness table accessor for type MediaEntity.Query and conformance MediaEntity.Query();
  *uint64_t v5 = v2;
  v5[1] = protocol witness for DynamicOptionsProvider.results() in conformance MediaEntity.Query;
  return MEMORY[0x270EE0E40](a1, a2, v6);
}

uint64_t protocol witness for DynamicOptionsProvider.defaultResult() in conformance MediaEntity.Query(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::String v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = partial apply for closure #1 in SmartChunkingPreprocessing.preprocess(data:query:);
  return MEMORY[0x270EE1A10](a1, a2, a3);
}

uint64_t (*static MediaEntity.defaultQuery.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t static MediaEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static MediaEntity.typeDisplayRepresentation);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static MediaEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static MediaEntity.typeDisplayRepresentation);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static MediaEntity.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  __swift_project_value_buffer(v0, (uint64_t)static MediaEntity.typeDisplayRepresentation);
  swift_beginAccess();
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

uint64_t MediaEntity.description.getter()
{
  return 0x525520616964654DLL;
}

uint64_t MediaEntity.cardData.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  outlined copy of Data?(v1, *(void *)(v0 + 16));
  return v1;
}

uint64_t MediaEntity.cardData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = outlined consume of Data?(*(void *)(v2 + 8), *(void *)(v2 + 16));
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*MediaEntity.cardData.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t protocol witness for CardDisplayable.description.getter in conformance MediaEntity()
{
  return 0x525520616964654DLL;
}

uint64_t (*protocol witness for CardDisplayable.cardData.modify in conformance MediaEntity())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t protocol witness for CustomURLRepresentationParameterConvertible.urlRepresentationParameter.getter in conformance MediaEntity()
{
  lazy protocol witness table accessor for type MediaEntity and conformance MediaEntity();
  uint64_t v2 = URLRepresentableEntity.urlRepresentationParameter.getter();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return protocol witness for CustomURLRepresentationParameterConvertible.urlRepresentationParameter.getter in conformance MediaEntity(v3, v0, v2, v1);
}

uint64_t protocol witness for Identifiable.id.getter in conformance MediaEntity@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MediaEntity.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for InstanceDisplayRepresentable.displayRepresentation.getter in conformance MediaEntity@<X0>(uint64_t a1@<X8>)
{
  return specialized CardDisplayable.displayRepresentation.getter(*(void *)(v1 + 8), *(void *)(v1 + 16), a1);
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance MediaEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type MediaEntity and conformance MediaEntity();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance MediaEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type MediaEntity and conformance MediaEntity();
  return MEMORY[0x270EE1D98](a1, v2);
}

unint64_t lazy protocol witness table accessor for type MediaEntity.Query and conformance MediaEntity.Query()
{
  unint64_t result = lazy protocol witness table cache variable for type MediaEntity.Query and conformance MediaEntity.Query;
  if (!lazy protocol witness table cache variable for type MediaEntity.Query and conformance MediaEntity.Query)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MediaEntity.Query and conformance MediaEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MediaEntity.Query and conformance MediaEntity.Query;
  if (!lazy protocol witness table cache variable for type MediaEntity.Query and conformance MediaEntity.Query)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MediaEntity.Query and conformance MediaEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MediaEntity.Query and conformance MediaEntity.Query;
  if (!lazy protocol witness table cache variable for type MediaEntity.Query and conformance MediaEntity.Query)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MediaEntity.Query and conformance MediaEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MediaEntity.Query and conformance MediaEntity.Query;
  if (!lazy protocol witness table cache variable for type MediaEntity.Query and conformance MediaEntity.Query)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MediaEntity.Query and conformance MediaEntity.Query);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [MediaEntity] and conformance <A> [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [MediaEntity] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [MediaEntity] and conformance <A> [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [MediaEntity]);
    lazy protocol witness table accessor for type MediaEntity and conformance MediaEntity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [MediaEntity] and conformance <A> [A]);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for MediaEntity(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type MediaEntity and conformance MediaEntity();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t associated type witness table accessor for Identifiable.ID : EntityIdentifierConvertible in MediaEntity()
{
  return MEMORY[0x263EFC020];
}

uint64_t associated type witness table accessor for Identifiable.ID : Hashable in MediaEntity()
{
  return MEMORY[0x263F8D320];
}

unint64_t lazy protocol witness table accessor for type EmptyResolverSpecification<MediaEntity> and conformance EmptyResolverSpecification<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type EmptyResolverSpecification<MediaEntity> and conformance EmptyResolverSpecification<A>;
  if (!lazy protocol witness table cache variable for type EmptyResolverSpecification<MediaEntity> and conformance EmptyResolverSpecification<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for EmptyResolverSpecification<MediaEntity>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmptyResolverSpecification<MediaEntity> and conformance EmptyResolverSpecification<A>);
  }
  return result;
}

uint64_t destroy for MediaEntity(uint64_t a1)
{
  uint64_t result = swift_release();
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    return outlined consume of Data._Representation(v4, v3);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MediaEntity(uint64_t a1, void *a2)
{
  *(void *)a1 = *a2;
  unint64_t v3 = a2 + 1;
  unint64_t v4 = a2[2];
  swift_retain();
  OUTLINED_FUNCTION_253();
  if (!v6 & v5)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  }
  else
  {
    uint64_t v7 = *v3;
    outlined copy of Data._Representation(*v3, v4);
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v4;
  }
  return a1;
}

void *assignWithCopy for MediaEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  unint64_t v4 = a2 + 1;
  unint64_t v5 = a2[2];
  if (a1[2] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      outlined copy of Data._Representation(*v4, v5);
      uint64_t v8 = a1[1];
      unint64_t v9 = a1[2];
      a1[1] = v7;
      a1[2] = v5;
      outlined consume of Data._Representation(v8, v9);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 1));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  outlined copy of Data._Representation(*v4, v5);
  a1[1] = v6;
  a1[2] = v5;
  return a1;
}

void *assignWithTake for MediaEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  unint64_t v4 = a2 + 1;
  unint64_t v5 = a1[2];
  if (v5 >> 60 != 15)
  {
    unint64_t v6 = a2[2];
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = a1[1];
      a1[1] = *v4;
      a1[2] = v6;
      outlined consume of Data._Representation(v7, v5);
      return a1;
    }
    outlined destroy of Data((uint64_t)(a1 + 1));
  }
  *(_OWORD *)(a1 + 1) = *(_OWORD *)v4;
  return a1;
}

ValueMetadata *type metadata accessor for MediaEntity()
{
  return &type metadata for MediaEntity;
}

ValueMetadata *type metadata accessor for MediaEntity.Query()
{
  return &type metadata for MediaEntity.Query;
}

unint64_t type metadata accessor for SFCard()
{
  unint64_t result = lazy cache variable for type metadata for SFCard;
  if (!lazy cache variable for type metadata for SFCard)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for SFCard);
  }
  return result;
}

uint64_t outlined destroy of RGPluginModel?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel()
{
  unint64_t result = lazy protocol witness table cache variable for type RGPluginModel and conformance RGPluginModel;
  if (!lazy protocol witness table cache variable for type RGPluginModel and conformance RGPluginModel)
  {
    type metadata accessor for RGPluginModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RGPluginModel and conformance RGPluginModel);
  }
  return result;
}

uint64_t protocol witness for CustomURLRepresentationParameterConvertible.urlRepresentationParameter.getter in conformance MediaEntity(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

uint64_t outlined retain of TicketedTransportationEntity(uint64_t a1)
{
  uint64_t v4 = *(void *)(a1 + 88);
  unint64_t v3 = *(void *)(a1 + 96);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v4, v3);
  return a1;
}

uint64_t outlined retain of BusinessCardEntity(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  unint64_t v4 = *(void *)(a1 + 80);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Data?(v2, v4);
  return a1;
}

uint64_t OUTLINED_FUNCTION_1_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_6()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

uint64_t OUTLINED_FUNCTION_5_11(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
  return type metadata accessor for DisplayRepresentation.Image();
}

uint64_t OUTLINED_FUNCTION_7_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_10()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t OUTLINED_FUNCTION_9_11()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t OUTLINED_FUNCTION_10_19(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

void OUTLINED_FUNCTION_11_13(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_12_15()
{
  return type metadata accessor for LocalizedStringResource();
}

id OUTLINED_FUNCTION_15_14()
{
  outlined copy of Data?(v1, v0);
  return SFCard.init(data:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_18_16(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_20_10()
{
  return DisplayRepresentation.init(title:snippetPluginModelData:bundleIdentifier:)();
}

uint64_t OUTLINED_FUNCTION_21_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_22_14()
{
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t OUTLINED_FUNCTION_24_11()
{
  return v0;
}

void OUTLINED_FUNCTION_25_10()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t OUTLINED_FUNCTION_26_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(v4, 1, 1, a4);
}

void OUTLINED_FUNCTION_27_11()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t OUTLINED_FUNCTION_28_9()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t OUTLINED_FUNCTION_29_10()
{
  return SnippetPluginModel.data.getter();
}

uint64_t OUTLINED_FUNCTION_30_12()
{
  return SFCard.snippetPluginModel.getter(v0);
}

void OUTLINED_FUNCTION_32_9()
{
  uint64_t v2 = *(void *)(v0 - 96);
  uint64_t v3 = *(void *)(v0 - 88);
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)&v2);
}

uint64_t OUTLINED_FUNCTION_33_7()
{
  return DisplayRepresentation.init(title:snippetPluginModelData:bundleIdentifier:)();
}

void OUTLINED_FUNCTION_34_8()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t OUTLINED_FUNCTION_35_7()
{
  return SnippetPluginModel.data.getter();
}

uint64_t OUTLINED_FUNCTION_36_8()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t OUTLINED_FUNCTION_37_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_38_6(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(*(void *)(v1 - 128), 1, 1, a1);
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t OUTLINED_FUNCTION_40_8()
{
  if (*(void *)(v0 - 104)) {
    return *(void *)(v0 - 112);
  }
  else {
    return 0;
  }
}

id OUTLINED_FUNCTION_41_8()
{
  outlined copy of Data?(v0, v1);
  return SFCard.init(data:)(v0, v1);
}

void OUTLINED_FUNCTION_43_7(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_45_6()
{
  return LocalizedStringResource.init(stringInterpolation:)();
}

void OUTLINED_FUNCTION_48_6(Swift::String a1)
{
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_49_6()
{
  return LocalizedStringResource.init(stringInterpolation:)();
}

void OUTLINED_FUNCTION_52_5(uint64_t a1)
{
  uint64_t v3 = v1;
  String.append(_:)(*(Swift::String *)&a1);
}

void OUTLINED_FUNCTION_53_6(uint64_t a1@<X8>)
{
  *(void *)(v1 - 120) = a1;
}

id OUTLINED_FUNCTION_54_6()
{
  outlined copy of Data?(v0, v1);
  return SFCard.init(data:)(v0, v1);
}

OmniSearch::SourceDocument __swiftcall SourceDocument.init()()
{
  *uint64_t v0 = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t static SourceDocument.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static SourceDocument.typeDisplayRepresentation);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static SourceDocument.typeDisplayRepresentation.setter(uint64_t a1)
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static SourceDocument.typeDisplayRepresentation);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 24))(v3, a1, v2);
  swift_endAccess();
  uint64_t v4 = OUTLINED_FUNCTION_79_0();
  return v5(v4);
}

uint64_t (*static SourceDocument.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  __swift_project_value_buffer(v0, (uint64_t)static SourceDocument.typeDisplayRepresentation);
  swift_beginAccess();
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

uint64_t SourceDocument.displayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  MEMORY[0x270FA5388](v2 - 8);
  OUTLINED_FUNCTION_184_0();
  uint64_t v32 = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  MEMORY[0x270FA5388](v4 - 8);
  OUTLINED_FUNCTION_184_0();
  uint64_t v31 = v5;
  uint64_t v6 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  MEMORY[0x270FA5388](v6 - 8);
  OUTLINED_FUNCTION_15();
  uint64_t v7 = type metadata accessor for LocalizedStringResource();
  OUTLINED_FUNCTION_1();
  uint64_t v9 = v8;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  Swift::String v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = *v1;
  uint64_t v17 = (void *)v1[1];
  uint64_t v18 = (void *)v1[3];
  uint64_t v30 = v1[2];
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._countAndFlagsBits = 0x203A656372756F53;
  v19._object = (void *)0xE800000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
  if (v17) {
    uint64_t v20 = v16;
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17) {
    uint64_t v21 = v17;
  }
  else {
    uint64_t v21 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v22._countAndFlagsBits = v20;
  v22._object = v21;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 2108704;
  v23._object = (void *)0xE300000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v23);
  if (v18) {
    uint64_t v24 = v30;
  }
  else {
    uint64_t v24 = 0;
  }
  if (v18) {
    id v25 = v18;
  }
  else {
    id v25 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v26._countAndFlagsBits = v24;
  v26._object = v25;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v26);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v27);
  LocalizedStringResource.init(stringInterpolation:)();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v15, v7);
  __swift_storeEnumTagSinglePayload(v31, 1, 1, v7);
  uint64_t v28 = type metadata accessor for DisplayRepresentation.Image();
  __swift_storeEnumTagSinglePayload(v32, 1, 1, v28);
  DisplayRepresentation.init(title:subtitle:image:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v7);
}

uint64_t SourceDocument.bundleId.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t SourceDocument.bundleId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SourceDocument.bundleId.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SourceDocument.documentId.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t SourceDocument.documentId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SourceDocument.documentId.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

OmniSearch::SourceDocument __swiftcall SourceDocument.init(bundleId:documentId:)(Swift::String_optional bundleId, Swift::String_optional documentId)
{
  *uint64_t v2 = bundleId;
  v2[1] = documentId;
  result.documentId = documentId;
  result.bundleId = bundleId;
  return result;
}

uint64_t static SourceDocument.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  if (!v3)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v6) {
    return 0;
  }
  BOOL v9 = *a1 == *a2 && v3 == v6;
  if (v9 || (v10 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v10 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v8)
      {
        if (v4 == v7 && v5 == v8) {
          return 1;
        }
        OUTLINED_FUNCTION_79_0();
        if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
          return 1;
        }
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t SourceDocument.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEA00000000006449)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t SourceDocument.CodingKeys.stringValue.getter(char a1)
{
  if (a1) {
    return 0x746E656D75636F64;
  }
  else {
    return 0x6449656C646E7562;
  }
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SourceDocument.CodingKeys()
{
  return SourceDocument.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SourceDocument.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = SourceDocument.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SourceDocument.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SourceDocument.CodingKeys and conformance SourceDocument.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SourceDocument.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SourceDocument.CodingKeys and conformance SourceDocument.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SourceDocument.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SourceDocument.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_15();
  uint64_t v8 = v7 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SourceDocument.CodingKeys and conformance SourceDocument.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v10) {
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

unint64_t lazy protocol witness table accessor for type SourceDocument.CodingKeys and conformance SourceDocument.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type SourceDocument.CodingKeys and conformance SourceDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type SourceDocument.CodingKeys and conformance SourceDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SourceDocument.CodingKeys and conformance SourceDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SourceDocument.CodingKeys and conformance SourceDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type SourceDocument.CodingKeys and conformance SourceDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SourceDocument.CodingKeys and conformance SourceDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SourceDocument.CodingKeys and conformance SourceDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type SourceDocument.CodingKeys and conformance SourceDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SourceDocument.CodingKeys and conformance SourceDocument.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SourceDocument.CodingKeys and conformance SourceDocument.CodingKeys;
  if (!lazy protocol witness table cache variable for type SourceDocument.CodingKeys and conformance SourceDocument.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SourceDocument.CodingKeys and conformance SourceDocument.CodingKeys);
  }
  return result;
}

uint64_t SourceDocument.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SourceDocument.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_15();
  uint64_t v11 = v10 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SourceDocument.CodingKeys and conformance SourceDocument.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    uint64_t v13 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v15 = v14;
    swift_bridgeObjectRetain();
    uint64_t v16 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v18 = v17;
    uint64_t v19 = v16;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v13;
    a2[1] = v15;
    a2[2] = v19;
    a2[3] = v18;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t protocol witness for Decodable.init(from:) in conformance SourceDocument@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SourceDocument.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SourceDocument(void *a1)
{
  return SourceDocument.encode(to:)(a1);
}

unint64_t lazy protocol witness table accessor for type SourceDocument and conformance SourceDocument()
{
  unint64_t result = lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument;
  if (!lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument;
  if (!lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument;
  if (!lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument;
  if (!lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument;
  if (!lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument;
  if (!lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument;
  if (!lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument;
  if (!lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument;
  if (!lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument;
  if (!lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument;
  if (!lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument;
  if (!lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SourceDocument and conformance SourceDocument);
  }
  return result;
}

uint64_t associated type witness table accessor for AppEntity.DefaultQuery : EntityQuery in SourceDocument()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type _TransientAppEntityQuery<SourceDocument> and conformance _TransientAppEntityQuery<A>, &demangling cache variable for type metadata for _TransientAppEntityQuery<SourceDocument>);
}

uint64_t protocol witness for static AppEntity.defaultQuery.getter in conformance SourceDocument(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SourceDocument and conformance SourceDocument();
  return MEMORY[0x270EE09F0](a1, v2);
}

unint64_t lazy protocol witness table accessor for type UUID and conformance UUID()
{
  unint64_t result = lazy protocol witness table cache variable for type UUID and conformance UUID;
  if (!lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  }
  return result;
}

uint64_t protocol witness for Identifiable.id.getter in conformance SourceDocument()
{
  lazy protocol witness table accessor for type SourceDocument and conformance SourceDocument();
  return UUID.init()();
}

uint64_t associated type witness table accessor for _IntentValue.Specification : ResolverSpecification in SourceDocument()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type EmptyResolverSpecification<SourceDocument> and conformance EmptyResolverSpecification<A>, &demangling cache variable for type metadata for EmptyResolverSpecification<SourceDocument>);
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance SourceDocument(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SourceDocument and conformance SourceDocument();
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance SourceDocument(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SourceDocument and conformance SourceDocument();
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t destroy for SourceDocument()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SourceDocument(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SourceDocument(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for SourceDocument(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SourceDocument(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SourceDocument(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SourceDocument()
{
  return &type metadata for SourceDocument;
}

unsigned char *storeEnumTagSinglePayload for SourceDocument.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x258005CC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

void *type metadata accessor for SourceDocument.CodingKeys()
{
  return &unk_2706AB0E8;
}

uint64_t OUTLINED_FUNCTION_2_7()
{
  return v0;
}

uint64_t SearchAppEntity.id.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchAppEntity.id : SearchAppEntity()
{
  return SearchAppEntity.id.setter();
}

uint64_t SearchAppEntity.id.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*SearchAppEntity.id.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchAppEntity.$id.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchAppEntity.bundleId.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchAppEntity.bundleId : SearchAppEntity()
{
  return SearchAppEntity.bundleId.setter();
}

uint64_t SearchAppEntity.bundleId.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*SearchAppEntity.bundleId.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchAppEntity.$bundleId.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchAppEntity.typeId.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchAppEntity.typeId : SearchAppEntity()
{
  return SearchAppEntity.typeId.setter();
}

uint64_t SearchAppEntity.typeId.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*SearchAppEntity.typeId.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchAppEntity.$typeId.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchAppEntity.protocolId.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for SearchAppEntity.protocolId : SearchAppEntity()
{
  return SearchAppEntity.protocolId.setter();
}

uint64_t SearchAppEntity.protocolId.setter()
{
  return OUTLINED_FUNCTION_6_14();
}

uint64_t (*SearchAppEntity.protocolId.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchAppEntity.$protocolId.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchAppEntity.shouldOpen.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t SearchAppEntity.shouldOpen.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t (*SearchAppEntity.shouldOpen.modify())()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_4_7((uint64_t)v1);
  *(void *)(v0 + 32) = EntityProperty.wrappedValue.modify();
  return MemoryCreationQUResult.version.modify;
}

uint64_t SearchAppEntity.$shouldOpen.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t SearchAppEntity.title.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t SearchAppEntity.title.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v0;
  return result;
}

uint64_t (*SearchAppEntity.title.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchAppEntity.sourceResult.getter()
{
  return SearchAppEntity.sourceResult.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  uint64_t v2 = OUTLINED_FUNCTION_27_7();
  unsigned int v4 = v3(v2);
  return outlined init with copy of PQAVerificationModelProtocol?(v1 + *(int *)(v4 + 40), v0, &demangling cache variable for type metadata for SearchResult?);
}

uint64_t type metadata accessor for SearchAppEntity(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for SearchAppEntity);
}

uint64_t SearchAppEntity.sourceResult.setter(uint64_t a1)
{
  return SearchAppEntity.sourceResult.setter(a1, type metadata accessor for SearchAppEntity);
}

uint64_t (*SearchAppEntity.sourceResult.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

id SearchAppEntity.card.getter()
{
  type metadata accessor for SFCard();
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SearchAppEntity(0) + 44));
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  outlined copy of Data?(*v1, v3);
  return SFCard.init(data:)(v2, v3);
}

uint64_t key path setter for SearchAppEntity.card : SearchAppEntity(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  return SearchAppEntity.card.setter(v1);
}

uint64_t SearchAppEntity.card.setter(void *a1)
{
  uint64_t v2 = v1;
  if (a1)
  {
    uint64_t v4 = SFCard.data.getter();
    unint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v6 = 0xF000000000000000;
  }
  uint64_t v7 = v2 + *(int *)(type metadata accessor for SearchAppEntity(0) + 44);
  uint64_t result = outlined consume of Data?(*(void *)v7, *(void *)(v7 + 8));
  *(void *)uint64_t v7 = v4;
  *(void *)(v7 + 8) = v6;
  return result;
}

void (*SearchAppEntity.card.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)(a1 + 8) = v1;
  type metadata accessor for SFCard();
  uint64_t v3 = *(int *)(type metadata accessor for SearchAppEntity(0) + 44);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  outlined copy of Data?(*v4, v6);
  *(void *)a1 = SFCard.init(data:)(v5, v6);
  return SearchAppEntity.card.modify;
}

void SearchAppEntity.card.modify(uint64_t a1)
{
  uint64_t v2 = (void *)OUTLINED_FUNCTION_160_1(a1);
  if (v3)
  {
    id v13 = v2;
    if (v2)
    {
      id v4 = v2;
      uint64_t v5 = SFCard.data.getter();
      unint64_t v7 = v6;
    }
    else
    {
      uint64_t v5 = 0;
      unint64_t v7 = 0xF000000000000000;
    }
    uint64_t v11 = *(void *)(v1 + 8) + *(int *)(v1 + 16);
    outlined consume of Data?(*(void *)v11, *(void *)(v11 + 8));
    *(void *)uint64_t v11 = v5;
    *(void *)(v11 + 8) = v7;
  }
  else
  {
    if (v2)
    {
      id v14 = v2;
      uint64_t v8 = SFCard.data.getter();
      unint64_t v10 = v9;
    }
    else
    {
      uint64_t v8 = 0;
      unint64_t v10 = 0xF000000000000000;
    }
    uint64_t v12 = *(void *)(v1 + 8) + *(int *)(v1 + 16);
    outlined consume of Data?(*(void *)v12, *(void *)(v12 + 8));
    *(void *)uint64_t v12 = v8;
    *(void *)(v12 + 8) = v10;
  }
}

uint64_t SearchAppEntity.init()()
{
  OUTLINED_FUNCTION_27_7();
  type metadata accessor for UUID();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = OUTLINED_FUNCTION_19_12();
  uint64_t v4 = OUTLINED_FUNCTION_81(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_18_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  LocalizedStringResource.init(stringLiteral:)();
  *uint64_t v0 = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_17_12();
  v0[1] = MEMORY[0x25A2C4900](v1);
  OUTLINED_FUNCTION_26_14();
  v0[2] = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_13_18();
  v0[3] = MEMORY[0x25A2C4900](v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Bool>);
  OUTLINED_FUNCTION_12_16();
  v0[4] = MEMORY[0x25A2C4910](v1);
  uint64_t v5 = type metadata accessor for SearchAppEntity(0);
  v0[5] = 0;
  v0[6] = 0;
  uint64_t v6 = (uint64_t)v0 + *(int *)(v5 + 40);
  uint64_t v7 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_32(v6, v8, v9, v7);
  *(_OWORD *)((char *)v0 + *(int *)(v5 + 44)) = xmmword_258665BD0;
  UUID.init()();
  UUID.uuidString.getter();
  uint64_t v10 = OUTLINED_FUNCTION_161_1();
  v11(v10);
  EntityProperty.wrappedValue.setter();
  EntityProperty.wrappedValue.setter();
  EntityProperty.wrappedValue.setter();
  EntityProperty.wrappedValue.setter();
  swift_bridgeObjectRelease();
  v0[5] = 0;
  v0[6] = 0;
  return EntityProperty.wrappedValue.setter();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchAppEntity.validateParameters()()
{
  uint64_t v4 = v1;
  type metadata accessor for SearchAppEntity(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_3_18();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_43_8();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_42_6();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v24 - v9;
  EntityProperty.wrappedValue.getter();
  unint64_t v11 = v25;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_44_9();
  outlined init with copy of SearchAppEntity(v4, (uint64_t)v10, (void (*)(void))type metadata accessor for SearchAppEntity);
  if (v11)
  {
    EntityProperty.wrappedValue.getter();
    unint64_t v12 = v25;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_44_9();
    outlined destroy of SearchAppEntity((uint64_t)v10, (void (*)(void))type metadata accessor for SearchAppEntity);
    outlined init with copy of SearchAppEntity(v4, v3, (void (*)(void))type metadata accessor for SearchAppEntity);
    if (v12)
    {
      EntityProperty.wrappedValue.getter();
      uint64_t v14 = v24;
      unint64_t v13 = v25;
      swift_bridgeObjectRelease();
      if ((v13 & 0x2000000000000000) != 0) {
        uint64_t v15 = HIBYTE(v13) & 0xF;
      }
      else {
        uint64_t v15 = v14 & 0xFFFFFFFFFFFFLL;
      }
      outlined destroy of SearchAppEntity(v3, (void (*)(void))type metadata accessor for SearchAppEntity);
      if (v15) {
        return;
      }
      goto LABEL_10;
    }
  }
  else
  {
    outlined destroy of SearchAppEntity((uint64_t)v10, (void (*)(void))type metadata accessor for SearchAppEntity);
    outlined init with copy of SearchAppEntity(v4, v3, (void (*)(void))type metadata accessor for SearchAppEntity);
  }
  outlined destroy of SearchAppEntity(v3, (void (*)(void))type metadata accessor for SearchAppEntity);
LABEL_10:
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static Logging.search);
  outlined init with copy of SearchAppEntity(v4, v0, (void (*)(void))type metadata accessor for SearchAppEntity);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v24 = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    outlined init with copy of SearchAppEntity(v0, v2, (void (*)(void))type metadata accessor for SearchAppEntity);
    uint64_t v21 = String.init<A>(describing:)();
    uint64_t v26 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of SearchAppEntity(v0, (void (*)(void))type metadata accessor for SearchAppEntity);
    _os_log_impl(&dword_257DC6000, v17, v18, "AppEntity failed validation: %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2C94B0](v20, -1, -1);
    MEMORY[0x25A2C94B0](v19, -1, -1);
  }
  else
  {
    outlined destroy of SearchAppEntity(v0, (void (*)(void))type metadata accessor for SearchAppEntity);
  }

  lazy protocol witness table accessor for type SearchToolError and conformance SearchToolError();
  swift_allocError();
  *Swift::String v23 = xmmword_258668A50;
  swift_willThrow();
}

uint64_t SearchAppEntity.init(_:)@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
  uint64_t v7 = OUTLINED_FUNCTION_81(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = OUTLINED_FUNCTION_44_3();
  uint64_t v9 = type metadata accessor for SearchAppEntity.Builder(v8);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_18();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v22 - v13;
  *((void *)v14 + 10) = 0;
  *((_OWORD *)v14 + 3) = 0u;
  *((_OWORD *)v14 + 4) = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((_OWORD *)v14 + 2) = 0u;
  *(_OWORD *)uint64_t v14 = 0u;
  uint64_t v15 = (char *)&v22 + *(int *)(v12 + 48) - v13;
  uint64_t v16 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_32((uint64_t)v15, v17, v18, v16);
  a1(v14);
  outlined init with copy of SearchAppEntity((uint64_t)v14, v3, (void (*)(void))type metadata accessor for SearchAppEntity.Builder);
  SearchAppEntity.init(builder:)();
  outlined destroy of SearchAppEntity((uint64_t)v14, (void (*)(void))type metadata accessor for SearchAppEntity.Builder);
  uint64_t v19 = type metadata accessor for SearchAppEntity(0);
  if (__swift_getEnumTagSinglePayload(v2, 1, v19))
  {
    outlined destroy of SearchResult?(v2, (uint64_t *)&demangling cache variable for type metadata for SearchAppEntity?);
    uint64_t v20 = 1;
  }
  else
  {
    outlined init with take of SearchAppEntity(v2, a2, (void (*)(void))type metadata accessor for SearchAppEntity);
    uint64_t v20 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a2, v20, 1, v19);
}

uint64_t SearchAppEntity.Builder.init()()
{
  uint64_t v1 = OUTLINED_FUNCTION_27_7();
  uint64_t v2 = type metadata accessor for SearchAppEntity.Builder(v1);
  *(_OWORD *)uint64_t v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(void *)(v0 + 80) = 0;
  uint64_t v3 = v0 + *(int *)(v2 + 40);
  uint64_t v4 = type metadata accessor for SearchResult(0);
  return __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
}

void SearchAppEntity.init(builder:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_27_7();
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SearchAppEntity(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_18_8();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  LocalizedStringResource.init(stringLiteral:)();
  *uint64_t v1 = MEMORY[0x25A2C4900](v7);
  OUTLINED_FUNCTION_17_12();
  uint64_t v10 = MEMORY[0x25A2C4900](v7);
  v1[1] = v10;
  OUTLINED_FUNCTION_26_14();
  v1[2] = MEMORY[0x25A2C4900](v7);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
  OUTLINED_FUNCTION_13_18();
  v1[3] = MEMORY[0x25A2C4900](v7);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Bool>);
  OUTLINED_FUNCTION_12_16();
  uint64_t v11 = MEMORY[0x25A2C4910](v7);
  v1[5] = 0;
  v1[6] = 0;
  v1[4] = v11;
  uint64_t v12 = (uint64_t)v1 + *(int *)(v8 + 40);
  uint64_t v13 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_32(v12, v14, v15, v13);
  uint64_t v16 = (char *)v1 + *(int *)(v8 + 44);
  *(_OWORD *)uint64_t v16 = xmmword_258665BD0;
  uint64_t v17 = v3[1];
  if (!v17)
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    __swift_project_value_buffer(v28, (uint64_t)static Logging.search);
    unint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.fault.getter();
    if (!OUTLINED_FUNCTION_27_12(v30)) {
      goto LABEL_19;
    }
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    uint64_t v32 = "Attempting to create SearchAppEntity without id";
    goto LABEL_18;
  }
  uint64_t v37 = *v3;
  uint64_t v38 = v17;
  swift_bridgeObjectRetain();
  EntityProperty.wrappedValue.setter();
  uint64_t v18 = v3[3];
  if (!v18)
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    __swift_project_value_buffer(v33, (uint64_t)static Logging.search);
    unint64_t v29 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.fault.getter();
    if (!OUTLINED_FUNCTION_27_12(v34)) {
      goto LABEL_19;
    }
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    uint64_t v32 = "Attempting to create SearchAppEntity without bundleId";
    goto LABEL_18;
  }
  uint64_t v37 = v3[2];
  uint64_t v38 = v18;
  swift_bridgeObjectRetain();
  EntityProperty.wrappedValue.setter();
  uint64_t v19 = v3[5];
  if (!v19)
  {
    if (one-time initialization token for search != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    __swift_project_value_buffer(v35, (uint64_t)static Logging.search);
    unint64_t v29 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.fault.getter();
    if (!OUTLINED_FUNCTION_27_12(v36)) {
      goto LABEL_19;
    }
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    uint64_t v32 = "Attempting to create SearchAppEntity without typeId";
LABEL_18:
    _os_log_impl(&dword_257DC6000, v29, (os_log_type_t)v10, v32, v31, 2u);
    MEMORY[0x25A2C94B0](v31, -1, -1);
LABEL_19:

    outlined destroy of SearchAppEntity((uint64_t)v3, (void (*)(void))type metadata accessor for SearchAppEntity.Builder);
    outlined destroy of SearchAppEntity((uint64_t)v1, (void (*)(void))type metadata accessor for SearchAppEntity);
    __swift_storeEnumTagSinglePayload(v0, 1, 1, v8);
    goto LABEL_22;
  }
  uint64_t v37 = v3[4];
  uint64_t v38 = v19;
  swift_bridgeObjectRetain();
  EntityProperty.wrappedValue.setter();
  uint64_t v20 = type metadata accessor for SearchAppEntity.Builder(0);
  outlined assign with copy of SearchResult?((uint64_t)v3 + *(int *)(v20 + 40), v12);
  uint64_t v21 = v3[7];
  uint64_t v37 = v3[6];
  uint64_t v38 = v21;
  swift_bridgeObjectRetain();
  EntityProperty.wrappedValue.setter();
  uint64_t v22 = v3[10];
  v1[5] = v3[9];
  v1[6] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  Swift::String v23 = (void *)v3[8];
  if (v23)
  {
    id v24 = v23;
    uint64_t v25 = SFCard.data.getter();
    unint64_t v27 = v26;
  }
  else
  {
    uint64_t v25 = 0;
    unint64_t v27 = 0xF000000000000000;
  }
  outlined consume of Data?(*(void *)v16, *((void *)v16 + 1));
  *(void *)uint64_t v16 = v25;
  *((void *)v16 + 1) = v27;
  outlined destroy of SearchAppEntity((uint64_t)v3, (void (*)(void))type metadata accessor for SearchAppEntity.Builder);
  outlined init with copy of SearchAppEntity((uint64_t)v1, v0, (void (*)(void))type metadata accessor for SearchAppEntity);
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v8);
  outlined destroy of SearchAppEntity((uint64_t)v1, (void (*)(void))type metadata accessor for SearchAppEntity);
LABEL_22:
  OUTLINED_FUNCTION_119_0();
}

void static SearchAppEntity.== infix(_:_:)()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v76 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_184_0();
  uint64_t v73 = v11;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SearchResult?, SearchResult?));
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_184_0();
  uint64_t v77 = v13;
  uint64_t v74 = type metadata accessor for SearchAppEntity(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_185_0();
  uint64_t v79 = v15;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_43_4();
  uint64_t v78 = v17;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_43_4();
  uint64_t v82 = v19;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_43_4();
  uint64_t v83 = v21;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_43_4();
  uint64_t v81 = v23;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_43_4();
  uint64_t v80 = v25;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v26);
  OUTLINED_FUNCTION_43_8();
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_42_6();
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v72 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v72 - v32;
  EntityProperty.wrappedValue.getter();
  uint64_t v34 = v84;
  uint64_t v35 = v85;
  EntityProperty.wrappedValue.getter();
  BOOL v36 = v34 == v84 && v35 == v85;
  uint64_t v72 = v8;
  if (v36)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v38 = v5;
    outlined init with copy of SearchAppEntity(v5, (uint64_t)v33, (void (*)(void))type metadata accessor for SearchAppEntity);
    outlined init with copy of SearchAppEntity(v3, (uint64_t)v31, (void (*)(void))type metadata accessor for SearchAppEntity);
LABEL_8:
    EntityProperty.wrappedValue.getter();
    uint64_t v41 = v84;
    uint64_t v42 = v85;
    EntityProperty.wrappedValue.getter();
    BOOL v43 = v41 == v84 && v42 == v85;
    uint64_t v40 = v80;
    if (v43)
    {
      swift_bridgeObjectRelease_n();
      outlined destroy of SearchAppEntity((uint64_t)v31, (void (*)(void))type metadata accessor for SearchAppEntity);
      outlined destroy of SearchAppEntity((uint64_t)v33, (void (*)(void))type metadata accessor for SearchAppEntity);
      uint64_t v39 = v38;
      outlined init with copy of SearchAppEntity(v38, v1, (void (*)(void))type metadata accessor for SearchAppEntity);
      OUTLINED_FUNCTION_35_8();
    }
    else
    {
      char v44 = OUTLINED_FUNCTION_21_12();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      outlined destroy of SearchAppEntity((uint64_t)v31, (void (*)(void))type metadata accessor for SearchAppEntity);
      outlined destroy of SearchAppEntity((uint64_t)v33, (void (*)(void))type metadata accessor for SearchAppEntity);
      uint64_t v39 = v38;
      outlined init with copy of SearchAppEntity(v38, v1, (void (*)(void))type metadata accessor for SearchAppEntity);
      OUTLINED_FUNCTION_35_8();
      if ((v44 & 1) == 0) {
        goto LABEL_13;
      }
    }
    EntityProperty.wrappedValue.getter();
    uint64_t v48 = v84;
    uint64_t v47 = v85;
    EntityProperty.wrappedValue.getter();
    BOOL v49 = v48 == v84 && v47 == v85;
    uint64_t v46 = v82;
    uint64_t v45 = v83;
    if (v49)
    {
      swift_bridgeObjectRelease_n();
      outlined destroy of SearchAppEntity(v0, (void (*)(void))type metadata accessor for SearchAppEntity);
      outlined destroy of SearchAppEntity(v1, (void (*)(void))type metadata accessor for SearchAppEntity);
      outlined init with copy of SearchAppEntity(v39, v40, (void (*)(void))type metadata accessor for SearchAppEntity);
      OUTLINED_FUNCTION_14_16();
    }
    else
    {
      OUTLINED_FUNCTION_161_1();
      char v50 = OUTLINED_FUNCTION_21_12();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      outlined destroy of SearchAppEntity(v0, (void (*)(void))type metadata accessor for SearchAppEntity);
      outlined destroy of SearchAppEntity(v1, (void (*)(void))type metadata accessor for SearchAppEntity);
      outlined init with copy of SearchAppEntity(v39, v40, (void (*)(void))type metadata accessor for SearchAppEntity);
      OUTLINED_FUNCTION_14_16();
      if ((v50 & 1) == 0) {
        goto LABEL_20;
      }
    }
    EntityProperty.wrappedValue.getter();
    uint64_t v54 = v84;
    uint64_t v53 = v85;
    EntityProperty.wrappedValue.getter();
    uint64_t v55 = v85;
    if (v53)
    {
      if (!v85)
      {
        swift_bridgeObjectRetain();
        outlined destroy of SearchAppEntity(v1, (void (*)(void))type metadata accessor for SearchAppEntity);
        outlined destroy of SearchAppEntity(v40, (void (*)(void))type metadata accessor for SearchAppEntity);
        swift_bridgeObjectRelease_n();
        goto LABEL_21;
      }
      if (v54 != v84 || v53 != v85)
      {
        char v57 = OUTLINED_FUNCTION_21_12();
        swift_bridgeObjectRelease();
        outlined destroy of SearchAppEntity(v1, (void (*)(void))type metadata accessor for SearchAppEntity);
        outlined destroy of SearchAppEntity(v40, (void (*)(void))type metadata accessor for SearchAppEntity);
        swift_bridgeObjectRelease();
        outlined init with copy of SearchAppEntity(v39, v45, (void (*)(void))type metadata accessor for SearchAppEntity);
        OUTLINED_FUNCTION_30_13();
        uint64_t v51 = v78;
        uint64_t v52 = v79;
        if ((v57 & 1) == 0) {
          goto LABEL_23;
        }
LABEL_41:
        uint64_t v58 = *(void *)(v45 + 48);
        uint64_t v59 = *(void *)(v46 + 48);
        if (v58)
        {
          if (v59)
          {
            if (*(void *)(v45 + 40) != *(void *)(v46 + 40) || v58 != v59)
            {
              char v61 = OUTLINED_FUNCTION_21_12();
              swift_bridgeObjectRetain();
              outlined destroy of SearchAppEntity(v46, (void (*)(void))type metadata accessor for SearchAppEntity);
              outlined destroy of SearchAppEntity(v45, (void (*)(void))type metadata accessor for SearchAppEntity);
              swift_bridgeObjectRelease();
              outlined init with copy of SearchAppEntity(v39, v51, (void (*)(void))type metadata accessor for SearchAppEntity);
              OUTLINED_FUNCTION_31_10();
              if ((v61 & 1) == 0) {
                goto LABEL_25;
              }
LABEL_55:
              uint64_t v62 = *(int *)(v74 + 40);
              uint64_t v63 = v52 + v62;
              uint64_t v64 = v77;
              uint64_t v65 = v77 + *(int *)(v75 + 48);
              outlined init with copy of PQAVerificationModelProtocol?(v51 + v62, v77, &demangling cache variable for type metadata for SearchResult?);
              outlined init with copy of PQAVerificationModelProtocol?(v63, v65, &demangling cache variable for type metadata for SearchResult?);
              uint64_t v66 = v76;
              OUTLINED_FUNCTION_53_2(v64, 1, v76);
              if (v36)
              {
                outlined destroy of SearchAppEntity(v52, (void (*)(void))type metadata accessor for SearchAppEntity);
                outlined destroy of SearchAppEntity(v51, (void (*)(void))type metadata accessor for SearchAppEntity);
                OUTLINED_FUNCTION_53_2(v65, 1, v66);
                if (v36)
                {
                  outlined destroy of SearchResult?(v64, &demangling cache variable for type metadata for SearchResult?);
                  goto LABEL_26;
                }
              }
              else
              {
                uint64_t v67 = v73;
                outlined init with copy of PQAVerificationModelProtocol?(v64, v73, &demangling cache variable for type metadata for SearchResult?);
                OUTLINED_FUNCTION_53_2(v65, 1, v66);
                if (!v68)
                {
                  uint64_t v69 = (uint64_t)v72;
                  outlined init with take of SearchAppEntity(v65, (uint64_t)v72, (void (*)(void))type metadata accessor for SearchResult);
                  static SearchResult.== infix(_:_:)();
                  outlined destroy of SearchAppEntity(v69, (void (*)(void))type metadata accessor for SearchResult);
                  outlined destroy of SearchAppEntity(v52, (void (*)(void))type metadata accessor for SearchAppEntity);
                  uint64_t v70 = OUTLINED_FUNCTION_161_1();
                  outlined destroy of SearchAppEntity(v70, v71);
                  outlined destroy of SearchAppEntity(v67, (void (*)(void))type metadata accessor for SearchResult);
                  outlined destroy of SearchResult?(v64, &demangling cache variable for type metadata for SearchResult?);
                  goto LABEL_26;
                }
                outlined destroy of SearchAppEntity(v52, (void (*)(void))type metadata accessor for SearchAppEntity);
                outlined destroy of SearchAppEntity(v51, (void (*)(void))type metadata accessor for SearchAppEntity);
                outlined destroy of SearchAppEntity(v67, (void (*)(void))type metadata accessor for SearchResult);
              }
              outlined destroy of SearchResult?(v64, &demangling cache variable for type metadata for (SearchResult?, SearchResult?));
              goto LABEL_26;
            }
            swift_bridgeObjectRetain();
            outlined destroy of SearchAppEntity(v46, (void (*)(void))type metadata accessor for SearchAppEntity);
            outlined destroy of SearchAppEntity(v45, (void (*)(void))type metadata accessor for SearchAppEntity);
            swift_bridgeObjectRelease();
LABEL_54:
            outlined init with copy of SearchAppEntity(v39, v51, (void (*)(void))type metadata accessor for SearchAppEntity);
            OUTLINED_FUNCTION_31_10();
            goto LABEL_55;
          }
          swift_bridgeObjectRetain();
          outlined destroy of SearchAppEntity(v46, (void (*)(void))type metadata accessor for SearchAppEntity);
          outlined destroy of SearchAppEntity(v45, (void (*)(void))type metadata accessor for SearchAppEntity);
        }
        else
        {
          swift_bridgeObjectRetain();
          outlined destroy of SearchAppEntity(v46, (void (*)(void))type metadata accessor for SearchAppEntity);
          outlined destroy of SearchAppEntity(v45, (void (*)(void))type metadata accessor for SearchAppEntity);
          if (!v59) {
            goto LABEL_54;
          }
        }
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
      outlined destroy of SearchAppEntity(v1, (void (*)(void))type metadata accessor for SearchAppEntity);
      outlined destroy of SearchAppEntity(v40, (void (*)(void))type metadata accessor for SearchAppEntity);
      swift_bridgeObjectRelease();
      uint64_t v51 = v78;
    }
    else
    {
      outlined destroy of SearchAppEntity(v1, (void (*)(void))type metadata accessor for SearchAppEntity);
      outlined destroy of SearchAppEntity(v40, (void (*)(void))type metadata accessor for SearchAppEntity);
      uint64_t v51 = v78;
      if (v55)
      {
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
    outlined init with copy of SearchAppEntity(v39, v45, (void (*)(void))type metadata accessor for SearchAppEntity);
    OUTLINED_FUNCTION_30_13();
    uint64_t v52 = v79;
    goto LABEL_41;
  }
  char v37 = OUTLINED_FUNCTION_21_12();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = v5;
  outlined init with copy of SearchAppEntity(v5, (uint64_t)v33, (void (*)(void))type metadata accessor for SearchAppEntity);
  outlined init with copy of SearchAppEntity(v3, (uint64_t)v31, (void (*)(void))type metadata accessor for SearchAppEntity);
  if (v37) {
    goto LABEL_8;
  }
  outlined destroy of SearchAppEntity((uint64_t)v31, (void (*)(void))type metadata accessor for SearchAppEntity);
  outlined destroy of SearchAppEntity((uint64_t)v33, (void (*)(void))type metadata accessor for SearchAppEntity);
  uint64_t v39 = v5;
  outlined init with copy of SearchAppEntity(v5, v1, (void (*)(void))type metadata accessor for SearchAppEntity);
  outlined init with copy of SearchAppEntity(v3, v0, (void (*)(void))type metadata accessor for SearchAppEntity);
  uint64_t v40 = v80;
LABEL_13:
  outlined destroy of SearchAppEntity(v0, (void (*)(void))type metadata accessor for SearchAppEntity);
  outlined destroy of SearchAppEntity(v1, (void (*)(void))type metadata accessor for SearchAppEntity);
  outlined init with copy of SearchAppEntity(v39, v40, (void (*)(void))type metadata accessor for SearchAppEntity);
  OUTLINED_FUNCTION_14_16();
  uint64_t v46 = v82;
  uint64_t v45 = v83;
LABEL_20:
  outlined destroy of SearchAppEntity(v1, (void (*)(void))type metadata accessor for SearchAppEntity);
  outlined destroy of SearchAppEntity(v40, (void (*)(void))type metadata accessor for SearchAppEntity);
LABEL_21:
  uint64_t v51 = v78;
LABEL_22:
  uint64_t v52 = v79;
  outlined init with copy of SearchAppEntity(v39, v45, (void (*)(void))type metadata accessor for SearchAppEntity);
  OUTLINED_FUNCTION_30_13();
LABEL_23:
  outlined destroy of SearchAppEntity(v46, (void (*)(void))type metadata accessor for SearchAppEntity);
  outlined destroy of SearchAppEntity(v45, (void (*)(void))type metadata accessor for SearchAppEntity);
LABEL_24:
  outlined init with copy of SearchAppEntity(v39, v51, (void (*)(void))type metadata accessor for SearchAppEntity);
  OUTLINED_FUNCTION_31_10();
LABEL_25:
  outlined destroy of SearchAppEntity(v52, (void (*)(void))type metadata accessor for SearchAppEntity);
  outlined destroy of SearchAppEntity(v51, (void (*)(void))type metadata accessor for SearchAppEntity);
LABEL_26:
  OUTLINED_FUNCTION_119_0();
}

uint64_t SearchAppEntity.Builder.id.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t SearchAppEntity.Builder.id.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*SearchAppEntity.Builder.id.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchAppEntity.Builder.bundleId.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t SearchAppEntity.Builder.bundleId.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  return result;
}

uint64_t (*SearchAppEntity.Builder.bundleId.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchAppEntity.Builder.typeId.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t SearchAppEntity.Builder.typeId.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v0;
  return result;
}

uint64_t (*SearchAppEntity.Builder.typeId.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchAppEntity.Builder.protocolId.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t SearchAppEntity.Builder.protocolId.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v0;
  return result;
}

uint64_t (*SearchAppEntity.Builder.protocolId.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

void *SearchAppEntity.Builder.card.getter()
{
  uint64_t v1 = *(void **)(v0 + 64);
  id v2 = v1;
  return v1;
}

void SearchAppEntity.Builder.card.setter(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
}

uint64_t (*SearchAppEntity.Builder.card.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchAppEntity.Builder.title.getter()
{
  return OUTLINED_FUNCTION_79_0();
}

uint64_t SearchAppEntity.Builder.title.setter()
{
  OUTLINED_FUNCTION_53();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = v2;
  *(void *)(v1 + 80) = v0;
  return result;
}

uint64_t (*SearchAppEntity.Builder.title.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchAppEntity.Builder.sourceResult.getter()
{
  return SearchAppEntity.sourceResult.getter();
}

uint64_t SearchAppEntity.Builder.sourceResult.setter(uint64_t a1)
{
  return SearchAppEntity.sourceResult.setter(a1, type metadata accessor for SearchAppEntity.Builder);
}

uint64_t SearchAppEntity.sourceResult.setter(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 40);
  return outlined assign with take of SearchResult?(a1, v4);
}

uint64_t (*SearchAppEntity.Builder.sourceResult.modify())(void)
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchAppEntity.Builder.init(id:bundleId:typeId:protocolId:card:title:sourceResult:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, uint64_t a12)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(void *)(a9 + 80) = a11;
  uint64_t v12 = a9 + *(int *)(type metadata accessor for SearchAppEntity.Builder(0) + 40);
  return outlined init with take of SearchResult?(a12, v12);
}

uint64_t static SearchAppEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchAppEntity.typeDisplayRepresentation);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static SearchAppEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static SearchAppEntity.typeDisplayRepresentation);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 24))(v3, a1, v2);
  swift_endAccess();
  uint64_t v4 = OUTLINED_FUNCTION_79_0();
  return v5(v4);
}

uint64_t (*static SearchAppEntity.typeDisplayRepresentation.modify())()
{
  if (one-time initialization token for typeDisplayRepresentation != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  __swift_project_value_buffer(v0, (uint64_t)static SearchAppEntity.typeDisplayRepresentation);
  swift_beginAccess();
  return protocol witness for _ClientInfoProtocol.trackingConfig.modify in conformance AnswerSynthesisModelOnDevice._ClientInfo;
}

void SearchAppEntity.displayRepresentation.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  uint64_t v6 = OUTLINED_FUNCTION_81(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_184_0();
  uint64_t v55 = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LocalizedStringResource?);
  uint64_t v9 = OUTLINED_FUNCTION_81(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_184_0();
  uint64_t v54 = v10;
  uint64_t v58 = type metadata accessor for SearchAppEntity(0);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_185_0();
  uint64_t v53 = v12;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v52 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RGPluginModel?);
  uint64_t v17 = OUTLINED_FUNCTION_81(v16);
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_44_3();
  uint64_t v18 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  uint64_t v19 = OUTLINED_FUNCTION_81(v18);
  MEMORY[0x270FA5388](v19);
  uint64_t v57 = OUTLINED_FUNCTION_19_12();
  OUTLINED_FUNCTION_1();
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_185_0();
  uint64_t v56 = v23;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v52 - v25;
  uint64_t v27 = *(void **)(v0 + 48);
  if (v27)
  {
    uint64_t v28 = *(void *)(v0 + 40);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    OUTLINED_FUNCTION_24_12();
    v29._countAndFlagsBits = v28;
    v29._object = v27;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v29);
  }
  else
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    OUTLINED_FUNCTION_24_12();
    EntityProperty.wrappedValue.getter();
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v60);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_24_12();
  LocalizedStringResource.init(stringInterpolation:)();
  type metadata accessor for SFCard();
  uint64_t v30 = (uint64_t *)(v0 + *(int *)(v58 + 44));
  uint64_t v31 = *v30;
  unint64_t v32 = v30[1];
  outlined copy of Data?(*v30, v32);
  id v33 = SFCard.init(data:)(v31, v32);
  if (v33)
  {
    uint64_t v34 = v33;
    SFCard.snippetPluginModel.getter(v1);

    uint64_t v35 = type metadata accessor for RGPluginModel();
    OUTLINED_FUNCTION_53_2((uint64_t)v1, 1, v35);
    if (v36)
    {
      outlined destroy of SearchResult?((uint64_t)v1, &demangling cache variable for type metadata for RGPluginModel?);
    }
    else
    {
      lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type RGPluginModel and conformance RGPluginModel);
      SnippetPluginModel.data.getter();
      unint64_t v38 = v37;
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v35 - 8) + 8))(v1, v35);
      if (v38 >> 60 != 15)
      {
        uint64_t v46 = v57;
        OUTLINED_FUNCTION_34_9();
        v51();
        static RGPluginModel.bundleName.getter();
        OUTLINED_FUNCTION_79_0();
        DisplayRepresentation.init(title:snippetPluginModelData:bundleIdentifier:)();
        goto LABEL_15;
      }
    }
  }
  if (one-time initialization token for search != -1) {
    swift_once();
  }
  uint64_t v39 = type metadata accessor for Logger();
  __swift_project_value_buffer(v39, (uint64_t)static Logging.search);
  outlined init with copy of SearchAppEntity(v2, (uint64_t)v15, (void (*)(void))type metadata accessor for SearchAppEntity);
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v52 = v4;
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    v60._countAndFlagsBits = v43;
    *(_DWORD *)uint64_t v42 = 136315138;
    outlined init with copy of SearchAppEntity((uint64_t)v15, v53, (void (*)(void))type metadata accessor for SearchAppEntity);
    uint64_t v44 = String.init<A>(describing:)();
    uint64_t v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, &v60._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of SearchAppEntity((uint64_t)v15, (void (*)(void))type metadata accessor for SearchAppEntity);
    _os_log_impl(&dword_257DC6000, v40, v41, "Unexpected fallback to use title only displayRepresentation for entity: %s", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2C94B0](v43, -1, -1);
    MEMORY[0x25A2C94B0](v42, -1, -1);
  }
  else
  {
    outlined destroy of SearchAppEntity((uint64_t)v15, (void (*)(void))type metadata accessor for SearchAppEntity);
  }

  uint64_t v46 = v57;
  OUTLINED_FUNCTION_34_9();
  v47();
  __swift_storeEnumTagSinglePayload(v54, 1, 1, v46);
  uint64_t v48 = type metadata accessor for DisplayRepresentation.Image();
  OUTLINED_FUNCTION_32(v55, v49, v50, v48);
  DisplayRepresentation.init(title:subtitle:image:)();
LABEL_15:
  (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v46);
  OUTLINED_FUNCTION_119_0();
}

uint64_t SearchAppEntity.Query.entities(for:)()
{
  return SearchAppEntity.Query.entities(for:)(*(uint64_t (**)(uint64_t))(v0 + 8), v0, MEMORY[0x263F8EE78]);
}

uint64_t protocol witness for EntityQuery.entities(for:) in conformance SearchAppEntity.Query()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for EntityQuery.entities(for:) in conformance SearchAppEntity.Query;
  return SearchAppEntity.Query.entities(for:)();
}

uint64_t protocol witness for EntityQuery.entities(for:) in conformance SearchAppEntity.Query(uint64_t a1)
{
  OUTLINED_FUNCTION_2();
  uint64_t v4 = *v2;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v1) {
    uint64_t v6 = a1;
  }
  return v7(v6);
}

uint64_t protocol witness for EntityQuery.suggestedEntities() in conformance SearchAppEntity.Query(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = protocol witness for EntityQuery.suggestedEntities() in conformance SearchAppEntity.Query;
  return MEMORY[0x270EE0E30](a1, a2, a3);
}

uint64_t protocol witness for EntityQuery.suggestedEntities() in conformance SearchAppEntity.Query()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t protocol witness for DynamicOptionsProvider.results() in conformance SearchAppEntity.Query(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = lazy protocol witness table accessor for type SearchAppEntity.Query and conformance SearchAppEntity.Query();
  *uint64_t v5 = v2;
  v5[1] = protocol witness for DynamicOptionsProvider.results() in conformance SearchAppEntity.Query;
  return MEMORY[0x270EE0E40](a1, a2, v6);
}

uint64_t protocol witness for DynamicOptionsProvider.defaultResult() in conformance SearchAppEntity.Query(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = protocol witness for EntityQuery.suggestedEntities() in conformance SearchAppEntity.Query;
  return MEMORY[0x270EE1A10](a1, a2, a3);
}

uint64_t (*static SearchAppEntity.defaultQuery.modify())()
{
  return destructiveProjectEnumData for AnswerSynthesisController.AnswerSynthesisModelType;
}

uint64_t SearchAppEntity.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x644965707974 && a2 == 0xE600000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6C6F636F746F7270 && a2 == 0xEA00000000006449;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x704F646C756F6873 && a2 == 0xEA00000000006E65;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x6552656372756F73 && a2 == 0xEC000000746C7573;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0x6174614464726163 && a2 == 0xE800000000000000)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v13) {
                  return 7;
                }
                else {
                  return 8;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t SearchAppEntity.CodingKeys.init(intValue:)()
{
  return 8;
}

uint64_t SearchAppEntity.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6449656C646E7562;
      break;
    case 2:
      uint64_t result = 0x644965707974;
      break;
    case 3:
      uint64_t result = 0x6C6F636F746F7270;
      break;
    case 4:
      uint64_t result = 0x704F646C756F6873;
      break;
    case 5:
      uint64_t result = 0x656C746974;
      break;
    case 6:
      uint64_t result = 0x6552656372756F73;
      break;
    case 7:
      uint64_t result = 0x6174614464726163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SearchAppEntity.CodingKeys()
{
  return SearchAppEntity.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SearchAppEntity.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = SearchAppEntity.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance SearchAppEntity.CodingKeys@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = SearchAppEntity.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SearchAppEntity.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SearchAppEntity.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SearchAppEntity.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SearchAppEntity.CodingKeys>);
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  BOOL v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  *(void *)&long long v13 = *v3;
  char v14 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<String>);
  lazy protocol witness table accessor for type EntityProperty<String> and conformance <> EntityProperty<A>((uint64_t)&lazy protocol witness table cache variable for type EntityProperty<String> and conformance <> EntityProperty<A>);
  OUTLINED_FUNCTION_4_16();
  if (!v2)
  {
    *(void *)&long long v13 = v3[1];
    char v14 = 1;
    OUTLINED_FUNCTION_4_16();
    *(void *)&long long v13 = v3[2];
    char v14 = 2;
    OUTLINED_FUNCTION_4_16();
    *(void *)&long long v13 = v3[3];
    char v14 = 3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
    lazy protocol witness table accessor for type EntityProperty<String?> and conformance <> EntityProperty<A>();
    OUTLINED_FUNCTION_36_9();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    *(void *)&long long v13 = v3[4];
    char v14 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityProperty<Bool>);
    lazy protocol witness table accessor for type EntityProperty<String> and conformance <> EntityProperty<A>((uint64_t)&lazy protocol witness table cache variable for type EntityProperty<Bool> and conformance <> EntityProperty<A>);
    OUTLINED_FUNCTION_36_9();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v13) = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v11 = type metadata accessor for SearchAppEntity(0);
    LOBYTE(v13) = 6;
    type metadata accessor for SearchResult(0);
    lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchResult and conformance SearchResult);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    long long v13 = *(_OWORD *)((char *)v3 + *(int *)(v11 + 44));
    char v14 = 7;
    lazy protocol witness table accessor for type Data and conformance Data();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v5);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SearchAppEntity(void *a1)
{
  return SearchAppEntity.encode(to:)(a1);
}

void protocol witness for ValidatableEntity.validateParameters() in conformance SearchAppEntity()
{
}

uint64_t protocol witness for Identifiable.id.getter in conformance SearchAppEntity@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SearchAppEntity.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for static _IntentValue.defaultResolverSpecification.getter in conformance SearchAppEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity);
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t protocol witness for CustomLocalizedStringResourceConvertible.localizedStringResource.getter in conformance SearchAppEntity(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity);
  return MEMORY[0x270EE1D98](a1, v2);
}

void SearchAppEntity.asNLGEntity.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  uint64_t v10 = OUTLINED_FUNCTION_81(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_18();
  MEMORY[0x270FA5388](v11);
  long long v13 = (char *)&v29 - v12;
  SearchNLGEntity.init()(v3);
  type metadata accessor for LocalIndexClient();
  EntityProperty.wrappedValue.getter();
  uint64_t v14 = static LocalIndexClient.displayName(for:)(v29, v30);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  uint64_t v29 = v14;
  uint64_t v30 = v16;
  EntityProperty.wrappedValue.setter();
  uint64_t v17 = *(void *)(v0 + 48);
  uint64_t v29 = *(void *)(v0 + 40);
  uint64_t v30 = v17;
  swift_bridgeObjectRetain();
  EntityProperty.wrappedValue.setter();
  uint64_t v18 = v0 + *(int *)(type metadata accessor for SearchAppEntity(0) + 40);
  outlined init with copy of PQAVerificationModelProtocol?(v18, (uint64_t)v13, &demangling cache variable for type metadata for SearchResult?);
  uint64_t v19 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_53_2((uint64_t)v13, 1, v19);
  if (v20)
  {
    outlined destroy of SearchResult?((uint64_t)v13, &demangling cache variable for type metadata for SearchResult?);
    uint64_t v22 = 0;
  }
  else
  {
    id v21 = *(id *)&v13[*(int *)(v19 + 20)];
    outlined destroy of SearchAppEntity((uint64_t)v13, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v22 = CSSearchableItem.senderNames.getter();
  }
  uint64_t v29 = v22;
  EntityProperty.wrappedValue.setter();
  outlined init with copy of PQAVerificationModelProtocol?(v18, v1, &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_53_2(v1, 1, v19);
  if (v20)
  {
    outlined destroy of SearchResult?(v1, &demangling cache variable for type metadata for SearchResult?);
    uint64_t v23 = type metadata accessor for Date();
    OUTLINED_FUNCTION_32((uint64_t)v8, v24, v25, v23);
  }
  else
  {
    id v26 = *(id *)(v1 + *(int *)(v19 + 20));
    outlined destroy of SearchAppEntity(v1, (void (*)(void))type metadata accessor for SearchResult);
    CSSearchableItem.contentCreationDate.getter((uint64_t)v8);
  }
  uint64_t v27 = OUTLINED_FUNCTION_161_1();
  outlined init with copy of PQAVerificationModelProtocol?(v27, v28, &demangling cache variable for type metadata for Date?);
  EntityProperty.wrappedValue.setter();
  outlined destroy of SearchResult?((uint64_t)v8, &demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_119_0();
}

void SearchAppEntity.asCATEntity.getter()
{
  OUTLINED_FUNCTION_104_0();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  uint64_t v5 = OUTLINED_FUNCTION_81(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_185_0();
  uint64_t v29 = v6;
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  uint64_t v11 = OUTLINED_FUNCTION_81(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_3_18();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v28 - v13;
  SearchCATEntity.init()(v3);
  type metadata accessor for LocalIndexClient();
  EntityProperty.wrappedValue.getter();
  uint64_t v15 = static LocalIndexClient.displayName(for:)(v30, v31);
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  type metadata accessor for SearchCATEntity();
  uint64_t v30 = v15;
  uint64_t v31 = v17;
  EntityProperty.wrappedValue.setter();
  uint64_t v18 = *(void *)(v0 + 48);
  uint64_t v30 = *(void *)(v0 + 40);
  uint64_t v31 = v18;
  swift_bridgeObjectRetain();
  EntityProperty.wrappedValue.setter();
  uint64_t v19 = v0 + *(int *)(type metadata accessor for SearchAppEntity(0) + 40);
  outlined init with copy of PQAVerificationModelProtocol?(v19, (uint64_t)v14, &demangling cache variable for type metadata for SearchResult?);
  uint64_t v20 = type metadata accessor for SearchResult(0);
  OUTLINED_FUNCTION_53_2((uint64_t)v14, 1, v20);
  if (v21)
  {
    outlined destroy of SearchResult?((uint64_t)v14, &demangling cache variable for type metadata for SearchResult?);
    uint64_t v23 = 0;
  }
  else
  {
    id v22 = *(id *)&v14[*(int *)(v20 + 20)];
    outlined destroy of SearchAppEntity((uint64_t)v14, (void (*)(void))type metadata accessor for SearchResult);
    uint64_t v23 = CSSearchableItem.senderNames.getter();
  }
  uint64_t v30 = v23;
  EntityProperty.wrappedValue.setter();
  outlined init with copy of PQAVerificationModelProtocol?(v19, v1, &demangling cache variable for type metadata for SearchResult?);
  OUTLINED_FUNCTION_53_2(v1, 1, v20);
  if (v21)
  {
    outlined destroy of SearchResult?(v1, &demangling cache variable for type metadata for SearchResult?);
    uint64_t v24 = type metadata accessor for Date();
    OUTLINED_FUNCTION_32((uint64_t)v9, v25, v26, v24);
  }
  else
  {
    id v27 = *(id *)(v1 + *(int *)(v20 + 20));
    outlined destroy of SearchAppEntity(v1, (void (*)(void))type metadata accessor for SearchResult);
    CSSearchableItem.contentCreationDate.getter((uint64_t)v9);
  }
  outlined init with copy of PQAVerificationModelProtocol?((uint64_t)v9, v29, &demangling cache variable for type metadata for Date?);
  EntityProperty.wrappedValue.setter();
  outlined destroy of SearchResult?((uint64_t)v9, &demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_119_0();
}

unint64_t lazy protocol witness table accessor for type SearchToolError and conformance SearchToolError()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchToolError and conformance SearchToolError;
  if (!lazy protocol witness table cache variable for type SearchToolError and conformance SearchToolError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchToolError and conformance SearchToolError);
  }
  return result;
}

uint64_t type metadata accessor for SearchAppEntity.Builder(uint64_t a1)
{
  return type metadata accessor for ResultsDialog(a1, (uint64_t *)&type metadata singleton initialization cache for SearchAppEntity.Builder);
}

uint64_t outlined init with copy of SearchAppEntity(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  uint64_t v4 = OUTLINED_FUNCTION_210();
  v5(v4);
  return a2;
}

uint64_t outlined destroy of SearchAppEntity(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t outlined assign with copy of SearchResult?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of SearchAppEntity(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_7_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t outlined init with take of SearchResult?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t SearchAppEntity.Query.entities(for:)(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

unint64_t lazy protocol witness table accessor for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAppEntity.CodingKeys and conformance SearchAppEntity.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type EntityProperty<String?> and conformance <> EntityProperty<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type EntityProperty<String?> and conformance <> EntityProperty<A>;
  if (!lazy protocol witness table cache variable for type EntityProperty<String?> and conformance <> EntityProperty<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for EntityProperty<String?>);
    lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type String? and conformance <A> A?);
    lazy protocol witness table accessor for type String? and conformance <A> A?((uint64_t)&lazy protocol witness table cache variable for type String? and conformance <A> A?);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EntityProperty<String?> and conformance <> EntityProperty<A>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type EntityProperty<String> and conformance <> EntityProperty<A>(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_160_1(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_160_1(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Data and conformance Data()
{
  unint64_t result = lazy protocol witness table cache variable for type Data and conformance Data;
  if (!lazy protocol witness table cache variable for type Data and conformance Data)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Data and conformance Data);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Data and conformance Data;
  if (!lazy protocol witness table cache variable for type Data and conformance Data)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Data and conformance Data);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SearchAppEntity.Query and conformance SearchAppEntity.Query()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query;
  if (!lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchAppEntity.Query and conformance SearchAppEntity.Query);
  }
  return result;
}

unint64_t associated type witness table accessor for EntityQuery.Entity : AppEntity in SearchAppEntity.Query()
{
  return lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity);
}

unint64_t associated type witness table accessor for DynamicOptionsProvider.DefaultValue : _IntentValue in SearchAppEntity.Query()
{
  return lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity);
}

unint64_t lazy protocol witness table accessor for type [SearchAppEntity] and conformance <A> [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [SearchAppEntity] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [SearchAppEntity] and conformance <A> [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SearchAppEntity]);
    lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [SearchAppEntity] and conformance <A> [A]);
  }
  return result;
}

unint64_t base witness table accessor for AppValue in SearchAppEntity()
{
  return lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity);
}

unint64_t base witness table accessor for DisplayRepresentable in SearchAppEntity()
{
  return lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity);
}

unint64_t base witness table accessor for Identifiable in SearchAppEntity()
{
  return lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity);
}

unint64_t base witness table accessor for PersistentlyIdentifiable in SearchAppEntity()
{
  return lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity);
}

unint64_t base witness table accessor for TypeDisplayRepresentable in SearchAppEntity()
{
  return lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity);
}

unint64_t base witness table accessor for InstanceDisplayRepresentable in SearchAppEntity()
{
  return lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity);
}

unint64_t lazy protocol witness table accessor for type EmptyResolverSpecification<SearchAppEntity> and conformance EmptyResolverSpecification<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type EmptyResolverSpecification<SearchAppEntity> and conformance EmptyResolverSpecification<A>;
  if (!lazy protocol witness table cache variable for type EmptyResolverSpecification<SearchAppEntity> and conformance EmptyResolverSpecification<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for EmptyResolverSpecification<SearchAppEntity>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmptyResolverSpecification<SearchAppEntity> and conformance EmptyResolverSpecification<A>);
  }
  return result;
}

unint64_t base witness table accessor for CustomLocalizedStringResourceConvertible in SearchAppEntity()
{
  return lazy protocol witness table accessor for type RGPluginModel and conformance RGPluginModel((uint64_t)&lazy protocol witness table cache variable for type SearchAppEntity and conformance SearchAppEntity);
}

uint64_t sub_25800AA78()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchAppEntity.id.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_25800AAA4()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchAppEntity.bundleId.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_25800AAD0()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchAppEntity.typeId.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_25800AAFC()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchAppEntity.protocolId.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_25800AB28()
{
  OUTLINED_FUNCTION_13_7();
  uint64_t result = SearchAppEntity.shouldOpen.getter();
  *uint64_t v0 = result & 1;
  return result;
}

uint64_t sub_25800AB54()
{
  return SearchAppEntity.shouldOpen.setter();
}

id sub_25800AB7C()
{
  OUTLINED_FUNCTION_13_7();
  id result = SearchAppEntity.card.getter();
  *uint64_t v0 = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchAppEntity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = a2[4];
    a1[3] = a2[3];
    a1[4] = v7;
    uint64_t v8 = a2[6];
    uint64_t v9 = *(int *)(a3 + 40);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    a1[5] = a2[5];
    a1[6] = v8;
    uint64_t v12 = type metadata accessor for SearchResult(0);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v2716 = v12;
      v2720 = v10;
      type metadata accessor for SearchResultItem(0);
      uint64_t v14 = (uint64_t)v10;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v36 = v11[1];
          *uint64_t v10 = *v11;
          v10[1] = v36;
          uint64_t v37 = v11[3];
          v10[2] = v11[2];
          v10[3] = v37;
          uint64_t v38 = v11[5];
          v10[4] = v11[4];
          v10[5] = v38;
          uint64_t v39 = v11[7];
          v10[6] = v11[6];
          v10[7] = v39;
          uint64_t v40 = v11[9];
          _OWORD v10[8] = v11[8];
          v10[9] = v40;
          v2699 = (int *)type metadata accessor for MobileSMSDocument(0);
          uint64_t v41 = v2699[10];
          uint64_t v2665 = (char *)v10 + v41;
          uint64_t v42 = (char *)v11 + v41;
          uint64_t v43 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v2685 = v43;
          if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
          {
            uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2665, v42, *(void *)(*(void *)(v44 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v2665, v42, v43);
            __swift_storeEnumTagSinglePayload((uint64_t)v2665, 0, 1, v43);
          }
          uint64_t v353 = v2699[11];
          long long v354 = (char *)v2720 + v353;
          long long v355 = (char *)v11 + v353;
          uint64_t v356 = type metadata accessor for URL();
          uint64_t v2658 = v356;
          if (__swift_getEnumTagSinglePayload((uint64_t)v355, 1, v356))
          {
            uint64_t v357 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v354, v355, *(void *)(*(void *)(v357 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v356 - 8) + 16))(v354, v355, v356);
            __swift_storeEnumTagSinglePayload((uint64_t)v354, 0, 1, v356);
          }
          *(void *)((char *)v2720 + v2699[12]) = *(void *)((char *)v11 + v2699[12]);
          uint64_t v513 = v2699[13];
          uint64_t v514 = (void *)((char *)v2720 + v513);
          uint64_t v515 = (void *)((char *)v11 + v513);
          uint64_t v516 = v515[1];
          void *v514 = *v515;
          v514[1] = v516;
          uint64_t v517 = v2699[14];
          uint64_t v518 = (void *)((char *)v2720 + v517);
          uint64_t v519 = (void *)((char *)v11 + v517);
          uint64_t v520 = v519[1];
          void *v518 = *v519;
          v518[1] = v520;
          *(void *)((char *)v2720 + v2699[15]) = *(void *)((char *)v11 + v2699[15]);
          *(void *)((char *)v2720 + v2699[16]) = *(void *)((char *)v11 + v2699[16]);
          uint64_t v521 = v2699[17];
          uint64_t v522 = (void *)((char *)v2720 + v521);
          uint64_t v523 = (char *)v11 + v521;
          uint64_t v524 = *(void *)((char *)v11 + v521);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v524)
          {
            uint64_t v525 = *((void *)v523 + 1);
            uint64_t v526 = *((void *)v523 + 2);
            void *v522 = v524;
            v522[1] = v525;
            uint64_t v527 = *((void *)v523 + 3);
            uint64_t v528 = *((void *)v523 + 4);
            v522[2] = v526;
            v522[3] = v527;
            v522[4] = v528;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v688 = *((_OWORD *)v523 + 1);
            *(_OWORD *)uint64_t v522 = *(_OWORD *)v523;
            *((_OWORD *)v522 + 1) = v688;
            v522[4] = *((void *)v523 + 4);
          }
          uint64_t v689 = v2699[18];
          uint64_t v690 = v2720;
          uint64_t v691 = (void *)((char *)v2720 + v689);
          long long v692 = (void *)((char *)v11 + v689);
          uint64_t v693 = v692[1];
          *uint64_t v691 = *v692;
          v691[1] = v693;
          uint64_t v694 = v2699[19];
          long long v695 = (void *)((char *)v2720 + v694);
          long long v696 = (void *)((char *)v11 + v694);
          long long v697 = (int *)type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v696, 1, (uint64_t)v697))
          {
            uint64_t v698 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v695, v696, *(void *)(*(void *)(v698 - 8) + 64));
          }
          else
          {
            uint64_t v735 = v696[1];
            *long long v695 = *v696;
            v695[1] = v735;
            uint64_t v736 = v697[5];
            uint64_t v737 = (void *)((char *)v695 + v736);
            uint64_t v2677 = v696;
            uint64_t v738 = (void *)((char *)v696 + v736);
            uint64_t v739 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            uint64_t v2619 = v697;
            uint64_t v2637 = v695;
            if (__swift_getEnumTagSinglePayload((uint64_t)v738, 1, v739))
            {
              uint64_t v740 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v737, v738, *(void *)(*(void *)(v740 - 8) + 64));
            }
            else
            {
              uint64_t v797 = v738[1];
              *uint64_t v737 = *v738;
              v737[1] = v797;
              uint64_t v798 = v738[3];
              v737[2] = v738[2];
              v737[3] = v798;
              uint64_t v799 = v738[5];
              v737[4] = v738[4];
              v737[5] = v799;
              uint64_t v800 = v738[7];
              v737[6] = v738[6];
              v737[7] = v800;
              uint64_t v801 = v738[9];
              v737[8] = v738[8];
              v737[9] = v801;
              uint64_t v802 = v738[11];
              v737[10] = v738[10];
              v737[11] = v802;
              uint64_t v803 = v738[13];
              v737[12] = v738[12];
              v737[13] = v803;
              uint64_t v804 = v738[15];
              v737[14] = v738[14];
              v737[15] = v804;
              *((unsigned char *)v737 + 128) = *((unsigned char *)v738 + 128);
              *(_WORD *)((char *)v737 + 129) = *(_WORD *)((char *)v738 + 129);
              uint64_t v805 = v738[18];
              v737[17] = v738[17];
              v737[18] = v805;
              uint64_t v806 = v738[20];
              v737[19] = v738[19];
              v737[20] = v806;
              uint64_t v807 = v738[22];
              v737[21] = v738[21];
              v737[22] = v807;
              uint64_t v2503 = v738[24];
              v737[23] = v738[23];
              v737[24] = v2503;
              uint64_t v808 = v738[26];
              v737[25] = v738[25];
              v737[26] = v808;
              uint64_t v809 = v738[28];
              v737[27] = v738[27];
              v737[28] = v809;
              uint64_t v810 = v738[30];
              v737[29] = v738[29];
              v737[30] = v810;
              uint64_t v811 = v738[32];
              v737[31] = v738[31];
              v737[32] = v811;
              uint64_t v812 = v738[34];
              v737[33] = v738[33];
              v737[34] = v812;
              uint64_t v813 = v738[36];
              v737[35] = v738[35];
              v737[36] = v813;
              uint64_t v814 = v738[38];
              v737[37] = v738[37];
              v737[38] = v814;
              uint64_t v815 = v738[40];
              v737[39] = v738[39];
              v737[40] = v815;
              uint64_t v816 = v738[42];
              v737[41] = v738[41];
              v737[42] = v816;
              uint64_t v817 = v738[44];
              v737[43] = v738[43];
              v737[44] = v817;
              uint64_t v818 = v738[46];
              v737[45] = v738[45];
              v737[46] = v818;
              uint64_t v819 = v738[47];
              *((unsigned char *)v737 + 384) = *((unsigned char *)v738 + 384);
              v737[47] = v819;
              uint64_t v820 = v738[50];
              v737[49] = v738[49];
              v737[50] = v820;
              uint64_t v821 = v738[52];
              v737[51] = v738[51];
              v737[52] = v821;
              uint64_t v822 = *(int *)(v739 + 140);
              uint64_t v2593 = (char *)v737 + v822;
              uint64_t v823 = (char *)v738 + v822;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v823, 1, v43))
              {
                uint64_t v824 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2593, v823, *(void *)(*(void *)(v824 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v2593, v823, v43);
                __swift_storeEnumTagSinglePayload((uint64_t)v2593, 0, 1, v43);
              }
              uint64_t v833 = *(int *)(v739 + 144);
              long long v834 = (char *)v737 + v833;
              long long v835 = (char *)v738 + v833;
              if (__swift_getEnumTagSinglePayload((uint64_t)v738 + v833, 1, v43))
              {
                uint64_t v836 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v834, v835, *(void *)(*(void *)(v836 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v834, v835, v43);
                __swift_storeEnumTagSinglePayload((uint64_t)v834, 0, 1, v43);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v737, 0, 1, v739);
              long long v695 = v2637;
            }
            uint64_t v891 = v697[6];
            uint64_t v892 = (void *)((char *)v695 + v891);
            uint64_t v893 = v2677;
            uint64_t v894 = (void *)((char *)v2677 + v891);
            uint64_t v895 = type metadata accessor for TicketedTransportation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v894, 1, v895))
            {
              uint64_t v896 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v892, v894, *(void *)(*(void *)(v896 - 8) + 64));
            }
            else
            {
              uint64_t v897 = v894[1];
              *uint64_t v892 = *v894;
              v892[1] = v897;
              uint64_t v898 = v894[3];
              v892[2] = v894[2];
              v892[3] = v898;
              uint64_t v899 = v894[5];
              v892[4] = v894[4];
              v892[5] = v899;
              uint64_t v900 = v894[7];
              v892[6] = v894[6];
              v892[7] = v900;
              uint64_t v901 = v894[9];
              v892[8] = v894[8];
              v892[9] = v901;
              uint64_t v902 = v894[11];
              v892[10] = v894[10];
              v892[11] = v902;
              uint64_t v903 = v894[13];
              v892[12] = v894[12];
              v892[13] = v903;
              uint64_t v904 = v894[15];
              v892[14] = v894[14];
              v892[15] = v904;
              *((unsigned char *)v892 + 128) = *((unsigned char *)v894 + 128);
              *(_WORD *)((char *)v892 + 129) = *(_WORD *)((char *)v894 + 129);
              uint64_t v905 = v894[18];
              v892[17] = v894[17];
              v892[18] = v905;
              uint64_t v906 = v894[20];
              v892[19] = v894[19];
              v892[20] = v906;
              uint64_t v907 = v894[22];
              v892[21] = v894[21];
              v892[22] = v907;
              uint64_t v908 = v894[24];
              v892[23] = v894[23];
              v892[24] = v908;
              uint64_t v2554 = (void *)v894[26];
              v892[25] = v894[25];
              v892[26] = v2554;
              uint64_t v909 = v894[28];
              v892[27] = v894[27];
              v892[28] = v909;
              uint64_t v910 = v894[30];
              v892[29] = v894[29];
              v892[30] = v910;
              uint64_t v911 = v894[32];
              v892[31] = v894[31];
              v892[32] = v911;
              uint64_t v912 = v894[34];
              v892[33] = v894[33];
              v892[34] = v912;
              uint64_t v913 = v894[36];
              uint64_t v914 = v894[35];
              *((unsigned char *)v892 + 296) = *((unsigned char *)v894 + 296);
              v892[35] = v914;
              v892[36] = v913;
              uint64_t v915 = *(int *)(v895 + 112);
              uint64_t v2569 = (char *)v892 + v915;
              uint64_t v2594 = (void *)v895;
              uint64_t v916 = (char *)v894 + v915;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v916, 1, v43))
              {
                uint64_t v917 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2569, v916, *(void *)(*(void *)(v917 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v2569, v916, v43);
                __swift_storeEnumTagSinglePayload((uint64_t)v2569, 0, 1, v43);
              }
              uint64_t v926 = *(int *)(v895 + 116);
              uint64_t v927 = (char *)v892 + v926;
              uint64_t v928 = (char *)v894 + v926;
              uint64_t v893 = v2677;
              if (__swift_getEnumTagSinglePayload((uint64_t)v894 + v926, 1, v43))
              {
                uint64_t v929 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v927, v928, *(void *)(*(void *)(v929 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v927, v928, v43);
                __swift_storeEnumTagSinglePayload((uint64_t)v927, 0, 1, v43);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v892, 0, 1, (uint64_t)v2594);
              long long v695 = v2637;
            }
            uint64_t v984 = v697[7];
            uint64_t v985 = (void *)((char *)v695 + v984);
            uint64_t v986 = (void *)((char *)v893 + v984);
            uint64_t v987 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v986, 1, (uint64_t)v987))
            {
              uint64_t v988 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v985, v986, *(void *)(*(void *)(v988 - 8) + 64));
            }
            else
            {
              uint64_t v989 = v986[1];
              *uint64_t v985 = *v986;
              v985[1] = v989;
              uint64_t v990 = v986[3];
              v985[2] = v986[2];
              v985[3] = v990;
              uint64_t v991 = v986[5];
              v985[4] = v986[4];
              v985[5] = v991;
              uint64_t v992 = v986[7];
              v985[6] = v986[6];
              v985[7] = v992;
              uint64_t v993 = v986[9];
              v985[8] = v986[8];
              v985[9] = v993;
              uint64_t v994 = v986[11];
              v985[10] = v986[10];
              v985[11] = v994;
              uint64_t v995 = v986[13];
              v985[12] = v986[12];
              v985[13] = v995;
              uint64_t v996 = v986[15];
              v985[14] = v986[14];
              v985[15] = v996;
              *((unsigned char *)v985 + 128) = *((unsigned char *)v986 + 128);
              *(_WORD *)((char *)v985 + 129) = *(_WORD *)((char *)v986 + 129);
              uint64_t v997 = v986[18];
              v985[17] = v986[17];
              v985[18] = v997;
              uint64_t v998 = v986[20];
              v985[19] = v986[19];
              v985[20] = v998;
              uint64_t v999 = v986[22];
              v985[21] = v986[21];
              v985[22] = v999;
              uint64_t v1000 = v986[24];
              v985[23] = v986[23];
              v985[24] = v1000;
              uint64_t v1001 = v986[26];
              v985[25] = v986[25];
              v985[26] = v1001;
              uint64_t v1002 = v986[28];
              v985[27] = v986[27];
              v985[28] = v1002;
              v2556 = (void *)v986[30];
              v985[29] = v986[29];
              v985[30] = v2556;
              uint64_t v1003 = v986[32];
              v985[31] = v986[31];
              v985[32] = v1003;
              uint64_t v1004 = v986[34];
              v985[33] = v986[33];
              v985[34] = v1004;
              uint64_t v1005 = v986[36];
              uint64_t v1006 = v986[35];
              *((unsigned char *)v985 + 296) = *((unsigned char *)v986 + 296);
              v985[35] = v1006;
              v985[36] = v1005;
              uint64_t v1007 = v986[39];
              v985[38] = v986[38];
              v985[39] = v1007;
              uint64_t v1008 = v987[29];
              v2572 = (char *)v985 + v1008;
              uint64_t v2596 = v987;
              uint64_t v1009 = (char *)v986 + v1008;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1009, 1, v2658))
              {
                uint64_t v1010 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2572, v1009, *(void *)(*(void *)(v1010 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v2572, v1009, v2658);
                __swift_storeEnumTagSinglePayload((uint64_t)v2572, 0, 1, v2658);
              }
              uint64_t v1027 = v987[30];
              uint64_t v1028 = (void *)((char *)v985 + v1027);
              uint64_t v1029 = (void *)((char *)v986 + v1027);
              uint64_t v1030 = v1029[1];
              *uint64_t v1028 = *v1029;
              v1028[1] = v1030;
              uint64_t v1031 = v987[31];
              uint64_t v1032 = (char *)v985 + v1031;
              uint64_t v1033 = (char *)v986 + v1031;
              swift_bridgeObjectRetain();
              long long v697 = v2619;
              uint64_t v893 = v2677;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1033, 1, v43))
              {
                uint64_t v1034 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1032, v1033, *(void *)(*(void *)(v1034 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v1032, v1033, v43);
                __swift_storeEnumTagSinglePayload((uint64_t)v1032, 0, 1, v43);
              }
              uint64_t v1043 = v2596[32];
              uint64_t v1044 = (char *)v985 + v1043;
              uint64_t v1045 = (char *)v986 + v1043;
              if (__swift_getEnumTagSinglePayload((uint64_t)v986 + v1043, 1, v43))
              {
                uint64_t v1046 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1044, v1045, *(void *)(*(void *)(v1046 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v1044, v1045, v43);
                __swift_storeEnumTagSinglePayload((uint64_t)v1044, 0, 1, v43);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v985, 0, 1, (uint64_t)v2596);
              long long v695 = v2637;
            }
            uint64_t v1101 = v697[8];
            uint64_t v1102 = (void *)((char *)v695 + v1101);
            uint64_t v1103 = (void *)((char *)v893 + v1101);
            uint64_t v1104 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1103, 1, v1104))
            {
              uint64_t v1105 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v1102, v1103, *(void *)(*(void *)(v1105 - 8) + 64));
            }
            else
            {
              uint64_t v1106 = v1103[1];
              *uint64_t v1102 = *v1103;
              v1102[1] = v1106;
              uint64_t v1107 = v1103[3];
              v1102[2] = v1103[2];
              v1102[3] = v1107;
              uint64_t v1108 = v1103[5];
              v1102[4] = v1103[4];
              v1102[5] = v1108;
              uint64_t v1109 = v1103[7];
              v1102[6] = v1103[6];
              v1102[7] = v1109;
              uint64_t v1110 = v1103[9];
              v1102[8] = v1103[8];
              v1102[9] = v1110;
              uint64_t v1111 = v1103[11];
              v1102[10] = v1103[10];
              v1102[11] = v1111;
              uint64_t v1112 = v1103[13];
              v1102[12] = v1103[12];
              v1102[13] = v1112;
              uint64_t v1113 = v1103[15];
              v1102[14] = v1103[14];
              v1102[15] = v1113;
              *((unsigned char *)v1102 + 128) = *((unsigned char *)v1103 + 128);
              *(_WORD *)((char *)v1102 + 129) = *(_WORD *)((char *)v1103 + 129);
              uint64_t v1114 = v1103[18];
              v1102[17] = v1103[17];
              v1102[18] = v1114;
              uint64_t v1115 = v1103[20];
              v1102[19] = v1103[19];
              v1102[20] = v1115;
              uint64_t v1116 = v1103[22];
              v1102[21] = v1103[21];
              v1102[22] = v1116;
              uint64_t v1117 = v1103[24];
              v1102[23] = v1103[23];
              v1102[24] = v1117;
              uint64_t v1118 = v1103[26];
              v1102[25] = v1103[25];
              v1102[26] = v1118;
              uint64_t v1119 = v1103[28];
              v1102[27] = v1103[27];
              v1102[28] = v1119;
              uint64_t v1120 = v1103[30];
              v1102[29] = v1103[29];
              v1102[30] = v1120;
              uint64_t v1121 = v1103[32];
              v1102[31] = v1103[31];
              v1102[32] = v1121;
              uint64_t v1123 = v1103[33];
              uint64_t v1122 = v1103[34];
              *((unsigned char *)v1102 + 280) = *((unsigned char *)v1103 + 280);
              v1102[33] = v1123;
              v1102[34] = v1122;
              uint64_t v1124 = v1103[37];
              v1102[36] = v1103[36];
              v1102[37] = v1124;
              uint64_t v1125 = *(int *)(v1104 + 108);
              uint64_t v2574 = (char *)v1102 + v1125;
              v2597 = (void *)v1104;
              uint64_t v1126 = (char *)v1103 + v1125;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1126, 1, v43))
              {
                uint64_t v1127 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2574, v1126, *(void *)(*(void *)(v1127 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v2574, v1126, v43);
                __swift_storeEnumTagSinglePayload((uint64_t)v2574, 0, 1, v43);
              }
              uint64_t v1136 = *(int *)(v1104 + 112);
              uint64_t v1137 = (char *)v1102 + v1136;
              uint64_t v1138 = (char *)v1103 + v1136;
              long long v697 = v2619;
              uint64_t v893 = v2677;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1103 + v1136, 1, v43))
              {
                uint64_t v1139 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1137, v1138, *(void *)(*(void *)(v1139 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v1137, v1138, v43);
                __swift_storeEnumTagSinglePayload((uint64_t)v1137, 0, 1, v43);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v1102, 0, 1, (uint64_t)v2597);
              long long v695 = v2637;
            }
            uint64_t v1186 = v697[9];
            uint64_t v1187 = (void *)((char *)v695 + v1186);
            uint64_t v1188 = (void *)((char *)v893 + v1186);
            uint64_t v1189 = type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1188, 1, v1189))
            {
              uint64_t v1190 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v1187, v1188, *(void *)(*(void *)(v1190 - 8) + 64));
            }
            else
            {
              uint64_t v1191 = v1188[1];
              *uint64_t v1187 = *v1188;
              v1187[1] = v1191;
              uint64_t v1192 = v1188[3];
              v1187[2] = v1188[2];
              v1187[3] = v1192;
              uint64_t v1193 = v1188[5];
              v1187[4] = v1188[4];
              v1187[5] = v1193;
              uint64_t v1194 = v1188[7];
              v1187[6] = v1188[6];
              v1187[7] = v1194;
              uint64_t v1195 = v1188[9];
              v1187[8] = v1188[8];
              v1187[9] = v1195;
              uint64_t v1196 = v1188[11];
              v1187[10] = v1188[10];
              v1187[11] = v1196;
              uint64_t v1197 = v1188[13];
              v1187[12] = v1188[12];
              v1187[13] = v1197;
              uint64_t v1198 = v1188[15];
              v1187[14] = v1188[14];
              v1187[15] = v1198;
              *((unsigned char *)v1187 + 128) = *((unsigned char *)v1188 + 128);
              *(_WORD *)((char *)v1187 + 129) = *(_WORD *)((char *)v1188 + 129);
              uint64_t v1199 = v1188[18];
              v1187[17] = v1188[17];
              v1187[18] = v1199;
              uint64_t v1200 = v1188[20];
              v1187[19] = v1188[19];
              v1187[20] = v1200;
              uint64_t v1201 = v1188[22];
              v1187[21] = v1188[21];
              v1187[22] = v1201;
              uint64_t v1202 = v1188[24];
              v1187[23] = v1188[23];
              v1187[24] = v1202;
              uint64_t v1203 = v1188[26];
              v1187[25] = v1188[25];
              v1187[26] = v1203;
              uint64_t v1204 = v1188[28];
              v1187[27] = v1188[27];
              v1187[28] = v1204;
              uint64_t v1205 = v1188[30];
              v1187[29] = v1188[29];
              v1187[30] = v1205;
              v1187[31] = v1188[31];
              uint64_t v1206 = *(int *)(v1189 + 96);
              uint64_t v2576 = (char *)v1187 + v1206;
              uint64_t v2598 = (int *)v1189;
              uint64_t v1207 = (char *)v1188 + v1206;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1207, 1, v43))
              {
                uint64_t v1208 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2576, v1207, *(void *)(*(void *)(v1208 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v2576, v1207, v43);
                __swift_storeEnumTagSinglePayload((uint64_t)v2576, 0, 1, v43);
              }
              uint64_t v1217 = v2598[25];
              uint64_t v1218 = (char *)v1187 + v1217;
              uint64_t v1219 = (char *)v1188 + v1217;
              uint64_t v893 = v2677;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1188 + v1217, 1, v43))
              {
                uint64_t v1220 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1218, v1219, *(void *)(*(void *)(v1220 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v1218, v1219, v43);
                __swift_storeEnumTagSinglePayload((uint64_t)v1218, 0, 1, v43);
              }
              uint64_t v1231 = v2598[26];
              uint64_t v1232 = (char *)v1187 + v1231;
              uint64_t v1233 = (char *)v1188 + v1231;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1188 + v1231, 1, v2658))
              {
                uint64_t v1234 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1232, v1233, *(void *)(*(void *)(v1234 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v1232, v1233, v2658);
                __swift_storeEnumTagSinglePayload((uint64_t)v1232, 0, 1, v2658);
              }
              long long v697 = v2619;
              __swift_storeEnumTagSinglePayload((uint64_t)v1187, 0, 1, (uint64_t)v2598);
              long long v695 = v2637;
            }
            uint64_t v1276 = v697[10];
            uint64_t v1277 = (void *)((char *)v695 + v1276);
            uint64_t v1278 = (void *)((char *)v893 + v1276);
            uint64_t v1279 = type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1278, 1, v1279))
            {
              uint64_t v1280 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1277, v1278, *(void *)(*(void *)(v1280 - 8) + 64));
            }
            else
            {
              uint64_t v1281 = v1278[1];
              void *v1277 = *v1278;
              v1277[1] = v1281;
              uint64_t v1282 = v1278[3];
              v1277[2] = v1278[2];
              v1277[3] = v1282;
              uint64_t v1283 = v1278[5];
              v1277[4] = v1278[4];
              v1277[5] = v1283;
              uint64_t v1284 = v1278[7];
              v1277[6] = v1278[6];
              v1277[7] = v1284;
              uint64_t v1285 = v1278[9];
              v1277[8] = v1278[8];
              v1277[9] = v1285;
              uint64_t v1286 = v1278[11];
              v1277[10] = v1278[10];
              v1277[11] = v1286;
              uint64_t v1287 = v1278[13];
              v1277[12] = v1278[12];
              v1277[13] = v1287;
              uint64_t v1288 = v1278[15];
              v1277[14] = v1278[14];
              v1277[15] = v1288;
              *((unsigned char *)v1277 + 128) = *((unsigned char *)v1278 + 128);
              *(_WORD *)((char *)v1277 + 129) = *(_WORD *)((char *)v1278 + 129);
              uint64_t v1289 = v1278[18];
              v1277[17] = v1278[17];
              v1277[18] = v1289;
              uint64_t v1290 = v1278[20];
              v1277[19] = v1278[19];
              v1277[20] = v1290;
              uint64_t v1291 = v1278[22];
              v1277[21] = v1278[21];
              v1277[22] = v1291;
              uint64_t v1292 = v1278[24];
              v1277[23] = v1278[23];
              v1277[24] = v1292;
              uint64_t v1293 = v1278[26];
              v1277[25] = v1278[25];
              v1277[26] = v1293;
              v1277[27] = v1278[27];
              uint64_t v2599 = (int *)v1279;
              uint64_t v1294 = *(int *)(v1279 + 88);
              v2578 = (char *)v1277 + v1294;
              uint64_t v1295 = (char *)v1278 + v1294;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1295, 1, v43))
              {
                uint64_t v1296 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2578, v1295, *(void *)(*(void *)(v1296 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v2578, v1295, v43);
                __swift_storeEnumTagSinglePayload((uint64_t)v2578, 0, 1, v43);
              }
              uint64_t v1305 = *(int *)(v1279 + 92);
              uint64_t v1306 = (char *)v1277 + v1305;
              uint64_t v1307 = (char *)v1278 + v1305;
              long long v697 = v2619;
              uint64_t v893 = v2677;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1278 + v1305, 1, v43))
              {
                uint64_t v1308 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1306, v1307, *(void *)(*(void *)(v1308 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v1306, v1307, v43);
                __swift_storeEnumTagSinglePayload((uint64_t)v1306, 0, 1, v43);
              }
              uint64_t v1325 = v2599[24];
              v1326 = (char *)v1277 + v1325;
              uint64_t v1327 = (char *)v1278 + v1325;
              *(void *)v1326 = *(void *)v1327;
              v1326[8] = v1327[8];
              uint64_t v1328 = v2599[25];
              uint64_t v1329 = (char *)v1277 + v1328;
              v1330 = (char *)v1278 + v1328;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1278 + v1328, 1, v2658))
              {
                uint64_t v1331 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1329, v1330, *(void *)(*(void *)(v1331 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v1329, v1330, v2658);
                __swift_storeEnumTagSinglePayload((uint64_t)v1329, 0, 1, v2658);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v1277, 0, 1, (uint64_t)v2599);
              long long v695 = v2637;
            }
            uint64_t v1364 = v697[11];
            uint64_t v1365 = (void *)((char *)v695 + v1364);
            v1366 = (void *)((char *)v893 + v1364);
            uint64_t v1367 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1366, 1, (uint64_t)v1367))
            {
              uint64_t v1368 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1365, v1366, *(void *)(*(void *)(v1368 - 8) + 64));
            }
            else
            {
              uint64_t v1369 = v1366[1];
              *uint64_t v1365 = *v1366;
              v1365[1] = v1369;
              uint64_t v1370 = v1366[3];
              v1365[2] = v1366[2];
              v1365[3] = v1370;
              uint64_t v1371 = v1366[5];
              v1365[4] = v1366[4];
              v1365[5] = v1371;
              uint64_t v1372 = v1366[7];
              v1365[6] = v1366[6];
              v1365[7] = v1372;
              uint64_t v1373 = v1366[9];
              v1365[8] = v1366[8];
              v1365[9] = v1373;
              uint64_t v1374 = v1366[11];
              v1365[10] = v1366[10];
              v1365[11] = v1374;
              *((unsigned char *)v1365 + 96) = *((unsigned char *)v1366 + 96);
              uint64_t v1375 = v1366[14];
              v1365[13] = v1366[13];
              v1365[14] = v1375;
              uint64_t v1376 = v1367[13];
              uint64_t v2601 = (char *)v1365 + v1376;
              v1377 = (char *)v1366 + v1376;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1377, 1, v2658))
              {
                uint64_t v1378 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2601, v1377, *(void *)(*(void *)(v1378 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v2601, v1377, v2658);
                __swift_storeEnumTagSinglePayload((uint64_t)v2601, 0, 1, v2658);
              }
              uint64_t v1387 = v1367[14];
              uint64_t v1388 = (char *)v1365 + v1387;
              uint64_t v1389 = (char *)v1366 + v1387;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1366 + v1387, 1, v2658))
              {
                uint64_t v1390 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1388, v1389, *(void *)(*(void *)(v1390 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v1388, v1389, v2658);
                __swift_storeEnumTagSinglePayload((uint64_t)v1388, 0, 1, v2658);
              }
              uint64_t v1531 = v1367[15];
              uint64_t v1532 = (void *)((char *)v1365 + v1531);
              uint64_t v1533 = (void *)((char *)v1366 + v1531);
              uint64_t v1534 = v1533[1];
              void *v1532 = *v1533;
              v1532[1] = v1534;
              uint64_t v1535 = v1367[16];
              v1536 = (void *)((char *)v1365 + v1535);
              uint64_t v1537 = (void *)((char *)v1366 + v1535);
              v2604 = (void *)v1537[1];
              void *v1536 = *v1537;
              v1536[1] = v2604;
              uint64_t v1538 = v1367[17];
              uint64_t v1539 = (void *)((char *)v1365 + v1538);
              v1540 = (void *)((char *)v1366 + v1538);
              uint64_t v1541 = v1540[1];
              void *v1539 = *v1540;
              v1539[1] = v1541;
              uint64_t v1542 = v1367[18];
              uint64_t v2563 = (char *)v1366 + v1542;
              uint64_t v2584 = (char *)v1365 + v1542;
              uint64_t v1543 = type metadata accessor for DateComponents();
              uint64_t v1544 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1543 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1544(v2584, v2563, v1543);
              v1544((char *)v1365 + v1367[19], (char *)v1366 + v1367[19], v1543);
              uint64_t v1545 = v1367[20];
              uint64_t v1546 = (void *)((char *)v1365 + v1545);
              v1547 = (void *)((char *)v1366 + v1545);
              uint64_t v1548 = v1547[1];
              void *v1546 = *v1547;
              v1546[1] = v1548;
              uint64_t v1549 = v1367[21];
              uint64_t v1550 = (void *)((char *)v1365 + v1549);
              v1551 = (void *)((char *)v1366 + v1549);
              uint64_t v1552 = v1551[1];
              void *v1550 = *v1551;
              v1550[1] = v1552;
              uint64_t v1553 = v1367[22];
              v1554 = (void *)((char *)v1365 + v1553);
              v1555 = (void *)((char *)v1366 + v1553);
              uint64_t v2605 = (void *)v1555[1];
              void *v1554 = *v1555;
              v1554[1] = v2605;
              uint64_t v1556 = v1367[23];
              uint64_t v1557 = (void *)((char *)v1365 + v1556);
              v1558 = (void *)((char *)v1366 + v1556);
              uint64_t v2585 = (void *)v1558[1];
              *uint64_t v1557 = *v1558;
              v1557[1] = v2585;
              uint64_t v1559 = v1367[24];
              uint64_t v1560 = (void *)((char *)v1365 + v1559);
              uint64_t v1561 = (void *)((char *)v1366 + v1559);
              uint64_t v2564 = (void *)v1561[1];
              void *v1560 = *v1561;
              v1560[1] = v2564;
              uint64_t v1562 = v1367[25];
              uint64_t v1563 = (void *)((char *)v1365 + v1562);
              uint64_t v1564 = (void *)((char *)v1366 + v1562);
              uint64_t v2540 = (void *)v1564[1];
              *uint64_t v1563 = *v1564;
              v1563[1] = v2540;
              uint64_t v1565 = v1367[26];
              uint64_t v1566 = (void *)((char *)v1365 + v1565);
              uint64_t v1567 = (void *)((char *)v1366 + v1565);
              uint64_t v2534 = v1567[1];
              *uint64_t v1566 = *v1567;
              v1566[1] = v2534;
              uint64_t v1568 = v1367[27];
              uint64_t v1569 = (void *)((char *)v1365 + v1568);
              uint64_t v1570 = (void *)((char *)v1366 + v1568);
              __dstd = (void *)v1570[1];
              *uint64_t v1569 = *v1570;
              v1569[1] = __dstd;
              uint64_t v1571 = v1367[28];
              uint64_t v1572 = (void *)((char *)v1365 + v1571);
              uint64_t v1573 = (void *)((char *)v1366 + v1571);
              uint64_t v2524 = (void *)v1573[1];
              *uint64_t v1572 = *v1573;
              v1572[1] = v2524;
              uint64_t v1574 = v1367[29];
              uint64_t v1575 = (void *)((char *)v1365 + v1574);
              uint64_t v1576 = (void *)((char *)v1366 + v1574);
              uint64_t v2520 = v1576[1];
              *uint64_t v1575 = *v1576;
              v1575[1] = v2520;
              uint64_t v1577 = v1367[30];
              uint64_t v1578 = (void *)((char *)v1365 + v1577);
              uint64_t v1579 = (void *)((char *)v1366 + v1577);
              uint64_t v2517 = v1579[1];
              void *v1578 = *v1579;
              v1578[1] = v2517;
              uint64_t v1580 = v1367[31];
              uint64_t v1581 = (void *)((char *)v1365 + v1580);
              uint64_t v1582 = (void *)((char *)v1366 + v1580);
              uint64_t v2514 = v1582[1];
              void *v1581 = *v1582;
              v1581[1] = v2514;
              uint64_t v1583 = v1367[32];
              uint64_t v1584 = (void *)((char *)v1365 + v1583);
              v1585 = (void *)((char *)v1366 + v1583);
              uint64_t v2508 = v1585[1];
              void *v1584 = *v1585;
              v1584[1] = v2508;
              *(void *)((char *)v1365 + v1367[33]) = *(void *)((char *)v1366 + v1367[33]);
              *(void *)((char *)v1365 + v1367[34]) = *(void *)((char *)v1366 + v1367[34]);
              uint64_t v1586 = v1367[35];
              uint64_t v1587 = (void *)((char *)v1365 + v1586);
              uint64_t v1588 = (void *)((char *)v1366 + v1586);
              uint64_t v1589 = v1588[1];
              *uint64_t v1587 = *v1588;
              v1587[1] = v1589;
              uint64_t v1590 = v1367[36];
              uint64_t v1591 = (void *)((char *)v1365 + v1590);
              uint64_t v1592 = (void *)((char *)v1366 + v1590);
              uint64_t v1593 = v1592[1];
              void *v1591 = *v1592;
              v1591[1] = v1593;
              uint64_t v1594 = v1367[37];
              uint64_t v1595 = (void *)((char *)v1365 + v1594);
              v1596 = (void *)((char *)v1366 + v1594);
              uint64_t v1597 = v1596[1];
              void *v1595 = *v1596;
              v1595[1] = v1597;
              uint64_t v1598 = v1367[38];
              uint64_t v2548 = (char *)v1365 + v1598;
              uint64_t v1599 = (char *)v1366 + v1598;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1599, 1, v2685))
              {
                uint64_t v1600 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2548, v1599, *(void *)(*(void *)(v1600 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2685 - 8) + 16))(v2548, v1599, v2685);
                __swift_storeEnumTagSinglePayload((uint64_t)v2548, 0, 1, v2685);
              }
              uint64_t v1702 = v1367[39];
              v1703 = (void *)((char *)v1365 + v1702);
              uint64_t v1704 = (void *)((char *)v1366 + v1702);
              uint64_t v1705 = v1704[1];
              void *v1703 = *v1704;
              v1703[1] = v1705;
              uint64_t v1706 = v1367[40];
              uint64_t v1707 = (void *)((char *)v1365 + v1706);
              uint64_t v1708 = (void *)((char *)v1366 + v1706);
              uint64_t v1709 = v1708[1];
              void *v1707 = *v1708;
              v1707[1] = v1709;
              uint64_t v1710 = v1367[41];
              uint64_t v1711 = (char *)v1365 + v1710;
              v1712 = (char *)v1366 + v1710;
              v1711[8] = v1712[8];
              *(void *)uint64_t v1711 = *(void *)v1712;
              uint64_t v1713 = v1367[42];
              uint64_t v1714 = (void *)((char *)v1365 + v1713);
              v1715 = (void *)((char *)v1366 + v1713);
              uint64_t v1716 = v1715[1];
              *uint64_t v1714 = *v1715;
              v1714[1] = v1716;
              uint64_t v1717 = v1367[43];
              uint64_t v1718 = (char *)v1365 + v1717;
              v1719 = (char *)v1366 + v1717;
              *(_OWORD *)uint64_t v1718 = *(_OWORD *)v1719;
              *(void *)(v1718 + 13) = *(void *)(v1719 + 13);
              uint64_t v1720 = v1367[44];
              uint64_t v1721 = (void *)((char *)v1365 + v1720);
              uint64_t v1722 = (void *)((char *)v1366 + v1720);
              uint64_t v1723 = v1722[1];
              *uint64_t v1721 = *v1722;
              v1721[1] = v1723;
              uint64_t v1724 = v1367[45];
              uint64_t v1725 = (void *)((char *)v1365 + v1724);
              uint64_t v1726 = (void *)((char *)v1366 + v1724);
              uint64_t v1727 = v1726[1];
              *uint64_t v1725 = *v1726;
              v1725[1] = v1727;
              uint64_t v1728 = v1367[46];
              uint64_t v1729 = (void *)((char *)v1365 + v1728);
              uint64_t v1730 = (void *)((char *)v1366 + v1728);
              uint64_t v1731 = v1730[1];
              *uint64_t v1729 = *v1730;
              v1729[1] = v1731;
              uint64_t v1732 = v1367[47];
              uint64_t v1733 = (void *)((char *)v1365 + v1732);
              uint64_t v1734 = (void *)((char *)v1366 + v1732);
              uint64_t v1735 = v1734[1];
              *uint64_t v1733 = *v1734;
              v1733[1] = v1735;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1365, 0, 1, (uint64_t)v1367);
              long long v697 = v2619;
              long long v695 = v2637;
            }
            uint64_t v1736 = v697[12];
            uint64_t v1737 = (void *)((char *)v695 + v1736);
            uint64_t v1738 = (void *)((char *)v2677 + v1736);
            uint64_t v1739 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1738, 1, (uint64_t)v1739))
            {
              uint64_t v1740 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1737, v1738, *(void *)(*(void *)(v1740 - 8) + 64));
            }
            else
            {
              uint64_t v1741 = v1738[1];
              void *v1737 = *v1738;
              v1737[1] = v1741;
              uint64_t v1742 = v1738[3];
              v1737[2] = v1738[2];
              v1737[3] = v1742;
              uint64_t v1743 = v1738[5];
              v1737[4] = v1738[4];
              v1737[5] = v1743;
              uint64_t v1744 = v1738[7];
              v1737[6] = v1738[6];
              v1737[7] = v1744;
              uint64_t v1745 = v1738[9];
              v1737[8] = v1738[8];
              v1737[9] = v1745;
              uint64_t v1746 = v1738[11];
              v1737[10] = v1738[10];
              v1737[11] = v1746;
              *((unsigned char *)v1737 + 96) = *((unsigned char *)v1738 + 96);
              uint64_t v1747 = v1738[14];
              v1737[13] = v1738[13];
              v1737[14] = v1747;
              uint64_t v1748 = v1738[16];
              v1737[15] = v1738[15];
              v1737[16] = v1748;
              uint64_t v1749 = v1739[14];
              uint64_t v2607 = (char *)v1737 + v1749;
              __dsta = (char *)v1738 + v1749;
              uint64_t v1750 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)__dsta, 1, v1750))
              {
                uint64_t v1751 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2607, __dsta, *(void *)(*(void *)(v1751 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v2607, __dsta, v1750);
                __swift_storeEnumTagSinglePayload((uint64_t)v2607, 0, 1, v1750);
              }
              uint64_t v1760 = v1739[15];
              uint64_t v1761 = (char *)v1737 + v1760;
              uint64_t v1762 = (char *)v1738 + v1760;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1738 + v1760, 1, v1750))
              {
                uint64_t v1763 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1761, v1762, *(void *)(*(void *)(v1763 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1750 - 8) + 16))(v1761, v1762, v1750);
                __swift_storeEnumTagSinglePayload((uint64_t)v1761, 0, 1, v1750);
              }
              uint64_t v1881 = v1739[16];
              uint64_t v1882 = (void *)((char *)v1737 + v1881);
              uint64_t v1883 = (void *)((char *)v1738 + v1881);
              uint64_t v1884 = v1883[1];
              *uint64_t v1882 = *v1883;
              v1882[1] = v1884;
              uint64_t v1885 = v1739[17];
              uint64_t v1886 = (void *)((char *)v1737 + v1885);
              uint64_t v1887 = (void *)((char *)v1738 + v1885);
              uint64_t v1888 = v1887[1];
              *uint64_t v1886 = *v1887;
              v1886[1] = v1888;
              uint64_t v1889 = v1739[18];
              uint64_t v1890 = (void *)((char *)v1737 + v1889);
              uint64_t v1891 = (void *)((char *)v1738 + v1889);
              uint64_t v2609 = (void *)v1891[1];
              *uint64_t v1890 = *v1891;
              v1890[1] = v2609;
              uint64_t v1892 = v1739[19];
              v1893 = (void *)((char *)v1737 + v1892);
              uint64_t v1894 = (void *)((char *)v1738 + v1892);
              uint64_t v2589 = (void *)v1894[1];
              void *v1893 = *v1894;
              v1893[1] = v2589;
              uint64_t v1895 = v1739[20];
              uint64_t v1896 = (void *)((char *)v1737 + v1895);
              uint64_t v1897 = (void *)((char *)v1738 + v1895);
              uint64_t v2550 = (void *)v1897[1];
              void *v1896 = *v1897;
              v1896[1] = v2550;
              *(void *)((char *)v1737 + v1739[21]) = *(void *)((char *)v1738 + v1739[21]);
              *(void *)((char *)v1737 + v1739[22]) = *(void *)((char *)v1738 + v1739[22]);
              uint64_t v1898 = v1739[23];
              uint64_t v1899 = (char *)v1737 + v1898;
              uint64_t v1900 = (char *)v1738 + v1898;
              *(void *)uint64_t v1899 = *(void *)v1900;
              v1899[8] = v1900[8];
              uint64_t v1901 = v1739[24];
              uint64_t v1902 = (char *)v1737 + v1901;
              uint64_t v1903 = (char *)v1738 + v1901;
              *(void *)uint64_t v1902 = *(void *)v1903;
              v1902[8] = v1903[8];
              uint64_t v1904 = v1739[25];
              v1905 = (void *)((char *)v1737 + v1904);
              uint64_t v1906 = (void *)((char *)v1738 + v1904);
              uint64_t v2542 = (void *)v1906[1];
              void *v1905 = *v1906;
              v1905[1] = v2542;
              uint64_t v1907 = v1739[26];
              v1908 = (void *)((char *)v1737 + v1907);
              v1909 = (void *)((char *)v1738 + v1907);
              uint64_t v1910 = v1909[1];
              void *v1908 = *v1909;
              v1908[1] = v1910;
              uint64_t v1911 = v1739[27];
              v1912 = (void *)((char *)v1737 + v1911);
              v1913 = (void *)((char *)v1738 + v1911);
              uint64_t v1914 = v1913[1];
              void *v1912 = *v1913;
              v1912[1] = v1914;
              uint64_t v1915 = v1739[28];
              v1916 = (void *)((char *)v1737 + v1915);
              uint64_t v1917 = (void *)((char *)v1738 + v1915);
              uint64_t v1918 = v1917[1];
              void *v1916 = *v1917;
              v1916[1] = v1918;
              uint64_t v1919 = v1739[29];
              uint64_t v1920 = (char *)v1737 + v1919;
              uint64_t v1921 = (char *)v1738 + v1919;
              *(void *)uint64_t v1920 = *(void *)v1921;
              v1920[8] = v1921[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1737, 0, 1, (uint64_t)v1739);
              long long v697 = v2619;
              long long v695 = v2637;
            }
            uint64_t v1922 = v697[13];
            uint64_t v1923 = (void *)((char *)v695 + v1922);
            uint64_t v1924 = (void *)((char *)v2677 + v1922);
            uint64_t v1925 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1924, 1, (uint64_t)v1925))
            {
              uint64_t v1926 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1923, v1924, *(void *)(*(void *)(v1926 - 8) + 64));
            }
            else
            {
              uint64_t v1927 = v1924[1];
              void *v1923 = *v1924;
              v1923[1] = v1927;
              uint64_t v1928 = v1924[3];
              v1923[2] = v1924[2];
              v1923[3] = v1928;
              uint64_t v1929 = v1924[5];
              v1923[4] = v1924[4];
              v1923[5] = v1929;
              uint64_t v1930 = v1924[7];
              v1923[6] = v1924[6];
              v1923[7] = v1930;
              uint64_t v1931 = v1924[9];
              v1923[8] = v1924[8];
              v1923[9] = v1931;
              uint64_t v1932 = v1924[11];
              v1923[10] = v1924[10];
              v1923[11] = v1932;
              *((unsigned char *)v1923 + 96) = *((unsigned char *)v1924 + 96);
              uint64_t v1933 = v1924[14];
              v1923[13] = v1924[13];
              v1923[14] = v1933;
              uint64_t v1934 = v1924[16];
              v1923[15] = v1924[15];
              v1923[16] = v1934;
              uint64_t v1935 = v1925[14];
              uint64_t v2678 = (char *)v1923 + v1935;
              uint64_t v1936 = (char *)v1924 + v1935;
              uint64_t v1937 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1936, 1, v1937))
              {
                uint64_t v1938 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2678, v1936, *(void *)(*(void *)(v1938 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1937 - 8) + 16))(v2678, v1936, v1937);
                __swift_storeEnumTagSinglePayload((uint64_t)v2678, 0, 1, v1937);
              }
              uint64_t v2318 = v1925[15];
              uint64_t v2319 = (void *)((char *)v1923 + v2318);
              uint64_t v2320 = (void *)((char *)v1924 + v2318);
              uint64_t v2321 = v2320[1];
              *uint64_t v2319 = *v2320;
              v2319[1] = v2321;
              uint64_t v2322 = v1925[16];
              uint64_t v2323 = (void *)((char *)v1923 + v2322);
              uint64_t v2324 = (void *)((char *)v1924 + v2322);
              uint64_t v2325 = v2324[1];
              *uint64_t v2323 = *v2324;
              v2323[1] = v2325;
              uint64_t v2326 = v1925[17];
              uint64_t v2327 = (void *)((char *)v1923 + v2326);
              v2328 = (void *)((char *)v1924 + v2326);
              uint64_t v2329 = v2328[1];
              *uint64_t v2327 = *v2328;
              v2327[1] = v2329;
              uint64_t v2330 = v1925[18];
              uint64_t v2331 = (void *)((char *)v1923 + v2330);
              v2332 = (void *)((char *)v1924 + v2330);
              uint64_t v2680 = v2332[1];
              *uint64_t v2331 = *v2332;
              v2331[1] = v2680;
              uint64_t v2333 = v1925[19];
              uint64_t v2334 = (void *)((char *)v1923 + v2333);
              uint64_t v2335 = (void *)((char *)v1924 + v2333);
              uint64_t v2336 = v2335[1];
              *uint64_t v2334 = *v2335;
              v2334[1] = v2336;
              *(void *)((char *)v1923 + v1925[20]) = *(void *)((char *)v1924 + v1925[20]);
              uint64_t v2337 = v1925[21];
              uint64_t v2338 = (void *)((char *)v1923 + v2337);
              uint64_t v2339 = (void *)((char *)v1924 + v2337);
              uint64_t v2340 = v2339[1];
              *uint64_t v2338 = *v2339;
              v2338[1] = v2340;
              uint64_t v2341 = v1925[22];
              uint64_t v2342 = (void *)((char *)v1923 + v2341);
              uint64_t v2343 = (void *)((char *)v1924 + v2341);
              uint64_t v2344 = v2343[1];
              *uint64_t v2342 = *v2343;
              v2342[1] = v2344;
              uint64_t v2345 = v1925[23];
              uint64_t v2346 = (void *)((char *)v1923 + v2345);
              uint64_t v2347 = (void *)((char *)v1924 + v2345);
              uint64_t v2348 = v2347[1];
              *uint64_t v2346 = *v2347;
              v2346[1] = v2348;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1923, 0, 1, (uint64_t)v1925);
              long long v697 = v2619;
              long long v695 = v2637;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v695, 0, 1, (uint64_t)v697);
            uint64_t v690 = v2720;
          }
          uint64_t v2349 = v2699[20];
          uint64_t v2350 = (void *)((char *)v690 + v2349);
          uint64_t v2351 = (void *)((char *)v11 + v2349);
          uint64_t v2352 = type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2351, 1, v2352))
          {
            uint64_t v2353 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v2350, v2351, *(void *)(*(void *)(v2353 - 8) + 64));
          }
          else
          {
            uint64_t v2354 = v2351[1];
            *uint64_t v2350 = *v2351;
            v2350[1] = v2354;
            uint64_t v2355 = v2351[3];
            v2356 = (int *)v2352;
            v2350[2] = v2351[2];
            v2350[3] = v2355;
            uint64_t v2357 = v2351[5];
            v2350[4] = v2351[4];
            v2350[5] = v2357;
            uint64_t v2358 = v2351[7];
            v2350[6] = v2351[6];
            v2350[7] = v2358;
            uint64_t v2359 = v2351[9];
            v2350[8] = v2351[8];
            v2350[9] = v2359;
            uint64_t v2360 = v2351[11];
            v2350[10] = v2351[10];
            v2350[11] = v2360;
            uint64_t v2681 = v2356;
            uint64_t v2361 = v2356[10];
            uint64_t v2647 = (char *)v2350 + v2361;
            uint64_t v2362 = (char *)v2351 + v2361;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2362, 1, v2685))
            {
              uint64_t v2363 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2647, v2362, *(void *)(*(void *)(v2363 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2685 - 8) + 16))(v2647, v2362, v2685);
              __swift_storeEnumTagSinglePayload((uint64_t)v2647, 0, 1, v2685);
            }
            uint64_t v2364 = v2681[11];
            uint64_t v2365 = (char *)v2350 + v2364;
            uint64_t v2366 = (char *)v2351 + v2364;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2351 + v2364, 1, v2685))
            {
              uint64_t v2367 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2365, v2366, *(void *)(*(void *)(v2367 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2685 - 8) + 16))(v2365, v2366, v2685);
              __swift_storeEnumTagSinglePayload((uint64_t)v2365, 0, 1, v2685);
            }
            uint64_t v2368 = v2681[12];
            uint64_t v2369 = (void *)((char *)v2350 + v2368);
            uint64_t v2370 = (void *)((char *)v2351 + v2368);
            uint64_t v2371 = v2370[1];
            *uint64_t v2369 = *v2370;
            v2369[1] = v2371;
            uint64_t v2372 = v2681[13];
            uint64_t v2373 = (void *)((char *)v2350 + v2372);
            uint64_t v2374 = (void *)((char *)v2351 + v2372);
            uint64_t v2375 = v2374[1];
            *uint64_t v2373 = *v2374;
            v2373[1] = v2375;
            uint64_t v2376 = v2681[14];
            uint64_t v2377 = (void *)((char *)v2350 + v2376);
            uint64_t v2378 = (void *)((char *)v2351 + v2376);
            uint64_t v2379 = v2378[1];
            *uint64_t v2377 = *v2378;
            v2377[1] = v2379;
            uint64_t v2380 = v2681[15];
            uint64_t v2381 = (char *)v2350 + v2380;
            uint64_t v2382 = (char *)v2351 + v2380;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2382, 1, v2685))
            {
              uint64_t v2383 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2381, v2382, *(void *)(*(void *)(v2383 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2685 - 8) + 16))(v2381, v2382, v2685);
              __swift_storeEnumTagSinglePayload((uint64_t)v2381, 0, 1, v2685);
            }
            uint64_t v2384 = v2681[16];
            uint64_t v2385 = (void *)((char *)v2350 + v2384);
            uint64_t v2386 = (void *)((char *)v2351 + v2384);
            uint64_t v2387 = v2386[1];
            *uint64_t v2385 = *v2386;
            v2385[1] = v2387;
            uint64_t v2388 = v2681[17];
            uint64_t v2389 = (void *)((char *)v2350 + v2388);
            uint64_t v2390 = (void *)((char *)v2351 + v2388);
            uint64_t v2391 = v2390[1];
            void *v2389 = *v2390;
            v2389[1] = v2391;
            uint64_t v2392 = v2681[18];
            uint64_t v2393 = (void *)((char *)v2350 + v2392);
            uint64_t v2394 = (void *)((char *)v2351 + v2392);
            uint64_t v2648 = v2394[1];
            void *v2393 = *v2394;
            v2393[1] = v2648;
            uint64_t v2395 = v2681[19];
            v2396 = (void *)((char *)v2350 + v2395);
            uint64_t v2397 = (void *)((char *)v2351 + v2395);
            uint64_t v2398 = v2397[1];
            void *v2396 = *v2397;
            v2396[1] = v2398;
            uint64_t v2399 = v2681[20];
            uint64_t v2400 = (void *)((char *)v2350 + v2399);
            id v2401 = (void *)((char *)v2351 + v2399);
            uint64_t v2402 = v2401[1];
            void *v2400 = *v2401;
            v2400[1] = v2402;
            uint64_t v2403 = v2681[21];
            uint64_t v2404 = (void *)((char *)v2350 + v2403);
            uint64_t v2405 = (void *)((char *)v2351 + v2403);
            uint64_t v2406 = v2405[1];
            void *v2404 = *v2405;
            v2404[1] = v2406;
            uint64_t v2407 = v2681[22];
            uint64_t v2408 = (void *)((char *)v2350 + v2407);
            v2409 = (void *)((char *)v2351 + v2407);
            uint64_t v2410 = v2409[1];
            void *v2408 = *v2409;
            v2408[1] = v2410;
            uint64_t v2411 = v2681[23];
            v2412 = (void *)((char *)v2350 + v2411);
            v2413 = (void *)((char *)v2351 + v2411);
            uint64_t v2414 = v2413[1];
            void *v2412 = *v2413;
            v2412[1] = v2414;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2350, 0, 1, (uint64_t)v2681);
            uint64_t v690 = v2720;
          }
          uint64_t v2415 = v2699[21];
          uint64_t v2416 = (void *)((char *)v690 + v2415);
          v2417 = (void *)((char *)v11 + v2415);
          v2418 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2417, 1, (uint64_t)v2418))
          {
            uint64_t v2419 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v2416, v2417, *(void *)(*(void *)(v2419 - 8) + 64));
            uint64_t v373 = v2716;
          }
          else
          {
            uint64_t v2420 = v2417[1];
            void *v2416 = *v2417;
            v2416[1] = v2420;
            uint64_t v2421 = v2417[3];
            v2416[2] = v2417[2];
            v2416[3] = v2421;
            uint64_t v2422 = v2417[5];
            v2416[4] = v2417[4];
            v2416[5] = v2422;
            uint64_t v2423 = v2417[7];
            v2416[6] = v2417[6];
            v2416[7] = v2423;
            uint64_t v2424 = v2417[9];
            v2416[8] = v2417[8];
            v2416[9] = v2424;
            uint64_t v2649 = v2417[11];
            v2416[10] = v2417[10];
            v2416[11] = v2649;
            uint64_t v2425 = v2418[11];
            uint64_t v2682 = (char *)v2416 + v2425;
            v2426 = (char *)v2417 + v2425;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v373 = v2716;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2426, 1, v2685))
            {
              uint64_t v2427 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2682, v2426, *(void *)(*(void *)(v2427 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2685 - 8) + 16))(v2682, v2426, v2685);
              __swift_storeEnumTagSinglePayload((uint64_t)v2682, 0, 1, v2685);
            }
            uint64_t v2428 = v2418[12];
            uint64_t v2429 = (void *)((char *)v2416 + v2428);
            uint64_t v2430 = (void *)((char *)v2417 + v2428);
            uint64_t v2431 = v2430[1];
            *uint64_t v2429 = *v2430;
            v2429[1] = v2431;
            *(void *)((char *)v2416 + v2418[13]) = *(void *)((char *)v2417 + v2418[13]);
            uint64_t v2432 = v2418[14];
            v2433 = (char *)v2416 + v2432;
            v2434 = (char *)v2417 + v2432;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2434, 1, v2685))
            {
              uint64_t v2435 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2433, v2434, *(void *)(*(void *)(v2435 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2685 - 8) + 16))(v2433, v2434, v2685);
              __swift_storeEnumTagSinglePayload((uint64_t)v2433, 0, 1, v2685);
            }
            *(void *)((char *)v2416 + v2418[15]) = *(void *)((char *)v2417 + v2418[15]);
            *(void *)((char *)v2416 + v2418[16]) = *(void *)((char *)v2417 + v2418[16]);
            uint64_t v2436 = v2418[17];
            v2437 = (void *)((char *)v2416 + v2436);
            v2438 = (void *)((char *)v2417 + v2436);
            uint64_t v2439 = v2438[1];
            void *v2437 = *v2438;
            v2437[1] = v2439;
            *(void *)((char *)v2416 + v2418[18]) = *(void *)((char *)v2417 + v2418[18]);
            *(void *)((char *)v2416 + v2418[19]) = *(void *)((char *)v2417 + v2418[19]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2416, 0, 1, (uint64_t)v2418);
          }
          uint64_t v2440 = v2699[22];
          uint64_t v2441 = (void *)((char *)v2720 + v2440);
          uint64_t v2442 = (void *)((char *)v11 + v2440);
          v2443 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2442, 1, (uint64_t)v2443))
          {
            uint64_t v2444 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v2441, v2442, *(void *)(*(void *)(v2444 - 8) + 64));
          }
          else
          {
            uint64_t v2445 = v2442[1];
            *uint64_t v2441 = *v2442;
            v2441[1] = v2445;
            uint64_t v2446 = v2442[3];
            v2441[2] = v2442[2];
            v2441[3] = v2446;
            uint64_t v2447 = v2442[5];
            v2441[4] = v2442[4];
            v2441[5] = v2447;
            uint64_t v2448 = v2442[7];
            v2441[6] = v2442[6];
            v2441[7] = v2448;
            uint64_t v2449 = v2443[8];
            v2718 = (char *)v2441 + v2449;
            uint64_t v2450 = (char *)v2442 + v2449;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2450, 1, v2658))
            {
              uint64_t v2451 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2718, v2450, *(void *)(*(void *)(v2451 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2658 - 8) + 16))(v2718, v2450, v2658);
              __swift_storeEnumTagSinglePayload((uint64_t)v2718, 0, 1, v2658);
            }
            uint64_t v2452 = v2443[9];
            v2453 = (void *)((char *)v2441 + v2452);
            v2454 = (void *)((char *)v2442 + v2452);
            uint64_t v2455 = v2454[1];
            void *v2453 = *v2454;
            v2453[1] = v2455;
            uint64_t v2456 = v2443[10];
            v2457 = (void *)((char *)v2441 + v2456);
            v2458 = (void *)((char *)v2442 + v2456);
            uint64_t v2459 = v2458[1];
            void *v2457 = *v2458;
            v2457[1] = v2459;
            uint64_t v2460 = v2443[11];
            v2461 = (void *)((char *)v2441 + v2460);
            v2462 = (void *)((char *)v2442 + v2460);
            uint64_t v2463 = v2462[1];
            void *v2461 = *v2462;
            v2461[1] = v2463;
            uint64_t v2464 = v2443[12];
            v2719 = (char *)v2441 + v2464;
            v2465 = (char *)v2442 + v2464;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2465, 1, v2685))
            {
              uint64_t v2466 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2719, v2465, *(void *)(*(void *)(v2466 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2685 - 8) + 16))(v2719, v2465, v2685);
              __swift_storeEnumTagSinglePayload((uint64_t)v2719, 0, 1, v2685);
            }
            uint64_t v2467 = v2443[13];
            uint64_t v2468 = (char *)v2441 + v2467;
            uint64_t v2469 = (char *)v2442 + v2467;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2442 + v2467, 1, v2685))
            {
              uint64_t v2470 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2468, v2469, *(void *)(*(void *)(v2470 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2685 - 8) + 16))(v2468, v2469, v2685);
              __swift_storeEnumTagSinglePayload((uint64_t)v2468, 0, 1, v2685);
            }
            uint64_t v2471 = v2443[14];
            uint64_t v2472 = (char *)v2441 + v2471;
            v2473 = (char *)v2442 + v2471;
            *(void *)uint64_t v2472 = *(void *)v2473;
            v2472[8] = v2473[8];
            uint64_t v2474 = v2443[15];
            uint64_t v2475 = (void *)((char *)v2441 + v2474);
            uint64_t v2476 = (void *)((char *)v2442 + v2474);
            uint64_t v2477 = v2476[1];
            *uint64_t v2475 = *v2476;
            v2475[1] = v2477;
            uint64_t v2478 = v2443[16];
            uint64_t v2479 = (void *)((char *)v2441 + v2478);
            v2480 = (void *)((char *)v2442 + v2478);
            uint64_t v2481 = v2480[1];
            *uint64_t v2479 = *v2480;
            v2479[1] = v2481;
            uint64_t v2482 = v2443[17];
            v2483 = (void *)((char *)v2441 + v2482);
            v2484 = (void *)((char *)v2442 + v2482);
            uint64_t v2485 = v2484[1];
            void *v2483 = *v2484;
            v2483[1] = v2485;
            uint64_t v2486 = v2443[18];
            uint64_t v2487 = (void *)((char *)v2441 + v2486);
            uint64_t v2488 = (void *)((char *)v2442 + v2486);
            uint64_t v2489 = v2488[1];
            *uint64_t v2487 = *v2488;
            v2487[1] = v2489;
            uint64_t v2490 = v2443[19];
            uint64_t v2491 = (void *)((char *)v2441 + v2490);
            v2492 = (void *)((char *)v2442 + v2490);
            uint64_t v2493 = v2492[1];
            *uint64_t v2491 = *v2492;
            v2491[1] = v2493;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2441, 0, 1, (uint64_t)v2443);
          }
          uint64_t v2117 = v2699[23];
          uint64_t v14 = (uint64_t)v2720;
          goto LABEL_555;
        case 2u:
          uint64_t v45 = v11[1];
          *uint64_t v10 = *v11;
          v10[1] = v45;
          uint64_t v46 = v11[3];
          v10[2] = v11[2];
          v10[3] = v46;
          uint64_t v47 = v11[5];
          v10[4] = v11[4];
          v10[5] = v47;
          uint64_t v48 = (int *)type metadata accessor for CalendarEvent(0);
          uint64_t v49 = v48[7];
          uint64_t v50 = (char *)v10 + v49;
          uint64_t v51 = (char *)v11 + v49;
          uint64_t v52 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52))
          {
            uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
            __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v52);
          }
          uint64_t v358 = v48[8];
          long long v359 = (char *)v2720 + v358;
          uint64_t v360 = (char *)v11 + v358;
          if (__swift_getEnumTagSinglePayload((uint64_t)v11 + v358, 1, v52))
          {
            uint64_t v361 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v359, v360, *(void *)(*(void *)(v361 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v359, v360, v52);
            __swift_storeEnumTagSinglePayload((uint64_t)v359, 0, 1, v52);
          }
          uint64_t v529 = v48[9];
          uint64_t v530 = (void *)((char *)v2720 + v529);
          uint64_t v531 = (void *)((char *)v11 + v529);
          uint64_t v532 = v531[1];
          void *v530 = *v531;
          v530[1] = v532;
          *(void *)((char *)v2720 + v48[10]) = *(void *)((char *)v11 + v48[10]);
          *(void *)((char *)v2720 + v48[11]) = *(void *)((char *)v11 + v48[11]);
          uint64_t v533 = v48[12];
          uint64_t v534 = (void *)((char *)v2720 + v533);
          uint64_t v535 = (void *)((char *)v11 + v533);
          uint64_t v536 = v535[1];
          *uint64_t v534 = *v535;
          v534[1] = v536;
          uint64_t v537 = v48[13];
          uint64_t v538 = (void *)((char *)v2720 + v537);
          uint64_t v539 = (char *)v11 + v537;
          uint64_t v540 = *(void *)((char *)v11 + v537);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v540)
          {
            uint64_t v541 = *((void *)v539 + 1);
            uint64_t v542 = *((void *)v539 + 2);
            void *v538 = v540;
            v538[1] = v541;
            uint64_t v543 = *((void *)v539 + 3);
            uint64_t v544 = *((void *)v539 + 4);
            v538[2] = v542;
            v538[3] = v543;
            v538[4] = v544;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v699 = *((_OWORD *)v539 + 1);
            *(_OWORD *)uint64_t v538 = *(_OWORD *)v539;
            *((_OWORD *)v538 + 1) = v699;
            v538[4] = *((void *)v539 + 4);
          }
          uint64_t v14 = (uint64_t)v2720;
          goto LABEL_170;
        case 3u:
          uint64_t v54 = v11[1];
          *uint64_t v10 = *v11;
          v10[1] = v54;
          uint64_t v55 = v11[3];
          v10[2] = v11[2];
          v10[3] = v55;
          v2700 = v11;
          uint64_t v56 = v11[5];
          v10[4] = v11[4];
          v10[5] = v56;
          uint64_t v57 = v11[7];
          v10[6] = v11[6];
          v10[7] = v57;
          uint64_t v58 = v11[9];
          _OWORD v10[8] = v11[8];
          v10[9] = v58;
          v10[10] = v11[10];
          uint64_t v2686 = (int *)type metadata accessor for Photo(0);
          uint64_t v59 = v2686[11];
          Swift::String v60 = v11;
          uint64_t v2627 = (char *)v10 + v59;
          uint64_t v2652 = (char *)v11 + v59;
          uint64_t v61 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v2666 = v61;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2652, 1, v61))
          {
            uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2627, v2652, *(void *)(*(void *)(v62 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v2627, v2652, v61);
            __swift_storeEnumTagSinglePayload((uint64_t)v2627, 0, 1, v61);
          }
          uint64_t v362 = v10;
          *(void *)((char *)v10 + v2686[12]) = *(void *)((char *)v60 + v2686[12]);
          *(void *)((char *)v10 + v2686[13]) = *(void *)((char *)v60 + v2686[13]);
          *(void *)((char *)v10 + v2686[14]) = *(void *)((char *)v60 + v2686[14]);
          *(void *)((char *)v10 + v2686[15]) = *(void *)((char *)v60 + v2686[15]);
          uint64_t v363 = v2686[16];
          long long v364 = (void *)((char *)v10 + v363);
          long long v365 = (void *)((char *)v60 + v363);
          uint64_t v366 = v365[1];
          void *v364 = *v365;
          v364[1] = v366;
          uint64_t v367 = v2686[17];
          long long v368 = (void *)((char *)v10 + v367);
          long long v369 = (void *)((char *)v60 + v367);
          long long v370 = (int *)type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v371 = v369;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v369, 1, (uint64_t)v370))
          {
            uint64_t v372 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v368, v369, *(void *)(*(void *)(v372 - 8) + 64));
          }
          else
          {
            uint64_t v545 = v369[1];
            void *v368 = *v369;
            v368[1] = v545;
            uint64_t v2659 = v370;
            uint64_t v546 = v370[5];
            long long v547 = (void *)((char *)v368 + v546);
            uint64_t v548 = (void *)((char *)v369 + v546);
            uint64_t v549 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            uint64_t v550 = (uint64_t)v368;
            uint64_t v2635 = v371;
            if (__swift_getEnumTagSinglePayload((uint64_t)v548, 1, v549))
            {
              uint64_t v551 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v547, v548, *(void *)(*(void *)(v551 - 8) + 64));
            }
            else
            {
              uint64_t v769 = v548[1];
              void *v547 = *v548;
              v547[1] = v769;
              uint64_t v770 = v548[3];
              v547[2] = v548[2];
              v547[3] = v770;
              uint64_t v771 = v548[5];
              v547[4] = v548[4];
              v547[5] = v771;
              uint64_t v772 = v548[7];
              v547[6] = v548[6];
              v547[7] = v772;
              uint64_t v773 = v548[9];
              v547[8] = v548[8];
              v547[9] = v773;
              uint64_t v774 = v548[11];
              v547[10] = v548[10];
              v547[11] = v774;
              uint64_t v775 = v548[13];
              v547[12] = v548[12];
              v547[13] = v775;
              uint64_t v776 = v548[15];
              v547[14] = v548[14];
              v547[15] = v776;
              *((unsigned char *)v547 + 128) = *((unsigned char *)v548 + 128);
              *(_WORD *)((char *)v547 + 129) = *(_WORD *)((char *)v548 + 129);
              uint64_t v777 = v548[18];
              v547[17] = v548[17];
              v547[18] = v777;
              uint64_t v778 = v548[20];
              v547[19] = v548[19];
              v547[20] = v778;
              uint64_t v779 = v548[22];
              v547[21] = v548[21];
              v547[22] = v779;
              uint64_t v2502 = v548[24];
              v547[23] = v548[23];
              v547[24] = v2502;
              uint64_t v780 = v548[26];
              v547[25] = v548[25];
              v547[26] = v780;
              uint64_t v781 = v548[28];
              v547[27] = v548[27];
              v547[28] = v781;
              uint64_t v782 = v548[30];
              v547[29] = v548[29];
              v547[30] = v782;
              uint64_t v783 = v548[32];
              v547[31] = v548[31];
              v547[32] = v783;
              uint64_t v784 = v548[34];
              v547[33] = v548[33];
              v547[34] = v784;
              uint64_t v785 = v548[36];
              v547[35] = v548[35];
              v547[36] = v785;
              uint64_t v786 = v548[38];
              v547[37] = v548[37];
              v547[38] = v786;
              uint64_t v787 = v548[40];
              v547[39] = v548[39];
              v547[40] = v787;
              uint64_t v788 = v548[42];
              v547[41] = v548[41];
              v547[42] = v788;
              uint64_t v789 = v548[44];
              v547[43] = v548[43];
              v547[44] = v789;
              uint64_t v790 = v548[46];
              v547[45] = v548[45];
              v547[46] = v790;
              uint64_t v791 = v548[47];
              *((unsigned char *)v547 + 384) = *((unsigned char *)v548 + 384);
              v547[47] = v791;
              uint64_t v792 = v548[50];
              v547[49] = v548[49];
              v547[50] = v792;
              uint64_t v793 = v548[52];
              v547[51] = v548[51];
              v547[52] = v793;
              uint64_t v794 = *(int *)(v549 + 140);
              uint64_t v2592 = (char *)v547 + v794;
              uint64_t v795 = (char *)v548 + v794;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v795, 1, v2666))
              {
                uint64_t v796 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2592, v795, *(void *)(*(void *)(v796 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v2592, v795, v2666);
                __swift_storeEnumTagSinglePayload((uint64_t)v2592, 0, 1, v2666);
              }
              uint64_t v829 = *(int *)(v549 + 144);
              uint64_t v830 = (char *)v547 + v829;
              uint64_t v831 = (char *)v548 + v829;
              if (__swift_getEnumTagSinglePayload((uint64_t)v548 + v829, 1, v2666))
              {
                uint64_t v832 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v830, v831, *(void *)(*(void *)(v832 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v830, v831, v2666);
                __swift_storeEnumTagSinglePayload((uint64_t)v830, 0, 1, v2666);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v547, 0, 1, v549);
              uint64_t v371 = v2635;
            }
            uint64_t v864 = v370;
            uint64_t v865 = v370[6];
            uint64_t v866 = (void *)(v550 + v865);
            uint64_t v867 = (void *)((char *)v371 + v865);
            uint64_t v868 = type metadata accessor for TicketedTransportation(0);
            uint64_t v2620 = v550;
            if (__swift_getEnumTagSinglePayload((uint64_t)v867, 1, v868))
            {
              uint64_t v869 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v866, v867, *(void *)(*(void *)(v869 - 8) + 64));
            }
            else
            {
              uint64_t v870 = v867[1];
              void *v866 = *v867;
              v866[1] = v870;
              uint64_t v871 = v867[3];
              v866[2] = v867[2];
              v866[3] = v871;
              uint64_t v872 = v867[5];
              v866[4] = v867[4];
              v866[5] = v872;
              uint64_t v873 = v867[7];
              v866[6] = v867[6];
              v866[7] = v873;
              uint64_t v874 = v867[9];
              v866[8] = v867[8];
              v866[9] = v874;
              uint64_t v875 = v867[11];
              v866[10] = v867[10];
              v866[11] = v875;
              uint64_t v876 = v867[13];
              v866[12] = v867[12];
              v866[13] = v876;
              uint64_t v877 = v867[15];
              v866[14] = v867[14];
              v866[15] = v877;
              *((unsigned char *)v866 + 128) = *((unsigned char *)v867 + 128);
              *(_WORD *)((char *)v866 + 129) = *(_WORD *)((char *)v867 + 129);
              uint64_t v878 = v867[18];
              v866[17] = v867[17];
              v866[18] = v878;
              uint64_t v879 = v867[20];
              v866[19] = v867[19];
              v866[20] = v879;
              uint64_t v880 = v867[22];
              v866[21] = v867[21];
              v866[22] = v880;
              uint64_t v881 = v867[24];
              v866[23] = v867[23];
              v866[24] = v881;
              uint64_t v2553 = (void *)v867[26];
              v866[25] = v867[25];
              v866[26] = v2553;
              uint64_t v882 = v867[28];
              v866[27] = v867[27];
              v866[28] = v882;
              uint64_t v883 = v867[30];
              v866[29] = v867[29];
              v866[30] = v883;
              uint64_t v884 = v867[32];
              v866[31] = v867[31];
              v866[32] = v884;
              uint64_t v885 = v867[34];
              v866[33] = v867[33];
              v866[34] = v885;
              uint64_t v886 = v867[36];
              uint64_t v887 = v867[35];
              *((unsigned char *)v866 + 296) = *((unsigned char *)v867 + 296);
              v866[35] = v887;
              v866[36] = v886;
              uint64_t v888 = *(int *)(v868 + 112);
              uint64_t v2568 = (char *)v866 + v888;
              uint64_t v889 = (char *)v867 + v888;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v889, 1, v2666))
              {
                uint64_t v890 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2568, v889, *(void *)(*(void *)(v890 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v2568, v889, v2666);
                __swift_storeEnumTagSinglePayload((uint64_t)v2568, 0, 1, v2666);
              }
              uint64_t v922 = *(int *)(v868 + 116);
              uint64_t v923 = (char *)v866 + v922;
              long long v924 = (char *)v867 + v922;
              if (__swift_getEnumTagSinglePayload((uint64_t)v867 + v922, 1, v2666))
              {
                uint64_t v925 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v923, v924, *(void *)(*(void *)(v925 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v923, v924, v2666);
                __swift_storeEnumTagSinglePayload((uint64_t)v923, 0, 1, v2666);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v866, 0, 1, v868);
              uint64_t v371 = v2635;
            }
            uint64_t v957 = v370[7];
            uint64_t v958 = (void *)(v550 + v957);
            long long v959 = (void *)((char *)v371 + v957);
            long long v960 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v959, 1, (uint64_t)v960))
            {
              uint64_t v961 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v958, v959, *(void *)(*(void *)(v961 - 8) + 64));
            }
            else
            {
              uint64_t v962 = v959[1];
              void *v958 = *v959;
              v958[1] = v962;
              uint64_t v963 = v959[3];
              v958[2] = v959[2];
              v958[3] = v963;
              uint64_t v964 = v959[5];
              v958[4] = v959[4];
              v958[5] = v964;
              uint64_t v965 = v959[7];
              v958[6] = v959[6];
              v958[7] = v965;
              uint64_t v966 = v959[9];
              v958[8] = v959[8];
              v958[9] = v966;
              uint64_t v967 = v959[11];
              v958[10] = v959[10];
              v958[11] = v967;
              uint64_t v968 = v959[13];
              v958[12] = v959[12];
              v958[13] = v968;
              uint64_t v969 = v959[15];
              v958[14] = v959[14];
              v958[15] = v969;
              *((unsigned char *)v958 + 128) = *((unsigned char *)v959 + 128);
              *(_WORD *)((char *)v958 + 129) = *(_WORD *)((char *)v959 + 129);
              uint64_t v970 = v959[18];
              v958[17] = v959[17];
              v958[18] = v970;
              uint64_t v971 = v959[20];
              v958[19] = v959[19];
              v958[20] = v971;
              uint64_t v972 = v959[22];
              v958[21] = v959[21];
              v958[22] = v972;
              uint64_t v2505 = v959[24];
              v958[23] = v959[23];
              v958[24] = v2505;
              uint64_t v973 = v959[26];
              v958[25] = v959[25];
              v958[26] = v973;
              uint64_t v974 = v959[28];
              v958[27] = v959[27];
              v958[28] = v974;
              v2571 = (void *)v959[30];
              v958[29] = v959[29];
              v958[30] = v2571;
              uint64_t v975 = v959[32];
              v958[31] = v959[31];
              v958[32] = v975;
              uint64_t v976 = v959[34];
              v958[33] = v959[33];
              v958[34] = v976;
              uint64_t v977 = v959[36];
              uint64_t v978 = v959[35];
              *((unsigned char *)v958 + 296) = *((unsigned char *)v959 + 296);
              v958[35] = v978;
              v958[36] = v977;
              uint64_t v979 = v959[39];
              v958[38] = v959[38];
              v958[39] = v979;
              uint64_t v980 = v960[29];
              v2595 = (char *)v958 + v980;
              long long v981 = (char *)v959 + v980;
              uint64_t v982 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v981, 1, v982))
              {
                uint64_t v983 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2595, v981, *(void *)(*(void *)(v983 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v982 - 8) + 16))(v2595, v981, v982);
                __swift_storeEnumTagSinglePayload((uint64_t)v2595, 0, 1, v982);
              }
              uint64_t v1019 = v960[30];
              long long v1020 = (void *)((char *)v958 + v1019);
              uint64_t v1021 = (void *)((char *)v959 + v1019);
              uint64_t v1022 = v1021[1];
              *long long v1020 = *v1021;
              v1020[1] = v1022;
              uint64_t v1023 = v960[31];
              uint64_t v1024 = (char *)v958 + v1023;
              uint64_t v1025 = (char *)v959 + v1023;
              swift_bridgeObjectRetain();
              uint64_t v550 = v2620;
              uint64_t v864 = v370;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1025, 1, v2666))
              {
                uint64_t v1026 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1024, v1025, *(void *)(*(void *)(v1026 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v1024, v1025, v2666);
                __swift_storeEnumTagSinglePayload((uint64_t)v1024, 0, 1, v2666);
              }
              uint64_t v1039 = v960[32];
              long long v1040 = (char *)v958 + v1039;
              uint64_t v1041 = (char *)v959 + v1039;
              if (__swift_getEnumTagSinglePayload((uint64_t)v959 + v1039, 1, v2666))
              {
                uint64_t v1042 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1040, v1041, *(void *)(*(void *)(v1042 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v1040, v1041, v2666);
                __swift_storeEnumTagSinglePayload((uint64_t)v1040, 0, 1, v2666);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v958, 0, 1, (uint64_t)v960);
              uint64_t v371 = v2635;
            }
            uint64_t v1074 = v864[8];
            uint64_t v1075 = (void *)(v550 + v1074);
            uint64_t v1076 = (void *)((char *)v371 + v1074);
            uint64_t v1077 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1076, 1, v1077))
            {
              uint64_t v1078 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v1075, v1076, *(void *)(*(void *)(v1078 - 8) + 64));
            }
            else
            {
              uint64_t v1079 = v1076[1];
              *uint64_t v1075 = *v1076;
              v1075[1] = v1079;
              uint64_t v1080 = v1076[3];
              v1075[2] = v1076[2];
              v1075[3] = v1080;
              uint64_t v1081 = v1076[5];
              v1075[4] = v1076[4];
              v1075[5] = v1081;
              uint64_t v1082 = v1076[7];
              v1075[6] = v1076[6];
              v1075[7] = v1082;
              uint64_t v1083 = v1076[9];
              v1075[8] = v1076[8];
              v1075[9] = v1083;
              uint64_t v1084 = v1076[11];
              v1075[10] = v1076[10];
              v1075[11] = v1084;
              uint64_t v1085 = v1076[13];
              v1075[12] = v1076[12];
              v1075[13] = v1085;
              uint64_t v1086 = v1076[15];
              v1075[14] = v1076[14];
              v1075[15] = v1086;
              *((unsigned char *)v1075 + 128) = *((unsigned char *)v1076 + 128);
              *(_WORD *)((char *)v1075 + 129) = *(_WORD *)((char *)v1076 + 129);
              uint64_t v1087 = v1076[18];
              v1075[17] = v1076[17];
              v1075[18] = v1087;
              uint64_t v1088 = v1076[20];
              v1075[19] = v1076[19];
              v1075[20] = v1088;
              uint64_t v1089 = v1076[22];
              v1075[21] = v1076[21];
              v1075[22] = v1089;
              uint64_t v1090 = v1076[24];
              v1075[23] = v1076[23];
              v1075[24] = v1090;
              uint64_t v1091 = v1076[26];
              v1075[25] = v1076[25];
              v1075[26] = v1091;
              uint64_t v1092 = v1076[28];
              v1075[27] = v1076[27];
              v1075[28] = v1092;
              uint64_t v1093 = v1076[30];
              v1075[29] = v1076[29];
              v1075[30] = v1093;
              uint64_t v1094 = v1076[32];
              v1075[31] = v1076[31];
              v1075[32] = v1094;
              uint64_t v1096 = v1076[33];
              uint64_t v1095 = v1076[34];
              *((unsigned char *)v1075 + 280) = *((unsigned char *)v1076 + 280);
              v1075[33] = v1096;
              v1075[34] = v1095;
              uint64_t v1097 = v1076[37];
              v1075[36] = v1076[36];
              v1075[37] = v1097;
              uint64_t v1098 = *(int *)(v1077 + 108);
              uint64_t v2573 = (char *)v1075 + v1098;
              long long v1099 = (char *)v1076 + v1098;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1099, 1, v2666))
              {
                uint64_t v1100 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2573, v1099, *(void *)(*(void *)(v1100 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v2573, v1099, v2666);
                __swift_storeEnumTagSinglePayload((uint64_t)v2573, 0, 1, v2666);
              }
              uint64_t v1132 = *(int *)(v1077 + 112);
              uint64_t v1133 = (char *)v1075 + v1132;
              uint64_t v1134 = (char *)v1076 + v1132;
              uint64_t v864 = v370;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1076 + v1132, 1, v2666))
              {
                uint64_t v1135 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1133, v1134, *(void *)(*(void *)(v1135 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v1133, v1134, v2666);
                __swift_storeEnumTagSinglePayload((uint64_t)v1133, 0, 1, v2666);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v1075, 0, 1, v1077);
              uint64_t v371 = v2635;
            }
            uint64_t v1163 = v864[9];
            uint64_t v1164 = (void *)(v550 + v1163);
            uint64_t v1165 = (void *)((char *)v371 + v1163);
            uint64_t v1166 = (int *)type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1165, 1, (uint64_t)v1166))
            {
              uint64_t v1167 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v1164, v1165, *(void *)(*(void *)(v1167 - 8) + 64));
            }
            else
            {
              uint64_t v1168 = v1165[1];
              *uint64_t v1164 = *v1165;
              v1164[1] = v1168;
              uint64_t v1169 = v1165[3];
              v1164[2] = v1165[2];
              v1164[3] = v1169;
              uint64_t v1170 = v1165[5];
              v1164[4] = v1165[4];
              v1164[5] = v1170;
              uint64_t v1171 = v1165[7];
              v1164[6] = v1165[6];
              v1164[7] = v1171;
              uint64_t v1172 = v1165[9];
              v1164[8] = v1165[8];
              v1164[9] = v1172;
              uint64_t v1173 = v1165[11];
              v1164[10] = v1165[10];
              v1164[11] = v1173;
              uint64_t v1174 = v1165[13];
              v1164[12] = v1165[12];
              v1164[13] = v1174;
              uint64_t v1175 = v1165[15];
              v1164[14] = v1165[14];
              v1164[15] = v1175;
              *((unsigned char *)v1164 + 128) = *((unsigned char *)v1165 + 128);
              *(_WORD *)((char *)v1164 + 129) = *(_WORD *)((char *)v1165 + 129);
              uint64_t v1176 = v1165[18];
              v1164[17] = v1165[17];
              v1164[18] = v1176;
              uint64_t v1177 = v1165[20];
              v1164[19] = v1165[19];
              v1164[20] = v1177;
              uint64_t v1178 = v1165[22];
              v1164[21] = v1165[21];
              v1164[22] = v1178;
              uint64_t v1179 = v1165[24];
              v1164[23] = v1165[23];
              v1164[24] = v1179;
              uint64_t v1180 = v1165[26];
              v1164[25] = v1165[25];
              v1164[26] = v1180;
              uint64_t v1181 = v1165[28];
              v1164[27] = v1165[27];
              v1164[28] = v1181;
              uint64_t v1182 = v1165[30];
              v1164[29] = v1165[29];
              v1164[30] = v1182;
              v1164[31] = v1165[31];
              uint64_t v1183 = v1166[24];
              uint64_t v2575 = (char *)v1164 + v1183;
              uint64_t v1184 = (char *)v1165 + v1183;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1184, 1, v2666))
              {
                uint64_t v1185 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2575, v1184, *(void *)(*(void *)(v1185 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v2575, v1184, v2666);
                __swift_storeEnumTagSinglePayload((uint64_t)v2575, 0, 1, v2666);
              }
              uint64_t v1213 = v1166[25];
              uint64_t v1214 = (char *)v1164 + v1213;
              uint64_t v1215 = (char *)v1165 + v1213;
              uint64_t v550 = v2620;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1165 + v1213, 1, v2666))
              {
                uint64_t v1216 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1214, v1215, *(void *)(*(void *)(v1216 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v1214, v1215, v2666);
                __swift_storeEnumTagSinglePayload((uint64_t)v1214, 0, 1, v2666);
              }
              uint64_t v1226 = v1166[26];
              uint64_t v1227 = (char *)v1164 + v1226;
              uint64_t v1228 = (char *)v1165 + v1226;
              uint64_t v1229 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1228, 1, v1229))
              {
                uint64_t v1230 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1227, v1228, *(void *)(*(void *)(v1230 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1229 - 8) + 16))(v1227, v1228, v1229);
                __swift_storeEnumTagSinglePayload((uint64_t)v1227, 0, 1, v1229);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v1164, 0, 1, (uint64_t)v1166);
              uint64_t v371 = v2635;
            }
            uint64_t v1255 = v864[10];
            uint64_t v1256 = (void *)(v550 + v1255);
            uint64_t v1257 = (void *)((char *)v371 + v1255);
            uint64_t v1258 = (int *)type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1257, 1, (uint64_t)v1258))
            {
              uint64_t v1259 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1256, v1257, *(void *)(*(void *)(v1259 - 8) + 64));
            }
            else
            {
              uint64_t v1260 = v1257[1];
              *uint64_t v1256 = *v1257;
              v1256[1] = v1260;
              uint64_t v1261 = v1257[3];
              v1256[2] = v1257[2];
              v1256[3] = v1261;
              uint64_t v1262 = v1257[5];
              v1256[4] = v1257[4];
              v1256[5] = v1262;
              uint64_t v1263 = v1257[7];
              v1256[6] = v1257[6];
              v1256[7] = v1263;
              uint64_t v1264 = v1257[9];
              v1256[8] = v1257[8];
              v1256[9] = v1264;
              uint64_t v1265 = v1257[11];
              v1256[10] = v1257[10];
              v1256[11] = v1265;
              uint64_t v1266 = v1257[13];
              v1256[12] = v1257[12];
              v1256[13] = v1266;
              uint64_t v1267 = v1257[15];
              v1256[14] = v1257[14];
              v1256[15] = v1267;
              *((unsigned char *)v1256 + 128) = *((unsigned char *)v1257 + 128);
              *(_WORD *)((char *)v1256 + 129) = *(_WORD *)((char *)v1257 + 129);
              uint64_t v1268 = v1257[18];
              v1256[17] = v1257[17];
              v1256[18] = v1268;
              uint64_t v1269 = v1257[20];
              v1256[19] = v1257[19];
              v1256[20] = v1269;
              uint64_t v1270 = v1257[22];
              v1256[21] = v1257[21];
              v1256[22] = v1270;
              uint64_t v1271 = v1257[24];
              v1256[23] = v1257[23];
              v1256[24] = v1271;
              uint64_t v1272 = v1257[26];
              v1256[25] = v1257[25];
              v1256[26] = v1272;
              v1256[27] = v1257[27];
              uint64_t v1273 = v1258[22];
              uint64_t v2577 = (char *)v1256 + v1273;
              uint64_t v1274 = (char *)v1257 + v1273;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1274, 1, v2666))
              {
                uint64_t v1275 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2577, v1274, *(void *)(*(void *)(v1275 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v2577, v1274, v2666);
                __swift_storeEnumTagSinglePayload((uint64_t)v2577, 0, 1, v2666);
              }
              uint64_t v1301 = v1258[23];
              uint64_t v1302 = (char *)v1256 + v1301;
              uint64_t v1303 = (char *)v1257 + v1301;
              uint64_t v864 = v370;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1257 + v1301, 1, v2666))
              {
                uint64_t v1304 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1302, v1303, *(void *)(*(void *)(v1304 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v1302, v1303, v2666);
                __swift_storeEnumTagSinglePayload((uint64_t)v1302, 0, 1, v2666);
              }
              uint64_t v1317 = v1258[24];
              uint64_t v1318 = (char *)v1256 + v1317;
              v1319 = (char *)v1257 + v1317;
              *(void *)uint64_t v1318 = *(void *)v1319;
              v1318[8] = v1319[8];
              uint64_t v1320 = v1258[25];
              uint64_t v1321 = (char *)v1256 + v1320;
              v1322 = (char *)v1257 + v1320;
              uint64_t v1323 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1322, 1, v1323))
              {
                uint64_t v1324 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1321, v1322, *(void *)(*(void *)(v1324 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1323 - 8) + 16))(v1321, v1322, v1323);
                __swift_storeEnumTagSinglePayload((uint64_t)v1321, 0, 1, v1323);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v1256, 0, 1, (uint64_t)v1258);
              uint64_t v371 = v2635;
            }
            uint64_t v1348 = v864[11];
            uint64_t v1349 = (void *)(v550 + v1348);
            uint64_t v1350 = (void *)((char *)v371 + v1348);
            v1351 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1350, 1, (uint64_t)v1351))
            {
              uint64_t v1352 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1349, v1350, *(void *)(*(void *)(v1352 - 8) + 64));
            }
            else
            {
              uint64_t v1353 = v1350[1];
              void *v1349 = *v1350;
              v1349[1] = v1353;
              uint64_t v1354 = v1350[3];
              v1349[2] = v1350[2];
              v1349[3] = v1354;
              uint64_t v1355 = v1350[5];
              v1349[4] = v1350[4];
              v1349[5] = v1355;
              uint64_t v1356 = v1350[7];
              v1349[6] = v1350[6];
              v1349[7] = v1356;
              uint64_t v1357 = v1350[9];
              v1349[8] = v1350[8];
              v1349[9] = v1357;
              uint64_t v1358 = v1350[11];
              v1349[10] = v1350[10];
              v1349[11] = v1358;
              *((unsigned char *)v1349 + 96) = *((unsigned char *)v1350 + 96);
              uint64_t v1359 = v1350[14];
              v1349[13] = v1350[13];
              v1349[14] = v1359;
              uint64_t v1360 = v1351[13];
              uint64_t v2600 = (char *)v1349 + v1360;
              uint64_t v1361 = (char *)v1350 + v1360;
              uint64_t v1362 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1361, 1, v1362))
              {
                uint64_t v1363 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2600, v1361, *(void *)(*(void *)(v1363 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1362 - 8) + 16))(v2600, v1361, v1362);
                __swift_storeEnumTagSinglePayload((uint64_t)v2600, 0, 1, v1362);
              }
              uint64_t v1383 = v1351[14];
              uint64_t v1384 = (char *)v1349 + v1383;
              uint64_t v1385 = (char *)v1350 + v1383;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1350 + v1383, 1, v1362))
              {
                uint64_t v1386 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1384, v1385, *(void *)(*(void *)(v1386 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1362 - 8) + 16))(v1384, v1385, v1362);
                __swift_storeEnumTagSinglePayload((uint64_t)v1384, 0, 1, v1362);
              }
              uint64_t v1461 = v1351[15];
              uint64_t v1462 = (void *)((char *)v1349 + v1461);
              v1463 = (void *)((char *)v1350 + v1461);
              uint64_t v1464 = v1463[1];
              *uint64_t v1462 = *v1463;
              v1462[1] = v1464;
              uint64_t v1465 = v1351[16];
              uint64_t v1466 = (void *)((char *)v1349 + v1465);
              uint64_t v1467 = (void *)((char *)v1350 + v1465);
              uint64_t v1468 = v1467[1];
              *uint64_t v1466 = *v1467;
              v1466[1] = v1468;
              uint64_t v1469 = v1351[17];
              v1470 = (void *)((char *)v1349 + v1469);
              uint64_t v1471 = (void *)((char *)v1350 + v1469);
              uint64_t v1472 = v1471[1];
              void *v1470 = *v1471;
              v1470[1] = v1472;
              uint64_t v1473 = v1351[18];
              v2582 = (char *)v1350 + v1473;
              uint64_t v2602 = (char *)v1349 + v1473;
              uint64_t v1474 = type metadata accessor for DateComponents();
              uint64_t v1475 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1474 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1475(v2602, v2582, v1474);
              v1475((char *)v1349 + v1351[19], (char *)v1350 + v1351[19], v1474);
              uint64_t v1476 = v1351[20];
              uint64_t v1477 = (void *)((char *)v1349 + v1476);
              v1478 = (void *)((char *)v1350 + v1476);
              uint64_t v1479 = v1478[1];
              void *v1477 = *v1478;
              v1477[1] = v1479;
              uint64_t v1480 = v1351[21];
              v1481 = (void *)((char *)v1349 + v1480);
              uint64_t v1482 = (void *)((char *)v1350 + v1480);
              uint64_t v2547 = (void *)v1482[1];
              void *v1481 = *v1482;
              v1481[1] = v2547;
              uint64_t v1483 = v1351[22];
              v1484 = (void *)((char *)v1349 + v1483);
              uint64_t v1485 = (void *)((char *)v1350 + v1483);
              uint64_t v2603 = (void *)v1485[1];
              void *v1484 = *v1485;
              v1484[1] = v2603;
              uint64_t v1486 = v1351[23];
              uint64_t v1487 = (void *)((char *)v1349 + v1486);
              uint64_t v1488 = (void *)((char *)v1350 + v1486);
              uint64_t v2583 = (void *)v1488[1];
              void *v1487 = *v1488;
              v1487[1] = v2583;
              uint64_t v1489 = v1351[24];
              uint64_t v1490 = (void *)((char *)v1349 + v1489);
              uint64_t v1491 = (void *)((char *)v1350 + v1489);
              uint64_t v2562 = (void *)v1491[1];
              void *v1490 = *v1491;
              v1490[1] = v2562;
              uint64_t v1492 = v1351[25];
              uint64_t v1493 = (void *)((char *)v1349 + v1492);
              uint64_t v1494 = (void *)((char *)v1350 + v1492);
              uint64_t v2533 = v1494[1];
              void *v1493 = *v1494;
              v1493[1] = v2533;
              uint64_t v1495 = v1351[26];
              uint64_t v1496 = (void *)((char *)v1349 + v1495);
              uint64_t v1497 = (void *)((char *)v1350 + v1495);
              __dstc = (void *)v1497[1];
              void *v1496 = *v1497;
              v1496[1] = __dstc;
              uint64_t v1498 = v1351[27];
              uint64_t v1499 = (void *)((char *)v1349 + v1498);
              uint64_t v1500 = (void *)((char *)v1350 + v1498);
              uint64_t v2523 = (void *)v1500[1];
              void *v1499 = *v1500;
              v1499[1] = v2523;
              uint64_t v1501 = v1351[28];
              uint64_t v1502 = (void *)((char *)v1349 + v1501);
              uint64_t v1503 = (void *)((char *)v1350 + v1501);
              uint64_t v2519 = v1503[1];
              void *v1502 = *v1503;
              v1502[1] = v2519;
              uint64_t v1504 = v1351[29];
              uint64_t v1505 = (void *)((char *)v1349 + v1504);
              uint64_t v1506 = (void *)((char *)v1350 + v1504);
              uint64_t v2516 = v1506[1];
              void *v1505 = *v1506;
              v1505[1] = v2516;
              uint64_t v1507 = v1351[30];
              uint64_t v1508 = (void *)((char *)v1349 + v1507);
              uint64_t v1509 = (void *)((char *)v1350 + v1507);
              uint64_t v2513 = v1509[1];
              void *v1508 = *v1509;
              v1508[1] = v2513;
              uint64_t v1510 = v1351[31];
              uint64_t v1511 = (void *)((char *)v1349 + v1510);
              v1512 = (void *)((char *)v1350 + v1510);
              uint64_t v2511 = v1512[1];
              void *v1511 = *v1512;
              v1511[1] = v2511;
              uint64_t v1513 = v1351[32];
              uint64_t v1514 = (void *)((char *)v1349 + v1513);
              v1515 = (void *)((char *)v1350 + v1513);
              uint64_t v2507 = v1515[1];
              *uint64_t v1514 = *v1515;
              v1514[1] = v2507;
              *(void *)((char *)v1349 + v1351[33]) = *(void *)((char *)v1350 + v1351[33]);
              *(void *)((char *)v1349 + v1351[34]) = *(void *)((char *)v1350 + v1351[34]);
              uint64_t v1516 = v1351[35];
              uint64_t v1517 = (void *)((char *)v1349 + v1516);
              uint64_t v1518 = (void *)((char *)v1350 + v1516);
              uint64_t v1519 = v1518[1];
              *uint64_t v1517 = *v1518;
              v1517[1] = v1519;
              uint64_t v1520 = v1351[36];
              uint64_t v1521 = (void *)((char *)v1349 + v1520);
              uint64_t v1522 = (void *)((char *)v1350 + v1520);
              uint64_t v1523 = v1522[1];
              *uint64_t v1521 = *v1522;
              v1521[1] = v1523;
              uint64_t v1524 = v1351[37];
              uint64_t v1525 = (void *)((char *)v1349 + v1524);
              v1526 = (void *)((char *)v1350 + v1524);
              uint64_t v1527 = v1526[1];
              void *v1525 = *v1526;
              v1525[1] = v1527;
              uint64_t v1528 = v1351[38];
              v2539 = (char *)v1349 + v1528;
              uint64_t v1529 = (char *)v1350 + v1528;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1529, 1, v2666))
              {
                uint64_t v1530 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2539, v1529, *(void *)(*(void *)(v1530 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v2539, v1529, v2666);
                __swift_storeEnumTagSinglePayload((uint64_t)v2539, 0, 1, v2666);
              }
              uint64_t v1651 = v1351[39];
              uint64_t v1652 = (void *)((char *)v1349 + v1651);
              uint64_t v1653 = (void *)((char *)v1350 + v1651);
              uint64_t v1654 = v1653[1];
              void *v1652 = *v1653;
              v1652[1] = v1654;
              uint64_t v1655 = v1351[40];
              uint64_t v1656 = (void *)((char *)v1349 + v1655);
              uint64_t v1657 = (void *)((char *)v1350 + v1655);
              uint64_t v1658 = v1657[1];
              void *v1656 = *v1657;
              v1656[1] = v1658;
              uint64_t v1659 = v1351[41];
              uint64_t v1660 = (char *)v1349 + v1659;
              uint64_t v1661 = (char *)v1350 + v1659;
              v1660[8] = v1661[8];
              *(void *)uint64_t v1660 = *(void *)v1661;
              uint64_t v1662 = v1351[42];
              uint64_t v1663 = (void *)((char *)v1349 + v1662);
              uint64_t v1664 = (void *)((char *)v1350 + v1662);
              uint64_t v1665 = v1664[1];
              *uint64_t v1663 = *v1664;
              v1663[1] = v1665;
              uint64_t v1666 = v1351[43];
              uint64_t v1667 = (char *)v1349 + v1666;
              uint64_t v1668 = (char *)v1350 + v1666;
              *(_OWORD *)uint64_t v1667 = *(_OWORD *)v1668;
              *(void *)(v1667 + 13) = *(void *)(v1668 + 13);
              uint64_t v1669 = v1351[44];
              uint64_t v1670 = (void *)((char *)v1349 + v1669);
              uint64_t v1671 = (void *)((char *)v1350 + v1669);
              uint64_t v1672 = v1671[1];
              void *v1670 = *v1671;
              v1670[1] = v1672;
              uint64_t v1673 = v1351[45];
              uint64_t v1674 = (void *)((char *)v1349 + v1673);
              uint64_t v1675 = (void *)((char *)v1350 + v1673);
              uint64_t v1676 = v1675[1];
              void *v1674 = *v1675;
              v1674[1] = v1676;
              uint64_t v1677 = v1351[46];
              uint64_t v1678 = (void *)((char *)v1349 + v1677);
              uint64_t v1679 = (void *)((char *)v1350 + v1677);
              uint64_t v1680 = v1679[1];
              void *v1678 = *v1679;
              v1678[1] = v1680;
              uint64_t v1681 = v1351[47];
              uint64_t v1682 = (void *)((char *)v1349 + v1681);
              uint64_t v1683 = (void *)((char *)v1350 + v1681);
              uint64_t v1684 = v1683[1];
              void *v1682 = *v1683;
              v1682[1] = v1684;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1349, 0, 1, (uint64_t)v1351);
              uint64_t v550 = v2620;
              uint64_t v371 = v2635;
              uint64_t v864 = v2659;
            }
            uint64_t v1685 = v864[12];
            uint64_t v1686 = (void *)(v550 + v1685);
            uint64_t v1687 = (void *)((char *)v371 + v1685);
            v1688 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1687, 1, (uint64_t)v1688))
            {
              uint64_t v1689 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1686, v1687, *(void *)(*(void *)(v1689 - 8) + 64));
            }
            else
            {
              uint64_t v1690 = v1687[1];
              void *v1686 = *v1687;
              v1686[1] = v1690;
              uint64_t v1691 = v1687[3];
              v1686[2] = v1687[2];
              v1686[3] = v1691;
              uint64_t v1692 = v1687[5];
              v1686[4] = v1687[4];
              v1686[5] = v1692;
              uint64_t v1693 = v1687[7];
              v1686[6] = v1687[6];
              v1686[7] = v1693;
              uint64_t v1694 = v1687[9];
              v1686[8] = v1687[8];
              v1686[9] = v1694;
              uint64_t v1695 = v1687[11];
              v1686[10] = v1687[10];
              v1686[11] = v1695;
              *((unsigned char *)v1686 + 96) = *((unsigned char *)v1687 + 96);
              uint64_t v1696 = v1687[14];
              v1686[13] = v1687[13];
              v1686[14] = v1696;
              uint64_t v1697 = v1687[16];
              v1686[15] = v1687[15];
              v1686[16] = v1697;
              uint64_t v1698 = v1688[14];
              v2606 = (char *)v1686 + v1698;
              uint64_t v1699 = (char *)v1687 + v1698;
              uint64_t v1700 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1699, 1, v1700))
              {
                uint64_t v1701 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2606, v1699, *(void *)(*(void *)(v1701 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1700 - 8) + 16))(v2606, v1699, v1700);
                __swift_storeEnumTagSinglePayload((uint64_t)v2606, 0, 1, v1700);
              }
              uint64_t v1756 = v1688[15];
              v1757 = (char *)v1686 + v1756;
              uint64_t v1758 = (char *)v1687 + v1756;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1687 + v1756, 1, v1700))
              {
                uint64_t v1759 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1757, v1758, *(void *)(*(void *)(v1759 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1700 - 8) + 16))(v1757, v1758, v1700);
                __swift_storeEnumTagSinglePayload((uint64_t)v1757, 0, 1, v1700);
              }
              uint64_t v1822 = v1688[16];
              uint64_t v1823 = (void *)((char *)v1686 + v1822);
              uint64_t v1824 = (void *)((char *)v1687 + v1822);
              uint64_t v1825 = v1824[1];
              *uint64_t v1823 = *v1824;
              v1823[1] = v1825;
              uint64_t v1826 = v1688[17];
              uint64_t v1827 = (void *)((char *)v1686 + v1826);
              uint64_t v1828 = (void *)((char *)v1687 + v1826);
              uint64_t v1829 = v1828[1];
              *uint64_t v1827 = *v1828;
              v1827[1] = v1829;
              uint64_t v1830 = v1688[18];
              uint64_t v1831 = (void *)((char *)v1686 + v1830);
              v1832 = (void *)((char *)v1687 + v1830);
              uint64_t v2608 = (void *)v1832[1];
              *uint64_t v1831 = *v1832;
              v1831[1] = v2608;
              uint64_t v1833 = v1688[19];
              uint64_t v1834 = (void *)((char *)v1686 + v1833);
              uint64_t v1835 = (void *)((char *)v1687 + v1833);
              v2588 = (void *)v1835[1];
              void *v1834 = *v1835;
              v1834[1] = v2588;
              uint64_t v1836 = v1688[20];
              uint64_t v1837 = (void *)((char *)v1686 + v1836);
              uint64_t v1838 = (void *)((char *)v1687 + v1836);
              v2549 = (void *)v1838[1];
              *uint64_t v1837 = *v1838;
              v1837[1] = v2549;
              *(void *)((char *)v1686 + v1688[21]) = *(void *)((char *)v1687 + v1688[21]);
              *(void *)((char *)v1686 + v1688[22]) = *(void *)((char *)v1687 + v1688[22]);
              uint64_t v1839 = v1688[23];
              uint64_t v1840 = (char *)v1686 + v1839;
              uint64_t v1841 = (char *)v1687 + v1839;
              *(void *)uint64_t v1840 = *(void *)v1841;
              v1840[8] = v1841[8];
              uint64_t v1842 = v1688[24];
              uint64_t v1843 = (char *)v1686 + v1842;
              uint64_t v1844 = (char *)v1687 + v1842;
              *(void *)uint64_t v1843 = *(void *)v1844;
              v1843[8] = v1844[8];
              uint64_t v1845 = v1688[25];
              uint64_t v1846 = (void *)((char *)v1686 + v1845);
              uint64_t v1847 = (void *)((char *)v1687 + v1845);
              uint64_t v1848 = v1847[1];
              void *v1846 = *v1847;
              v1846[1] = v1848;
              uint64_t v1849 = v1688[26];
              uint64_t v1850 = (void *)((char *)v1686 + v1849);
              uint64_t v1851 = (void *)((char *)v1687 + v1849);
              uint64_t v1852 = v1851[1];
              void *v1850 = *v1851;
              v1850[1] = v1852;
              uint64_t v1853 = v1688[27];
              uint64_t v1854 = (void *)((char *)v1686 + v1853);
              uint64_t v1855 = (void *)((char *)v1687 + v1853);
              uint64_t v1856 = v1855[1];
              *uint64_t v1854 = *v1855;
              v1854[1] = v1856;
              uint64_t v1857 = v1688[28];
              uint64_t v1858 = (void *)((char *)v1686 + v1857);
              uint64_t v1859 = (void *)((char *)v1687 + v1857);
              uint64_t v1860 = v1859[1];
              void *v1858 = *v1859;
              v1858[1] = v1860;
              uint64_t v1861 = v1688[29];
              v1862 = (char *)v1686 + v1861;
              uint64_t v1863 = (char *)v1687 + v1861;
              *(void *)v1862 = *(void *)v1863;
              v1862[8] = v1863[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1686, 0, 1, (uint64_t)v1688);
              uint64_t v550 = v2620;
              uint64_t v371 = v2635;
              uint64_t v864 = v2659;
            }
            uint64_t v1864 = v864[13];
            uint64_t v1865 = (void *)(v550 + v1864);
            v1866 = (void *)((char *)v371 + v1864);
            uint64_t v1867 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1866, 1, (uint64_t)v1867))
            {
              uint64_t v1868 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1865, v1866, *(void *)(*(void *)(v1868 - 8) + 64));
            }
            else
            {
              uint64_t v1869 = v1866[1];
              *uint64_t v1865 = *v1866;
              v1865[1] = v1869;
              uint64_t v1870 = v1866[3];
              v1865[2] = v1866[2];
              v1865[3] = v1870;
              uint64_t v1871 = v1866[5];
              v1865[4] = v1866[4];
              v1865[5] = v1871;
              uint64_t v1872 = v1866[7];
              v1865[6] = v1866[6];
              v1865[7] = v1872;
              uint64_t v1873 = v1866[9];
              v1865[8] = v1866[8];
              v1865[9] = v1873;
              uint64_t v1874 = v1866[11];
              v1865[10] = v1866[10];
              v1865[11] = v1874;
              *((unsigned char *)v1865 + 96) = *((unsigned char *)v1866 + 96);
              uint64_t v1875 = v1866[14];
              v1865[13] = v1866[13];
              v1865[14] = v1875;
              uint64_t v1876 = v1866[16];
              v1865[15] = v1866[15];
              v1865[16] = v1876;
              uint64_t v1877 = v1867[14];
              uint64_t v2639 = (char *)v1865 + v1877;
              uint64_t v1878 = (char *)v1866 + v1877;
              uint64_t v1879 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1878, 1, v1879))
              {
                uint64_t v1880 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2639, v1878, *(void *)(*(void *)(v1880 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1879 - 8) + 16))(v2639, v1878, v1879);
                __swift_storeEnumTagSinglePayload((uint64_t)v2639, 0, 1, v1879);
              }
              uint64_t v2118 = v1867[15];
              uint64_t v2119 = (void *)((char *)v1865 + v2118);
              uint64_t v2120 = (void *)((char *)v1866 + v2118);
              uint64_t v2121 = v2120[1];
              void *v2119 = *v2120;
              v2119[1] = v2121;
              uint64_t v2122 = v1867[16];
              uint64_t v2123 = (void *)((char *)v1865 + v2122);
              uint64_t v2124 = (void *)((char *)v1866 + v2122);
              uint64_t v2125 = v2124[1];
              void *v2123 = *v2124;
              v2123[1] = v2125;
              uint64_t v2126 = v1867[17];
              uint64_t v2127 = (void *)((char *)v1865 + v2126);
              uint64_t v2128 = (void *)((char *)v1866 + v2126);
              uint64_t v2129 = v2128[1];
              void *v2127 = *v2128;
              v2127[1] = v2129;
              uint64_t v2130 = v1867[18];
              uint64_t v2131 = (void *)((char *)v1865 + v2130);
              uint64_t v2132 = (void *)((char *)v1866 + v2130);
              uint64_t v2644 = v2132[1];
              void *v2131 = *v2132;
              v2131[1] = v2644;
              uint64_t v2133 = v1867[19];
              v2134 = (void *)((char *)v1865 + v2133);
              uint64_t v2135 = (void *)((char *)v1866 + v2133);
              uint64_t v2136 = v2135[1];
              void *v2134 = *v2135;
              v2134[1] = v2136;
              *(void *)((char *)v1865 + v1867[20]) = *(void *)((char *)v1866 + v1867[20]);
              uint64_t v2137 = v1867[21];
              uint64_t v2138 = (void *)((char *)v1865 + v2137);
              uint64_t v2139 = (void *)((char *)v1866 + v2137);
              uint64_t v2140 = v2139[1];
              *uint64_t v2138 = *v2139;
              v2138[1] = v2140;
              uint64_t v2141 = v1867[22];
              uint64_t v2142 = (void *)((char *)v1865 + v2141);
              uint64_t v2143 = (void *)((char *)v1866 + v2141);
              uint64_t v2144 = v2143[1];
              *uint64_t v2142 = *v2143;
              v2142[1] = v2144;
              uint64_t v2145 = v1867[23];
              uint64_t v2146 = (void *)((char *)v1865 + v2145);
              uint64_t v2147 = (void *)((char *)v1866 + v2145);
              uint64_t v2148 = v2147[1];
              void *v2146 = *v2147;
              v2146[1] = v2148;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1865, 0, 1, (uint64_t)v1867);
              uint64_t v550 = v2620;
              uint64_t v864 = v2659;
            }
            __swift_storeEnumTagSinglePayload(v550, 0, 1, (uint64_t)v864);
            uint64_t v362 = v2720;
          }
          uint64_t v2149 = v2686[18];
          v2150 = (void *)((char *)v362 + v2149);
          uint64_t v2151 = (void *)((char *)v2700 + v2149);
          uint64_t v2152 = type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2151, 1, v2152))
          {
            uint64_t v2153 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v2150, v2151, *(void *)(*(void *)(v2153 - 8) + 64));
          }
          else
          {
            uint64_t v2154 = v2151[1];
            void *v2150 = *v2151;
            v2150[1] = v2154;
            uint64_t v2155 = v2151[3];
            v2150[2] = v2151[2];
            v2150[3] = v2155;
            uint64_t v2156 = v2151[5];
            v2150[4] = v2151[4];
            v2150[5] = v2156;
            uint64_t v2157 = v2151[7];
            v2150[6] = v2151[6];
            v2150[7] = v2157;
            uint64_t v2158 = v2151[9];
            v2150[8] = v2151[8];
            v2150[9] = v2158;
            uint64_t v2159 = (int *)v2152;
            uint64_t v2160 = v2151[11];
            v2150[10] = v2151[10];
            v2150[11] = v2160;
            uint64_t v2661 = v2159;
            uint64_t v2161 = v2159[10];
            v2162 = (char *)v2150 + v2161;
            v2163 = (char *)v2151 + v2161;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2163, 1, v2666))
            {
              uint64_t v2164 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2162, v2163, *(void *)(*(void *)(v2164 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v2162, v2163, v2666);
              __swift_storeEnumTagSinglePayload((uint64_t)v2162, 0, 1, v2666);
            }
            uint64_t v2165 = v2661[11];
            uint64_t v2166 = (char *)v2150 + v2165;
            uint64_t v2167 = (char *)v2151 + v2165;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2151 + v2165, 1, v2666))
            {
              uint64_t v2168 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2166, v2167, *(void *)(*(void *)(v2168 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v2166, v2167, v2666);
              __swift_storeEnumTagSinglePayload((uint64_t)v2166, 0, 1, v2666);
            }
            uint64_t v2169 = v2661[12];
            uint64_t v2170 = (void *)((char *)v2150 + v2169);
            uint64_t v2171 = (void *)((char *)v2151 + v2169);
            uint64_t v2172 = v2171[1];
            void *v2170 = *v2171;
            v2170[1] = v2172;
            uint64_t v2173 = v2661[13];
            v2174 = (void *)((char *)v2150 + v2173);
            uint64_t v2175 = (void *)((char *)v2151 + v2173);
            uint64_t v2176 = v2175[1];
            void *v2174 = *v2175;
            v2174[1] = v2176;
            uint64_t v2177 = v2661[14];
            v2178 = (void *)((char *)v2150 + v2177);
            uint64_t v2179 = (void *)((char *)v2151 + v2177);
            uint64_t v2180 = v2179[1];
            void *v2178 = *v2179;
            v2178[1] = v2180;
            uint64_t v2181 = v2661[15];
            v2182 = (char *)v2150 + v2181;
            uint64_t v2183 = (char *)v2151 + v2181;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2183, 1, v2666))
            {
              uint64_t v2184 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2182, v2183, *(void *)(*(void *)(v2184 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v2182, v2183, v2666);
              __swift_storeEnumTagSinglePayload((uint64_t)v2182, 0, 1, v2666);
            }
            uint64_t v2185 = v2661[16];
            v2186 = (void *)((char *)v2150 + v2185);
            uint64_t v2187 = (void *)((char *)v2151 + v2185);
            uint64_t v2188 = v2187[1];
            void *v2186 = *v2187;
            v2186[1] = v2188;
            uint64_t v2189 = v2661[17];
            v2190 = (void *)((char *)v2150 + v2189);
            uint64_t v2191 = (void *)((char *)v2151 + v2189);
            uint64_t v2192 = v2191[1];
            void *v2190 = *v2191;
            v2190[1] = v2192;
            uint64_t v2193 = v2661[18];
            uint64_t v2194 = (void *)((char *)v2150 + v2193);
            uint64_t v2195 = (void *)((char *)v2151 + v2193);
            uint64_t v2196 = v2195[1];
            *uint64_t v2194 = *v2195;
            v2194[1] = v2196;
            uint64_t v2197 = v2661[19];
            uint64_t v2198 = (void *)((char *)v2150 + v2197);
            uint64_t v2199 = (void *)((char *)v2151 + v2197);
            uint64_t v2200 = v2199[1];
            *uint64_t v2198 = *v2199;
            v2198[1] = v2200;
            uint64_t v2201 = v2661[20];
            uint64_t v2202 = (void *)((char *)v2150 + v2201);
            uint64_t v2203 = (void *)((char *)v2151 + v2201);
            uint64_t v2204 = v2203[1];
            *uint64_t v2202 = *v2203;
            v2202[1] = v2204;
            uint64_t v2205 = v2661[21];
            uint64_t v2206 = (void *)((char *)v2150 + v2205);
            uint64_t v2207 = (void *)((char *)v2151 + v2205);
            uint64_t v2208 = v2207[1];
            *uint64_t v2206 = *v2207;
            v2206[1] = v2208;
            uint64_t v2209 = v2661[22];
            uint64_t v2210 = (void *)((char *)v2150 + v2209);
            uint64_t v2211 = (void *)((char *)v2151 + v2209);
            uint64_t v2212 = v2211[1];
            void *v2210 = *v2211;
            v2210[1] = v2212;
            uint64_t v2213 = v2661[23];
            uint64_t v2214 = (void *)((char *)v2150 + v2213);
            uint64_t v2215 = (void *)((char *)v2151 + v2213);
            uint64_t v2216 = v2215[1];
            void *v2214 = *v2215;
            v2214[1] = v2216;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2150, 0, 1, (uint64_t)v2661);
            uint64_t v362 = v2720;
          }
          uint64_t v2217 = v2686[19];
          v2218 = (void *)((char *)v362 + v2217);
          uint64_t v11 = v2700;
          uint64_t v2219 = (void *)((char *)v2700 + v2217);
          uint64_t v2220 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2219, 1, (uint64_t)v2220))
          {
            uint64_t v2221 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v2218, v2219, *(void *)(*(void *)(v2221 - 8) + 64));
          }
          else
          {
            uint64_t v2222 = v2219[1];
            void *v2218 = *v2219;
            v2218[1] = v2222;
            uint64_t v2223 = v2219[3];
            v2218[2] = v2219[2];
            v2218[3] = v2223;
            uint64_t v2224 = v2219[5];
            v2218[4] = v2219[4];
            v2218[5] = v2224;
            uint64_t v2225 = v2219[7];
            v2218[6] = v2219[6];
            v2218[7] = v2225;
            uint64_t v2645 = v2219[9];
            v2218[8] = v2219[8];
            v2218[9] = v2645;
            uint64_t v2625 = v2219[11];
            v2218[10] = v2219[10];
            v2218[11] = v2625;
            uint64_t v2226 = v2220[11];
            uint64_t v2662 = (char *)v2218 + v2226;
            uint64_t v2227 = (char *)v2219 + v2226;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2227, 1, v2666))
            {
              uint64_t v2228 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2662, v2227, *(void *)(*(void *)(v2228 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v2662, v2227, v2666);
              __swift_storeEnumTagSinglePayload((uint64_t)v2662, 0, 1, v2666);
            }
            uint64_t v2229 = v2220[12];
            uint64_t v2230 = (void *)((char *)v2218 + v2229);
            uint64_t v2231 = (void *)((char *)v2219 + v2229);
            uint64_t v2232 = v2231[1];
            void *v2230 = *v2231;
            v2230[1] = v2232;
            *(void *)((char *)v2218 + v2220[13]) = *(void *)((char *)v2219 + v2220[13]);
            uint64_t v2233 = v2220[14];
            uint64_t v2234 = (char *)v2218 + v2233;
            v2235 = (char *)v2219 + v2233;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2235, 1, v2666))
            {
              uint64_t v2236 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2234, v2235, *(void *)(*(void *)(v2236 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v2234, v2235, v2666);
              __swift_storeEnumTagSinglePayload((uint64_t)v2234, 0, 1, v2666);
            }
            *(void *)((char *)v2218 + v2220[15]) = *(void *)((char *)v2219 + v2220[15]);
            *(void *)((char *)v2218 + v2220[16]) = *(void *)((char *)v2219 + v2220[16]);
            uint64_t v2237 = v2220[17];
            uint64_t v2238 = (void *)((char *)v2218 + v2237);
            uint64_t v2239 = (void *)((char *)v2219 + v2237);
            uint64_t v2240 = v2239[1];
            *uint64_t v2238 = *v2239;
            v2238[1] = v2240;
            *(void *)((char *)v2218 + v2220[18]) = *(void *)((char *)v2219 + v2220[18]);
            *(void *)((char *)v2218 + v2220[19]) = *(void *)((char *)v2219 + v2220[19]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2218, 0, 1, (uint64_t)v2220);
          }
          uint64_t v2241 = v2686[20];
          uint64_t v2242 = (void *)((char *)v2720 + v2241);
          v2243 = (void *)((char *)v2700 + v2241);
          v2244 = (int *)type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2243, 1, (uint64_t)v2244))
          {
            uint64_t v2245 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v2242, v2243, *(void *)(*(void *)(v2245 - 8) + 64));
          }
          else
          {
            uint64_t v2246 = v2243[1];
            *uint64_t v2242 = *v2243;
            v2242[1] = v2246;
            uint64_t v2247 = v2243[3];
            v2242[2] = v2243[2];
            v2242[3] = v2247;
            uint64_t v2248 = v2243[5];
            v2242[4] = v2243[4];
            v2242[5] = v2248;
            uint64_t v2249 = v2243[7];
            v2242[6] = v2243[6];
            v2242[7] = v2249;
            uint64_t v2250 = v2244[8];
            uint64_t v2663 = (char *)v2242 + v2250;
            uint64_t v2251 = (char *)v2243 + v2250;
            uint64_t v2252 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2251, 1, v2252))
            {
              uint64_t v2253 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2663, v2251, *(void *)(*(void *)(v2253 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2252 - 8) + 16))(v2663, v2251, v2252);
              __swift_storeEnumTagSinglePayload((uint64_t)v2663, 0, 1, v2252);
            }
            uint64_t v2254 = v2244[9];
            uint64_t v2255 = (void *)((char *)v2242 + v2254);
            uint64_t v2256 = (void *)((char *)v2243 + v2254);
            uint64_t v2257 = v2256[1];
            void *v2255 = *v2256;
            v2255[1] = v2257;
            uint64_t v2258 = v2244[10];
            uint64_t v2259 = (void *)((char *)v2242 + v2258);
            v2260 = (void *)((char *)v2243 + v2258);
            uint64_t v2261 = v2260[1];
            void *v2259 = *v2260;
            v2259[1] = v2261;
            uint64_t v2262 = v2244[11];
            uint64_t v2263 = (void *)((char *)v2242 + v2262);
            v2264 = (void *)((char *)v2243 + v2262);
            uint64_t v2265 = v2264[1];
            void *v2263 = *v2264;
            v2263[1] = v2265;
            uint64_t v2266 = v2244[12];
            uint64_t v2267 = (char *)v2242 + v2266;
            v2268 = (char *)v2243 + v2266;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2268, 1, v2666))
            {
              uint64_t v2269 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2267, v2268, *(void *)(*(void *)(v2269 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v2267, v2268, v2666);
              __swift_storeEnumTagSinglePayload((uint64_t)v2267, 0, 1, v2666);
            }
            uint64_t v2270 = v2244[13];
            uint64_t v2271 = (char *)v2242 + v2270;
            uint64_t v2272 = (char *)v2243 + v2270;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2243 + v2270, 1, v2666))
            {
              uint64_t v2273 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2271, v2272, *(void *)(*(void *)(v2273 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2666 - 8) + 16))(v2271, v2272, v2666);
              __swift_storeEnumTagSinglePayload((uint64_t)v2271, 0, 1, v2666);
            }
            uint64_t v2274 = v2244[14];
            uint64_t v2275 = (char *)v2242 + v2274;
            uint64_t v2276 = (char *)v2243 + v2274;
            *(void *)uint64_t v2275 = *(void *)v2276;
            v2275[8] = v2276[8];
            uint64_t v2277 = v2244[15];
            uint64_t v2278 = (void *)((char *)v2242 + v2277);
            uint64_t v2279 = (void *)((char *)v2243 + v2277);
            uint64_t v2280 = v2279[1];
            void *v2278 = *v2279;
            v2278[1] = v2280;
            uint64_t v2281 = v2244[16];
            uint64_t v2282 = (void *)((char *)v2242 + v2281);
            uint64_t v2283 = (void *)((char *)v2243 + v2281);
            uint64_t v2284 = v2283[1];
            void *v2282 = *v2283;
            v2282[1] = v2284;
            uint64_t v2285 = v2244[17];
            uint64_t v2286 = (void *)((char *)v2242 + v2285);
            uint64_t v2287 = (void *)((char *)v2243 + v2285);
            uint64_t v2288 = v2287[1];
            void *v2286 = *v2287;
            v2286[1] = v2288;
            uint64_t v2289 = v2244[18];
            uint64_t v2290 = (void *)((char *)v2242 + v2289);
            uint64_t v2291 = (void *)((char *)v2243 + v2289);
            uint64_t v2292 = v2291[1];
            void *v2290 = *v2291;
            v2290[1] = v2292;
            uint64_t v2293 = v2244[19];
            uint64_t v2294 = (void *)((char *)v2242 + v2293);
            v2295 = (void *)((char *)v2243 + v2293);
            uint64_t v2296 = v2295[1];
            void *v2294 = *v2295;
            v2294[1] = v2296;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2242, 0, 1, (uint64_t)v2244);
          }
          uint64_t v2297 = v2686[21];
          uint64_t v14 = (uint64_t)v2720;
          uint64_t v396 = (void *)((char *)v2720 + v2297);
          uint64_t v397 = (void *)((char *)v2700 + v2297);
          uint64_t v2298 = *(void *)((char *)v2700 + v2297 + 8);
          if (!v2298)
          {
            size_t v395 = 144;
            goto LABEL_511;
          }
          void *v396 = *v397;
          v396[1] = v2298;
          uint64_t v2299 = v397[3];
          v396[2] = v397[2];
          v396[3] = v2299;
          uint64_t v2300 = v397[5];
          v396[4] = v397[4];
          v396[5] = v2300;
          uint64_t v2301 = v397[7];
          v396[6] = v397[6];
          v396[7] = v2301;
          uint64_t v2302 = v397[9];
          v396[8] = v397[8];
          v396[9] = v2302;
          uint64_t v2303 = v397[11];
          v396[10] = v397[10];
          v396[11] = v2303;
          uint64_t v2646 = v397[13];
          v396[12] = v397[12];
          v396[13] = v2646;
          uint64_t v2679 = v397[15];
          v396[14] = v397[14];
          v396[15] = v2679;
          uint64_t v2304 = v397[17];
          v396[16] = v397[16];
          v396[17] = v2304;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v14 = (uint64_t)v2720;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_509:
          swift_bridgeObjectRetain();
          goto LABEL_512;
        case 4u:
          uint64_t v63 = v11[1];
          *(void *)uint64_t v14 = *v11;
          *(void *)(v14 + 8) = v63;
          uint64_t v64 = v11[2];
          uint64_t v65 = v11;
          uint64_t v66 = (void *)v14;
          uint64_t v67 = v65[3];
          v66[2] = v64;
          v66[3] = v67;
          uint64_t v68 = v65[5];
          v66[4] = v65[4];
          v66[5] = v68;
          uint64_t v69 = v65[7];
          v66[6] = v65[6];
          v66[7] = v69;
          uint64_t v70 = type metadata accessor for NoteDocument(0);
          uint64_t v71 = *(int *)(v70 + 32);
          v2701 = (char *)v66 + v71;
          uint64_t v11 = v65;
          uint64_t v72 = (char *)v65 + v71;
          uint64_t v73 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v72, 1, v73))
          {
            uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2701, v72, *(void *)(*(void *)(v74 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v2701, v72, v73);
            __swift_storeEnumTagSinglePayload((uint64_t)v2701, 0, 1, v73);
          }
          uint64_t v373 = v2716;
          uint64_t v374 = *(int *)(v70 + 36);
          uint64_t v14 = (uint64_t)v2720;
          long long v375 = (char *)v2720 + v374;
          long long v376 = (char *)v65 + v374;
          if (__swift_getEnumTagSinglePayload((uint64_t)v65 + v374, 1, v73))
          {
            size_t v377 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                         - 8)
                             + 64);
            long long v378 = v375;
            goto LABEL_153;
          }
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v375, v376, v73);
          uint64_t v552 = (uint64_t)v375;
          uint64_t v553 = v73;
          goto LABEL_163;
        case 5u:
          uint64_t v75 = v11[1];
          *(void *)uint64_t v14 = *v11;
          *(void *)(v14 + 8) = v75;
          uint64_t v76 = (void *)v14;
          uint64_t v77 = v11[3];
          v76[2] = v11[2];
          v76[3] = v77;
          uint64_t v78 = v11[5];
          v76[4] = v11[4];
          v76[5] = v78;
          uint64_t v79 = (int *)type metadata accessor for Reminder(0);
          uint64_t v80 = v79[7];
          uint64_t v81 = (char *)v76 + v80;
          uint64_t v82 = (char *)v11 + v80;
          uint64_t v83 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83))
          {
            uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
            __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v83);
          }
          uint64_t v379 = v79[8];
          uint64_t v14 = (uint64_t)v2720;
          long long v380 = (char *)v2720 + v379;
          long long v381 = (char *)v11 + v379;
          if (__swift_getEnumTagSinglePayload((uint64_t)v11 + v379, 1, v83))
          {
            uint64_t v382 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v380, v381, *(void *)(*(void *)(v382 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v380, v381, v83);
            __swift_storeEnumTagSinglePayload((uint64_t)v380, 0, 1, v83);
          }
          *((unsigned char *)v2720 + v79[9]) = *((unsigned char *)v11 + v79[9]);
          uint64_t v554 = v79[10];
          uint64_t v555 = (void *)((char *)v2720 + v554);
          uint64_t v556 = (void *)((char *)v11 + v554);
          uint64_t v557 = v556[1];
          *uint64_t v555 = *v556;
          v555[1] = v557;
          uint64_t v558 = v79[11];
          long long v559 = (void *)((char *)v2720 + v558);
          long long v560 = (void *)((char *)v11 + v558);
          uint64_t v561 = v560[1];
          void *v559 = *v560;
          v559[1] = v561;
          uint64_t v562 = v79[12];
          long long v563 = (char *)v2720 + v562;
          long long v564 = (char *)v11 + v562;
          uint64_t v565 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v564, 1, v565))
          {
            uint64_t v566 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v563, v564, *(void *)(*(void *)(v566 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v565 - 8) + 16))(v563, v564, v565);
            __swift_storeEnumTagSinglePayload((uint64_t)v563, 0, 1, v565);
          }
LABEL_170:
          uint64_t v373 = v12;
          goto LABEL_513;
        case 6u:
          uint64_t v85 = v11[1];
          *(void *)uint64_t v14 = *v11;
          *(void *)(v14 + 8) = v85;
          uint64_t v86 = v11[3];
          *(void *)(v14 + 16) = v11[2];
          *(void *)(v14 + 24) = v86;
          uint64_t v87 = v11[5];
          *(void *)(v14 + 32) = v11[4];
          *(void *)(v14 + 40) = v87;
          uint64_t v88 = v11[7];
          *(void *)(v14 + 48) = v11[6];
          *(void *)(v14 + 56) = v88;
          uint64_t v89 = type metadata accessor for PhoneHistory(0);
          uint64_t v90 = *(int *)(v89 + 40);
          uint64_t v2687 = (void *)(v14 + v90);
          v2702 = (int *)v89;
          uint64_t v91 = (char *)v11 + v90;
          uint64_t v92 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v91, 1, v92))
          {
            uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2687, v91, *(void *)(*(void *)(v93 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v92 - 8) + 16))(v2687, v91, v92);
            __swift_storeEnumTagSinglePayload((uint64_t)v2687, 0, 1, v92);
          }
          uint64_t v383 = v2702[11];
          uint64_t v14 = (uint64_t)v2720;
          uint64_t v384 = (void *)((char *)v2720 + v383);
          uint64_t v385 = (void *)((char *)v11 + v383);
          uint64_t v386 = v385[1];
          void *v384 = *v385;
          v384[1] = v386;
          uint64_t v387 = v2702[12];
          uint64_t v388 = (void *)((char *)v2720 + v387);
          uint64_t v389 = (void *)((char *)v11 + v387);
          uint64_t v390 = v389[1];
          void *v388 = *v389;
          v388[1] = v390;
          uint64_t v391 = v2702[13];
          uint64_t v392 = (uint64_t)v2720 + v391;
          uint64_t v393 = (uint64_t)v11 + v391;
          uint64_t v394 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload(v393, 1, v394))
          {
            size_t v395 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                         - 8)
                             + 64);
            uint64_t v396 = (void *)v392;
            uint64_t v397 = (void *)v393;
LABEL_511:
            memcpy(v396, v397, v395);
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v394 - 8) + 16))(v392, v393, v394);
            __swift_storeEnumTagSinglePayload(v392, 0, 1, v394);
          }
LABEL_512:
          uint64_t v373 = v2716;
          goto LABEL_513;
        case 7u:
          uint64_t v94 = v11[1];
          *(void *)uint64_t v14 = *v11;
          *(void *)(v14 + 8) = v94;
          uint64_t v95 = v11[2];
          uint64_t v96 = v11;
          uint64_t v97 = (void *)v14;
          uint64_t v98 = v96[3];
          v97[2] = v95;
          v97[3] = v98;
          uint64_t v99 = v96[5];
          v97[4] = v96[4];
          v97[5] = v99;
          uint64_t v100 = type metadata accessor for VoicemailTranscript(0);
          uint64_t v101 = *(int *)(v100 + 28);
          uint64_t v102 = (char *)v97 + v101;
          uint64_t v11 = v96;
          uint64_t v103 = (char *)v96 + v101;
          uint64_t v104 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v103, 1, v104))
          {
            uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v102, v103, *(void *)(*(void *)(v105 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v102, v103, v104);
            __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, v104);
          }
          uint64_t v373 = v2716;
          uint64_t v398 = *(int *)(v100 + 32);
          uint64_t v14 = (uint64_t)v2720;
          goto LABEL_84;
        case 8u:
          uint64_t v106 = v11[1];
          *(void *)uint64_t v14 = *v11;
          *(void *)(v14 + 8) = v106;
          uint64_t v107 = v11[3];
          *(void *)(v14 + 16) = v11[2];
          *(void *)(v14 + 24) = v107;
          uint64_t v108 = v14;
          uint64_t v109 = v11[5];
          *(void *)(v108 + 32) = v11[4];
          *(void *)(v108 + 40) = v109;
          uint64_t v110 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
          unint64_t v111 = (void *)(v108 + v110);
          uint64_t v112 = (char *)v11 + v110;
          uint64_t v113 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v112, 1, v113))
          {
            uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v111, v112, *(void *)(*(void *)(v114 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v113 - 8) + 16))(v111, v112, v113);
            __swift_storeEnumTagSinglePayload((uint64_t)v111, 0, 1, v113);
          }
          uint64_t v14 = (uint64_t)v2720;
          goto LABEL_512;
        case 9u:
          uint64_t v115 = v11[1];
          *(void *)uint64_t v14 = *v11;
          *(void *)(v14 + 8) = v115;
          uint64_t v116 = v11[2];
          uint64_t v117 = v11;
          uint64_t v118 = v14;
          uint64_t v119 = v117[3];
          *(void *)(v118 + 16) = v116;
          *(void *)(v118 + 24) = v119;
          uint64_t v120 = (int *)type metadata accessor for VoiceMemo(0);
          uint64_t v121 = v120[6];
          char v122 = (void *)(v118 + v121);
          uint64_t v11 = v117;
          BOOL v123 = (char *)v117 + v121;
          uint64_t v124 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v123, 1, v124))
          {
            uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v122, v123, *(void *)(*(void *)(v125 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v124 - 8) + 16))(v122, v123, v124);
            __swift_storeEnumTagSinglePayload((uint64_t)v122, 0, 1, v124);
          }
          uint64_t v373 = v2716;
          uint64_t v399 = v120[7];
          uint64_t v14 = (uint64_t)v2720;
          uint64_t v400 = (char *)v2720 + v399;
          uint64_t v401 = (char *)v117 + v399;
          *(void *)uint64_t v400 = *(void *)v401;
          v400[8] = v401[8];
          uint64_t v398 = v120[8];
LABEL_84:
          uint64_t v402 = (char *)(v14 + v398);
          uint64_t v403 = (uint64_t)v11 + v398;
          uint64_t v223 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v403, 1, v223)) {
            goto LABEL_162;
          }
          goto LABEL_159;
        case 0xAu:
          uint64_t v126 = v11[1];
          *(void *)uint64_t v14 = *v11;
          *(void *)(v14 + 8) = v126;
          uint64_t v127 = v11[2];
          uint64_t v128 = v11;
          uint64_t v129 = v14;
          uint64_t v130 = v128[3];
          *(void *)(v129 + 16) = v127;
          *(void *)(v129 + 24) = v130;
          uint64_t v131 = (int *)type metadata accessor for Safari(0);
          uint64_t v132 = v131[6];
          uint64_t v133 = (void *)(v129 + v132);
          uint64_t v11 = v128;
          uint64_t v134 = (char *)v128 + v132;
          uint64_t v135 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v134, 1, v135))
          {
            uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v133, v134, *(void *)(*(void *)(v136 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v135 - 8) + 16))(v133, v134, v135);
            __swift_storeEnumTagSinglePayload((uint64_t)v133, 0, 1, v135);
          }
          uint64_t v404 = v131[7];
          uint64_t v14 = (uint64_t)v2720;
          long long v405 = (void *)((char *)v2720 + v404);
          long long v406 = (void *)((char *)v128 + v404);
          uint64_t v407 = v406[1];
          *long long v405 = *v406;
          v405[1] = v407;
          uint64_t v408 = v131[8];
          uint64_t v409 = (void *)((char *)v2720 + v408);
          uint64_t v410 = (void *)((char *)v128 + v408);
          uint64_t v411 = v410[1];
          *uint64_t v409 = *v410;
          v409[1] = v411;
          uint64_t v412 = v131[9];
          uint64_t v413 = (char *)v2720 + v412;
          uint64_t v414 = (char *)v128 + v412;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v414, 1, v135))
          {
            uint64_t v415 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v413, v414, *(void *)(*(void *)(v415 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16))(v413, v414, v135);
            __swift_storeEnumTagSinglePayload((uint64_t)v413, 0, 1, v135);
          }
          goto LABEL_93;
        case 0xBu:
          uint64_t v137 = v11[1];
          *uint64_t v10 = *v11;
          v10[1] = v137;
          uint64_t v138 = (void *)v11[2];
          v10[2] = v138;
          swift_bridgeObjectRetain();
          id v139 = v138;
          goto LABEL_93;
        case 0xCu:
          uint64_t v140 = v11[1];
          *(void *)uint64_t v14 = *v11;
          *(void *)(v14 + 8) = v140;
          long long v141 = (void *)v14;
          uint64_t v142 = v11[3];
          v141[2] = v11[2];
          v141[3] = v142;
          uint64_t v143 = v11[5];
          v141[4] = v11[4];
          v141[5] = v143;
          char v144 = (int *)type metadata accessor for WalletTransaction(0);
          uint64_t v145 = v144[7];
          uint64_t v146 = (char *)v141 + v145;
          uint64_t v147 = (char *)v11 + v145;
          uint64_t v148 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v147, 1, v148))
          {
            uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v146, v147, *(void *)(*(void *)(v149 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16))(v146, v147, v148);
            __swift_storeEnumTagSinglePayload((uint64_t)v146, 0, 1, v148);
          }
          uint64_t v416 = v144[8];
          uint64_t v14 = (uint64_t)v2720;
          uint64_t v417 = (void *)((char *)v2720 + v416);
          uint64_t v418 = (void *)((char *)v11 + v416);
          uint64_t v419 = v418[1];
          *uint64_t v417 = *v418;
          v417[1] = v419;
          uint64_t v420 = v144[9];
          long long v421 = (void *)((char *)v2720 + v420);
          long long v422 = (void *)((char *)v11 + v420);
          uint64_t v423 = v422[1];
          *long long v421 = *v422;
          v421[1] = v423;
          uint64_t v424 = v144[10];
          uint64_t v425 = (void *)((char *)v2720 + v424);
          uint64_t v426 = (void *)((char *)v11 + v424);
          uint64_t v427 = v426[1];
          *uint64_t v425 = *v426;
          v425[1] = v427;
          uint64_t v428 = v144[11];
          uint64_t v429 = (char *)v2720 + v428;
          uint64_t v430 = (char *)v11 + v428;
          *(_OWORD *)uint64_t v429 = *(_OWORD *)v430;
          *(void *)(v429 + 13) = *(void *)(v430 + 13);
          uint64_t v431 = v144[12];
          uint64_t v432 = (void *)((char *)v2720 + v431);
          uint64_t v433 = (void *)((char *)v11 + v431);
          uint64_t v434 = v433[1];
          void *v432 = *v433;
          v432[1] = v434;
          goto LABEL_91;
        case 0xDu:
          uint64_t v150 = v11[1];
          *(void *)uint64_t v14 = *v11;
          *(void *)(v14 + 8) = v150;
          uint64_t v151 = v11[2];
          uint64_t v152 = v11;
          uint64_t v153 = (void *)v14;
          uint64_t v154 = v152[3];
          v153[2] = v151;
          v153[3] = v154;
          uint64_t v155 = v152[5];
          v153[4] = v152[4];
          v153[5] = v155;
          uint64_t v156 = (int *)type metadata accessor for WalletPass(0);
          uint64_t v157 = v156[7];
          uint64_t v158 = (char *)v153 + v157;
          uint64_t v11 = v152;
          unint64_t v159 = (char *)v152 + v157;
          uint64_t v160 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v159, 1, v160))
          {
            uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v158, v159, *(void *)(*(void *)(v161 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16))(v158, v159, v160);
            __swift_storeEnumTagSinglePayload((uint64_t)v158, 0, 1, v160);
          }
          uint64_t v373 = v2716;
          uint64_t v435 = v156[8];
          uint64_t v14 = (uint64_t)v2720;
          long long v436 = (void *)((char *)v2720 + v435);
          long long v437 = (void *)((char *)v152 + v435);
          uint64_t v438 = v437[1];
          *long long v436 = *v437;
          v436[1] = v438;
          *(void *)((char *)v2720 + v156[9]) = *(void *)((char *)v152 + v156[9]);
          swift_bridgeObjectRetain();
          goto LABEL_128;
        case 0xEu:
          uint64_t v162 = v11[1];
          *uint64_t v10 = *v11;
          v10[1] = v162;
          uint64_t v163 = v11[3];
          v10[2] = v11[2];
          v10[3] = v163;
          uint64_t v164 = v11[5];
          v10[4] = v11[4];
          v10[5] = v164;
          uint64_t v165 = v11[7];
          v10[6] = v11[6];
          v10[7] = v165;
          uint64_t v166 = v11[9];
          _OWORD v10[8] = v11[8];
          v10[9] = v166;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v14 = (uint64_t)v10;
          goto LABEL_92;
        case 0xFu:
          uint64_t v167 = v11[1];
          *(void *)uint64_t v14 = *v11;
          *(void *)(v14 + 8) = v167;
          v2703 = (char *)v11;
          uint64_t v168 = v11[3];
          *(void *)(v14 + 16) = v11[2];
          *(void *)(v14 + 24) = v168;
          uint64_t v2688 = v11[5];
          *(void *)(v14 + 32) = v11[4];
          *(void *)(v14 + 40) = v2688;
          uint64_t v169 = v11[7];
          *(void *)(v14 + 48) = v11[6];
          *(void *)(v14 + 56) = v169;
          uint64_t v170 = v11[9];
          *(void *)(v14 + 64) = v11[8];
          *(void *)(v14 + 72) = v170;
          uint64_t v2667 = v11[11];
          *(void *)(v14 + 80) = v11[10];
          *(void *)(v14 + 88) = v2667;
          *(unsigned char *)(v14 + 96) = *((unsigned char *)v11 + 96);
          uint64_t v171 = v11[14];
          *(void *)(v14 + 104) = v11[13];
          *(void *)(v14 + 112) = v171;
          uint64_t v172 = (int *)type metadata accessor for FlightReservation(0);
          uint64_t v173 = v172[13];
          uint64_t v174 = (void *)(v14 + v173);
          uint64_t v175 = &v2703[v173];
          uint64_t v176 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v175, 1, v176))
          {
            uint64_t v177 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v174, v175, *(void *)(*(void *)(v177 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
            __swift_storeEnumTagSinglePayload((uint64_t)v174, 0, 1, v176);
          }
          uint64_t v439 = v172[14];
          long long v440 = (char *)v2720 + v439;
          uint64_t v441 = &v2703[v439];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v2703[v439], 1, v176))
          {
            uint64_t v442 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v440, v441, *(void *)(*(void *)(v442 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v440, v441, v176);
            __swift_storeEnumTagSinglePayload((uint64_t)v440, 0, 1, v176);
          }
          uint64_t v567 = v172[15];
          uint64_t v568 = (void *)((char *)v2720 + v567);
          uint64_t v569 = &v2703[v567];
          uint64_t v570 = v569[1];
          *uint64_t v568 = *v569;
          v568[1] = v570;
          uint64_t v571 = v172[16];
          uint64_t v572 = (void *)((char *)v2720 + v571);
          uint64_t v573 = &v2703[v571];
          uint64_t v574 = v573[1];
          *uint64_t v572 = *v573;
          v572[1] = v574;
          uint64_t v575 = v172[17];
          long long v576 = (void *)((char *)v2720 + v575);
          long long v577 = &v2703[v575];
          uint64_t v578 = v577[1];
          *long long v576 = *v577;
          v576[1] = v578;
          uint64_t v579 = v172[18];
          uint64_t v2674 = &v2703[v579];
          uint64_t v2694 = (char *)v2720 + v579;
          uint64_t v580 = type metadata accessor for DateComponents();
          long long v581 = *(void (**)(char *, char *, uint64_t))(*(void *)(v580 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v581(v2694, v2674, v580);
          v581((char *)v2720 + v172[19], &v2703[v172[19]], v580);
          uint64_t v582 = v172[20];
          uint64_t v583 = (void *)((char *)v2720 + v582);
          uint64_t v584 = &v2703[v582];
          uint64_t v585 = v584[1];
          void *v583 = *v584;
          v583[1] = v585;
          uint64_t v586 = v172[21];
          uint64_t v587 = (void *)((char *)v2720 + v586);
          v588 = &v2703[v586];
          uint64_t v2695 = v588[1];
          void *v587 = *v588;
          v587[1] = v2695;
          uint64_t v589 = v172[22];
          uint64_t v590 = (void *)((char *)v2720 + v589);
          v591 = &v2703[v589];
          uint64_t v2675 = v591[1];
          void *v590 = *v591;
          v590[1] = v2675;
          uint64_t v592 = v172[23];
          uint64_t v593 = (void *)((char *)v2720 + v592);
          uint64_t v594 = &v2703[v592];
          uint64_t v2660 = v594[1];
          void *v593 = *v594;
          v593[1] = v2660;
          uint64_t v595 = v172[24];
          uint64_t v596 = (void *)((char *)v2720 + v595);
          uint64_t v597 = &v2703[v595];
          uint64_t v2636 = v597[1];
          void *v596 = *v597;
          v596[1] = v2636;
          uint64_t v598 = v172[25];
          uint64_t v599 = (void *)((char *)v2720 + v598);
          uint64_t v600 = &v2703[v598];
          uint64_t v2618 = v600[1];
          *uint64_t v599 = *v600;
          v599[1] = v2618;
          uint64_t v601 = v172[26];
          uint64_t v602 = (void *)((char *)v2720 + v601);
          long long v603 = &v2703[v601];
          uint64_t v2591 = (void *)v603[1];
          *uint64_t v602 = *v603;
          v602[1] = v2591;
          uint64_t v604 = v172[27];
          long long v605 = (void *)((char *)v2720 + v604);
          long long v606 = &v2703[v604];
          uint64_t v2566 = (void *)v606[1];
          *long long v605 = *v606;
          v605[1] = v2566;
          uint64_t v607 = v172[28];
          long long v608 = (void *)((char *)v2720 + v607);
          long long v609 = &v2703[v607];
          v2551 = (void *)v609[1];
          *long long v608 = *v609;
          v608[1] = v2551;
          uint64_t v610 = v172[29];
          uint64_t v611 = (void *)((char *)v2720 + v610);
          uint64_t v612 = &v2703[v610];
          uint64_t v2543 = (void *)v612[1];
          void *v611 = *v612;
          v611[1] = v2543;
          uint64_t v613 = v172[30];
          uint64_t v614 = (void *)((char *)v2720 + v613);
          uint64_t v615 = &v2703[v613];
          uint64_t v2537 = (void *)v615[1];
          void *v614 = *v615;
          v614[1] = v2537;
          uint64_t v616 = v172[31];
          uint64_t v617 = (void *)((char *)v2720 + v616);
          uint64_t v618 = &v2703[v616];
          uint64_t v2531 = v618[1];
          *uint64_t v617 = *v618;
          v617[1] = v2531;
          uint64_t v619 = v172[32];
          long long v620 = (void *)((char *)v2720 + v619);
          long long v621 = &v2703[v619];
          uint64_t v622 = v621[1];
          *long long v620 = *v621;
          v620[1] = v622;
          *(void *)((char *)v2720 + v172[33]) = *(void *)&v2703[v172[33]];
          *(void *)((char *)v2720 + v172[34]) = *(void *)&v2703[v172[34]];
          uint64_t v623 = v172[35];
          long long v624 = (void *)((char *)v2720 + v623);
          long long v625 = &v2703[v623];
          uint64_t v626 = v625[1];
          *long long v624 = *v625;
          v624[1] = v626;
          uint64_t v627 = v172[36];
          uint64_t v628 = (void *)((char *)v2720 + v627);
          uint64_t v629 = &v2703[v627];
          uint64_t v630 = v629[1];
          void *v628 = *v629;
          v628[1] = v630;
          uint64_t v631 = v172[37];
          v632 = (void *)((char *)v2720 + v631);
          uint64_t v633 = &v2703[v631];
          uint64_t v634 = v633[1];
          void *v632 = *v633;
          v632[1] = v634;
          uint64_t v635 = v172[38];
          uint64_t v2521 = (char *)v2720 + v635;
          long long v636 = &v2703[v635];
          uint64_t v637 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v636, 1, v637))
          {
            uint64_t v638 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2521, v636, *(void *)(*(void *)(v638 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v637 - 8) + 16))(v2521, v636, v637);
            __swift_storeEnumTagSinglePayload((uint64_t)v2521, 0, 1, v637);
          }
          uint64_t v700 = v172[39];
          uint64_t v701 = (void *)((char *)v2720 + v700);
          uint64_t v702 = &v2703[v700];
          uint64_t v703 = v702[1];
          *uint64_t v701 = *v702;
          v701[1] = v703;
          uint64_t v704 = v172[40];
          uint64_t v705 = (void *)((char *)v2720 + v704);
          uint64_t v706 = &v2703[v704];
          uint64_t v707 = v706[1];
          *uint64_t v705 = *v706;
          v705[1] = v707;
          uint64_t v708 = v172[41];
          long long v709 = (char *)v2720 + v708;
          long long v710 = &v2703[v708];
          v709[8] = v710[8];
          *(void *)long long v709 = *(void *)v710;
          uint64_t v711 = v172[42];
          long long v712 = (void *)((char *)v2720 + v711);
          uint64_t v713 = &v2703[v711];
          uint64_t v714 = v713[1];
          *long long v712 = *v713;
          v712[1] = v714;
          uint64_t v715 = v172[43];
          uint64_t v716 = (char *)v2720 + v715;
          uint64_t v717 = &v2703[v715];
          *(_OWORD *)uint64_t v716 = *(_OWORD *)v717;
          *(void *)(v716 + 13) = *(void *)(v717 + 13);
          uint64_t v718 = v172[44];
          uint64_t v719 = (void *)((char *)v2720 + v718);
          uint64_t v720 = &v2703[v718];
          uint64_t v721 = v720[1];
          *uint64_t v719 = *v720;
          v719[1] = v721;
          uint64_t v722 = v172[45];
          uint64_t v723 = (void *)((char *)v2720 + v722);
          uint64_t v724 = &v2703[v722];
          uint64_t v725 = v724[1];
          *uint64_t v723 = *v724;
          v723[1] = v725;
          uint64_t v726 = v172[46];
          uint64_t v727 = (void *)((char *)v2720 + v726);
          uint64_t v728 = &v2703[v726];
          uint64_t v729 = v728[1];
          *uint64_t v727 = *v728;
          v727[1] = v729;
          uint64_t v730 = v172[47];
          uint64_t v731 = (void *)((char *)v2720 + v730);
          uint64_t v732 = &v2703[v730];
          uint64_t v733 = v732[1];
          *uint64_t v731 = *v732;
          v731[1] = v733;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v14 = (uint64_t)v2720;
          uint64_t v11 = v2703;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v734 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
          *(void *)((char *)v2720 + *(int *)(v734 + 48)) = *(void *)&v2703[*(int *)(v734 + 48)];
          goto LABEL_509;
        case 0x10u:
          uint64_t v178 = v11[1];
          *(void *)uint64_t v14 = *v11;
          *(void *)(v14 + 8) = v178;
          uint64_t v179 = v11;
          uint64_t v2704 = v11[3];
          *(void *)(v14 + 16) = v11[2];
          *(void *)(v14 + 24) = v2704;
          uint64_t v2689 = v11[5];
          *(void *)(v14 + 32) = v11[4];
          *(void *)(v14 + 40) = v2689;
          uint64_t v180 = v11[7];
          *(void *)(v14 + 48) = v11[6];
          *(void *)(v14 + 56) = v180;
          uint64_t v2668 = v11[9];
          *(void *)(v14 + 64) = v11[8];
          *(void *)(v14 + 72) = v2668;
          uint64_t v2653 = v11[11];
          *(void *)(v14 + 80) = v11[10];
          *(void *)(v14 + 88) = v2653;
          *(unsigned char *)(v14 + 96) = *((unsigned char *)v11 + 96);
          uint64_t v181 = v11[14];
          *(void *)(v14 + 104) = v11[13];
          *(void *)(v14 + 112) = v181;
          uint64_t v182 = v11[16];
          *(void *)(v14 + 120) = v11[15];
          *(void *)(v14 + 128) = v182;
          uint64_t v183 = (int *)type metadata accessor for HotelReservation(0);
          uint64_t v184 = v183[14];
          uint64_t v185 = (void *)(v14 + v184);
          uint64_t v186 = (char *)v179 + v184;
          uint64_t v187 = type metadata accessor for DateComponents();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v186, 1, v187))
          {
            uint64_t v188 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v185, v186, *(void *)(*(void *)(v188 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v187 - 8) + 16))(v185, v186, v187);
            __swift_storeEnumTagSinglePayload((uint64_t)v185, 0, 1, v187);
          }
          uint64_t v443 = v183[15];
          uint64_t v444 = (char *)v2720 + v443;
          uint64_t v445 = (char *)v179 + v443;
          if (__swift_getEnumTagSinglePayload((uint64_t)v179 + v443, 1, v187))
          {
            uint64_t v446 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v444, v445, *(void *)(*(void *)(v446 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 16))(v444, v445, v187);
            __swift_storeEnumTagSinglePayload((uint64_t)v444, 0, 1, v187);
          }
          uint64_t v639 = v183[16];
          long long v640 = (void *)((char *)v2720 + v639);
          long long v641 = (void *)((char *)v179 + v639);
          uint64_t v642 = v641[1];
          *long long v640 = *v641;
          v640[1] = v642;
          uint64_t v643 = v183[17];
          uint64_t v644 = (void *)((char *)v2720 + v643);
          uint64_t v645 = (void *)((char *)v179 + v643);
          uint64_t v2714 = v645[1];
          *uint64_t v644 = *v645;
          v644[1] = v2714;
          uint64_t v646 = v183[18];
          uint64_t v647 = (void *)((char *)v2720 + v646);
          uint64_t v648 = (void *)((char *)v179 + v646);
          uint64_t v2696 = v648[1];
          *uint64_t v647 = *v648;
          v647[1] = v2696;
          uint64_t v649 = v183[19];
          uint64_t v650 = (void *)((char *)v2720 + v649);
          uint64_t v651 = (void *)((char *)v179 + v649);
          uint64_t v2676 = v651[1];
          void *v650 = *v651;
          v650[1] = v2676;
          uint64_t v652 = v183[20];
          uint64_t v653 = (void *)((char *)v2720 + v652);
          uint64_t v654 = (void *)((char *)v179 + v652);
          uint64_t v655 = v654[1];
          void *v653 = *v654;
          v653[1] = v655;
          *(void *)((char *)v2720 + v183[21]) = *(void *)((char *)v179 + v183[21]);
          *(void *)((char *)v2720 + v183[22]) = *(void *)((char *)v179 + v183[22]);
          uint64_t v656 = v183[23];
          uint64_t v657 = (char *)v2720 + v656;
          uint64_t v658 = (char *)v179 + v656;
          *(void *)uint64_t v657 = *(void *)v658;
          v657[8] = v658[8];
          uint64_t v659 = v183[24];
          uint64_t v660 = (char *)v2720 + v659;
          uint64_t v661 = (char *)v179 + v659;
          *(void *)uint64_t v660 = *(void *)v661;
          v660[8] = v661[8];
          uint64_t v662 = v183[25];
          uint64_t v663 = (void *)((char *)v2720 + v662);
          uint64_t v664 = (void *)((char *)v179 + v662);
          uint64_t v665 = v664[1];
          void *v663 = *v664;
          v663[1] = v665;
          uint64_t v666 = v183[26];
          uint64_t v667 = (void *)((char *)v2720 + v666);
          uint64_t v668 = (void *)((char *)v179 + v666);
          uint64_t v669 = v668[1];
          void *v667 = *v668;
          v667[1] = v669;
          uint64_t v670 = v183[27];
          uint64_t v671 = (void *)((char *)v2720 + v670);
          uint64_t v672 = (void *)((char *)v179 + v670);
          uint64_t v673 = v672[1];
          void *v671 = *v672;
          v671[1] = v673;
          uint64_t v674 = v183[28];
          uint64_t v675 = (void *)((char *)v2720 + v674);
          uint64_t v11 = v179;
          uint64_t v676 = (void *)((char *)v179 + v674);
          uint64_t v677 = v676[1];
          *uint64_t v675 = *v676;
          v675[1] = v677;
          uint64_t v678 = v183[29];
          long long v679 = (char *)v2720 + v678;
          long long v680 = (char *)v179 + v678;
          *(void *)long long v679 = *(void *)v680;
          v679[8] = v680[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v14 = (uint64_t)v2720;
          goto LABEL_509;
        case 0x11u:
          uint64_t v189 = v11[1];
          *(void *)uint64_t v14 = *v11;
          *(void *)(v14 + 8) = v189;
          uint64_t v190 = v11;
          uint64_t v191 = v11[3];
          *(void *)(v14 + 16) = v11[2];
          *(void *)(v14 + 24) = v191;
          uint64_t v2705 = v11[5];
          *(void *)(v14 + 32) = v11[4];
          *(void *)(v14 + 40) = v2705;
          uint64_t v2690 = v11[7];
          *(void *)(v14 + 48) = v11[6];
          *(void *)(v14 + 56) = v2690;
          uint64_t v192 = v11[9];
          *(void *)(v14 + 64) = v11[8];
          *(void *)(v14 + 72) = v192;
          uint64_t v2669 = v11[11];
          *(void *)(v14 + 80) = v11[10];
          *(void *)(v14 + 88) = v2669;
          *(unsigned char *)(v14 + 96) = *((unsigned char *)v11 + 96);
          uint64_t v193 = v11[14];
          *(void *)(v14 + 104) = v11[13];
          *(void *)(v14 + 112) = v193;
          uint64_t v194 = v11[16];
          *(void *)(v14 + 120) = v11[15];
          *(void *)(v14 + 128) = v194;
          uint64_t v195 = (int *)type metadata accessor for RestaurantReservation(0);
          uint64_t v196 = v195[14];
          uint64_t v2628 = (void *)(v14 + v196);
          uint64_t v2654 = (char *)v11 + v196;
          uint64_t v197 = type metadata accessor for DateComponents();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2654, 1, v197))
          {
            uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
            memcpy(v2628, v2654, *(void *)(*(void *)(v198 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v197 - 8) + 16))(v2628, v2654, v197);
            __swift_storeEnumTagSinglePayload((uint64_t)v2628, 0, 1, v197);
          }
          uint64_t v447 = v195[15];
          uint64_t v448 = (void *)((char *)v2720 + v447);
          uint64_t v449 = (void *)((char *)v190 + v447);
          uint64_t v450 = v449[1];
          void *v448 = *v449;
          v448[1] = v450;
          uint64_t v451 = v195[16];
          uint64_t v452 = (void *)((char *)v2720 + v451);
          uint64_t v453 = (void *)((char *)v190 + v451);
          uint64_t v2713 = v453[1];
          *uint64_t v452 = *v453;
          v452[1] = v2713;
          uint64_t v454 = v195[17];
          uint64_t v455 = (void *)((char *)v2720 + v454);
          v456 = (void *)((char *)v190 + v454);
          uint64_t v457 = v456[1];
          *uint64_t v455 = *v456;
          v455[1] = v457;
          uint64_t v458 = v195[18];
          uint64_t v459 = (void *)((char *)v2720 + v458);
          uint64_t v460 = (void *)((char *)v190 + v458);
          uint64_t v461 = v460[1];
          *uint64_t v459 = *v460;
          v459[1] = v461;
          uint64_t v462 = v195[19];
          long long v463 = (void *)((char *)v2720 + v462);
          long long v464 = (void *)((char *)v190 + v462);
          uint64_t v465 = v464[1];
          *long long v463 = *v464;
          v463[1] = v465;
          *(void *)((char *)v2720 + v195[20]) = *(void *)((char *)v190 + v195[20]);
          uint64_t v466 = v195[21];
          long long v467 = (void *)((char *)v2720 + v466);
          long long v468 = (void *)((char *)v190 + v466);
          uint64_t v469 = v468[1];
          *long long v467 = *v468;
          v467[1] = v469;
          uint64_t v470 = v195[22];
          uint64_t v471 = (void *)((char *)v2720 + v470);
          uint64_t v472 = (void *)((char *)v190 + v470);
          uint64_t v473 = v472[1];
          *uint64_t v471 = *v472;
          v471[1] = v473;
          uint64_t v474 = v195[23];
          uint64_t v475 = (void *)((char *)v2720 + v474);
          uint64_t v476 = (void *)((char *)v190 + v474);
          uint64_t v477 = v476[1];
          *uint64_t v475 = *v476;
          v475[1] = v477;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v14 = (uint64_t)v2720;
          uint64_t v11 = v190;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_509;
        case 0x12u:
          uint64_t v199 = v11[1];
          *uint64_t v10 = *v11;
          v10[1] = v199;
          uint64_t v200 = v11[3];
          v10[2] = v11[2];
          v10[3] = v200;
          uint64_t v201 = v11[5];
          v10[4] = v11[4];
          v10[5] = v201;
          uint64_t v202 = v11[7];
          v10[6] = v11[6];
          v10[7] = v202;
          uint64_t v203 = v11[9];
          _OWORD v10[8] = v11[8];
          v10[9] = v203;
          uint64_t v204 = v11[11];
          v10[10] = v11[10];
          v10[11] = v204;
          uint64_t v205 = v11[13];
          v10[12] = v11[12];
          v10[13] = v205;
          uint64_t v206 = v11[15];
          v10[14] = v11[14];
          v10[15] = v206;
          *((unsigned char *)v10 + 128) = *((unsigned char *)v11 + 128);
          *(_WORD *)((char *)v10 + 129) = *(_WORD *)((char *)v11 + 129);
          uint64_t v207 = v11[18];
          v10[17] = v11[17];
          v10[18] = v207;
          uint64_t v208 = v11[20];
          v10[19] = v11[19];
          v10[20] = v208;
          uint64_t v209 = v11[22];
          v10[21] = v11[21];
          v10[22] = v209;
          uint64_t v210 = v11[24];
          v10[23] = v11[23];
          v10[24] = v210;
          uint64_t v211 = v11[26];
          v10[25] = v11[25];
          v10[26] = v211;
          uint64_t v212 = v11[28];
          v10[27] = v11[27];
          v10[28] = v212;
          uint64_t v213 = v11[30];
          v10[29] = v11[29];
          v10[30] = v213;
          uint64_t v214 = v11[32];
          v10[31] = v11[31];
          v10[32] = v214;
          uint64_t v2691 = v11[34];
          v10[33] = v11[33];
          v10[34] = v2691;
          uint64_t v2670 = v11[36];
          v10[35] = v11[35];
          v10[36] = v2670;
          uint64_t v2655 = v11[38];
          v10[37] = v11[37];
          v10[38] = v2655;
          uint64_t v2629 = v11[40];
          v10[39] = v11[39];
          v10[40] = v2629;
          uint64_t v2611 = v11[42];
          v10[41] = v11[41];
          v10[42] = v2611;
          uint64_t v215 = v11[44];
          v10[43] = v11[43];
          v10[44] = v215;
          uint64_t v216 = v11[46];
          v10[45] = v11[45];
          v10[46] = v216;
          uint64_t v217 = v11[47];
          *((unsigned char *)v10 + 384) = *((unsigned char *)v11 + 384);
          v10[47] = v217;
          uint64_t v218 = v11[50];
          v10[49] = v11[49];
          v10[50] = v218;
          uint64_t v219 = v11[52];
          v10[51] = v11[51];
          v10[52] = v219;
          uint64_t v2706 = type metadata accessor for RentalCarReservation(0);
          uint64_t v220 = *(int *)(v2706 + 140);
          uint64_t v221 = (char *)v10 + v220;
          uint64_t v222 = (char *)v11 + v220;
          uint64_t v223 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v222, 1, v223))
          {
            uint64_t v224 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v221, v222, *(void *)(*(void *)(v224 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 16))(v221, v222, v223);
            __swift_storeEnumTagSinglePayload((uint64_t)v221, 0, 1, v223);
          }
          uint64_t v373 = v2716;
          uint64_t v478 = *(int *)(v2706 + 144);
          goto LABEL_113;
        case 0x13u:
          uint64_t v225 = v11[1];
          *uint64_t v10 = *v11;
          v10[1] = v225;
          uint64_t v226 = v11[3];
          v10[2] = v11[2];
          v10[3] = v226;
          uint64_t v227 = v11[5];
          v10[4] = v11[4];
          v10[5] = v227;
          uint64_t v228 = v11[7];
          v10[6] = v11[6];
          v10[7] = v228;
          uint64_t v229 = v11[9];
          _OWORD v10[8] = v11[8];
          v10[9] = v229;
          uint64_t v230 = v11[11];
          v10[10] = v11[10];
          v10[11] = v230;
          uint64_t v231 = v11[13];
          v10[12] = v11[12];
          v10[13] = v231;
          uint64_t v232 = v11[15];
          v10[14] = v11[14];
          v10[15] = v232;
          *((unsigned char *)v10 + 128) = *((unsigned char *)v11 + 128);
          *(_WORD *)((char *)v10 + 129) = *(_WORD *)((char *)v11 + 129);
          uint64_t v233 = v11[18];
          v10[17] = v11[17];
          v10[18] = v233;
          uint64_t v234 = v11[20];
          v10[19] = v11[19];
          v10[20] = v234;
          uint64_t v235 = v11[22];
          v10[21] = v11[21];
          v10[22] = v235;
          uint64_t v236 = v11[24];
          v10[23] = v11[23];
          v10[24] = v236;
          uint64_t v2692 = v11[26];
          v10[25] = v11[25];
          v10[26] = v2692;
          uint64_t v2671 = v11[28];
          v10[27] = v11[27];
          v10[28] = v2671;
          uint64_t v2656 = v11[30];
          v10[29] = v11[29];
          v10[30] = v2656;
          uint64_t v2630 = v11[32];
          v10[31] = v11[31];
          v10[32] = v2630;
          uint64_t v2612 = v11[34];
          v10[33] = v11[33];
          v10[34] = v2612;
          uint64_t v237 = v11[36];
          uint64_t v238 = v11[35];
          *((unsigned char *)v10 + 296) = *((unsigned char *)v11 + 296);
          v10[35] = v238;
          v10[36] = v237;
          uint64_t v2707 = type metadata accessor for TicketedTransportation(0);
          uint64_t v239 = *(int *)(v2707 + 112);
          uint64_t v240 = (char *)v10 + v239;
          uint64_t v241 = (char *)v11 + v239;
          uint64_t v223 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v241, 1, v223))
          {
            uint64_t v242 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v240, v241, *(void *)(*(void *)(v242 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 16))(v240, v241, v223);
            __swift_storeEnumTagSinglePayload((uint64_t)v240, 0, 1, v223);
          }
          uint64_t v373 = v12;
          uint64_t v478 = *(int *)(v2707 + 116);
          goto LABEL_113;
        case 0x14u:
          uint64_t v243 = v11[1];
          *uint64_t v10 = *v11;
          v10[1] = v243;
          uint64_t v244 = v11[3];
          v10[2] = v11[2];
          v10[3] = v244;
          uint64_t v245 = v11[5];
          v10[4] = v11[4];
          v10[5] = v245;
          uint64_t v246 = v11[7];
          v10[6] = v11[6];
          v10[7] = v246;
          uint64_t v247 = v11[9];
          _OWORD v10[8] = v11[8];
          v10[9] = v247;
          uint64_t v248 = v11[11];
          v10[10] = v11[10];
          v10[11] = v248;
          uint64_t v249 = v11[13];
          v10[12] = v11[12];
          v10[13] = v249;
          uint64_t v250 = v11[15];
          v10[14] = v11[14];
          v10[15] = v250;
          *((unsigned char *)v10 + 128) = *((unsigned char *)v11 + 128);
          *(_WORD *)((char *)v10 + 129) = *(_WORD *)((char *)v11 + 129);
          uint64_t v251 = v11[18];
          v10[17] = v11[17];
          v10[18] = v251;
          uint64_t v252 = v11[20];
          v10[19] = v11[19];
          v10[20] = v252;
          uint64_t v253 = v11[22];
          v10[21] = v11[21];
          v10[22] = v253;
          uint64_t v254 = v11[24];
          v10[23] = v11[23];
          v10[24] = v254;
          uint64_t v255 = v11[26];
          v10[25] = v11[25];
          v10[26] = v255;
          uint64_t v256 = v11[28];
          v10[27] = v11[27];
          v10[28] = v256;
          uint64_t v2693 = v11[30];
          v10[29] = v11[29];
          v10[30] = v2693;
          uint64_t v2672 = v11[32];
          v10[31] = v11[31];
          v10[32] = v2672;
          uint64_t v257 = v11[34];
          v10[33] = v11[33];
          v10[34] = v257;
          uint64_t v258 = v11[36];
          uint64_t v2631 = v11[35];
          *((unsigned char *)v10 + 296) = *((unsigned char *)v11 + 296);
          v10[35] = v2631;
          v10[36] = v258;
          uint64_t v2613 = v11[39];
          v10[38] = v11[38];
          v10[39] = v2613;
          v2708 = (int *)type metadata accessor for TicketedShow(0);
          uint64_t v259 = v2708[29];
          unint64_t v260 = (char *)v10 + v259;
          unint64_t v261 = (char *)v11 + v259;
          uint64_t v262 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v261, 1, v262))
          {
            uint64_t v263 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v260, v261, *(void *)(*(void *)(v263 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v262 - 8) + 16))(v260, v261, v262);
            __swift_storeEnumTagSinglePayload((uint64_t)v260, 0, 1, v262);
          }
          uint64_t v479 = v2708[30];
          uint64_t v14 = (uint64_t)v2720;
          uint64_t v480 = (void *)((char *)v2720 + v479);
          long long v481 = (void *)((char *)v11 + v479);
          uint64_t v482 = v481[1];
          *uint64_t v480 = *v481;
          v480[1] = v482;
          uint64_t v483 = v2708[31];
          long long v484 = (char *)v2720 + v483;
          long long v485 = (char *)v11 + v483;
          uint64_t v486 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v485, 1, v486))
          {
            uint64_t v487 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v484, v485, *(void *)(*(void *)(v487 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v486 - 8) + 16))(v484, v485, v486);
            __swift_storeEnumTagSinglePayload((uint64_t)v484, 0, 1, v486);
          }
          uint64_t v373 = v2716;
          uint64_t v681 = v2708[32];
          long long v682 = (char *)v2720 + v681;
          long long v376 = (char *)v11 + v681;
          if (!__swift_getEnumTagSinglePayload((uint64_t)v11 + v681, 1, v486))
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v486 - 8) + 16))(v682, v376, v486);
            uint64_t v552 = (uint64_t)v682;
            uint64_t v553 = v486;
            goto LABEL_163;
          }
          size_t v377 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?)
                                       - 8)
                           + 64);
          long long v378 = v682;
LABEL_153:
          uint64_t v683 = v376;
          goto LABEL_161;
        case 0x15u:
          uint64_t v2614 = v11[1];
          *uint64_t v10 = *v11;
          v10[1] = v2614;
          uint64_t v264 = v11[3];
          v10[2] = v11[2];
          v10[3] = v264;
          uint64_t v265 = v11[5];
          v10[4] = v11[4];
          v10[5] = v265;
          uint64_t v266 = v11[7];
          v10[6] = v11[6];
          v10[7] = v266;
          uint64_t v267 = v11[9];
          _OWORD v10[8] = v11[8];
          v10[9] = v267;
          uint64_t v268 = v11[11];
          v10[10] = v11[10];
          v10[11] = v268;
          uint64_t v269 = v11[13];
          v10[12] = v11[12];
          v10[13] = v269;
          uint64_t v270 = v11[15];
          v10[14] = v11[14];
          v10[15] = v270;
          *((unsigned char *)v10 + 128) = *((unsigned char *)v11 + 128);
          *(_WORD *)((char *)v10 + 129) = *(_WORD *)((char *)v11 + 129);
          uint64_t v271 = v11[18];
          v10[17] = v11[17];
          v10[18] = v271;
          uint64_t v272 = v11[20];
          v10[19] = v11[19];
          v10[20] = v272;
          uint64_t v273 = v11[22];
          v10[21] = v11[21];
          v10[22] = v273;
          uint64_t v274 = v11[24];
          v10[23] = v11[23];
          v10[24] = v274;
          uint64_t v275 = v11[26];
          v10[25] = v11[25];
          v10[26] = v275;
          uint64_t v276 = v11[28];
          v10[27] = v11[27];
          v10[28] = v276;
          uint64_t v277 = v11[30];
          v10[29] = v11[29];
          v10[30] = v277;
          uint64_t v278 = v11[32];
          v10[31] = v11[31];
          v10[32] = v278;
          uint64_t v279 = v11[34];
          uint64_t v280 = v11[33];
          *((unsigned char *)v10 + 280) = *((unsigned char *)v11 + 280);
          v10[33] = v280;
          v10[34] = v279;
          uint64_t v281 = v11[37];
          v10[36] = v11[36];
          v10[37] = v281;
          uint64_t v2709 = type metadata accessor for Appointment(0);
          uint64_t v282 = *(int *)(v2709 + 108);
          uint64_t v283 = (char *)v10 + v282;
          uint64_t v284 = (char *)v11 + v282;
          uint64_t v223 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v284, 1, v223))
          {
            uint64_t v285 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v283, v284, *(void *)(*(void *)(v285 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 16))(v283, v284, v223);
            __swift_storeEnumTagSinglePayload((uint64_t)v283, 0, 1, v223);
          }
          uint64_t v373 = v12;
          uint64_t v478 = *(int *)(v2709 + 112);
LABEL_113:
          uint64_t v14 = (uint64_t)v2720;
          uint64_t v402 = (char *)v2720 + v478;
          uint64_t v403 = (uint64_t)v11 + v478;
          if (!__swift_getEnumTagSinglePayload((uint64_t)v11 + v478, 1, v223)) {
            goto LABEL_162;
          }
          uint64_t v488 = &demangling cache variable for type metadata for Date?;
          goto LABEL_160;
        case 0x16u:
          uint64_t v2632 = v11[1];
          *uint64_t v10 = *v11;
          v10[1] = v2632;
          uint64_t v2615 = v11[3];
          v10[2] = v11[2];
          v10[3] = v2615;
          uint64_t v286 = v11[5];
          v10[4] = v11[4];
          v10[5] = v286;
          uint64_t v287 = v11[7];
          v10[6] = v11[6];
          v10[7] = v287;
          uint64_t v288 = v11[9];
          _OWORD v10[8] = v11[8];
          v10[9] = v288;
          uint64_t v289 = v11[11];
          v10[10] = v11[10];
          v10[11] = v289;
          uint64_t v290 = v11[13];
          v10[12] = v11[12];
          v10[13] = v290;
          uint64_t v291 = v11[15];
          v10[14] = v11[14];
          v10[15] = v291;
          *((unsigned char *)v10 + 128) = *((unsigned char *)v11 + 128);
          *(_WORD *)((char *)v10 + 129) = *(_WORD *)((char *)v11 + 129);
          uint64_t v292 = v11[18];
          v10[17] = v11[17];
          v10[18] = v292;
          uint64_t v293 = v11[20];
          v10[19] = v11[19];
          v10[20] = v293;
          uint64_t v294 = v11[22];
          v10[21] = v11[21];
          v10[22] = v294;
          uint64_t v295 = v11[24];
          v10[23] = v11[23];
          v10[24] = v295;
          uint64_t v296 = v11[26];
          v10[25] = v11[25];
          v10[26] = v296;
          uint64_t v297 = v11[28];
          v10[27] = v11[27];
          v10[28] = v297;
          uint64_t v298 = v11[30];
          v10[29] = v11[29];
          v10[30] = v298;
          v10[31] = v11[31];
          v2710 = (int *)type metadata accessor for Party(0);
          uint64_t v299 = v2710[24];
          __dst = (char *)v10 + v299;
          uint64_t v300 = (char *)v11 + v299;
          uint64_t v301 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v300, 1, v301))
          {
            uint64_t v302 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(__dst, v300, *(void *)(*(void *)(v302 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v301 - 8) + 16))(__dst, v300, v301);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v301);
          }
          uint64_t v373 = v12;
          uint64_t v489 = v2710[25];
          uint64_t v490 = (char *)v2720 + v489;
          uint64_t v491 = (char *)v11 + v489;
          if (__swift_getEnumTagSinglePayload((uint64_t)v11 + v489, 1, v301))
          {
            uint64_t v492 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v490, v491, *(void *)(*(void *)(v492 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v301 - 8) + 16))(v490, v491, v301);
            __swift_storeEnumTagSinglePayload((uint64_t)v490, 0, 1, v301);
          }
          uint64_t v684 = v2710[26];
          uint64_t v14 = (uint64_t)v2720;
          goto LABEL_158;
        case 0x17u:
          uint64_t v2673 = v11[1];
          *uint64_t v10 = *v11;
          v10[1] = v2673;
          uint64_t v2657 = v11[3];
          v10[2] = v11[2];
          v10[3] = v2657;
          uint64_t v2633 = v11[5];
          v10[4] = v11[4];
          v10[5] = v2633;
          uint64_t v2616 = v11[7];
          v10[6] = v11[6];
          v10[7] = v2616;
          uint64_t v303 = v11[9];
          _OWORD v10[8] = v11[8];
          v10[9] = v303;
          uint64_t v304 = v11[11];
          v10[10] = v11[10];
          v10[11] = v304;
          uint64_t v305 = v11[13];
          v10[12] = v11[12];
          v10[13] = v305;
          uint64_t v306 = v11[15];
          v10[14] = v11[14];
          v10[15] = v306;
          *((unsigned char *)v10 + 128) = *((unsigned char *)v11 + 128);
          *(_WORD *)((char *)v10 + 129) = *(_WORD *)((char *)v11 + 129);
          uint64_t v307 = v11[18];
          v10[17] = v11[17];
          v10[18] = v307;
          uint64_t v308 = v11[20];
          v10[19] = v11[19];
          v10[20] = v308;
          uint64_t v309 = v11[22];
          v10[21] = v11[21];
          v10[22] = v309;
          uint64_t v310 = v11[24];
          v10[23] = v11[23];
          v10[24] = v310;
          uint64_t v311 = v11[26];
          v10[25] = v11[25];
          v10[26] = v311;
          v10[27] = v11[27];
          v2711 = (int *)type metadata accessor for Trip(0);
          uint64_t v312 = v2711[22];
          uint64_t v2536 = (char *)v10 + v312;
          long long v313 = (char *)v11 + v312;
          uint64_t v314 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v313, 1, v314))
          {
            uint64_t v315 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2536, v313, *(void *)(*(void *)(v315 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v314 - 8) + 16))(v2536, v313, v314);
            __swift_storeEnumTagSinglePayload((uint64_t)v2536, 0, 1, v314);
          }
          uint64_t v373 = v12;
          uint64_t v493 = v2711[23];
          uint64_t v14 = (uint64_t)v2720;
          uint64_t v494 = (char *)v2720 + v493;
          uint64_t v495 = (char *)v11 + v493;
          if (__swift_getEnumTagSinglePayload((uint64_t)v11 + v493, 1, v314))
          {
            uint64_t v496 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v494, v495, *(void *)(*(void *)(v496 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v314 - 8) + 16))(v494, v495, v314);
            __swift_storeEnumTagSinglePayload((uint64_t)v494, 0, 1, v314);
          }
          uint64_t v685 = v2711[24];
          uint64_t v686 = (char *)v2720 + v685;
          uint64_t v687 = (char *)v11 + v685;
          *(void *)uint64_t v686 = *(void *)v687;
          v686[8] = v687[8];
          uint64_t v684 = v2711[25];
LABEL_158:
          uint64_t v402 = (char *)(v14 + v684);
          uint64_t v403 = (uint64_t)v11 + v684;
          uint64_t v223 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload(v403, 1, v223))
          {
LABEL_159:
            uint64_t v488 = &demangling cache variable for type metadata for URL?;
LABEL_160:
            size_t v377 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(v488) - 8) + 64);
            long long v378 = v402;
            uint64_t v683 = (const void *)v403;
LABEL_161:
            memcpy(v378, v683, v377);
          }
          else
          {
LABEL_162:
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v223 - 8) + 16))(v402, v403, v223);
            uint64_t v552 = (uint64_t)v402;
            uint64_t v553 = v223;
LABEL_163:
            __swift_storeEnumTagSinglePayload(v552, 0, 1, v553);
          }
LABEL_513:
          swift_storeEnumTagMultiPayload();
          uint64_t v2305 = *(int *)(v373 + 20);
          uint64_t v2306 = *(void **)((char *)v11 + v2305);
          *(void *)(v14 + v2305) = v2306;
          uint64_t v2307 = *(int *)(v373 + 24);
          v2308 = (void *)(v14 + v2307);
          uint64_t v2309 = (void *)((char *)v11 + v2307);
          uint64_t v2310 = v2309[1];
          void *v2308 = *v2309;
          v2308[1] = v2310;
          id v2311 = v2306;
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload(v14, 0, 1, v373);
          break;
        case 0x18u:
          uint64_t v316 = v11[1];
          *(void *)uint64_t v14 = *v11;
          *(void *)(v14 + 8) = v316;
          uint64_t v317 = (void *)v14;
          uint64_t v318 = v11[3];
          v317[2] = v11[2];
          v317[3] = v318;
          uint64_t v319 = v11[5];
          v317[4] = v11[4];
          v317[5] = v319;
          uint64_t v320 = (int *)type metadata accessor for GlobalItem();
          uint64_t v321 = v320[7];
          uint64_t v322 = (char *)v317 + v321;
          v323 = (char *)v11 + v321;
          uint64_t v324 = type metadata accessor for GlobalDialog();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v323, 1, v324))
          {
            uint64_t v325 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
            memcpy(v322, v323, *(void *)(*(void *)(v325 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v324 - 8) + 16))(v322, v323, v324);
            __swift_storeEnumTagSinglePayload((uint64_t)v322, 0, 1, v324);
          }
          uint64_t v497 = v320[8];
          uint64_t v14 = (uint64_t)v2720;
          uint64_t v498 = (char *)v2720 + v497;
          long long v499 = (char *)v11 + v497;
          unint64_t v500 = *((void *)v499 + 1);
          if (v500 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v498 = *(_OWORD *)v499;
          }
          else
          {
            uint64_t v501 = *(void *)v499;
            outlined copy of Data._Representation(*(void *)v499, *((void *)v499 + 1));
            *(void *)uint64_t v498 = v501;
            *((void *)v498 + 1) = v500;
          }
          uint64_t v373 = v12;
          *((unsigned char *)v2720 + v320[9]) = *((unsigned char *)v11 + v320[9]);
          uint64_t v502 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
          *(void *)((char *)v2720 + *(int *)(v502 + 48)) = *(void *)((char *)v11 + *(int *)(v502 + 48));
          goto LABEL_128;
        case 0x19u:
          uint64_t v326 = v11[1];
          *uint64_t v10 = *v11;
          v10[1] = v326;
          uint64_t v327 = v11[3];
          v10[2] = v11[2];
          v10[3] = v327;
          uint64_t v328 = v11[5];
          *(void *)(v14 + 32) = v11[4];
          *(void *)(v14 + 40) = v328;
          uint64_t v329 = v11[7];
          *(void *)(v14 + 48) = v11[6];
          *(void *)(v14 + 56) = v329;
LABEL_91:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_92:
          swift_bridgeObjectRetain();
LABEL_93:
          uint64_t v373 = v2716;
          goto LABEL_513;
        case 0x1Au:
          uint64_t v330 = v11[1];
          *(void *)uint64_t v14 = *v11;
          *(void *)(v14 + 8) = v330;
          uint64_t v331 = v11[2];
          uint64_t v332 = v11;
          uint64_t v333 = (void *)v14;
          uint64_t v334 = v332[3];
          uint64_t v335 = v332[4];
          v333[2] = v331;
          v333[3] = v334;
          uint64_t v336 = v332[5];
          uint64_t v337 = v332[6];
          v333[4] = v335;
          v333[5] = v336;
          v333[6] = v337;
          v338 = (int *)type metadata accessor for Answer(0);
          uint64_t v339 = v338[9];
          v2712 = (char *)v333 + v339;
          uint64_t v11 = v332;
          uint64_t v340 = (char *)v332 + v339;
          uint64_t v341 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v340, 1, v341))
          {
            uint64_t v342 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2712, v340, *(void *)(*(void *)(v342 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v341 - 8) + 16))(v2712, v340, v341);
            __swift_storeEnumTagSinglePayload((uint64_t)v2712, 0, 1, v341);
          }
          uint64_t v373 = v2716;
          uint64_t v14 = (uint64_t)v2720;
          *((unsigned char *)v2720 + v338[10]) = *((unsigned char *)v11 + v338[10]);
          uint64_t v503 = v338[11];
          long long v504 = (void *)((char *)v2720 + v503);
          long long v505 = (void *)((char *)v11 + v503);
          uint64_t v506 = v505[1];
          void *v504 = *v505;
          v504[1] = v506;
LABEL_128:
          swift_bridgeObjectRetain();
          goto LABEL_513;
        default:
          uint64_t v15 = v11[1];
          *uint64_t v10 = *v11;
          v10[1] = v15;
          uint64_t v16 = v11[3];
          v10[2] = v11[2];
          v10[3] = v16;
          uint64_t v17 = v11[5];
          v10[4] = v11[4];
          v10[5] = v17;
          uint64_t v18 = v11[7];
          v10[6] = v11[6];
          v10[7] = v18;
          uint64_t v19 = v11[9];
          _OWORD v10[8] = v11[8];
          v10[9] = v19;
          uint64_t v2697 = v11[11];
          v10[10] = v11[10];
          v10[11] = v2697;
          uint64_t v20 = (int *)type metadata accessor for EmailDocument(0);
          uint64_t v21 = v20[12];
          uint64_t v2626 = (char *)v11 + v21;
          uint64_t v2651 = (char *)v10 + v21;
          uint64_t v22 = type metadata accessor for Date();
          uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v2664 = v23;
          uint64_t v2684 = v22;
          v23(v2651, v2626, v22);
          *(void *)((char *)v10 + v20[13]) = *(void *)((char *)v11 + v20[13]);
          *(void *)((char *)v10 + v20[14]) = *(void *)((char *)v11 + v20[14]);
          *(void *)((char *)v10 + v20[15]) = *(void *)((char *)v11 + v20[15]);
          *((unsigned char *)v10 + v20[16]) = *((unsigned char *)v11 + v20[16]);
          *((unsigned char *)v10 + v20[17]) = *((unsigned char *)v11 + v20[17]);
          uint64_t v24 = v20[18];
          uint64_t v25 = (void *)((char *)v10 + v24);
          uint64_t v26 = (void *)((char *)v11 + v24);
          uint64_t v27 = v26[1];
          *uint64_t v25 = *v26;
          v25[1] = v27;
          v2698 = v20;
          uint64_t v28 = v20[19];
          uint64_t v29 = (void *)((char *)v10 + v28);
          uint64_t v30 = (char *)v11 + v28;
          uint64_t v31 = *(void *)((char *)v11 + v28);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v31)
          {
            uint64_t v32 = *((void *)v30 + 1);
            uint64_t v33 = *((void *)v30 + 2);
            *uint64_t v29 = v31;
            v29[1] = v32;
            uint64_t v34 = *((void *)v30 + 3);
            uint64_t v35 = *((void *)v30 + 4);
            v29[2] = v33;
            v29[3] = v34;
            v29[4] = v35;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v343 = *((_OWORD *)v30 + 1);
            *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
            *((_OWORD *)v29 + 1) = v343;
            v29[4] = *((void *)v30 + 4);
          }
          uint64_t v344 = v20[20];
          uint64_t v345 = (void *)((char *)v10 + v344);
          uint64_t v346 = (void *)((char *)v11 + v344);
          uint64_t v347 = v346[1];
          *uint64_t v345 = *v346;
          v345[1] = v347;
          uint64_t v348 = v20[21];
          uint64_t v349 = (void *)((char *)v10 + v348);
          uint64_t v350 = (void *)((char *)v11 + v348);
          size_t v351 = (int *)type metadata accessor for PartialExtractedAttributes(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v350, 1, (uint64_t)v351))
          {
            uint64_t v352 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
            memcpy(v349, v350, *(void *)(*(void *)(v352 - 8) + 64));
          }
          else
          {
            uint64_t v507 = v350[1];
            void *v349 = *v350;
            v349[1] = v507;
            uint64_t v508 = v351[5];
            uint64_t v509 = (void *)((char *)v349 + v508);
            uint64_t v2634 = v350;
            uint64_t v510 = (void *)((char *)v350 + v508);
            uint64_t v511 = type metadata accessor for RentalCarReservation(0);
            swift_bridgeObjectRetain();
            uint64_t v2617 = v349;
            uint64_t v2590 = v351;
            if (__swift_getEnumTagSinglePayload((uint64_t)v510, 1, v511))
            {
              uint64_t v512 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
              memcpy(v509, v510, *(void *)(*(void *)(v512 - 8) + 64));
            }
            else
            {
              uint64_t v741 = v510[1];
              void *v509 = *v510;
              v509[1] = v741;
              uint64_t v742 = v510[3];
              v509[2] = v510[2];
              v509[3] = v742;
              uint64_t v743 = v510[5];
              v509[4] = v510[4];
              v509[5] = v743;
              uint64_t v744 = v510[7];
              v509[6] = v510[6];
              v509[7] = v744;
              uint64_t v745 = v510[9];
              v509[8] = v510[8];
              v509[9] = v745;
              uint64_t v746 = v510[11];
              v509[10] = v510[10];
              v509[11] = v746;
              uint64_t v747 = v510[13];
              v509[12] = v510[12];
              v509[13] = v747;
              uint64_t v748 = v510[15];
              v509[14] = v510[14];
              v509[15] = v748;
              *((unsigned char *)v509 + 128) = *((unsigned char *)v510 + 128);
              *(_WORD *)((char *)v509 + 129) = *(_WORD *)((char *)v510 + 129);
              uint64_t v749 = v510[18];
              v509[17] = v510[17];
              v509[18] = v749;
              uint64_t v750 = v510[20];
              v509[19] = v510[19];
              v509[20] = v750;
              uint64_t v751 = v510[22];
              v509[21] = v510[21];
              v509[22] = v751;
              uint64_t v2501 = v510[24];
              v509[23] = v510[23];
              v509[24] = v2501;
              uint64_t v752 = v510[26];
              v509[25] = v510[25];
              v509[26] = v752;
              uint64_t v753 = v510[28];
              v509[27] = v510[27];
              v509[28] = v753;
              uint64_t v754 = v510[30];
              v509[29] = v510[29];
              v509[30] = v754;
              uint64_t v755 = v510[32];
              v509[31] = v510[31];
              v509[32] = v755;
              uint64_t v756 = v510[34];
              v509[33] = v510[33];
              v509[34] = v756;
              uint64_t v757 = v510[36];
              v509[35] = v510[35];
              v509[36] = v757;
              uint64_t v758 = v510[38];
              v509[37] = v510[37];
              v509[38] = v758;
              uint64_t v759 = v510[40];
              v509[39] = v510[39];
              v509[40] = v759;
              uint64_t v760 = v510[42];
              v509[41] = v510[41];
              v509[42] = v760;
              uint64_t v761 = v510[44];
              v509[43] = v510[43];
              v509[44] = v761;
              uint64_t v762 = v510[46];
              v509[45] = v510[45];
              v509[46] = v762;
              uint64_t v763 = v510[47];
              *((unsigned char *)v509 + 384) = *((unsigned char *)v510 + 384);
              v509[47] = v763;
              uint64_t v764 = v510[50];
              v509[49] = v510[49];
              v509[50] = v764;
              uint64_t v765 = v510[52];
              v509[51] = v510[51];
              v509[52] = v765;
              uint64_t v766 = *(int *)(v511 + 140);
              v2567 = (char *)v509 + v766;
              uint64_t v767 = (char *)v510 + v766;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v767, 1, v2684))
              {
                uint64_t v768 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2567, v767, *(void *)(*(void *)(v768 - 8) + 64));
              }
              else
              {
                v2664(v2567, v767, v2684);
                __swift_storeEnumTagSinglePayload((uint64_t)v2567, 0, 1, v2684);
              }
              uint64_t v825 = *(int *)(v511 + 144);
              uint64_t v826 = (char *)v509 + v825;
              uint64_t v827 = (char *)v510 + v825;
              if (__swift_getEnumTagSinglePayload((uint64_t)v510 + v825, 1, v2684))
              {
                uint64_t v828 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v826, v827, *(void *)(*(void *)(v828 - 8) + 64));
              }
              else
              {
                v2664(v826, v827, v2684);
                __swift_storeEnumTagSinglePayload((uint64_t)v826, 0, 1, v2684);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v509, 0, 1, v511);
              uint64_t v349 = v2617;
            }
            uint64_t v837 = v350;
            uint64_t v838 = v351[6];
            uint64_t v839 = (void *)((char *)v349 + v838);
            uint64_t v840 = (void *)((char *)v350 + v838);
            uint64_t v841 = type metadata accessor for TicketedTransportation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v840, 1, v841))
            {
              uint64_t v842 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
              memcpy(v839, v840, *(void *)(*(void *)(v842 - 8) + 64));
            }
            else
            {
              uint64_t v843 = v840[1];
              *uint64_t v839 = *v840;
              v839[1] = v843;
              uint64_t v844 = v840[3];
              v839[2] = v840[2];
              v839[3] = v844;
              uint64_t v845 = v840[5];
              v839[4] = v840[4];
              v839[5] = v845;
              uint64_t v846 = v840[7];
              v839[6] = v840[6];
              v839[7] = v846;
              uint64_t v847 = v840[9];
              v839[8] = v840[8];
              v839[9] = v847;
              uint64_t v848 = v840[11];
              v839[10] = v840[10];
              v839[11] = v848;
              uint64_t v849 = v840[13];
              v839[12] = v840[12];
              v839[13] = v849;
              uint64_t v850 = v840[15];
              v839[14] = v840[14];
              v839[15] = v850;
              *((unsigned char *)v839 + 128) = *((unsigned char *)v840 + 128);
              *(_WORD *)((char *)v839 + 129) = *(_WORD *)((char *)v840 + 129);
              uint64_t v851 = v840[18];
              v839[17] = v840[17];
              v839[18] = v851;
              uint64_t v852 = v840[20];
              v839[19] = v840[19];
              v839[20] = v852;
              uint64_t v853 = v840[22];
              v839[21] = v840[21];
              v839[22] = v853;
              uint64_t v854 = v840[24];
              v839[23] = v840[23];
              v839[24] = v854;
              uint64_t v2544 = (void *)v840[26];
              v839[25] = v840[25];
              v839[26] = v2544;
              uint64_t v855 = v840[28];
              v839[27] = v840[27];
              v839[28] = v855;
              uint64_t v856 = v840[30];
              v839[29] = v840[29];
              v839[30] = v856;
              uint64_t v857 = v840[32];
              v839[31] = v840[31];
              v839[32] = v857;
              uint64_t v858 = v840[34];
              v839[33] = v840[33];
              v839[34] = v858;
              uint64_t v859 = v840[36];
              uint64_t v860 = v840[35];
              *((unsigned char *)v839 + 296) = *((unsigned char *)v840 + 296);
              v839[35] = v860;
              v839[36] = v859;
              uint64_t v861 = *(int *)(v841 + 112);
              uint64_t v2552 = (char *)v839 + v861;
              uint64_t v862 = (char *)v840 + v861;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v862, 1, v2684))
              {
                uint64_t v863 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2552, v862, *(void *)(*(void *)(v863 - 8) + 64));
              }
              else
              {
                v2664(v2552, v862, v2684);
                __swift_storeEnumTagSinglePayload((uint64_t)v2552, 0, 1, v2684);
              }
              uint64_t v918 = *(int *)(v841 + 116);
              uint64_t v919 = (char *)v839 + v918;
              uint64_t v920 = (char *)v840 + v918;
              if (__swift_getEnumTagSinglePayload((uint64_t)v840 + v918, 1, v2684))
              {
                uint64_t v921 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v919, v920, *(void *)(*(void *)(v921 - 8) + 64));
              }
              else
              {
                v2664(v919, v920, v2684);
                __swift_storeEnumTagSinglePayload((uint64_t)v919, 0, 1, v2684);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v839, 0, 1, v841);
              uint64_t v349 = v2617;
              uint64_t v837 = v350;
            }
            uint64_t v930 = v351[7];
            uint64_t v931 = (void *)((char *)v349 + v930);
            uint64_t v932 = (void *)((char *)v837 + v930);
            uint64_t v933 = (int *)type metadata accessor for TicketedShow(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v932, 1, (uint64_t)v933))
            {
              uint64_t v934 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
              memcpy(v931, v932, *(void *)(*(void *)(v934 - 8) + 64));
            }
            else
            {
              uint64_t v935 = v932[1];
              *uint64_t v931 = *v932;
              v931[1] = v935;
              uint64_t v936 = v932[3];
              v931[2] = v932[2];
              v931[3] = v936;
              uint64_t v937 = v932[5];
              v931[4] = v932[4];
              v931[5] = v937;
              uint64_t v938 = v932[7];
              v931[6] = v932[6];
              v931[7] = v938;
              uint64_t v939 = v932[9];
              v931[8] = v932[8];
              v931[9] = v939;
              uint64_t v940 = v932[11];
              v931[10] = v932[10];
              v931[11] = v940;
              uint64_t v941 = v932[13];
              v931[12] = v932[12];
              v931[13] = v941;
              uint64_t v942 = v932[15];
              v931[14] = v932[14];
              v931[15] = v942;
              *((unsigned char *)v931 + 128) = *((unsigned char *)v932 + 128);
              *(_WORD *)((char *)v931 + 129) = *(_WORD *)((char *)v932 + 129);
              uint64_t v943 = v932[18];
              v931[17] = v932[17];
              v931[18] = v943;
              uint64_t v944 = v932[20];
              v931[19] = v932[19];
              v931[20] = v944;
              uint64_t v945 = v932[22];
              v931[21] = v932[21];
              v931[22] = v945;
              uint64_t v2504 = v932[24];
              v931[23] = v932[23];
              v931[24] = v2504;
              uint64_t v946 = v932[26];
              v931[25] = v932[25];
              v931[26] = v946;
              uint64_t v947 = v932[28];
              v931[27] = v932[27];
              v931[28] = v947;
              uint64_t v2555 = (void *)v932[30];
              v931[29] = v932[29];
              v931[30] = v2555;
              uint64_t v948 = v932[32];
              v931[31] = v932[31];
              v931[32] = v948;
              uint64_t v949 = v932[34];
              v931[33] = v932[33];
              v931[34] = v949;
              uint64_t v950 = v932[36];
              uint64_t v951 = v932[35];
              *((unsigned char *)v931 + 296) = *((unsigned char *)v932 + 296);
              v931[35] = v951;
              v931[36] = v950;
              uint64_t v952 = v932[39];
              v931[38] = v932[38];
              v931[39] = v952;
              uint64_t v953 = v933[29];
              v2570 = (char *)v931 + v953;
              uint64_t v954 = (char *)v932 + v953;
              uint64_t v955 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v954, 1, v955))
              {
                uint64_t v956 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2570, v954, *(void *)(*(void *)(v956 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v955 - 8) + 16))(v2570, v954, v955);
                __swift_storeEnumTagSinglePayload((uint64_t)v2570, 0, 1, v955);
              }
              uint64_t v1011 = v933[30];
              uint64_t v1012 = (void *)((char *)v931 + v1011);
              uint64_t v1013 = (void *)((char *)v932 + v1011);
              uint64_t v1014 = v1013[1];
              *uint64_t v1012 = *v1013;
              v1012[1] = v1014;
              uint64_t v1015 = v933[31];
              uint64_t v1016 = (char *)v931 + v1015;
              uint64_t v1017 = (char *)v932 + v1015;
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1017, 1, v2684))
              {
                uint64_t v1018 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1016, v1017, *(void *)(*(void *)(v1018 - 8) + 64));
              }
              else
              {
                v2664(v1016, v1017, v2684);
                __swift_storeEnumTagSinglePayload((uint64_t)v1016, 0, 1, v2684);
              }
              uint64_t v1035 = v933[32];
              uint64_t v1036 = (char *)v931 + v1035;
              uint64_t v1037 = (char *)v932 + v1035;
              if (__swift_getEnumTagSinglePayload((uint64_t)v932 + v1035, 1, v2684))
              {
                uint64_t v1038 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1036, v1037, *(void *)(*(void *)(v1038 - 8) + 64));
              }
              else
              {
                v2664(v1036, v1037, v2684);
                __swift_storeEnumTagSinglePayload((uint64_t)v1036, 0, 1, v2684);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v931, 0, 1, (uint64_t)v933);
              uint64_t v349 = v2617;
              uint64_t v837 = v350;
            }
            uint64_t v1047 = v351[8];
            uint64_t v1048 = (void *)((char *)v349 + v1047);
            uint64_t v1049 = (void *)((char *)v837 + v1047);
            uint64_t v1050 = type metadata accessor for Appointment(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1049, 1, v1050))
            {
              uint64_t v1051 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
              memcpy(v1048, v1049, *(void *)(*(void *)(v1051 - 8) + 64));
            }
            else
            {
              uint64_t v1052 = v1049[1];
              *uint64_t v1048 = *v1049;
              v1048[1] = v1052;
              uint64_t v1053 = v1049[3];
              v1048[2] = v1049[2];
              v1048[3] = v1053;
              uint64_t v1054 = v1049[5];
              v1048[4] = v1049[4];
              v1048[5] = v1054;
              uint64_t v1055 = v1049[7];
              v1048[6] = v1049[6];
              v1048[7] = v1055;
              uint64_t v1056 = v1049[9];
              v1048[8] = v1049[8];
              v1048[9] = v1056;
              uint64_t v1057 = v1049[11];
              v1048[10] = v1049[10];
              v1048[11] = v1057;
              uint64_t v1058 = v1049[13];
              v1048[12] = v1049[12];
              v1048[13] = v1058;
              uint64_t v1059 = v1049[15];
              v1048[14] = v1049[14];
              v1048[15] = v1059;
              *((unsigned char *)v1048 + 128) = *((unsigned char *)v1049 + 128);
              *(_WORD *)((char *)v1048 + 129) = *(_WORD *)((char *)v1049 + 129);
              uint64_t v1060 = v1049[18];
              v1048[17] = v1049[17];
              v1048[18] = v1060;
              uint64_t v1061 = v1049[20];
              v1048[19] = v1049[19];
              v1048[20] = v1061;
              uint64_t v1062 = v1049[22];
              v1048[21] = v1049[21];
              v1048[22] = v1062;
              uint64_t v1063 = v1049[24];
              v1048[23] = v1049[23];
              v1048[24] = v1063;
              uint64_t v1064 = v1049[26];
              v1048[25] = v1049[25];
              v1048[26] = v1064;
              uint64_t v1065 = v1049[28];
              v1048[27] = v1049[27];
              v1048[28] = v1065;
              uint64_t v1066 = v1049[30];
              v1048[29] = v1049[29];
              v1048[30] = v1066;
              uint64_t v1067 = v1049[32];
              v1048[31] = v1049[31];
              v1048[32] = v1067;
              uint64_t v1069 = v1049[33];
              uint64_t v1068 = v1049[34];
              *((unsigned char *)v1048 + 280) = *((unsigned char *)v1049 + 280);
              v1048[33] = v1069;
              v1048[34] = v1068;
              uint64_t v1070 = v1049[37];
              v1048[36] = v1049[36];
              v1048[37] = v1070;
              uint64_t v1071 = *(int *)(v1050 + 108);
              uint64_t v2557 = (char *)v1048 + v1071;
              uint64_t v1072 = (char *)v1049 + v1071;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1072, 1, v2684))
              {
                uint64_t v1073 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2557, v1072, *(void *)(*(void *)(v1073 - 8) + 64));
              }
              else
              {
                v2664(v2557, v1072, v2684);
                __swift_storeEnumTagSinglePayload((uint64_t)v2557, 0, 1, v2684);
              }
              uint64_t v1128 = *(int *)(v1050 + 112);
              uint64_t v1129 = (char *)v1048 + v1128;
              uint64_t v1130 = (char *)v1049 + v1128;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1049 + v1128, 1, v2684))
              {
                uint64_t v1131 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1129, v1130, *(void *)(*(void *)(v1131 - 8) + 64));
              }
              else
              {
                v2664(v1129, v1130, v2684);
                __swift_storeEnumTagSinglePayload((uint64_t)v1129, 0, 1, v2684);
              }
              __swift_storeEnumTagSinglePayload((uint64_t)v1048, 0, 1, v1050);
              uint64_t v349 = v2617;
              uint64_t v837 = v350;
            }
            uint64_t v1140 = v351[9];
            uint64_t v1141 = (void *)((char *)v349 + v1140);
            uint64_t v1142 = (void *)((char *)v837 + v1140);
            uint64_t v1143 = (int *)type metadata accessor for Party(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1142, 1, (uint64_t)v1143))
            {
              uint64_t v1144 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
              memcpy(v1141, v1142, *(void *)(*(void *)(v1144 - 8) + 64));
            }
            else
            {
              uint64_t v1145 = v1142[1];
              *uint64_t v1141 = *v1142;
              v1141[1] = v1145;
              uint64_t v1146 = v1142[3];
              v1141[2] = v1142[2];
              v1141[3] = v1146;
              uint64_t v1147 = v1142[5];
              v1141[4] = v1142[4];
              v1141[5] = v1147;
              uint64_t v1148 = v1142[7];
              v1141[6] = v1142[6];
              v1141[7] = v1148;
              uint64_t v1149 = v1142[9];
              v1141[8] = v1142[8];
              v1141[9] = v1149;
              uint64_t v1150 = v1142[11];
              v1141[10] = v1142[10];
              v1141[11] = v1150;
              uint64_t v1151 = v1142[13];
              v1141[12] = v1142[12];
              v1141[13] = v1151;
              uint64_t v1152 = v1142[15];
              v1141[14] = v1142[14];
              v1141[15] = v1152;
              *((unsigned char *)v1141 + 128) = *((unsigned char *)v1142 + 128);
              *(_WORD *)((char *)v1141 + 129) = *(_WORD *)((char *)v1142 + 129);
              uint64_t v1153 = v1142[18];
              v1141[17] = v1142[17];
              v1141[18] = v1153;
              uint64_t v1154 = v1142[20];
              v1141[19] = v1142[19];
              v1141[20] = v1154;
              uint64_t v1155 = v1142[22];
              v1141[21] = v1142[21];
              v1141[22] = v1155;
              uint64_t v1156 = v1142[24];
              v1141[23] = v1142[23];
              v1141[24] = v1156;
              uint64_t v1157 = v1142[26];
              v1141[25] = v1142[25];
              v1141[26] = v1157;
              uint64_t v1158 = v1142[28];
              v1141[27] = v1142[27];
              v1141[28] = v1158;
              uint64_t v1159 = v1142[30];
              v1141[29] = v1142[29];
              v1141[30] = v1159;
              v1141[31] = v1142[31];
              uint64_t v1160 = v1143[24];
              uint64_t v2558 = (char *)v1141 + v1160;
              uint64_t v1161 = (char *)v1142 + v1160;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1161, 1, v2684))
              {
                uint64_t v1162 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2558, v1161, *(void *)(*(void *)(v1162 - 8) + 64));
              }
              else
              {
                v2664(v2558, v1161, v2684);
                __swift_storeEnumTagSinglePayload((uint64_t)v2558, 0, 1, v2684);
              }
              uint64_t v1209 = v1143[25];
              uint64_t v1210 = (char *)v1141 + v1209;
              uint64_t v1211 = (char *)v1142 + v1209;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1142 + v1209, 1, v2684))
              {
                uint64_t v1212 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1210, v1211, *(void *)(*(void *)(v1212 - 8) + 64));
              }
              else
              {
                v2664(v1210, v1211, v2684);
                __swift_storeEnumTagSinglePayload((uint64_t)v1210, 0, 1, v2684);
              }
              uint64_t v1221 = v1143[26];
              uint64_t v1222 = (char *)v1141 + v1221;
              uint64_t v1223 = (char *)v1142 + v1221;
              uint64_t v1224 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1223, 1, v1224))
              {
                uint64_t v1225 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1222, v1223, *(void *)(*(void *)(v1225 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1224 - 8) + 16))(v1222, v1223, v1224);
                __swift_storeEnumTagSinglePayload((uint64_t)v1222, 0, 1, v1224);
              }
              size_t v351 = v2590;
              __swift_storeEnumTagSinglePayload((uint64_t)v1141, 0, 1, (uint64_t)v1143);
              uint64_t v349 = v2617;
              uint64_t v837 = v350;
            }
            uint64_t v1235 = v351[10];
            uint64_t v1236 = (void *)((char *)v349 + v1235);
            uint64_t v1237 = (void *)((char *)v837 + v1235);
            uint64_t v1238 = (int *)type metadata accessor for Trip(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1237, 1, (uint64_t)v1238))
            {
              uint64_t v1239 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
              memcpy(v1236, v1237, *(void *)(*(void *)(v1239 - 8) + 64));
            }
            else
            {
              uint64_t v1240 = v1237[1];
              *uint64_t v1236 = *v1237;
              v1236[1] = v1240;
              uint64_t v1241 = v1237[3];
              v1236[2] = v1237[2];
              v1236[3] = v1241;
              uint64_t v1242 = v1237[5];
              v1236[4] = v1237[4];
              v1236[5] = v1242;
              uint64_t v1243 = v1237[7];
              v1236[6] = v1237[6];
              v1236[7] = v1243;
              uint64_t v1244 = v1237[9];
              v1236[8] = v1237[8];
              v1236[9] = v1244;
              uint64_t v1245 = v1237[11];
              v1236[10] = v1237[10];
              v1236[11] = v1245;
              uint64_t v1246 = v1237[13];
              v1236[12] = v1237[12];
              v1236[13] = v1246;
              uint64_t v1247 = v1237[15];
              v1236[14] = v1237[14];
              v1236[15] = v1247;
              *((unsigned char *)v1236 + 128) = *((unsigned char *)v1237 + 128);
              *(_WORD *)((char *)v1236 + 129) = *(_WORD *)((char *)v1237 + 129);
              uint64_t v1248 = v1237[18];
              v1236[17] = v1237[17];
              v1236[18] = v1248;
              uint64_t v1249 = v1237[20];
              v1236[19] = v1237[19];
              v1236[20] = v1249;
              uint64_t v1250 = v1237[22];
              v1236[21] = v1237[21];
              v1236[22] = v1250;
              uint64_t v1251 = v1237[24];
              v1236[23] = v1237[23];
              v1236[24] = v1251;
              uint64_t v1252 = v1237[26];
              v1236[25] = v1237[25];
              v1236[26] = v1252;
              v1236[27] = v1237[27];
              uint64_t v1253 = v1238[22];
              uint64_t v2559 = (char *)v1236 + v1253;
              v2509 = (char *)v1237 + v1253;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2509, 1, v2684))
              {
                uint64_t v1254 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2559, v2509, *(void *)(*(void *)(v1254 - 8) + 64));
              }
              else
              {
                v2664(v2559, v2509, v2684);
                __swift_storeEnumTagSinglePayload((uint64_t)v2559, 0, 1, v2684);
              }
              uint64_t v1297 = v1238[23];
              uint64_t v1298 = (char *)v1236 + v1297;
              uint64_t v1299 = (char *)v1237 + v1297;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1237 + v1297, 1, v2684))
              {
                uint64_t v1300 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v1298, v1299, *(void *)(*(void *)(v1300 - 8) + 64));
              }
              else
              {
                v2664(v1298, v1299, v2684);
                __swift_storeEnumTagSinglePayload((uint64_t)v1298, 0, 1, v2684);
              }
              uint64_t v1309 = v1238[24];
              uint64_t v1310 = (char *)v1236 + v1309;
              uint64_t v1311 = (char *)v1237 + v1309;
              *(void *)uint64_t v1310 = *(void *)v1311;
              v1310[8] = v1311[8];
              uint64_t v1312 = v1238[25];
              uint64_t v1313 = (char *)v1236 + v1312;
              uint64_t v1314 = (char *)v1237 + v1312;
              uint64_t v1315 = type metadata accessor for URL();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1314, 1, v1315))
              {
                uint64_t v1316 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1313, v1314, *(void *)(*(void *)(v1316 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1315 - 8) + 16))(v1313, v1314, v1315);
                __swift_storeEnumTagSinglePayload((uint64_t)v1313, 0, 1, v1315);
              }
              size_t v351 = v2590;
              __swift_storeEnumTagSinglePayload((uint64_t)v1236, 0, 1, (uint64_t)v1238);
              uint64_t v349 = v2617;
              uint64_t v837 = v350;
            }
            uint64_t v1332 = v351[11];
            v1333 = (void *)((char *)v349 + v1332);
            uint64_t v1334 = (void *)((char *)v837 + v1332);
            uint64_t v1335 = (int *)type metadata accessor for FlightReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1334, 1, (uint64_t)v1335))
            {
              uint64_t v1336 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
              memcpy(v1333, v1334, *(void *)(*(void *)(v1336 - 8) + 64));
            }
            else
            {
              uint64_t v1337 = v1334[1];
              void *v1333 = *v1334;
              v1333[1] = v1337;
              uint64_t v1338 = v1334[3];
              v1333[2] = v1334[2];
              v1333[3] = v1338;
              uint64_t v1339 = v1334[5];
              v1333[4] = v1334[4];
              v1333[5] = v1339;
              uint64_t v1340 = v1334[7];
              v1333[6] = v1334[6];
              v1333[7] = v1340;
              uint64_t v1341 = v1334[9];
              v1333[8] = v1334[8];
              v1333[9] = v1341;
              uint64_t v1342 = v1334[11];
              v1333[10] = v1334[10];
              v1333[11] = v1342;
              *((unsigned char *)v1333 + 96) = *((unsigned char *)v1334 + 96);
              uint64_t v1343 = v1334[14];
              v1333[13] = v1334[13];
              v1333[14] = v1343;
              uint64_t v1344 = v1335[13];
              v2579 = (char *)v1333 + v1344;
              v1345 = (char *)v1334 + v1344;
              uint64_t v1346 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1345, 1, v1346))
              {
                uint64_t v1347 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v2579, v1345, *(void *)(*(void *)(v1347 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1346 - 8) + 16))(v2579, v1345, v1346);
                __swift_storeEnumTagSinglePayload((uint64_t)v2579, 0, 1, v1346);
              }
              uint64_t v1379 = v1335[14];
              uint64_t v1380 = (char *)v1333 + v1379;
              v1381 = (char *)v1334 + v1379;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1334 + v1379, 1, v1346))
              {
                uint64_t v1382 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
                memcpy(v1380, v1381, *(void *)(*(void *)(v1382 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1346 - 8) + 16))(v1380, v1381, v1346);
                __swift_storeEnumTagSinglePayload((uint64_t)v1380, 0, 1, v1346);
              }
              uint64_t v1391 = v1335[15];
              uint64_t v1392 = (void *)((char *)v1333 + v1391);
              uint64_t v1393 = (void *)((char *)v1334 + v1391);
              uint64_t v1394 = v1393[1];
              void *v1392 = *v1393;
              v1392[1] = v1394;
              uint64_t v1395 = v1335[16];
              uint64_t v1396 = (void *)((char *)v1333 + v1395);
              uint64_t v1397 = (void *)((char *)v1334 + v1395);
              uint64_t v2580 = (void *)v1397[1];
              *uint64_t v1396 = *v1397;
              v1396[1] = v2580;
              uint64_t v1398 = v1335[17];
              v1399 = (void *)((char *)v1333 + v1398);
              uint64_t v1400 = (void *)((char *)v1334 + v1398);
              uint64_t v1401 = v1400[1];
              void *v1399 = *v1400;
              v1399[1] = v1401;
              uint64_t v1402 = v1335[18];
              uint64_t v2545 = (char *)v1334 + v1402;
              uint64_t v2560 = (char *)v1333 + v1402;
              uint64_t v1403 = type metadata accessor for DateComponents();
              uint64_t v1404 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1403 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1404(v2560, v2545, v1403);
              v1404((char *)v1333 + v1335[19], (char *)v1334 + v1335[19], v1403);
              uint64_t v1405 = v1335[20];
              uint64_t v1406 = (void *)((char *)v1333 + v1405);
              uint64_t v1407 = (void *)((char *)v1334 + v1405);
              uint64_t v1408 = v1407[1];
              void *v1406 = *v1407;
              v1406[1] = v1408;
              uint64_t v1409 = v1335[21];
              uint64_t v1410 = (void *)((char *)v1333 + v1409);
              v1411 = (void *)((char *)v1334 + v1409);
              uint64_t v1412 = v1411[1];
              *uint64_t v1410 = *v1411;
              v1410[1] = v1412;
              uint64_t v1413 = v1335[22];
              v1414 = (void *)((char *)v1333 + v1413);
              v1415 = (void *)((char *)v1334 + v1413);
              uint64_t v2532 = v1415[1];
              void *v1414 = *v1415;
              v1414[1] = v2532;
              uint64_t v1416 = v1335[23];
              v1417 = (void *)((char *)v1333 + v1416);
              v1418 = (void *)((char *)v1334 + v1416);
              v2581 = (void *)v1418[1];
              void *v1417 = *v1418;
              v1417[1] = v2581;
              uint64_t v1419 = v1335[24];
              v1420 = (void *)((char *)v1333 + v1419);
              v1421 = (void *)((char *)v1334 + v1419);
              v2546 = (void *)v1421[1];
              void *v1420 = *v1421;
              v1420[1] = v2546;
              uint64_t v1422 = v1335[25];
              v1423 = (void *)((char *)v1333 + v1422);
              v1424 = (void *)((char *)v1334 + v1422);
              uint64_t v2538 = (void *)v1424[1];
              void *v1423 = *v1424;
              v1423[1] = v2538;
              uint64_t v1425 = v1335[26];
              v1426 = (void *)((char *)v1333 + v1425);
              v1427 = (void *)((char *)v1334 + v1425);
              __dstb = (void *)v1427[1];
              void *v1426 = *v1427;
              v1426[1] = __dstb;
              uint64_t v1428 = v1335[27];
              v1429 = (void *)((char *)v1333 + v1428);
              v1430 = (void *)((char *)v1334 + v1428);
              uint64_t v2522 = (void *)v1430[1];
              void *v1429 = *v1430;
              v1429[1] = v2522;
              uint64_t v1431 = v1335[28];
              v1432 = (void *)((char *)v1333 + v1431);
              v1433 = (void *)((char *)v1334 + v1431);
              uint64_t v2518 = v1433[1];
              void *v1432 = *v1433;
              v1432[1] = v2518;
              uint64_t v1434 = v1335[29];
              v1435 = (void *)((char *)v1333 + v1434);
              v1436 = (void *)((char *)v1334 + v1434);
              uint64_t v2515 = v1436[1];
              void *v1435 = *v1436;
              v1435[1] = v2515;
              uint64_t v1437 = v1335[30];
              v1438 = (void *)((char *)v1333 + v1437);
              v1439 = (void *)((char *)v1334 + v1437);
              uint64_t v2512 = v1439[1];
              void *v1438 = *v1439;
              v1438[1] = v2512;
              uint64_t v1440 = v1335[31];
              uint64_t v1441 = (void *)((char *)v1333 + v1440);
              v1442 = (void *)((char *)v1334 + v1440);
              uint64_t v2510 = v1442[1];
              *uint64_t v1441 = *v1442;
              v1441[1] = v2510;
              uint64_t v1443 = v1335[32];
              uint64_t v1444 = (void *)((char *)v1333 + v1443);
              uint64_t v1445 = (void *)((char *)v1334 + v1443);
              uint64_t v2506 = v1445[1];
              *uint64_t v1444 = *v1445;
              v1444[1] = v2506;
              *(void *)((char *)v1333 + v1335[33]) = *(void *)((char *)v1334 + v1335[33]);
              *(void *)((char *)v1333 + v1335[34]) = *(void *)((char *)v1334 + v1335[34]);
              uint64_t v1446 = v1335[35];
              v1447 = (void *)((char *)v1333 + v1446);
              uint64_t v1448 = (void *)((char *)v1334 + v1446);
              uint64_t v1449 = v1448[1];
              void *v1447 = *v1448;
              v1447[1] = v1449;
              uint64_t v1450 = v1335[36];
              v1451 = (void *)((char *)v1333 + v1450);
              uint64_t v1452 = (void *)((char *)v1334 + v1450);
              uint64_t v1453 = v1452[1];
              void *v1451 = *v1452;
              v1451[1] = v1453;
              uint64_t v1454 = v1335[37];
              uint64_t v1455 = (void *)((char *)v1333 + v1454);
              uint64_t v1456 = (void *)((char *)v1334 + v1454);
              uint64_t v1457 = v1456[1];
              *uint64_t v1455 = *v1456;
              v1455[1] = v1457;
              uint64_t v1458 = v1335[38];
              v2561 = (char *)v1333 + v1458;
              uint64_t v1459 = (char *)v1334 + v1458;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1459, 1, v2684))
              {
                uint64_t v1460 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
                memcpy(v2561, v1459, *(void *)(*(void *)(v1460 - 8) + 64));
              }
              else
              {
                v2664(v2561, v1459, v2684);
                __swift_storeEnumTagSinglePayload((uint64_t)v2561, 0, 1, v2684);
              }
              uint64_t v1601 = v1335[39];
              uint64_t v1602 = (void *)((char *)v1333 + v1601);
              v1603 = (void *)((char *)v1334 + v1601);
              uint64_t v1604 = v1603[1];
              *uint64_t v1602 = *v1603;
              v1602[1] = v1604;
              uint64_t v1605 = v1335[40];
              uint64_t v1606 = (void *)((char *)v1333 + v1605);
              v1607 = (void *)((char *)v1334 + v1605);
              uint64_t v1608 = v1607[1];
              *uint64_t v1606 = *v1607;
              v1606[1] = v1608;
              uint64_t v1609 = v1335[41];
              uint64_t v1610 = (char *)v1333 + v1609;
              uint64_t v1611 = (char *)v1334 + v1609;
              v1610[8] = v1611[8];
              *(void *)uint64_t v1610 = *(void *)v1611;
              uint64_t v1612 = v1335[42];
              uint64_t v1613 = (void *)((char *)v1333 + v1612);
              uint64_t v1614 = (void *)((char *)v1334 + v1612);
              uint64_t v1615 = v1614[1];
              *uint64_t v1613 = *v1614;
              v1613[1] = v1615;
              uint64_t v1616 = v1335[43];
              uint64_t v1617 = (char *)v1333 + v1616;
              uint64_t v1618 = (char *)v1334 + v1616;
              *(_OWORD *)uint64_t v1617 = *(_OWORD *)v1618;
              *(void *)(v1617 + 13) = *(void *)(v1618 + 13);
              uint64_t v1619 = v1335[44];
              uint64_t v1620 = (void *)((char *)v1333 + v1619);
              uint64_t v1621 = (void *)((char *)v1334 + v1619);
              uint64_t v1622 = v1621[1];
              *uint64_t v1620 = *v1621;
              v1620[1] = v1622;
              uint64_t v1623 = v1335[45];
              uint64_t v1624 = (void *)((char *)v1333 + v1623);
              uint64_t v1625 = (void *)((char *)v1334 + v1623);
              uint64_t v1626 = v1625[1];
              *uint64_t v1624 = *v1625;
              v1624[1] = v1626;
              uint64_t v1627 = v1335[46];
              uint64_t v1628 = (void *)((char *)v1333 + v1627);
              uint64_t v1629 = (void *)((char *)v1334 + v1627);
              uint64_t v1630 = v1629[1];
              *uint64_t v1628 = *v1629;
              v1628[1] = v1630;
              uint64_t v1631 = v1335[47];
              v1632 = (void *)((char *)v1333 + v1631);
              v1633 = (void *)((char *)v1334 + v1631);
              uint64_t v1634 = v1633[1];
              void *v1632 = *v1633;
              v1632[1] = v1634;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1333, 0, 1, (uint64_t)v1335);
              uint64_t v349 = v2617;
              uint64_t v837 = v2634;
              size_t v351 = v2590;
            }
            uint64_t v1635 = v351[12];
            v1636 = (void *)((char *)v349 + v1635);
            v1637 = (void *)((char *)v837 + v1635);
            uint64_t v1638 = (int *)type metadata accessor for HotelReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1637, 1, (uint64_t)v1638))
            {
              uint64_t v1639 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
              memcpy(v1636, v1637, *(void *)(*(void *)(v1639 - 8) + 64));
            }
            else
            {
              uint64_t v1640 = v1637[1];
              void *v1636 = *v1637;
              v1636[1] = v1640;
              uint64_t v1641 = v1637[3];
              v1636[2] = v1637[2];
              v1636[3] = v1641;
              uint64_t v1642 = v1637[5];
              v1636[4] = v1637[4];
              v1636[5] = v1642;
              uint64_t v1643 = v1637[7];
              v1636[6] = v1637[6];
              v1636[7] = v1643;
              uint64_t v1644 = v1637[9];
              v1636[8] = v1637[8];
              v1636[9] = v1644;
              uint64_t v1645 = v1637[11];
              v1636[10] = v1637[10];
              v1636[11] = v1645;
              *((unsigned char *)v1636 + 96) = *((unsigned char *)v1637 + 96);
              uint64_t v1646 = v1637[14];
              v1636[13] = v1637[13];
              v1636[14] = v1646;
              uint64_t v1647 = v1637[16];
              v1636[15] = v1637[15];
              v1636[16] = v1647;
              uint64_t v1648 = v1638[14];
              v2586 = (char *)v1636 + v1648;
              uint64_t v2525 = (char *)v1637 + v1648;
              uint64_t v1649 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v2525, 1, v1649))
              {
                uint64_t v1650 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2586, v2525, *(void *)(*(void *)(v1650 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1649 - 8) + 16))(v2586, v2525, v1649);
                __swift_storeEnumTagSinglePayload((uint64_t)v2586, 0, 1, v1649);
              }
              uint64_t v1752 = v1638[15];
              uint64_t v1753 = (char *)v1636 + v1752;
              v1754 = (char *)v1637 + v1752;
              if (__swift_getEnumTagSinglePayload((uint64_t)v1637 + v1752, 1, v1649))
              {
                uint64_t v1755 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v1753, v1754, *(void *)(*(void *)(v1755 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1649 - 8) + 16))(v1753, v1754, v1649);
                __swift_storeEnumTagSinglePayload((uint64_t)v1753, 0, 1, v1649);
              }
              uint64_t v1764 = v1638[16];
              uint64_t v1765 = (void *)((char *)v1636 + v1764);
              uint64_t v1766 = (void *)((char *)v1637 + v1764);
              uint64_t v1767 = v1766[1];
              *uint64_t v1765 = *v1766;
              v1765[1] = v1767;
              uint64_t v1768 = v1638[17];
              uint64_t v1769 = (void *)((char *)v1636 + v1768);
              uint64_t v1770 = (void *)((char *)v1637 + v1768);
              uint64_t v1771 = v1770[1];
              *uint64_t v1769 = *v1770;
              v1769[1] = v1771;
              uint64_t v1772 = v1638[18];
              uint64_t v1773 = (void *)((char *)v1636 + v1772);
              uint64_t v1774 = (void *)((char *)v1637 + v1772);
              v2587 = (void *)v1774[1];
              *uint64_t v1773 = *v1774;
              v1773[1] = v2587;
              uint64_t v1775 = v1638[19];
              uint64_t v1776 = (void *)((char *)v1636 + v1775);
              uint64_t v1777 = (void *)((char *)v1637 + v1775);
              uint64_t v2565 = (void *)v1777[1];
              void *v1776 = *v1777;
              v1776[1] = v2565;
              uint64_t v1778 = v1638[20];
              uint64_t v1779 = (void *)((char *)v1636 + v1778);
              uint64_t v1780 = (void *)((char *)v1637 + v1778);
              uint64_t v2541 = (void *)v1780[1];
              void *v1779 = *v1780;
              v1779[1] = v2541;
              *(void *)((char *)v1636 + v1638[21]) = *(void *)((char *)v1637 + v1638[21]);
              *(void *)((char *)v1636 + v1638[22]) = *(void *)((char *)v1637 + v1638[22]);
              uint64_t v1781 = v1638[23];
              uint64_t v1782 = (char *)v1636 + v1781;
              uint64_t v1783 = (char *)v1637 + v1781;
              *(void *)uint64_t v1782 = *(void *)v1783;
              v1782[8] = v1783[8];
              uint64_t v1784 = v1638[24];
              uint64_t v1785 = (char *)v1636 + v1784;
              uint64_t v1786 = (char *)v1637 + v1784;
              *(void *)uint64_t v1785 = *(void *)v1786;
              v1785[8] = v1786[8];
              uint64_t v1787 = v1638[25];
              uint64_t v1788 = (void *)((char *)v1636 + v1787);
              uint64_t v1789 = (void *)((char *)v1637 + v1787);
              uint64_t v2535 = v1789[1];
              void *v1788 = *v1789;
              v1788[1] = v2535;
              uint64_t v1790 = v1638[26];
              uint64_t v1791 = (void *)((char *)v1636 + v1790);
              v1792 = (void *)((char *)v1637 + v1790);
              uint64_t v1793 = v1792[1];
              void *v1791 = *v1792;
              v1791[1] = v1793;
              uint64_t v1794 = v1638[27];
              uint64_t v1795 = (void *)((char *)v1636 + v1794);
              uint64_t v1796 = (void *)((char *)v1637 + v1794);
              uint64_t v1797 = v1796[1];
              void *v1795 = *v1796;
              v1795[1] = v1797;
              uint64_t v1798 = v1638[28];
              uint64_t v1799 = (void *)((char *)v1636 + v1798);
              uint64_t v1800 = (void *)((char *)v1637 + v1798);
              uint64_t v1801 = v1800[1];
              void *v1799 = *v1800;
              v1799[1] = v1801;
              uint64_t v1802 = v1638[29];
              uint64_t v1803 = (char *)v1636 + v1802;
              uint64_t v1804 = (char *)v1637 + v1802;
              *(void *)uint64_t v1803 = *(void *)v1804;
              v1803[8] = v1804[8];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1636, 0, 1, (uint64_t)v1638);
              uint64_t v349 = v2617;
              uint64_t v837 = v2634;
              size_t v351 = v2590;
            }
            uint64_t v1805 = v351[13];
            uint64_t v1806 = (void *)((char *)v349 + v1805);
            uint64_t v1807 = (void *)((char *)v837 + v1805);
            uint64_t v1808 = (int *)type metadata accessor for RestaurantReservation(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v1807, 1, (uint64_t)v1808))
            {
              uint64_t v1809 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
              memcpy(v1806, v1807, *(void *)(*(void *)(v1809 - 8) + 64));
            }
            else
            {
              uint64_t v1810 = v1807[1];
              *uint64_t v1806 = *v1807;
              v1806[1] = v1810;
              uint64_t v1811 = v1807[3];
              v1806[2] = v1807[2];
              v1806[3] = v1811;
              uint64_t v1812 = v1807[5];
              v1806[4] = v1807[4];
              v1806[5] = v1812;
              uint64_t v1813 = v1807[7];
              v1806[6] = v1807[6];
              v1806[7] = v1813;
              uint64_t v1814 = v1807[9];
              v1806[8] = v1807[8];
              v1806[9] = v1814;
              uint64_t v1815 = v1807[11];
              v1806[10] = v1807[10];
              v1806[11] = v1815;
              *((unsigned char *)v1806 + 96) = *((unsigned char *)v1807 + 96);
              uint64_t v1816 = v1807[14];
              v1806[13] = v1807[13];
              v1806[14] = v1816;
              uint64_t v1817 = v1807[16];
              v1806[15] = v1807[15];
              v1806[16] = v1817;
              uint64_t v1818 = v1808[14];
              uint64_t v2638 = (char *)v1806 + v1818;
              uint64_t v1819 = (char *)v1807 + v1818;
              uint64_t v1820 = type metadata accessor for DateComponents();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v1819, 1, v1820))
              {
                uint64_t v1821 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
                memcpy(v2638, v1819, *(void *)(*(void *)(v1821 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1820 - 8) + 16))(v2638, v1819, v1820);
                __swift_storeEnumTagSinglePayload((uint64_t)v2638, 0, 1, v1820);
              }
              uint64_t v1939 = v1808[15];
              v1940 = (void *)((char *)v1806 + v1939);
              uint64_t v1941 = (void *)((char *)v1807 + v1939);
              uint64_t v1942 = v1941[1];
              void *v1940 = *v1941;
              v1940[1] = v1942;
              uint64_t v1943 = v1808[16];
              uint64_t v1944 = (void *)((char *)v1806 + v1943);
              uint64_t v1945 = (void *)((char *)v1807 + v1943);
              uint64_t v1946 = v1945[1];
              *uint64_t v1944 = *v1945;
              v1944[1] = v1946;
              uint64_t v1947 = v1808[17];
              uint64_t v1948 = (void *)((char *)v1806 + v1947);
              uint64_t v1949 = (void *)((char *)v1807 + v1947);
              uint64_t v1950 = v1949[1];
              *uint64_t v1948 = *v1949;
              v1948[1] = v1950;
              uint64_t v1951 = v1808[18];
              uint64_t v1952 = (void *)((char *)v1806 + v1951);
              uint64_t v1953 = (void *)((char *)v1807 + v1951);
              uint64_t v2640 = v1953[1];
              *uint64_t v1952 = *v1953;
              v1952[1] = v2640;
              uint64_t v1954 = v1808[19];
              uint64_t v1955 = (void *)((char *)v1806 + v1954);
              uint64_t v1956 = (void *)((char *)v1807 + v1954);
              uint64_t v1957 = v1956[1];
              *uint64_t v1955 = *v1956;
              v1955[1] = v1957;
              *(void *)((char *)v1806 + v1808[20]) = *(void *)((char *)v1807 + v1808[20]);
              uint64_t v1958 = v1808[21];
              uint64_t v1959 = (void *)((char *)v1806 + v1958);
              uint64_t v1960 = (void *)((char *)v1807 + v1958);
              uint64_t v1961 = v1960[1];
              *uint64_t v1959 = *v1960;
              v1959[1] = v1961;
              uint64_t v1962 = v1808[22];
              uint64_t v1963 = (void *)((char *)v1806 + v1962);
              uint64_t v1964 = (void *)((char *)v1807 + v1962);
              uint64_t v1965 = v1964[1];
              void *v1963 = *v1964;
              v1963[1] = v1965;
              uint64_t v1966 = v1808[23];
              uint64_t v1967 = (void *)((char *)v1806 + v1966);
              uint64_t v1968 = (void *)((char *)v1807 + v1966);
              uint64_t v1969 = v1968[1];
              *uint64_t v1967 = *v1968;
              v1967[1] = v1969;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v1806, 0, 1, (uint64_t)v1808);
              uint64_t v349 = v2617;
              size_t v351 = v2590;
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v349, 0, 1, (uint64_t)v351);
            uint64_t v10 = v2720;
          }
          uint64_t v1970 = v2698[22];
          uint64_t v1971 = (void *)((char *)v10 + v1970);
          v1972 = (void *)((char *)v11 + v1970);
          uint64_t v1973 = type metadata accessor for PreExtractedCard(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1972, 1, v1973))
          {
            uint64_t v1974 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
            memcpy(v1971, v1972, *(void *)(*(void *)(v1974 - 8) + 64));
          }
          else
          {
            uint64_t v1975 = v1972[1];
            *uint64_t v1971 = *v1972;
            v1971[1] = v1975;
            uint64_t v1976 = v1972[3];
            uint64_t v1977 = (int *)v1973;
            v1971[2] = v1972[2];
            v1971[3] = v1976;
            uint64_t v1978 = v1972[5];
            v1971[4] = v1972[4];
            v1971[5] = v1978;
            uint64_t v1979 = v1972[7];
            v1971[6] = v1972[6];
            v1971[7] = v1979;
            uint64_t v1980 = v1972[9];
            v1971[8] = v1972[8];
            v1971[9] = v1980;
            uint64_t v1981 = v1972[11];
            v1971[10] = v1972[10];
            v1971[11] = v1981;
            uint64_t v2641 = v1977;
            uint64_t v1982 = v1977[10];
            uint64_t v2621 = (char *)v1971 + v1982;
            uint64_t v1983 = (char *)v1972 + v1982;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1983, 1, v2684))
            {
              uint64_t v1984 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2621, v1983, *(void *)(*(void *)(v1984 - 8) + 64));
            }
            else
            {
              v2664(v2621, v1983, v2684);
              __swift_storeEnumTagSinglePayload((uint64_t)v2621, 0, 1, v2684);
            }
            uint64_t v1985 = v2641[11];
            uint64_t v1986 = (char *)v1971 + v1985;
            uint64_t v1987 = (char *)v1972 + v1985;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1972 + v1985, 1, v2684))
            {
              uint64_t v1988 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1986, v1987, *(void *)(*(void *)(v1988 - 8) + 64));
            }
            else
            {
              v2664(v1986, v1987, v2684);
              __swift_storeEnumTagSinglePayload((uint64_t)v1986, 0, 1, v2684);
            }
            uint64_t v1989 = v2641[12];
            uint64_t v1990 = (void *)((char *)v1971 + v1989);
            uint64_t v1991 = (void *)((char *)v1972 + v1989);
            uint64_t v1992 = v1991[1];
            *uint64_t v1990 = *v1991;
            v1990[1] = v1992;
            uint64_t v1993 = v2641[13];
            uint64_t v1994 = (void *)((char *)v1971 + v1993);
            v1995 = (void *)((char *)v1972 + v1993);
            uint64_t v1996 = v1995[1];
            *uint64_t v1994 = *v1995;
            v1994[1] = v1996;
            uint64_t v1997 = v2641[14];
            uint64_t v1998 = (void *)((char *)v1971 + v1997);
            v1999 = (void *)((char *)v1972 + v1997);
            uint64_t v2000 = v1999[1];
            *uint64_t v1998 = *v1999;
            v1998[1] = v2000;
            uint64_t v2001 = v2641[15];
            uint64_t v2002 = (char *)v1971 + v2001;
            v2003 = (char *)v1972 + v2001;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2003, 1, v2684))
            {
              uint64_t v2004 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2002, v2003, *(void *)(*(void *)(v2004 - 8) + 64));
            }
            else
            {
              v2664(v2002, v2003, v2684);
              __swift_storeEnumTagSinglePayload((uint64_t)v2002, 0, 1, v2684);
            }
            uint64_t v2005 = v2641[16];
            uint64_t v2006 = (void *)((char *)v1971 + v2005);
            v2007 = (void *)((char *)v1972 + v2005);
            uint64_t v2008 = v2007[1];
            *uint64_t v2006 = *v2007;
            v2006[1] = v2008;
            uint64_t v2009 = v2641[17];
            uint64_t v2010 = (void *)((char *)v1971 + v2009);
            v2011 = (void *)((char *)v1972 + v2009);
            uint64_t v2012 = v2011[1];
            *uint64_t v2010 = *v2011;
            v2010[1] = v2012;
            uint64_t v2013 = v2641[18];
            uint64_t v2014 = (void *)((char *)v1971 + v2013);
            uint64_t v2015 = (void *)((char *)v1972 + v2013);
            uint64_t v2622 = v2015[1];
            *uint64_t v2014 = *v2015;
            v2014[1] = v2622;
            uint64_t v2016 = v2641[19];
            uint64_t v2017 = (void *)((char *)v1971 + v2016);
            uint64_t v2018 = (void *)((char *)v1972 + v2016);
            uint64_t v2019 = v2018[1];
            void *v2017 = *v2018;
            v2017[1] = v2019;
            uint64_t v2020 = v2641[20];
            uint64_t v2021 = (void *)((char *)v1971 + v2020);
            uint64_t v2022 = (void *)((char *)v1972 + v2020);
            uint64_t v2023 = v2022[1];
            void *v2021 = *v2022;
            v2021[1] = v2023;
            uint64_t v2024 = v2641[21];
            uint64_t v2025 = (void *)((char *)v1971 + v2024);
            uint64_t v2026 = (void *)((char *)v1972 + v2024);
            uint64_t v2027 = v2026[1];
            void *v2025 = *v2026;
            v2025[1] = v2027;
            uint64_t v2028 = v2641[22];
            uint64_t v2029 = (void *)((char *)v1971 + v2028);
            v2030 = (void *)((char *)v1972 + v2028);
            uint64_t v2031 = v2030[1];
            *uint64_t v2029 = *v2030;
            v2029[1] = v2031;
            uint64_t v2032 = v2641[23];
            uint64_t v2033 = (void *)((char *)v1971 + v2032);
            v2034 = (void *)((char *)v1972 + v2032);
            uint64_t v2035 = v2034[1];
            *uint64_t v2033 = *v2034;
            v2033[1] = v2035;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1971, 0, 1, (uint64_t)v2641);
            uint64_t v10 = v2720;
          }
          uint64_t v2036 = v2698[23];
          uint64_t v2037 = (void *)((char *)v10 + v2036);
          uint64_t v2038 = (void *)((char *)v11 + v2036);
          uint64_t v2039 = (int *)type metadata accessor for PreExtractedContact(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2038, 1, (uint64_t)v2039))
          {
            uint64_t v2040 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
            memcpy(v2037, v2038, *(void *)(*(void *)(v2040 - 8) + 64));
            uint64_t v373 = v2716;
          }
          else
          {
            uint64_t v2041 = v2038[1];
            *uint64_t v2037 = *v2038;
            v2037[1] = v2041;
            uint64_t v2042 = v2038[3];
            v2037[2] = v2038[2];
            v2037[3] = v2042;
            uint64_t v2043 = v2038[5];
            v2037[4] = v2038[4];
            v2037[5] = v2043;
            uint64_t v2044 = v2038[7];
            v2037[6] = v2038[6];
            v2037[7] = v2044;
            uint64_t v2045 = v2038[9];
            v2037[8] = v2038[8];
            v2037[9] = v2045;
            uint64_t v2623 = v2038[11];
            v2037[10] = v2038[10];
            v2037[11] = v2623;
            uint64_t v2046 = v2039[11];
            uint64_t v2642 = (char *)v2037 + v2046;
            v2047 = (char *)v2038 + v2046;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v373 = v2716;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2047, 1, v2684))
            {
              uint64_t v2048 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2642, v2047, *(void *)(*(void *)(v2048 - 8) + 64));
            }
            else
            {
              v2664(v2642, v2047, v2684);
              __swift_storeEnumTagSinglePayload((uint64_t)v2642, 0, 1, v2684);
            }
            uint64_t v2049 = v2039[12];
            uint64_t v2050 = (void *)((char *)v2037 + v2049);
            uint64_t v2051 = (void *)((char *)v2038 + v2049);
            uint64_t v2052 = v2051[1];
            *uint64_t v2050 = *v2051;
            v2050[1] = v2052;
            *(void *)((char *)v2037 + v2039[13]) = *(void *)((char *)v2038 + v2039[13]);
            uint64_t v2053 = v2039[14];
            uint64_t v2054 = (char *)v2037 + v2053;
            uint64_t v2055 = (char *)v2038 + v2053;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2055, 1, v2684))
            {
              uint64_t v2056 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2054, v2055, *(void *)(*(void *)(v2056 - 8) + 64));
            }
            else
            {
              v2664(v2054, v2055, v2684);
              __swift_storeEnumTagSinglePayload((uint64_t)v2054, 0, 1, v2684);
            }
            *(void *)((char *)v2037 + v2039[15]) = *(void *)((char *)v2038 + v2039[15]);
            *(void *)((char *)v2037 + v2039[16]) = *(void *)((char *)v2038 + v2039[16]);
            uint64_t v2057 = v2039[17];
            uint64_t v2058 = (void *)((char *)v2037 + v2057);
            uint64_t v2059 = (void *)((char *)v2038 + v2057);
            uint64_t v2060 = v2059[1];
            *uint64_t v2058 = *v2059;
            v2058[1] = v2060;
            *(void *)((char *)v2037 + v2039[18]) = *(void *)((char *)v2038 + v2039[18]);
            *(void *)((char *)v2037 + v2039[19]) = *(void *)((char *)v2038 + v2039[19]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2037, 0, 1, (uint64_t)v2039);
          }
          uint64_t v2061 = v2698[24];
          uint64_t v14 = (uint64_t)v2720;
          uint64_t v2062 = (void *)((char *)v2720 + v2061);
          uint64_t v2063 = (void *)((char *)v11 + v2061);
          uint64_t v2064 = type metadata accessor for PreExtractedSharedLink(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v2063, 1, v2064))
          {
            uint64_t v2065 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
            memcpy(v2062, v2063, *(void *)(*(void *)(v2065 - 8) + 64));
          }
          else
          {
            uint64_t v2066 = v2063[1];
            *uint64_t v2062 = *v2063;
            v2062[1] = v2066;
            uint64_t v2067 = v2063[3];
            v2062[2] = v2063[2];
            v2062[3] = v2067;
            uint64_t v2068 = (int *)v2064;
            uint64_t v2069 = v2063[5];
            v2062[4] = v2063[4];
            v2062[5] = v2069;
            uint64_t v2070 = v2063[7];
            v2062[6] = v2063[6];
            v2062[7] = v2070;
            v2717 = v2068;
            uint64_t v2071 = v2068[8];
            uint64_t v2624 = (char *)v2063 + v2071;
            uint64_t v2643 = (char *)v2062 + v2071;
            uint64_t v2072 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2624, 1, v2072))
            {
              uint64_t v2073 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2643, v2624, *(void *)(*(void *)(v2073 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2072 - 8) + 16))(v2643, v2624, v2072);
              __swift_storeEnumTagSinglePayload((uint64_t)v2643, 0, 1, v2072);
            }
            uint64_t v2074 = v2717[9];
            v2075 = (void *)((char *)v2062 + v2074);
            uint64_t v2076 = (void *)((char *)v2063 + v2074);
            uint64_t v2077 = v2076[1];
            void *v2075 = *v2076;
            v2075[1] = v2077;
            uint64_t v2078 = v2717[10];
            uint64_t v2079 = (void *)((char *)v2062 + v2078);
            uint64_t v2080 = (void *)((char *)v2063 + v2078);
            uint64_t v2081 = v2080[1];
            void *v2079 = *v2080;
            v2079[1] = v2081;
            uint64_t v2082 = v2717[11];
            uint64_t v2083 = (void *)((char *)v2062 + v2082);
            uint64_t v2084 = (void *)((char *)v2063 + v2082);
            uint64_t v2085 = v2084[1];
            void *v2083 = *v2084;
            v2083[1] = v2085;
            uint64_t v2086 = v2717[12];
            v2087 = (char *)v2062 + v2086;
            uint64_t v2088 = (char *)v2063 + v2086;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2088, 1, v2684))
            {
              uint64_t v2089 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2087, v2088, *(void *)(*(void *)(v2089 - 8) + 64));
            }
            else
            {
              v2664(v2087, v2088, v2684);
              __swift_storeEnumTagSinglePayload((uint64_t)v2087, 0, 1, v2684);
            }
            uint64_t v2090 = v2717[13];
            v2091 = (char *)v2062 + v2090;
            uint64_t v2092 = (char *)v2063 + v2090;
            if (__swift_getEnumTagSinglePayload((uint64_t)v2063 + v2090, 1, v2684))
            {
              uint64_t v2093 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2091, v2092, *(void *)(*(void *)(v2093 - 8) + 64));
            }
            else
            {
              v2664(v2091, v2092, v2684);
              __swift_storeEnumTagSinglePayload((uint64_t)v2091, 0, 1, v2684);
            }
            uint64_t v2094 = v2717[14];
            v2095 = (char *)v2062 + v2094;
            uint64_t v2096 = (char *)v2063 + v2094;
            *(void *)v2095 = *(void *)v2096;
            v2095[8] = v2096[8];
            uint64_t v2097 = v2717[15];
            v2098 = (void *)((char *)v2062 + v2097);
            v2099 = (void *)((char *)v2063 + v2097);
            uint64_t v2100 = v2099[1];
            void *v2098 = *v2099;
            v2098[1] = v2100;
            uint64_t v2101 = v2717[16];
            v2102 = (void *)((char *)v2062 + v2101);
            v2103 = (void *)((char *)v2063 + v2101);
            uint64_t v2104 = v2103[1];
            void *v2102 = *v2103;
            v2102[1] = v2104;
            uint64_t v2105 = v2717[17];
            v2106 = (void *)((char *)v2062 + v2105);
            v2107 = (void *)((char *)v2063 + v2105);
            uint64_t v2108 = v2107[1];
            void *v2106 = *v2107;
            v2106[1] = v2108;
            uint64_t v2109 = v2717[18];
            v2110 = (void *)((char *)v2062 + v2109);
            v2111 = (void *)((char *)v2063 + v2109);
            uint64_t v2112 = v2111[1];
            void *v2110 = *v2111;
            v2110[1] = v2112;
            uint64_t v2113 = v2717[19];
            uint64_t v2114 = (void *)((char *)v2062 + v2113);
            uint64_t v2115 = (void *)((char *)v2063 + v2113);
            uint64_t v2116 = v2115[1];
            *uint64_t v2114 = *v2115;
            v2114[1] = v2116;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v2062, 0, 1, (uint64_t)v2717);
            uint64_t v14 = (uint64_t)v2720;
          }
          uint64_t v2117 = v2698[25];
LABEL_555:
          v2494 = (void *)(v14 + v2117);
          uint64_t v2495 = (void *)((char *)v11 + v2117);
          uint64_t v2496 = *(void *)((char *)v11 + v2117 + 8);
          if (v2496)
          {
            void *v2494 = *v2495;
            v2494[1] = v2496;
            uint64_t v2497 = v2495[3];
            v2494[2] = v2495[2];
            v2494[3] = v2497;
            uint64_t v2498 = v2495[5];
            v2494[4] = v2495[4];
            v2494[5] = v2498;
            uint64_t v2499 = v2495[7];
            v2494[6] = v2495[6];
            v2494[7] = v2499;
            uint64_t v2610 = (void *)v2495[9];
            v2494[8] = v2495[8];
            v2494[9] = v2610;
            uint64_t v2650 = v2495[11];
            v2494[10] = v2495[10];
            v2494[11] = v2650;
            uint64_t v2683 = v2495[13];
            v2494[12] = v2495[12];
            v2494[13] = v2683;
            uint64_t v2715 = v2495[15];
            v2494[14] = v2495[14];
            v2494[15] = v2715;
            uint64_t v2500 = v2495[17];
            v2494[16] = v2495[16];
            v2494[17] = v2500;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v14 = (uint64_t)v2720;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            memcpy(v2494, v2495, 0x90uLL);
          }
          goto LABEL_513;
      }
    }
    uint64_t v2312 = *(int *)(a3 + 44);
    v2313 = (char *)v5 + v2312;
    uint64_t v2314 = (char *)a2 + v2312;
    unint64_t v2315 = *((void *)v2314 + 1);
    if (v2315 >> 60 == 15)
    {
      *(_OWORD *)v2313 = *(_OWORD *)v2314;
    }
    else
    {
      uint64_t v2316 = *(void *)v2314;
      outlined copy of Data._Representation(*(void *)v2314, *((void *)v2314 + 1));
      *(void *)v2313 = v2316;
      *((void *)v2313 + 1) = v2315;
    }
  }
  return v5;
}

uint64_t destroy for SearchAppEntity(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = type metadata accessor for SearchResult(0);
  uint64_t result = __swift_getEnumTagSinglePayload(v4, 1, v5);
  if (!result)
  {
    type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = (int *)type metadata accessor for EmailDocument(0);
        uint64_t v8 = v4 + v7[12];
        uint64_t v9 = type metadata accessor for Date();
        uint64_t v291 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
        v291(v8, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v4 + v7[19]))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v10 = v4 + v7[21];
        uint64_t v11 = type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
        {
          swift_bridgeObjectRelease();
          uint64_t v294 = (int *)v11;
          uint64_t v12 = v10 + *(int *)(v11 + 20);
          uint64_t v13 = type metadata accessor for RentalCarReservation(0);
          if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v14 = v12 + *(int *)(v13 + 140);
            if (!__swift_getEnumTagSinglePayload(v14, 1, v9)) {
              v291(v14, v9);
            }
            uint64_t v15 = v12 + *(int *)(v13 + 144);
            if (!__swift_getEnumTagSinglePayload(v15, 1, v9)) {
              v291(v15, v9);
            }
          }
          uint64_t v16 = v10 + v294[6];
          uint64_t v17 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v16, 1, v17))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v18 = v16 + *(int *)(v17 + 112);
            if (!__swift_getEnumTagSinglePayload(v18, 1, v9)) {
              v291(v18, v9);
            }
            uint64_t v19 = v16 + *(int *)(v17 + 116);
            if (!__swift_getEnumTagSinglePayload(v19, 1, v9)) {
              v291(v19, v9);
            }
          }
          uint64_t v20 = v10 + v294[7];
          uint64_t v21 = (int *)type metadata accessor for TicketedShow(0);
          uint64_t v287 = v10;
          if (!__swift_getEnumTagSinglePayload(v20, 1, (uint64_t)v21))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v22 = v20 + v21[29];
            uint64_t v23 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v22, 1, v23)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
            }
            swift_bridgeObjectRelease();
            uint64_t v24 = v20 + v21[31];
            if (!__swift_getEnumTagSinglePayload(v24, 1, v9)) {
              v291(v24, v9);
            }
            uint64_t v25 = v20 + v21[32];
            uint64_t v10 = v287;
            if (!__swift_getEnumTagSinglePayload(v25, 1, v9)) {
              v291(v25, v9);
            }
          }
          uint64_t v26 = v10 + v294[8];
          uint64_t v27 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v26, 1, v27))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v28 = v26 + *(int *)(v27 + 108);
            if (!__swift_getEnumTagSinglePayload(v28, 1, v9)) {
              v291(v28, v9);
            }
            uint64_t v29 = v26 + *(int *)(v27 + 112);
            if (!__swift_getEnumTagSinglePayload(v29, 1, v9)) {
              v291(v29, v9);
            }
          }
          uint64_t v30 = v10 + v294[9];
          uint64_t v31 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v30, 1, (uint64_t)v31))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v32 = v30 + v31[24];
            if (!__swift_getEnumTagSinglePayload(v32, 1, v9)) {
              v291(v32, v9);
            }
            uint64_t v33 = v30 + v31[25];
            if (!__swift_getEnumTagSinglePayload(v33, 1, v9)) {
              v291(v33, v9);
            }
            uint64_t v34 = v30 + v31[26];
            uint64_t v35 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v34, 1, v35)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
            }
          }
          uint64_t v36 = v287 + v294[10];
          uint64_t v37 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v36, 1, (uint64_t)v37))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v38 = v36 + v37[22];
            if (!__swift_getEnumTagSinglePayload(v38, 1, v9)) {
              v291(v38, v9);
            }
            uint64_t v39 = v36 + v37[23];
            if (!__swift_getEnumTagSinglePayload(v39, 1, v9)) {
              v291(v39, v9);
            }
            uint64_t v40 = v36 + v37[25];
            uint64_t v41 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v40, 1, v41)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
            }
          }
          uint64_t v42 = v294;
          uint64_t v43 = v287;
          uint64_t v44 = v287 + v294[11];
          uint64_t v45 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v44, 1, (uint64_t)v45))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v46 = v44 + v45[13];
            uint64_t v47 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v46, 1, v47)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
            }
            uint64_t v285 = v9;
            uint64_t v48 = v44 + v45[14];
            if (!__swift_getEnumTagSinglePayload(v48, 1, v47)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v48, v47);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v49 = v44 + v45[18];
            uint64_t v50 = type metadata accessor for DateComponents();
            uint64_t v51 = *(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8);
            v51(v49, v50);
            v51(v44 + v45[19], v50);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v52 = v44 + v45[38];
            uint64_t v9 = v285;
            if (!__swift_getEnumTagSinglePayload(v52, 1, v285)) {
              v291(v52, v285);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v43 = v287;
            uint64_t v42 = v294;
          }
          uint64_t v53 = v43 + v42[12];
          uint64_t v54 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v53, 1, v54))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v55 = v53 + *(int *)(v54 + 56);
            uint64_t v56 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v55, 1, v56)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8))(v55, v56);
            }
            uint64_t v57 = v53 + *(int *)(v54 + 60);
            if (!__swift_getEnumTagSinglePayload(v57, 1, v56)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8))(v57, v56);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v43 = v287;
            uint64_t v42 = v294;
          }
          uint64_t v58 = v43 + v42[13];
          uint64_t v59 = type metadata accessor for RestaurantReservation(0);
          if (!__swift_getEnumTagSinglePayload(v58, 1, v59))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v60 = v58 + *(int *)(v59 + 56);
            uint64_t v61 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v60, 1, v61)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v60, v61);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v62 = v4 + v7[22];
        uint64_t v63 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v62, 1, (uint64_t)v63))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v64 = v62 + v63[10];
          if (!__swift_getEnumTagSinglePayload(v64, 1, v9)) {
            v291(v64, v9);
          }
          uint64_t v65 = v62 + v63[11];
          if (!__swift_getEnumTagSinglePayload(v65, 1, v9)) {
            v291(v65, v9);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v66 = v62 + v63[15];
          if (!__swift_getEnumTagSinglePayload(v66, 1, v9)) {
            v291(v66, v9);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v67 = v4 + v7[23];
        uint64_t v68 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v67, 1, v68))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v69 = v67 + *(int *)(v68 + 44);
          if (!__swift_getEnumTagSinglePayload(v69, 1, v9)) {
            v291(v69, v9);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v70 = v67 + *(int *)(v68 + 56);
          if (!__swift_getEnumTagSinglePayload(v70, 1, v9)) {
            v291(v70, v9);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v71 = v4 + v7[24];
        uint64_t v72 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v71, 1, (uint64_t)v72))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v73 = v71 + v72[8];
          uint64_t v74 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v73, 1, v74)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v74 - 8) + 8))(v73, v74);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v75 = v71 + v72[12];
          if (!__swift_getEnumTagSinglePayload(v75, 1, v9)) {
            v291(v75, v9);
          }
          uint64_t v76 = v71 + v72[13];
          if (!__swift_getEnumTagSinglePayload(v76, 1, v9)) {
            v291(v76, v9);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v77 = v7[25];
        goto LABEL_253;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v78 = (int *)type metadata accessor for MobileSMSDocument(0);
        uint64_t v79 = v4 + v78[10];
        uint64_t v80 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v79, 1, v80)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v79, v80);
        }
        uint64_t v81 = v4 + v78[11];
        uint64_t v82 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v81, 1, v82)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v81, v82);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v4 + v78[17]))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v83 = v4 + v78[19];
        uint64_t v84 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v83, 1, (uint64_t)v84))
        {
          uint64_t v295 = v82;
          swift_bridgeObjectRelease();
          uint64_t v85 = v83 + v84[5];
          uint64_t v86 = type metadata accessor for RentalCarReservation(0);
          uint64_t v292 = v84;
          if (!__swift_getEnumTagSinglePayload(v85, 1, v86))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v87 = v85 + *(int *)(v86 + 140);
            if (!__swift_getEnumTagSinglePayload(v87, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v87, v80);
            }
            uint64_t v88 = v85 + *(int *)(v86 + 144);
            uint64_t v84 = v292;
            if (!__swift_getEnumTagSinglePayload(v88, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v88, v80);
            }
          }
          uint64_t v89 = v83 + v84[6];
          uint64_t v90 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v89, 1, v90))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v91 = v89 + *(int *)(v90 + 112);
            if (!__swift_getEnumTagSinglePayload(v91, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v91, v80);
            }
            uint64_t v92 = v89 + *(int *)(v90 + 116);
            uint64_t v84 = v292;
            if (!__swift_getEnumTagSinglePayload(v92, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v92, v80);
            }
          }
          uint64_t v93 = v83 + v84[7];
          uint64_t v94 = (int *)type metadata accessor for TicketedShow(0);
          if (!__swift_getEnumTagSinglePayload(v93, 1, (uint64_t)v94))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v95 = v93 + v94[29];
            if (!__swift_getEnumTagSinglePayload(v95, 1, v295)) {
              (*(void (**)(uint64_t))(*(void *)(v295 - 8) + 8))(v95);
            }
            swift_bridgeObjectRelease();
            uint64_t v96 = v93 + v94[31];
            if (!__swift_getEnumTagSinglePayload(v96, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v96, v80);
            }
            uint64_t v97 = v93 + v94[32];
            uint64_t v84 = v292;
            if (!__swift_getEnumTagSinglePayload(v97, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v97, v80);
            }
          }
          uint64_t v98 = v83 + v84[8];
          uint64_t v99 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v98, 1, v99))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v100 = v98 + *(int *)(v99 + 108);
            if (!__swift_getEnumTagSinglePayload(v100, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v100, v80);
            }
            uint64_t v101 = v98 + *(int *)(v99 + 112);
            uint64_t v84 = v292;
            if (!__swift_getEnumTagSinglePayload(v101, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v101, v80);
            }
          }
          uint64_t v102 = v83 + v84[9];
          uint64_t v103 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v102, 1, (uint64_t)v103))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v104 = v102 + v103[24];
            if (!__swift_getEnumTagSinglePayload(v104, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v104, v80);
            }
            uint64_t v105 = v102 + v103[25];
            if (!__swift_getEnumTagSinglePayload(v105, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v105, v80);
            }
            uint64_t v106 = v102 + v103[26];
            uint64_t v84 = v292;
            if (!__swift_getEnumTagSinglePayload(v106, 1, v295)) {
              (*(void (**)(uint64_t))(*(void *)(v295 - 8) + 8))(v106);
            }
          }
          uint64_t v107 = v83 + v84[10];
          uint64_t v108 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v107, 1, (uint64_t)v108))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v109 = v107 + v108[22];
            if (!__swift_getEnumTagSinglePayload(v109, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v109, v80);
            }
            uint64_t v110 = v107 + v108[23];
            if (!__swift_getEnumTagSinglePayload(v110, 1, v80)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v110, v80);
            }
            uint64_t v111 = v107 + v108[25];
            uint64_t v84 = v292;
            if (!__swift_getEnumTagSinglePayload(v111, 1, v295)) {
              (*(void (**)(uint64_t))(*(void *)(v295 - 8) + 8))(v111);
            }
          }
          uint64_t v112 = v83 + v84[11];
          uint64_t v113 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v112, 1, (uint64_t)v113))
          {
            uint64_t v289 = v83;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v114 = v112 + v113[13];
            if (!__swift_getEnumTagSinglePayload(v114, 1, v295)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v295 - 8) + 8))(v114, v295);
            }
            uint64_t v286 = v80;
            uint64_t v115 = v112 + v113[14];
            if (!__swift_getEnumTagSinglePayload(v115, 1, v295)) {
              (*(void (**)(uint64_t))(*(void *)(v295 - 8) + 8))(v115);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v116 = v112 + v113[18];
            uint64_t v117 = type metadata accessor for DateComponents();
            uint64_t v118 = *(void (**)(uint64_t, uint64_t))(*(void *)(v117 - 8) + 8);
            v118(v116, v117);
            v118(v112 + v113[19], v117);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v119 = v112 + v113[38];
            uint64_t v80 = v286;
            if (!__swift_getEnumTagSinglePayload(v119, 1, v286)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v286 - 8) + 8))(v119, v286);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v83 = v289;
            uint64_t v84 = v292;
          }
          uint64_t v120 = v83 + v84[12];
          uint64_t v121 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v120, 1, v121))
          {
            uint64_t v290 = v83;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v122 = v120 + *(int *)(v121 + 56);
            uint64_t v123 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v122, 1, v123)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v123 - 8) + 8))(v122, v123);
            }
            uint64_t v124 = v120 + *(int *)(v121 + 60);
            if (!__swift_getEnumTagSinglePayload(v124, 1, v123)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v123 - 8) + 8))(v124, v123);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v83 = v290;
            uint64_t v84 = v292;
          }
          uint64_t v125 = v83 + v84[13];
          uint64_t v126 = type metadata accessor for RestaurantReservation(0);
          uint64_t v82 = v295;
          if (!__swift_getEnumTagSinglePayload(v125, 1, v126))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v127 = v125 + *(int *)(v126 + 56);
            uint64_t v128 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v127, 1, v128)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v128 - 8) + 8))(v127, v128);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v82 = v295;
          }
        }
        uint64_t v129 = v4 + v78[20];
        uint64_t v130 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v129, 1, (uint64_t)v130))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v131 = v129 + v130[10];
          if (!__swift_getEnumTagSinglePayload(v131, 1, v80)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v131, v80);
          }
          uint64_t v132 = v129 + v130[11];
          if (!__swift_getEnumTagSinglePayload(v132, 1, v80)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v132, v80);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v133 = v129 + v130[15];
          if (!__swift_getEnumTagSinglePayload(v133, 1, v80)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v133, v80);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v134 = v4 + v78[21];
        uint64_t v135 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v134, 1, v135))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v136 = v134 + *(int *)(v135 + 44);
          if (!__swift_getEnumTagSinglePayload(v136, 1, v80)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v136, v80);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v137 = v134 + *(int *)(v135 + 56);
          if (!__swift_getEnumTagSinglePayload(v137, 1, v80)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v137, v80);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v138 = v4 + v78[22];
        id v139 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v138, 1, (uint64_t)v139))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v140 = v138 + v139[8];
          if (!__swift_getEnumTagSinglePayload(v140, 1, v82)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v82 - 8) + 8))(v140, v82);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v141 = v138 + v139[12];
          if (!__swift_getEnumTagSinglePayload(v141, 1, v80)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v141, v80);
          }
          uint64_t v142 = v138 + v139[13];
          if (!__swift_getEnumTagSinglePayload(v142, 1, v80)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v142, v80);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v77 = v78[23];
        goto LABEL_253;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v143 = (int *)type metadata accessor for CalendarEvent(0);
        uint64_t v144 = v4 + v143[7];
        uint64_t v145 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v144, 1, v145)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v145 - 8) + 8))(v144, v145);
        }
        uint64_t v146 = v4 + v143[8];
        if (!__swift_getEnumTagSinglePayload(v146, 1, v145)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v145 - 8) + 8))(v146, v145);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!*(void *)(v4 + v143[13])) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v147 = (int *)type metadata accessor for Photo(0);
        uint64_t v148 = v4 + v147[11];
        uint64_t v149 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v148, 1, v149)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v148, v149);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v150 = v4 + v147[17];
        uint64_t v151 = type metadata accessor for PartialExtractedAttributes(0);
        if (!__swift_getEnumTagSinglePayload(v150, 1, v151))
        {
          swift_bridgeObjectRelease();
          uint64_t v296 = (int *)v151;
          uint64_t v152 = v150 + *(int *)(v151 + 20);
          uint64_t v153 = type metadata accessor for RentalCarReservation(0);
          if (!__swift_getEnumTagSinglePayload(v152, 1, v153))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v154 = v152 + *(int *)(v153 + 140);
            if (!__swift_getEnumTagSinglePayload(v154, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v154, v149);
            }
            uint64_t v155 = v152 + *(int *)(v153 + 144);
            if (!__swift_getEnumTagSinglePayload(v155, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v155, v149);
            }
          }
          uint64_t v156 = v150 + v296[6];
          uint64_t v157 = type metadata accessor for TicketedTransportation(0);
          if (!__swift_getEnumTagSinglePayload(v156, 1, v157))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v158 = v156 + *(int *)(v157 + 112);
            if (!__swift_getEnumTagSinglePayload(v158, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v158, v149);
            }
            uint64_t v159 = v156 + *(int *)(v157 + 116);
            if (!__swift_getEnumTagSinglePayload(v159, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v159, v149);
            }
          }
          uint64_t v160 = v150 + v296[7];
          uint64_t v161 = (int *)type metadata accessor for TicketedShow(0);
          uint64_t v293 = v150;
          if (!__swift_getEnumTagSinglePayload(v160, 1, (uint64_t)v161))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v162 = v160 + v161[29];
            uint64_t v163 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v162, 1, v163)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v163 - 8) + 8))(v162, v163);
            }
            swift_bridgeObjectRelease();
            uint64_t v164 = v160 + v161[31];
            if (!__swift_getEnumTagSinglePayload(v164, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v164, v149);
            }
            uint64_t v165 = v160 + v161[32];
            uint64_t v150 = v293;
            if (!__swift_getEnumTagSinglePayload(v165, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v165, v149);
            }
          }
          uint64_t v166 = v150 + v296[8];
          uint64_t v167 = type metadata accessor for Appointment(0);
          if (!__swift_getEnumTagSinglePayload(v166, 1, v167))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v168 = v166 + *(int *)(v167 + 108);
            if (!__swift_getEnumTagSinglePayload(v168, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v168, v149);
            }
            uint64_t v169 = v166 + *(int *)(v167 + 112);
            if (!__swift_getEnumTagSinglePayload(v169, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v169, v149);
            }
          }
          uint64_t v170 = v150 + v296[9];
          uint64_t v171 = (int *)type metadata accessor for Party(0);
          if (!__swift_getEnumTagSinglePayload(v170, 1, (uint64_t)v171))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v172 = v170 + v171[24];
            if (!__swift_getEnumTagSinglePayload(v172, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v172, v149);
            }
            uint64_t v173 = v170 + v171[25];
            if (!__swift_getEnumTagSinglePayload(v173, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v173, v149);
            }
            uint64_t v174 = v170 + v171[26];
            uint64_t v175 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v174, 1, v175)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v175 - 8) + 8))(v174, v175);
            }
          }
          uint64_t v176 = v293 + v296[10];
          uint64_t v177 = (int *)type metadata accessor for Trip(0);
          if (!__swift_getEnumTagSinglePayload(v176, 1, (uint64_t)v177))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v178 = v176 + v177[22];
            if (!__swift_getEnumTagSinglePayload(v178, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v178, v149);
            }
            uint64_t v179 = v176 + v177[23];
            if (!__swift_getEnumTagSinglePayload(v179, 1, v149)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v179, v149);
            }
            uint64_t v180 = v176 + v177[25];
            uint64_t v181 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v180, 1, v181)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v181 - 8) + 8))(v180, v181);
            }
          }
          uint64_t v182 = v293;
          uint64_t v183 = v296;
          uint64_t v184 = v293 + v296[11];
          uint64_t v185 = (int *)type metadata accessor for FlightReservation(0);
          if (!__swift_getEnumTagSinglePayload(v184, 1, (uint64_t)v185))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v186 = v184 + v185[13];
            uint64_t v187 = type metadata accessor for URL();
            if (!__swift_getEnumTagSinglePayload(v186, 1, v187)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v187 - 8) + 8))(v186, v187);
            }
            uint64_t v288 = v149;
            uint64_t v188 = v184 + v185[14];
            if (!__swift_getEnumTagSinglePayload(v188, 1, v187)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v187 - 8) + 8))(v188, v187);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v189 = v184 + v185[18];
            uint64_t v190 = type metadata accessor for DateComponents();
            uint64_t v191 = *(void (**)(uint64_t, uint64_t))(*(void *)(v190 - 8) + 8);
            v191(v189, v190);
            v191(v184 + v185[19], v190);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v192 = v184 + v185[38];
            uint64_t v149 = v288;
            if (!__swift_getEnumTagSinglePayload(v192, 1, v288)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v288 - 8) + 8))(v192, v288);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v182 = v293;
            uint64_t v183 = v296;
          }
          uint64_t v193 = v182 + v183[12];
          uint64_t v194 = type metadata accessor for HotelReservation(0);
          if (!__swift_getEnumTagSinglePayload(v193, 1, v194))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v195 = v193 + *(int *)(v194 + 56);
            uint64_t v196 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v195, 1, v196)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v196 - 8) + 8))(v195, v196);
            }
            uint64_t v197 = v193 + *(int *)(v194 + 60);
            if (!__swift_getEnumTagSinglePayload(v197, 1, v196)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v196 - 8) + 8))(v197, v196);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v182 = v293;
            uint64_t v183 = v296;
          }
          uint64_t v198 = v182 + v183[13];
          uint64_t v199 = type metadata accessor for RestaurantReservation(0);
          if (!__swift_getEnumTagSinglePayload(v198, 1, v199))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v200 = v198 + *(int *)(v199 + 56);
            uint64_t v201 = type metadata accessor for DateComponents();
            if (!__swift_getEnumTagSinglePayload(v200, 1, v201)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v201 - 8) + 8))(v200, v201);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v202 = v4 + v147[18];
        uint64_t v203 = (int *)type metadata accessor for PreExtractedCard(0);
        if (!__swift_getEnumTagSinglePayload(v202, 1, (uint64_t)v203))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v204 = v202 + v203[10];
          if (!__swift_getEnumTagSinglePayload(v204, 1, v149)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v204, v149);
          }
          uint64_t v205 = v202 + v203[11];
          if (!__swift_getEnumTagSinglePayload(v205, 1, v149)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v205, v149);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v206 = v202 + v203[15];
          if (!__swift_getEnumTagSinglePayload(v206, 1, v149)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v206, v149);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v207 = v4 + v147[19];
        uint64_t v208 = type metadata accessor for PreExtractedContact(0);
        if (!__swift_getEnumTagSinglePayload(v207, 1, v208))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v209 = v207 + *(int *)(v208 + 44);
          if (!__swift_getEnumTagSinglePayload(v209, 1, v149)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v209, v149);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v210 = v207 + *(int *)(v208 + 56);
          if (!__swift_getEnumTagSinglePayload(v210, 1, v149)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v210, v149);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v211 = v4 + v147[20];
        uint64_t v212 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (!__swift_getEnumTagSinglePayload(v211, 1, (uint64_t)v212))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v213 = v211 + v212[8];
          uint64_t v214 = type metadata accessor for URL();
          if (!__swift_getEnumTagSinglePayload(v213, 1, v214)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v214 - 8) + 8))(v213, v214);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v215 = v211 + v212[12];
          if (!__swift_getEnumTagSinglePayload(v215, 1, v149)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v215, v149);
          }
          uint64_t v216 = v211 + v212[13];
          if (!__swift_getEnumTagSinglePayload(v216, 1, v149)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v216, v149);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v77 = v147[21];
LABEL_253:
        if (!*(void *)(v4 + v77 + 8)) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v217 = (int *)type metadata accessor for NoteDocument(0);
        uint64_t v218 = v4 + v217[8];
        uint64_t v219 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v218, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v218, v219);
        }
        goto LABEL_274;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v220 = (int *)type metadata accessor for Reminder(0);
        uint64_t v221 = v4 + v220[7];
        uint64_t v222 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v221, 1, v222)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v222 - 8) + 8))(v221, v222);
        }
        uint64_t v223 = v4 + v220[8];
        if (!__swift_getEnumTagSinglePayload(v223, 1, v222)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v222 - 8) + 8))(v223, v222);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v224 = v220[12];
        goto LABEL_324;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v225 = type metadata accessor for PhoneHistory(0);
        uint64_t v226 = v4 + *(int *)(v225 + 40);
        uint64_t v227 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v226, 1, v227)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v227 - 8) + 8))(v226, v227);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v224 = *(int *)(v225 + 52);
        goto LABEL_324;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v228 = (int *)type metadata accessor for VoicemailTranscript(0);
        uint64_t v229 = v228[7];
        goto LABEL_268;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v224 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
        goto LABEL_324;
      case 9u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v228 = (int *)type metadata accessor for VoiceMemo(0);
        uint64_t v229 = v228[6];
LABEL_268:
        uint64_t v230 = v4 + v229;
        uint64_t v231 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v230, 1, v231)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v231 - 8) + 8))(v230, v231);
        }
        uint64_t v224 = v228[8];
        goto LABEL_324;
      case 0xAu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v217 = (int *)type metadata accessor for Safari(0);
        uint64_t v232 = v4 + v217[6];
        uint64_t v219 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v232, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v232, v219);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_274:
        uint64_t v233 = v217[9];
        goto LABEL_312;
      case 0xBu:
        swift_bridgeObjectRelease();

        break;
      case 0xCu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v234 = v4 + *(int *)(type metadata accessor for WalletTransaction(0) + 28);
        uint64_t v235 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v234, 1, v235)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v235 - 8) + 8))(v234, v235);
        }
        goto LABEL_278;
      case 0xDu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v236 = v4 + *(int *)(type metadata accessor for WalletPass(0) + 28);
        uint64_t v237 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v236, 1, v237)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v237 - 8) + 8))(v236, v237);
        }
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 0xEu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 0xFu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v238 = (int *)type metadata accessor for FlightReservation(0);
        uint64_t v239 = v4 + v238[13];
        uint64_t v240 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v239, 1, v240)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v240 - 8) + 8))(v239, v240);
        }
        uint64_t v241 = v4 + v238[14];
        if (!__swift_getEnumTagSinglePayload(v241, 1, v240)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v240 - 8) + 8))(v241, v240);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v242 = v4 + v238[18];
        uint64_t v243 = type metadata accessor for DateComponents();
        uint64_t v244 = *(void (**)(uint64_t, uint64_t))(*(void *)(v243 - 8) + 8);
        v244(v242, v243);
        v244(v4 + v238[19], v243);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v245 = v4 + v238[38];
        uint64_t v246 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v245, 1, v246)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v246 - 8) + 8))(v245, v246);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v247 = &demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]);
        goto LABEL_332;
      case 0x10u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v248 = type metadata accessor for HotelReservation(0);
        uint64_t v249 = v4 + *(int *)(v248 + 56);
        uint64_t v250 = type metadata accessor for DateComponents();
        if (!__swift_getEnumTagSinglePayload(v249, 1, v250)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v250 - 8) + 8))(v249, v250);
        }
        uint64_t v251 = v4 + *(int *)(v248 + 60);
        if (!__swift_getEnumTagSinglePayload(v251, 1, v250)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v250 - 8) + 8))(v251, v250);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 0x11u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v252 = v4 + *(int *)(type metadata accessor for RestaurantReservation(0) + 56);
        uint64_t v253 = type metadata accessor for DateComponents();
        if (!__swift_getEnumTagSinglePayload(v252, 1, v253)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v253 - 8) + 8))(v252, v253);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 0x12u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v254 = type metadata accessor for RentalCarReservation(0);
        uint64_t v255 = v4 + *(int *)(v254 + 140);
        uint64_t v219 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v255, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v255, v219);
        }
        uint64_t v233 = *(int *)(v254 + 144);
        goto LABEL_312;
      case 0x13u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v256 = type metadata accessor for TicketedTransportation(0);
        uint64_t v257 = v4 + *(int *)(v256 + 112);
        uint64_t v219 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v257, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v257, v219);
        }
        uint64_t v233 = *(int *)(v256 + 116);
        goto LABEL_312;
      case 0x14u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v258 = (int *)type metadata accessor for TicketedShow(0);
        uint64_t v259 = v4 + v258[29];
        uint64_t v260 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v259, 1, v260)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v260 - 8) + 8))(v259, v260);
        }
        swift_bridgeObjectRelease();
        uint64_t v261 = v4 + v258[31];
        uint64_t v262 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v261, 1, v262)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v262 - 8) + 8))(v261, v262);
        }
        uint64_t v263 = v4 + v258[32];
        goto LABEL_325;
      case 0x15u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v264 = type metadata accessor for Appointment(0);
        uint64_t v265 = v4 + *(int *)(v264 + 108);
        uint64_t v219 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v265, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v265, v219);
        }
        uint64_t v233 = *(int *)(v264 + 112);
LABEL_312:
        uint64_t v266 = v4 + v233;
        if (!__swift_getEnumTagSinglePayload(v4 + v233, 1, v219)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v219 - 8) + 8))(v266, v219);
        }
        break;
      case 0x16u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v267 = (int *)type metadata accessor for Party(0);
        uint64_t v268 = v4 + v267[24];
        uint64_t v269 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v268, 1, v269)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v269 - 8) + 8))(v268, v269);
        }
        uint64_t v270 = v4 + v267[25];
        if (!__swift_getEnumTagSinglePayload(v270, 1, v269)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v269 - 8) + 8))(v270, v269);
        }
        uint64_t v224 = v267[26];
        goto LABEL_324;
      case 0x17u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v271 = (int *)type metadata accessor for Trip(0);
        uint64_t v272 = v4 + v271[22];
        uint64_t v273 = type metadata accessor for Date();
        if (!__swift_getEnumTagSinglePayload(v272, 1, v273)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v273 - 8) + 8))(v272, v273);
        }
        uint64_t v274 = v4 + v271[23];
        if (!__swift_getEnumTagSinglePayload(v274, 1, v273)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v273 - 8) + 8))(v274, v273);
        }
        uint64_t v224 = v271[25];
LABEL_324:
        uint64_t v263 = v4 + v224;
        uint64_t v262 = type metadata accessor for URL();
LABEL_325:
        if (!__swift_getEnumTagSinglePayload(v263, 1, v262)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v262 - 8) + 8))(v263, v262);
        }
        break;
      case 0x18u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v275 = type metadata accessor for GlobalItem();
        uint64_t v276 = v4 + *(int *)(v275 + 28);
        uint64_t v277 = type metadata accessor for GlobalDialog();
        if (!__swift_getEnumTagSinglePayload(v276, 1, v277)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v277 - 8) + 8))(v276, v277);
        }
        uint64_t v278 = (uint64_t *)(v4 + *(int *)(v275 + 32));
        unint64_t v279 = v278[1];
        if (v279 >> 60 != 15) {
          outlined consume of Data._Representation(*v278, v279);
        }
        uint64_t v247 = &demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]);
LABEL_332:
        __swift_instantiateConcreteTypeFromMangledName(v247);
        goto LABEL_335;
      case 0x19u:
LABEL_278:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_335;
      case 0x1Au:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v280 = v4 + *(int *)(type metadata accessor for Answer(0) + 36);
        uint64_t v281 = type metadata accessor for URL();
        if (!__swift_getEnumTagSinglePayload(v280, 1, v281)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v281 - 8) + 8))(v280, v281);
        }
LABEL_335:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }

    uint64_t result = swift_bridgeObjectRelease();
  }
  uint64_t v282 = (uint64_t *)(a1 + *(int *)(a2 + 44));
  unint64_t v283 = v282[1];
  if (v283 >> 60 != 15)
  {
    uint64_t v284 = *v282;
    return outlined consume of Data._Representation(v284, v283);
  }
  return result;
}

void *initializeWithCopy for SearchAppEntity(void *a1, void *a2, uint64_t a3)
{
  int v3 = a2;
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  a1[6] = a2[6];
  uint64_t v10 = type metadata accessor for SearchResult(0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    uint64_t v13 = a3;
    uint64_t v12 = a1;
  }
  else
  {
    type metadata accessor for SearchResultItem(0);
    uint64_t v2667 = v3;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v2663 = v10;
        uint64_t v35 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v35;
        uint64_t v36 = v9[3];
        v8[2] = v9[2];
        v8[3] = v36;
        uint64_t v37 = v9[5];
        v8[4] = v9[4];
        v8[5] = v37;
        uint64_t v38 = v9[7];
        v8[6] = v9[6];
        v8[7] = v38;
        uint64_t v39 = v9[9];
        v8[8] = v9[8];
        v8[9] = v39;
        uint64_t v2650 = (int *)type metadata accessor for MobileSMSDocument(0);
        uint64_t v40 = v2650[10];
        uint64_t v41 = (char *)v8 + v40;
        uint64_t v42 = (char *)v9 + v40;
        uint64_t v43 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
        {
          uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
          __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v43);
        }
        uint64_t v327 = v2650[11];
        uint64_t v328 = (char *)v8 + v327;
        uint64_t v329 = (char *)v9 + v327;
        uint64_t v330 = type metadata accessor for URL();
        uint64_t v2628 = v330;
        uint64_t v2644 = v43;
        if (__swift_getEnumTagSinglePayload((uint64_t)v329, 1, v330))
        {
          uint64_t v331 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v328, v329, *(void *)(*(void *)(v331 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v330 - 8) + 16))(v328, v329, v330);
          __swift_storeEnumTagSinglePayload((uint64_t)v328, 0, 1, v330);
        }
        *(void *)((char *)v8 + v2650[12]) = *(void *)((char *)v9 + v2650[12]);
        uint64_t v476 = v2650[13];
        uint64_t v477 = (void *)((char *)v8 + v476);
        uint64_t v478 = (void *)((char *)v9 + v476);
        uint64_t v479 = v478[1];
        *uint64_t v477 = *v478;
        v477[1] = v479;
        uint64_t v480 = v2650[14];
        long long v481 = (void *)((char *)v8 + v480);
        uint64_t v482 = (void *)((char *)v9 + v480);
        uint64_t v483 = v482[1];
        void *v481 = *v482;
        v481[1] = v483;
        *(void *)((char *)v8 + v2650[15]) = *(void *)((char *)v9 + v2650[15]);
        *(void *)((char *)v8 + v2650[16]) = *(void *)((char *)v9 + v2650[16]);
        uint64_t v484 = v2650[17];
        long long v485 = (void *)((char *)v8 + v484);
        uint64_t v486 = (char *)v9 + v484;
        uint64_t v487 = *(void *)((char *)v9 + v484);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v487)
        {
          uint64_t v488 = *((void *)v486 + 1);
          uint64_t v489 = *((void *)v486 + 2);
          void *v485 = v487;
          v485[1] = v488;
          uint64_t v490 = *((void *)v486 + 3);
          uint64_t v491 = *((void *)v486 + 4);
          v485[2] = v489;
          v485[3] = v490;
          v485[4] = v491;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v650 = *((_OWORD *)v486 + 1);
          *(_OWORD *)long long v485 = *(_OWORD *)v486;
          *((_OWORD *)v485 + 1) = v650;
          v485[4] = *((void *)v486 + 4);
        }
        uint64_t v651 = v2650[18];
        uint64_t v652 = (void *)((char *)v8 + v651);
        uint64_t v653 = (void *)((char *)v9 + v651);
        uint64_t v654 = v653[1];
        void *v652 = *v653;
        v652[1] = v654;
        uint64_t v655 = v2650[19];
        uint64_t v656 = (void *)((char *)v8 + v655);
        uint64_t v657 = (void *)((char *)v9 + v655);
        uint64_t v658 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v657, 1, (uint64_t)v658))
        {
          uint64_t v659 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v656, v657, *(void *)(*(void *)(v659 - 8) + 64));
        }
        else
        {
          uint64_t v696 = v657[1];
          void *v656 = *v657;
          v656[1] = v696;
          uint64_t v697 = v658[5];
          uint64_t v698 = (void *)((char *)v656 + v697);
          long long v699 = (void *)((char *)v657 + v697);
          uint64_t v700 = type metadata accessor for RentalCarReservation(0);
          swift_bridgeObjectRetain();
          v2597 = v658;
          uint64_t v2614 = v656;
          uint64_t v2569 = v657;
          if (__swift_getEnumTagSinglePayload((uint64_t)v699, 1, v700))
          {
            uint64_t v701 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v698, v699, *(void *)(*(void *)(v701 - 8) + 64));
          }
          else
          {
            uint64_t v758 = v699[1];
            *uint64_t v698 = *v699;
            v698[1] = v758;
            uint64_t v759 = v699[3];
            v698[2] = v699[2];
            v698[3] = v759;
            uint64_t v760 = v699[5];
            v698[4] = v699[4];
            v698[5] = v760;
            uint64_t v761 = v699[7];
            v698[6] = v699[6];
            v698[7] = v761;
            uint64_t v762 = v699[9];
            v698[8] = v699[8];
            v698[9] = v762;
            uint64_t v763 = v699[11];
            v698[10] = v699[10];
            v698[11] = v763;
            uint64_t v764 = v699[13];
            v698[12] = v699[12];
            v698[13] = v764;
            uint64_t v765 = v699[15];
            v698[14] = v699[14];
            v698[15] = v765;
            *((unsigned char *)v698 + 128) = *((unsigned char *)v699 + 128);
            *(_WORD *)((char *)v698 + 129) = *(_WORD *)((char *)v699 + 129);
            uint64_t v766 = v699[18];
            v698[17] = v699[17];
            v698[18] = v766;
            uint64_t v767 = v699[20];
            v698[19] = v699[19];
            v698[20] = v767;
            uint64_t v768 = v699[22];
            v698[21] = v699[21];
            v698[22] = v768;
            uint64_t v2448 = v699[24];
            v698[23] = v699[23];
            v698[24] = v2448;
            uint64_t v769 = v699[26];
            v698[25] = v699[25];
            v698[26] = v769;
            uint64_t v770 = v699[28];
            v698[27] = v699[27];
            v698[28] = v770;
            uint64_t v771 = v699[30];
            v698[29] = v699[29];
            v698[30] = v771;
            uint64_t v772 = v699[32];
            v698[31] = v699[31];
            v698[32] = v772;
            uint64_t v773 = v699[34];
            v698[33] = v699[33];
            v698[34] = v773;
            uint64_t v774 = v699[36];
            v698[35] = v699[35];
            v698[36] = v774;
            uint64_t v775 = v699[38];
            v698[37] = v699[37];
            v698[38] = v775;
            uint64_t v776 = v699[40];
            v698[39] = v699[39];
            v698[40] = v776;
            uint64_t v777 = v699[42];
            v698[41] = v699[41];
            v698[42] = v777;
            uint64_t v778 = v699[44];
            v698[43] = v699[43];
            v698[44] = v778;
            uint64_t v779 = v699[46];
            v698[45] = v699[45];
            v698[46] = v779;
            uint64_t v780 = v699[47];
            *((unsigned char *)v698 + 384) = *((unsigned char *)v699 + 384);
            v698[47] = v780;
            uint64_t v781 = v699[50];
            v698[49] = v699[49];
            v698[50] = v781;
            uint64_t v782 = v699[52];
            v698[51] = v699[51];
            v698[52] = v782;
            uint64_t v783 = *(int *)(v700 + 140);
            uint64_t v2540 = (char *)v698 + v783;
            uint64_t v784 = (char *)v699 + v783;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v784, 1, v2644))
            {
              uint64_t v785 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2540, v784, *(void *)(*(void *)(v785 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2540, v784, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v2540, 0, 1, v2644);
            }
            uint64_t v794 = *(int *)(v700 + 144);
            uint64_t v795 = (char *)v698 + v794;
            uint64_t v796 = (char *)v699 + v794;
            if (__swift_getEnumTagSinglePayload((uint64_t)v699 + v794, 1, v2644))
            {
              uint64_t v797 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v795, v796, *(void *)(*(void *)(v797 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v795, v796, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v795, 0, 1, v2644);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v698, 0, 1, v700);
            uint64_t v658 = v2597;
            uint64_t v656 = v2614;
          }
          uint64_t v850 = v658[6];
          uint64_t v851 = (void *)((char *)v656 + v850);
          uint64_t v852 = (void *)((char *)v657 + v850);
          uint64_t v853 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v852, 1, v853))
          {
            uint64_t v854 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v851, v852, *(void *)(*(void *)(v854 - 8) + 64));
          }
          else
          {
            uint64_t v855 = v852[1];
            *uint64_t v851 = *v852;
            v851[1] = v855;
            uint64_t v856 = v852[3];
            v851[2] = v852[2];
            v851[3] = v856;
            uint64_t v857 = v852[5];
            v851[4] = v852[4];
            v851[5] = v857;
            uint64_t v858 = v852[7];
            v851[6] = v852[6];
            v851[7] = v858;
            uint64_t v859 = v852[9];
            v851[8] = v852[8];
            v851[9] = v859;
            uint64_t v860 = v852[11];
            v851[10] = v852[10];
            v851[11] = v860;
            uint64_t v861 = v852[13];
            v851[12] = v852[12];
            v851[13] = v861;
            uint64_t v862 = v852[15];
            v851[14] = v852[14];
            v851[15] = v862;
            *((unsigned char *)v851 + 128) = *((unsigned char *)v852 + 128);
            *(_WORD *)((char *)v851 + 129) = *(_WORD *)((char *)v852 + 129);
            uint64_t v863 = v852[18];
            v851[17] = v852[17];
            v851[18] = v863;
            uint64_t v864 = v852[20];
            v851[19] = v852[19];
            v851[20] = v864;
            uint64_t v865 = v852[22];
            v851[21] = v852[21];
            v851[22] = v865;
            uint64_t v866 = v852[24];
            v851[23] = v852[23];
            v851[24] = v866;
            uint64_t v2529 = (void *)v852[26];
            v851[25] = v852[25];
            v851[26] = v2529;
            uint64_t v867 = v852[28];
            v851[27] = v852[27];
            v851[28] = v867;
            uint64_t v868 = v852[30];
            v851[29] = v852[29];
            v851[30] = v868;
            uint64_t v869 = v852[32];
            v851[31] = v852[31];
            v851[32] = v869;
            uint64_t v870 = v852[34];
            v851[33] = v852[33];
            v851[34] = v870;
            uint64_t v871 = v852[36];
            uint64_t v872 = v852[35];
            *((unsigned char *)v851 + 296) = *((unsigned char *)v852 + 296);
            v851[35] = v872;
            v851[36] = v871;
            uint64_t v873 = *(int *)(v853 + 112);
            uint64_t v2542 = (char *)v851 + v873;
            uint64_t v874 = (char *)v852 + v873;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v874, 1, v2644))
            {
              uint64_t v875 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2542, v874, *(void *)(*(void *)(v875 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2542, v874, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v2542, 0, 1, v2644);
            }
            uint64_t v884 = *(int *)(v853 + 116);
            uint64_t v885 = (char *)v851 + v884;
            uint64_t v886 = (char *)v852 + v884;
            if (__swift_getEnumTagSinglePayload((uint64_t)v852 + v884, 1, v2644))
            {
              uint64_t v887 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v885, v886, *(void *)(*(void *)(v887 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v885, v886, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v885, 0, 1, v2644);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v851, 0, 1, v853);
            uint64_t v658 = v2597;
            uint64_t v656 = v2614;
          }
          uint64_t v942 = v658[7];
          uint64_t v943 = (void *)((char *)v656 + v942);
          uint64_t v944 = (void *)((char *)v657 + v942);
          uint64_t v945 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v944, 1, (uint64_t)v945))
          {
            uint64_t v946 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v943, v944, *(void *)(*(void *)(v946 - 8) + 64));
          }
          else
          {
            uint64_t v947 = v944[1];
            void *v943 = *v944;
            v943[1] = v947;
            uint64_t v948 = v944[3];
            v943[2] = v944[2];
            v943[3] = v948;
            uint64_t v949 = v944[5];
            v943[4] = v944[4];
            v943[5] = v949;
            uint64_t v950 = v944[7];
            v943[6] = v944[6];
            v943[7] = v950;
            uint64_t v951 = v944[9];
            v943[8] = v944[8];
            v943[9] = v951;
            uint64_t v952 = v944[11];
            v943[10] = v944[10];
            v943[11] = v952;
            uint64_t v953 = v944[13];
            v943[12] = v944[12];
            v943[13] = v953;
            uint64_t v954 = v944[15];
            v943[14] = v944[14];
            v943[15] = v954;
            *((unsigned char *)v943 + 128) = *((unsigned char *)v944 + 128);
            *(_WORD *)((char *)v943 + 129) = *(_WORD *)((char *)v944 + 129);
            uint64_t v955 = v944[18];
            v943[17] = v944[17];
            v943[18] = v955;
            uint64_t v956 = v944[20];
            v943[19] = v944[19];
            v943[20] = v956;
            uint64_t v957 = v944[22];
            v943[21] = v944[21];
            v943[22] = v957;
            uint64_t v958 = v944[24];
            v943[23] = v944[23];
            v943[24] = v958;
            uint64_t v959 = v944[26];
            v943[25] = v944[25];
            v943[26] = v959;
            uint64_t v960 = v944[28];
            v943[27] = v944[27];
            v943[28] = v960;
            uint64_t v2513 = (void *)v944[30];
            v943[29] = v944[29];
            v943[30] = v2513;
            uint64_t v961 = v944[32];
            v943[31] = v944[31];
            v943[32] = v961;
            uint64_t v962 = v944[34];
            v943[33] = v944[33];
            v943[34] = v962;
            uint64_t v964 = v944[35];
            uint64_t v963 = v944[36];
            *((unsigned char *)v943 + 296) = *((unsigned char *)v944 + 296);
            v943[35] = v964;
            v943[36] = v963;
            uint64_t v965 = v944[39];
            v943[38] = v944[38];
            v943[39] = v965;
            uint64_t v966 = v945[29];
            uint64_t v2530 = (char *)v943 + v966;
            uint64_t v967 = (char *)v944 + v966;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v967, 1, v2628))
            {
              uint64_t v968 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2530, v967, *(void *)(*(void *)(v968 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2628 - 8) + 16))(v2530, v967, v2628);
              __swift_storeEnumTagSinglePayload((uint64_t)v2530, 0, 1, v2628);
            }
            uint64_t v985 = v945[30];
            uint64_t v986 = (void *)((char *)v943 + v985);
            uint64_t v987 = (void *)((char *)v944 + v985);
            uint64_t v988 = v987[1];
            *uint64_t v986 = *v987;
            v986[1] = v988;
            uint64_t v989 = v945[31];
            uint64_t v990 = (char *)v943 + v989;
            uint64_t v991 = (char *)v944 + v989;
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v991, 1, v2644))
            {
              uint64_t v992 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v990, v991, *(void *)(*(void *)(v992 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v990, v991, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v990, 0, 1, v2644);
            }
            uint64_t v1001 = v945[32];
            uint64_t v1002 = (char *)v943 + v1001;
            uint64_t v1003 = (char *)v944 + v1001;
            if (__swift_getEnumTagSinglePayload((uint64_t)v944 + v1001, 1, v2644))
            {
              uint64_t v1004 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1002, v1003, *(void *)(*(void *)(v1004 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v1002, v1003, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v1002, 0, 1, v2644);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v943, 0, 1, (uint64_t)v945);
            uint64_t v658 = v2597;
            uint64_t v656 = v2614;
          }
          uint64_t v1059 = v658[8];
          uint64_t v1060 = (void *)((char *)v656 + v1059);
          uint64_t v1061 = (void *)((char *)v657 + v1059);
          uint64_t v1062 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1061, 1, v1062))
          {
            uint64_t v1063 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v1060, v1061, *(void *)(*(void *)(v1063 - 8) + 64));
          }
          else
          {
            uint64_t v1064 = v1061[1];
            *uint64_t v1060 = *v1061;
            v1060[1] = v1064;
            uint64_t v1065 = v1061[3];
            v1060[2] = v1061[2];
            v1060[3] = v1065;
            uint64_t v1066 = v1061[5];
            v1060[4] = v1061[4];
            v1060[5] = v1066;
            uint64_t v1067 = v1061[7];
            v1060[6] = v1061[6];
            v1060[7] = v1067;
            uint64_t v1068 = v1061[9];
            v1060[8] = v1061[8];
            v1060[9] = v1068;
            uint64_t v1069 = v1061[11];
            v1060[10] = v1061[10];
            v1060[11] = v1069;
            uint64_t v1070 = v1061[13];
            v1060[12] = v1061[12];
            v1060[13] = v1070;
            uint64_t v1071 = v1061[15];
            v1060[14] = v1061[14];
            v1060[15] = v1071;
            *((unsigned char *)v1060 + 128) = *((unsigned char *)v1061 + 128);
            *(_WORD *)((char *)v1060 + 129) = *(_WORD *)((char *)v1061 + 129);
            uint64_t v1072 = v1061[18];
            v1060[17] = v1061[17];
            v1060[18] = v1072;
            uint64_t v1073 = v1061[20];
            v1060[19] = v1061[19];
            v1060[20] = v1073;
            uint64_t v1074 = v1061[22];
            v1060[21] = v1061[21];
            v1060[22] = v1074;
            uint64_t v1075 = v1061[24];
            v1060[23] = v1061[23];
            v1060[24] = v1075;
            uint64_t v1076 = v1061[26];
            v1060[25] = v1061[25];
            v1060[26] = v1076;
            uint64_t v1077 = v1061[28];
            v1060[27] = v1061[27];
            v1060[28] = v1077;
            uint64_t v1078 = v1061[30];
            v1060[29] = v1061[29];
            v1060[30] = v1078;
            uint64_t v1079 = v1061[32];
            v1060[31] = v1061[31];
            v1060[32] = v1079;
            uint64_t v1081 = v1061[33];
            uint64_t v1080 = v1061[34];
            *((unsigned char *)v1060 + 280) = *((unsigned char *)v1061 + 280);
            v1060[33] = v1081;
            v1060[34] = v1080;
            uint64_t v1082 = v1061[37];
            v1060[36] = v1061[36];
            v1060[37] = v1082;
            uint64_t v1083 = *(int *)(v1062 + 108);
            uint64_t v2544 = (char *)v1060 + v1083;
            uint64_t v1084 = (char *)v1061 + v1083;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1084, 1, v2644))
            {
              uint64_t v1085 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2544, v1084, *(void *)(*(void *)(v1085 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2544, v1084, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v2544, 0, 1, v2644);
            }
            uint64_t v1094 = *(int *)(v1062 + 112);
            uint64_t v1095 = (char *)v1060 + v1094;
            uint64_t v1096 = (char *)v1061 + v1094;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1061 + v1094, 1, v2644))
            {
              uint64_t v1097 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1095, v1096, *(void *)(*(void *)(v1097 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v1095, v1096, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v1095, 0, 1, v2644);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v1060, 0, 1, v1062);
            uint64_t v658 = v2597;
            uint64_t v656 = v2614;
          }
          uint64_t v1144 = v658[9];
          uint64_t v1145 = (void *)((char *)v656 + v1144);
          uint64_t v1146 = (void *)((char *)v657 + v1144);
          uint64_t v1147 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1146, 1, (uint64_t)v1147))
          {
            uint64_t v1148 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v1145, v1146, *(void *)(*(void *)(v1148 - 8) + 64));
          }
          else
          {
            uint64_t v1149 = v1146[1];
            *uint64_t v1145 = *v1146;
            v1145[1] = v1149;
            uint64_t v1150 = v1146[3];
            v1145[2] = v1146[2];
            v1145[3] = v1150;
            uint64_t v1151 = v1146[5];
            v1145[4] = v1146[4];
            v1145[5] = v1151;
            uint64_t v1152 = v1146[7];
            v1145[6] = v1146[6];
            v1145[7] = v1152;
            uint64_t v1153 = v1146[9];
            v1145[8] = v1146[8];
            v1145[9] = v1153;
            uint64_t v1154 = v1146[11];
            v1145[10] = v1146[10];
            v1145[11] = v1154;
            uint64_t v1155 = v1146[13];
            v1145[12] = v1146[12];
            v1145[13] = v1155;
            uint64_t v1156 = v1146[15];
            v1145[14] = v1146[14];
            v1145[15] = v1156;
            *((unsigned char *)v1145 + 128) = *((unsigned char *)v1146 + 128);
            *(_WORD *)((char *)v1145 + 129) = *(_WORD *)((char *)v1146 + 129);
            uint64_t v1157 = v1146[18];
            v1145[17] = v1146[17];
            v1145[18] = v1157;
            uint64_t v1158 = v1146[20];
            v1145[19] = v1146[19];
            v1145[20] = v1158;
            uint64_t v1159 = v1146[22];
            v1145[21] = v1146[21];
            v1145[22] = v1159;
            uint64_t v1160 = v1146[24];
            v1145[23] = v1146[23];
            v1145[24] = v1160;
            uint64_t v1161 = v1146[26];
            v1145[25] = v1146[25];
            v1145[26] = v1161;
            uint64_t v1162 = v1146[28];
            v1145[27] = v1146[27];
            v1145[28] = v1162;
            uint64_t v1163 = v1146[30];
            v1145[29] = v1146[29];
            v1145[30] = v1163;
            v1145[31] = v1146[31];
            uint64_t v1164 = v1147[24];
            v2546 = (char *)v1145 + v1164;
            uint64_t v1165 = (char *)v1146 + v1164;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1165, 1, v2644))
            {
              uint64_t v1166 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2546, v1165, *(void *)(*(void *)(v1166 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2546, v1165, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v2546, 0, 1, v2644);
            }
            uint64_t v1175 = v1147[25];
            uint64_t v1176 = (char *)v1145 + v1175;
            uint64_t v1177 = (char *)v1146 + v1175;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1146 + v1175, 1, v2644))
            {
              uint64_t v1178 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1176, v1177, *(void *)(*(void *)(v1178 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v1176, v1177, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v1176, 0, 1, v2644);
            }
            uint64_t v1189 = v1147[26];
            uint64_t v1190 = (char *)v1145 + v1189;
            uint64_t v1191 = (char *)v1146 + v1189;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1146 + v1189, 1, v2628))
            {
              uint64_t v1192 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1190, v1191, *(void *)(*(void *)(v1192 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2628 - 8) + 16))(v1190, v1191, v2628);
              __swift_storeEnumTagSinglePayload((uint64_t)v1190, 0, 1, v2628);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v1145, 0, 1, (uint64_t)v1147);
            uint64_t v658 = v2597;
            uint64_t v656 = v2614;
          }
          uint64_t v1235 = v658[10];
          uint64_t v1236 = (void *)((char *)v656 + v1235);
          uint64_t v1237 = (void *)((char *)v657 + v1235);
          uint64_t v1238 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1237, 1, (uint64_t)v1238))
          {
            uint64_t v1239 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v1236, v1237, *(void *)(*(void *)(v1239 - 8) + 64));
          }
          else
          {
            uint64_t v1240 = v1237[1];
            *uint64_t v1236 = *v1237;
            v1236[1] = v1240;
            uint64_t v1241 = v1237[3];
            v1236[2] = v1237[2];
            v1236[3] = v1241;
            uint64_t v1242 = v1237[5];
            v1236[4] = v1237[4];
            v1236[5] = v1242;
            uint64_t v1243 = v1237[7];
            v1236[6] = v1237[6];
            v1236[7] = v1243;
            uint64_t v1244 = v1237[9];
            v1236[8] = v1237[8];
            v1236[9] = v1244;
            uint64_t v1245 = v1237[11];
            v1236[10] = v1237[10];
            v1236[11] = v1245;
            uint64_t v1246 = v1237[13];
            v1236[12] = v1237[12];
            v1236[13] = v1246;
            uint64_t v1247 = v1237[15];
            v1236[14] = v1237[14];
            v1236[15] = v1247;
            *((unsigned char *)v1236 + 128) = *((unsigned char *)v1237 + 128);
            *(_WORD *)((char *)v1236 + 129) = *(_WORD *)((char *)v1237 + 129);
            uint64_t v1248 = v1237[18];
            v1236[17] = v1237[17];
            v1236[18] = v1248;
            uint64_t v1249 = v1237[20];
            v1236[19] = v1237[19];
            v1236[20] = v1249;
            uint64_t v1250 = v1237[22];
            v1236[21] = v1237[21];
            v1236[22] = v1250;
            uint64_t v1251 = v1237[24];
            v1236[23] = v1237[23];
            v1236[24] = v1251;
            uint64_t v1252 = v1237[26];
            v1236[25] = v1237[25];
            v1236[26] = v1252;
            v1236[27] = v1237[27];
            uint64_t v1253 = v1238[22];
            uint64_t v2547 = (char *)v1236 + v1253;
            uint64_t v1254 = (char *)v1237 + v1253;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1254, 1, v2644))
            {
              uint64_t v1255 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2547, v1254, *(void *)(*(void *)(v1255 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2547, v1254, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v2547, 0, 1, v2644);
            }
            uint64_t v1264 = v1238[23];
            uint64_t v1265 = (char *)v1236 + v1264;
            uint64_t v1266 = (char *)v1237 + v1264;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1237 + v1264, 1, v2644))
            {
              uint64_t v1267 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1265, v1266, *(void *)(*(void *)(v1267 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v1265, v1266, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v1265, 0, 1, v2644);
            }
            uint64_t v1284 = v1238[24];
            uint64_t v1285 = (char *)v1236 + v1284;
            uint64_t v1286 = (char *)v1237 + v1284;
            *(void *)uint64_t v1285 = *(void *)v1286;
            v1285[8] = v1286[8];
            uint64_t v1287 = v1238[25];
            uint64_t v1288 = (char *)v1236 + v1287;
            uint64_t v1289 = (char *)v1237 + v1287;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1237 + v1287, 1, v2628))
            {
              uint64_t v1290 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1288, v1289, *(void *)(*(void *)(v1290 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2628 - 8) + 16))(v1288, v1289, v2628);
              __swift_storeEnumTagSinglePayload((uint64_t)v1288, 0, 1, v2628);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v1236, 0, 1, (uint64_t)v1238);
            uint64_t v658 = v2597;
            uint64_t v656 = v2614;
          }
          uint64_t v1321 = v658[11];
          v1322 = (void *)((char *)v656 + v1321);
          uint64_t v1323 = (void *)((char *)v657 + v1321);
          uint64_t v1324 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1323, 1, (uint64_t)v1324))
          {
            uint64_t v1325 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v1322, v1323, *(void *)(*(void *)(v1325 - 8) + 64));
          }
          else
          {
            uint64_t v1326 = v1323[1];
            void *v1322 = *v1323;
            v1322[1] = v1326;
            uint64_t v1327 = v1323[3];
            v1322[2] = v1323[2];
            v1322[3] = v1327;
            uint64_t v1328 = v1323[5];
            v1322[4] = v1323[4];
            v1322[5] = v1328;
            uint64_t v1329 = v1323[7];
            v1322[6] = v1323[6];
            v1322[7] = v1329;
            uint64_t v1330 = v1323[9];
            v1322[8] = v1323[8];
            v1322[9] = v1330;
            uint64_t v1331 = v1323[11];
            v1322[10] = v1323[10];
            v1322[11] = v1331;
            *((unsigned char *)v1322 + 96) = *((unsigned char *)v1323 + 96);
            uint64_t v1332 = v1323[14];
            v1322[13] = v1323[13];
            v1322[14] = v1332;
            uint64_t v1333 = v1324[13];
            uint64_t v2548 = (char *)v1322 + v1333;
            uint64_t v1334 = (char *)v1323 + v1333;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1334, 1, v2628))
            {
              uint64_t v1335 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2548, v1334, *(void *)(*(void *)(v1335 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2628 - 8) + 16))(v2548, v1334, v2628);
              __swift_storeEnumTagSinglePayload((uint64_t)v2548, 0, 1, v2628);
            }
            uint64_t v1344 = v1324[14];
            v1345 = (char *)v1322 + v1344;
            uint64_t v1346 = (char *)v1323 + v1344;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1323 + v1344, 1, v2628))
            {
              uint64_t v1347 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1345, v1346, *(void *)(*(void *)(v1347 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2628 - 8) + 16))(v1345, v1346, v2628);
              __swift_storeEnumTagSinglePayload((uint64_t)v1345, 0, 1, v2628);
            }
            uint64_t v1488 = v1324[15];
            uint64_t v1489 = (void *)((char *)v1322 + v1488);
            uint64_t v1490 = (void *)((char *)v1323 + v1488);
            uint64_t v1491 = v1490[1];
            void *v1489 = *v1490;
            v1489[1] = v1491;
            uint64_t v1492 = v1324[16];
            uint64_t v1493 = (void *)((char *)v1322 + v1492);
            uint64_t v1494 = (void *)((char *)v1323 + v1492);
            v2551 = (void *)v1494[1];
            void *v1493 = *v1494;
            v1493[1] = v2551;
            uint64_t v1495 = v1324[17];
            uint64_t v1496 = (void *)((char *)v1322 + v1495);
            uint64_t v1497 = (void *)((char *)v1323 + v1495);
            uint64_t v1498 = v1497[1];
            void *v1496 = *v1497;
            v1496[1] = v1498;
            uint64_t v1499 = v1324[18];
            uint64_t v2521 = (char *)v1323 + v1499;
            uint64_t v2533 = (char *)v1322 + v1499;
            uint64_t v1500 = type metadata accessor for DateComponents();
            uint64_t v1501 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1500 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1501(v2533, v2521, v1500);
            v1501((char *)v1322 + v1324[19], (char *)v1323 + v1324[19], v1500);
            uint64_t v1502 = v1324[20];
            uint64_t v1503 = (void *)((char *)v1322 + v1502);
            uint64_t v1504 = (void *)((char *)v1323 + v1502);
            uint64_t v1505 = v1504[1];
            *uint64_t v1503 = *v1504;
            v1503[1] = v1505;
            uint64_t v1506 = v1324[21];
            uint64_t v1507 = (void *)((char *)v1322 + v1506);
            uint64_t v1508 = (void *)((char *)v1323 + v1506);
            uint64_t v2506 = (void *)v1508[1];
            void *v1507 = *v1508;
            v1507[1] = v2506;
            uint64_t v1509 = v1324[22];
            uint64_t v1510 = (void *)((char *)v1322 + v1509);
            uint64_t v1511 = (void *)((char *)v1323 + v1509);
            uint64_t v1512 = v1511[1];
            *uint64_t v1510 = *v1511;
            v1510[1] = v1512;
            uint64_t v1513 = v1324[23];
            uint64_t v1514 = (void *)((char *)v1322 + v1513);
            v1515 = (void *)((char *)v1323 + v1513);
            uint64_t v2534 = (void *)v1515[1];
            *uint64_t v1514 = *v1515;
            v1514[1] = v2534;
            uint64_t v1516 = v1324[24];
            uint64_t v1517 = (void *)((char *)v1322 + v1516);
            uint64_t v1518 = (void *)((char *)v1323 + v1516);
            uint64_t v2522 = (void *)v1518[1];
            *uint64_t v1517 = *v1518;
            v1517[1] = v2522;
            uint64_t v1519 = v1324[25];
            uint64_t v1520 = (void *)((char *)v1322 + v1519);
            uint64_t v1521 = (void *)((char *)v1323 + v1519);
            uint64_t v2498 = v1521[1];
            void *v1520 = *v1521;
            v1520[1] = v2498;
            uint64_t v1522 = v1324[26];
            uint64_t v1523 = (void *)((char *)v1322 + v1522);
            uint64_t v1524 = (void *)((char *)v1323 + v1522);
            uint64_t v2490 = (void *)v1524[1];
            *uint64_t v1523 = *v1524;
            v1523[1] = v2490;
            uint64_t v1525 = v1324[27];
            v1526 = (void *)((char *)v1322 + v1525);
            uint64_t v1527 = (void *)((char *)v1323 + v1525);
            uint64_t v2483 = v1527[1];
            void *v1526 = *v1527;
            v1526[1] = v2483;
            uint64_t v1528 = v1324[28];
            uint64_t v1529 = (void *)((char *)v1322 + v1528);
            uint64_t v1530 = (void *)((char *)v1323 + v1528);
            uint64_t v2479 = (void *)v1530[1];
            void *v1529 = *v1530;
            v1529[1] = v2479;
            uint64_t v1531 = v1324[29];
            uint64_t v1532 = (void *)((char *)v1322 + v1531);
            uint64_t v1533 = (void *)((char *)v1323 + v1531);
            uint64_t v2472 = v1533[1];
            void *v1532 = *v1533;
            v1532[1] = v2472;
            uint64_t v1534 = v1324[30];
            uint64_t v1535 = (void *)((char *)v1322 + v1534);
            v1536 = (void *)((char *)v1323 + v1534);
            uint64_t v2468 = (void *)v1536[1];
            void *v1535 = *v1536;
            v1535[1] = v2468;
            uint64_t v1537 = v1324[31];
            uint64_t v1538 = (void *)((char *)v1322 + v1537);
            uint64_t v1539 = (void *)((char *)v1323 + v1537);
            uint64_t v2463 = (void *)v1539[1];
            *uint64_t v1538 = *v1539;
            v1538[1] = v2463;
            uint64_t v1540 = v1324[32];
            uint64_t v1541 = (void *)((char *)v1322 + v1540);
            uint64_t v1542 = (void *)((char *)v1323 + v1540);
            uint64_t v2455 = v1542[1];
            *uint64_t v1541 = *v1542;
            v1541[1] = v2455;
            *(void *)((char *)v1322 + v1324[33]) = *(void *)((char *)v1323 + v1324[33]);
            *(void *)((char *)v1322 + v1324[34]) = *(void *)((char *)v1323 + v1324[34]);
            uint64_t v1543 = v1324[35];
            uint64_t v1544 = (void *)((char *)v1322 + v1543);
            uint64_t v1545 = (void *)((char *)v1323 + v1543);
            uint64_t v1546 = v1545[1];
            *uint64_t v1544 = *v1545;
            v1544[1] = v1546;
            uint64_t v1547 = v1324[36];
            uint64_t v1548 = (void *)((char *)v1322 + v1547);
            uint64_t v1549 = (void *)((char *)v1323 + v1547);
            uint64_t v1550 = v1549[1];
            *uint64_t v1548 = *v1549;
            v1548[1] = v1550;
            uint64_t v1551 = v1324[37];
            uint64_t v1552 = (void *)((char *)v1322 + v1551);
            uint64_t v1553 = (void *)((char *)v1323 + v1551);
            uint64_t v1554 = v1553[1];
            *uint64_t v1552 = *v1553;
            v1552[1] = v1554;
            uint64_t v1555 = v1324[38];
            uint64_t v2552 = (char *)v1322 + v1555;
            uint64_t v1556 = (char *)v1323 + v1555;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1556, 1, v2644))
            {
              uint64_t v1557 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2552, v1556, *(void *)(*(void *)(v1557 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2552, v1556, v2644);
              __swift_storeEnumTagSinglePayload((uint64_t)v2552, 0, 1, v2644);
            }
            uint64_t v1658 = v1324[39];
            uint64_t v1659 = (void *)((char *)v1322 + v1658);
            uint64_t v1660 = (void *)((char *)v1323 + v1658);
            uint64_t v1661 = v1660[1];
            *uint64_t v1659 = *v1660;
            v1659[1] = v1661;
            uint64_t v1662 = v1324[40];
            uint64_t v1663 = (void *)((char *)v1322 + v1662);
            uint64_t v1664 = (void *)((char *)v1323 + v1662);
            uint64_t v1665 = v1664[1];
            *uint64_t v1663 = *v1664;
            v1663[1] = v1665;
            uint64_t v1666 = v1324[41];
            uint64_t v1667 = (char *)v1322 + v1666;
            uint64_t v1668 = (char *)v1323 + v1666;
            v1667[8] = v1668[8];
            *(void *)uint64_t v1667 = *(void *)v1668;
            uint64_t v1669 = v1324[42];
            uint64_t v1670 = (void *)((char *)v1322 + v1669);
            uint64_t v1671 = (void *)((char *)v1323 + v1669);
            uint64_t v1672 = v1671[1];
            void *v1670 = *v1671;
            v1670[1] = v1672;
            uint64_t v1673 = v1324[43];
            uint64_t v1674 = (char *)v1322 + v1673;
            uint64_t v1675 = (char *)v1323 + v1673;
            *(_OWORD *)uint64_t v1674 = *(_OWORD *)v1675;
            *(void *)(v1674 + 13) = *(void *)(v1675 + 13);
            uint64_t v1676 = v1324[44];
            uint64_t v1677 = (void *)((char *)v1322 + v1676);
            uint64_t v1678 = (void *)((char *)v1323 + v1676);
            uint64_t v1679 = v1678[1];
            void *v1677 = *v1678;
            v1677[1] = v1679;
            uint64_t v1680 = v1324[45];
            uint64_t v1681 = (void *)((char *)v1322 + v1680);
            uint64_t v1682 = (void *)((char *)v1323 + v1680);
            uint64_t v1683 = v1682[1];
            void *v1681 = *v1682;
            v1681[1] = v1683;
            uint64_t v1684 = v1324[46];
            uint64_t v1685 = (void *)((char *)v1322 + v1684);
            uint64_t v1686 = (void *)((char *)v1323 + v1684);
            uint64_t v1687 = v1686[1];
            void *v1685 = *v1686;
            v1685[1] = v1687;
            uint64_t v1688 = v1324[47];
            uint64_t v1689 = (void *)((char *)v1322 + v1688);
            uint64_t v1690 = (void *)((char *)v1323 + v1688);
            uint64_t v1691 = v1690[1];
            void *v1689 = *v1690;
            v1689[1] = v1691;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1322, 0, 1, (uint64_t)v1324);
            uint64_t v658 = v2597;
            uint64_t v656 = v2614;
            uint64_t v657 = v2569;
          }
          uint64_t v1692 = v658[12];
          uint64_t v1693 = (void *)((char *)v656 + v1692);
          uint64_t v1694 = (void *)((char *)v657 + v1692);
          uint64_t v1695 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1694, 1, (uint64_t)v1695))
          {
            uint64_t v1696 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v1693, v1694, *(void *)(*(void *)(v1696 - 8) + 64));
          }
          else
          {
            uint64_t v1697 = v1694[1];
            *uint64_t v1693 = *v1694;
            v1693[1] = v1697;
            uint64_t v1698 = v1694[3];
            v1693[2] = v1694[2];
            v1693[3] = v1698;
            uint64_t v1699 = v1694[5];
            v1693[4] = v1694[4];
            v1693[5] = v1699;
            uint64_t v1700 = v1694[7];
            v1693[6] = v1694[6];
            v1693[7] = v1700;
            uint64_t v1701 = v1694[9];
            v1693[8] = v1694[8];
            v1693[9] = v1701;
            uint64_t v1702 = v1694[11];
            v1693[10] = v1694[10];
            v1693[11] = v1702;
            *((unsigned char *)v1693 + 96) = *((unsigned char *)v1694 + 96);
            uint64_t v1703 = v1694[14];
            v1693[13] = v1694[13];
            v1693[14] = v1703;
            uint64_t v1704 = v1694[16];
            v1693[15] = v1694[15];
            v1693[16] = v1704;
            uint64_t v1705 = v1695[14];
            uint64_t v2553 = (char *)v1693 + v1705;
            v2484 = (char *)v1694 + v1705;
            uint64_t v1706 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2484, 1, v1706))
            {
              uint64_t v1707 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2553, v2484, *(void *)(*(void *)(v1707 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1706 - 8) + 16))(v2553, v2484, v1706);
              __swift_storeEnumTagSinglePayload((uint64_t)v2553, 0, 1, v1706);
            }
            uint64_t v1716 = v1695[15];
            uint64_t v1717 = (char *)v1693 + v1716;
            uint64_t v1718 = (char *)v1694 + v1716;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1694 + v1716, 1, v1706))
            {
              uint64_t v1719 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1717, v1718, *(void *)(*(void *)(v1719 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1706 - 8) + 16))(v1717, v1718, v1706);
              __swift_storeEnumTagSinglePayload((uint64_t)v1717, 0, 1, v1706);
            }
            uint64_t v1836 = v1695[16];
            uint64_t v1837 = (void *)((char *)v1693 + v1836);
            uint64_t v1838 = (void *)((char *)v1694 + v1836);
            uint64_t v1839 = v1838[1];
            *uint64_t v1837 = *v1838;
            v1837[1] = v1839;
            uint64_t v1840 = v1695[17];
            uint64_t v1841 = (void *)((char *)v1693 + v1840);
            uint64_t v1842 = (void *)((char *)v1694 + v1840);
            uint64_t v1843 = v1842[1];
            *uint64_t v1841 = *v1842;
            v1841[1] = v1843;
            uint64_t v1844 = v1695[18];
            uint64_t v1845 = (void *)((char *)v1693 + v1844);
            uint64_t v1846 = (void *)((char *)v1694 + v1844);
            uint64_t v2555 = (void *)v1846[1];
            void *v1845 = *v1846;
            v1845[1] = v2555;
            uint64_t v1847 = v1695[19];
            uint64_t v1848 = (void *)((char *)v1693 + v1847);
            uint64_t v1849 = (void *)((char *)v1694 + v1847);
            uint64_t v2536 = (void *)v1849[1];
            *uint64_t v1848 = *v1849;
            v1848[1] = v2536;
            uint64_t v1850 = v1695[20];
            uint64_t v1851 = (void *)((char *)v1693 + v1850);
            uint64_t v1852 = (void *)((char *)v1694 + v1850);
            uint64_t v2499 = v1852[1];
            *uint64_t v1851 = *v1852;
            v1851[1] = v2499;
            *(void *)((char *)v1693 + v1695[21]) = *(void *)((char *)v1694 + v1695[21]);
            *(void *)((char *)v1693 + v1695[22]) = *(void *)((char *)v1694 + v1695[22]);
            uint64_t v1853 = v1695[23];
            uint64_t v1854 = (char *)v1693 + v1853;
            uint64_t v1855 = (char *)v1694 + v1853;
            *(void *)uint64_t v1854 = *(void *)v1855;
            v1854[8] = v1855[8];
            uint64_t v1856 = v1695[24];
            uint64_t v1857 = (char *)v1693 + v1856;
            uint64_t v1858 = (char *)v1694 + v1856;
            *(void *)uint64_t v1857 = *(void *)v1858;
            v1857[8] = v1858[8];
            uint64_t v1859 = v1695[25];
            uint64_t v1860 = (void *)((char *)v1693 + v1859);
            uint64_t v1861 = (void *)((char *)v1694 + v1859);
            uint64_t v1862 = v1861[1];
            *uint64_t v1860 = *v1861;
            v1860[1] = v1862;
            uint64_t v1863 = v1695[26];
            uint64_t v1864 = (void *)((char *)v1693 + v1863);
            uint64_t v1865 = (void *)((char *)v1694 + v1863);
            uint64_t v1866 = v1865[1];
            *uint64_t v1864 = *v1865;
            v1864[1] = v1866;
            uint64_t v1867 = v1695[27];
            uint64_t v1868 = (void *)((char *)v1693 + v1867);
            uint64_t v1869 = (void *)((char *)v1694 + v1867);
            uint64_t v1870 = v1869[1];
            *uint64_t v1868 = *v1869;
            v1868[1] = v1870;
            uint64_t v1871 = v1695[28];
            uint64_t v1872 = (void *)((char *)v1693 + v1871);
            uint64_t v1873 = (void *)((char *)v1694 + v1871);
            uint64_t v1874 = v1873[1];
            *uint64_t v1872 = *v1873;
            v1872[1] = v1874;
            uint64_t v1875 = v1695[29];
            uint64_t v1876 = (char *)v1693 + v1875;
            uint64_t v1877 = (char *)v1694 + v1875;
            *(void *)uint64_t v1876 = *(void *)v1877;
            v1876[8] = v1877[8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1693, 0, 1, (uint64_t)v1695);
            uint64_t v658 = v2597;
            uint64_t v656 = v2614;
            uint64_t v657 = v2569;
          }
          uint64_t v1878 = v658[13];
          uint64_t v1879 = (void *)((char *)v656 + v1878);
          uint64_t v1880 = (void *)((char *)v657 + v1878);
          uint64_t v1881 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1880, 1, (uint64_t)v1881))
          {
            uint64_t v1882 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v1879, v1880, *(void *)(*(void *)(v1882 - 8) + 64));
          }
          else
          {
            uint64_t v1883 = v1880[1];
            *uint64_t v1879 = *v1880;
            v1879[1] = v1883;
            v2556 = (void *)v1880[3];
            v1879[2] = v1880[2];
            v1879[3] = v2556;
            uint64_t v1884 = v1880[5];
            v1879[4] = v1880[4];
            v1879[5] = v1884;
            uint64_t v1885 = v1880[7];
            v1879[6] = v1880[6];
            v1879[7] = v1885;
            uint64_t v1886 = v1880[9];
            v1879[8] = v1880[8];
            v1879[9] = v1886;
            uint64_t v1887 = v1880[11];
            v1879[10] = v1880[10];
            v1879[11] = v1887;
            *((unsigned char *)v1879 + 96) = *((unsigned char *)v1880 + 96);
            uint64_t v1888 = v1880[14];
            v1879[13] = v1880[13];
            v1879[14] = v1888;
            uint64_t v1889 = v1880[16];
            v1879[15] = v1880[15];
            v1879[16] = v1889;
            uint64_t v1890 = v1881[14];
            v2581 = (char *)v1879 + v1890;
            uint64_t v1891 = (char *)v1880 + v1890;
            uint64_t v1892 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1891, 1, v1892))
            {
              uint64_t v1893 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2581, v1891, *(void *)(*(void *)(v1893 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1892 - 8) + 16))(v2581, v1891, v1892);
              __swift_storeEnumTagSinglePayload((uint64_t)v2581, 0, 1, v1892);
            }
            uint64_t v2252 = v1881[15];
            uint64_t v2253 = (void *)((char *)v1879 + v2252);
            uint64_t v2254 = (void *)((char *)v1880 + v2252);
            uint64_t v2255 = v2254[1];
            *uint64_t v2253 = *v2254;
            v2253[1] = v2255;
            uint64_t v2256 = v1881[16];
            uint64_t v2257 = (void *)((char *)v1879 + v2256);
            uint64_t v2258 = (void *)((char *)v1880 + v2256);
            uint64_t v2259 = v2258[1];
            *uint64_t v2257 = *v2258;
            v2257[1] = v2259;
            uint64_t v2260 = v1881[17];
            uint64_t v2261 = (void *)((char *)v1879 + v2260);
            uint64_t v2262 = (void *)((char *)v1880 + v2260);
            uint64_t v2586 = v2262[1];
            *uint64_t v2261 = *v2262;
            v2261[1] = v2586;
            uint64_t v2263 = v1881[18];
            v2264 = (void *)((char *)v1879 + v2263);
            uint64_t v2265 = (void *)((char *)v1880 + v2263);
            uint64_t v2560 = (void *)v2265[1];
            void *v2264 = *v2265;
            v2264[1] = v2560;
            uint64_t v2266 = v1881[19];
            uint64_t v2267 = (void *)((char *)v1879 + v2266);
            v2268 = (void *)((char *)v1880 + v2266);
            uint64_t v2269 = v2268[1];
            void *v2267 = *v2268;
            v2267[1] = v2269;
            *(void *)((char *)v1879 + v1881[20]) = *(void *)((char *)v1880 + v1881[20]);
            uint64_t v2270 = v1881[21];
            uint64_t v2271 = (void *)((char *)v1879 + v2270);
            uint64_t v2272 = (void *)((char *)v1880 + v2270);
            uint64_t v2273 = v2272[1];
            void *v2271 = *v2272;
            v2271[1] = v2273;
            uint64_t v2274 = v1881[22];
            uint64_t v2275 = (void *)((char *)v1879 + v2274);
            uint64_t v2276 = (void *)((char *)v1880 + v2274);
            uint64_t v2277 = v2276[1];
            *uint64_t v2275 = *v2276;
            v2275[1] = v2277;
            uint64_t v2278 = v1881[23];
            uint64_t v2279 = (void *)((char *)v1879 + v2278);
            uint64_t v2280 = (void *)((char *)v1880 + v2278);
            uint64_t v2281 = v2280[1];
            *uint64_t v2279 = *v2280;
            v2279[1] = v2281;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1879, 0, 1, (uint64_t)v1881);
            uint64_t v658 = v2597;
            uint64_t v656 = v2614;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v656, 0, 1, (uint64_t)v658);
        }
        uint64_t v2282 = v2650[20];
        uint64_t v2283 = (void *)((char *)v8 + v2282);
        uint64_t v2284 = (void *)((char *)v9 + v2282);
        uint64_t v2285 = type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2284, 1, v2285))
        {
          uint64_t v2286 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v2283, v2284, *(void *)(*(void *)(v2286 - 8) + 64));
        }
        else
        {
          uint64_t v2287 = v2284[1];
          *uint64_t v2283 = *v2284;
          v2283[1] = v2287;
          uint64_t v2288 = v2284[3];
          v2283[2] = v2284[2];
          v2283[3] = v2288;
          uint64_t v2289 = v2284[5];
          v2283[4] = v2284[4];
          v2283[5] = v2289;
          uint64_t v2290 = v2284[7];
          v2283[6] = v2284[6];
          v2283[7] = v2290;
          uint64_t v2291 = v2284[9];
          v2283[8] = v2284[8];
          v2283[9] = v2291;
          uint64_t v2292 = v2284[11];
          v2283[10] = v2284[10];
          v2283[11] = v2292;
          uint64_t v2293 = *(int *)(v2285 + 40);
          uint64_t v2601 = (char *)v2283 + v2293;
          uint64_t v2618 = (int *)v2285;
          uint64_t v2294 = (char *)v2284 + v2293;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2294, 1, v2644))
          {
            uint64_t v2295 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2601, v2294, *(void *)(*(void *)(v2295 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2601, v2294, v2644);
            __swift_storeEnumTagSinglePayload((uint64_t)v2601, 0, 1, v2644);
          }
          uint64_t v2296 = v2618[11];
          uint64_t v2297 = (char *)v2283 + v2296;
          uint64_t v2298 = (char *)v2284 + v2296;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2284 + v2296, 1, v2644))
          {
            uint64_t v2299 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2297, v2298, *(void *)(*(void *)(v2299 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2297, v2298, v2644);
            __swift_storeEnumTagSinglePayload((uint64_t)v2297, 0, 1, v2644);
          }
          uint64_t v2300 = v2618[12];
          uint64_t v2301 = (void *)((char *)v2283 + v2300);
          uint64_t v2302 = (void *)((char *)v2284 + v2300);
          uint64_t v2303 = v2302[1];
          *uint64_t v2301 = *v2302;
          v2301[1] = v2303;
          uint64_t v2304 = v2618[13];
          uint64_t v2305 = (void *)((char *)v2283 + v2304);
          uint64_t v2306 = (void *)((char *)v2284 + v2304);
          uint64_t v2307 = v2306[1];
          void *v2305 = *v2306;
          v2305[1] = v2307;
          uint64_t v2308 = v2618[14];
          uint64_t v2309 = (void *)((char *)v2283 + v2308);
          uint64_t v2310 = (void *)((char *)v2284 + v2308);
          uint64_t v2311 = v2310[1];
          void *v2309 = *v2310;
          v2309[1] = v2311;
          uint64_t v2312 = v2618[15];
          v2313 = (char *)v2283 + v2312;
          uint64_t v2314 = (char *)v2284 + v2312;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2314, 1, v2644))
          {
            uint64_t v2315 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2313, v2314, *(void *)(*(void *)(v2315 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2313, v2314, v2644);
            __swift_storeEnumTagSinglePayload((uint64_t)v2313, 0, 1, v2644);
          }
          uint64_t v2316 = v2618[16];
          uint64_t v2317 = (void *)((char *)v2283 + v2316);
          uint64_t v2318 = (void *)((char *)v2284 + v2316);
          uint64_t v2319 = v2318[1];
          void *v2317 = *v2318;
          v2317[1] = v2319;
          uint64_t v2320 = v2618[17];
          uint64_t v2321 = (void *)((char *)v2283 + v2320);
          uint64_t v2322 = (void *)((char *)v2284 + v2320);
          uint64_t v2602 = v2322[1];
          *uint64_t v2321 = *v2322;
          v2321[1] = v2602;
          uint64_t v2323 = v2618[18];
          uint64_t v2324 = (void *)((char *)v2283 + v2323);
          uint64_t v2325 = (void *)((char *)v2284 + v2323);
          uint64_t v2326 = v2325[1];
          *uint64_t v2324 = *v2325;
          v2324[1] = v2326;
          uint64_t v2327 = v2618[19];
          v2328 = (void *)((char *)v2283 + v2327);
          uint64_t v2329 = (void *)((char *)v2284 + v2327);
          uint64_t v2330 = v2329[1];
          void *v2328 = *v2329;
          v2328[1] = v2330;
          uint64_t v2331 = v2618[20];
          v2332 = (void *)((char *)v2283 + v2331);
          uint64_t v2333 = (void *)((char *)v2284 + v2331);
          uint64_t v2334 = v2333[1];
          void *v2332 = *v2333;
          v2332[1] = v2334;
          uint64_t v2335 = v2618[21];
          uint64_t v2336 = (void *)((char *)v2283 + v2335);
          uint64_t v2337 = (void *)((char *)v2284 + v2335);
          uint64_t v2338 = v2337[1];
          void *v2336 = *v2337;
          v2336[1] = v2338;
          uint64_t v2339 = v2618[22];
          uint64_t v2340 = (void *)((char *)v2283 + v2339);
          uint64_t v2341 = (void *)((char *)v2284 + v2339);
          uint64_t v2342 = v2341[1];
          void *v2340 = *v2341;
          v2340[1] = v2342;
          uint64_t v2343 = v2618[23];
          uint64_t v2344 = (void *)((char *)v2283 + v2343);
          uint64_t v2345 = (void *)((char *)v2284 + v2343);
          uint64_t v2346 = v2345[1];
          void *v2344 = *v2345;
          v2344[1] = v2346;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2283, 0, 1, (uint64_t)v2618);
        }
        uint64_t v2347 = v2650[21];
        uint64_t v2348 = (void *)((char *)v8 + v2347);
        uint64_t v2349 = (void *)((char *)v9 + v2347);
        uint64_t v2350 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2349, 1, (uint64_t)v2350))
        {
          uint64_t v2351 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v2348, v2349, *(void *)(*(void *)(v2351 - 8) + 64));
        }
        else
        {
          uint64_t v2352 = v2349[1];
          void *v2348 = *v2349;
          v2348[1] = v2352;
          uint64_t v2353 = v2349[3];
          v2348[2] = v2349[2];
          v2348[3] = v2353;
          uint64_t v2354 = v2349[5];
          v2348[4] = v2349[4];
          v2348[5] = v2354;
          uint64_t v2355 = v2349[7];
          v2348[6] = v2349[6];
          v2348[7] = v2355;
          uint64_t v2603 = v2349[9];
          v2348[8] = v2349[8];
          v2348[9] = v2603;
          uint64_t v2587 = v2349[11];
          v2348[10] = v2349[10];
          v2348[11] = v2587;
          uint64_t v2356 = v2350[11];
          uint64_t v2619 = (char *)v2348 + v2356;
          uint64_t v2357 = (char *)v2349 + v2356;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2357, 1, v2644))
          {
            uint64_t v2358 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2619, v2357, *(void *)(*(void *)(v2358 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2619, v2357, v2644);
            __swift_storeEnumTagSinglePayload((uint64_t)v2619, 0, 1, v2644);
          }
          uint64_t v2359 = v2350[12];
          uint64_t v2360 = (void *)((char *)v2348 + v2359);
          uint64_t v2361 = (void *)((char *)v2349 + v2359);
          uint64_t v2362 = v2361[1];
          void *v2360 = *v2361;
          v2360[1] = v2362;
          *(void *)((char *)v2348 + v2350[13]) = *(void *)((char *)v2349 + v2350[13]);
          uint64_t v2363 = v2350[14];
          uint64_t v2364 = (char *)v2348 + v2363;
          uint64_t v2365 = (char *)v2349 + v2363;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2365, 1, v2644))
          {
            uint64_t v2366 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2364, v2365, *(void *)(*(void *)(v2366 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2364, v2365, v2644);
            __swift_storeEnumTagSinglePayload((uint64_t)v2364, 0, 1, v2644);
          }
          *(void *)((char *)v2348 + v2350[15]) = *(void *)((char *)v2349 + v2350[15]);
          *(void *)((char *)v2348 + v2350[16]) = *(void *)((char *)v2349 + v2350[16]);
          uint64_t v2367 = v2350[17];
          uint64_t v2368 = (void *)((char *)v2348 + v2367);
          uint64_t v2369 = (void *)((char *)v2349 + v2367);
          uint64_t v2370 = v2369[1];
          void *v2368 = *v2369;
          v2368[1] = v2370;
          *(void *)((char *)v2348 + v2350[18]) = *(void *)((char *)v2349 + v2350[18]);
          *(void *)((char *)v2348 + v2350[19]) = *(void *)((char *)v2349 + v2350[19]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2348, 0, 1, (uint64_t)v2350);
        }
        uint64_t v2371 = v2650[22];
        uint64_t v2372 = (void *)((char *)v8 + v2371);
        uint64_t v2373 = (void *)((char *)v9 + v2371);
        uint64_t v2374 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2373, 1, (uint64_t)v2374))
        {
          uint64_t v2375 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v2372, v2373, *(void *)(*(void *)(v2375 - 8) + 64));
        }
        else
        {
          uint64_t v2376 = v2373[1];
          *uint64_t v2372 = *v2373;
          v2372[1] = v2376;
          uint64_t v2377 = v2373[3];
          v2372[2] = v2373[2];
          v2372[3] = v2377;
          uint64_t v2378 = v2373[5];
          v2372[4] = v2373[4];
          v2372[5] = v2378;
          uint64_t v2379 = v2373[7];
          v2372[6] = v2373[6];
          v2372[7] = v2379;
          uint64_t v2380 = v2374[8];
          uint64_t v2381 = (char *)v2372 + v2380;
          uint64_t v2382 = (char *)v2373 + v2380;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2382, 1, v2628))
          {
            uint64_t v2383 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2381, v2382, *(void *)(*(void *)(v2383 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2628 - 8) + 16))(v2381, v2382, v2628);
            __swift_storeEnumTagSinglePayload((uint64_t)v2381, 0, 1, v2628);
          }
          uint64_t v2384 = v2374[9];
          uint64_t v2385 = (void *)((char *)v2372 + v2384);
          uint64_t v2386 = (void *)((char *)v2373 + v2384);
          uint64_t v2387 = v2386[1];
          *uint64_t v2385 = *v2386;
          v2385[1] = v2387;
          uint64_t v2388 = v2374[10];
          uint64_t v2389 = (void *)((char *)v2372 + v2388);
          uint64_t v2390 = (void *)((char *)v2373 + v2388);
          uint64_t v2391 = v2390[1];
          void *v2389 = *v2390;
          v2389[1] = v2391;
          uint64_t v2392 = v2374[11];
          uint64_t v2393 = (void *)((char *)v2372 + v2392);
          uint64_t v2394 = (void *)((char *)v2373 + v2392);
          uint64_t v2395 = v2394[1];
          void *v2393 = *v2394;
          v2393[1] = v2395;
          uint64_t v2396 = v2374[12];
          uint64_t v2397 = (char *)v2372 + v2396;
          uint64_t v2398 = (char *)v2373 + v2396;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2398, 1, v2644))
          {
            uint64_t v2399 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2397, v2398, *(void *)(*(void *)(v2399 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2397, v2398, v2644);
            __swift_storeEnumTagSinglePayload((uint64_t)v2397, 0, 1, v2644);
          }
          uint64_t v2400 = v2374[13];
          id v2401 = (char *)v2372 + v2400;
          uint64_t v2402 = (char *)v2373 + v2400;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2373 + v2400, 1, v2644))
          {
            uint64_t v2403 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2401, v2402, *(void *)(*(void *)(v2403 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2644 - 8) + 16))(v2401, v2402, v2644);
            __swift_storeEnumTagSinglePayload((uint64_t)v2401, 0, 1, v2644);
          }
          uint64_t v2404 = v2374[14];
          uint64_t v2405 = (char *)v2372 + v2404;
          uint64_t v2406 = (char *)v2373 + v2404;
          *(void *)uint64_t v2405 = *(void *)v2406;
          v2405[8] = v2406[8];
          uint64_t v2407 = v2374[15];
          uint64_t v2408 = (void *)((char *)v2372 + v2407);
          v2409 = (void *)((char *)v2373 + v2407);
          uint64_t v2410 = v2409[1];
          void *v2408 = *v2409;
          v2408[1] = v2410;
          uint64_t v2411 = v2374[16];
          v2412 = (void *)((char *)v2372 + v2411);
          v2413 = (void *)((char *)v2373 + v2411);
          uint64_t v2414 = v2413[1];
          void *v2412 = *v2413;
          v2412[1] = v2414;
          uint64_t v2415 = v2374[17];
          uint64_t v2416 = (void *)((char *)v2372 + v2415);
          v2417 = (void *)((char *)v2373 + v2415);
          uint64_t v2418 = v2417[1];
          void *v2416 = *v2417;
          v2416[1] = v2418;
          uint64_t v2419 = v2374[18];
          uint64_t v2420 = (void *)((char *)v2372 + v2419);
          uint64_t v2421 = (void *)((char *)v2373 + v2419);
          uint64_t v2422 = v2421[1];
          void *v2420 = *v2421;
          v2420[1] = v2422;
          uint64_t v2423 = v2374[19];
          uint64_t v2424 = (void *)((char *)v2372 + v2423);
          uint64_t v2425 = (void *)((char *)v2373 + v2423);
          uint64_t v2426 = v2425[1];
          void *v2424 = *v2425;
          v2424[1] = v2426;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2372, 0, 1, (uint64_t)v2374);
        }
        uint64_t v2251 = v2650[23];
        goto LABEL_540;
      case 2u:
        uint64_t v45 = v10;
        uint64_t v46 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v46;
        uint64_t v47 = v9[3];
        v8[2] = v9[2];
        v8[3] = v47;
        uint64_t v48 = v9[5];
        v8[4] = v9[4];
        v8[5] = v48;
        uint64_t v49 = (int *)type metadata accessor for CalendarEvent(0);
        uint64_t v50 = v49[7];
        uint64_t v51 = (char *)v8 + v50;
        uint64_t v52 = (char *)v9 + v50;
        uint64_t v53 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
        {
          uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
          __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v53);
        }
        uint64_t v332 = v49[8];
        uint64_t v333 = (char *)v8 + v332;
        uint64_t v334 = (char *)v9 + v332;
        if (__swift_getEnumTagSinglePayload((uint64_t)v9 + v332, 1, v53))
        {
          uint64_t v335 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v333, v334, *(void *)(*(void *)(v335 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v333, v334, v53);
          __swift_storeEnumTagSinglePayload((uint64_t)v333, 0, 1, v53);
        }
        uint64_t v492 = v49[9];
        uint64_t v493 = (void *)((char *)v8 + v492);
        uint64_t v494 = (void *)((char *)v9 + v492);
        uint64_t v495 = v494[1];
        *uint64_t v493 = *v494;
        v493[1] = v495;
        *(void *)((char *)v8 + v49[10]) = *(void *)((char *)v9 + v49[10]);
        *(void *)((char *)v8 + v49[11]) = *(void *)((char *)v9 + v49[11]);
        uint64_t v496 = v49[12];
        uint64_t v497 = (void *)((char *)v8 + v496);
        uint64_t v498 = (void *)((char *)v9 + v496);
        uint64_t v499 = v498[1];
        *uint64_t v497 = *v498;
        v497[1] = v499;
        uint64_t v500 = v49[13];
        uint64_t v501 = (void *)((char *)v8 + v500);
        uint64_t v502 = (char *)v9 + v500;
        uint64_t v503 = *(void *)((char *)v9 + v500);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v503)
        {
          uint64_t v504 = *((void *)v502 + 1);
          uint64_t v505 = *((void *)v502 + 2);
          *uint64_t v501 = v503;
          v501[1] = v504;
          uint64_t v506 = *((void *)v502 + 3);
          uint64_t v507 = *((void *)v502 + 4);
          v501[2] = v505;
          v501[3] = v506;
          v501[4] = v507;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v660 = *((_OWORD *)v502 + 1);
          *(_OWORD *)uint64_t v501 = *(_OWORD *)v502;
          *((_OWORD *)v501 + 1) = v660;
          v501[4] = *((void *)v502 + 4);
        }
        goto LABEL_165;
      case 3u:
        uint64_t v2663 = v10;
        uint64_t v55 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v55;
        uint64_t v56 = v9[3];
        v8[2] = v9[2];
        v8[3] = v56;
        uint64_t v57 = v9[5];
        v8[4] = v9[4];
        v8[5] = v57;
        uint64_t v58 = v9[7];
        v8[6] = v9[6];
        v8[7] = v58;
        uint64_t v59 = v9[9];
        v8[8] = v9[8];
        v8[9] = v59;
        v8[10] = v9[10];
        uint64_t v2651 = (int *)type metadata accessor for Photo(0);
        uint64_t v60 = v2651[11];
        uint64_t v2621 = (char *)v8 + v60;
        uint64_t v61 = (char *)v9 + v60;
        uint64_t v62 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v2636 = v62;
        if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
        {
          uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2621, v61, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v2621, v61, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v2621, 0, 1, v62);
        }
        *(void *)((char *)v8 + v2651[12]) = *(void *)((char *)v9 + v2651[12]);
        *(void *)((char *)v8 + v2651[13]) = *(void *)((char *)v9 + v2651[13]);
        *(void *)((char *)v8 + v2651[14]) = *(void *)((char *)v9 + v2651[14]);
        *(void *)((char *)v8 + v2651[15]) = *(void *)((char *)v9 + v2651[15]);
        uint64_t v336 = v2651[16];
        uint64_t v337 = (void *)((char *)v8 + v336);
        v338 = (void *)((char *)v9 + v336);
        uint64_t v339 = v338[1];
        *uint64_t v337 = *v338;
        v337[1] = v339;
        uint64_t v340 = v2651[17];
        uint64_t v341 = (void *)((char *)v8 + v340);
        uint64_t v342 = (void *)((char *)v9 + v340);
        uint64_t v343 = type metadata accessor for PartialExtractedAttributes(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v344 = (int *)v343;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v345 = v342;
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v342, 1, v343))
        {
          uint64_t v346 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v341, v342, *(void *)(*(void *)(v346 - 8) + 64));
        }
        else
        {
          uint64_t v508 = v342[1];
          *uint64_t v341 = *v342;
          v341[1] = v508;
          uint64_t v509 = *(int *)(v343 + 20);
          uint64_t v510 = (void *)((char *)v341 + v509);
          uint64_t v511 = (void *)((char *)v342 + v509);
          uint64_t v512 = type metadata accessor for RentalCarReservation(0);
          swift_bridgeObjectRetain();
          uint64_t v2612 = v341;
          uint64_t v2629 = v344;
          v2595 = v345;
          if (__swift_getEnumTagSinglePayload((uint64_t)v511, 1, v512))
          {
            uint64_t v513 = (uint64_t)v341;
            uint64_t v514 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v510, v511, *(void *)(*(void *)(v514 - 8) + 64));
          }
          else
          {
            uint64_t v730 = v511[1];
            *uint64_t v510 = *v511;
            v510[1] = v730;
            uint64_t v731 = v511[3];
            v510[2] = v511[2];
            v510[3] = v731;
            uint64_t v732 = v511[5];
            v510[4] = v511[4];
            v510[5] = v732;
            uint64_t v733 = v511[7];
            v510[6] = v511[6];
            v510[7] = v733;
            uint64_t v734 = v511[9];
            v510[8] = v511[8];
            v510[9] = v734;
            uint64_t v735 = v511[11];
            v510[10] = v511[10];
            v510[11] = v735;
            uint64_t v736 = v511[13];
            v510[12] = v511[12];
            v510[13] = v736;
            uint64_t v737 = v511[15];
            v510[14] = v511[14];
            v510[15] = v737;
            *((unsigned char *)v510 + 128) = *((unsigned char *)v511 + 128);
            *(_WORD *)((char *)v510 + 129) = *(_WORD *)((char *)v511 + 129);
            uint64_t v738 = v511[18];
            v510[17] = v511[17];
            v510[18] = v738;
            uint64_t v739 = v511[20];
            v510[19] = v511[19];
            v510[20] = v739;
            uint64_t v740 = v511[22];
            v510[21] = v511[21];
            v510[22] = v740;
            uint64_t v2449 = v511[24];
            v510[23] = v511[23];
            v510[24] = v2449;
            uint64_t v741 = v511[26];
            v510[25] = v511[25];
            v510[26] = v741;
            uint64_t v742 = v511[28];
            v510[27] = v511[27];
            v510[28] = v742;
            uint64_t v743 = v511[30];
            v510[29] = v511[29];
            v510[30] = v743;
            uint64_t v744 = v511[32];
            v510[31] = v511[31];
            v510[32] = v744;
            uint64_t v745 = v511[34];
            v510[33] = v511[33];
            v510[34] = v745;
            uint64_t v746 = v511[36];
            v510[35] = v511[35];
            v510[36] = v746;
            uint64_t v747 = v511[38];
            v510[37] = v511[37];
            v510[38] = v747;
            uint64_t v748 = v511[40];
            v510[39] = v511[39];
            v510[40] = v748;
            uint64_t v749 = v511[42];
            v510[41] = v511[41];
            v510[42] = v749;
            uint64_t v750 = v511[44];
            v510[43] = v511[43];
            v510[44] = v750;
            uint64_t v751 = v511[46];
            v510[45] = v511[45];
            v510[46] = v751;
            uint64_t v752 = v511[47];
            *((unsigned char *)v510 + 384) = *((unsigned char *)v511 + 384);
            v510[47] = v752;
            uint64_t v753 = v511[50];
            v510[49] = v511[49];
            v510[50] = v753;
            uint64_t v754 = v511[52];
            v510[51] = v511[51];
            v510[52] = v754;
            uint64_t v755 = *(int *)(v512 + 140);
            v2570 = (char *)v510 + v755;
            uint64_t v756 = (char *)v511 + v755;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v756, 1, v2636))
            {
              uint64_t v757 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2570, v756, *(void *)(*(void *)(v757 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v2570, v756, v2636);
              __swift_storeEnumTagSinglePayload((uint64_t)v2570, 0, 1, v2636);
            }
            uint64_t v790 = *(int *)(v512 + 144);
            uint64_t v791 = (char *)v510 + v790;
            uint64_t v792 = (char *)v511 + v790;
            if (__swift_getEnumTagSinglePayload((uint64_t)v511 + v790, 1, v2636))
            {
              uint64_t v793 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v791, v792, *(void *)(*(void *)(v793 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v791, v792, v2636);
              __swift_storeEnumTagSinglePayload((uint64_t)v791, 0, 1, v2636);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v510, 0, 1, v512);
            uint64_t v513 = (uint64_t)v2612;
            uint64_t v344 = v2629;
          }
          uint64_t v824 = v344[6];
          uint64_t v825 = (void *)(v513 + v824);
          uint64_t v826 = (void *)((char *)v345 + v824);
          uint64_t v827 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v826, 1, v827))
          {
            uint64_t v828 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v825, v826, *(void *)(*(void *)(v828 - 8) + 64));
          }
          else
          {
            uint64_t v829 = v826[1];
            *uint64_t v825 = *v826;
            v825[1] = v829;
            uint64_t v830 = v826[3];
            v825[2] = v826[2];
            v825[3] = v830;
            uint64_t v831 = v826[5];
            v825[4] = v826[4];
            v825[5] = v831;
            uint64_t v832 = v826[7];
            v825[6] = v826[6];
            v825[7] = v832;
            uint64_t v833 = v826[9];
            v825[8] = v826[8];
            v825[9] = v833;
            uint64_t v834 = v826[11];
            v825[10] = v826[10];
            v825[11] = v834;
            uint64_t v835 = v826[13];
            v825[12] = v826[12];
            v825[13] = v835;
            uint64_t v836 = v826[15];
            v825[14] = v826[14];
            v825[15] = v836;
            *((unsigned char *)v825 + 128) = *((unsigned char *)v826 + 128);
            *(_WORD *)((char *)v825 + 129) = *(_WORD *)((char *)v826 + 129);
            uint64_t v837 = v826[18];
            v825[17] = v826[17];
            v825[18] = v837;
            uint64_t v838 = v826[20];
            v825[19] = v826[19];
            v825[20] = v838;
            uint64_t v839 = v826[22];
            v825[21] = v826[21];
            v825[22] = v839;
            uint64_t v840 = v826[24];
            v825[23] = v826[23];
            v825[24] = v840;
            uint64_t v2541 = (void *)v826[26];
            v825[25] = v826[25];
            v825[26] = v2541;
            uint64_t v841 = v826[28];
            v825[27] = v826[27];
            v825[28] = v841;
            uint64_t v842 = v826[30];
            v825[29] = v826[29];
            v825[30] = v842;
            uint64_t v843 = v826[32];
            v825[31] = v826[31];
            v825[32] = v843;
            uint64_t v844 = v826[34];
            v825[33] = v826[33];
            v825[34] = v844;
            uint64_t v845 = v826[36];
            uint64_t v846 = v826[35];
            *((unsigned char *)v825 + 296) = *((unsigned char *)v826 + 296);
            v825[35] = v846;
            v825[36] = v845;
            uint64_t v847 = *(int *)(v827 + 112);
            v2571 = (char *)v825 + v847;
            uint64_t v848 = (char *)v826 + v847;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v848, 1, v2636))
            {
              uint64_t v849 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2571, v848, *(void *)(*(void *)(v849 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v2571, v848, v2636);
              __swift_storeEnumTagSinglePayload((uint64_t)v2571, 0, 1, v2636);
            }
            uint64_t v880 = *(int *)(v827 + 116);
            uint64_t v881 = (char *)v825 + v880;
            uint64_t v882 = (char *)v826 + v880;
            if (__swift_getEnumTagSinglePayload((uint64_t)v826 + v880, 1, v2636))
            {
              uint64_t v883 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v881, v882, *(void *)(*(void *)(v883 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v881, v882, v2636);
              __swift_storeEnumTagSinglePayload((uint64_t)v881, 0, 1, v2636);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v825, 0, 1, v827);
            uint64_t v513 = (uint64_t)v2612;
            uint64_t v344 = v2629;
          }
          uint64_t v915 = v344[7];
          uint64_t v916 = (void *)(v513 + v915);
          uint64_t v917 = (void *)((char *)v345 + v915);
          uint64_t v918 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v917, 1, (uint64_t)v918))
          {
            uint64_t v919 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v916, v917, *(void *)(*(void *)(v919 - 8) + 64));
          }
          else
          {
            uint64_t v920 = v917[1];
            *uint64_t v916 = *v917;
            v916[1] = v920;
            uint64_t v921 = v917[3];
            v916[2] = v917[2];
            v916[3] = v921;
            uint64_t v922 = v917[5];
            v916[4] = v917[4];
            v916[5] = v922;
            uint64_t v923 = v917[7];
            v916[6] = v917[6];
            v916[7] = v923;
            uint64_t v924 = v917[9];
            v916[8] = v917[8];
            v916[9] = v924;
            uint64_t v925 = v917[11];
            v916[10] = v917[10];
            v916[11] = v925;
            uint64_t v926 = v917[13];
            v916[12] = v917[12];
            v916[13] = v926;
            uint64_t v927 = v917[15];
            v916[14] = v917[14];
            v916[15] = v927;
            *((unsigned char *)v916 + 128) = *((unsigned char *)v917 + 128);
            *(_WORD *)((char *)v916 + 129) = *(_WORD *)((char *)v917 + 129);
            uint64_t v928 = v917[18];
            v916[17] = v917[17];
            v916[18] = v928;
            uint64_t v929 = v917[20];
            v916[19] = v917[19];
            v916[20] = v929;
            uint64_t v930 = v917[22];
            v916[21] = v917[21];
            v916[22] = v930;
            uint64_t v2453 = v917[24];
            v916[23] = v917[23];
            v916[24] = v2453;
            uint64_t v931 = v917[26];
            v916[25] = v917[25];
            v916[26] = v931;
            uint64_t v932 = v917[28];
            v916[27] = v917[27];
            v916[28] = v932;
            uint64_t v2543 = (void *)v917[30];
            v916[29] = v917[29];
            v916[30] = v2543;
            uint64_t v933 = v917[32];
            v916[31] = v917[31];
            v916[32] = v933;
            uint64_t v934 = v917[34];
            v916[33] = v917[33];
            v916[34] = v934;
            uint64_t v935 = v917[36];
            uint64_t v936 = v917[35];
            *((unsigned char *)v916 + 296) = *((unsigned char *)v917 + 296);
            v916[35] = v936;
            v916[36] = v935;
            uint64_t v937 = v917[39];
            v916[38] = v917[38];
            v916[39] = v937;
            uint64_t v938 = v918[29];
            v2572 = (char *)v916 + v938;
            uint64_t v939 = (char *)v917 + v938;
            uint64_t v940 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v939, 1, v940))
            {
              uint64_t v941 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2572, v939, *(void *)(*(void *)(v941 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v940 - 8) + 16))(v2572, v939, v940);
              __swift_storeEnumTagSinglePayload((uint64_t)v2572, 0, 1, v940);
            }
            uint64_t v977 = v918[30];
            uint64_t v978 = (void *)((char *)v916 + v977);
            uint64_t v979 = (void *)((char *)v917 + v977);
            uint64_t v980 = v979[1];
            void *v978 = *v979;
            v978[1] = v980;
            uint64_t v981 = v918[31];
            uint64_t v982 = (char *)v916 + v981;
            uint64_t v983 = (char *)v917 + v981;
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v983, 1, v2636))
            {
              uint64_t v984 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v982, v983, *(void *)(*(void *)(v984 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v982, v983, v2636);
              __swift_storeEnumTagSinglePayload((uint64_t)v982, 0, 1, v2636);
            }
            uint64_t v997 = v918[32];
            uint64_t v998 = (char *)v916 + v997;
            uint64_t v999 = (char *)v917 + v997;
            if (__swift_getEnumTagSinglePayload((uint64_t)v917 + v997, 1, v2636))
            {
              uint64_t v1000 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v998, v999, *(void *)(*(void *)(v1000 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v998, v999, v2636);
              __swift_storeEnumTagSinglePayload((uint64_t)v998, 0, 1, v2636);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v916, 0, 1, (uint64_t)v918);
            uint64_t v513 = (uint64_t)v2612;
            uint64_t v344 = v2629;
          }
          uint64_t v1032 = v344[8];
          uint64_t v1033 = (void *)(v513 + v1032);
          uint64_t v1034 = (void *)((char *)v345 + v1032);
          uint64_t v1035 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1034, 1, v1035))
          {
            uint64_t v1036 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v1033, v1034, *(void *)(*(void *)(v1036 - 8) + 64));
          }
          else
          {
            uint64_t v1037 = v1034[1];
            void *v1033 = *v1034;
            v1033[1] = v1037;
            uint64_t v1038 = v1034[3];
            v1033[2] = v1034[2];
            v1033[3] = v1038;
            uint64_t v1039 = v1034[5];
            v1033[4] = v1034[4];
            v1033[5] = v1039;
            uint64_t v1040 = v1034[7];
            v1033[6] = v1034[6];
            v1033[7] = v1040;
            uint64_t v1041 = v1034[9];
            v1033[8] = v1034[8];
            v1033[9] = v1041;
            uint64_t v1042 = v1034[11];
            v1033[10] = v1034[10];
            v1033[11] = v1042;
            uint64_t v1043 = v1034[13];
            v1033[12] = v1034[12];
            v1033[13] = v1043;
            uint64_t v1044 = v1034[15];
            v1033[14] = v1034[14];
            v1033[15] = v1044;
            *((unsigned char *)v1033 + 128) = *((unsigned char *)v1034 + 128);
            *(_WORD *)((char *)v1033 + 129) = *(_WORD *)((char *)v1034 + 129);
            uint64_t v1045 = v1034[18];
            v1033[17] = v1034[17];
            v1033[18] = v1045;
            uint64_t v1046 = v1034[20];
            v1033[19] = v1034[19];
            v1033[20] = v1046;
            uint64_t v1047 = v1034[22];
            v1033[21] = v1034[21];
            v1033[22] = v1047;
            uint64_t v1048 = v1034[24];
            v1033[23] = v1034[23];
            v1033[24] = v1048;
            uint64_t v1049 = v1034[26];
            v1033[25] = v1034[25];
            v1033[26] = v1049;
            uint64_t v1050 = v1034[28];
            v1033[27] = v1034[27];
            v1033[28] = v1050;
            uint64_t v1051 = v1034[30];
            v1033[29] = v1034[29];
            v1033[30] = v1051;
            uint64_t v1052 = v1034[32];
            v1033[31] = v1034[31];
            v1033[32] = v1052;
            uint64_t v1054 = v1034[33];
            uint64_t v1053 = v1034[34];
            *((unsigned char *)v1033 + 280) = *((unsigned char *)v1034 + 280);
            v1033[33] = v1054;
            v1033[34] = v1053;
            uint64_t v1055 = v1034[37];
            v1033[36] = v1034[36];
            v1033[37] = v1055;
            uint64_t v1056 = *(int *)(v1035 + 108);
            uint64_t v2573 = (char *)v1033 + v1056;
            uint64_t v1057 = (char *)v1034 + v1056;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1057, 1, v2636))
            {
              uint64_t v1058 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2573, v1057, *(void *)(*(void *)(v1058 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v2573, v1057, v2636);
              __swift_storeEnumTagSinglePayload((uint64_t)v2573, 0, 1, v2636);
            }
            uint64_t v1090 = *(int *)(v1035 + 112);
            uint64_t v1091 = (char *)v1033 + v1090;
            uint64_t v1092 = (char *)v1034 + v1090;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1034 + v1090, 1, v2636))
            {
              uint64_t v1093 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1091, v1092, *(void *)(*(void *)(v1093 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v1091, v1092, v2636);
              __swift_storeEnumTagSinglePayload((uint64_t)v1091, 0, 1, v2636);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v1033, 0, 1, v1035);
            uint64_t v513 = (uint64_t)v2612;
            uint64_t v344 = v2629;
          }
          uint64_t v1121 = v344[9];
          uint64_t v1122 = (void *)(v513 + v1121);
          uint64_t v1123 = (void *)((char *)v345 + v1121);
          uint64_t v1124 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1123, 1, (uint64_t)v1124))
          {
            uint64_t v1125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v1122, v1123, *(void *)(*(void *)(v1125 - 8) + 64));
          }
          else
          {
            uint64_t v1126 = v1123[1];
            void *v1122 = *v1123;
            v1122[1] = v1126;
            uint64_t v1127 = v1123[3];
            v1122[2] = v1123[2];
            v1122[3] = v1127;
            uint64_t v1128 = v1123[5];
            v1122[4] = v1123[4];
            v1122[5] = v1128;
            uint64_t v1129 = v1123[7];
            v1122[6] = v1123[6];
            v1122[7] = v1129;
            uint64_t v1130 = v1123[9];
            v1122[8] = v1123[8];
            v1122[9] = v1130;
            uint64_t v1131 = v1123[11];
            v1122[10] = v1123[10];
            v1122[11] = v1131;
            uint64_t v1132 = v1123[13];
            v1122[12] = v1123[12];
            v1122[13] = v1132;
            uint64_t v1133 = v1123[15];
            v1122[14] = v1123[14];
            v1122[15] = v1133;
            *((unsigned char *)v1122 + 128) = *((unsigned char *)v1123 + 128);
            *(_WORD *)((char *)v1122 + 129) = *(_WORD *)((char *)v1123 + 129);
            uint64_t v1134 = v1123[18];
            v1122[17] = v1123[17];
            v1122[18] = v1134;
            uint64_t v1135 = v1123[20];
            v1122[19] = v1123[19];
            v1122[20] = v1135;
            uint64_t v1136 = v1123[22];
            v1122[21] = v1123[21];
            v1122[22] = v1136;
            uint64_t v1137 = v1123[24];
            v1122[23] = v1123[23];
            v1122[24] = v1137;
            uint64_t v1138 = v1123[26];
            v1122[25] = v1123[25];
            v1122[26] = v1138;
            uint64_t v1139 = v1123[28];
            v1122[27] = v1123[27];
            v1122[28] = v1139;
            uint64_t v1140 = v1123[30];
            v1122[29] = v1123[29];
            v1122[30] = v1140;
            v1122[31] = v1123[31];
            uint64_t v1141 = v1124[24];
            uint64_t v2545 = (char *)v1122 + v1141;
            uint64_t v1142 = (char *)v1123 + v1141;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1142, 1, v2636))
            {
              uint64_t v1143 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2545, v1142, *(void *)(*(void *)(v1143 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v2545, v1142, v2636);
              __swift_storeEnumTagSinglePayload((uint64_t)v2545, 0, 1, v2636);
            }
            uint64_t v1171 = v1124[25];
            uint64_t v1172 = (char *)v1122 + v1171;
            uint64_t v1173 = (char *)v1123 + v1171;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1123 + v1171, 1, v2636))
            {
              uint64_t v1174 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1172, v1173, *(void *)(*(void *)(v1174 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v1172, v1173, v2636);
              __swift_storeEnumTagSinglePayload((uint64_t)v1172, 0, 1, v2636);
            }
            uint64_t v1184 = v1124[26];
            uint64_t v1185 = (char *)v1122 + v1184;
            uint64_t v1186 = (char *)v1123 + v1184;
            uint64_t v1187 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1186, 1, v1187))
            {
              uint64_t v1188 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1185, v1186, *(void *)(*(void *)(v1188 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1187 - 8) + 16))(v1185, v1186, v1187);
              __swift_storeEnumTagSinglePayload((uint64_t)v1185, 0, 1, v1187);
            }
            uint64_t v345 = v2595;
            __swift_storeEnumTagSinglePayload((uint64_t)v1122, 0, 1, (uint64_t)v1124);
            uint64_t v513 = (uint64_t)v2612;
            uint64_t v344 = v2629;
          }
          uint64_t v1214 = v344[10];
          uint64_t v1215 = (void *)(v513 + v1214);
          uint64_t v1216 = (void *)((char *)v345 + v1214);
          uint64_t v1217 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1216, 1, (uint64_t)v1217))
          {
            uint64_t v1218 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v1215, v1216, *(void *)(*(void *)(v1218 - 8) + 64));
          }
          else
          {
            uint64_t v1219 = v1216[1];
            *uint64_t v1215 = *v1216;
            v1215[1] = v1219;
            uint64_t v1220 = v1216[3];
            v1215[2] = v1216[2];
            v1215[3] = v1220;
            uint64_t v1221 = v1216[5];
            v1215[4] = v1216[4];
            v1215[5] = v1221;
            uint64_t v1222 = v1216[7];
            v1215[6] = v1216[6];
            v1215[7] = v1222;
            uint64_t v1223 = v1216[9];
            v1215[8] = v1216[8];
            v1215[9] = v1223;
            uint64_t v1224 = v1216[11];
            v1215[10] = v1216[10];
            v1215[11] = v1224;
            uint64_t v1225 = v1216[13];
            v1215[12] = v1216[12];
            v1215[13] = v1225;
            uint64_t v1226 = v1216[15];
            v1215[14] = v1216[14];
            v1215[15] = v1226;
            *((unsigned char *)v1215 + 128) = *((unsigned char *)v1216 + 128);
            *(_WORD *)((char *)v1215 + 129) = *(_WORD *)((char *)v1216 + 129);
            uint64_t v1227 = v1216[18];
            v1215[17] = v1216[17];
            v1215[18] = v1227;
            uint64_t v1228 = v1216[20];
            v1215[19] = v1216[19];
            v1215[20] = v1228;
            uint64_t v1229 = v1216[22];
            v1215[21] = v1216[21];
            v1215[22] = v1229;
            uint64_t v1230 = v1216[24];
            v1215[23] = v1216[23];
            v1215[24] = v1230;
            uint64_t v1231 = v1216[26];
            v1215[25] = v1216[25];
            v1215[26] = v1231;
            v1215[27] = v1216[27];
            uint64_t v1232 = v1217[22];
            uint64_t v2574 = (char *)v1215 + v1232;
            uint64_t v1233 = (char *)v1216 + v1232;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1233, 1, v2636))
            {
              uint64_t v1234 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2574, v1233, *(void *)(*(void *)(v1234 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v2574, v1233, v2636);
              __swift_storeEnumTagSinglePayload((uint64_t)v2574, 0, 1, v2636);
            }
            uint64_t v1260 = v1217[23];
            uint64_t v1261 = (char *)v1215 + v1260;
            uint64_t v1262 = (char *)v1216 + v1260;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1216 + v1260, 1, v2636))
            {
              uint64_t v1263 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1261, v1262, *(void *)(*(void *)(v1263 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v1261, v1262, v2636);
              __swift_storeEnumTagSinglePayload((uint64_t)v1261, 0, 1, v2636);
            }
            uint64_t v1276 = v1217[24];
            uint64_t v1277 = (char *)v1215 + v1276;
            uint64_t v1278 = (char *)v1216 + v1276;
            *(void *)uint64_t v1277 = *(void *)v1278;
            v1277[8] = v1278[8];
            uint64_t v1279 = v1217[25];
            uint64_t v1280 = (char *)v1215 + v1279;
            uint64_t v1281 = (char *)v1216 + v1279;
            uint64_t v1282 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1281, 1, v1282))
            {
              uint64_t v1283 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1280, v1281, *(void *)(*(void *)(v1283 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1282 - 8) + 16))(v1280, v1281, v1282);
              __swift_storeEnumTagSinglePayload((uint64_t)v1280, 0, 1, v1282);
            }
            uint64_t v345 = v2595;
            __swift_storeEnumTagSinglePayload((uint64_t)v1215, 0, 1, (uint64_t)v1217);
            uint64_t v513 = (uint64_t)v2612;
            uint64_t v344 = v2629;
          }
          uint64_t v1306 = v344[11];
          uint64_t v1307 = (void *)(v513 + v1306);
          uint64_t v1308 = (void *)((char *)v345 + v1306);
          uint64_t v1309 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1308, 1, (uint64_t)v1309))
          {
            uint64_t v1310 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v1307, v1308, *(void *)(*(void *)(v1310 - 8) + 64));
          }
          else
          {
            uint64_t v1311 = v1308[1];
            void *v1307 = *v1308;
            v1307[1] = v1311;
            uint64_t v1312 = v1308[3];
            v1307[2] = v1308[2];
            v1307[3] = v1312;
            uint64_t v1313 = v1308[5];
            v1307[4] = v1308[4];
            v1307[5] = v1313;
            uint64_t v1314 = v1308[7];
            v1307[6] = v1308[6];
            v1307[7] = v1314;
            uint64_t v1315 = v1308[9];
            v1307[8] = v1308[8];
            v1307[9] = v1315;
            uint64_t v1316 = v1308[11];
            v1307[10] = v1308[10];
            v1307[11] = v1316;
            *((unsigned char *)v1307 + 96) = *((unsigned char *)v1308 + 96);
            uint64_t v1317 = v1308[14];
            v1307[13] = v1308[13];
            v1307[14] = v1317;
            uint64_t v1318 = v1309[13];
            uint64_t v2575 = (char *)v1307 + v1318;
            v2494 = (char *)v1308 + v1318;
            uint64_t v1319 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2494, 1, v1319))
            {
              uint64_t v1320 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2575, v2494, *(void *)(*(void *)(v1320 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1319 - 8) + 16))(v2575, v2494, v1319);
              __swift_storeEnumTagSinglePayload((uint64_t)v2575, 0, 1, v1319);
            }
            uint64_t v1340 = v1309[14];
            uint64_t v1341 = (char *)v1307 + v1340;
            uint64_t v1342 = (char *)v1308 + v1340;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1308 + v1340, 1, v1319))
            {
              uint64_t v1343 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1341, v1342, *(void *)(*(void *)(v1343 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1319 - 8) + 16))(v1341, v1342, v1319);
              __swift_storeEnumTagSinglePayload((uint64_t)v1341, 0, 1, v1319);
            }
            uint64_t v1418 = v1309[15];
            uint64_t v1419 = (void *)((char *)v1307 + v1418);
            v1420 = (void *)((char *)v1308 + v1418);
            uint64_t v1421 = v1420[1];
            *uint64_t v1419 = *v1420;
            v1419[1] = v1421;
            uint64_t v1422 = v1309[16];
            v1423 = (void *)((char *)v1307 + v1422);
            v1424 = (void *)((char *)v1308 + v1422);
            uint64_t v2576 = v1424[1];
            void *v1423 = *v1424;
            v1423[1] = v2576;
            uint64_t v1425 = v1309[17];
            v1426 = (void *)((char *)v1307 + v1425);
            v1427 = (void *)((char *)v1308 + v1425);
            uint64_t v1428 = v1427[1];
            void *v1426 = *v1427;
            v1426[1] = v1428;
            uint64_t v1429 = v1309[18];
            uint64_t v2531 = (char *)v1308 + v1429;
            v2549 = (char *)v1307 + v1429;
            uint64_t v1430 = type metadata accessor for DateComponents();
            uint64_t v1431 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1430 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1431(v2549, v2531, v1430);
            v1431((char *)v1307 + v1309[19], (char *)v1308 + v1309[19], v1430);
            uint64_t v1432 = v1309[20];
            v1433 = (void *)((char *)v1307 + v1432);
            uint64_t v1434 = (void *)((char *)v1308 + v1432);
            uint64_t v1435 = v1434[1];
            void *v1433 = *v1434;
            v1433[1] = v1435;
            uint64_t v1436 = v1309[21];
            uint64_t v1437 = (void *)((char *)v1307 + v1436);
            v1438 = (void *)((char *)v1308 + v1436);
            uint64_t v2520 = (void *)v1438[1];
            *uint64_t v1437 = *v1438;
            v1437[1] = v2520;
            uint64_t v1439 = v1309[22];
            uint64_t v1440 = (void *)((char *)v1307 + v1439);
            uint64_t v1441 = (void *)((char *)v1308 + v1439);
            uint64_t v1442 = v1441[1];
            *uint64_t v1440 = *v1441;
            v1440[1] = v1442;
            uint64_t v1443 = v1309[23];
            uint64_t v1444 = (void *)((char *)v1307 + v1443);
            uint64_t v1445 = (void *)((char *)v1308 + v1443);
            uint64_t v2550 = (void *)v1445[1];
            *uint64_t v1444 = *v1445;
            v1444[1] = v2550;
            uint64_t v1446 = v1309[24];
            v1447 = (void *)((char *)v1307 + v1446);
            uint64_t v1448 = (void *)((char *)v1308 + v1446);
            uint64_t v2532 = (void *)v1448[1];
            void *v1447 = *v1448;
            v1447[1] = v2532;
            uint64_t v1449 = v1309[25];
            uint64_t v1450 = (void *)((char *)v1307 + v1449);
            v1451 = (void *)((char *)v1308 + v1449);
            uint64_t v2505 = (void *)v1451[1];
            void *v1450 = *v1451;
            v1450[1] = v2505;
            uint64_t v1452 = v1309[26];
            uint64_t v1453 = (void *)((char *)v1307 + v1452);
            uint64_t v1454 = (void *)((char *)v1308 + v1452);
            uint64_t v2497 = v1454[1];
            *uint64_t v1453 = *v1454;
            v1453[1] = v2497;
            uint64_t v1455 = v1309[27];
            uint64_t v1456 = (void *)((char *)v1307 + v1455);
            uint64_t v1457 = (void *)((char *)v1308 + v1455);
            uint64_t v2489 = (void *)v1457[1];
            *uint64_t v1456 = *v1457;
            v1456[1] = v2489;
            uint64_t v1458 = v1309[28];
            uint64_t v1459 = (void *)((char *)v1307 + v1458);
            uint64_t v1460 = (void *)((char *)v1308 + v1458);
            uint64_t v2482 = v1460[1];
            *uint64_t v1459 = *v1460;
            v1459[1] = v2482;
            uint64_t v1461 = v1309[29];
            uint64_t v1462 = (void *)((char *)v1307 + v1461);
            v1463 = (void *)((char *)v1308 + v1461);
            uint64_t v2478 = (void *)v1463[1];
            *uint64_t v1462 = *v1463;
            v1462[1] = v2478;
            uint64_t v1464 = v1309[30];
            uint64_t v1465 = (void *)((char *)v1307 + v1464);
            uint64_t v1466 = (void *)((char *)v1308 + v1464);
            uint64_t v2471 = v1466[1];
            *uint64_t v1465 = *v1466;
            v1465[1] = v2471;
            uint64_t v1467 = v1309[31];
            uint64_t v1468 = (void *)((char *)v1307 + v1467);
            uint64_t v1469 = (void *)((char *)v1308 + v1467);
            uint64_t v2467 = (void *)v1469[1];
            *uint64_t v1468 = *v1469;
            v1468[1] = v2467;
            uint64_t v1470 = v1309[32];
            uint64_t v1471 = (void *)((char *)v1307 + v1470);
            uint64_t v1472 = (void *)((char *)v1308 + v1470);
            uint64_t v2457 = v1472[1];
            void *v1471 = *v1472;
            v1471[1] = v2457;
            *(void *)((char *)v1307 + v1309[33]) = *(void *)((char *)v1308 + v1309[33]);
            *(void *)((char *)v1307 + v1309[34]) = *(void *)((char *)v1308 + v1309[34]);
            uint64_t v1473 = v1309[35];
            uint64_t v1474 = (void *)((char *)v1307 + v1473);
            uint64_t v1475 = (void *)((char *)v1308 + v1473);
            uint64_t v1476 = v1475[1];
            void *v1474 = *v1475;
            v1474[1] = v1476;
            uint64_t v1477 = v1309[36];
            v1478 = (void *)((char *)v1307 + v1477);
            uint64_t v1479 = (void *)((char *)v1308 + v1477);
            uint64_t v1480 = v1479[1];
            void *v1478 = *v1479;
            v1478[1] = v1480;
            uint64_t v1481 = v1309[37];
            uint64_t v1482 = (void *)((char *)v1307 + v1481);
            uint64_t v1483 = (void *)((char *)v1308 + v1481);
            uint64_t v1484 = v1483[1];
            *uint64_t v1482 = *v1483;
            v1482[1] = v1484;
            uint64_t v1485 = v1309[38];
            uint64_t v2577 = (char *)v1307 + v1485;
            uint64_t v1486 = (char *)v1308 + v1485;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1486, 1, v2636))
            {
              uint64_t v1487 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2577, v1486, *(void *)(*(void *)(v1487 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v2577, v1486, v2636);
              __swift_storeEnumTagSinglePayload((uint64_t)v2577, 0, 1, v2636);
            }
            uint64_t v1608 = v1309[39];
            uint64_t v1609 = (void *)((char *)v1307 + v1608);
            uint64_t v1610 = (void *)((char *)v1308 + v1608);
            uint64_t v1611 = v1610[1];
            void *v1609 = *v1610;
            v1609[1] = v1611;
            uint64_t v1612 = v1309[40];
            uint64_t v1613 = (void *)((char *)v1307 + v1612);
            uint64_t v1614 = (void *)((char *)v1308 + v1612);
            uint64_t v1615 = v1614[1];
            *uint64_t v1613 = *v1614;
            v1613[1] = v1615;
            uint64_t v1616 = v1309[41];
            uint64_t v1617 = (char *)v1307 + v1616;
            uint64_t v1618 = (char *)v1308 + v1616;
            v1617[8] = v1618[8];
            *(void *)uint64_t v1617 = *(void *)v1618;
            uint64_t v1619 = v1309[42];
            uint64_t v1620 = (void *)((char *)v1307 + v1619);
            uint64_t v1621 = (void *)((char *)v1308 + v1619);
            uint64_t v1622 = v1621[1];
            *uint64_t v1620 = *v1621;
            v1620[1] = v1622;
            uint64_t v1623 = v1309[43];
            uint64_t v1624 = (char *)v1307 + v1623;
            uint64_t v1625 = (char *)v1308 + v1623;
            *(_OWORD *)uint64_t v1624 = *(_OWORD *)v1625;
            *(void *)(v1624 + 13) = *(void *)(v1625 + 13);
            uint64_t v1626 = v1309[44];
            uint64_t v1627 = (void *)((char *)v1307 + v1626);
            uint64_t v1628 = (void *)((char *)v1308 + v1626);
            uint64_t v1629 = v1628[1];
            void *v1627 = *v1628;
            v1627[1] = v1629;
            uint64_t v1630 = v1309[45];
            uint64_t v1631 = (void *)((char *)v1307 + v1630);
            v1632 = (void *)((char *)v1308 + v1630);
            uint64_t v1633 = v1632[1];
            *uint64_t v1631 = *v1632;
            v1631[1] = v1633;
            uint64_t v1634 = v1309[46];
            uint64_t v1635 = (void *)((char *)v1307 + v1634);
            v1636 = (void *)((char *)v1308 + v1634);
            uint64_t v1637 = v1636[1];
            *uint64_t v1635 = *v1636;
            v1635[1] = v1637;
            uint64_t v1638 = v1309[47];
            uint64_t v1639 = (void *)((char *)v1307 + v1638);
            uint64_t v1640 = (void *)((char *)v1308 + v1638);
            uint64_t v1641 = v1640[1];
            void *v1639 = *v1640;
            v1639[1] = v1641;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1307, 0, 1, (uint64_t)v1309);
            uint64_t v513 = (uint64_t)v2612;
            uint64_t v344 = v2629;
            uint64_t v345 = v2595;
          }
          uint64_t v1642 = v344[12];
          uint64_t v1643 = (void *)(v513 + v1642);
          uint64_t v1644 = (void *)((char *)v345 + v1642);
          uint64_t v1645 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1644, 1, (uint64_t)v1645))
          {
            uint64_t v1646 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v1643, v1644, *(void *)(*(void *)(v1646 - 8) + 64));
          }
          else
          {
            uint64_t v1647 = v1644[1];
            void *v1643 = *v1644;
            v1643[1] = v1647;
            uint64_t v1648 = v1644[3];
            v1643[2] = v1644[2];
            v1643[3] = v1648;
            uint64_t v1649 = v1644[5];
            v1643[4] = v1644[4];
            v1643[5] = v1649;
            uint64_t v1650 = v1644[7];
            v1643[6] = v1644[6];
            v1643[7] = v1650;
            uint64_t v1651 = v1644[9];
            v1643[8] = v1644[8];
            v1643[9] = v1651;
            uint64_t v1652 = v1644[11];
            v1643[10] = v1644[10];
            v1643[11] = v1652;
            *((unsigned char *)v1643 + 96) = *((unsigned char *)v1644 + 96);
            uint64_t v1653 = v1644[14];
            v1643[13] = v1644[13];
            v1643[14] = v1653;
            uint64_t v1654 = v1644[16];
            v1643[15] = v1644[15];
            v1643[16] = v1654;
            uint64_t v1655 = v1645[14];
            v2578 = (char *)v1643 + v1655;
            uint64_t v2491 = (char *)v1644 + v1655;
            uint64_t v1656 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2491, 1, v1656))
            {
              uint64_t v1657 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2578, v2491, *(void *)(*(void *)(v1657 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1656 - 8) + 16))(v2578, v2491, v1656);
              __swift_storeEnumTagSinglePayload((uint64_t)v2578, 0, 1, v1656);
            }
            uint64_t v1712 = v1645[15];
            uint64_t v1713 = (char *)v1643 + v1712;
            uint64_t v1714 = (char *)v1644 + v1712;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1644 + v1712, 1, v1656))
            {
              uint64_t v1715 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1713, v1714, *(void *)(*(void *)(v1715 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1656 - 8) + 16))(v1713, v1714, v1656);
              __swift_storeEnumTagSinglePayload((uint64_t)v1713, 0, 1, v1656);
            }
            uint64_t v1778 = v1645[16];
            uint64_t v1779 = (void *)((char *)v1643 + v1778);
            uint64_t v1780 = (void *)((char *)v1644 + v1778);
            uint64_t v1781 = v1780[1];
            void *v1779 = *v1780;
            v1779[1] = v1781;
            uint64_t v1782 = v1645[17];
            uint64_t v1783 = (void *)((char *)v1643 + v1782);
            uint64_t v1784 = (void *)((char *)v1644 + v1782);
            uint64_t v1785 = v1784[1];
            *uint64_t v1783 = *v1784;
            v1783[1] = v1785;
            uint64_t v1786 = v1645[18];
            uint64_t v1787 = (void *)((char *)v1643 + v1786);
            uint64_t v1788 = (void *)((char *)v1644 + v1786);
            uint64_t v2579 = v1788[1];
            *uint64_t v1787 = *v1788;
            v1787[1] = v2579;
            uint64_t v1789 = v1645[19];
            uint64_t v1790 = (void *)((char *)v1643 + v1789);
            uint64_t v1791 = (void *)((char *)v1644 + v1789);
            uint64_t v2554 = (void *)v1791[1];
            *uint64_t v1790 = *v1791;
            v1790[1] = v2554;
            uint64_t v1792 = v1645[20];
            uint64_t v1793 = (void *)((char *)v1643 + v1792);
            uint64_t v1794 = (void *)((char *)v1644 + v1792);
            uint64_t v2508 = (void *)v1794[1];
            *uint64_t v1793 = *v1794;
            v1793[1] = v2508;
            *(void *)((char *)v1643 + v1645[21]) = *(void *)((char *)v1644 + v1645[21]);
            *(void *)((char *)v1643 + v1645[22]) = *(void *)((char *)v1644 + v1645[22]);
            uint64_t v1795 = v1645[23];
            uint64_t v1796 = (char *)v1643 + v1795;
            uint64_t v1797 = (char *)v1644 + v1795;
            *(void *)uint64_t v1796 = *(void *)v1797;
            v1796[8] = v1797[8];
            uint64_t v1798 = v1645[24];
            uint64_t v1799 = (char *)v1643 + v1798;
            uint64_t v1800 = (char *)v1644 + v1798;
            *(void *)uint64_t v1799 = *(void *)v1800;
            v1799[8] = v1800[8];
            uint64_t v1801 = v1645[25];
            uint64_t v1802 = (void *)((char *)v1643 + v1801);
            uint64_t v1803 = (void *)((char *)v1644 + v1801);
            uint64_t v1804 = v1803[1];
            void *v1802 = *v1803;
            v1802[1] = v1804;
            uint64_t v1805 = v1645[26];
            uint64_t v1806 = (void *)((char *)v1643 + v1805);
            uint64_t v1807 = (void *)((char *)v1644 + v1805);
            uint64_t v1808 = v1807[1];
            *uint64_t v1806 = *v1807;
            v1806[1] = v1808;
            uint64_t v1809 = v1645[27];
            uint64_t v1810 = (void *)((char *)v1643 + v1809);
            uint64_t v1811 = (void *)((char *)v1644 + v1809);
            uint64_t v1812 = v1811[1];
            void *v1810 = *v1811;
            v1810[1] = v1812;
            uint64_t v1813 = v1645[28];
            uint64_t v1814 = (void *)((char *)v1643 + v1813);
            uint64_t v1815 = (void *)((char *)v1644 + v1813);
            uint64_t v1816 = v1815[1];
            void *v1814 = *v1815;
            v1814[1] = v1816;
            uint64_t v1817 = v1645[29];
            uint64_t v1818 = (char *)v1643 + v1817;
            uint64_t v1819 = (char *)v1644 + v1817;
            *(void *)uint64_t v1818 = *(void *)v1819;
            v1818[8] = v1819[8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1643, 0, 1, (uint64_t)v1645);
            uint64_t v513 = (uint64_t)v2612;
            uint64_t v344 = v2629;
            uint64_t v345 = v2595;
          }
          uint64_t v1820 = v344[13];
          uint64_t v1821 = (void *)(v513 + v1820);
          uint64_t v1822 = (void *)((char *)v345 + v1820);
          uint64_t v1823 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1822, 1, (uint64_t)v1823))
          {
            uint64_t v1824 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v1821, v1822, *(void *)(*(void *)(v1824 - 8) + 64));
          }
          else
          {
            uint64_t v1825 = v1822[1];
            void *v1821 = *v1822;
            v1821[1] = v1825;
            uint64_t v2580 = v1822[3];
            v1821[2] = v1822[2];
            v1821[3] = v2580;
            uint64_t v1826 = v1822[5];
            v1821[4] = v1822[4];
            v1821[5] = v1826;
            uint64_t v1827 = v1822[7];
            v1821[6] = v1822[6];
            v1821[7] = v1827;
            uint64_t v1828 = v1822[9];
            v1821[8] = v1822[8];
            v1821[9] = v1828;
            uint64_t v1829 = v1822[11];
            v1821[10] = v1822[10];
            v1821[11] = v1829;
            *((unsigned char *)v1821 + 96) = *((unsigned char *)v1822 + 96);
            uint64_t v1830 = v1822[14];
            v1821[13] = v1822[13];
            v1821[14] = v1830;
            uint64_t v1831 = v1822[16];
            v1821[15] = v1822[15];
            v1821[16] = v1831;
            uint64_t v1832 = v1823[14];
            uint64_t v2598 = (char *)v1821 + v1832;
            uint64_t v1833 = (char *)v1822 + v1832;
            uint64_t v1834 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1833, 1, v1834))
            {
              uint64_t v1835 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2598, v1833, *(void *)(*(void *)(v1835 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1834 - 8) + 16))(v2598, v1833, v1834);
              __swift_storeEnumTagSinglePayload((uint64_t)v2598, 0, 1, v1834);
            }
            uint64_t v2077 = v1823[15];
            uint64_t v2078 = (void *)((char *)v1821 + v2077);
            uint64_t v2079 = (void *)((char *)v1822 + v2077);
            uint64_t v2080 = v2079[1];
            *uint64_t v2078 = *v2079;
            v2078[1] = v2080;
            uint64_t v2081 = v1823[16];
            uint64_t v2082 = (void *)((char *)v1821 + v2081);
            uint64_t v2083 = (void *)((char *)v1822 + v2081);
            uint64_t v2084 = v2083[1];
            *uint64_t v2082 = *v2083;
            v2082[1] = v2084;
            uint64_t v2085 = v1823[17];
            uint64_t v2086 = (void *)((char *)v1821 + v2085);
            v2087 = (void *)((char *)v1822 + v2085);
            uint64_t v2599 = v2087[1];
            void *v2086 = *v2087;
            v2086[1] = v2599;
            uint64_t v2088 = v1823[18];
            uint64_t v2089 = (void *)((char *)v1821 + v2088);
            uint64_t v2090 = (void *)((char *)v1822 + v2088);
            uint64_t v2585 = v2090[1];
            *uint64_t v2089 = *v2090;
            v2089[1] = v2585;
            uint64_t v2091 = v1823[19];
            uint64_t v2092 = (void *)((char *)v1821 + v2091);
            uint64_t v2093 = (void *)((char *)v1822 + v2091);
            uint64_t v2094 = v2093[1];
            *uint64_t v2092 = *v2093;
            v2092[1] = v2094;
            *(void *)((char *)v1821 + v1823[20]) = *(void *)((char *)v1822 + v1823[20]);
            uint64_t v2095 = v1823[21];
            uint64_t v2096 = (void *)((char *)v1821 + v2095);
            uint64_t v2097 = (void *)((char *)v1822 + v2095);
            uint64_t v2098 = v2097[1];
            *uint64_t v2096 = *v2097;
            v2096[1] = v2098;
            uint64_t v2099 = v1823[22];
            uint64_t v2100 = (void *)((char *)v1821 + v2099);
            uint64_t v2101 = (void *)((char *)v1822 + v2099);
            uint64_t v2102 = v2101[1];
            *uint64_t v2100 = *v2101;
            v2100[1] = v2102;
            uint64_t v2103 = v1823[23];
            uint64_t v2104 = (void *)((char *)v1821 + v2103);
            uint64_t v2105 = (void *)((char *)v1822 + v2103);
            uint64_t v2106 = v2105[1];
            *uint64_t v2104 = *v2105;
            v2104[1] = v2106;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1821, 0, 1, (uint64_t)v1823);
            uint64_t v513 = (uint64_t)v2612;
            uint64_t v344 = v2629;
          }
          __swift_storeEnumTagSinglePayload(v513, 0, 1, (uint64_t)v344);
        }
        uint64_t v2107 = v2651[18];
        uint64_t v2108 = (void *)((char *)v8 + v2107);
        uint64_t v2109 = (void *)((char *)v9 + v2107);
        v2110 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2109, 1, (uint64_t)v2110))
        {
          uint64_t v2111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v2108, v2109, *(void *)(*(void *)(v2111 - 8) + 64));
        }
        else
        {
          uint64_t v2112 = v2109[1];
          *uint64_t v2108 = *v2109;
          v2108[1] = v2112;
          uint64_t v2113 = v2109[3];
          v2108[2] = v2109[2];
          v2108[3] = v2113;
          uint64_t v2114 = v2109[5];
          v2108[4] = v2109[4];
          v2108[5] = v2114;
          uint64_t v2115 = v2109[7];
          v2108[6] = v2109[6];
          v2108[7] = v2115;
          uint64_t v2116 = v2109[9];
          v2108[8] = v2109[8];
          v2108[9] = v2116;
          uint64_t v2117 = v2109[11];
          v2108[10] = v2109[10];
          v2108[11] = v2117;
          uint64_t v2118 = v2110[10];
          uint64_t v2615 = (char *)v2109 + v2118;
          uint64_t v2631 = (char *)v2108 + v2118;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2615, 1, v2636))
          {
            uint64_t v2119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2631, v2615, *(void *)(*(void *)(v2119 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v2631, v2615, v2636);
            __swift_storeEnumTagSinglePayload((uint64_t)v2631, 0, 1, v2636);
          }
          uint64_t v2120 = v2110[11];
          uint64_t v2121 = (char *)v2108 + v2120;
          uint64_t v2122 = (char *)v2109 + v2120;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2109 + v2120, 1, v2636))
          {
            uint64_t v2123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2121, v2122, *(void *)(*(void *)(v2123 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v2121, v2122, v2636);
            __swift_storeEnumTagSinglePayload((uint64_t)v2121, 0, 1, v2636);
          }
          uint64_t v2124 = v2110[12];
          uint64_t v2125 = (void *)((char *)v2108 + v2124);
          uint64_t v2126 = (void *)((char *)v2109 + v2124);
          uint64_t v2127 = v2126[1];
          *uint64_t v2125 = *v2126;
          v2125[1] = v2127;
          uint64_t v2128 = v2110[13];
          uint64_t v2129 = (void *)((char *)v2108 + v2128);
          uint64_t v2130 = (void *)((char *)v2109 + v2128);
          uint64_t v2131 = v2130[1];
          *uint64_t v2129 = *v2130;
          v2129[1] = v2131;
          uint64_t v2132 = v2110[14];
          uint64_t v2133 = (void *)((char *)v2108 + v2132);
          v2134 = (void *)((char *)v2109 + v2132);
          uint64_t v2135 = v2134[1];
          *uint64_t v2133 = *v2134;
          v2133[1] = v2135;
          uint64_t v2136 = v2110[15];
          uint64_t v2137 = (char *)v2108 + v2136;
          uint64_t v2138 = (char *)v2109 + v2136;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2138, 1, v2636))
          {
            uint64_t v2139 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2137, v2138, *(void *)(*(void *)(v2139 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v2137, v2138, v2636);
            __swift_storeEnumTagSinglePayload((uint64_t)v2137, 0, 1, v2636);
          }
          uint64_t v2140 = v2110[16];
          uint64_t v2141 = (void *)((char *)v2108 + v2140);
          uint64_t v2142 = (void *)((char *)v2109 + v2140);
          uint64_t v2143 = v2142[1];
          *uint64_t v2141 = *v2142;
          v2141[1] = v2143;
          uint64_t v2144 = v2110[17];
          uint64_t v2145 = (void *)((char *)v2108 + v2144);
          uint64_t v2146 = (void *)((char *)v2109 + v2144);
          uint64_t v2632 = v2146[1];
          *uint64_t v2145 = *v2146;
          v2145[1] = v2632;
          uint64_t v2147 = v2110[18];
          uint64_t v2148 = (void *)((char *)v2108 + v2147);
          uint64_t v2149 = (void *)((char *)v2109 + v2147);
          uint64_t v2150 = v2149[1];
          *uint64_t v2148 = *v2149;
          v2148[1] = v2150;
          uint64_t v2151 = v2110[19];
          uint64_t v2152 = (void *)((char *)v2108 + v2151);
          uint64_t v2153 = (void *)((char *)v2109 + v2151);
          uint64_t v2154 = v2153[1];
          *uint64_t v2152 = *v2153;
          v2152[1] = v2154;
          uint64_t v2155 = v2110[20];
          uint64_t v2156 = (void *)((char *)v2108 + v2155);
          uint64_t v2157 = (void *)((char *)v2109 + v2155);
          uint64_t v2158 = v2157[1];
          *uint64_t v2156 = *v2157;
          v2156[1] = v2158;
          uint64_t v2159 = v2110[21];
          uint64_t v2160 = (void *)((char *)v2108 + v2159);
          uint64_t v2161 = (void *)((char *)v2109 + v2159);
          uint64_t v2162 = v2161[1];
          *uint64_t v2160 = *v2161;
          v2160[1] = v2162;
          uint64_t v2163 = v2110[22];
          uint64_t v2164 = (void *)((char *)v2108 + v2163);
          uint64_t v2165 = (void *)((char *)v2109 + v2163);
          uint64_t v2166 = v2165[1];
          *uint64_t v2164 = *v2165;
          v2164[1] = v2166;
          uint64_t v2167 = v2110[23];
          uint64_t v2168 = (void *)((char *)v2108 + v2167);
          uint64_t v2169 = (void *)((char *)v2109 + v2167);
          uint64_t v2170 = v2169[1];
          *uint64_t v2168 = *v2169;
          v2168[1] = v2170;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2108, 0, 1, (uint64_t)v2110);
        }
        uint64_t v2171 = v2651[19];
        uint64_t v2172 = (void *)((char *)v8 + v2171);
        uint64_t v2173 = (void *)((char *)v9 + v2171);
        v2174 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2173, 1, (uint64_t)v2174))
        {
          uint64_t v2175 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v2172, v2173, *(void *)(*(void *)(v2175 - 8) + 64));
        }
        else
        {
          uint64_t v2176 = v2173[1];
          *uint64_t v2172 = *v2173;
          v2172[1] = v2176;
          uint64_t v2177 = v2173[3];
          v2172[2] = v2173[2];
          v2172[3] = v2177;
          uint64_t v2178 = v2173[5];
          v2172[4] = v2173[4];
          v2172[5] = v2178;
          uint64_t v2179 = v2173[7];
          v2172[6] = v2173[6];
          v2172[7] = v2179;
          uint64_t v2616 = v2173[9];
          v2172[8] = v2173[8];
          v2172[9] = v2616;
          uint64_t v2600 = v2173[11];
          v2172[10] = v2173[10];
          v2172[11] = v2600;
          uint64_t v2180 = v2174[11];
          uint64_t v2633 = (char *)v2172 + v2180;
          uint64_t v2181 = (char *)v2173 + v2180;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2181, 1, v2636))
          {
            uint64_t v2182 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2633, v2181, *(void *)(*(void *)(v2182 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v2633, v2181, v2636);
            __swift_storeEnumTagSinglePayload((uint64_t)v2633, 0, 1, v2636);
          }
          uint64_t v2183 = v2174[12];
          uint64_t v2184 = (void *)((char *)v2172 + v2183);
          uint64_t v2185 = (void *)((char *)v2173 + v2183);
          uint64_t v2186 = v2185[1];
          *uint64_t v2184 = *v2185;
          v2184[1] = v2186;
          *(void *)((char *)v2172 + v2174[13]) = *(void *)((char *)v2173 + v2174[13]);
          uint64_t v2187 = v2174[14];
          uint64_t v2188 = (char *)v2172 + v2187;
          uint64_t v2189 = (char *)v2173 + v2187;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2189, 1, v2636))
          {
            uint64_t v2190 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2188, v2189, *(void *)(*(void *)(v2190 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v2188, v2189, v2636);
            __swift_storeEnumTagSinglePayload((uint64_t)v2188, 0, 1, v2636);
          }
          *(void *)((char *)v2172 + v2174[15]) = *(void *)((char *)v2173 + v2174[15]);
          *(void *)((char *)v2172 + v2174[16]) = *(void *)((char *)v2173 + v2174[16]);
          uint64_t v2191 = v2174[17];
          uint64_t v2192 = (void *)((char *)v2172 + v2191);
          uint64_t v2193 = (void *)((char *)v2173 + v2191);
          uint64_t v2194 = v2193[1];
          *uint64_t v2192 = *v2193;
          v2192[1] = v2194;
          *(void *)((char *)v2172 + v2174[18]) = *(void *)((char *)v2173 + v2174[18]);
          *(void *)((char *)v2172 + v2174[19]) = *(void *)((char *)v2173 + v2174[19]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2172, 0, 1, (uint64_t)v2174);
        }
        uint64_t v2195 = v2651[20];
        uint64_t v2196 = (void *)((char *)v8 + v2195);
        uint64_t v2197 = (void *)((char *)v9 + v2195);
        uint64_t v2198 = type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2197, 1, v2198))
        {
          uint64_t v2199 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v2196, v2197, *(void *)(*(void *)(v2199 - 8) + 64));
        }
        else
        {
          uint64_t v2200 = v2197[1];
          *uint64_t v2196 = *v2197;
          v2196[1] = v2200;
          uint64_t v2201 = v2197[3];
          v2196[2] = v2197[2];
          v2196[3] = v2201;
          uint64_t v2202 = v2197[5];
          v2196[4] = v2197[4];
          v2196[5] = v2202;
          uint64_t v2203 = v2197[7];
          v2196[6] = v2197[6];
          v2196[7] = v2203;
          uint64_t v2204 = *(int *)(v2198 + 32);
          uint64_t v2617 = (int *)v2198;
          uint64_t v2634 = (char *)v2196 + v2204;
          uint64_t v2205 = (char *)v2197 + v2204;
          uint64_t v2206 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2205, 1, v2206))
          {
            uint64_t v2207 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2634, v2205, *(void *)(*(void *)(v2207 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2206 - 8) + 16))(v2634, v2205, v2206);
            __swift_storeEnumTagSinglePayload((uint64_t)v2634, 0, 1, v2206);
          }
          uint64_t v2208 = v2617[9];
          uint64_t v2209 = (void *)((char *)v2196 + v2208);
          uint64_t v2210 = (void *)((char *)v2197 + v2208);
          uint64_t v2211 = v2210[1];
          *uint64_t v2209 = *v2210;
          v2209[1] = v2211;
          uint64_t v2212 = v2617[10];
          uint64_t v2213 = (void *)((char *)v2196 + v2212);
          uint64_t v2214 = (void *)((char *)v2197 + v2212);
          uint64_t v2215 = v2214[1];
          void *v2213 = *v2214;
          v2213[1] = v2215;
          uint64_t v2216 = v2617[11];
          uint64_t v2217 = (void *)((char *)v2196 + v2216);
          v2218 = (void *)((char *)v2197 + v2216);
          uint64_t v2219 = v2218[1];
          void *v2217 = *v2218;
          v2217[1] = v2219;
          uint64_t v2220 = v2617[12];
          uint64_t v2221 = (char *)v2196 + v2220;
          uint64_t v2222 = (char *)v2197 + v2220;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2222, 1, v2636))
          {
            uint64_t v2223 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2221, v2222, *(void *)(*(void *)(v2223 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v2221, v2222, v2636);
            __swift_storeEnumTagSinglePayload((uint64_t)v2221, 0, 1, v2636);
          }
          uint64_t v2224 = v2617[13];
          uint64_t v2225 = (char *)v2196 + v2224;
          uint64_t v2226 = (char *)v2197 + v2224;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2197 + v2224, 1, v2636))
          {
            uint64_t v2227 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2225, v2226, *(void *)(*(void *)(v2227 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2636 - 8) + 16))(v2225, v2226, v2636);
            __swift_storeEnumTagSinglePayload((uint64_t)v2225, 0, 1, v2636);
          }
          uint64_t v2228 = v2617[14];
          uint64_t v2229 = (char *)v2196 + v2228;
          uint64_t v2230 = (char *)v2197 + v2228;
          *(void *)uint64_t v2229 = *(void *)v2230;
          v2229[8] = v2230[8];
          uint64_t v2231 = v2617[15];
          uint64_t v2232 = (void *)((char *)v2196 + v2231);
          uint64_t v2233 = (void *)((char *)v2197 + v2231);
          uint64_t v2234 = v2233[1];
          *uint64_t v2232 = *v2233;
          v2232[1] = v2234;
          uint64_t v2235 = v2617[16];
          uint64_t v2236 = (void *)((char *)v2196 + v2235);
          uint64_t v2237 = (void *)((char *)v2197 + v2235);
          uint64_t v2238 = v2237[1];
          *uint64_t v2236 = *v2237;
          v2236[1] = v2238;
          uint64_t v2239 = v2617[17];
          uint64_t v2240 = (void *)((char *)v2196 + v2239);
          uint64_t v2241 = (void *)((char *)v2197 + v2239);
          uint64_t v2242 = v2241[1];
          *uint64_t v2240 = *v2241;
          v2240[1] = v2242;
          uint64_t v2243 = v2617[18];
          v2244 = (void *)((char *)v2196 + v2243);
          uint64_t v2245 = (void *)((char *)v2197 + v2243);
          uint64_t v2246 = v2245[1];
          void *v2244 = *v2245;
          v2244[1] = v2246;
          uint64_t v2247 = v2617[19];
          uint64_t v2248 = (void *)((char *)v2196 + v2247);
          uint64_t v2249 = (void *)((char *)v2197 + v2247);
          uint64_t v2250 = v2249[1];
          void *v2248 = *v2249;
          v2248[1] = v2250;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2196, 0, 1, (uint64_t)v2617);
        }
        uint64_t v2251 = v2651[21];
LABEL_540:
        uint64_t v2074 = (void *)((char *)v8 + v2251);
        v2075 = (void *)((char *)v9 + v2251);
        uint64_t v2076 = *(void *)((char *)v9 + v2251 + 8);
        if (v2076) {
          goto LABEL_541;
        }
        goto LABEL_543;
      case 4u:
        uint64_t v2664 = v10;
        uint64_t v64 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v64;
        uint64_t v65 = v9[3];
        v8[2] = v9[2];
        v8[3] = v65;
        uint64_t v66 = v9[5];
        v8[4] = v9[4];
        v8[5] = v66;
        uint64_t v67 = v9[7];
        v8[6] = v9[6];
        v8[7] = v67;
        uint64_t v68 = type metadata accessor for NoteDocument(0);
        uint64_t v69 = *(int *)(v68 + 32);
        uint64_t v70 = (char *)v8 + v69;
        uint64_t v71 = (char *)v9 + v69;
        uint64_t v72 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v71, 1, v72))
        {
          uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
          __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v72);
        }
        uint64_t v13 = a3;
        uint64_t v347 = *(int *)(v68 + 36);
        goto LABEL_145;
      case 5u:
        uint64_t v2665 = v10;
        uint64_t v74 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v74;
        uint64_t v75 = v9[3];
        v8[2] = v9[2];
        v8[3] = v75;
        uint64_t v76 = v9[5];
        v8[4] = v9[4];
        v8[5] = v76;
        uint64_t v77 = (int *)type metadata accessor for Reminder(0);
        uint64_t v78 = v77[7];
        uint64_t v79 = (char *)v8 + v78;
        uint64_t v80 = (char *)v9 + v78;
        uint64_t v81 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v80, 1, v81))
        {
          uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v79, v80, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
          __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v81);
        }
        uint64_t v13 = a3;
        uint64_t v348 = v77[8];
        uint64_t v349 = (char *)v8 + v348;
        uint64_t v350 = (char *)v9 + v348;
        if (__swift_getEnumTagSinglePayload((uint64_t)v9 + v348, 1, v81))
        {
          uint64_t v351 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v349, v350, *(void *)(*(void *)(v351 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v349, v350, v81);
          __swift_storeEnumTagSinglePayload((uint64_t)v349, 0, 1, v81);
        }
        *((unsigned char *)v8 + v77[9]) = *((unsigned char *)v9 + v77[9]);
        uint64_t v515 = v77[10];
        uint64_t v516 = (void *)((char *)v8 + v515);
        uint64_t v517 = (void *)((char *)v9 + v515);
        uint64_t v518 = v517[1];
        *uint64_t v516 = *v517;
        v516[1] = v518;
        uint64_t v519 = v77[11];
        uint64_t v520 = (void *)((char *)v8 + v519);
        uint64_t v521 = (void *)((char *)v9 + v519);
        uint64_t v522 = v521[1];
        *uint64_t v520 = *v521;
        v520[1] = v522;
        uint64_t v360 = v77[12];
        goto LABEL_134;
      case 6u:
        uint64_t v2665 = v10;
        uint64_t v83 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v83;
        uint64_t v84 = v9[3];
        v8[2] = v9[2];
        v8[3] = v84;
        uint64_t v85 = v9[5];
        v8[4] = v9[4];
        v8[5] = v85;
        uint64_t v86 = v9[7];
        v8[6] = v9[6];
        v8[7] = v86;
        uint64_t v87 = type metadata accessor for PhoneHistory(0);
        uint64_t v88 = *(int *)(v87 + 40);
        uint64_t v2637 = (int *)v87;
        uint64_t v2652 = (char *)v8 + v88;
        uint64_t v89 = (char *)v9 + v88;
        uint64_t v90 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, v90))
        {
          uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2652, v89, *(void *)(*(void *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v2652, v89, v90);
          __swift_storeEnumTagSinglePayload((uint64_t)v2652, 0, 1, v90);
        }
        uint64_t v13 = a3;
        uint64_t v352 = v2637[11];
        uint64_t v353 = (void *)((char *)v8 + v352);
        long long v354 = (void *)((char *)v9 + v352);
        uint64_t v355 = v354[1];
        void *v353 = *v354;
        v353[1] = v355;
        uint64_t v356 = v2637[12];
        uint64_t v357 = (void *)((char *)v8 + v356);
        uint64_t v358 = (void *)((char *)v9 + v356);
        uint64_t v359 = v358[1];
        *uint64_t v357 = *v358;
        v357[1] = v359;
        uint64_t v360 = v2637[13];
LABEL_134:
        uint64_t v523 = (char *)v8 + v360;
        uint64_t v524 = (char *)v9 + v360;
        uint64_t v525 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v524, 1, v525))
        {
          uint64_t v526 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v523, v524, *(void *)(*(void *)(v526 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v525 - 8) + 16))(v523, v524, v525);
          __swift_storeEnumTagSinglePayload((uint64_t)v523, 0, 1, v525);
        }
        uint64_t v10 = v2665;
        goto LABEL_160;
      case 7u:
        uint64_t v2664 = v10;
        uint64_t v92 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v92;
        uint64_t v93 = v9[3];
        v8[2] = v9[2];
        v8[3] = v93;
        uint64_t v94 = v9[5];
        v8[4] = v9[4];
        v8[5] = v94;
        uint64_t v95 = (int *)type metadata accessor for VoicemailTranscript(0);
        uint64_t v96 = v95[7];
        uint64_t v97 = (char *)v8 + v96;
        uint64_t v98 = (char *)v9 + v96;
        uint64_t v99 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v98, 1, v99))
        {
          uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v97, v98, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16))(v97, v98, v99);
          __swift_storeEnumTagSinglePayload((uint64_t)v97, 0, 1, v99);
        }
        uint64_t v13 = a3;
        goto LABEL_81;
      case 8u:
        uint64_t v45 = v10;
        uint64_t v101 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v101;
        uint64_t v102 = v9[3];
        v8[2] = v9[2];
        v8[3] = v102;
        uint64_t v103 = v9[5];
        v8[4] = v9[4];
        v8[5] = v103;
        uint64_t v104 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
        uint64_t v105 = (char *)v8 + v104;
        uint64_t v106 = (char *)v9 + v104;
        uint64_t v107 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v106, 1, v107))
        {
          uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v105, v106, *(void *)(*(void *)(v108 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
          __swift_storeEnumTagSinglePayload((uint64_t)v105, 0, 1, v107);
        }
LABEL_165:
        uint64_t v13 = a3;
        uint64_t v10 = v45;
        goto LABEL_546;
      case 9u:
        uint64_t v2664 = v10;
        uint64_t v109 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v109;
        uint64_t v110 = v9[3];
        v8[2] = v9[2];
        v8[3] = v110;
        uint64_t v95 = (int *)type metadata accessor for VoiceMemo(0);
        uint64_t v111 = v95[6];
        uint64_t v112 = (char *)v8 + v111;
        uint64_t v113 = (char *)v9 + v111;
        uint64_t v114 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v113, 1, v114))
        {
          uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v112, v113, *(void *)(*(void *)(v115 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16))(v112, v113, v114);
          __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, v114);
        }
        uint64_t v13 = a3;
        uint64_t v361 = v95[7];
        uint64_t v362 = (char *)v8 + v361;
        uint64_t v363 = (char *)v9 + v361;
        *(void *)uint64_t v362 = *(void *)v363;
        v362[8] = v363[8];
LABEL_81:
        uint64_t v364 = v95[8];
        goto LABEL_153;
      case 0xAu:
        uint64_t v2664 = v10;
        uint64_t v116 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v116;
        uint64_t v117 = v9[3];
        v8[2] = v9[2];
        v8[3] = v117;
        uint64_t v118 = (int *)type metadata accessor for Safari(0);
        uint64_t v119 = v118[6];
        uint64_t v120 = (char *)v8 + v119;
        uint64_t v121 = (char *)v9 + v119;
        uint64_t v72 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v121, 1, v72))
        {
          uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v120, v121, *(void *)(*(void *)(v122 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v120, v121, v72);
          __swift_storeEnumTagSinglePayload((uint64_t)v120, 0, 1, v72);
        }
        uint64_t v13 = a3;
        uint64_t v365 = v118[7];
        uint64_t v366 = (void *)((char *)v8 + v365);
        uint64_t v367 = (void *)((char *)v9 + v365);
        uint64_t v368 = v367[1];
        *uint64_t v366 = *v367;
        v366[1] = v368;
        uint64_t v369 = v118[8];
        long long v370 = (void *)((char *)v8 + v369);
        uint64_t v371 = (void *)((char *)v9 + v369);
        uint64_t v372 = v371[1];
        *long long v370 = *v371;
        v370[1] = v372;
        uint64_t v373 = v118[9];
        uint64_t v374 = (char *)v8 + v373;
        uint64_t v375 = (uint64_t)v9 + v373;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!__swift_getEnumTagSinglePayload(v375, 1, v72)) {
          goto LABEL_148;
        }
        long long v376 = &demangling cache variable for type metadata for URL?;
        goto LABEL_147;
      case 0xBu:
        uint64_t v123 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v123;
        uint64_t v124 = (void *)v9[2];
        v8[2] = v124;
        swift_bridgeObjectRetain();
        id v125 = v124;
        goto LABEL_54;
      case 0xCu:
        uint64_t v126 = v10;
        uint64_t v127 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v127;
        uint64_t v128 = v9[3];
        v8[2] = v9[2];
        v8[3] = v128;
        uint64_t v129 = v9[5];
        v8[4] = v9[4];
        v8[5] = v129;
        uint64_t v130 = (int *)type metadata accessor for WalletTransaction(0);
        uint64_t v131 = v130[7];
        uint64_t v132 = (char *)v8 + v131;
        uint64_t v133 = (char *)v9 + v131;
        uint64_t v134 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v133, 1, v134))
        {
          uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16))(v132, v133, v134);
          __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v134);
        }
        uint64_t v10 = v126;
        uint64_t v13 = a3;
        uint64_t v12 = a1;
        uint64_t v377 = v130[8];
        long long v378 = (void *)((char *)v8 + v377);
        uint64_t v379 = (void *)((char *)v9 + v377);
        uint64_t v380 = v379[1];
        *long long v378 = *v379;
        v378[1] = v380;
        uint64_t v381 = v130[9];
        uint64_t v382 = (void *)((char *)v8 + v381);
        uint64_t v383 = (void *)((char *)v9 + v381);
        uint64_t v384 = v383[1];
        *uint64_t v382 = *v383;
        v382[1] = v384;
        uint64_t v385 = v130[10];
        uint64_t v386 = (void *)((char *)v8 + v385);
        uint64_t v387 = (void *)((char *)v9 + v385);
        uint64_t v388 = v387[1];
        *uint64_t v386 = *v387;
        v386[1] = v388;
        uint64_t v389 = v130[11];
        uint64_t v390 = (char *)v8 + v389;
        uint64_t v391 = (char *)v9 + v389;
        *(_OWORD *)uint64_t v390 = *(_OWORD *)v391;
        *(void *)(v390 + 13) = *(void *)(v391 + 13);
        uint64_t v392 = v130[12];
        uint64_t v393 = (void *)((char *)v8 + v392);
        uint64_t v394 = (void *)((char *)v9 + v392);
        uint64_t v395 = v394[1];
        *uint64_t v393 = *v394;
        v393[1] = v395;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_121;
      case 0xDu:
        uint64_t v136 = v10;
        uint64_t v137 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v137;
        uint64_t v138 = v9[3];
        v8[2] = v9[2];
        v8[3] = v138;
        uint64_t v139 = v9[5];
        v8[4] = v9[4];
        v8[5] = v139;
        uint64_t v140 = (int *)type metadata accessor for WalletPass(0);
        uint64_t v141 = v140[7];
        uint64_t v142 = (char *)v8 + v141;
        uint64_t v143 = (char *)v9 + v141;
        uint64_t v144 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v143, 1, v144))
        {
          uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v142, v143, *(void *)(*(void *)(v145 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 16))(v142, v143, v144);
          __swift_storeEnumTagSinglePayload((uint64_t)v142, 0, 1, v144);
        }
        uint64_t v10 = v136;
        uint64_t v13 = a3;
        uint64_t v12 = a1;
        uint64_t v396 = v140[8];
        uint64_t v397 = (void *)((char *)v8 + v396);
        uint64_t v398 = (void *)((char *)v9 + v396);
        uint64_t v399 = v398[1];
        *uint64_t v397 = *v398;
        v397[1] = v399;
        *(void *)((char *)v8 + v140[9]) = *(void *)((char *)v9 + v140[9]);
        swift_bridgeObjectRetain();
        goto LABEL_121;
      case 0xEu:
        uint64_t v146 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v146;
        uint64_t v147 = v9[3];
        v8[2] = v9[2];
        v8[3] = v147;
        uint64_t v148 = v9[5];
        v8[4] = v9[4];
        v8[5] = v148;
        uint64_t v149 = v9[7];
        v8[6] = v9[6];
        v8[7] = v149;
        uint64_t v150 = v9[9];
        v8[8] = v9[8];
        v8[9] = v150;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_53;
      case 0xFu:
        uint64_t v2663 = v10;
        uint64_t v151 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v151;
        uint64_t v152 = v9[3];
        v8[2] = v9[2];
        v8[3] = v152;
        uint64_t v153 = v9[5];
        v8[4] = v9[4];
        v8[5] = v153;
        uint64_t v154 = v9[7];
        v8[6] = v9[6];
        v8[7] = v154;
        uint64_t v2653 = v9[9];
        v8[8] = v9[8];
        v8[9] = v2653;
        uint64_t v2638 = v9[11];
        v8[10] = v9[10];
        v8[11] = v2638;
        *((unsigned char *)v8 + 96) = *((unsigned char *)v9 + 96);
        uint64_t v155 = v9[14];
        v8[13] = v9[13];
        v8[14] = v155;
        uint64_t v156 = (int *)type metadata accessor for FlightReservation(0);
        uint64_t v157 = v156[13];
        uint64_t v2605 = (char *)v8 + v157;
        uint64_t v2622 = (char *)v9 + v157;
        uint64_t v158 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v2622, 1, v158))
        {
          uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v2605, v2622, *(void *)(*(void *)(v159 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16))(v2605, v2622, v158);
          __swift_storeEnumTagSinglePayload((uint64_t)v2605, 0, 1, v158);
        }
        uint64_t v400 = v156[14];
        uint64_t v401 = (char *)v8 + v400;
        uint64_t v402 = (char *)v9 + v400;
        if (__swift_getEnumTagSinglePayload((uint64_t)v9 + v400, 1, v158))
        {
          uint64_t v403 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v401, v402, *(void *)(*(void *)(v403 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16))(v401, v402, v158);
          __swift_storeEnumTagSinglePayload((uint64_t)v401, 0, 1, v158);
        }
        uint64_t v527 = v156[15];
        uint64_t v528 = (void *)((char *)v8 + v527);
        uint64_t v529 = (void *)((char *)v9 + v527);
        uint64_t v530 = v529[1];
        *uint64_t v528 = *v529;
        v528[1] = v530;
        uint64_t v531 = v156[16];
        uint64_t v532 = (void *)((char *)v8 + v531);
        uint64_t v533 = (void *)((char *)v9 + v531);
        uint64_t v534 = v533[1];
        void *v532 = *v533;
        v532[1] = v534;
        uint64_t v535 = v156[17];
        uint64_t v536 = (void *)((char *)v8 + v535);
        uint64_t v537 = (void *)((char *)v9 + v535);
        uint64_t v538 = v537[1];
        void *v536 = *v537;
        v536[1] = v538;
        uint64_t v539 = v156[18];
        uint64_t v540 = (char *)v8 + v539;
        uint64_t v2660 = (char *)v9 + v539;
        uint64_t v541 = type metadata accessor for DateComponents();
        uint64_t v542 = *(void (**)(char *, char *, uint64_t))(*(void *)(v541 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v542(v540, v2660, v541);
        v542((char *)v8 + v156[19], (char *)v9 + v156[19], v541);
        uint64_t v543 = v156[20];
        uint64_t v544 = (void *)((char *)v8 + v543);
        uint64_t v545 = (void *)((char *)v9 + v543);
        uint64_t v2613 = v545[1];
        void *v544 = *v545;
        v544[1] = v2613;
        uint64_t v546 = v156[21];
        long long v547 = (void *)((char *)v8 + v546);
        uint64_t v548 = (void *)((char *)v9 + v546);
        uint64_t v2661 = v548[1];
        void *v547 = *v548;
        v547[1] = v2661;
        uint64_t v549 = v156[22];
        uint64_t v550 = (void *)((char *)v8 + v549);
        uint64_t v551 = (void *)((char *)v9 + v549);
        uint64_t v2645 = v551[1];
        void *v550 = *v551;
        v550[1] = v2645;
        uint64_t v552 = v156[23];
        uint64_t v553 = (void *)((char *)v8 + v552);
        uint64_t v554 = (void *)((char *)v9 + v552);
        uint64_t v2630 = v554[1];
        void *v553 = *v554;
        v553[1] = v2630;
        uint64_t v555 = v156[24];
        uint64_t v556 = (void *)((char *)v8 + v555);
        uint64_t v557 = (void *)((char *)v9 + v555);
        uint64_t v2596 = v557[1];
        void *v556 = *v557;
        v556[1] = v2596;
        uint64_t v558 = v156[25];
        long long v559 = (void *)((char *)v8 + v558);
        long long v560 = (void *)((char *)v9 + v558);
        uint64_t v2568 = v560[1];
        void *v559 = *v560;
        v559[1] = v2568;
        uint64_t v561 = v156[26];
        uint64_t v562 = (void *)((char *)v8 + v561);
        long long v563 = (void *)((char *)v9 + v561);
        v2539 = (void *)v563[1];
        void *v562 = *v563;
        v562[1] = v2539;
        uint64_t v564 = v156[27];
        uint64_t v565 = (void *)((char *)v8 + v564);
        uint64_t v566 = (void *)((char *)v9 + v564);
        uint64_t v2528 = (void *)v566[1];
        void *v565 = *v566;
        v565[1] = v2528;
        uint64_t v567 = v156[28];
        uint64_t v568 = (void *)((char *)v8 + v567);
        uint64_t v569 = (void *)((char *)v9 + v567);
        v2509 = (void *)v569[1];
        *uint64_t v568 = *v569;
        v568[1] = v2509;
        uint64_t v570 = v156[29];
        uint64_t v571 = (void *)((char *)v8 + v570);
        uint64_t v572 = (void *)((char *)v9 + v570);
        uint64_t v2500 = (void *)v572[1];
        *uint64_t v571 = *v572;
        v571[1] = v2500;
        uint64_t v573 = v156[30];
        uint64_t v574 = (void *)((char *)v8 + v573);
        uint64_t v575 = (void *)((char *)v9 + v573);
        uint64_t v2493 = v575[1];
        void *v574 = *v575;
        v574[1] = v2493;
        uint64_t v576 = v156[31];
        long long v577 = (void *)((char *)v8 + v576);
        uint64_t v578 = (void *)((char *)v9 + v576);
        uint64_t v2487 = (void *)v578[1];
        void *v577 = *v578;
        v577[1] = v2487;
        uint64_t v579 = v156[32];
        uint64_t v580 = (void *)((char *)v8 + v579);
        long long v581 = (void *)((char *)v9 + v579);
        uint64_t v582 = v581[1];
        *uint64_t v580 = *v581;
        v580[1] = v582;
        *(void *)((char *)v8 + v156[33]) = *(void *)((char *)v9 + v156[33]);
        *(void *)((char *)v8 + v156[34]) = *(void *)((char *)v9 + v156[34]);
        uint64_t v583 = v156[35];
        uint64_t v584 = (void *)((char *)v8 + v583);
        uint64_t v585 = (void *)((char *)v9 + v583);
        uint64_t v586 = v585[1];
        void *v584 = *v585;
        v584[1] = v586;
        uint64_t v587 = v156[36];
        v588 = (void *)((char *)v8 + v587);
        uint64_t v589 = (void *)((char *)v9 + v587);
        uint64_t v590 = v589[1];
        void *v588 = *v589;
        v588[1] = v590;
        uint64_t v591 = v156[37];
        uint64_t v592 = (void *)((char *)v8 + v591);
        uint64_t v593 = (void *)((char *)v9 + v591);
        uint64_t v594 = v593[1];
        *uint64_t v592 = *v593;
        v592[1] = v594;
        uint64_t v595 = v156[38];
        uint64_t v2475 = (char *)v8 + v595;
        uint64_t v596 = (char *)v9 + v595;
        uint64_t v597 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v596, 1, v597))
        {
          uint64_t v598 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2475, v596, *(void *)(*(void *)(v598 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v597 - 8) + 16))(v2475, v596, v597);
          __swift_storeEnumTagSinglePayload((uint64_t)v2475, 0, 1, v597);
        }
        uint64_t v13 = a3;
        uint64_t v661 = v156[39];
        uint64_t v662 = (void *)((char *)v8 + v661);
        uint64_t v663 = (void *)((char *)v9 + v661);
        uint64_t v664 = v663[1];
        *uint64_t v662 = *v663;
        v662[1] = v664;
        uint64_t v665 = v156[40];
        uint64_t v666 = (void *)((char *)v8 + v665);
        uint64_t v667 = (void *)((char *)v9 + v665);
        uint64_t v668 = v667[1];
        *uint64_t v666 = *v667;
        v666[1] = v668;
        uint64_t v669 = v156[41];
        uint64_t v670 = (char *)v8 + v669;
        uint64_t v671 = (char *)v9 + v669;
        v670[8] = v671[8];
        *(void *)uint64_t v670 = *(void *)v671;
        uint64_t v672 = v156[42];
        uint64_t v673 = (void *)((char *)v8 + v672);
        uint64_t v674 = (void *)((char *)v9 + v672);
        uint64_t v675 = v674[1];
        *uint64_t v673 = *v674;
        v673[1] = v675;
        uint64_t v676 = v156[43];
        uint64_t v677 = (char *)v8 + v676;
        uint64_t v678 = (char *)v9 + v676;
        *(_OWORD *)uint64_t v677 = *(_OWORD *)v678;
        *(void *)(v677 + 13) = *(void *)(v678 + 13);
        uint64_t v679 = v156[44];
        long long v680 = (void *)((char *)v8 + v679);
        uint64_t v681 = (void *)((char *)v9 + v679);
        uint64_t v682 = v681[1];
        *long long v680 = *v681;
        v680[1] = v682;
        uint64_t v683 = v156[45];
        uint64_t v684 = (void *)((char *)v8 + v683);
        uint64_t v685 = (void *)((char *)v9 + v683);
        uint64_t v686 = v685[1];
        *uint64_t v684 = *v685;
        v684[1] = v686;
        uint64_t v687 = v156[46];
        long long v688 = (void *)((char *)v8 + v687);
        uint64_t v689 = (void *)((char *)v9 + v687);
        uint64_t v690 = v689[1];
        *long long v688 = *v689;
        v688[1] = v690;
        uint64_t v691 = v156[47];
        long long v692 = (void *)((char *)v8 + v691);
        uint64_t v693 = (void *)((char *)v9 + v691);
        uint64_t v694 = v693[1];
        *long long v692 = *v693;
        v692[1] = v694;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v695 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
        *(void *)((char *)v8 + *(int *)(v695 + 48)) = *(void *)((char *)v9 + *(int *)(v695 + 48));
        swift_bridgeObjectRetain();
        goto LABEL_545;
      case 0x10u:
        uint64_t v2663 = v10;
        uint64_t v160 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v160;
        uint64_t v161 = v9[3];
        v8[2] = v9[2];
        v8[3] = v161;
        uint64_t v2654 = v9[5];
        v8[4] = v9[4];
        v8[5] = v2654;
        uint64_t v162 = v9[7];
        v8[6] = v9[6];
        v8[7] = v162;
        uint64_t v2639 = v9[9];
        v8[8] = v9[8];
        v8[9] = v2639;
        uint64_t v2623 = v9[11];
        v8[10] = v9[10];
        v8[11] = v2623;
        *((unsigned char *)v8 + 96) = *((unsigned char *)v9 + 96);
        uint64_t v163 = v9[14];
        v8[13] = v9[13];
        v8[14] = v163;
        uint64_t v164 = v9[16];
        v8[15] = v9[15];
        v8[16] = v164;
        uint64_t v165 = (int *)type metadata accessor for HotelReservation(0);
        uint64_t v166 = v165[14];
        v2606 = (char *)v8 + v166;
        uint64_t v167 = (char *)v9 + v166;
        uint64_t v168 = type metadata accessor for DateComponents();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v168))
        {
          uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v2606, v167, *(void *)(*(void *)(v169 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v2606, v167, v168);
          __swift_storeEnumTagSinglePayload((uint64_t)v2606, 0, 1, v168);
        }
        uint64_t v404 = v165[15];
        long long v405 = (char *)v8 + v404;
        long long v406 = (char *)v9 + v404;
        if (__swift_getEnumTagSinglePayload((uint64_t)v9 + v404, 1, v168))
        {
          uint64_t v407 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v405, v406, *(void *)(*(void *)(v407 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v405, v406, v168);
          __swift_storeEnumTagSinglePayload((uint64_t)v405, 0, 1, v168);
        }
        uint64_t v599 = v165[16];
        uint64_t v600 = (void *)((char *)v8 + v599);
        uint64_t v601 = (void *)((char *)v9 + v599);
        uint64_t v602 = v601[1];
        void *v600 = *v601;
        v600[1] = v602;
        uint64_t v603 = v165[17];
        uint64_t v604 = (void *)((char *)v8 + v603);
        long long v605 = (void *)((char *)v9 + v603);
        uint64_t v606 = v605[1];
        void *v604 = *v605;
        v604[1] = v606;
        uint64_t v607 = v165[18];
        long long v608 = (void *)((char *)v8 + v607);
        long long v609 = (void *)((char *)v9 + v607);
        uint64_t v2662 = v609[1];
        *long long v608 = *v609;
        v608[1] = v2662;
        uint64_t v610 = v165[19];
        uint64_t v611 = (void *)((char *)v8 + v610);
        uint64_t v612 = (void *)((char *)v9 + v610);
        uint64_t v2646 = v612[1];
        void *v611 = *v612;
        v611[1] = v2646;
        uint64_t v613 = v165[20];
        uint64_t v614 = (void *)((char *)v8 + v613);
        uint64_t v615 = (void *)((char *)v9 + v613);
        uint64_t v616 = v615[1];
        void *v614 = *v615;
        v614[1] = v616;
        *(void *)((char *)v8 + v165[21]) = *(void *)((char *)v9 + v165[21]);
        *(void *)((char *)v8 + v165[22]) = *(void *)((char *)v9 + v165[22]);
        uint64_t v617 = v165[23];
        uint64_t v618 = (char *)v8 + v617;
        uint64_t v619 = (char *)v9 + v617;
        *(void *)uint64_t v618 = *(void *)v619;
        v618[8] = v619[8];
        uint64_t v620 = v165[24];
        long long v621 = (char *)v8 + v620;
        uint64_t v622 = (char *)v9 + v620;
        *(void *)long long v621 = *(void *)v622;
        v621[8] = v622[8];
        uint64_t v623 = v165[25];
        long long v624 = (void *)((char *)v8 + v623);
        long long v625 = (void *)((char *)v9 + v623);
        uint64_t v626 = v625[1];
        *long long v624 = *v625;
        v624[1] = v626;
        uint64_t v627 = v165[26];
        uint64_t v628 = (void *)((char *)v8 + v627);
        uint64_t v629 = (void *)((char *)v9 + v627);
        uint64_t v630 = v629[1];
        void *v628 = *v629;
        v628[1] = v630;
        uint64_t v631 = v165[27];
        v632 = (void *)((char *)v8 + v631);
        uint64_t v633 = (void *)((char *)v9 + v631);
        uint64_t v634 = v633[1];
        void *v632 = *v633;
        v632[1] = v634;
        uint64_t v635 = v165[28];
        long long v636 = (void *)((char *)v8 + v635);
        uint64_t v637 = (void *)((char *)v9 + v635);
        uint64_t v638 = v637[1];
        void *v636 = *v637;
        v636[1] = v638;
        uint64_t v639 = v165[29];
        long long v640 = (char *)v8 + v639;
        long long v641 = (char *)v9 + v639;
        *(void *)long long v640 = *(void *)v641;
        v640[8] = v641[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_542;
      case 0x11u:
        uint64_t v2663 = v10;
        uint64_t v170 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v170;
        uint64_t v171 = v9[3];
        v8[2] = v9[2];
        v8[3] = v171;
        uint64_t v2655 = v9[5];
        v8[4] = v9[4];
        v8[5] = v2655;
        uint64_t v2640 = v9[7];
        v8[6] = v9[6];
        v8[7] = v2640;
        uint64_t v172 = v9[9];
        v8[8] = v9[8];
        v8[9] = v172;
        uint64_t v2624 = v9[11];
        v8[10] = v9[10];
        v8[11] = v2624;
        *((unsigned char *)v8 + 96) = *((unsigned char *)v9 + 96);
        uint64_t v173 = v9[14];
        v8[13] = v9[13];
        v8[14] = v173;
        uint64_t v174 = v9[16];
        v8[15] = v9[15];
        v8[16] = v174;
        uint64_t v175 = (int *)type metadata accessor for RestaurantReservation(0);
        uint64_t v176 = v175[14];
        uint64_t v2589 = (char *)v8 + v176;
        uint64_t v177 = (char *)v9 + v176;
        uint64_t v2607 = type metadata accessor for DateComponents();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v177, 1, v2607))
        {
          uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v2589, v177, *(void *)(*(void *)(v178 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v2607 - 8) + 16))(v2589, v177, v2607);
          __swift_storeEnumTagSinglePayload((uint64_t)v2589, 0, 1, v2607);
        }
        uint64_t v408 = v175[15];
        uint64_t v409 = (void *)((char *)v8 + v408);
        uint64_t v410 = (void *)((char *)v9 + v408);
        uint64_t v411 = v410[1];
        *uint64_t v409 = *v410;
        v409[1] = v411;
        uint64_t v412 = v175[16];
        uint64_t v413 = (void *)((char *)v8 + v412);
        uint64_t v414 = (void *)((char *)v9 + v412);
        uint64_t v415 = v414[1];
        *uint64_t v413 = *v414;
        v413[1] = v415;
        uint64_t v416 = v175[17];
        uint64_t v417 = (void *)((char *)v8 + v416);
        uint64_t v418 = (void *)((char *)v9 + v416);
        uint64_t v419 = v418[1];
        *uint64_t v417 = *v418;
        v417[1] = v419;
        uint64_t v420 = v175[18];
        long long v421 = (void *)((char *)v8 + v420);
        long long v422 = (void *)((char *)v9 + v420);
        uint64_t v423 = v422[1];
        *long long v421 = *v422;
        v421[1] = v423;
        uint64_t v424 = v175[19];
        uint64_t v425 = (void *)((char *)v8 + v424);
        uint64_t v426 = (void *)((char *)v9 + v424);
        uint64_t v427 = v426[1];
        *uint64_t v425 = *v426;
        v425[1] = v427;
        *(void *)((char *)v8 + v175[20]) = *(void *)((char *)v9 + v175[20]);
        uint64_t v428 = v175[21];
        uint64_t v429 = (void *)((char *)v8 + v428);
        uint64_t v430 = (void *)((char *)v9 + v428);
        uint64_t v431 = v430[1];
        *uint64_t v429 = *v430;
        v429[1] = v431;
        uint64_t v432 = v175[22];
        uint64_t v433 = (void *)((char *)v8 + v432);
        uint64_t v434 = (void *)((char *)v9 + v432);
        uint64_t v435 = v434[1];
        *uint64_t v433 = *v434;
        v433[1] = v435;
        uint64_t v436 = v175[23];
        long long v437 = (void *)((char *)v8 + v436);
        uint64_t v438 = (void *)((char *)v9 + v436);
        uint64_t v439 = v438[1];
        *long long v437 = *v438;
        v437[1] = v439;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_542;
      case 0x12u:
        uint64_t v2664 = v10;
        uint64_t v179 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v179;
        uint64_t v180 = v9[3];
        v8[2] = v9[2];
        v8[3] = v180;
        uint64_t v181 = v9[5];
        v8[4] = v9[4];
        v8[5] = v181;
        uint64_t v182 = v9[7];
        v8[6] = v9[6];
        v8[7] = v182;
        uint64_t v183 = v9[9];
        v8[8] = v9[8];
        v8[9] = v183;
        uint64_t v184 = v9[11];
        v8[10] = v9[10];
        v8[11] = v184;
        uint64_t v185 = v9[13];
        v8[12] = v9[12];
        v8[13] = v185;
        uint64_t v186 = v9[15];
        v8[14] = v9[14];
        v8[15] = v186;
        *((unsigned char *)v8 + 128) = *((unsigned char *)v9 + 128);
        *(_WORD *)((char *)v8 + 129) = *(_WORD *)((char *)v9 + 129);
        uint64_t v187 = v9[18];
        v8[17] = v9[17];
        v8[18] = v187;
        uint64_t v188 = v9[20];
        v8[19] = v9[19];
        v8[20] = v188;
        uint64_t v189 = v9[22];
        v8[21] = v9[21];
        v8[22] = v189;
        uint64_t v190 = v9[24];
        v8[23] = v9[23];
        v8[24] = v190;
        uint64_t v191 = v9[26];
        v8[25] = v9[25];
        v8[26] = v191;
        uint64_t v192 = v9[28];
        v8[27] = v9[27];
        v8[28] = v192;
        uint64_t v193 = v9[30];
        v8[29] = v9[29];
        v8[30] = v193;
        uint64_t v2656 = v9[32];
        v8[31] = v9[31];
        v8[32] = v2656;
        uint64_t v2641 = v9[34];
        v8[33] = v9[33];
        v8[34] = v2641;
        uint64_t v2625 = v9[36];
        v8[35] = v9[35];
        v8[36] = v2625;
        uint64_t v2608 = v9[38];
        v8[37] = v9[37];
        v8[38] = v2608;
        uint64_t v2590 = v9[40];
        v8[39] = v9[39];
        v8[40] = v2590;
        uint64_t v2562 = v9[42];
        v8[41] = v9[41];
        v8[42] = v2562;
        uint64_t v194 = v9[44];
        v8[43] = v9[43];
        v8[44] = v194;
        uint64_t v195 = v9[46];
        v8[45] = v9[45];
        v8[46] = v195;
        uint64_t v196 = v9[47];
        *((unsigned char *)v8 + 384) = *((unsigned char *)v9 + 384);
        v8[47] = v196;
        uint64_t v197 = v9[50];
        v8[49] = v9[49];
        v8[50] = v197;
        uint64_t v198 = v9[52];
        v8[51] = v9[51];
        v8[52] = v198;
        uint64_t v199 = type metadata accessor for RentalCarReservation(0);
        uint64_t v200 = *(int *)(v199 + 140);
        __dst = (char *)v8 + v200;
        uint64_t v2452 = v199;
        uint64_t v201 = (char *)v9 + v200;
        uint64_t v202 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v201, 1, v202))
        {
          uint64_t v203 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(__dst, v201, *(void *)(*(void *)(v203 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(__dst, v201, v202);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v202);
        }
        uint64_t v13 = a3;
        uint64_t v440 = *(int *)(v2452 + 144);
        goto LABEL_106;
      case 0x13u:
        uint64_t v2664 = v10;
        uint64_t v204 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v204;
        uint64_t v205 = v9[3];
        v8[2] = v9[2];
        v8[3] = v205;
        uint64_t v206 = v9[5];
        v8[4] = v9[4];
        v8[5] = v206;
        uint64_t v207 = v9[7];
        v8[6] = v9[6];
        v8[7] = v207;
        uint64_t v208 = v9[9];
        v8[8] = v9[8];
        v8[9] = v208;
        uint64_t v209 = v9[11];
        v8[10] = v9[10];
        v8[11] = v209;
        uint64_t v210 = v9[13];
        v8[12] = v9[12];
        v8[13] = v210;
        uint64_t v211 = v9[15];
        v8[14] = v9[14];
        v8[15] = v211;
        *((unsigned char *)v8 + 128) = *((unsigned char *)v9 + 128);
        *(_WORD *)((char *)v8 + 129) = *(_WORD *)((char *)v9 + 129);
        uint64_t v212 = v9[18];
        v8[17] = v9[17];
        v8[18] = v212;
        uint64_t v213 = v9[20];
        v8[19] = v9[19];
        v8[20] = v213;
        uint64_t v214 = v9[22];
        v8[21] = v9[21];
        v8[22] = v214;
        uint64_t v215 = v9[24];
        v8[23] = v9[23];
        v8[24] = v215;
        uint64_t v2657 = v9[26];
        v8[25] = v9[25];
        v8[26] = v2657;
        uint64_t v2642 = v9[28];
        v8[27] = v9[27];
        v8[28] = v2642;
        uint64_t v2626 = v9[30];
        v8[29] = v9[29];
        v8[30] = v2626;
        uint64_t v2609 = v9[32];
        v8[31] = v9[31];
        v8[32] = v2609;
        uint64_t v216 = v9[34];
        v8[33] = v9[33];
        v8[34] = v216;
        uint64_t v217 = v9[36];
        uint64_t v2563 = v9[35];
        *((unsigned char *)v8 + 296) = *((unsigned char *)v9 + 296);
        v8[35] = v2563;
        v8[36] = v217;
        uint64_t v218 = type metadata accessor for TicketedTransportation(0);
        uint64_t v219 = *(int *)(v218 + 112);
        uint64_t v2460 = (char *)v8 + v219;
        uint64_t v2464 = (int *)v218;
        uint64_t v220 = (char *)v9 + v219;
        uint64_t v202 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v220, 1, v202))
        {
          uint64_t v221 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2460, v220, *(void *)(*(void *)(v221 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v2460, v220, v202);
          __swift_storeEnumTagSinglePayload((uint64_t)v2460, 0, 1, v202);
        }
        uint64_t v13 = a3;
        uint64_t v440 = v2464[29];
        goto LABEL_106;
      case 0x14u:
        uint64_t v2664 = v10;
        uint64_t v222 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v222;
        uint64_t v223 = v9[3];
        v8[2] = v9[2];
        v8[3] = v223;
        uint64_t v224 = v9[5];
        v8[4] = v9[4];
        v8[5] = v224;
        uint64_t v225 = v9[7];
        v8[6] = v9[6];
        v8[7] = v225;
        uint64_t v226 = v9[9];
        v8[8] = v9[8];
        v8[9] = v226;
        uint64_t v227 = v9[11];
        v8[10] = v9[10];
        v8[11] = v227;
        uint64_t v228 = v9[13];
        v8[12] = v9[12];
        v8[13] = v228;
        uint64_t v229 = v9[15];
        v8[14] = v9[14];
        v8[15] = v229;
        *((unsigned char *)v8 + 128) = *((unsigned char *)v9 + 128);
        *(_WORD *)((char *)v8 + 129) = *(_WORD *)((char *)v9 + 129);
        uint64_t v230 = v9[18];
        v8[17] = v9[17];
        v8[18] = v230;
        uint64_t v231 = v9[20];
        v8[19] = v9[19];
        v8[20] = v231;
        uint64_t v232 = v9[22];
        v8[21] = v9[21];
        v8[22] = v232;
        uint64_t v233 = v9[24];
        v8[23] = v9[23];
        v8[24] = v233;
        uint64_t v234 = v9[26];
        v8[25] = v9[25];
        v8[26] = v234;
        uint64_t v235 = v9[28];
        v8[27] = v9[27];
        v8[28] = v235;
        uint64_t v2658 = v9[30];
        v8[29] = v9[29];
        v8[30] = v2658;
        uint64_t v2643 = v9[32];
        v8[31] = v9[31];
        v8[32] = v2643;
        uint64_t v236 = v9[34];
        v8[33] = v9[33];
        v8[34] = v236;
        uint64_t v237 = v9[36];
        uint64_t v2610 = v9[35];
        *((unsigned char *)v8 + 296) = *((unsigned char *)v9 + 296);
        v8[35] = v2610;
        v8[36] = v237;
        uint64_t v2591 = v9[39];
        v8[38] = v9[38];
        v8[39] = v2591;
        uint64_t v238 = type metadata accessor for TicketedShow(0);
        uint64_t v239 = *(int *)(v238 + 116);
        v2458 = (char *)v8 + v239;
        v2461 = (int *)v238;
        uint64_t v240 = (char *)v9 + v239;
        uint64_t v241 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v240, 1, v241))
        {
          uint64_t v242 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v2458, v240, *(void *)(*(void *)(v242 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v241 - 8) + 16))(v2458, v240, v241);
          __swift_storeEnumTagSinglePayload((uint64_t)v2458, 0, 1, v241);
        }
        uint64_t v13 = a3;
        uint64_t v441 = v2461[30];
        uint64_t v442 = (void *)((char *)v8 + v441);
        uint64_t v443 = (void *)((char *)v9 + v441);
        uint64_t v444 = v443[1];
        *uint64_t v442 = *v443;
        v442[1] = v444;
        uint64_t v445 = v2461[31];
        uint64_t v446 = (char *)v8 + v445;
        uint64_t v447 = (char *)v9 + v445;
        uint64_t v72 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v447, 1, v72))
        {
          uint64_t v448 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v446, v447, *(void *)(*(void *)(v448 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v446, v447, v72);
          __swift_storeEnumTagSinglePayload((uint64_t)v446, 0, 1, v72);
        }
        uint64_t v347 = v2461[32];
LABEL_145:
        uint64_t v374 = (char *)v8 + v347;
        uint64_t v375 = (uint64_t)v9 + v347;
        if (!__swift_getEnumTagSinglePayload((uint64_t)v9 + v347, 1, v72))
        {
LABEL_148:
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 16))(v374, v375, v72);
          uint64_t v645 = (uint64_t)v374;
          uint64_t v646 = v72;
          goto LABEL_158;
        }
        long long v376 = &demangling cache variable for type metadata for Date?;
LABEL_147:
        size_t v642 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(v376) - 8) + 64);
        uint64_t v643 = v374;
        uint64_t v644 = (const void *)v375;
        goto LABEL_156;
      case 0x15u:
        uint64_t v2664 = v10;
        uint64_t v2592 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v2592;
        uint64_t v2564 = v9[3];
        v8[2] = v9[2];
        v8[3] = v2564;
        uint64_t v243 = v9[5];
        v8[4] = v9[4];
        v8[5] = v243;
        uint64_t v244 = v9[7];
        v8[6] = v9[6];
        v8[7] = v244;
        uint64_t v245 = v9[9];
        v8[8] = v9[8];
        v8[9] = v245;
        uint64_t v246 = v9[11];
        v8[10] = v9[10];
        v8[11] = v246;
        uint64_t v247 = v9[13];
        v8[12] = v9[12];
        v8[13] = v247;
        uint64_t v248 = v9[15];
        v8[14] = v9[14];
        v8[15] = v248;
        *((unsigned char *)v8 + 128) = *((unsigned char *)v9 + 128);
        *(_WORD *)((char *)v8 + 129) = *(_WORD *)((char *)v9 + 129);
        uint64_t v249 = v9[18];
        v8[17] = v9[17];
        v8[18] = v249;
        uint64_t v250 = v9[20];
        v8[19] = v9[19];
        v8[20] = v250;
        uint64_t v251 = v9[22];
        v8[21] = v9[21];
        v8[22] = v251;
        uint64_t v252 = v9[24];
        v8[23] = v9[23];
        v8[24] = v252;
        uint64_t v253 = v9[26];
        v8[25] = v9[25];
        v8[26] = v253;
        uint64_t v254 = v9[28];
        v8[27] = v9[27];
        v8[28] = v254;
        uint64_t v255 = v9[30];
        v8[29] = v9[29];
        v8[30] = v255;
        uint64_t v256 = v9[32];
        v8[31] = v9[31];
        v8[32] = v256;
        uint64_t v257 = v9[34];
        uint64_t v258 = v9[33];
        *((unsigned char *)v8 + 280) = *((unsigned char *)v9 + 280);
        v8[33] = v258;
        v8[34] = v257;
        uint64_t v259 = v9[37];
        v8[36] = v9[36];
        v8[37] = v259;
        uint64_t v260 = type metadata accessor for Appointment(0);
        uint64_t v261 = *(int *)(v260 + 108);
        v2465 = (char *)v8 + v261;
        uint64_t v2469 = v260;
        uint64_t v262 = (char *)v9 + v261;
        uint64_t v202 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v262, 1, v202))
        {
          uint64_t v263 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2465, v262, *(void *)(*(void *)(v263 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v2465, v262, v202);
          __swift_storeEnumTagSinglePayload((uint64_t)v2465, 0, 1, v202);
        }
        uint64_t v13 = a3;
        uint64_t v440 = *(int *)(v2469 + 112);
LABEL_106:
        uint64_t v449 = (char *)v8 + v440;
        uint64_t v450 = (uint64_t)v9 + v440;
        if (!__swift_getEnumTagSinglePayload((uint64_t)v9 + v440, 1, v202)) {
          goto LABEL_157;
        }
        uint64_t v451 = &demangling cache variable for type metadata for Date?;
        goto LABEL_155;
      case 0x16u:
        uint64_t v2664 = v10;
        uint64_t v2593 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v2593;
        uint64_t v2565 = v9[3];
        v8[2] = v9[2];
        v8[3] = v2565;
        uint64_t v264 = v9[5];
        v8[4] = v9[4];
        v8[5] = v264;
        uint64_t v265 = v9[7];
        v8[6] = v9[6];
        v8[7] = v265;
        uint64_t v266 = v9[9];
        v8[8] = v9[8];
        v8[9] = v266;
        uint64_t v267 = v9[11];
        v8[10] = v9[10];
        v8[11] = v267;
        uint64_t v268 = v9[13];
        v8[12] = v9[12];
        v8[13] = v268;
        uint64_t v269 = v9[15];
        v8[14] = v9[14];
        v8[15] = v269;
        *((unsigned char *)v8 + 128) = *((unsigned char *)v9 + 128);
        *(_WORD *)((char *)v8 + 129) = *(_WORD *)((char *)v9 + 129);
        uint64_t v270 = v9[18];
        v8[17] = v9[17];
        v8[18] = v270;
        uint64_t v271 = v9[20];
        v8[19] = v9[19];
        v8[20] = v271;
        uint64_t v272 = v9[22];
        v8[21] = v9[21];
        v8[22] = v272;
        uint64_t v273 = v9[24];
        v8[23] = v9[23];
        v8[24] = v273;
        uint64_t v274 = v9[26];
        v8[25] = v9[25];
        v8[26] = v274;
        uint64_t v275 = v9[28];
        v8[27] = v9[27];
        v8[28] = v275;
        uint64_t v276 = v9[30];
        v8[29] = v9[29];
        v8[30] = v276;
        v8[31] = v9[31];
        uint64_t v277 = type metadata accessor for Party(0);
        uint64_t v278 = *(int *)(v277 + 96);
        uint64_t v2474 = (char *)v8 + v278;
        uint64_t v2480 = v277;
        unint64_t v279 = (char *)v9 + v278;
        uint64_t v280 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v279, 1, v280))
        {
          uint64_t v281 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2474, v279, *(void *)(*(void *)(v281 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v280 - 8) + 16))(v2474, v279, v280);
          __swift_storeEnumTagSinglePayload((uint64_t)v2474, 0, 1, v280);
        }
        uint64_t v13 = a3;
        uint64_t v452 = *(int *)(v2480 + 100);
        uint64_t v453 = (char *)v8 + v452;
        uint64_t v454 = (char *)v9 + v452;
        if (__swift_getEnumTagSinglePayload((uint64_t)v9 + v452, 1, v280))
        {
          uint64_t v455 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v453, v454, *(void *)(*(void *)(v455 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v280 - 8) + 16))(v453, v454, v280);
          __swift_storeEnumTagSinglePayload((uint64_t)v453, 0, 1, v280);
        }
        uint64_t v364 = *(int *)(v2480 + 104);
        goto LABEL_153;
      case 0x17u:
        uint64_t v2664 = v10;
        uint64_t v2627 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v2627;
        uint64_t v2611 = v9[3];
        v8[2] = v9[2];
        v8[3] = v2611;
        uint64_t v2594 = v9[5];
        v8[4] = v9[4];
        v8[5] = v2594;
        uint64_t v2566 = v9[7];
        v8[6] = v9[6];
        v8[7] = v2566;
        uint64_t v282 = v9[9];
        v8[8] = v9[8];
        v8[9] = v282;
        uint64_t v283 = v9[11];
        v8[10] = v9[10];
        v8[11] = v283;
        uint64_t v284 = v9[13];
        v8[12] = v9[12];
        v8[13] = v284;
        uint64_t v285 = v9[15];
        v8[14] = v9[14];
        v8[15] = v285;
        *((unsigned char *)v8 + 128) = *((unsigned char *)v9 + 128);
        *(_WORD *)((char *)v8 + 129) = *(_WORD *)((char *)v9 + 129);
        uint64_t v286 = v9[18];
        v8[17] = v9[17];
        v8[18] = v286;
        uint64_t v287 = v9[20];
        v8[19] = v9[19];
        v8[20] = v287;
        uint64_t v288 = v9[22];
        v8[21] = v9[21];
        v8[22] = v288;
        uint64_t v289 = v9[24];
        v8[23] = v9[23];
        v8[24] = v289;
        uint64_t v290 = v9[26];
        v8[25] = v9[25];
        v8[26] = v290;
        v8[27] = v9[27];
        uint64_t v291 = type metadata accessor for Trip(0);
        uint64_t v292 = *(int *)(v291 + 88);
        uint64_t v2486 = (char *)v8 + v292;
        v2492 = (int *)v291;
        uint64_t v293 = (char *)v9 + v292;
        uint64_t v294 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v293, 1, v294))
        {
          uint64_t v295 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v2486, v293, *(void *)(*(void *)(v295 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v294 - 8) + 16))(v2486, v293, v294);
          __swift_storeEnumTagSinglePayload((uint64_t)v2486, 0, 1, v294);
        }
        uint64_t v13 = a3;
        uint64_t v456 = v2492[23];
        uint64_t v457 = (char *)v8 + v456;
        uint64_t v458 = (char *)v9 + v456;
        if (__swift_getEnumTagSinglePayload((uint64_t)v9 + v456, 1, v294))
        {
          uint64_t v459 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v457, v458, *(void *)(*(void *)(v459 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v294 - 8) + 16))(v457, v458, v294);
          __swift_storeEnumTagSinglePayload((uint64_t)v457, 0, 1, v294);
        }
        uint64_t v647 = v2492[24];
        uint64_t v648 = (char *)v8 + v647;
        uint64_t v649 = (char *)v9 + v647;
        *(void *)uint64_t v648 = *(void *)v649;
        v648[8] = v649[8];
        uint64_t v364 = v2492[25];
LABEL_153:
        uint64_t v449 = (char *)v8 + v364;
        uint64_t v450 = (uint64_t)v9 + v364;
        uint64_t v202 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload(v450, 1, v202))
        {
          uint64_t v451 = &demangling cache variable for type metadata for URL?;
LABEL_155:
          size_t v642 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(v451) - 8) + 64);
          uint64_t v643 = v449;
          uint64_t v644 = (const void *)v450;
LABEL_156:
          memcpy(v643, v644, v642);
        }
        else
        {
LABEL_157:
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v202 - 8) + 16))(v449, v450, v202);
          uint64_t v645 = (uint64_t)v449;
          uint64_t v646 = v202;
LABEL_158:
          __swift_storeEnumTagSinglePayload(v645, 0, 1, v646);
        }
        uint64_t v10 = v2664;
LABEL_160:
        uint64_t v12 = a1;
LABEL_547:
        swift_storeEnumTagMultiPayload();
        uint64_t v2434 = *(int *)(v10 + 20);
        uint64_t v2435 = *(void **)((char *)v9 + v2434);
        *(void *)((char *)v8 + v2434) = v2435;
        uint64_t v2436 = *(int *)(v10 + 24);
        v2437 = (void *)((char *)v8 + v2436);
        v2438 = (void *)((char *)v9 + v2436);
        uint64_t v2439 = v2438[1];
        void *v2437 = *v2438;
        v2437[1] = v2439;
        id v2440 = v2435;
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
        int v3 = v2667;
        break;
      case 0x18u:
        uint64_t v2666 = v10;
        uint64_t v296 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v296;
        uint64_t v297 = v9[3];
        v8[2] = v9[2];
        v8[3] = v297;
        uint64_t v298 = v9[5];
        v8[4] = v9[4];
        v8[5] = v298;
        uint64_t v299 = (int *)type metadata accessor for GlobalItem();
        uint64_t v300 = v299[7];
        uint64_t v301 = (char *)v8 + v300;
        uint64_t v302 = (char *)v9 + v300;
        uint64_t v303 = type metadata accessor for GlobalDialog();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v302, 1, v303))
        {
          uint64_t v304 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
          memcpy(v301, v302, *(void *)(*(void *)(v304 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v303 - 8) + 16))(v301, v302, v303);
          __swift_storeEnumTagSinglePayload((uint64_t)v301, 0, 1, v303);
        }
        uint64_t v13 = a3;
        uint64_t v460 = v299[8];
        uint64_t v461 = (char *)v8 + v460;
        uint64_t v462 = (char *)v9 + v460;
        unint64_t v463 = *((void *)v462 + 1);
        if (v463 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v461 = *(_OWORD *)v462;
        }
        else
        {
          uint64_t v464 = *(void *)v462;
          outlined copy of Data._Representation(*(void *)v462, *((void *)v462 + 1));
          *(void *)uint64_t v461 = v464;
          *((void *)v461 + 1) = v463;
        }
        uint64_t v10 = v2666;
        uint64_t v12 = a1;
        *((unsigned char *)v8 + v299[9]) = *((unsigned char *)v9 + v299[9]);
        uint64_t v465 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
        *(void *)((char *)v8 + *(int *)(v465 + 48)) = *(void *)((char *)v9 + *(int *)(v465 + 48));
        goto LABEL_121;
      case 0x19u:
        uint64_t v305 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v305;
        uint64_t v306 = v9[3];
        v8[2] = v9[2];
        v8[3] = v306;
        uint64_t v307 = v9[5];
        v8[4] = v9[4];
        v8[5] = v307;
        uint64_t v308 = v9[7];
        v8[6] = v9[6];
        v8[7] = v308;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_53:
        swift_bridgeObjectRetain();
LABEL_54:
        uint64_t v13 = a3;
        uint64_t v12 = a1;
        goto LABEL_547;
      case 0x1Au:
        uint64_t v309 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v309;
        uint64_t v310 = v9[3];
        v8[2] = v9[2];
        v8[3] = v310;
        uint64_t v311 = v9[5];
        v8[4] = v9[4];
        v8[5] = v311;
        v8[6] = v9[6];
        uint64_t v312 = (int *)type metadata accessor for Answer(0);
        uint64_t v313 = v312[9];
        uint64_t v2659 = (char *)v8 + v313;
        uint64_t v314 = (char *)v9 + v313;
        uint64_t v315 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v314, 1, v315))
        {
          uint64_t v316 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v2659, v314, *(void *)(*(void *)(v316 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 16))(v2659, v314, v315);
          __swift_storeEnumTagSinglePayload((uint64_t)v2659, 0, 1, v315);
        }
        uint64_t v13 = a3;
        uint64_t v12 = a1;
        *((unsigned char *)v8 + v312[10]) = *((unsigned char *)v9 + v312[10]);
        uint64_t v466 = v312[11];
        long long v467 = (void *)((char *)v8 + v466);
        long long v468 = (void *)((char *)v9 + v466);
        uint64_t v469 = v468[1];
        *long long v467 = *v468;
        v467[1] = v469;
LABEL_121:
        swift_bridgeObjectRetain();
        goto LABEL_547;
      default:
        uint64_t v2663 = v10;
        uint64_t v14 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v14;
        uint64_t v15 = v9[3];
        v8[2] = v9[2];
        v8[3] = v15;
        uint64_t v16 = v9[5];
        v8[4] = v9[4];
        v8[5] = v16;
        uint64_t v17 = v9[7];
        v8[6] = v9[6];
        v8[7] = v17;
        uint64_t v18 = v9[9];
        v8[8] = v9[8];
        v8[9] = v18;
        uint64_t v2648 = v9[11];
        v8[10] = v9[10];
        v8[11] = v2648;
        uint64_t v19 = (int *)type metadata accessor for EmailDocument(0);
        uint64_t v20 = v19[12];
        v2604 = (char *)v8 + v20;
        v2561 = (char *)v9 + v20;
        uint64_t v21 = type metadata accessor for Date();
        v2588 = v8;
        uint64_t v22 = *(void (**)(void))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v2620 = v22;
        uint64_t v2635 = v21;
        ((void (*)(char *, char *, uint64_t))v22)(v2604, v2561, v21);
        uint64_t v8 = v2588;
        *(void *)((char *)v2588 + v19[13]) = *(void *)((char *)v9 + v19[13]);
        *(void *)((char *)v2588 + v19[14]) = *(void *)((char *)v9 + v19[14]);
        *(void *)((char *)v2588 + v19[15]) = *(void *)((char *)v9 + v19[15]);
        *((unsigned char *)v2588 + v19[16]) = *((unsigned char *)v9 + v19[16]);
        *((unsigned char *)v2588 + v19[17]) = *((unsigned char *)v9 + v19[17]);
        uint64_t v23 = v19[18];
        uint64_t v24 = (void *)((char *)v2588 + v23);
        uint64_t v25 = (void *)((char *)v9 + v23);
        uint64_t v26 = v25[1];
        *uint64_t v24 = *v25;
        v24[1] = v26;
        uint64_t v2649 = v19;
        uint64_t v27 = v19[19];
        uint64_t v28 = (void *)((char *)v2588 + v27);
        uint64_t v29 = (char *)v9 + v27;
        uint64_t v30 = *(void *)((char *)v9 + v27);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v30)
        {
          uint64_t v31 = *((void *)v29 + 1);
          uint64_t v32 = *((void *)v29 + 2);
          void *v28 = v30;
          v28[1] = v31;
          uint64_t v33 = *((void *)v29 + 3);
          uint64_t v34 = *((void *)v29 + 4);
          void v28[2] = v32;
          v28[3] = v33;
          v28[4] = v34;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v317 = *((_OWORD *)v29 + 1);
          *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
          *((_OWORD *)v28 + 1) = v317;
          v28[4] = *((void *)v29 + 4);
        }
        uint64_t v318 = v19[20];
        uint64_t v319 = (void *)((char *)v2588 + v318);
        uint64_t v320 = (void *)((char *)v9 + v318);
        uint64_t v321 = v320[1];
        *uint64_t v319 = *v320;
        v319[1] = v321;
        uint64_t v322 = v19[21];
        v323 = (void *)((char *)v2588 + v322);
        uint64_t v324 = (void *)((char *)v9 + v322);
        uint64_t v325 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v324, 1, (uint64_t)v325))
        {
          uint64_t v326 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v323, v324, *(void *)(*(void *)(v326 - 8) + 64));
        }
        else
        {
          uint64_t v470 = v324[1];
          void *v323 = *v324;
          v323[1] = v470;
          uint64_t v471 = v325[5];
          uint64_t v472 = (void *)((char *)v323 + v471);
          uint64_t v473 = (void *)((char *)v324 + v471);
          uint64_t v474 = type metadata accessor for RentalCarReservation(0);
          swift_bridgeObjectRetain();
          v2567 = v323;
          uint64_t v2527 = v324;
          uint64_t v2538 = v325;
          if (__swift_getEnumTagSinglePayload((uint64_t)v473, 1, v474))
          {
            uint64_t v475 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v472, v473, *(void *)(*(void *)(v475 - 8) + 64));
          }
          else
          {
            uint64_t v702 = v473[1];
            *uint64_t v472 = *v473;
            v472[1] = v702;
            uint64_t v703 = v473[3];
            v472[2] = v473[2];
            v472[3] = v703;
            uint64_t v704 = v473[5];
            v472[4] = v473[4];
            v472[5] = v704;
            uint64_t v705 = v473[7];
            v472[6] = v473[6];
            v472[7] = v705;
            uint64_t v706 = v473[9];
            v472[8] = v473[8];
            v472[9] = v706;
            uint64_t v707 = v473[11];
            v472[10] = v473[10];
            v472[11] = v707;
            uint64_t v708 = v473[13];
            v472[12] = v473[12];
            v472[13] = v708;
            uint64_t v709 = v473[15];
            v472[14] = v473[14];
            v472[15] = v709;
            *((unsigned char *)v472 + 128) = *((unsigned char *)v473 + 128);
            *(_WORD *)((char *)v472 + 129) = *(_WORD *)((char *)v473 + 129);
            uint64_t v710 = v473[18];
            v472[17] = v473[17];
            v472[18] = v710;
            uint64_t v711 = v473[20];
            v472[19] = v473[19];
            v472[20] = v711;
            uint64_t v712 = v473[22];
            v472[21] = v473[21];
            v472[22] = v712;
            uint64_t v2447 = v473[24];
            v472[23] = v473[23];
            v472[24] = v2447;
            uint64_t v713 = v473[26];
            v472[25] = v473[25];
            v472[26] = v713;
            uint64_t v714 = v473[28];
            v472[27] = v473[27];
            v472[28] = v714;
            uint64_t v715 = v473[30];
            v472[29] = v473[29];
            v472[30] = v715;
            uint64_t v716 = v473[32];
            v472[31] = v473[31];
            v472[32] = v716;
            uint64_t v717 = v473[34];
            v472[33] = v473[33];
            v472[34] = v717;
            uint64_t v718 = v473[36];
            v472[35] = v473[35];
            v472[36] = v718;
            uint64_t v719 = v473[38];
            v472[37] = v473[37];
            v472[38] = v719;
            uint64_t v720 = v473[40];
            v472[39] = v473[39];
            v472[40] = v720;
            uint64_t v721 = v473[42];
            v472[41] = v473[41];
            v472[42] = v721;
            uint64_t v722 = v473[44];
            v472[43] = v473[43];
            v472[44] = v722;
            uint64_t v723 = v473[46];
            v472[45] = v473[45];
            v472[46] = v723;
            uint64_t v724 = v473[47];
            *((unsigned char *)v472 + 384) = *((unsigned char *)v473 + 384);
            v472[47] = v724;
            uint64_t v725 = v473[50];
            v472[49] = v473[49];
            v472[50] = v725;
            uint64_t v726 = v473[52];
            v472[51] = v473[51];
            v472[52] = v726;
            uint64_t v727 = *(int *)(v474 + 140);
            uint64_t v2510 = (char *)v472 + v727;
            uint64_t v728 = (char *)v473 + v727;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v728, 1, v2635))
            {
              uint64_t v729 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2510, v728, *(void *)(*(void *)(v729 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v2620)(v2510, v728, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v2510, 0, 1, v2635);
            }
            uint64_t v786 = *(int *)(v474 + 144);
            uint64_t v787 = (char *)v472 + v786;
            uint64_t v788 = (char *)v473 + v786;
            if (__swift_getEnumTagSinglePayload((uint64_t)v473 + v786, 1, v2635))
            {
              uint64_t v789 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v787, v788, *(void *)(*(void *)(v789 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v2620)(v787, v788, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v787, 0, 1, v2635);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v472, 0, 1, v474);
            v323 = v2567;
            uint64_t v325 = v2538;
          }
          uint64_t v798 = v325[6];
          uint64_t v799 = (void *)((char *)v323 + v798);
          uint64_t v800 = (void *)((char *)v324 + v798);
          uint64_t v801 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v800, 1, v801))
          {
            uint64_t v802 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v799, v800, *(void *)(*(void *)(v802 - 8) + 64));
          }
          else
          {
            uint64_t v803 = v800[1];
            *uint64_t v799 = *v800;
            v799[1] = v803;
            uint64_t v804 = v800[3];
            v799[2] = v800[2];
            v799[3] = v804;
            uint64_t v805 = v800[5];
            v799[4] = v800[4];
            v799[5] = v805;
            uint64_t v806 = v800[7];
            v799[6] = v800[6];
            v799[7] = v806;
            uint64_t v807 = v800[9];
            v799[8] = v800[8];
            v799[9] = v807;
            uint64_t v808 = v800[11];
            v799[10] = v800[10];
            v799[11] = v808;
            uint64_t v809 = v800[13];
            v799[12] = v800[12];
            v799[13] = v809;
            uint64_t v810 = v800[15];
            v799[14] = v800[14];
            v799[15] = v810;
            *((unsigned char *)v799 + 128) = *((unsigned char *)v800 + 128);
            *(_WORD *)((char *)v799 + 129) = *(_WORD *)((char *)v800 + 129);
            uint64_t v811 = v800[18];
            v799[17] = v800[17];
            v799[18] = v811;
            uint64_t v812 = v800[20];
            v799[19] = v800[19];
            v799[20] = v812;
            uint64_t v813 = v800[22];
            v799[21] = v800[21];
            v799[22] = v813;
            uint64_t v814 = v800[24];
            v799[23] = v800[23];
            v799[24] = v814;
            uint64_t v2501 = (void *)v800[26];
            v799[25] = v800[25];
            v799[26] = v2501;
            uint64_t v815 = v800[28];
            v799[27] = v800[27];
            v799[28] = v815;
            uint64_t v816 = v800[30];
            v799[29] = v800[29];
            v799[30] = v816;
            uint64_t v817 = v800[32];
            v799[31] = v800[31];
            v799[32] = v817;
            uint64_t v818 = v800[34];
            v799[33] = v800[33];
            v799[34] = v818;
            uint64_t v819 = v800[36];
            uint64_t v820 = v800[35];
            *((unsigned char *)v799 + 296) = *((unsigned char *)v800 + 296);
            v799[35] = v820;
            v799[36] = v819;
            uint64_t v821 = *(int *)(v801 + 112);
            uint64_t v2511 = (char *)v799 + v821;
            uint64_t v822 = (char *)v800 + v821;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v822, 1, v2635))
            {
              uint64_t v823 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2511, v822, *(void *)(*(void *)(v823 - 8) + 64));
            }
            else
            {
              v2620();
              __swift_storeEnumTagSinglePayload((uint64_t)v2511, 0, 1, v2635);
            }
            uint64_t v876 = *(int *)(v801 + 116);
            uint64_t v877 = (char *)v799 + v876;
            uint64_t v878 = (char *)v800 + v876;
            if (__swift_getEnumTagSinglePayload((uint64_t)v800 + v876, 1, v2635))
            {
              uint64_t v879 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v877, v878, *(void *)(*(void *)(v879 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v2620)(v877, v878, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v877, 0, 1, v2635);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v799, 0, 1, v801);
            v323 = v2567;
            uint64_t v325 = v2538;
          }
          uint64_t v888 = v325[7];
          uint64_t v889 = (void *)((char *)v323 + v888);
          uint64_t v890 = (void *)((char *)v324 + v888);
          uint64_t v891 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v890, 1, (uint64_t)v891))
          {
            uint64_t v892 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v889, v890, *(void *)(*(void *)(v892 - 8) + 64));
          }
          else
          {
            uint64_t v893 = v890[1];
            void *v889 = *v890;
            v889[1] = v893;
            uint64_t v894 = v890[3];
            v889[2] = v890[2];
            v889[3] = v894;
            uint64_t v895 = v890[5];
            v889[4] = v890[4];
            v889[5] = v895;
            uint64_t v896 = v890[7];
            v889[6] = v890[6];
            v889[7] = v896;
            uint64_t v897 = v890[9];
            v889[8] = v890[8];
            v889[9] = v897;
            uint64_t v898 = v890[11];
            v889[10] = v890[10];
            v889[11] = v898;
            uint64_t v899 = v890[13];
            v889[12] = v890[12];
            v889[13] = v899;
            uint64_t v900 = v890[15];
            v889[14] = v890[14];
            v889[15] = v900;
            *((unsigned char *)v889 + 128) = *((unsigned char *)v890 + 128);
            *(_WORD *)((char *)v889 + 129) = *(_WORD *)((char *)v890 + 129);
            uint64_t v901 = v890[18];
            v889[17] = v890[17];
            v889[18] = v901;
            uint64_t v902 = v890[20];
            v889[19] = v890[19];
            v889[20] = v902;
            uint64_t v903 = v890[22];
            v889[21] = v890[21];
            v889[22] = v903;
            uint64_t v2450 = v890[24];
            v889[23] = v890[23];
            v889[24] = v2450;
            uint64_t v904 = v890[26];
            v889[25] = v890[25];
            v889[26] = v904;
            uint64_t v905 = v890[28];
            v889[27] = v890[27];
            v889[28] = v905;
            uint64_t v2502 = (void *)v890[30];
            v889[29] = v890[29];
            v889[30] = v2502;
            uint64_t v906 = v890[32];
            v889[31] = v890[31];
            v889[32] = v906;
            uint64_t v907 = v890[34];
            v889[33] = v890[33];
            v889[34] = v907;
            uint64_t v908 = v890[36];
            uint64_t v909 = v890[35];
            *((unsigned char *)v889 + 296) = *((unsigned char *)v890 + 296);
            v889[35] = v909;
            v889[36] = v908;
            uint64_t v910 = v890[39];
            v889[38] = v890[38];
            v889[39] = v910;
            uint64_t v911 = v891[29];
            uint64_t v2512 = (char *)v889 + v911;
            uint64_t v912 = (char *)v890 + v911;
            uint64_t v913 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v912, 1, v913))
            {
              uint64_t v914 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2512, v912, *(void *)(*(void *)(v914 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v913 - 8) + 16))(v2512, v912, v913);
              __swift_storeEnumTagSinglePayload((uint64_t)v2512, 0, 1, v913);
            }
            uint64_t v969 = v891[30];
            uint64_t v970 = (void *)((char *)v889 + v969);
            uint64_t v971 = (void *)((char *)v890 + v969);
            uint64_t v972 = v971[1];
            void *v970 = *v971;
            v970[1] = v972;
            uint64_t v973 = v891[31];
            uint64_t v974 = (char *)v889 + v973;
            uint64_t v975 = (char *)v890 + v973;
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v975, 1, v2635))
            {
              uint64_t v976 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v974, v975, *(void *)(*(void *)(v976 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v2620)(v974, v975, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v974, 0, 1, v2635);
            }
            uint64_t v993 = v891[32];
            uint64_t v994 = (char *)v889 + v993;
            uint64_t v995 = (char *)v890 + v993;
            if (__swift_getEnumTagSinglePayload((uint64_t)v890 + v993, 1, v2635))
            {
              uint64_t v996 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v994, v995, *(void *)(*(void *)(v996 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v2620)(v994, v995, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v994, 0, 1, v2635);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v889, 0, 1, (uint64_t)v891);
            v323 = v2567;
            uint64_t v325 = v2538;
          }
          uint64_t v1005 = v325[8];
          uint64_t v1006 = (void *)((char *)v323 + v1005);
          uint64_t v1007 = (void *)((char *)v324 + v1005);
          uint64_t v1008 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1007, 1, v1008))
          {
            uint64_t v1009 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v1006, v1007, *(void *)(*(void *)(v1009 - 8) + 64));
          }
          else
          {
            uint64_t v1010 = v1007[1];
            void *v1006 = *v1007;
            v1006[1] = v1010;
            uint64_t v1011 = v1007[3];
            v1006[2] = v1007[2];
            v1006[3] = v1011;
            uint64_t v1012 = v1007[5];
            v1006[4] = v1007[4];
            v1006[5] = v1012;
            uint64_t v1013 = v1007[7];
            v1006[6] = v1007[6];
            v1006[7] = v1013;
            uint64_t v1014 = v1007[9];
            v1006[8] = v1007[8];
            v1006[9] = v1014;
            uint64_t v1015 = v1007[11];
            v1006[10] = v1007[10];
            v1006[11] = v1015;
            uint64_t v1016 = v1007[13];
            v1006[12] = v1007[12];
            v1006[13] = v1016;
            uint64_t v1017 = v1007[15];
            v1006[14] = v1007[14];
            v1006[15] = v1017;
            *((unsigned char *)v1006 + 128) = *((unsigned char *)v1007 + 128);
            *(_WORD *)((char *)v1006 + 129) = *(_WORD *)((char *)v1007 + 129);
            uint64_t v1018 = v1007[18];
            v1006[17] = v1007[17];
            v1006[18] = v1018;
            uint64_t v1019 = v1007[20];
            v1006[19] = v1007[19];
            v1006[20] = v1019;
            uint64_t v1020 = v1007[22];
            v1006[21] = v1007[21];
            v1006[22] = v1020;
            uint64_t v1021 = v1007[24];
            v1006[23] = v1007[23];
            v1006[24] = v1021;
            uint64_t v1022 = v1007[26];
            v1006[25] = v1007[25];
            v1006[26] = v1022;
            uint64_t v1023 = v1007[28];
            v1006[27] = v1007[27];
            v1006[28] = v1023;
            uint64_t v1024 = v1007[30];
            v1006[29] = v1007[29];
            v1006[30] = v1024;
            uint64_t v1025 = v1007[32];
            v1006[31] = v1007[31];
            v1006[32] = v1025;
            uint64_t v1027 = v1007[33];
            uint64_t v1026 = v1007[34];
            *((unsigned char *)v1006 + 280) = *((unsigned char *)v1007 + 280);
            v1006[33] = v1027;
            v1006[34] = v1026;
            uint64_t v1028 = v1007[37];
            v1006[36] = v1007[36];
            v1006[37] = v1028;
            uint64_t v1029 = *(int *)(v1008 + 108);
            uint64_t v2514 = (char *)v1006 + v1029;
            uint64_t v1030 = (char *)v1007 + v1029;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1030, 1, v2635))
            {
              uint64_t v1031 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2514, v1030, *(void *)(*(void *)(v1031 - 8) + 64));
            }
            else
            {
              v2620();
              __swift_storeEnumTagSinglePayload((uint64_t)v2514, 0, 1, v2635);
            }
            uint64_t v1086 = *(int *)(v1008 + 112);
            uint64_t v1087 = (char *)v1006 + v1086;
            uint64_t v1088 = (char *)v1007 + v1086;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1007 + v1086, 1, v2635))
            {
              uint64_t v1089 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1087, v1088, *(void *)(*(void *)(v1089 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v2620)(v1087, v1088, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v1087, 0, 1, v2635);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v1006, 0, 1, v1008);
            v323 = v2567;
            uint64_t v325 = v2538;
          }
          uint64_t v1098 = v325[9];
          long long v1099 = (void *)((char *)v323 + v1098);
          uint64_t v1100 = (void *)((char *)v324 + v1098);
          uint64_t v1101 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1100, 1, (uint64_t)v1101))
          {
            uint64_t v1102 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v1099, v1100, *(void *)(*(void *)(v1102 - 8) + 64));
          }
          else
          {
            uint64_t v1103 = v1100[1];
            void *v1099 = *v1100;
            v1099[1] = v1103;
            uint64_t v1104 = v1100[3];
            v1099[2] = v1100[2];
            v1099[3] = v1104;
            uint64_t v1105 = v1100[5];
            v1099[4] = v1100[4];
            v1099[5] = v1105;
            uint64_t v1106 = v1100[7];
            v1099[6] = v1100[6];
            v1099[7] = v1106;
            uint64_t v1107 = v1100[9];
            v1099[8] = v1100[8];
            v1099[9] = v1107;
            uint64_t v1108 = v1100[11];
            v1099[10] = v1100[10];
            v1099[11] = v1108;
            uint64_t v1109 = v1100[13];
            v1099[12] = v1100[12];
            v1099[13] = v1109;
            uint64_t v1110 = v1100[15];
            v1099[14] = v1100[14];
            v1099[15] = v1110;
            *((unsigned char *)v1099 + 128) = *((unsigned char *)v1100 + 128);
            *(_WORD *)((char *)v1099 + 129) = *(_WORD *)((char *)v1100 + 129);
            uint64_t v1111 = v1100[18];
            v1099[17] = v1100[17];
            v1099[18] = v1111;
            uint64_t v1112 = v1100[20];
            v1099[19] = v1100[19];
            v1099[20] = v1112;
            uint64_t v1113 = v1100[22];
            v1099[21] = v1100[21];
            v1099[22] = v1113;
            uint64_t v1114 = v1100[24];
            v1099[23] = v1100[23];
            v1099[24] = v1114;
            uint64_t v1115 = v1100[26];
            v1099[25] = v1100[25];
            v1099[26] = v1115;
            uint64_t v1116 = v1100[28];
            v1099[27] = v1100[27];
            v1099[28] = v1116;
            uint64_t v1117 = v1100[30];
            v1099[29] = v1100[29];
            v1099[30] = v1117;
            v1099[31] = v1100[31];
            uint64_t v1118 = v1101[24];
            uint64_t v2515 = (char *)v1099 + v1118;
            uint64_t v1119 = (char *)v1100 + v1118;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1119, 1, v2635))
            {
              uint64_t v1120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2515, v1119, *(void *)(*(void *)(v1120 - 8) + 64));
            }
            else
            {
              v2620();
              __swift_storeEnumTagSinglePayload((uint64_t)v2515, 0, 1, v2635);
            }
            uint64_t v1167 = v1101[25];
            uint64_t v1168 = (char *)v1099 + v1167;
            uint64_t v1169 = (char *)v1100 + v1167;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1100 + v1167, 1, v2635))
            {
              uint64_t v1170 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1168, v1169, *(void *)(*(void *)(v1170 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v2620)(v1168, v1169, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v1168, 0, 1, v2635);
            }
            uint64_t v1179 = v1101[26];
            uint64_t v1180 = (char *)v1099 + v1179;
            uint64_t v1181 = (char *)v1100 + v1179;
            uint64_t v1182 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1181, 1, v1182))
            {
              uint64_t v1183 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1180, v1181, *(void *)(*(void *)(v1183 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1182 - 8) + 16))(v1180, v1181, v1182);
              __swift_storeEnumTagSinglePayload((uint64_t)v1180, 0, 1, v1182);
            }
            uint64_t v324 = v2527;
            __swift_storeEnumTagSinglePayload((uint64_t)v1099, 0, 1, (uint64_t)v1101);
            v323 = v2567;
            uint64_t v325 = v2538;
          }
          uint64_t v1193 = v325[10];
          uint64_t v1194 = (void *)((char *)v323 + v1193);
          uint64_t v1195 = (void *)((char *)v324 + v1193);
          uint64_t v1196 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1195, 1, (uint64_t)v1196))
          {
            uint64_t v1197 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v1194, v1195, *(void *)(*(void *)(v1197 - 8) + 64));
          }
          else
          {
            uint64_t v1198 = v1195[1];
            *uint64_t v1194 = *v1195;
            v1194[1] = v1198;
            uint64_t v1199 = v1195[3];
            v1194[2] = v1195[2];
            v1194[3] = v1199;
            uint64_t v1200 = v1195[5];
            v1194[4] = v1195[4];
            v1194[5] = v1200;
            uint64_t v1201 = v1195[7];
            v1194[6] = v1195[6];
            v1194[7] = v1201;
            uint64_t v1202 = v1195[9];
            v1194[8] = v1195[8];
            v1194[9] = v1202;
            uint64_t v1203 = v1195[11];
            v1194[10] = v1195[10];
            v1194[11] = v1203;
            uint64_t v1204 = v1195[13];
            v1194[12] = v1195[12];
            v1194[13] = v1204;
            uint64_t v1205 = v1195[15];
            v1194[14] = v1195[14];
            v1194[15] = v1205;
            *((unsigned char *)v1194 + 128) = *((unsigned char *)v1195 + 128);
            *(_WORD *)((char *)v1194 + 129) = *(_WORD *)((char *)v1195 + 129);
            uint64_t v1206 = v1195[18];
            v1194[17] = v1195[17];
            v1194[18] = v1206;
            uint64_t v1207 = v1195[20];
            v1194[19] = v1195[19];
            v1194[20] = v1207;
            uint64_t v1208 = v1195[22];
            v1194[21] = v1195[21];
            v1194[22] = v1208;
            uint64_t v1209 = v1195[24];
            v1194[23] = v1195[23];
            v1194[24] = v1209;
            uint64_t v1210 = v1195[26];
            v1194[25] = v1195[25];
            v1194[26] = v1210;
            v1194[27] = v1195[27];
            uint64_t v1211 = v1196[22];
            uint64_t v2516 = (char *)v1194 + v1211;
            uint64_t v1212 = (char *)v1195 + v1211;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1212, 1, v2635))
            {
              uint64_t v1213 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2516, v1212, *(void *)(*(void *)(v1213 - 8) + 64));
            }
            else
            {
              v2620();
              __swift_storeEnumTagSinglePayload((uint64_t)v2516, 0, 1, v2635);
            }
            uint64_t v1256 = v1196[23];
            uint64_t v1257 = (char *)v1194 + v1256;
            uint64_t v1258 = (char *)v1195 + v1256;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1195 + v1256, 1, v2635))
            {
              uint64_t v1259 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1257, v1258, *(void *)(*(void *)(v1259 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v2620)(v1257, v1258, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v1257, 0, 1, v2635);
            }
            uint64_t v1268 = v1196[24];
            uint64_t v1269 = (char *)v1194 + v1268;
            uint64_t v1270 = (char *)v1195 + v1268;
            *(void *)uint64_t v1269 = *(void *)v1270;
            v1269[8] = v1270[8];
            uint64_t v1271 = v1196[25];
            uint64_t v1272 = (char *)v1194 + v1271;
            uint64_t v1273 = (char *)v1195 + v1271;
            uint64_t v1274 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1273, 1, v1274))
            {
              uint64_t v1275 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1272, v1273, *(void *)(*(void *)(v1275 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1274 - 8) + 16))(v1272, v1273, v1274);
              __swift_storeEnumTagSinglePayload((uint64_t)v1272, 0, 1, v1274);
            }
            uint64_t v324 = v2527;
            __swift_storeEnumTagSinglePayload((uint64_t)v1194, 0, 1, (uint64_t)v1196);
            v323 = v2567;
            uint64_t v325 = v2538;
          }
          uint64_t v1291 = v325[11];
          uint64_t v1292 = (void *)((char *)v323 + v1291);
          uint64_t v1293 = (void *)((char *)v324 + v1291);
          uint64_t v1294 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1293, 1, (uint64_t)v1294))
          {
            uint64_t v1295 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v1292, v1293, *(void *)(*(void *)(v1295 - 8) + 64));
          }
          else
          {
            uint64_t v1296 = v1293[1];
            *uint64_t v1292 = *v1293;
            v1292[1] = v1296;
            uint64_t v1297 = v1293[3];
            v1292[2] = v1293[2];
            v1292[3] = v1297;
            uint64_t v1298 = v1293[5];
            v1292[4] = v1293[4];
            v1292[5] = v1298;
            uint64_t v1299 = v1293[7];
            v1292[6] = v1293[6];
            v1292[7] = v1299;
            uint64_t v1300 = v1293[9];
            v1292[8] = v1293[8];
            v1292[9] = v1300;
            uint64_t v1301 = v1293[11];
            v1292[10] = v1293[10];
            v1292[11] = v1301;
            *((unsigned char *)v1292 + 96) = *((unsigned char *)v1293 + 96);
            uint64_t v1302 = v1293[14];
            v1292[13] = v1293[13];
            v1292[14] = v1302;
            uint64_t v1303 = v1294[13];
            uint64_t v2517 = (char *)v1292 + v1303;
            uint64_t v2476 = (char *)v1293 + v1303;
            uint64_t v1304 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2476, 1, v1304))
            {
              uint64_t v1305 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v2517, v2476, *(void *)(*(void *)(v1305 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1304 - 8) + 16))(v2517, v2476, v1304);
              __swift_storeEnumTagSinglePayload((uint64_t)v2517, 0, 1, v1304);
            }
            uint64_t v1336 = v1294[14];
            uint64_t v1337 = (char *)v1292 + v1336;
            uint64_t v1338 = (char *)v1293 + v1336;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1293 + v1336, 1, v1304))
            {
              uint64_t v1339 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1337, v1338, *(void *)(*(void *)(v1339 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1304 - 8) + 16))(v1337, v1338, v1304);
              __swift_storeEnumTagSinglePayload((uint64_t)v1337, 0, 1, v1304);
            }
            uint64_t v1348 = v1294[15];
            uint64_t v1349 = (void *)((char *)v1292 + v1348);
            uint64_t v1350 = (void *)((char *)v1293 + v1348);
            uint64_t v1351 = v1350[1];
            void *v1349 = *v1350;
            v1349[1] = v1351;
            uint64_t v1352 = v1294[16];
            uint64_t v1353 = (void *)((char *)v1292 + v1352);
            uint64_t v1354 = (void *)((char *)v1293 + v1352);
            uint64_t v2518 = (void *)v1354[1];
            *uint64_t v1353 = *v1354;
            v1353[1] = v2518;
            uint64_t v1355 = v1294[17];
            uint64_t v1356 = (void *)((char *)v1292 + v1355);
            uint64_t v1357 = (void *)((char *)v1293 + v1355);
            uint64_t v1358 = v1357[1];
            *uint64_t v1356 = *v1357;
            v1356[1] = v1358;
            uint64_t v1359 = v1294[18];
            uint64_t v2495 = (char *)v1293 + v1359;
            uint64_t v2503 = (char *)v1292 + v1359;
            uint64_t v1360 = type metadata accessor for DateComponents();
            uint64_t v1361 = *(void (**)(char *, char *, uint64_t))(*(void *)(v1360 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1361(v2503, v2495, v1360);
            v1361((char *)v1292 + v1294[19], (char *)v1293 + v1294[19], v1360);
            uint64_t v1362 = v1294[20];
            uint64_t v1363 = (void *)((char *)v1292 + v1362);
            uint64_t v1364 = (void *)((char *)v1293 + v1362);
            uint64_t v1365 = v1364[1];
            void *v1363 = *v1364;
            v1363[1] = v1365;
            uint64_t v1366 = v1294[21];
            uint64_t v1367 = (void *)((char *)v1292 + v1366);
            uint64_t v1368 = (void *)((char *)v1293 + v1366);
            uint64_t v2481 = v1368[1];
            void *v1367 = *v1368;
            v1367[1] = v2481;
            uint64_t v1369 = v1294[22];
            uint64_t v1370 = (void *)((char *)v1292 + v1369);
            uint64_t v1371 = (void *)((char *)v1293 + v1369);
            uint64_t v1372 = v1371[1];
            void *v1370 = *v1371;
            v1370[1] = v1372;
            uint64_t v1373 = v1294[23];
            uint64_t v1374 = (void *)((char *)v1292 + v1373);
            uint64_t v1375 = (void *)((char *)v1293 + v1373);
            uint64_t v2519 = (void *)v1375[1];
            void *v1374 = *v1375;
            v1374[1] = v2519;
            uint64_t v1376 = v1294[24];
            v1377 = (void *)((char *)v1292 + v1376);
            uint64_t v1378 = (void *)((char *)v1293 + v1376);
            uint64_t v2496 = v1378[1];
            void *v1377 = *v1378;
            v1377[1] = v2496;
            uint64_t v1379 = v1294[25];
            uint64_t v1380 = (void *)((char *)v1292 + v1379);
            v1381 = (void *)((char *)v1293 + v1379);
            uint64_t v2488 = (void *)v1381[1];
            *uint64_t v1380 = *v1381;
            v1380[1] = v2488;
            uint64_t v1382 = v1294[26];
            uint64_t v1383 = (void *)((char *)v1292 + v1382);
            uint64_t v1384 = (void *)((char *)v1293 + v1382);
            uint64_t v2477 = (void *)v1384[1];
            *uint64_t v1383 = *v1384;
            v1383[1] = v2477;
            uint64_t v1385 = v1294[27];
            uint64_t v1386 = (void *)((char *)v1292 + v1385);
            uint64_t v1387 = (void *)((char *)v1293 + v1385);
            uint64_t v2470 = v1387[1];
            *uint64_t v1386 = *v1387;
            v1386[1] = v2470;
            uint64_t v1388 = v1294[28];
            uint64_t v1389 = (void *)((char *)v1292 + v1388);
            uint64_t v1390 = (void *)((char *)v1293 + v1388);
            uint64_t v2466 = (void *)v1390[1];
            *uint64_t v1389 = *v1390;
            v1389[1] = v2466;
            uint64_t v1391 = v1294[29];
            uint64_t v1392 = (void *)((char *)v1292 + v1391);
            uint64_t v1393 = (void *)((char *)v1293 + v1391);
            v2462 = (void *)v1393[1];
            void *v1392 = *v1393;
            v1392[1] = v2462;
            uint64_t v1394 = v1294[30];
            uint64_t v1395 = (void *)((char *)v1292 + v1394);
            uint64_t v1396 = (void *)((char *)v1293 + v1394);
            uint64_t v2459 = (void *)v1396[1];
            void *v1395 = *v1396;
            v1395[1] = v2459;
            uint64_t v1397 = v1294[31];
            uint64_t v1398 = (void *)((char *)v1292 + v1397);
            v1399 = (void *)((char *)v1293 + v1397);
            uint64_t v2456 = v1399[1];
            *uint64_t v1398 = *v1399;
            v1398[1] = v2456;
            uint64_t v1400 = v1294[32];
            uint64_t v1401 = (void *)((char *)v1292 + v1400);
            uint64_t v1402 = (void *)((char *)v1293 + v1400);
            uint64_t v2454 = v1402[1];
            void *v1401 = *v1402;
            v1401[1] = v2454;
            *(void *)((char *)v1292 + v1294[33]) = *(void *)((char *)v1293 + v1294[33]);
            *(void *)((char *)v1292 + v1294[34]) = *(void *)((char *)v1293 + v1294[34]);
            uint64_t v1403 = v1294[35];
            uint64_t v1404 = (void *)((char *)v1292 + v1403);
            uint64_t v1405 = (void *)((char *)v1293 + v1403);
            uint64_t v1406 = v1405[1];
            *uint64_t v1404 = *v1405;
            v1404[1] = v1406;
            uint64_t v1407 = v1294[36];
            uint64_t v1408 = (void *)((char *)v1292 + v1407);
            uint64_t v1409 = (void *)((char *)v1293 + v1407);
            uint64_t v1410 = v1409[1];
            void *v1408 = *v1409;
            v1408[1] = v1410;
            uint64_t v1411 = v1294[37];
            uint64_t v1412 = (void *)((char *)v1292 + v1411);
            uint64_t v1413 = (void *)((char *)v1293 + v1411);
            uint64_t v1414 = v1413[1];
            void *v1412 = *v1413;
            v1412[1] = v1414;
            uint64_t v1415 = v1294[38];
            uint64_t v2504 = (char *)v1292 + v1415;
            uint64_t v1416 = (char *)v1293 + v1415;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1416, 1, v2635))
            {
              uint64_t v1417 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v2504, v1416, *(void *)(*(void *)(v1417 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v2620)(v2504, v1416, v2635);
              __swift_storeEnumTagSinglePayload((uint64_t)v2504, 0, 1, v2635);
            }
            uint64_t v1558 = v1294[39];
            uint64_t v1559 = (void *)((char *)v1292 + v1558);
            uint64_t v1560 = (void *)((char *)v1293 + v1558);
            uint64_t v1561 = v1560[1];
            void *v1559 = *v1560;
            v1559[1] = v1561;
            uint64_t v1562 = v1294[40];
            uint64_t v1563 = (void *)((char *)v1292 + v1562);
            uint64_t v1564 = (void *)((char *)v1293 + v1562);
            uint64_t v1565 = v1564[1];
            *uint64_t v1563 = *v1564;
            v1563[1] = v1565;
            uint64_t v1566 = v1294[41];
            uint64_t v1567 = (char *)v1292 + v1566;
            uint64_t v1568 = (char *)v1293 + v1566;
            v1567[8] = v1568[8];
            *(void *)uint64_t v1567 = *(void *)v1568;
            uint64_t v1569 = v1294[42];
            uint64_t v1570 = (void *)((char *)v1292 + v1569);
            uint64_t v1571 = (void *)((char *)v1293 + v1569);
            uint64_t v1572 = v1571[1];
            *uint64_t v1570 = *v1571;
            v1570[1] = v1572;
            uint64_t v1573 = v1294[43];
            uint64_t v1574 = (char *)v1292 + v1573;
            uint64_t v1575 = (char *)v1293 + v1573;
            *(_OWORD *)uint64_t v1574 = *(_OWORD *)v1575;
            *(void *)(v1574 + 13) = *(void *)(v1575 + 13);
            uint64_t v1576 = v1294[44];
            uint64_t v1577 = (void *)((char *)v1292 + v1576);
            uint64_t v1578 = (void *)((char *)v1293 + v1576);
            uint64_t v1579 = v1578[1];
            void *v1577 = *v1578;
            v1577[1] = v1579;
            uint64_t v1580 = v1294[45];
            uint64_t v1581 = (void *)((char *)v1292 + v1580);
            uint64_t v1582 = (void *)((char *)v1293 + v1580);
            uint64_t v1583 = v1582[1];
            void *v1581 = *v1582;
            v1581[1] = v1583;
            uint64_t v1584 = v1294[46];
            v1585 = (void *)((char *)v1292 + v1584);
            uint64_t v1586 = (void *)((char *)v1293 + v1584);
            uint64_t v1587 = v1586[1];
            void *v1585 = *v1586;
            v1585[1] = v1587;
            uint64_t v1588 = v1294[47];
            uint64_t v1589 = (void *)((char *)v1292 + v1588);
            uint64_t v1590 = (void *)((char *)v1293 + v1588);
            uint64_t v1591 = v1590[1];
            void *v1589 = *v1590;
            v1589[1] = v1591;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1292, 0, 1, (uint64_t)v1294);
            v323 = v2567;
            uint64_t v324 = v2527;
            uint64_t v325 = v2538;
          }
          uint64_t v1592 = v325[12];
          uint64_t v1593 = (void *)((char *)v323 + v1592);
          uint64_t v1594 = (void *)((char *)v324 + v1592);
          uint64_t v1595 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1594, 1, (uint64_t)v1595))
          {
            uint64_t v1596 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v1593, v1594, *(void *)(*(void *)(v1596 - 8) + 64));
          }
          else
          {
            uint64_t v1597 = v1594[1];
            *uint64_t v1593 = *v1594;
            v1593[1] = v1597;
            uint64_t v1598 = v1594[3];
            v1593[2] = v1594[2];
            v1593[3] = v1598;
            uint64_t v1599 = v1594[5];
            v1593[4] = v1594[4];
            v1593[5] = v1599;
            uint64_t v1600 = v1594[7];
            v1593[6] = v1594[6];
            v1593[7] = v1600;
            uint64_t v1601 = v1594[9];
            v1593[8] = v1594[8];
            v1593[9] = v1601;
            uint64_t v1602 = v1594[11];
            v1593[10] = v1594[10];
            v1593[11] = v1602;
            *((unsigned char *)v1593 + 96) = *((unsigned char *)v1594 + 96);
            uint64_t v1603 = v1594[14];
            v1593[13] = v1594[13];
            v1593[14] = v1603;
            uint64_t v1604 = v1594[16];
            v1593[15] = v1594[15];
            v1593[16] = v1604;
            uint64_t v1605 = v1595[14];
            uint64_t v2523 = (char *)v1593 + v1605;
            v2473 = (char *)v1594 + v1605;
            uint64_t v1606 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v2473, 1, v1606))
            {
              uint64_t v1607 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2523, v2473, *(void *)(*(void *)(v1607 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1606 - 8) + 16))(v2523, v2473, v1606);
              __swift_storeEnumTagSinglePayload((uint64_t)v2523, 0, 1, v1606);
            }
            uint64_t v1708 = v1595[15];
            uint64_t v1709 = (char *)v1593 + v1708;
            uint64_t v1710 = (char *)v1594 + v1708;
            if (__swift_getEnumTagSinglePayload((uint64_t)v1594 + v1708, 1, v1606))
            {
              uint64_t v1711 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1709, v1710, *(void *)(*(void *)(v1711 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1606 - 8) + 16))(v1709, v1710, v1606);
              __swift_storeEnumTagSinglePayload((uint64_t)v1709, 0, 1, v1606);
            }
            uint64_t v1720 = v1595[16];
            uint64_t v1721 = (void *)((char *)v1593 + v1720);
            uint64_t v1722 = (void *)((char *)v1594 + v1720);
            uint64_t v1723 = v1722[1];
            *uint64_t v1721 = *v1722;
            v1721[1] = v1723;
            uint64_t v1724 = v1595[17];
            uint64_t v1725 = (void *)((char *)v1593 + v1724);
            uint64_t v1726 = (void *)((char *)v1594 + v1724);
            uint64_t v1727 = v1726[1];
            *uint64_t v1725 = *v1726;
            v1725[1] = v1727;
            uint64_t v1728 = v1595[18];
            uint64_t v1729 = (void *)((char *)v1593 + v1728);
            uint64_t v1730 = (void *)((char *)v1594 + v1728);
            uint64_t v2524 = (void *)v1730[1];
            *uint64_t v1729 = *v1730;
            v1729[1] = v2524;
            uint64_t v1731 = v1595[19];
            uint64_t v1732 = (void *)((char *)v1593 + v1731);
            uint64_t v1733 = (void *)((char *)v1594 + v1731);
            uint64_t v2507 = (void *)v1733[1];
            *uint64_t v1732 = *v1733;
            v1732[1] = v2507;
            uint64_t v1734 = v1595[20];
            uint64_t v1735 = (void *)((char *)v1593 + v1734);
            uint64_t v1736 = (void *)((char *)v1594 + v1734);
            uint64_t v2485 = v1736[1];
            *uint64_t v1735 = *v1736;
            v1735[1] = v2485;
            *(void *)((char *)v1593 + v1595[21]) = *(void *)((char *)v1594 + v1595[21]);
            *(void *)((char *)v1593 + v1595[22]) = *(void *)((char *)v1594 + v1595[22]);
            uint64_t v1737 = v1595[23];
            uint64_t v1738 = (char *)v1593 + v1737;
            uint64_t v1739 = (char *)v1594 + v1737;
            *(void *)uint64_t v1738 = *(void *)v1739;
            v1738[8] = v1739[8];
            uint64_t v1740 = v1595[24];
            uint64_t v1741 = (char *)v1593 + v1740;
            uint64_t v1742 = (char *)v1594 + v1740;
            *(void *)uint64_t v1741 = *(void *)v1742;
            v1741[8] = v1742[8];
            uint64_t v1743 = v1595[25];
            uint64_t v1744 = (void *)((char *)v1593 + v1743);
            uint64_t v1745 = (void *)((char *)v1594 + v1743);
            uint64_t v1746 = v1745[1];
            void *v1744 = *v1745;
            v1744[1] = v1746;
            uint64_t v1747 = v1595[26];
            uint64_t v1748 = (void *)((char *)v1593 + v1747);
            uint64_t v1749 = (void *)((char *)v1594 + v1747);
            uint64_t v1750 = v1749[1];
            void *v1748 = *v1749;
            v1748[1] = v1750;
            uint64_t v1751 = v1595[27];
            uint64_t v1752 = (void *)((char *)v1593 + v1751);
            uint64_t v1753 = (void *)((char *)v1594 + v1751);
            uint64_t v1754 = v1753[1];
            *uint64_t v1752 = *v1753;
            v1752[1] = v1754;
            uint64_t v1755 = v1595[28];
            uint64_t v1756 = (void *)((char *)v1593 + v1755);
            v1757 = (void *)((char *)v1594 + v1755);
            uint64_t v1758 = v1757[1];
            void *v1756 = *v1757;
            v1756[1] = v1758;
            uint64_t v1759 = v1595[29];
            uint64_t v1760 = (char *)v1593 + v1759;
            uint64_t v1761 = (char *)v1594 + v1759;
            *(void *)uint64_t v1760 = *(void *)v1761;
            v1760[8] = v1761[8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1593, 0, 1, (uint64_t)v1595);
            v323 = v2567;
            uint64_t v324 = v2527;
            uint64_t v325 = v2538;
          }
          uint64_t v1762 = v325[13];
          uint64_t v1763 = (void *)((char *)v323 + v1762);
          uint64_t v1764 = (void *)((char *)v324 + v1762);
          uint64_t v1765 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v1764, 1, (uint64_t)v1765))
          {
            uint64_t v1766 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v1763, v1764, *(void *)(*(void *)(v1766 - 8) + 64));
          }
          else
          {
            uint64_t v1767 = v1764[1];
            void *v1763 = *v1764;
            v1763[1] = v1767;
            uint64_t v2525 = (void *)v1764[3];
            v1763[2] = v1764[2];
            v1763[3] = v2525;
            uint64_t v1768 = v1764[5];
            v1763[4] = v1764[4];
            v1763[5] = v1768;
            uint64_t v1769 = v1764[7];
            v1763[6] = v1764[6];
            v1763[7] = v1769;
            uint64_t v1770 = v1764[9];
            v1763[8] = v1764[8];
            v1763[9] = v1770;
            uint64_t v1771 = v1764[11];
            v1763[10] = v1764[10];
            v1763[11] = v1771;
            *((unsigned char *)v1763 + 96) = *((unsigned char *)v1764 + 96);
            uint64_t v1772 = v1764[14];
            v1763[13] = v1764[13];
            v1763[14] = v1772;
            uint64_t v1773 = v1764[16];
            v1763[15] = v1764[15];
            v1763[16] = v1773;
            uint64_t v1774 = v1765[14];
            uint64_t v2535 = (char *)v1763 + v1774;
            uint64_t v1775 = (char *)v1764 + v1774;
            uint64_t v1776 = type metadata accessor for DateComponents();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v1775, 1, v1776))
            {
              uint64_t v1777 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v2535, v1775, *(void *)(*(void *)(v1777 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1776 - 8) + 16))(v2535, v1775, v1776);
              __swift_storeEnumTagSinglePayload((uint64_t)v2535, 0, 1, v1776);
            }
            uint64_t v1894 = v1765[15];
            uint64_t v1895 = (void *)((char *)v1763 + v1894);
            uint64_t v1896 = (void *)((char *)v1764 + v1894);
            uint64_t v1897 = v1896[1];
            *uint64_t v1895 = *v1896;
            v1895[1] = v1897;
            uint64_t v1898 = v1765[16];
            uint64_t v1899 = (void *)((char *)v1763 + v1898);
            uint64_t v1900 = (void *)((char *)v1764 + v1898);
            uint64_t v1901 = v1900[1];
            *uint64_t v1899 = *v1900;
            v1899[1] = v1901;
            uint64_t v1902 = v1765[17];
            uint64_t v1903 = (void *)((char *)v1763 + v1902);
            uint64_t v1904 = (void *)((char *)v1764 + v1902);
            uint64_t v2537 = (void *)v1904[1];
            *uint64_t v1903 = *v1904;
            v1903[1] = v2537;
            uint64_t v1905 = v1765[18];
            uint64_t v1906 = (void *)((char *)v1763 + v1905);
            uint64_t v1907 = (void *)((char *)v1764 + v1905);
            uint64_t v2526 = (void *)v1907[1];
            *uint64_t v1906 = *v1907;
            v1906[1] = v2526;
            uint64_t v1908 = v1765[19];
            v1909 = (void *)((char *)v1763 + v1908);
            uint64_t v1910 = (void *)((char *)v1764 + v1908);
            uint64_t v1911 = v1910[1];
            void *v1909 = *v1910;
            v1909[1] = v1911;
            *(void *)((char *)v1763 + v1765[20]) = *(void *)((char *)v1764 + v1765[20]);
            uint64_t v1912 = v1765[21];
            v1913 = (void *)((char *)v1763 + v1912);
            uint64_t v1914 = (void *)((char *)v1764 + v1912);
            uint64_t v1915 = v1914[1];
            void *v1913 = *v1914;
            v1913[1] = v1915;
            uint64_t v1916 = v1765[22];
            uint64_t v1917 = (void *)((char *)v1763 + v1916);
            uint64_t v1918 = (void *)((char *)v1764 + v1916);
            uint64_t v1919 = v1918[1];
            *uint64_t v1917 = *v1918;
            v1917[1] = v1919;
            uint64_t v1920 = v1765[23];
            uint64_t v1921 = (void *)((char *)v1763 + v1920);
            uint64_t v1922 = (void *)((char *)v1764 + v1920);
            uint64_t v1923 = v1922[1];
            *uint64_t v1921 = *v1922;
            v1921[1] = v1923;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v1763, 0, 1, (uint64_t)v1765);
            v323 = v2567;
            uint64_t v325 = v2538;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v323, 0, 1, (uint64_t)v325);
        }
        uint64_t v1924 = v2649[22];
        uint64_t v1925 = (void *)((char *)v2588 + v1924);
        uint64_t v1926 = (void *)((char *)v9 + v1924);
        uint64_t v1927 = type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1926, 1, v1927))
        {
          uint64_t v1928 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v1925, v1926, *(void *)(*(void *)(v1928 - 8) + 64));
        }
        else
        {
          uint64_t v1929 = v1926[1];
          *uint64_t v1925 = *v1926;
          v1925[1] = v1929;
          uint64_t v1930 = v1926[3];
          v1925[2] = v1926[2];
          v1925[3] = v1930;
          uint64_t v1931 = v1926[5];
          v1925[4] = v1926[4];
          v1925[5] = v1931;
          uint64_t v1932 = v1926[7];
          v1925[6] = v1926[6];
          v1925[7] = v1932;
          uint64_t v1933 = v1926[9];
          v1925[8] = v1926[8];
          v1925[9] = v1933;
          uint64_t v1934 = (int *)v1927;
          uint64_t v1935 = v1926[11];
          v1925[10] = v1926[10];
          v1925[11] = v1935;
          v2582 = v1934;
          uint64_t v1936 = v1934[10];
          uint64_t v2557 = (char *)v1925 + v1936;
          uint64_t v1937 = (char *)v1926 + v1936;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1937, 1, v2635))
          {
            uint64_t v1938 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2557, v1937, *(void *)(*(void *)(v1938 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v2620)(v2557, v1937, v2635);
            __swift_storeEnumTagSinglePayload((uint64_t)v2557, 0, 1, v2635);
          }
          uint64_t v1939 = v2582[11];
          v1940 = (char *)v1925 + v1939;
          uint64_t v1941 = (char *)v1926 + v1939;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1926 + v1939, 1, v2635))
          {
            uint64_t v1942 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1940, v1941, *(void *)(*(void *)(v1942 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v2620)(v1940, v1941, v2635);
            __swift_storeEnumTagSinglePayload((uint64_t)v1940, 0, 1, v2635);
          }
          uint64_t v1943 = v2582[12];
          uint64_t v1944 = (void *)((char *)v1925 + v1943);
          uint64_t v1945 = (void *)((char *)v1926 + v1943);
          uint64_t v1946 = v1945[1];
          *uint64_t v1944 = *v1945;
          v1944[1] = v1946;
          uint64_t v1947 = v2582[13];
          uint64_t v1948 = (void *)((char *)v1925 + v1947);
          uint64_t v1949 = (void *)((char *)v1926 + v1947);
          uint64_t v1950 = v1949[1];
          *uint64_t v1948 = *v1949;
          v1948[1] = v1950;
          uint64_t v1951 = v2582[14];
          uint64_t v1952 = (void *)((char *)v1925 + v1951);
          uint64_t v1953 = (void *)((char *)v1926 + v1951);
          uint64_t v1954 = v1953[1];
          *uint64_t v1952 = *v1953;
          v1952[1] = v1954;
          uint64_t v1955 = v2582[15];
          uint64_t v1956 = (char *)v1925 + v1955;
          uint64_t v1957 = (char *)v1926 + v1955;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1957, 1, v2635))
          {
            uint64_t v1958 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1956, v1957, *(void *)(*(void *)(v1958 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v2620)(v1956, v1957, v2635);
            __swift_storeEnumTagSinglePayload((uint64_t)v1956, 0, 1, v2635);
          }
          uint64_t v1959 = v2582[16];
          uint64_t v1960 = (void *)((char *)v1925 + v1959);
          uint64_t v1961 = (void *)((char *)v1926 + v1959);
          uint64_t v1962 = v1961[1];
          *uint64_t v1960 = *v1961;
          v1960[1] = v1962;
          uint64_t v1963 = v2582[17];
          uint64_t v1964 = (void *)((char *)v1925 + v1963);
          uint64_t v1965 = (void *)((char *)v1926 + v1963);
          uint64_t v2558 = (void *)v1965[1];
          *uint64_t v1964 = *v1965;
          v1964[1] = v2558;
          uint64_t v1966 = v2582[18];
          uint64_t v1967 = (void *)((char *)v1925 + v1966);
          uint64_t v1968 = (void *)((char *)v1926 + v1966);
          uint64_t v1969 = v1968[1];
          *uint64_t v1967 = *v1968;
          v1967[1] = v1969;
          uint64_t v1970 = v2582[19];
          uint64_t v1971 = (void *)((char *)v1925 + v1970);
          v1972 = (void *)((char *)v1926 + v1970);
          uint64_t v1973 = v1972[1];
          *uint64_t v1971 = *v1972;
          v1971[1] = v1973;
          uint64_t v1974 = v2582[20];
          uint64_t v1975 = (void *)((char *)v1925 + v1974);
          uint64_t v1976 = (void *)((char *)v1926 + v1974);
          uint64_t v1977 = v1976[1];
          *uint64_t v1975 = *v1976;
          v1975[1] = v1977;
          uint64_t v1978 = v2582[21];
          uint64_t v1979 = (void *)((char *)v1925 + v1978);
          uint64_t v1980 = (void *)((char *)v1926 + v1978);
          uint64_t v1981 = v1980[1];
          *uint64_t v1979 = *v1980;
          v1979[1] = v1981;
          uint64_t v1982 = v2582[22];
          uint64_t v1983 = (void *)((char *)v1925 + v1982);
          uint64_t v1984 = (void *)((char *)v1926 + v1982);
          uint64_t v1985 = v1984[1];
          *uint64_t v1983 = *v1984;
          v1983[1] = v1985;
          uint64_t v1986 = v2582[23];
          uint64_t v1987 = (void *)((char *)v1925 + v1986);
          uint64_t v1988 = (void *)((char *)v1926 + v1986);
          uint64_t v1989 = v1988[1];
          *uint64_t v1987 = *v1988;
          v1987[1] = v1989;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v1925, 0, 1, (uint64_t)v2582);
        }
        uint64_t v1990 = v2649[23];
        uint64_t v1991 = (void *)((char *)v2588 + v1990);
        uint64_t v1992 = (void *)((char *)v9 + v1990);
        uint64_t v1993 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1992, 1, (uint64_t)v1993))
        {
          uint64_t v1994 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v1991, v1992, *(void *)(*(void *)(v1994 - 8) + 64));
        }
        else
        {
          uint64_t v1995 = v1992[1];
          *uint64_t v1991 = *v1992;
          v1991[1] = v1995;
          uint64_t v1996 = v1992[3];
          v1991[2] = v1992[2];
          v1991[3] = v1996;
          uint64_t v1997 = v1992[5];
          v1991[4] = v1992[4];
          v1991[5] = v1997;
          uint64_t v1998 = v1992[7];
          v1991[6] = v1992[6];
          v1991[7] = v1998;
          uint64_t v1999 = v1992[9];
          v1991[8] = v1992[8];
          v1991[9] = v1999;
          uint64_t v2000 = v1992[11];
          v1991[10] = v1992[10];
          v1991[11] = v2000;
          uint64_t v2001 = v1993[11];
          uint64_t v2583 = (char *)v1991 + v2001;
          uint64_t v2002 = (char *)v1992 + v2001;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2002, 1, v2635))
          {
            uint64_t v2003 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2583, v2002, *(void *)(*(void *)(v2003 - 8) + 64));
          }
          else
          {
            v2620();
            __swift_storeEnumTagSinglePayload((uint64_t)v2583, 0, 1, v2635);
          }
          uint64_t v2004 = v1993[12];
          uint64_t v2005 = (void *)((char *)v1991 + v2004);
          uint64_t v2006 = (void *)((char *)v1992 + v2004);
          uint64_t v2007 = v2006[1];
          *uint64_t v2005 = *v2006;
          v2005[1] = v2007;
          *(void *)((char *)v1991 + v1993[13]) = *(void *)((char *)v1992 + v1993[13]);
          uint64_t v2008 = v1993[14];
          uint64_t v2009 = (char *)v1991 + v2008;
          uint64_t v2010 = (char *)v1992 + v2008;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2010, 1, v2635))
          {
            uint64_t v2011 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2009, v2010, *(void *)(*(void *)(v2011 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v2620)(v2009, v2010, v2635);
            __swift_storeEnumTagSinglePayload((uint64_t)v2009, 0, 1, v2635);
          }
          *(void *)((char *)v1991 + v1993[15]) = *(void *)((char *)v1992 + v1993[15]);
          *(void *)((char *)v1991 + v1993[16]) = *(void *)((char *)v1992 + v1993[16]);
          uint64_t v2012 = v1993[17];
          uint64_t v2013 = (void *)((char *)v1991 + v2012);
          uint64_t v2014 = (void *)((char *)v1992 + v2012);
          uint64_t v2015 = v2014[1];
          *uint64_t v2013 = *v2014;
          v2013[1] = v2015;
          *(void *)((char *)v1991 + v1993[18]) = *(void *)((char *)v1992 + v1993[18]);
          *(void *)((char *)v1991 + v1993[19]) = *(void *)((char *)v1992 + v1993[19]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v1991, 0, 1, (uint64_t)v1993);
        }
        uint64_t v2016 = v2649[24];
        uint64_t v2017 = (void *)((char *)v2588 + v2016);
        uint64_t v2018 = (void *)((char *)v9 + v2016);
        uint64_t v2019 = type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2018, 1, v2019))
        {
          uint64_t v2020 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v2017, v2018, *(void *)(*(void *)(v2020 - 8) + 64));
        }
        else
        {
          uint64_t v2021 = v2018[1];
          void *v2017 = *v2018;
          v2017[1] = v2021;
          uint64_t v2022 = v2018[3];
          v2017[2] = v2018[2];
          v2017[3] = v2022;
          uint64_t v2023 = v2018[5];
          v2017[4] = v2018[4];
          v2017[5] = v2023;
          uint64_t v2024 = v2018[7];
          v2017[6] = v2018[6];
          v2017[7] = v2024;
          uint64_t v2584 = (int *)v2019;
          uint64_t v2025 = *(int *)(v2019 + 32);
          uint64_t v2559 = (char *)v2017 + v2025;
          uint64_t v2026 = (char *)v2018 + v2025;
          uint64_t v2027 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2026, 1, v2027))
          {
            uint64_t v2028 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v2559, v2026, *(void *)(*(void *)(v2028 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v2027 - 8) + 16))(v2559, v2026, v2027);
            __swift_storeEnumTagSinglePayload((uint64_t)v2559, 0, 1, v2027);
          }
          uint64_t v2029 = v2584;
          uint64_t v2030 = v2584[9];
          uint64_t v2031 = (void *)((char *)v2017 + v2030);
          uint64_t v2032 = (void *)((char *)v2018 + v2030);
          uint64_t v2033 = v2032[1];
          void *v2031 = *v2032;
          v2031[1] = v2033;
          uint64_t v2034 = v2584[10];
          uint64_t v2035 = (void *)((char *)v2017 + v2034);
          uint64_t v2036 = (void *)((char *)v2018 + v2034);
          uint64_t v2037 = v2036[1];
          void *v2035 = *v2036;
          v2035[1] = v2037;
          uint64_t v2038 = v2584[11];
          uint64_t v2039 = (void *)((char *)v2017 + v2038);
          uint64_t v2040 = (void *)((char *)v2018 + v2038);
          uint64_t v2041 = v2040[1];
          void *v2039 = *v2040;
          v2039[1] = v2041;
          uint64_t v2042 = v2584[12];
          uint64_t v2043 = (char *)v2017 + v2042;
          uint64_t v2044 = (char *)v2018 + v2042;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v2044, 1, v2635))
          {
            uint64_t v2045 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2043, v2044, *(void *)(*(void *)(v2045 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v2620)(v2043, v2044, v2635);
            uint64_t v2029 = v2584;
            __swift_storeEnumTagSinglePayload((uint64_t)v2043, 0, 1, v2635);
          }
          uint64_t v2046 = v2029[13];
          v2047 = (char *)v2017 + v2046;
          uint64_t v2048 = (char *)v2018 + v2046;
          if (__swift_getEnumTagSinglePayload((uint64_t)v2018 + v2046, 1, v2635))
          {
            uint64_t v2049 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v2047, v2048, *(void *)(*(void *)(v2049 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v2620)(v2047, v2048, v2635);
            uint64_t v2029 = v2584;
            __swift_storeEnumTagSinglePayload((uint64_t)v2047, 0, 1, v2635);
          }
          uint64_t v2050 = v2029[14];
          uint64_t v2051 = (char *)v2017 + v2050;
          uint64_t v2052 = (char *)v2018 + v2050;
          *(void *)uint64_t v2051 = *(void *)v2052;
          v2051[8] = v2052[8];
          uint64_t v2053 = v2029[15];
          uint64_t v2054 = (void *)((char *)v2017 + v2053);
          uint64_t v2055 = (void *)((char *)v2018 + v2053);
          uint64_t v2056 = v2055[1];
          *uint64_t v2054 = *v2055;
          v2054[1] = v2056;
          uint64_t v2057 = v2029[16];
          uint64_t v2058 = (void *)((char *)v2017 + v2057);
          uint64_t v2059 = (void *)((char *)v2018 + v2057);
          uint64_t v2060 = v2059[1];
          *uint64_t v2058 = *v2059;
          v2058[1] = v2060;
          uint64_t v2061 = v2029[17];
          uint64_t v2062 = (void *)((char *)v2017 + v2061);
          uint64_t v2063 = (void *)((char *)v2018 + v2061);
          uint64_t v2064 = v2063[1];
          *uint64_t v2062 = *v2063;
          v2062[1] = v2064;
          uint64_t v2065 = v2029[18];
          uint64_t v2066 = (void *)((char *)v2017 + v2065);
          uint64_t v2067 = (void *)((char *)v2018 + v2065);
          uint64_t v2068 = v2067[1];
          *uint64_t v2066 = *v2067;
          v2066[1] = v2068;
          uint64_t v2069 = v2029[19];
          uint64_t v2070 = (void *)((char *)v2017 + v2069);
          uint64_t v2071 = (void *)((char *)v2018 + v2069);
          uint64_t v2072 = v2071[1];
          *uint64_t v2070 = *v2071;
          v2070[1] = v2072;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v2017, 0, 1, (uint64_t)v2029);
        }
        uint64_t v2073 = v2649[25];
        uint64_t v2074 = (void *)((char *)v2588 + v2073);
        v2075 = (void *)((char *)v9 + v2073);
        uint64_t v2076 = *(void *)((char *)v9 + v2073 + 8);
        if (v2076)
        {
LABEL_541:
          *uint64_t v2074 = *v2075;
          v2074[1] = v2076;
          uint64_t v2427 = v2075[3];
          v2074[2] = v2075[2];
          v2074[3] = v2427;
          uint64_t v2428 = v2075[5];
          v2074[4] = v2075[4];
          v2074[5] = v2428;
          uint64_t v2429 = v2075[7];
          v2074[6] = v2075[6];
          v2074[7] = v2429;
          uint64_t v2430 = v2075[9];
          v2074[8] = v2075[8];
          v2074[9] = v2430;
          uint64_t v2431 = v2075[11];
          v2074[10] = v2075[10];
          v2074[11] = v2431;
          uint64_t v2432 = v2075[13];
          v2074[12] = v2075[12];
          v2074[13] = v2432;
          uint64_t v2647 = v2075[15];
          v2074[14] = v2075[14];
          v2074[15] = v2647;
          uint64_t v2433 = v2075[17];
          v2074[16] = v2075[16];
          v2074[17] = v2433;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_542:
          swift_bridgeObjectRetain();
        }
        else
        {
LABEL_543:
          memcpy(v2074, v2075, 0x90uLL);
        }
        uint64_t v13 = a3;
LABEL_545:
        uint64_t v10 = v2663;
LABEL_546:
        uint64_t v12 = a1;
        goto LABEL_547;
    }
  }
  uint64_t v2441 = *(int *)(v13 + 44);
  uint64_t v2442 = (char *)v12 + v2441;
  v2443 = (char *)v3 + v2441;
  unint64_t v2444 = *((void *)v2443 + 1);
  if (v2444 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v2442 = *(_OWORD *)v2443;
  }
  else
  {
    uint64_t v2445 = *(void *)v2443;
    outlined copy of Data._Representation(*(void *)v2443, *((void *)v2443 + 1));
    *(void *)uint64_t v2442 = v2445;
    *((void *)v2442 + 1) = v2444;
  }
  return v12;
}

#error "25802898C: too big function (funcsize=0)"

uint64_t initializeWithTake for SearchAppEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for SearchResult(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchResult?);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for SearchResultItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        long long v12 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v12;
        long long v13 = v8[3];
        v7[2] = v8[2];
        v7[3] = v13;
        long long v14 = v8[5];
        v7[4] = v8[4];
        v7[5] = v14;
        uint64_t v15 = (int *)type metadata accessor for EmailDocument(0);
        uint64_t v16 = v15[12];
        uint64_t v17 = (char *)v7 + v16;
        uint64_t v18 = (char *)v8 + v16;
        uint64_t v19 = type metadata accessor for Date();
        uint64_t v1170 = *(void (**)(char *, char *))(*(void *)(v19 - 8) + 32);
        uint64_t v1173 = v19;
        v1170(v17, v18);
        *(void *)((char *)v7 + v15[13]) = *(void *)((char *)v8 + v15[13]);
        *(void *)((char *)v7 + v15[14]) = *(void *)((char *)v8 + v15[14]);
        *(void *)((char *)v7 + v15[15]) = *(void *)((char *)v8 + v15[15]);
        *((unsigned char *)v7 + v15[16]) = *((unsigned char *)v8 + v15[16]);
        *((unsigned char *)v7 + v15[17]) = *((unsigned char *)v8 + v15[17]);
        *(_OWORD *)((char *)v7 + v15[18]) = *(_OWORD *)((char *)v8 + v15[18]);
        uint64_t v20 = v15[19];
        uint64_t v21 = (char *)v7 + v20;
        uint64_t v22 = (char *)v8 + v20;
        long long v23 = *((_OWORD *)v22 + 1);
        *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
        *((_OWORD *)v21 + 1) = v23;
        *((void *)v21 + 4) = *((void *)v22 + 4);
        *(_OWORD *)((char *)v7 + v15[20]) = *(_OWORD *)((char *)v8 + v15[20]);
        uint64_t v1176 = v15;
        uint64_t v24 = v15[21];
        uint64_t v25 = (_OWORD *)((char *)v7 + v24);
        uint64_t v26 = (_OWORD *)((char *)v8 + v24);
        uint64_t v27 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        uint64_t v1179 = v9;
        if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, (uint64_t)v27))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          *uint64_t v25 = *v26;
          uint64_t v240 = v27[5];
          uint64_t v241 = (_OWORD *)((char *)v25 + v240);
          uint64_t v242 = (_OWORD *)((char *)v26 + v240);
          uint64_t v243 = type metadata accessor for RentalCarReservation(0);
          uint64_t v1154 = v25;
          uint64_t v1166 = v27;
          if (__swift_getEnumTagSinglePayload((uint64_t)v242, 1, v243))
          {
            uint64_t v244 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v241, v242, *(void *)(*(void *)(v244 - 8) + 64));
          }
          else
          {
            long long v367 = v242[1];
            *uint64_t v241 = *v242;
            v241[1] = v367;
            long long v368 = v242[3];
            v241[2] = v242[2];
            v241[3] = v368;
            long long v369 = v242[5];
            v241[4] = v242[4];
            v241[5] = v369;
            long long v370 = v242[7];
            v241[6] = v242[6];
            v241[7] = v370;
            *((unsigned char *)v241 + 128) = *((unsigned char *)v242 + 128);
            *(_WORD *)((char *)v241 + 129) = *(_WORD *)((char *)v242 + 129);
            *((void *)v241 + 17) = *((void *)v242 + 17);
            long long v371 = v242[10];
            v241[9] = v242[9];
            v241[10] = v371;
            long long v372 = v242[12];
            v241[11] = v242[11];
            v241[12] = v372;
            long long v373 = v242[14];
            v241[13] = v242[13];
            v241[14] = v373;
            v241[15] = v242[15];
            *((void *)v241 + 32) = *((void *)v242 + 32);
            *(_OWORD *)((char *)v241 + 264) = *(_OWORD *)((char *)v242 + 264);
            *(_OWORD *)((char *)v241 + 280) = *(_OWORD *)((char *)v242 + 280);
            *(_OWORD *)((char *)v241 + 296) = *(_OWORD *)((char *)v242 + 296);
            *(_OWORD *)((char *)v241 + 312) = *(_OWORD *)((char *)v242 + 312);
            *(_OWORD *)((char *)v241 + 328) = *(_OWORD *)((char *)v242 + 328);
            *(_OWORD *)((char *)v241 + 344) = *(_OWORD *)((char *)v242 + 344);
            *(_OWORD *)((char *)v241 + 360) = *(_OWORD *)((char *)v242 + 360);
            *((unsigned char *)v241 + 384) = *((unsigned char *)v242 + 384);
            *((void *)v241 + 47) = *((void *)v242 + 47);
            *(_OWORD *)((char *)v241 + 392) = *(_OWORD *)((char *)v242 + 392);
            *(_OWORD *)((char *)v241 + 408) = *(_OWORD *)((char *)v242 + 408);
            uint64_t v374 = *(int *)(v243 + 140);
            uint64_t v375 = (char *)v241 + v374;
            long long v376 = (char *)v242 + v374;
            if (__swift_getEnumTagSinglePayload((uint64_t)v242 + v374, 1, v1173))
            {
              uint64_t v377 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v375, v376, *(void *)(*(void *)(v377 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1170)(v375, v376, v1173);
              __swift_storeEnumTagSinglePayload((uint64_t)v375, 0, 1, v1173);
            }
            uint64_t v400 = *(int *)(v243 + 144);
            uint64_t v401 = (char *)v241 + v400;
            uint64_t v402 = (char *)v242 + v400;
            if (__swift_getEnumTagSinglePayload((uint64_t)v242 + v400, 1, v1173))
            {
              uint64_t v403 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v401, v402, *(void *)(*(void *)(v403 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1170)(v401, v402, v1173);
              __swift_storeEnumTagSinglePayload((uint64_t)v401, 0, 1, v1173);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v241, 0, 1, v243);
            uint64_t v25 = v1154;
            uint64_t v27 = v1166;
          }
          uint64_t v413 = v27[6];
          uint64_t v414 = (_OWORD *)((char *)v25 + v413);
          uint64_t v415 = (_OWORD *)((char *)v26 + v413);
          uint64_t v416 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v415, 1, v416))
          {
            uint64_t v417 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v414, v415, *(void *)(*(void *)(v417 - 8) + 64));
          }
          else
          {
            long long v418 = v415[1];
            _OWORD *v414 = *v415;
            v414[1] = v418;
            long long v419 = v415[3];
            v414[2] = v415[2];
            v414[3] = v419;
            long long v420 = v415[5];
            v414[4] = v415[4];
            v414[5] = v420;
            long long v421 = v415[7];
            v414[6] = v415[6];
            v414[7] = v421;
            *((unsigned char *)v414 + 128) = *((unsigned char *)v415 + 128);
            *(_WORD *)((char *)v414 + 129) = *(_WORD *)((char *)v415 + 129);
            *((void *)v414 + 17) = *((void *)v415 + 17);
            long long v422 = v415[10];
            v414[9] = v415[9];
            v414[10] = v422;
            long long v423 = v415[12];
            v414[11] = v415[11];
            v414[12] = v423;
            *((void *)v414 + 26) = *((void *)v415 + 26);
            *(_OWORD *)((char *)v414 + 216) = *(_OWORD *)((char *)v415 + 216);
            *(_OWORD *)((char *)v414 + 232) = *(_OWORD *)((char *)v415 + 232);
            *(_OWORD *)((char *)v414 + 248) = *(_OWORD *)((char *)v415 + 248);
            *(_OWORD *)((char *)v414 + 264) = *(_OWORD *)((char *)v415 + 264);
            *((unsigned char *)v414 + 296) = *((unsigned char *)v415 + 296);
            uint64_t v424 = *((void *)v415 + 36);
            *((void *)v414 + 35) = *((void *)v415 + 35);
            *((void *)v414 + 36) = v424;
            uint64_t v425 = *(int *)(v416 + 112);
            __dst = (char *)v414 + v425;
            uint64_t v426 = (char *)v415 + v425;
            if (__swift_getEnumTagSinglePayload((uint64_t)v415 + v425, 1, v1173))
            {
              uint64_t v427 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(__dst, v426, *(void *)(*(void *)(v427 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1170)(__dst, v426, v1173);
              __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v1173);
            }
            uint64_t v459 = *(int *)(v416 + 116);
            __dsta = (char *)v414 + v459;
            uint64_t v460 = (char *)v415 + v459;
            if (__swift_getEnumTagSinglePayload((uint64_t)v415 + v459, 1, v1173))
            {
              uint64_t v461 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(__dsta, v460, *(void *)(*(void *)(v461 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1170)(__dsta, v460, v1173);
              __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v1173);
            }
            uint64_t v27 = v1166;
            __swift_storeEnumTagSinglePayload((uint64_t)v414, 0, 1, v416);
            uint64_t v25 = v1154;
          }
          uint64_t v470 = v27[7];
          uint64_t v471 = (_OWORD *)((char *)v25 + v470);
          uint64_t v472 = (_OWORD *)((char *)v26 + v470);
          uint64_t v473 = type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v472, 1, v473))
          {
            uint64_t v474 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v471, v472, *(void *)(*(void *)(v474 - 8) + 64));
          }
          else
          {
            long long v475 = v472[1];
            *uint64_t v471 = *v472;
            v471[1] = v475;
            long long v476 = v472[3];
            v471[2] = v472[2];
            v471[3] = v476;
            long long v477 = v472[5];
            v471[4] = v472[4];
            v471[5] = v477;
            long long v478 = v472[7];
            v471[6] = v472[6];
            v471[7] = v478;
            *((unsigned char *)v471 + 128) = *((unsigned char *)v472 + 128);
            *(_WORD *)((char *)v471 + 129) = *(_WORD *)((char *)v472 + 129);
            *((void *)v471 + 17) = *((void *)v472 + 17);
            long long v479 = v472[10];
            v471[9] = v472[9];
            v471[10] = v479;
            long long v480 = v472[12];
            v471[11] = v472[11];
            v471[12] = v480;
            long long v481 = v472[14];
            v471[13] = v472[13];
            v471[14] = v481;
            *((void *)v471 + 30) = *((void *)v472 + 30);
            *(_OWORD *)((char *)v471 + 248) = *(_OWORD *)((char *)v472 + 248);
            *(_OWORD *)((char *)v471 + 264) = *(_OWORD *)((char *)v472 + 264);
            *((unsigned char *)v471 + 296) = *((unsigned char *)v472 + 296);
            uint64_t v482 = *((void *)v472 + 36);
            *((void *)v471 + 35) = *((void *)v472 + 35);
            *((void *)v471 + 36) = v482;
            v471[19] = v472[19];
            __dstb = (int *)v473;
            uint64_t v483 = *(int *)(v473 + 116);
            uint64_t v484 = (char *)v471 + v483;
            long long v485 = (char *)v472 + v483;
            uint64_t v486 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v485, 1, v486))
            {
              uint64_t v487 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v484, v485, *(void *)(*(void *)(v487 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v486 - 8) + 32))(v484, v485, v486);
              __swift_storeEnumTagSinglePayload((uint64_t)v484, 0, 1, v486);
            }
            *(_OWORD *)((char *)v471 + __dstb[30]) = *(_OWORD *)((char *)v472 + __dstb[30]);
            uint64_t v523 = __dstb[31];
            uint64_t v524 = (char *)v471 + v523;
            uint64_t v525 = (char *)v472 + v523;
            if (__swift_getEnumTagSinglePayload((uint64_t)v472 + v523, 1, v1173))
            {
              uint64_t v526 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v524, v525, *(void *)(*(void *)(v526 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1170)(v524, v525, v1173);
              __swift_storeEnumTagSinglePayload((uint64_t)v524, 0, 1, v1173);
            }
            uint64_t v534 = __dstb[32];
            uint64_t v535 = (char *)v471 + v534;
            uint64_t v536 = (char *)v472 + v534;
            if (__swift_getEnumTagSinglePayload((uint64_t)v472 + v534, 1, v1173))
            {
              uint64_t v537 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v535, v536, *(void *)(*(void *)(v537 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1170)(v535, v536, v1173);
              __swift_storeEnumTagSinglePayload((uint64_t)v535, 0, 1, v1173);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v471, 0, 1, (uint64_t)__dstb);
            uint64_t v25 = v1154;
            uint64_t v27 = v1166;
          }
          uint64_t v546 = v27[8];
          long long v547 = (_OWORD *)((char *)v25 + v546);
          uint64_t v548 = (_OWORD *)((char *)v26 + v546);
          uint64_t v549 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v548, 1, v549))
          {
            uint64_t v550 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v547, v548, *(void *)(*(void *)(v550 - 8) + 64));
          }
          else
          {
            long long v551 = v548[1];
            _OWORD *v547 = *v548;
            v547[1] = v551;
            long long v552 = v548[3];
            v547[2] = v548[2];
            v547[3] = v552;
            long long v553 = v548[5];
            v547[4] = v548[4];
            v547[5] = v553;
            long long v554 = v548[7];
            v547[6] = v548[6];
            v547[7] = v554;
            *((unsigned char *)v547 + 128) = *((unsigned char *)v548 + 128);
            *(_WORD *)((char *)v547 + 129) = *(_WORD *)((char *)v548 + 129);
            *((void *)v547 + 17) = *((void *)v548 + 17);
            long long v555 = v548[10];
            v547[9] = v548[9];
            v547[10] = v555;
            long long v556 = v548[12];
            v547[11] = v548[11];
            v547[12] = v556;
            long long v557 = v548[14];
            v547[13] = v548[13];
            v547[14] = v557;
            long long v558 = v548[16];
            v547[15] = v548[15];
            v547[16] = v558;
            *((unsigned char *)v547 + 280) = *((unsigned char *)v548 + 280);
            *((void *)v547 + 34) = *((void *)v548 + 34);
            v547[18] = v548[18];
            uint64_t v559 = *(int *)(v549 + 108);
            __dstc = (char *)v547 + v559;
            long long v560 = (char *)v548 + v559;
            if (__swift_getEnumTagSinglePayload((uint64_t)v548 + v559, 1, v1173))
            {
              uint64_t v561 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(__dstc, v560, *(void *)(*(void *)(v561 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1170)(__dstc, v560, v1173);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v1173);
            }
            uint64_t v595 = *(int *)(v549 + 112);
            __dstd = (char *)v547 + v595;
            uint64_t v596 = (char *)v548 + v595;
            if (__swift_getEnumTagSinglePayload((uint64_t)v548 + v595, 1, v1173))
            {
              uint64_t v597 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(__dstd, v596, *(void *)(*(void *)(v597 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1170)(__dstd, v596, v1173);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstd, 0, 1, v1173);
            }
            uint64_t v27 = v1166;
            __swift_storeEnumTagSinglePayload((uint64_t)v547, 0, 1, v549);
            uint64_t v25 = v1154;
          }
          uint64_t v606 = v27[9];
          uint64_t v607 = (_OWORD *)((char *)v25 + v606);
          long long v608 = (_OWORD *)((char *)v26 + v606);
          long long v609 = (int *)type metadata accessor for Party(0);
          uint64_t v1146 = v26;
          if (__swift_getEnumTagSinglePayload((uint64_t)v608, 1, (uint64_t)v609))
          {
            uint64_t v610 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v607, v608, *(void *)(*(void *)(v610 - 8) + 64));
          }
          else
          {
            long long v611 = v608[1];
            _OWORD *v607 = *v608;
            v607[1] = v611;
            long long v612 = v608[3];
            v607[2] = v608[2];
            v607[3] = v612;
            long long v613 = v608[5];
            v607[4] = v608[4];
            v607[5] = v613;
            long long v614 = v608[7];
            v607[6] = v608[6];
            v607[7] = v614;
            *((unsigned char *)v607 + 128) = *((unsigned char *)v608 + 128);
            *(_WORD *)((char *)v607 + 129) = *(_WORD *)((char *)v608 + 129);
            *((void *)v607 + 17) = *((void *)v608 + 17);
            long long v615 = v608[10];
            v607[9] = v608[9];
            v607[10] = v615;
            long long v616 = v608[12];
            v607[11] = v608[11];
            v607[12] = v616;
            long long v617 = v608[14];
            v607[13] = v608[13];
            v607[14] = v617;
            v607[15] = v608[15];
            uint64_t v618 = v609[24];
            uint64_t v619 = (char *)v607 + v618;
            uint64_t v620 = (char *)v608 + v618;
            if (__swift_getEnumTagSinglePayload((uint64_t)v608 + v618, 1, v1173))
            {
              uint64_t v621 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v619, v620, *(void *)(*(void *)(v621 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1170)(v619, v620, v1173);
              __swift_storeEnumTagSinglePayload((uint64_t)v619, 0, 1, v1173);
            }
            uint64_t v654 = v609[25];
            uint64_t v655 = (char *)v607 + v654;
            uint64_t v656 = (char *)v608 + v654;
            if (__swift_getEnumTagSinglePayload((uint64_t)v608 + v654, 1, v1173))
            {
              uint64_t v657 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v655, v656, *(void *)(*(void *)(v657 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1170)(v655, v656, v1173);
              __swift_storeEnumTagSinglePayload((uint64_t)v655, 0, 1, v1173);
            }
            uint64_t v666 = v609[26];
            uint64_t v667 = (char *)v607 + v666;
            uint64_t v668 = (char *)v608 + v666;
            uint64_t v669 = type metadata accessor for URL();
            uint64_t v25 = v1154;
            if (__swift_getEnumTagSinglePayload((uint64_t)v668, 1, v669))
            {
              uint64_t v670 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v667, v668, *(void *)(*(void *)(v670 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v669 - 8) + 32))(v667, v668, v669);
              __swift_storeEnumTagSinglePayload((uint64_t)v667, 0, 1, v669);
            }
            uint64_t v27 = v1166;
            uint64_t v26 = v1146;
            __swift_storeEnumTagSinglePayload((uint64_t)v607, 0, 1, (uint64_t)v609);
          }
          uint64_t v680 = v27[10];
          uint64_t v681 = (_OWORD *)((char *)v25 + v680);
          uint64_t v682 = (_OWORD *)((char *)v26 + v680);
          uint64_t v683 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v682, 1, (uint64_t)v683))
          {
            uint64_t v684 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v681, v682, *(void *)(*(void *)(v684 - 8) + 64));
          }
          else
          {
            long long v685 = v682[1];
            *uint64_t v681 = *v682;
            v681[1] = v685;
            long long v686 = v682[3];
            v681[2] = v682[2];
            v681[3] = v686;
            long long v687 = v682[5];
            v681[4] = v682[4];
            v681[5] = v687;
            long long v688 = v682[7];
            v681[6] = v682[6];
            v681[7] = v688;
            *((unsigned char *)v681 + 128) = *((unsigned char *)v682 + 128);
            *(_WORD *)((char *)v681 + 129) = *(_WORD *)((char *)v682 + 129);
            *((void *)v681 + 17) = *((void *)v682 + 17);
            long long v689 = v682[10];
            v681[9] = v682[9];
            v681[10] = v689;
            long long v690 = v682[12];
            v681[11] = v682[11];
            v681[12] = v690;
            v681[13] = v682[13];
            uint64_t v691 = v683[22];
            __dste = (char *)v681 + v691;
            long long v692 = (char *)v682 + v691;
            if (__swift_getEnumTagSinglePayload((uint64_t)v682 + v691, 1, v1173))
            {
              uint64_t v693 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(__dste, v692, *(void *)(*(void *)(v693 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1170)(__dste, v692, v1173);
              __swift_storeEnumTagSinglePayload((uint64_t)__dste, 0, 1, v1173);
            }
            uint64_t v724 = v683[23];
            __dstf = (char *)v681 + v724;
            uint64_t v725 = (char *)v682 + v724;
            if (__swift_getEnumTagSinglePayload((uint64_t)v682 + v724, 1, v1173))
            {
              uint64_t v726 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(__dstf, v725, *(void *)(*(void *)(v726 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1170)(__dstf, v725, v1173);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstf, 0, 1, v1173);
            }
            uint64_t v735 = v683[24];
            uint64_t v736 = (char *)v681 + v735;
            uint64_t v737 = (char *)v682 + v735;
            *(void *)uint64_t v736 = *(void *)v737;
            v736[8] = v737[8];
            uint64_t v738 = v683[25];
            uint64_t v739 = (char *)v681 + v738;
            uint64_t v740 = (char *)v682 + v738;
            uint64_t v741 = type metadata accessor for URL();
            uint64_t v25 = v1154;
            if (__swift_getEnumTagSinglePayload((uint64_t)v740, 1, v741))
            {
              uint64_t v742 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v739, v740, *(void *)(*(void *)(v742 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v741 - 8) + 32))(v739, v740, v741);
              __swift_storeEnumTagSinglePayload((uint64_t)v739, 0, 1, v741);
            }
            uint64_t v27 = v1166;
            __swift_storeEnumTagSinglePayload((uint64_t)v681, 0, 1, (uint64_t)v683);
            uint64_t v26 = v1146;
          }
          uint64_t v758 = v27[11];
          uint64_t v759 = (_OWORD *)((char *)v25 + v758);
          uint64_t v760 = (_OWORD *)((char *)v26 + v758);
          uint64_t v761 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v760, 1, (uint64_t)v761))
          {
            uint64_t v762 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v759, v760, *(void *)(*(void *)(v762 - 8) + 64));
          }
          else
          {
            long long v763 = v760[1];
            _OWORD *v759 = *v760;
            v759[1] = v763;
            long long v764 = v760[3];
            v759[2] = v760[2];
            v759[3] = v764;
            long long v765 = v760[5];
            v759[4] = v760[4];
            v759[5] = v765;
            *((unsigned char *)v759 + 96) = *((unsigned char *)v760 + 96);
            *(_OWORD *)((char *)v759 + 104) = *(_OWORD *)((char *)v760 + 104);
            uint64_t v766 = v761[13];
            uint64_t v1134 = (char *)v759 + v766;
            uint64_t v767 = (char *)v760 + v766;
            uint64_t v768 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v767, 1, v768))
            {
              uint64_t v769 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v1134, v767, *(void *)(*(void *)(v769 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v768 - 8) + 32))(v1134, v767, v768);
              __swift_storeEnumTagSinglePayload((uint64_t)v1134, 0, 1, v768);
            }
            uint64_t v795 = v761[14];
            uint64_t v796 = (char *)v759 + v795;
            uint64_t v797 = (char *)v760 + v795;
            if (__swift_getEnumTagSinglePayload((uint64_t)v760 + v795, 1, v768))
            {
              uint64_t v798 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v796, v797, *(void *)(*(void *)(v798 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v768 - 8) + 32))(v796, v797, v768);
              __swift_storeEnumTagSinglePayload((uint64_t)v796, 0, 1, v768);
            }
            *(_OWORD *)((char *)v759 + v761[15]) = *(_OWORD *)((char *)v760 + v761[15]);
            *(_OWORD *)((char *)v759 + v761[16]) = *(_OWORD *)((char *)v760 + v761[16]);
            *(_OWORD *)((char *)v759 + v761[17]) = *(_OWORD *)((char *)v760 + v761[17]);
            uint64_t v807 = v761[18];
            uint64_t v1135 = (char *)v760 + v807;
            __dsth = (char *)v759 + v807;
            uint64_t v808 = type metadata accessor for DateComponents();
            uint64_t v809 = *(void (**)(char *, char *, uint64_t))(*(void *)(v808 - 8) + 32);
            v809(__dsth, v1135, v808);
            v809((char *)v759 + v761[19], (char *)v760 + v761[19], v808);
            *(_OWORD *)((char *)v759 + v761[20]) = *(_OWORD *)((char *)v760 + v761[20]);
            *(_OWORD *)((char *)v759 + v761[21]) = *(_OWORD *)((char *)v760 + v761[21]);
            *(_OWORD *)((char *)v759 + v761[22]) = *(_OWORD *)((char *)v760 + v761[22]);
            *(_OWORD *)((char *)v759 + v761[23]) = *(_OWORD *)((char *)v760 + v761[23]);
            *(_OWORD *)((char *)v759 + v761[24]) = *(_OWORD *)((char *)v760 + v761[24]);
            *(_OWORD *)((char *)v759 + v761[25]) = *(_OWORD *)((char *)v760 + v761[25]);
            *(_OWORD *)((char *)v759 + v761[26]) = *(_OWORD *)((char *)v760 + v761[26]);
            *(_OWORD *)((char *)v759 + v761[27]) = *(_OWORD *)((char *)v760 + v761[27]);
            *(_OWORD *)((char *)v759 + v761[28]) = *(_OWORD *)((char *)v760 + v761[28]);
            *(_OWORD *)((char *)v759 + v761[29]) = *(_OWORD *)((char *)v760 + v761[29]);
            *(_OWORD *)((char *)v759 + v761[30]) = *(_OWORD *)((char *)v760 + v761[30]);
            *(_OWORD *)((char *)v759 + v761[31]) = *(_OWORD *)((char *)v760 + v761[31]);
            *(_OWORD *)((char *)v759 + v761[32]) = *(_OWORD *)((char *)v760 + v761[32]);
            *(void *)((char *)v759 + v761[33]) = *(void *)((char *)v760 + v761[33]);
            *(void *)((char *)v759 + v761[34]) = *(void *)((char *)v760 + v761[34]);
            *(_OWORD *)((char *)v759 + v761[35]) = *(_OWORD *)((char *)v760 + v761[35]);
            *(_OWORD *)((char *)v759 + v761[36]) = *(_OWORD *)((char *)v760 + v761[36]);
            *(_OWORD *)((char *)v759 + v761[37]) = *(_OWORD *)((char *)v760 + v761[37]);
            uint64_t v810 = v761[38];
            __dstg = (char *)v759 + v810;
            uint64_t v811 = (char *)v760 + v810;
            uint64_t v26 = v1146;
            if (__swift_getEnumTagSinglePayload((uint64_t)v760 + v810, 1, v1173))
            {
              uint64_t v812 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(__dstg, v811, *(void *)(*(void *)(v812 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v1170)(__dstg, v811, v1173);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstg, 0, 1, v1173);
            }
            uint64_t v27 = v1166;
            *(_OWORD *)((char *)v759 + v761[39]) = *(_OWORD *)((char *)v760 + v761[39]);
            *(_OWORD *)((char *)v759 + v761[40]) = *(_OWORD *)((char *)v760 + v761[40]);
            uint64_t v827 = v761[41];
            uint64_t v828 = (char *)v759 + v827;
            uint64_t v829 = (char *)v760 + v827;
            *(void *)uint64_t v828 = *(void *)v829;
            v828[8] = v829[8];
            *(_OWORD *)((char *)v759 + v761[42]) = *(_OWORD *)((char *)v760 + v761[42]);
            uint64_t v830 = v761[43];
            uint64_t v831 = (char *)v759 + v830;
            uint64_t v832 = (char *)v760 + v830;
            *(_OWORD *)uint64_t v831 = *(_OWORD *)v832;
            *(void *)(v831 + 13) = *(void *)(v832 + 13);
            *(_OWORD *)((char *)v759 + v761[44]) = *(_OWORD *)((char *)v760 + v761[44]);
            *(_OWORD *)((char *)v759 + v761[45]) = *(_OWORD *)((char *)v760 + v761[45]);
            *(_OWORD *)((char *)v759 + v761[46]) = *(_OWORD *)((char *)v760 + v761[46]);
            *(_OWORD *)((char *)v759 + v761[47]) = *(_OWORD *)((char *)v760 + v761[47]);
            __swift_storeEnumTagSinglePayload((uint64_t)v759, 0, 1, (uint64_t)v761);
            uint64_t v25 = v1154;
          }
          uint64_t v833 = v27[12];
          uint64_t v834 = (_OWORD *)((char *)v25 + v833);
          uint64_t v835 = (_OWORD *)((char *)v26 + v833);
          uint64_t v836 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v835, 1, (uint64_t)v836))
          {
            uint64_t v837 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v834, v835, *(void *)(*(void *)(v837 - 8) + 64));
          }
          else
          {
            long long v838 = v835[1];
            *uint64_t v834 = *v835;
            v834[1] = v838;
            long long v839 = v835[3];
            v834[2] = v835[2];
            v834[3] = v839;
            long long v840 = v835[5];
            v834[4] = v835[4];
            v834[5] = v840;
            *((unsigned char *)v834 + 96) = *((unsigned char *)v835 + 96);
            *(_OWORD *)((char *)v834 + 104) = *(_OWORD *)((char *)v835 + 104);
            *(_OWORD *)((char *)v834 + 120) = *(_OWORD *)((char *)v835 + 120);
            uint64_t v841 = v836[14];
            uint64_t v1161 = (char *)v834 + v841;
            uint64_t v842 = (char *)v835 + v841;
            uint64_t v843 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v842, 1, v843))
            {
              uint64_t v844 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1161, v842, *(void *)(*(void *)(v844 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v843 - 8) + 32))(v1161, v842, v843);
              __swift_storeEnumTagSinglePayload((uint64_t)v1161, 0, 1, v843);
            }
            uint64_t v883 = v836[15];
            uint64_t v1163 = (char *)v834 + v883;
            uint64_t v884 = (char *)v835 + v883;
            if (__swift_getEnumTagSinglePayload((uint64_t)v835 + v883, 1, v843))
            {
              uint64_t v885 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1163, v884, *(void *)(*(void *)(v885 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v843 - 8) + 32))(v1163, v884, v843);
              __swift_storeEnumTagSinglePayload((uint64_t)v1163, 0, 1, v843);
            }
            *(_OWORD *)((char *)v834 + v836[16]) = *(_OWORD *)((char *)v835 + v836[16]);
            *(_OWORD *)((char *)v834 + v836[17]) = *(_OWORD *)((char *)v835 + v836[17]);
            *(_OWORD *)((char *)v834 + v836[18]) = *(_OWORD *)((char *)v835 + v836[18]);
            *(_OWORD *)((char *)v834 + v836[19]) = *(_OWORD *)((char *)v835 + v836[19]);
            *(_OWORD *)((char *)v834 + v836[20]) = *(_OWORD *)((char *)v835 + v836[20]);
            *(void *)((char *)v834 + v836[21]) = *(void *)((char *)v835 + v836[21]);
            *(void *)((char *)v834 + v836[22]) = *(void *)((char *)v835 + v836[22]);
            uint64_t v892 = v836[23];
            uint64_t v893 = (char *)v834 + v892;
            uint64_t v894 = (char *)v835 + v892;
            v893[8] = v894[8];
            *(void *)uint64_t v893 = *(void *)v894;
            uint64_t v895 = v836[24];
            uint64_t v896 = (char *)v834 + v895;
            uint64_t v897 = (char *)v835 + v895;
            v896[8] = v897[8];
            *(void *)uint64_t v896 = *(void *)v897;
            *(_OWORD *)((char *)v834 + v836[25]) = *(_OWORD *)((char *)v835 + v836[25]);
            *(_OWORD *)((char *)v834 + v836[26]) = *(_OWORD *)((char *)v835 + v836[26]);
            *(_OWORD *)((char *)v834 + v836[27]) = *(_OWORD *)((char *)v835 + v836[27]);
            *(_OWORD *)((char *)v834 + v836[28]) = *(_OWORD *)((char *)v835 + v836[28]);
            uint64_t v898 = v836[29];
            uint64_t v899 = (char *)v834 + v898;
            uint64_t v900 = (char *)v835 + v898;
            *(void *)uint64_t v899 = *(void *)v900;
            v899[8] = v900[8];
            __swift_storeEnumTagSinglePayload((uint64_t)v834, 0, 1, (uint64_t)v836);
            uint64_t v27 = v1166;
            uint64_t v26 = v1146;
          }
          uint64_t v901 = v27[13];
          uint64_t v902 = (_OWORD *)((char *)v25 + v901);
          uint64_t v903 = (_OWORD *)((char *)v26 + v901);
          uint64_t v904 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v903, 1, (uint64_t)v904))
          {
            uint64_t v905 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v902, v903, *(void *)(*(void *)(v905 - 8) + 64));
          }
          else
          {
            long long v906 = v903[1];
            *uint64_t v902 = *v903;
            v902[1] = v906;
            long long v907 = v903[3];
            v902[2] = v903[2];
            v902[3] = v907;
            long long v908 = v903[5];
            v902[4] = v903[4];
            v902[5] = v908;
            *((unsigned char *)v902 + 96) = *((unsigned char *)v903 + 96);
            *(_OWORD *)((char *)v902 + 104) = *(_OWORD *)((char *)v903 + 104);
            *(_OWORD *)((char *)v902 + 120) = *(_OWORD *)((char *)v903 + 120);
            uint64_t v909 = v904[14];
            uint64_t v1153 = (char *)v902 + v909;
            uint64_t v910 = (char *)v903 + v909;
            uint64_t v911 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v910, 1, v911))
            {
              uint64_t v912 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1153, v910, *(void *)(*(void *)(v912 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v911 - 8) + 32))(v1153, v910, v911);
              __swift_storeEnumTagSinglePayload((uint64_t)v1153, 0, 1, v911);
            }
            *(_OWORD *)((char *)v902 + v904[15]) = *(_OWORD *)((char *)v903 + v904[15]);
            *(_OWORD *)((char *)v902 + v904[16]) = *(_OWORD *)((char *)v903 + v904[16]);
            *(_OWORD *)((char *)v902 + v904[17]) = *(_OWORD *)((char *)v903 + v904[17]);
            *(_OWORD *)((char *)v902 + v904[18]) = *(_OWORD *)((char *)v903 + v904[18]);
            *(_OWORD *)((char *)v902 + v904[19]) = *(_OWORD *)((char *)v903 + v904[19]);
            *(void *)((char *)v902 + v904[20]) = *(void *)((char *)v903 + v904[20]);
            *(_OWORD *)((char *)v902 + v904[21]) = *(_OWORD *)((char *)v903 + v904[21]);
            *(_OWORD *)((char *)v902 + v904[22]) = *(_OWORD *)((char *)v903 + v904[22]);
            *(_OWORD *)((char *)v902 + v904[23]) = *(_OWORD *)((char *)v903 + v904[23]);
            __swift_storeEnumTagSinglePayload((uint64_t)v902, 0, 1, (uint64_t)v904);
            uint64_t v27 = v1166;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, (uint64_t)v27);
        }
        uint64_t v957 = v1176[22];
        uint64_t v958 = (_OWORD *)((char *)v7 + v957);
        uint64_t v959 = (_OWORD *)((char *)v8 + v957);
        uint64_t v960 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v959, 1, (uint64_t)v960))
        {
          uint64_t v961 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v958, v959, *(void *)(*(void *)(v961 - 8) + 64));
        }
        else
        {
          long long v962 = v959[1];
          _OWORD *v958 = *v959;
          v958[1] = v962;
          long long v963 = v959[3];
          v958[2] = v959[2];
          v958[3] = v963;
          long long v964 = v959[5];
          v958[4] = v959[4];
          v958[5] = v964;
          uint64_t v965 = v960[10];
          uint64_t v966 = (char *)v958 + v965;
          uint64_t v967 = (char *)v959 + v965;
          if (__swift_getEnumTagSinglePayload((uint64_t)v959 + v965, 1, v1173))
          {
            uint64_t v968 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v966, v967, *(void *)(*(void *)(v968 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v1170)(v966, v967, v1173);
            __swift_storeEnumTagSinglePayload((uint64_t)v966, 0, 1, v1173);
          }
          uint64_t v969 = v960[11];
          uint64_t v970 = (char *)v958 + v969;
          uint64_t v971 = (char *)v959 + v969;
          if (__swift_getEnumTagSinglePayload((uint64_t)v959 + v969, 1, v1173))
          {
            uint64_t v972 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v970, v971, *(void *)(*(void *)(v972 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v1170)(v970, v971, v1173);
            __swift_storeEnumTagSinglePayload((uint64_t)v970, 0, 1, v1173);
          }
          *(_OWORD *)((char *)v958 + v960[12]) = *(_OWORD *)((char *)v959 + v960[12]);
          *(_OWORD *)((char *)v958 + v960[13]) = *(_OWORD *)((char *)v959 + v960[13]);
          *(_OWORD *)((char *)v958 + v960[14]) = *(_OWORD *)((char *)v959 + v960[14]);
          uint64_t v973 = v960[15];
          uint64_t v974 = (char *)v958 + v973;
          uint64_t v975 = (char *)v959 + v973;
          if (__swift_getEnumTagSinglePayload((uint64_t)v959 + v973, 1, v1173))
          {
            uint64_t v976 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v974, v975, *(void *)(*(void *)(v976 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v1170)(v974, v975, v1173);
            __swift_storeEnumTagSinglePayload((uint64_t)v974, 0, 1, v1173);
          }
          *(_OWORD *)((char *)v958 + v960[16]) = *(_OWORD *)((char *)v959 + v960[16]);
          *(_OWORD *)((char *)v958 + v960[17]) = *(_OWORD *)((char *)v959 + v960[17]);
          *(_OWORD *)((char *)v958 + v960[18]) = *(_OWORD *)((char *)v959 + v960[18]);
          *(_OWORD *)((char *)v958 + v960[19]) = *(_OWORD *)((char *)v959 + v960[19]);
          *(_OWORD *)((char *)v958 + v960[20]) = *(_OWORD *)((char *)v959 + v960[20]);
          *(_OWORD *)((char *)v958 + v960[21]) = *(_OWORD *)((char *)v959 + v960[21]);
          *(_OWORD *)((char *)v958 + v960[22]) = *(_OWORD *)((char *)v959 + v960[22]);
          *(_OWORD *)((char *)v958 + v960[23]) = *(_OWORD *)((char *)v959 + v960[23]);
          __swift_storeEnumTagSinglePayload((uint64_t)v958, 0, 1, (uint64_t)v960);
        }
        uint64_t v977 = v1176[23];
        uint64_t v978 = (_OWORD *)((char *)v7 + v977);
        uint64_t v979 = (_OWORD *)((char *)v8 + v977);
        uint64_t v980 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v979, 1, (uint64_t)v980))
        {
          uint64_t v981 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v978, v979, *(void *)(*(void *)(v981 - 8) + 64));
        }
        else
        {
          long long v982 = v979[1];
          _OWORD *v978 = *v979;
          v978[1] = v982;
          long long v983 = v979[3];
          v978[2] = v979[2];
          v978[3] = v983;
          long long v984 = v979[5];
          v978[4] = v979[4];
          v978[5] = v984;
          uint64_t v985 = v980[11];
          uint64_t v986 = (char *)v978 + v985;
          uint64_t v987 = (char *)v979 + v985;
          if (__swift_getEnumTagSinglePayload((uint64_t)v979 + v985, 1, v1173))
          {
            uint64_t v988 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v986, v987, *(void *)(*(void *)(v988 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v1170)(v986, v987, v1173);
            __swift_storeEnumTagSinglePayload((uint64_t)v986, 0, 1, v1173);
          }
          *(_OWORD *)((char *)v978 + v980[12]) = *(_OWORD *)((char *)v979 + v980[12]);
          *(void *)((char *)v978 + v980[13]) = *(void *)((char *)v979 + v980[13]);
          uint64_t v989 = v980[14];
          uint64_t v990 = (char *)v978 + v989;
          uint64_t v991 = (char *)v979 + v989;
          if (__swift_getEnumTagSinglePayload((uint64_t)v979 + v989, 1, v1173))
          {
            uint64_t v992 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v990, v991, *(void *)(*(void *)(v992 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v1170)(v990, v991, v1173);
            __swift_storeEnumTagSinglePayload((uint64_t)v990, 0, 1, v1173);
          }
          *(void *)((char *)v978 + v980[15]) = *(void *)((char *)v979 + v980[15]);
          *(void *)((char *)v978 + v980[16]) = *(void *)((char *)v979 + v980[16]);
          *(_OWORD *)((char *)v978 + v980[17]) = *(_OWORD *)((char *)v979 + v980[17]);
          *(void *)((char *)v978 + v980[18]) = *(void *)((char *)v979 + v980[18]);
          *(void *)((char *)v978 + v980[19]) = *(void *)((char *)v979 + v980[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v978, 0, 1, (uint64_t)v980);
        }
        uint64_t v993 = v1176[24];
        uint64_t v994 = (_OWORD *)((char *)v7 + v993);
        uint64_t v995 = (_OWORD *)((char *)v8 + v993);
        uint64_t v996 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v995, 1, (uint64_t)v996))
        {
          uint64_t v997 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v994, v995, *(void *)(*(void *)(v997 - 8) + 64));
        }
        else
        {
          long long v998 = v995[1];
          *uint64_t v994 = *v995;
          v994[1] = v998;
          long long v999 = v995[3];
          v994[2] = v995[2];
          v994[3] = v999;
          uint64_t v1000 = v996[8];
          uint64_t v1001 = (char *)v994 + v1000;
          uint64_t v1002 = (char *)v995 + v1000;
          uint64_t v1003 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1002, 1, v1003))
          {
            uint64_t v1004 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v1001, v1002, *(void *)(*(void *)(v1004 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1003 - 8) + 32))(v1001, v1002, v1003);
            __swift_storeEnumTagSinglePayload((uint64_t)v1001, 0, 1, v1003);
          }
          *(_OWORD *)((char *)v994 + v996[9]) = *(_OWORD *)((char *)v995 + v996[9]);
          *(_OWORD *)((char *)v994 + v996[10]) = *(_OWORD *)((char *)v995 + v996[10]);
          *(_OWORD *)((char *)v994 + v996[11]) = *(_OWORD *)((char *)v995 + v996[11]);
          uint64_t v1005 = v996[12];
          uint64_t v1006 = (char *)v994 + v1005;
          uint64_t v1007 = (char *)v995 + v1005;
          if (__swift_getEnumTagSinglePayload((uint64_t)v995 + v1005, 1, v1173))
          {
            uint64_t v1008 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1006, v1007, *(void *)(*(void *)(v1008 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v1170)(v1006, v1007, v1173);
            __swift_storeEnumTagSinglePayload((uint64_t)v1006, 0, 1, v1173);
          }
          uint64_t v1009 = v996[13];
          uint64_t v1010 = (char *)v994 + v1009;
          uint64_t v1011 = (char *)v995 + v1009;
          if (__swift_getEnumTagSinglePayload((uint64_t)v995 + v1009, 1, v1173))
          {
            uint64_t v1012 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1010, v1011, *(void *)(*(void *)(v1012 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v1170)(v1010, v1011, v1173);
            __swift_storeEnumTagSinglePayload((uint64_t)v1010, 0, 1, v1173);
          }
          uint64_t v1013 = v996[14];
          uint64_t v1014 = (char *)v994 + v1013;
          uint64_t v1015 = (char *)v995 + v1013;
          *(void *)uint64_t v1014 = *(void *)v1015;
          v1014[8] = v1015[8];
          *(_OWORD *)((char *)v994 + v996[15]) = *(_OWORD *)((char *)v995 + v996[15]);
          *(_OWORD *)((char *)v994 + v996[16]) = *(_OWORD *)((char *)v995 + v996[16]);
          *(_OWORD *)((char *)v994 + v996[17]) = *(_OWORD *)((char *)v995 + v996[17]);
          *(_OWORD *)((char *)v994 + v996[18]) = *(_OWORD *)((char *)v995 + v996[18]);
          *(_OWORD *)((char *)v994 + v996[19]) = *(_OWORD *)((char *)v995 + v996[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v994, 0, 1, (uint64_t)v996);
        }
        uint64_t v9 = v1179;
        memcpy((char *)v7 + v1176[25], (char *)v8 + v1176[25], 0x90uLL);
        goto LABEL_524;
      case 1u:
        long long v29 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v29;
        long long v30 = v8[3];
        v7[2] = v8[2];
        v7[3] = v30;
        v7[4] = v8[4];
        uint64_t v1177 = (int *)type metadata accessor for MobileSMSDocument(0);
        uint64_t v31 = v1177[10];
        uint64_t v32 = (char *)v7 + v31;
        uint64_t v33 = (char *)v8 + v31;
        uint64_t v34 = type metadata accessor for Date();
        uint64_t v1165 = v34;
        if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34))
        {
          uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
          __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v34);
        }
        uint64_t v245 = v1177[11];
        uint64_t v246 = (char *)v7 + v245;
        uint64_t v247 = (char *)v8 + v245;
        uint64_t v248 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v247, 1, v248))
        {
          uint64_t v249 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v246, v247, *(void *)(*(void *)(v249 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v248 - 8) + 32))(v246, v247, v248);
          __swift_storeEnumTagSinglePayload((uint64_t)v246, 0, 1, v248);
        }
        uint64_t v303 = v248;
        *(void *)((char *)v7 + v1177[12]) = *(void *)((char *)v8 + v1177[12]);
        *(_OWORD *)((char *)v7 + v1177[13]) = *(_OWORD *)((char *)v8 + v1177[13]);
        *(_OWORD *)((char *)v7 + v1177[14]) = *(_OWORD *)((char *)v8 + v1177[14]);
        *(void *)((char *)v7 + v1177[15]) = *(void *)((char *)v8 + v1177[15]);
        *(void *)((char *)v7 + v1177[16]) = *(void *)((char *)v8 + v1177[16]);
        uint64_t v304 = v1177[17];
        uint64_t v305 = (char *)v7 + v304;
        uint64_t v306 = (char *)v8 + v304;
        long long v307 = *((_OWORD *)v306 + 1);
        *(_OWORD *)uint64_t v305 = *(_OWORD *)v306;
        *((_OWORD *)v305 + 1) = v307;
        *((void *)v305 + 4) = *((void *)v306 + 4);
        *(_OWORD *)((char *)v7 + v1177[18]) = *(_OWORD *)((char *)v8 + v1177[18]);
        uint64_t v308 = v1177[19];
        uint64_t v309 = (_OWORD *)((char *)v7 + v308);
        uint64_t v310 = (_OWORD *)((char *)v8 + v308);
        uint64_t v311 = type metadata accessor for PartialExtractedAttributes(0);
        uint64_t v1168 = v303;
        uint64_t v1183 = v9;
        if (__swift_getEnumTagSinglePayload((uint64_t)v310, 1, v311))
        {
          uint64_t v312 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v309, v310, *(void *)(*(void *)(v312 - 8) + 64));
          uint64_t v313 = v303;
          uint64_t v314 = v1177;
        }
        else
        {
          *uint64_t v309 = *v310;
          uint64_t v1172 = (int *)v311;
          uint64_t v1175 = (uint64_t)v309;
          uint64_t v353 = *(int *)(v311 + 20);
          long long v354 = (_OWORD *)((char *)v309 + v353);
          uint64_t v355 = (_OWORD *)((char *)v310 + v353);
          uint64_t v356 = type metadata accessor for RentalCarReservation(0);
          uint64_t v1155 = v310;
          if (__swift_getEnumTagSinglePayload((uint64_t)v355, 1, v356))
          {
            uint64_t v357 = v310;
            uint64_t v358 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v354, v355, *(void *)(*(void *)(v358 - 8) + 64));
            uint64_t v359 = v1172;
            uint64_t v314 = v1177;
          }
          else
          {
            long long v389 = v355[1];
            *long long v354 = *v355;
            v354[1] = v389;
            long long v390 = v355[3];
            v354[2] = v355[2];
            v354[3] = v390;
            long long v391 = v355[5];
            v354[4] = v355[4];
            v354[5] = v391;
            long long v392 = v355[7];
            v354[6] = v355[6];
            v354[7] = v392;
            *((unsigned char *)v354 + 128) = *((unsigned char *)v355 + 128);
            *(_WORD *)((char *)v354 + 129) = *(_WORD *)((char *)v355 + 129);
            *((void *)v354 + 17) = *((void *)v355 + 17);
            long long v393 = v355[10];
            v354[9] = v355[9];
            v354[10] = v393;
            long long v394 = v355[12];
            v354[11] = v355[11];
            v354[12] = v394;
            long long v395 = v355[14];
            v354[13] = v355[13];
            v354[14] = v395;
            v354[15] = v355[15];
            *((void *)v354 + 32) = *((void *)v355 + 32);
            *(_OWORD *)((char *)v354 + 264) = *(_OWORD *)((char *)v355 + 264);
            *(_OWORD *)((char *)v354 + 280) = *(_OWORD *)((char *)v355 + 280);
            *(_OWORD *)((char *)v354 + 296) = *(_OWORD *)((char *)v355 + 296);
            *(_OWORD *)((char *)v354 + 312) = *(_OWORD *)((char *)v355 + 312);
            *(_OWORD *)((char *)v354 + 328) = *(_OWORD *)((char *)v355 + 328);
            *(_OWORD *)((char *)v354 + 344) = *(_OWORD *)((char *)v355 + 344);
            *(_OWORD *)((char *)v354 + 360) = *(_OWORD *)((char *)v355 + 360);
            *((unsigned char *)v354 + 384) = *((unsigned char *)v355 + 384);
            *((void *)v354 + 47) = *((void *)v355 + 47);
            *(_OWORD *)((char *)v354 + 392) = *(_OWORD *)((char *)v355 + 392);
            *(_OWORD *)((char *)v354 + 408) = *(_OWORD *)((char *)v355 + 408);
            uint64_t v396 = *(int *)(v356 + 140);
            uint64_t v397 = (char *)v354 + v396;
            uint64_t v398 = (char *)v355 + v396;
            if (__swift_getEnumTagSinglePayload((uint64_t)v355 + v396, 1, v1165))
            {
              uint64_t v399 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v397, v398, *(void *)(*(void *)(v399 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v397, v398, v1165);
              __swift_storeEnumTagSinglePayload((uint64_t)v397, 0, 1, v1165);
            }
            uint64_t v408 = v356;
            uint64_t v409 = *(int *)(v356 + 144);
            uint64_t v410 = (char *)v354 + v409;
            uint64_t v411 = (char *)v355 + v409;
            if (__swift_getEnumTagSinglePayload((uint64_t)v355 + v409, 1, v1165))
            {
              uint64_t v412 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v410, v411, *(void *)(*(void *)(v412 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v410, v411, v1165);
              __swift_storeEnumTagSinglePayload((uint64_t)v410, 0, 1, v1165);
            }
            uint64_t v357 = v1155;
            __swift_storeEnumTagSinglePayload((uint64_t)v354, 0, 1, v408);
            uint64_t v314 = v1177;
            uint64_t v359 = v1172;
          }
          uint64_t v443 = v359[6];
          uint64_t v444 = (_OWORD *)(v1175 + v443);
          uint64_t v445 = (_OWORD *)((char *)v357 + v443);
          uint64_t v446 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v445, 1, v446))
          {
            uint64_t v447 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v444, v445, *(void *)(*(void *)(v447 - 8) + 64));
          }
          else
          {
            long long v448 = v445[1];
            _OWORD *v444 = *v445;
            v444[1] = v448;
            long long v449 = v445[3];
            v444[2] = v445[2];
            v444[3] = v449;
            long long v450 = v445[5];
            v444[4] = v445[4];
            v444[5] = v450;
            long long v451 = v445[7];
            v444[6] = v445[6];
            v444[7] = v451;
            *((unsigned char *)v444 + 128) = *((unsigned char *)v445 + 128);
            *(_WORD *)((char *)v444 + 129) = *(_WORD *)((char *)v445 + 129);
            *((void *)v444 + 17) = *((void *)v445 + 17);
            long long v452 = v445[10];
            v444[9] = v445[9];
            v444[10] = v452;
            long long v453 = v445[12];
            v444[11] = v445[11];
            v444[12] = v453;
            *((void *)v444 + 26) = *((void *)v445 + 26);
            *(_OWORD *)((char *)v444 + 216) = *(_OWORD *)((char *)v445 + 216);
            *(_OWORD *)((char *)v444 + 232) = *(_OWORD *)((char *)v445 + 232);
            *(_OWORD *)((char *)v444 + 248) = *(_OWORD *)((char *)v445 + 248);
            *(_OWORD *)((char *)v444 + 264) = *(_OWORD *)((char *)v445 + 264);
            *((unsigned char *)v444 + 296) = *((unsigned char *)v445 + 296);
            uint64_t v454 = *((void *)v445 + 36);
            *((void *)v444 + 35) = *((void *)v445 + 35);
            *((void *)v444 + 36) = v454;
            uint64_t v455 = *(int *)(v446 + 112);
            uint64_t v456 = (char *)v444 + v455;
            uint64_t v457 = (char *)v445 + v455;
            if (__swift_getEnumTagSinglePayload((uint64_t)v445 + v455, 1, v1165))
            {
              uint64_t v458 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v456, v457, *(void *)(*(void *)(v458 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v456, v457, v1165);
              __swift_storeEnumTagSinglePayload((uint64_t)v456, 0, 1, v1165);
            }
            uint64_t v466 = *(int *)(v446 + 116);
            long long v467 = (char *)v444 + v466;
            long long v468 = (char *)v445 + v466;
            if (__swift_getEnumTagSinglePayload((uint64_t)v468, 1, v1165))
            {
              uint64_t v469 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v467, v468, *(void *)(*(void *)(v469 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v467, v468, v1165);
              __swift_storeEnumTagSinglePayload((uint64_t)v467, 0, 1, v1165);
            }
            uint64_t v357 = v1155;
            __swift_storeEnumTagSinglePayload((uint64_t)v444, 0, 1, v446);
            uint64_t v314 = v1177;
          }
          uint64_t v506 = v1172[7];
          uint64_t v507 = (_OWORD *)(v1175 + v506);
          uint64_t v508 = (_OWORD *)((char *)v357 + v506);
          uint64_t v509 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v508, 1, (uint64_t)v509))
          {
            uint64_t v510 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v507, v508, *(void *)(*(void *)(v510 - 8) + 64));
          }
          else
          {
            long long v511 = v508[1];
            *uint64_t v507 = *v508;
            v507[1] = v511;
            long long v512 = v508[3];
            v507[2] = v508[2];
            v507[3] = v512;
            long long v513 = v508[5];
            v507[4] = v508[4];
            v507[5] = v513;
            long long v514 = v508[7];
            v507[6] = v508[6];
            v507[7] = v514;
            *((unsigned char *)v507 + 128) = *((unsigned char *)v508 + 128);
            *(_WORD *)((char *)v507 + 129) = *(_WORD *)((char *)v508 + 129);
            *((void *)v507 + 17) = *((void *)v508 + 17);
            long long v515 = v508[10];
            v507[9] = v508[9];
            v507[10] = v515;
            long long v516 = v508[12];
            v507[11] = v508[11];
            v507[12] = v516;
            long long v517 = v508[14];
            v507[13] = v508[13];
            v507[14] = v517;
            *((void *)v507 + 30) = *((void *)v508 + 30);
            *(_OWORD *)((char *)v507 + 248) = *(_OWORD *)((char *)v508 + 248);
            *(_OWORD *)((char *)v507 + 264) = *(_OWORD *)((char *)v508 + 264);
            *((unsigned char *)v507 + 296) = *((unsigned char *)v508 + 296);
            uint64_t v518 = *((void *)v508 + 36);
            *((void *)v507 + 35) = *((void *)v508 + 35);
            *((void *)v507 + 36) = v518;
            v507[19] = v508[19];
            uint64_t v519 = v509[29];
            uint64_t v520 = (char *)v507 + v519;
            uint64_t v521 = (char *)v508 + v519;
            if (__swift_getEnumTagSinglePayload((uint64_t)v508 + v519, 1, v1168))
            {
              uint64_t v522 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v520, v521, *(void *)(*(void *)(v522 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1168 - 8) + 32))(v520, v521, v1168);
              __swift_storeEnumTagSinglePayload((uint64_t)v520, 0, 1, v1168);
            }
            *(_OWORD *)((char *)v507 + v509[30]) = *(_OWORD *)((char *)v508 + v509[30]);
            uint64_t v530 = v509[31];
            uint64_t v531 = (char *)v507 + v530;
            uint64_t v532 = (char *)v508 + v530;
            if (__swift_getEnumTagSinglePayload((uint64_t)v508 + v530, 1, v1165))
            {
              uint64_t v533 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v531, v532, *(void *)(*(void *)(v533 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v531, v532, v1165);
              __swift_storeEnumTagSinglePayload((uint64_t)v531, 0, 1, v1165);
            }
            uint64_t v542 = v509[32];
            uint64_t v543 = (char *)v507 + v542;
            uint64_t v544 = (char *)v508 + v542;
            if (__swift_getEnumTagSinglePayload((uint64_t)v544, 1, v1165))
            {
              uint64_t v545 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v543, v544, *(void *)(*(void *)(v545 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v543, v544, v1165);
              __swift_storeEnumTagSinglePayload((uint64_t)v543, 0, 1, v1165);
            }
            uint64_t v357 = v1155;
            __swift_storeEnumTagSinglePayload((uint64_t)v507, 0, 1, (uint64_t)v509);
            uint64_t v314 = v1177;
          }
          uint64_t v578 = v1172[8];
          uint64_t v579 = (_OWORD *)(v1175 + v578);
          uint64_t v580 = (_OWORD *)((char *)v357 + v578);
          uint64_t v581 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v580, 1, v581))
          {
            uint64_t v582 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v579, v580, *(void *)(*(void *)(v582 - 8) + 64));
          }
          else
          {
            long long v583 = v580[1];
            *uint64_t v579 = *v580;
            v579[1] = v583;
            long long v584 = v580[3];
            v579[2] = v580[2];
            v579[3] = v584;
            long long v585 = v580[5];
            v579[4] = v580[4];
            v579[5] = v585;
            long long v586 = v580[7];
            v579[6] = v580[6];
            v579[7] = v586;
            *((unsigned char *)v579 + 128) = *((unsigned char *)v580 + 128);
            *(_WORD *)((char *)v579 + 129) = *(_WORD *)((char *)v580 + 129);
            *((void *)v579 + 17) = *((void *)v580 + 17);
            long long v587 = v580[10];
            v579[9] = v580[9];
            v579[10] = v587;
            long long v588 = v580[12];
            v579[11] = v580[11];
            v579[12] = v588;
            long long v589 = v580[14];
            v579[13] = v580[13];
            v579[14] = v589;
            long long v590 = v580[16];
            v579[15] = v580[15];
            v579[16] = v590;
            *((unsigned char *)v579 + 280) = *((unsigned char *)v580 + 280);
            *((void *)v579 + 34) = *((void *)v580 + 34);
            v579[18] = v580[18];
            uint64_t v591 = *(int *)(v581 + 108);
            uint64_t v592 = (char *)v579 + v591;
            uint64_t v593 = (char *)v580 + v591;
            if (__swift_getEnumTagSinglePayload((uint64_t)v580 + v591, 1, v1165))
            {
              uint64_t v594 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v592, v593, *(void *)(*(void *)(v594 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v592, v593, v1165);
              __swift_storeEnumTagSinglePayload((uint64_t)v592, 0, 1, v1165);
            }
            uint64_t v602 = *(int *)(v581 + 112);
            uint64_t v603 = (char *)v579 + v602;
            uint64_t v604 = (char *)v580 + v602;
            if (__swift_getEnumTagSinglePayload((uint64_t)v604, 1, v1165))
            {
              uint64_t v605 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v603, v604, *(void *)(*(void *)(v605 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v603, v604, v1165);
              __swift_storeEnumTagSinglePayload((uint64_t)v603, 0, 1, v1165);
            }
            uint64_t v357 = v1155;
            __swift_storeEnumTagSinglePayload((uint64_t)v579, 0, 1, v581);
            uint64_t v314 = v1177;
          }
          uint64_t v638 = v1172[9];
          uint64_t v639 = (_OWORD *)(v1175 + v638);
          long long v640 = (_OWORD *)((char *)v357 + v638);
          long long v641 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v640, 1, (uint64_t)v641))
          {
            uint64_t v642 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v639, v640, *(void *)(*(void *)(v642 - 8) + 64));
          }
          else
          {
            long long v643 = v640[1];
            *uint64_t v639 = *v640;
            v639[1] = v643;
            long long v644 = v640[3];
            v639[2] = v640[2];
            v639[3] = v644;
            long long v645 = v640[5];
            v639[4] = v640[4];
            v639[5] = v645;
            long long v646 = v640[7];
            v639[6] = v640[6];
            v639[7] = v646;
            *((unsigned char *)v639 + 128) = *((unsigned char *)v640 + 128);
            *(_WORD *)((char *)v639 + 129) = *(_WORD *)((char *)v640 + 129);
            *((void *)v639 + 17) = *((void *)v640 + 17);
            long long v647 = v640[10];
            v639[9] = v640[9];
            v639[10] = v647;
            long long v648 = v640[12];
            v639[11] = v640[11];
            v639[12] = v648;
            long long v649 = v640[14];
            v639[13] = v640[13];
            v639[14] = v649;
            v639[15] = v640[15];
            uint64_t v650 = v641[24];
            uint64_t v651 = (char *)v639 + v650;
            uint64_t v652 = (char *)v640 + v650;
            if (__swift_getEnumTagSinglePayload((uint64_t)v640 + v650, 1, v1165))
            {
              uint64_t v653 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v651, v652, *(void *)(*(void *)(v653 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v651, v652, v1165);
              __swift_storeEnumTagSinglePayload((uint64_t)v651, 0, 1, v1165);
            }
            uint64_t v662 = v641[25];
            uint64_t v663 = (char *)v639 + v662;
            uint64_t v664 = (char *)v640 + v662;
            if (__swift_getEnumTagSinglePayload((uint64_t)v640 + v662, 1, v1165))
            {
              uint64_t v665 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v663, v664, *(void *)(*(void *)(v665 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v663, v664, v1165);
              __swift_storeEnumTagSinglePayload((uint64_t)v663, 0, 1, v1165);
            }
            uint64_t v357 = v1155;
            uint64_t v676 = v641[26];
            uint64_t v677 = (char *)v639 + v676;
            uint64_t v678 = (char *)v640 + v676;
            if (__swift_getEnumTagSinglePayload((uint64_t)v678, 1, v1168))
            {
              uint64_t v679 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v677, v678, *(void *)(*(void *)(v679 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1168 - 8) + 32))(v677, v678, v1168);
              __swift_storeEnumTagSinglePayload((uint64_t)v677, 0, 1, v1168);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v639, 0, 1, (uint64_t)v641);
            uint64_t v314 = v1177;
          }
          uint64_t v709 = v1172[10];
          uint64_t v710 = (_OWORD *)(v1175 + v709);
          uint64_t v711 = (_OWORD *)((char *)v357 + v709);
          uint64_t v712 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v711, 1, (uint64_t)v712))
          {
            uint64_t v713 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v710, v711, *(void *)(*(void *)(v713 - 8) + 64));
          }
          else
          {
            long long v714 = v711[1];
            *uint64_t v710 = *v711;
            v710[1] = v714;
            long long v715 = v711[3];
            v710[2] = v711[2];
            v710[3] = v715;
            long long v716 = v711[5];
            v710[4] = v711[4];
            v710[5] = v716;
            long long v717 = v711[7];
            v710[6] = v711[6];
            v710[7] = v717;
            *((unsigned char *)v710 + 128) = *((unsigned char *)v711 + 128);
            *(_WORD *)((char *)v710 + 129) = *(_WORD *)((char *)v711 + 129);
            *((void *)v710 + 17) = *((void *)v711 + 17);
            long long v718 = v711[10];
            v710[9] = v711[9];
            v710[10] = v718;
            long long v719 = v711[12];
            v710[11] = v711[11];
            v710[12] = v719;
            v710[13] = v711[13];
            uint64_t v720 = v712[22];
            uint64_t v721 = (char *)v710 + v720;
            uint64_t v722 = (char *)v711 + v720;
            if (__swift_getEnumTagSinglePayload((uint64_t)v711 + v720, 1, v1165))
            {
              uint64_t v723 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v721, v722, *(void *)(*(void *)(v723 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v721, v722, v1165);
              __swift_storeEnumTagSinglePayload((uint64_t)v721, 0, 1, v1165);
            }
            uint64_t v731 = v712[23];
            uint64_t v732 = (char *)v710 + v731;
            uint64_t v733 = (char *)v711 + v731;
            if (__swift_getEnumTagSinglePayload((uint64_t)v711 + v731, 1, v1165))
            {
              uint64_t v734 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v732, v733, *(void *)(*(void *)(v734 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v732, v733, v1165);
              __swift_storeEnumTagSinglePayload((uint64_t)v732, 0, 1, v1165);
            }
            uint64_t v357 = v1155;
            uint64_t v751 = v712[24];
            uint64_t v752 = (char *)v710 + v751;
            uint64_t v753 = (char *)v711 + v751;
            *(void *)uint64_t v752 = *(void *)v753;
            v752[8] = v753[8];
            uint64_t v754 = v712[25];
            uint64_t v755 = (char *)v710 + v754;
            uint64_t v756 = (char *)v711 + v754;
            if (__swift_getEnumTagSinglePayload((uint64_t)v756, 1, v1168))
            {
              uint64_t v757 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v755, v756, *(void *)(*(void *)(v757 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1168 - 8) + 32))(v755, v756, v1168);
              __swift_storeEnumTagSinglePayload((uint64_t)v755, 0, 1, v1168);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v710, 0, 1, (uint64_t)v712);
            uint64_t v314 = v1177;
          }
          uint64_t v783 = v1172[11];
          uint64_t v784 = (_OWORD *)(v1175 + v783);
          uint64_t v785 = (_OWORD *)((char *)v357 + v783);
          uint64_t v786 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v785, 1, (uint64_t)v786))
          {
            uint64_t v787 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v784, v785, *(void *)(*(void *)(v787 - 8) + 64));
          }
          else
          {
            long long v788 = v785[1];
            *uint64_t v784 = *v785;
            v784[1] = v788;
            long long v789 = v785[3];
            v784[2] = v785[2];
            v784[3] = v789;
            long long v790 = v785[5];
            v784[4] = v785[4];
            v784[5] = v790;
            *((unsigned char *)v784 + 96) = *((unsigned char *)v785 + 96);
            *(_OWORD *)((char *)v784 + 104) = *(_OWORD *)((char *)v785 + 104);
            uint64_t v791 = v786[13];
            uint64_t v792 = (char *)v784 + v791;
            uint64_t v793 = (char *)v785 + v791;
            if (__swift_getEnumTagSinglePayload((uint64_t)v785 + v791, 1, v1168))
            {
              uint64_t v794 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v792, v793, *(void *)(*(void *)(v794 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1168 - 8) + 32))(v792, v793, v1168);
              __swift_storeEnumTagSinglePayload((uint64_t)v792, 0, 1, v1168);
            }
            uint64_t v803 = v786[14];
            uint64_t v804 = (char *)v784 + v803;
            uint64_t v805 = (char *)v785 + v803;
            if (__swift_getEnumTagSinglePayload((uint64_t)v785 + v803, 1, v1168))
            {
              uint64_t v806 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v804, v805, *(void *)(*(void *)(v806 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1168 - 8) + 32))(v804, v805, v1168);
              __swift_storeEnumTagSinglePayload((uint64_t)v804, 0, 1, v1168);
            }
            *(_OWORD *)((char *)v784 + v786[15]) = *(_OWORD *)((char *)v785 + v786[15]);
            *(_OWORD *)((char *)v784 + v786[16]) = *(_OWORD *)((char *)v785 + v786[16]);
            *(_OWORD *)((char *)v784 + v786[17]) = *(_OWORD *)((char *)v785 + v786[17]);
            uint64_t v820 = v786[18];
            __dsti = (char *)v785 + v820;
            uint64_t v1148 = (char *)v784 + v820;
            uint64_t v821 = type metadata accessor for DateComponents();
            uint64_t v822 = *(void (**)(char *, char *, uint64_t))(*(void *)(v821 - 8) + 32);
            v822(v1148, __dsti, v821);
            v822((char *)v784 + v786[19], (char *)v785 + v786[19], v821);
            *(_OWORD *)((char *)v784 + v786[20]) = *(_OWORD *)((char *)v785 + v786[20]);
            *(_OWORD *)((char *)v784 + v786[21]) = *(_OWORD *)((char *)v785 + v786[21]);
            *(_OWORD *)((char *)v784 + v786[22]) = *(_OWORD *)((char *)v785 + v786[22]);
            *(_OWORD *)((char *)v784 + v786[23]) = *(_OWORD *)((char *)v785 + v786[23]);
            *(_OWORD *)((char *)v784 + v786[24]) = *(_OWORD *)((char *)v785 + v786[24]);
            *(_OWORD *)((char *)v784 + v786[25]) = *(_OWORD *)((char *)v785 + v786[25]);
            *(_OWORD *)((char *)v784 + v786[26]) = *(_OWORD *)((char *)v785 + v786[26]);
            *(_OWORD *)((char *)v784 + v786[27]) = *(_OWORD *)((char *)v785 + v786[27]);
            *(_OWORD *)((char *)v784 + v786[28]) = *(_OWORD *)((char *)v785 + v786[28]);
            *(_OWORD *)((char *)v784 + v786[29]) = *(_OWORD *)((char *)v785 + v786[29]);
            *(_OWORD *)((char *)v784 + v786[30]) = *(_OWORD *)((char *)v785 + v786[30]);
            *(_OWORD *)((char *)v784 + v786[31]) = *(_OWORD *)((char *)v785 + v786[31]);
            *(_OWORD *)((char *)v784 + v786[32]) = *(_OWORD *)((char *)v785 + v786[32]);
            *(void *)((char *)v784 + v786[33]) = *(void *)((char *)v785 + v786[33]);
            *(void *)((char *)v784 + v786[34]) = *(void *)((char *)v785 + v786[34]);
            *(_OWORD *)((char *)v784 + v786[35]) = *(_OWORD *)((char *)v785 + v786[35]);
            *(_OWORD *)((char *)v784 + v786[36]) = *(_OWORD *)((char *)v785 + v786[36]);
            *(_OWORD *)((char *)v784 + v786[37]) = *(_OWORD *)((char *)v785 + v786[37]);
            uint64_t v823 = v786[38];
            uint64_t v824 = (char *)v784 + v823;
            uint64_t v825 = (char *)v785 + v823;
            if (__swift_getEnumTagSinglePayload((uint64_t)v785 + v823, 1, v1165))
            {
              uint64_t v826 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v824, v825, *(void *)(*(void *)(v826 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v824, v825, v1165);
              __swift_storeEnumTagSinglePayload((uint64_t)v824, 0, 1, v1165);
            }
            uint64_t v314 = v1177;
            uint64_t v357 = v1155;
            *(_OWORD *)((char *)v784 + v786[39]) = *(_OWORD *)((char *)v785 + v786[39]);
            *(_OWORD *)((char *)v784 + v786[40]) = *(_OWORD *)((char *)v785 + v786[40]);
            uint64_t v865 = v786[41];
            uint64_t v866 = (char *)v784 + v865;
            uint64_t v867 = (char *)v785 + v865;
            *(void *)uint64_t v866 = *(void *)v867;
            v866[8] = v867[8];
            *(_OWORD *)((char *)v784 + v786[42]) = *(_OWORD *)((char *)v785 + v786[42]);
            uint64_t v868 = v786[43];
            uint64_t v869 = (char *)v784 + v868;
            uint64_t v870 = (char *)v785 + v868;
            *(_OWORD *)uint64_t v869 = *(_OWORD *)v870;
            *(void *)(v869 + 13) = *(void *)(v870 + 13);
            *(_OWORD *)((char *)v784 + v786[44]) = *(_OWORD *)((char *)v785 + v786[44]);
            *(_OWORD *)((char *)v784 + v786[45]) = *(_OWORD *)((char *)v785 + v786[45]);
            *(_OWORD *)((char *)v784 + v786[46]) = *(_OWORD *)((char *)v785 + v786[46]);
            *(_OWORD *)((char *)v784 + v786[47]) = *(_OWORD *)((char *)v785 + v786[47]);
            __swift_storeEnumTagSinglePayload((uint64_t)v784, 0, 1, (uint64_t)v786);
          }
          uint64_t v871 = v1172[12];
          uint64_t v872 = (_OWORD *)(v1175 + v871);
          uint64_t v873 = (_OWORD *)((char *)v357 + v871);
          uint64_t v874 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v873, 1, (uint64_t)v874))
          {
            uint64_t v875 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v872, v873, *(void *)(*(void *)(v875 - 8) + 64));
          }
          else
          {
            long long v876 = v873[1];
            *uint64_t v872 = *v873;
            v872[1] = v876;
            long long v877 = v873[3];
            v872[2] = v873[2];
            v872[3] = v877;
            long long v878 = v873[5];
            v872[4] = v873[4];
            v872[5] = v878;
            *((unsigned char *)v872 + 96) = *((unsigned char *)v873 + 96);
            *(_OWORD *)((char *)v872 + 104) = *(_OWORD *)((char *)v873 + 104);
            *(_OWORD *)((char *)v872 + 120) = *(_OWORD *)((char *)v873 + 120);
            uint64_t v879 = v874[14];
            uint64_t v1150 = (char *)v872 + v879;
            uint64_t v880 = (char *)v873 + v879;
            uint64_t v881 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v880, 1, v881))
            {
              uint64_t v882 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1150, v880, *(void *)(*(void *)(v882 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v881 - 8) + 32))(v1150, v880, v881);
              __swift_storeEnumTagSinglePayload((uint64_t)v1150, 0, 1, v881);
            }
            uint64_t v888 = v881;
            uint64_t v889 = v874[15];
            uint64_t v1152 = (char *)v872 + v889;
            uint64_t v890 = (char *)v873 + v889;
            uint64_t v357 = v1155;
            if (__swift_getEnumTagSinglePayload((uint64_t)v873 + v889, 1, v888))
            {
              uint64_t v891 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1152, v890, *(void *)(*(void *)(v891 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v888 - 8) + 32))(v1152, v890, v888);
              __swift_storeEnumTagSinglePayload((uint64_t)v1152, 0, 1, v888);
            }
            *(_OWORD *)((char *)v872 + v874[16]) = *(_OWORD *)((char *)v873 + v874[16]);
            *(_OWORD *)((char *)v872 + v874[17]) = *(_OWORD *)((char *)v873 + v874[17]);
            *(_OWORD *)((char *)v872 + v874[18]) = *(_OWORD *)((char *)v873 + v874[18]);
            *(_OWORD *)((char *)v872 + v874[19]) = *(_OWORD *)((char *)v873 + v874[19]);
            *(_OWORD *)((char *)v872 + v874[20]) = *(_OWORD *)((char *)v873 + v874[20]);
            *(void *)((char *)v872 + v874[21]) = *(void *)((char *)v873 + v874[21]);
            *(void *)((char *)v872 + v874[22]) = *(void *)((char *)v873 + v874[22]);
            uint64_t v935 = v874[23];
            uint64_t v936 = (char *)v872 + v935;
            uint64_t v937 = (char *)v873 + v935;
            v936[8] = v937[8];
            *(void *)uint64_t v936 = *(void *)v937;
            uint64_t v938 = v874[24];
            uint64_t v939 = (char *)v872 + v938;
            uint64_t v940 = (char *)v873 + v938;
            v939[8] = v940[8];
            *(void *)uint64_t v939 = *(void *)v940;
            *(_OWORD *)((char *)v872 + v874[25]) = *(_OWORD *)((char *)v873 + v874[25]);
            *(_OWORD *)((char *)v872 + v874[26]) = *(_OWORD *)((char *)v873 + v874[26]);
            *(_OWORD *)((char *)v872 + v874[27]) = *(_OWORD *)((char *)v873 + v874[27]);
            *(_OWORD *)((char *)v872 + v874[28]) = *(_OWORD *)((char *)v873 + v874[28]);
            uint64_t v941 = v874[29];
            uint64_t v942 = (char *)v872 + v941;
            uint64_t v943 = (char *)v873 + v941;
            *(void *)uint64_t v942 = *(void *)v943;
            v942[8] = v943[8];
            __swift_storeEnumTagSinglePayload((uint64_t)v872, 0, 1, (uint64_t)v874);
            uint64_t v314 = v1177;
          }
          uint64_t v944 = v1172[13];
          uint64_t v945 = (_OWORD *)(v1175 + v944);
          uint64_t v946 = (_OWORD *)((char *)v357 + v944);
          uint64_t v947 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v946, 1, (uint64_t)v947))
          {
            uint64_t v948 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v945, v946, *(void *)(*(void *)(v948 - 8) + 64));
            uint64_t v313 = v1168;
          }
          else
          {
            long long v949 = v946[1];
            *uint64_t v945 = *v946;
            v945[1] = v949;
            long long v950 = v946[3];
            v945[2] = v946[2];
            v945[3] = v950;
            long long v951 = v946[5];
            v945[4] = v946[4];
            v945[5] = v951;
            *((unsigned char *)v945 + 96) = *((unsigned char *)v946 + 96);
            *(_OWORD *)((char *)v945 + 104) = *(_OWORD *)((char *)v946 + 104);
            *(_OWORD *)((char *)v945 + 120) = *(_OWORD *)((char *)v946 + 120);
            uint64_t v952 = v947[14];
            uint64_t v953 = (char *)v945 + v952;
            uint64_t v954 = (char *)v946 + v952;
            uint64_t v955 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v954, 1, v955))
            {
              uint64_t v956 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v953, v954, *(void *)(*(void *)(v956 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v955 - 8) + 32))(v953, v954, v955);
              __swift_storeEnumTagSinglePayload((uint64_t)v953, 0, 1, v955);
            }
            uint64_t v314 = v1177;
            uint64_t v313 = v1168;
            *(_OWORD *)((char *)v945 + v947[15]) = *(_OWORD *)((char *)v946 + v947[15]);
            *(_OWORD *)((char *)v945 + v947[16]) = *(_OWORD *)((char *)v946 + v947[16]);
            *(_OWORD *)((char *)v945 + v947[17]) = *(_OWORD *)((char *)v946 + v947[17]);
            *(_OWORD *)((char *)v945 + v947[18]) = *(_OWORD *)((char *)v946 + v947[18]);
            *(_OWORD *)((char *)v945 + v947[19]) = *(_OWORD *)((char *)v946 + v947[19]);
            *(void *)((char *)v945 + v947[20]) = *(void *)((char *)v946 + v947[20]);
            *(_OWORD *)((char *)v945 + v947[21]) = *(_OWORD *)((char *)v946 + v947[21]);
            *(_OWORD *)((char *)v945 + v947[22]) = *(_OWORD *)((char *)v946 + v947[22]);
            *(_OWORD *)((char *)v945 + v947[23]) = *(_OWORD *)((char *)v946 + v947[23]);
            __swift_storeEnumTagSinglePayload((uint64_t)v945, 0, 1, (uint64_t)v947);
          }
          __swift_storeEnumTagSinglePayload(v1175, 0, 1, (uint64_t)v1172);
        }
        uint64_t v1075 = v314[20];
        uint64_t v1076 = (_OWORD *)((char *)v7 + v1075);
        uint64_t v1077 = (_OWORD *)((char *)v8 + v1075);
        uint64_t v1078 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1077, 1, (uint64_t)v1078))
        {
          uint64_t v1079 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v1076, v1077, *(void *)(*(void *)(v1079 - 8) + 64));
        }
        else
        {
          long long v1080 = v1077[1];
          _OWORD *v1076 = *v1077;
          v1076[1] = v1080;
          long long v1081 = v1077[3];
          v1076[2] = v1077[2];
          v1076[3] = v1081;
          long long v1082 = v1077[5];
          v1076[4] = v1077[4];
          v1076[5] = v1082;
          uint64_t v1083 = v1078[10];
          uint64_t v1084 = (char *)v1076 + v1083;
          uint64_t v1085 = (char *)v1077 + v1083;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1077 + v1083, 1, v1165))
          {
            uint64_t v1086 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1084, v1085, *(void *)(*(void *)(v1086 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v1084, v1085, v1165);
            __swift_storeEnumTagSinglePayload((uint64_t)v1084, 0, 1, v1165);
          }
          uint64_t v1087 = v1078[11];
          uint64_t v1088 = (char *)v1076 + v1087;
          uint64_t v1089 = (char *)v1077 + v1087;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1077 + v1087, 1, v1165))
          {
            uint64_t v1090 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1088, v1089, *(void *)(*(void *)(v1090 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v1088, v1089, v1165);
            __swift_storeEnumTagSinglePayload((uint64_t)v1088, 0, 1, v1165);
          }
          *(_OWORD *)((char *)v1076 + v1078[12]) = *(_OWORD *)((char *)v1077 + v1078[12]);
          *(_OWORD *)((char *)v1076 + v1078[13]) = *(_OWORD *)((char *)v1077 + v1078[13]);
          *(_OWORD *)((char *)v1076 + v1078[14]) = *(_OWORD *)((char *)v1077 + v1078[14]);
          uint64_t v1091 = v1078[15];
          uint64_t v1092 = (char *)v1076 + v1091;
          uint64_t v1093 = (char *)v1077 + v1091;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1077 + v1091, 1, v1165))
          {
            uint64_t v1094 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1092, v1093, *(void *)(*(void *)(v1094 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v1092, v1093, v1165);
            __swift_storeEnumTagSinglePayload((uint64_t)v1092, 0, 1, v1165);
          }
          uint64_t v313 = v1168;
          *(_OWORD *)((char *)v1076 + v1078[16]) = *(_OWORD *)((char *)v1077 + v1078[16]);
          *(_OWORD *)((char *)v1076 + v1078[17]) = *(_OWORD *)((char *)v1077 + v1078[17]);
          *(_OWORD *)((char *)v1076 + v1078[18]) = *(_OWORD *)((char *)v1077 + v1078[18]);
          *(_OWORD *)((char *)v1076 + v1078[19]) = *(_OWORD *)((char *)v1077 + v1078[19]);
          *(_OWORD *)((char *)v1076 + v1078[20]) = *(_OWORD *)((char *)v1077 + v1078[20]);
          *(_OWORD *)((char *)v1076 + v1078[21]) = *(_OWORD *)((char *)v1077 + v1078[21]);
          *(_OWORD *)((char *)v1076 + v1078[22]) = *(_OWORD *)((char *)v1077 + v1078[22]);
          *(_OWORD *)((char *)v1076 + v1078[23]) = *(_OWORD *)((char *)v1077 + v1078[23]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1076, 0, 1, (uint64_t)v1078);
          uint64_t v314 = v1177;
        }
        uint64_t v1095 = v314[21];
        uint64_t v1096 = (_OWORD *)((char *)v7 + v1095);
        uint64_t v1097 = (_OWORD *)((char *)v8 + v1095);
        uint64_t v1098 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1097, 1, (uint64_t)v1098))
        {
          uint64_t v1099 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v1096, v1097, *(void *)(*(void *)(v1099 - 8) + 64));
        }
        else
        {
          long long v1100 = v1097[1];
          *uint64_t v1096 = *v1097;
          v1096[1] = v1100;
          long long v1101 = v1097[3];
          v1096[2] = v1097[2];
          v1096[3] = v1101;
          long long v1102 = v1097[5];
          v1096[4] = v1097[4];
          v1096[5] = v1102;
          uint64_t v1103 = v1098[11];
          uint64_t v1104 = (char *)v1096 + v1103;
          uint64_t v1105 = (char *)v1097 + v1103;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1097 + v1103, 1, v1165))
          {
            uint64_t v1106 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1104, v1105, *(void *)(*(void *)(v1106 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v1104, v1105, v1165);
            __swift_storeEnumTagSinglePayload((uint64_t)v1104, 0, 1, v1165);
          }
          *(_OWORD *)((char *)v1096 + v1098[12]) = *(_OWORD *)((char *)v1097 + v1098[12]);
          *(void *)((char *)v1096 + v1098[13]) = *(void *)((char *)v1097 + v1098[13]);
          uint64_t v1107 = v1098[14];
          uint64_t v1108 = (char *)v1096 + v1107;
          uint64_t v1109 = (char *)v1097 + v1107;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1097 + v1107, 1, v1165))
          {
            uint64_t v1110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1108, v1109, *(void *)(*(void *)(v1110 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v1108, v1109, v1165);
            __swift_storeEnumTagSinglePayload((uint64_t)v1108, 0, 1, v1165);
          }
          uint64_t v313 = v1168;
          *(void *)((char *)v1096 + v1098[15]) = *(void *)((char *)v1097 + v1098[15]);
          *(void *)((char *)v1096 + v1098[16]) = *(void *)((char *)v1097 + v1098[16]);
          *(_OWORD *)((char *)v1096 + v1098[17]) = *(_OWORD *)((char *)v1097 + v1098[17]);
          *(void *)((char *)v1096 + v1098[18]) = *(void *)((char *)v1097 + v1098[18]);
          *(void *)((char *)v1096 + v1098[19]) = *(void *)((char *)v1097 + v1098[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1096, 0, 1, (uint64_t)v1098);
          uint64_t v314 = v1177;
        }
        uint64_t v1111 = v314[22];
        uint64_t v1112 = (_OWORD *)((char *)v7 + v1111);
        uint64_t v1113 = (_OWORD *)((char *)v8 + v1111);
        uint64_t v1114 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1113, 1, (uint64_t)v1114))
        {
          uint64_t v1115 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v1112, v1113, *(void *)(*(void *)(v1115 - 8) + 64));
        }
        else
        {
          long long v1116 = v1113[1];
          *uint64_t v1112 = *v1113;
          v1112[1] = v1116;
          long long v1117 = v1113[3];
          v1112[2] = v1113[2];
          v1112[3] = v1117;
          uint64_t v1118 = v1114[8];
          uint64_t v1119 = (char *)v1112 + v1118;
          uint64_t v1120 = (char *)v1113 + v1118;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1113 + v1118, 1, v313))
          {
            uint64_t v1121 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v1119, v1120, *(void *)(*(void *)(v1121 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v313 - 8) + 32))(v1119, v1120, v313);
            __swift_storeEnumTagSinglePayload((uint64_t)v1119, 0, 1, v313);
          }
          *(_OWORD *)((char *)v1112 + v1114[9]) = *(_OWORD *)((char *)v1113 + v1114[9]);
          *(_OWORD *)((char *)v1112 + v1114[10]) = *(_OWORD *)((char *)v1113 + v1114[10]);
          *(_OWORD *)((char *)v1112 + v1114[11]) = *(_OWORD *)((char *)v1113 + v1114[11]);
          uint64_t v1122 = v1114[12];
          uint64_t v1123 = (char *)v1112 + v1122;
          uint64_t v1124 = (char *)v1113 + v1122;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1113 + v1122, 1, v1165))
          {
            uint64_t v1125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1123, v1124, *(void *)(*(void *)(v1125 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v1123, v1124, v1165);
            __swift_storeEnumTagSinglePayload((uint64_t)v1123, 0, 1, v1165);
          }
          uint64_t v1126 = v1114[13];
          uint64_t v1127 = (char *)v1112 + v1126;
          uint64_t v1128 = (char *)v1113 + v1126;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1113 + v1126, 1, v1165))
          {
            uint64_t v1129 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1127, v1128, *(void *)(*(void *)(v1129 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1165 - 8) + 32))(v1127, v1128, v1165);
            __swift_storeEnumTagSinglePayload((uint64_t)v1127, 0, 1, v1165);
          }
          uint64_t v1130 = v1114[14];
          uint64_t v1131 = (char *)v1112 + v1130;
          uint64_t v1132 = (char *)v1113 + v1130;
          *(void *)uint64_t v1131 = *(void *)v1132;
          v1131[8] = v1132[8];
          *(_OWORD *)((char *)v1112 + v1114[15]) = *(_OWORD *)((char *)v1113 + v1114[15]);
          *(_OWORD *)((char *)v1112 + v1114[16]) = *(_OWORD *)((char *)v1113 + v1114[16]);
          *(_OWORD *)((char *)v1112 + v1114[17]) = *(_OWORD *)((char *)v1113 + v1114[17]);
          *(_OWORD *)((char *)v1112 + v1114[18]) = *(_OWORD *)((char *)v1113 + v1114[18]);
          *(_OWORD *)((char *)v1112 + v1114[19]) = *(_OWORD *)((char *)v1113 + v1114[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1112, 0, 1, (uint64_t)v1114);
        }
        uint64_t v9 = v1183;
        memcpy((char *)v7 + v1177[23], (char *)v8 + v1177[23], 0x90uLL);
        goto LABEL_524;
      case 2u:
        uint64_t v36 = v9;
        long long v37 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v37;
        v7[2] = v8[2];
        uint64_t v38 = (int *)type metadata accessor for CalendarEvent(0);
        uint64_t v39 = v38[7];
        uint64_t v40 = (char *)v7 + v39;
        uint64_t v41 = (char *)v8 + v39;
        uint64_t v42 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v42))
        {
          uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
          __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v42);
        }
        uint64_t v250 = v38[8];
        uint64_t v251 = (char *)v7 + v250;
        uint64_t v252 = (char *)v8 + v250;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v250, 1, v42))
        {
          uint64_t v253 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v251, v252, *(void *)(*(void *)(v253 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v251, v252, v42);
          __swift_storeEnumTagSinglePayload((uint64_t)v251, 0, 1, v42);
        }
        uint64_t v9 = v36;
        *(_OWORD *)((char *)v7 + v38[9]) = *(_OWORD *)((char *)v8 + v38[9]);
        *(void *)((char *)v7 + v38[10]) = *(void *)((char *)v8 + v38[10]);
        *(void *)((char *)v7 + v38[11]) = *(void *)((char *)v8 + v38[11]);
        *(_OWORD *)((char *)v7 + v38[12]) = *(_OWORD *)((char *)v8 + v38[12]);
        uint64_t v315 = v38[13];
        uint64_t v316 = (char *)v7 + v315;
        long long v317 = (char *)v8 + v315;
        long long v318 = *((_OWORD *)v317 + 1);
        *(_OWORD *)uint64_t v316 = *(_OWORD *)v317;
        *((_OWORD *)v316 + 1) = v318;
        *((void *)v316 + 4) = *((void *)v317 + 4);
        goto LABEL_524;
      case 3u:
        long long v44 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v44;
        v7[2] = v8[2];
        *((void *)v7 + 6) = *((void *)v8 + 6);
        *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
        *(_OWORD *)((char *)v7 + 72) = *(_OWORD *)((char *)v8 + 72);
        uint64_t v45 = (int *)type metadata accessor for Photo(0);
        uint64_t v46 = v45[11];
        uint64_t v47 = (char *)v7 + v46;
        uint64_t v48 = (char *)v8 + v46;
        uint64_t v49 = type metadata accessor for Date();
        uint64_t v1171 = v49;
        if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49))
        {
          uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
          __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
        }
        *(void *)((char *)v7 + v45[12]) = *(void *)((char *)v8 + v45[12]);
        *(void *)((char *)v7 + v45[13]) = *(void *)((char *)v8 + v45[13]);
        *(void *)((char *)v7 + v45[14]) = *(void *)((char *)v8 + v45[14]);
        *(void *)((char *)v7 + v45[15]) = *(void *)((char *)v8 + v45[15]);
        *(_OWORD *)((char *)v7 + v45[16]) = *(_OWORD *)((char *)v8 + v45[16]);
        uint64_t v254 = v45[17];
        uint64_t v255 = (_OWORD *)((char *)v7 + v254);
        uint64_t v256 = (_OWORD *)((char *)v8 + v254);
        uint64_t v257 = (int *)type metadata accessor for PartialExtractedAttributes(0);
        uint64_t v1178 = v45;
        uint64_t v1182 = v9;
        if (__swift_getEnumTagSinglePayload((uint64_t)v256, 1, (uint64_t)v257))
        {
          uint64_t v258 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialExtractedAttributes?);
          memcpy(v255, v256, *(void *)(*(void *)(v258 - 8) + 64));
        }
        else
        {
          *uint64_t v255 = *v256;
          uint64_t v319 = v257[5];
          uint64_t v320 = v256;
          uint64_t v321 = (_OWORD *)((char *)v255 + v319);
          uint64_t v1174 = v320;
          uint64_t v322 = (_OWORD *)((char *)v320 + v319);
          uint64_t v323 = type metadata accessor for RentalCarReservation(0);
          uint64_t v1167 = v255;
          uint64_t v1169 = v257;
          if (__swift_getEnumTagSinglePayload((uint64_t)v322, 1, v323))
          {
            uint64_t v324 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RentalCarReservation?);
            memcpy(v321, v322, *(void *)(*(void *)(v324 - 8) + 64));
            uint64_t v45 = v1178;
          }
          else
          {
            long long v378 = v322[1];
            _OWORD *v321 = *v322;
            v321[1] = v378;
            long long v379 = v322[3];
            v321[2] = v322[2];
            v321[3] = v379;
            long long v380 = v322[5];
            v321[4] = v322[4];
            v321[5] = v380;
            long long v381 = v322[7];
            v321[6] = v322[6];
            v321[7] = v381;
            *((unsigned char *)v321 + 128) = *((unsigned char *)v322 + 128);
            *(_WORD *)((char *)v321 + 129) = *(_WORD *)((char *)v322 + 129);
            *((void *)v321 + 17) = *((void *)v322 + 17);
            long long v382 = v322[10];
            v321[9] = v322[9];
            v321[10] = v382;
            long long v383 = v322[12];
            v321[11] = v322[11];
            v321[12] = v383;
            long long v384 = v322[14];
            v321[13] = v322[13];
            v321[14] = v384;
            v321[15] = v322[15];
            *((void *)v321 + 32) = *((void *)v322 + 32);
            *(_OWORD *)((char *)v321 + 264) = *(_OWORD *)((char *)v322 + 264);
            *(_OWORD *)((char *)v321 + 280) = *(_OWORD *)((char *)v322 + 280);
            *(_OWORD *)((char *)v321 + 296) = *(_OWORD *)((char *)v322 + 296);
            *(_OWORD *)((char *)v321 + 312) = *(_OWORD *)((char *)v322 + 312);
            *(_OWORD *)((char *)v321 + 328) = *(_OWORD *)((char *)v322 + 328);
            *(_OWORD *)((char *)v321 + 344) = *(_OWORD *)((char *)v322 + 344);
            *(_OWORD *)((char *)v321 + 360) = *(_OWORD *)((char *)v322 + 360);
            *((unsigned char *)v321 + 384) = *((unsigned char *)v322 + 384);
            *((void *)v321 + 47) = *((void *)v322 + 47);
            *(_OWORD *)((char *)v321 + 392) = *(_OWORD *)((char *)v322 + 392);
            *(_OWORD *)((char *)v321 + 408) = *(_OWORD *)((char *)v322 + 408);
            uint64_t v1156 = (int *)v323;
            uint64_t v385 = *(int *)(v323 + 140);
            uint64_t v386 = (char *)v321 + v385;
            uint64_t v387 = (char *)v322 + v385;
            if (__swift_getEnumTagSinglePayload((uint64_t)v322 + v385, 1, v1171))
            {
              uint64_t v388 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v386, v387, *(void *)(*(void *)(v388 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v386, v387, v1171);
              __swift_storeEnumTagSinglePayload((uint64_t)v386, 0, 1, v1171);
            }
            uint64_t v45 = v1178;
            uint64_t v404 = v1156[36];
            long long v405 = (char *)v321 + v404;
            long long v406 = (char *)v322 + v404;
            if (__swift_getEnumTagSinglePayload((uint64_t)v322 + v404, 1, v1171))
            {
              uint64_t v407 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v405, v406, *(void *)(*(void *)(v407 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v405, v406, v1171);
              __swift_storeEnumTagSinglePayload((uint64_t)v405, 0, 1, v1171);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v321, 0, 1, (uint64_t)v1156);
            uint64_t v257 = v1169;
          }
          uint64_t v428 = v257[6];
          uint64_t v429 = (_OWORD *)((char *)v255 + v428);
          uint64_t v430 = (_OWORD *)((char *)v1174 + v428);
          uint64_t v431 = type metadata accessor for TicketedTransportation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v430, 1, v431))
          {
            uint64_t v432 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TicketedTransportation?);
            memcpy(v429, v430, *(void *)(*(void *)(v432 - 8) + 64));
          }
          else
          {
            long long v433 = v430[1];
            *uint64_t v429 = *v430;
            v429[1] = v433;
            long long v434 = v430[3];
            v429[2] = v430[2];
            v429[3] = v434;
            long long v435 = v430[5];
            v429[4] = v430[4];
            v429[5] = v435;
            long long v436 = v430[7];
            v429[6] = v430[6];
            v429[7] = v436;
            *((unsigned char *)v429 + 128) = *((unsigned char *)v430 + 128);
            *(_WORD *)((char *)v429 + 129) = *(_WORD *)((char *)v430 + 129);
            *((void *)v429 + 17) = *((void *)v430 + 17);
            long long v437 = v430[10];
            v429[9] = v430[9];
            v429[10] = v437;
            long long v438 = v430[12];
            v429[11] = v430[11];
            v429[12] = v438;
            *((void *)v429 + 26) = *((void *)v430 + 26);
            *(_OWORD *)((char *)v429 + 216) = *(_OWORD *)((char *)v430 + 216);
            *(_OWORD *)((char *)v429 + 232) = *(_OWORD *)((char *)v430 + 232);
            *(_OWORD *)((char *)v429 + 248) = *(_OWORD *)((char *)v430 + 248);
            *(_OWORD *)((char *)v429 + 264) = *(_OWORD *)((char *)v430 + 264);
            *((unsigned char *)v429 + 296) = *((unsigned char *)v430 + 296);
            uint64_t v439 = *((void *)v430 + 36);
            *((void *)v429 + 35) = *((void *)v430 + 35);
            *((void *)v429 + 36) = v439;
            uint64_t v440 = *(int *)(v431 + 112);
            uint64_t v1157 = (char *)v429 + v440;
            uint64_t v441 = (char *)v430 + v440;
            if (__swift_getEnumTagSinglePayload((uint64_t)v430 + v440, 1, v1171))
            {
              uint64_t v442 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1157, v441, *(void *)(*(void *)(v442 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v1157, v441, v1171);
              __swift_storeEnumTagSinglePayload((uint64_t)v1157, 0, 1, v1171);
            }
            uint64_t v462 = *(int *)(v431 + 116);
            unint64_t v463 = (char *)v429 + v462;
            uint64_t v464 = (char *)v430 + v462;
            if (__swift_getEnumTagSinglePayload((uint64_t)v464, 1, v1171))
            {
              uint64_t v465 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v463, v464, *(void *)(*(void *)(v465 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v463, v464, v1171);
              __swift_storeEnumTagSinglePayload((uint64_t)v463, 0, 1, v1171);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v429, 0, 1, v431);
            uint64_t v257 = v1169;
          }
          uint64_t v488 = v257[7];
          uint64_t v489 = (_OWORD *)((char *)v255 + v488);
          uint64_t v490 = (_OWORD *)((char *)v1174 + v488);
          uint64_t v491 = (int *)type metadata accessor for TicketedShow(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v490, 1, (uint64_t)v491))
          {
            uint64_t v492 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TicketedShow?);
            memcpy(v489, v490, *(void *)(*(void *)(v492 - 8) + 64));
          }
          else
          {
            long long v493 = v490[1];
            _OWORD *v489 = *v490;
            v489[1] = v493;
            long long v494 = v490[3];
            v489[2] = v490[2];
            v489[3] = v494;
            long long v495 = v490[5];
            v489[4] = v490[4];
            v489[5] = v495;
            long long v496 = v490[7];
            v489[6] = v490[6];
            v489[7] = v496;
            *((unsigned char *)v489 + 128) = *((unsigned char *)v490 + 128);
            *(_WORD *)((char *)v489 + 129) = *(_WORD *)((char *)v490 + 129);
            *((void *)v489 + 17) = *((void *)v490 + 17);
            long long v497 = v490[10];
            v489[9] = v490[9];
            v489[10] = v497;
            long long v498 = v490[12];
            v489[11] = v490[11];
            v489[12] = v498;
            long long v499 = v490[14];
            v489[13] = v490[13];
            v489[14] = v499;
            *((void *)v489 + 30) = *((void *)v490 + 30);
            *(_OWORD *)((char *)v489 + 248) = *(_OWORD *)((char *)v490 + 248);
            *(_OWORD *)((char *)v489 + 264) = *(_OWORD *)((char *)v490 + 264);
            *((unsigned char *)v489 + 296) = *((unsigned char *)v490 + 296);
            uint64_t v500 = *((void *)v490 + 36);
            *((void *)v489 + 35) = *((void *)v490 + 35);
            *((void *)v489 + 36) = v500;
            v489[19] = v490[19];
            uint64_t v501 = v491[29];
            uint64_t v502 = (char *)v489 + v501;
            uint64_t v503 = (char *)v490 + v501;
            uint64_t v504 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v503, 1, v504))
            {
              uint64_t v505 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v502, v503, *(void *)(*(void *)(v505 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v504 - 8) + 32))(v502, v503, v504);
              __swift_storeEnumTagSinglePayload((uint64_t)v502, 0, 1, v504);
            }
            *(_OWORD *)((char *)v489 + v491[30]) = *(_OWORD *)((char *)v490 + v491[30]);
            uint64_t v527 = v491[31];
            uint64_t v1158 = (char *)v489 + v527;
            uint64_t v528 = (char *)v490 + v527;
            uint64_t v45 = v1178;
            if (__swift_getEnumTagSinglePayload((uint64_t)v490 + v527, 1, v1171))
            {
              uint64_t v529 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1158, v528, *(void *)(*(void *)(v529 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v1158, v528, v1171);
              __swift_storeEnumTagSinglePayload((uint64_t)v1158, 0, 1, v1171);
            }
            uint64_t v538 = v491[32];
            uint64_t v539 = (char *)v489 + v538;
            uint64_t v540 = (char *)v490 + v538;
            if (__swift_getEnumTagSinglePayload((uint64_t)v540, 1, v1171))
            {
              uint64_t v541 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v539, v540, *(void *)(*(void *)(v541 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v539, v540, v1171);
              __swift_storeEnumTagSinglePayload((uint64_t)v539, 0, 1, v1171);
            }
            uint64_t v255 = v1167;
            __swift_storeEnumTagSinglePayload((uint64_t)v489, 0, 1, (uint64_t)v491);
            uint64_t v257 = v1169;
          }
          uint64_t v562 = v257[8];
          long long v563 = (_OWORD *)((char *)v255 + v562);
          uint64_t v564 = (_OWORD *)((char *)v1174 + v562);
          uint64_t v565 = type metadata accessor for Appointment(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v564, 1, v565))
          {
            uint64_t v566 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Appointment?);
            memcpy(v563, v564, *(void *)(*(void *)(v566 - 8) + 64));
          }
          else
          {
            long long v567 = v564[1];
            _OWORD *v563 = *v564;
            v563[1] = v567;
            long long v568 = v564[3];
            v563[2] = v564[2];
            v563[3] = v568;
            long long v569 = v564[5];
            v563[4] = v564[4];
            v563[5] = v569;
            long long v570 = v564[7];
            v563[6] = v564[6];
            v563[7] = v570;
            *((unsigned char *)v563 + 128) = *((unsigned char *)v564 + 128);
            *(_WORD *)((char *)v563 + 129) = *(_WORD *)((char *)v564 + 129);
            *((void *)v563 + 17) = *((void *)v564 + 17);
            long long v571 = v564[10];
            v563[9] = v564[9];
            v563[10] = v571;
            long long v572 = v564[12];
            v563[11] = v564[11];
            v563[12] = v572;
            long long v573 = v564[14];
            v563[13] = v564[13];
            v563[14] = v573;
            long long v574 = v564[16];
            v563[15] = v564[15];
            v563[16] = v574;
            *((unsigned char *)v563 + 280) = *((unsigned char *)v564 + 280);
            *((void *)v563 + 34) = *((void *)v564 + 34);
            v563[18] = v564[18];
            uint64_t v575 = *(int *)(v565 + 108);
            uint64_t v1159 = (char *)v563 + v575;
            uint64_t v576 = (char *)v564 + v575;
            if (__swift_getEnumTagSinglePayload((uint64_t)v564 + v575, 1, v1171))
            {
              uint64_t v577 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v1159, v576, *(void *)(*(void *)(v577 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v1159, v576, v1171);
              __swift_storeEnumTagSinglePayload((uint64_t)v1159, 0, 1, v1171);
            }
            uint64_t v598 = *(int *)(v565 + 112);
            uint64_t v599 = (char *)v563 + v598;
            uint64_t v600 = (char *)v564 + v598;
            if (__swift_getEnumTagSinglePayload((uint64_t)v600, 1, v1171))
            {
              uint64_t v601 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v599, v600, *(void *)(*(void *)(v601 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v599, v600, v1171);
              __swift_storeEnumTagSinglePayload((uint64_t)v599, 0, 1, v1171);
            }
            uint64_t v255 = v1167;
            __swift_storeEnumTagSinglePayload((uint64_t)v563, 0, 1, v565);
            uint64_t v257 = v1169;
          }
          uint64_t v622 = v257[9];
          uint64_t v623 = (_OWORD *)((char *)v255 + v622);
          long long v624 = (_OWORD *)((char *)v1174 + v622);
          long long v625 = (int *)type metadata accessor for Party(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v624, 1, (uint64_t)v625))
          {
            uint64_t v626 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Party?);
            memcpy(v623, v624, *(void *)(*(void *)(v626 - 8) + 64));
          }
          else
          {
            long long v627 = v624[1];
            _OWORD *v623 = *v624;
            v623[1] = v627;
            long long v628 = v624[3];
            v623[2] = v624[2];
            v623[3] = v628;
            long long v629 = v624[5];
            v623[4] = v624[4];
            v623[5] = v629;
            long long v630 = v624[7];
            v623[6] = v624[6];
            v623[7] = v630;
            *((unsigned char *)v623 + 128) = *((unsigned char *)v624 + 128);
            *(_WORD *)((char *)v623 + 129) = *(_WORD *)((char *)v624 + 129);
            *((void *)v623 + 17) = *((void *)v624 + 17);
            long long v631 = v624[10];
            v623[9] = v624[9];
            v623[10] = v631;
            long long v632 = v624[12];
            v623[11] = v624[11];
            v623[12] = v632;
            long long v633 = v624[14];
            v623[13] = v624[13];
            v623[14] = v633;
            v623[15] = v624[15];
            uint64_t v634 = v625[24];
            uint64_t v635 = (char *)v623 + v634;
            long long v636 = (char *)v624 + v634;
            if (__swift_getEnumTagSinglePayload((uint64_t)v624 + v634, 1, v1171))
            {
              uint64_t v637 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v635, v636, *(void *)(*(void *)(v637 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v635, v636, v1171);
              __swift_storeEnumTagSinglePayload((uint64_t)v635, 0, 1, v1171);
            }
            uint64_t v658 = v625[25];
            uint64_t v659 = (char *)v623 + v658;
            long long v660 = (char *)v624 + v658;
            if (__swift_getEnumTagSinglePayload((uint64_t)v624 + v658, 1, v1171))
            {
              uint64_t v661 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v659, v660, *(void *)(*(void *)(v661 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v659, v660, v1171);
              __swift_storeEnumTagSinglePayload((uint64_t)v659, 0, 1, v1171);
            }
            uint64_t v671 = v625[26];
            uint64_t v672 = (char *)v623 + v671;
            uint64_t v673 = (char *)v624 + v671;
            uint64_t v674 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v673, 1, v674))
            {
              uint64_t v675 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v672, v673, *(void *)(*(void *)(v675 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v674 - 8) + 32))(v672, v673, v674);
              __swift_storeEnumTagSinglePayload((uint64_t)v672, 0, 1, v674);
            }
            uint64_t v45 = v1178;
            uint64_t v255 = v1167;
            __swift_storeEnumTagSinglePayload((uint64_t)v623, 0, 1, (uint64_t)v625);
            uint64_t v257 = v1169;
          }
          uint64_t v694 = v257[10];
          uint64_t v695 = (_OWORD *)((char *)v255 + v694);
          uint64_t v696 = (_OWORD *)((char *)v1174 + v694);
          uint64_t v697 = (int *)type metadata accessor for Trip(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v696, 1, (uint64_t)v697))
          {
            uint64_t v698 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Trip?);
            memcpy(v695, v696, *(void *)(*(void *)(v698 - 8) + 64));
          }
          else
          {
            long long v699 = v696[1];
            *uint64_t v695 = *v696;
            v695[1] = v699;
            long long v700 = v696[3];
            v695[2] = v696[2];
            v695[3] = v700;
            long long v701 = v696[5];
            v695[4] = v696[4];
            v695[5] = v701;
            long long v702 = v696[7];
            v695[6] = v696[6];
            v695[7] = v702;
            *((unsigned char *)v695 + 128) = *((unsigned char *)v696 + 128);
            *(_WORD *)((char *)v695 + 129) = *(_WORD *)((char *)v696 + 129);
            *((void *)v695 + 17) = *((void *)v696 + 17);
            long long v703 = v696[10];
            v695[9] = v696[9];
            v695[10] = v703;
            long long v704 = v696[12];
            v695[11] = v696[11];
            v695[12] = v704;
            v695[13] = v696[13];
            uint64_t v705 = v697[22];
            uint64_t v706 = (char *)v695 + v705;
            uint64_t v707 = (char *)v696 + v705;
            if (__swift_getEnumTagSinglePayload((uint64_t)v696 + v705, 1, v1171))
            {
              uint64_t v708 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v706, v707, *(void *)(*(void *)(v708 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v706, v707, v1171);
              __swift_storeEnumTagSinglePayload((uint64_t)v706, 0, 1, v1171);
            }
            uint64_t v727 = v697[23];
            uint64_t v728 = (char *)v695 + v727;
            uint64_t v729 = (char *)v696 + v727;
            if (__swift_getEnumTagSinglePayload((uint64_t)v696 + v727, 1, v1171))
            {
              uint64_t v730 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v728, v729, *(void *)(*(void *)(v730 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v728, v729, v1171);
              __swift_storeEnumTagSinglePayload((uint64_t)v728, 0, 1, v1171);
            }
            uint64_t v743 = v697[24];
            uint64_t v744 = (char *)v695 + v743;
            uint64_t v745 = (char *)v696 + v743;
            *(void *)uint64_t v744 = *(void *)v745;
            v744[8] = v745[8];
            uint64_t v746 = v697[25];
            uint64_t v747 = (char *)v695 + v746;
            uint64_t v748 = (char *)v696 + v746;
            uint64_t v749 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v748, 1, v749))
            {
              uint64_t v750 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v747, v748, *(void *)(*(void *)(v750 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v749 - 8) + 32))(v747, v748, v749);
              __swift_storeEnumTagSinglePayload((uint64_t)v747, 0, 1, v749);
            }
            uint64_t v45 = v1178;
            uint64_t v255 = v1167;
            __swift_storeEnumTagSinglePayload((uint64_t)v695, 0, 1, (uint64_t)v697);
            uint64_t v257 = v1169;
          }
          uint64_t v770 = v257[11];
          uint64_t v771 = (_OWORD *)((char *)v255 + v770);
          uint64_t v772 = (_OWORD *)((char *)v1174 + v770);
          uint64_t v773 = (int *)type metadata accessor for FlightReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v772, 1, (uint64_t)v773))
          {
            uint64_t v774 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for FlightReservation?);
            memcpy(v771, v772, *(void *)(*(void *)(v774 - 8) + 64));
          }
          else
          {
            long long v775 = v772[1];
            _OWORD *v771 = *v772;
            v771[1] = v775;
            long long v776 = v772[3];
            v771[2] = v772[2];
            v771[3] = v776;
            long long v777 = v772[5];
            v771[4] = v772[4];
            v771[5] = v777;
            *((unsigned char *)v771 + 96) = *((unsigned char *)v772 + 96);
            *(_OWORD *)((char *)v771 + 104) = *(_OWORD *)((char *)v772 + 104);
            uint64_t v778 = v773[13];
            uint64_t v779 = (char *)v771 + v778;
            uint64_t v780 = (char *)v772 + v778;
            uint64_t v781 = type metadata accessor for URL();
            if (__swift_getEnumTagSinglePayload((uint64_t)v780, 1, v781))
            {
              uint64_t v782 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v779, v780, *(void *)(*(void *)(v782 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v781 - 8) + 32))(v779, v780, v781);
              __swift_storeEnumTagSinglePayload((uint64_t)v779, 0, 1, v781);
            }
            uint64_t v799 = v773[14];
            uint64_t v800 = (char *)v771 + v799;
            uint64_t v801 = (char *)v772 + v799;
            if (__swift_getEnumTagSinglePayload((uint64_t)v772 + v799, 1, v781))
            {
              uint64_t v802 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
              memcpy(v800, v801, *(void *)(*(void *)(v802 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v781 - 8) + 32))(v800, v801, v781);
              __swift_storeEnumTagSinglePayload((uint64_t)v800, 0, 1, v781);
            }
            *(_OWORD *)((char *)v771 + v773[15]) = *(_OWORD *)((char *)v772 + v773[15]);
            *(_OWORD *)((char *)v771 + v773[16]) = *(_OWORD *)((char *)v772 + v773[16]);
            *(_OWORD *)((char *)v771 + v773[17]) = *(_OWORD *)((char *)v772 + v773[17]);
            uint64_t v813 = v773[18];
            uint64_t v1147 = (char *)v772 + v813;
            uint64_t v1160 = (char *)v771 + v813;
            uint64_t v814 = type metadata accessor for DateComponents();
            uint64_t v815 = *(void (**)(char *, char *, uint64_t))(*(void *)(v814 - 8) + 32);
            v815(v1160, v1147, v814);
            v815((char *)v771 + v773[19], (char *)v772 + v773[19], v814);
            *(_OWORD *)((char *)v771 + v773[20]) = *(_OWORD *)((char *)v772 + v773[20]);
            *(_OWORD *)((char *)v771 + v773[21]) = *(_OWORD *)((char *)v772 + v773[21]);
            *(_OWORD *)((char *)v771 + v773[22]) = *(_OWORD *)((char *)v772 + v773[22]);
            *(_OWORD *)((char *)v771 + v773[23]) = *(_OWORD *)((char *)v772 + v773[23]);
            *(_OWORD *)((char *)v771 + v773[24]) = *(_OWORD *)((char *)v772 + v773[24]);
            *(_OWORD *)((char *)v771 + v773[25]) = *(_OWORD *)((char *)v772 + v773[25]);
            *(_OWORD *)((char *)v771 + v773[26]) = *(_OWORD *)((char *)v772 + v773[26]);
            *(_OWORD *)((char *)v771 + v773[27]) = *(_OWORD *)((char *)v772 + v773[27]);
            *(_OWORD *)((char *)v771 + v773[28]) = *(_OWORD *)((char *)v772 + v773[28]);
            *(_OWORD *)((char *)v771 + v773[29]) = *(_OWORD *)((char *)v772 + v773[29]);
            *(_OWORD *)((char *)v771 + v773[30]) = *(_OWORD *)((char *)v772 + v773[30]);
            *(_OWORD *)((char *)v771 + v773[31]) = *(_OWORD *)((char *)v772 + v773[31]);
            *(_OWORD *)((char *)v771 + v773[32]) = *(_OWORD *)((char *)v772 + v773[32]);
            *(void *)((char *)v771 + v773[33]) = *(void *)((char *)v772 + v773[33]);
            *(void *)((char *)v771 + v773[34]) = *(void *)((char *)v772 + v773[34]);
            *(_OWORD *)((char *)v771 + v773[35]) = *(_OWORD *)((char *)v772 + v773[35]);
            *(_OWORD *)((char *)v771 + v773[36]) = *(_OWORD *)((char *)v772 + v773[36]);
            *(_OWORD *)((char *)v771 + v773[37]) = *(_OWORD *)((char *)v772 + v773[37]);
            uint64_t v816 = v773[38];
            uint64_t v817 = (char *)v771 + v816;
            uint64_t v818 = (char *)v772 + v816;
            if (__swift_getEnumTagSinglePayload((uint64_t)v772 + v816, 1, v1171))
            {
              uint64_t v819 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
              memcpy(v817, v818, *(void *)(*(void *)(v819 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v817, v818, v1171);
              __swift_storeEnumTagSinglePayload((uint64_t)v817, 0, 1, v1171);
            }
            uint64_t v45 = v1178;
            uint64_t v255 = v1167;
            *(_OWORD *)((char *)v771 + v773[39]) = *(_OWORD *)((char *)v772 + v773[39]);
            *(_OWORD *)((char *)v771 + v773[40]) = *(_OWORD *)((char *)v772 + v773[40]);
            uint64_t v845 = v773[41];
            uint64_t v846 = (char *)v771 + v845;
            uint64_t v847 = (char *)v772 + v845;
            *(void *)uint64_t v846 = *(void *)v847;
            v846[8] = v847[8];
            *(_OWORD *)((char *)v771 + v773[42]) = *(_OWORD *)((char *)v772 + v773[42]);
            uint64_t v848 = v773[43];
            uint64_t v849 = (char *)v771 + v848;
            uint64_t v850 = (char *)v772 + v848;
            *(_OWORD *)uint64_t v849 = *(_OWORD *)v850;
            *(void *)(v849 + 13) = *(void *)(v850 + 13);
            *(_OWORD *)((char *)v771 + v773[44]) = *(_OWORD *)((char *)v772 + v773[44]);
            *(_OWORD *)((char *)v771 + v773[45]) = *(_OWORD *)((char *)v772 + v773[45]);
            *(_OWORD *)((char *)v771 + v773[46]) = *(_OWORD *)((char *)v772 + v773[46]);
            *(_OWORD *)((char *)v771 + v773[47]) = *(_OWORD *)((char *)v772 + v773[47]);
            __swift_storeEnumTagSinglePayload((uint64_t)v771, 0, 1, (uint64_t)v773);
            uint64_t v257 = v1169;
          }
          uint64_t v851 = v257[12];
          uint64_t v852 = (_OWORD *)((char *)v255 + v851);
          uint64_t v853 = (_OWORD *)((char *)v1174 + v851);
          uint64_t v854 = (int *)type metadata accessor for HotelReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v853, 1, (uint64_t)v854))
          {
            uint64_t v855 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HotelReservation?);
            memcpy(v852, v853, *(void *)(*(void *)(v855 - 8) + 64));
          }
          else
          {
            long long v856 = v853[1];
            *uint64_t v852 = *v853;
            v852[1] = v856;
            long long v857 = v853[3];
            v852[2] = v853[2];
            v852[3] = v857;
            long long v858 = v853[5];
            v852[4] = v853[4];
            v852[5] = v858;
            *((unsigned char *)v852 + 96) = *((unsigned char *)v853 + 96);
            *(_OWORD *)((char *)v852 + 104) = *(_OWORD *)((char *)v853 + 104);
            *(_OWORD *)((char *)v852 + 120) = *(_OWORD *)((char *)v853 + 120);
            uint64_t v859 = v854[14];
            uint64_t v1162 = (char *)v852 + v859;
            uint64_t v860 = (char *)v853 + v859;
            uint64_t v861 = type metadata accessor for DateComponents();
            uint64_t v1149 = v860;
            uint64_t v862 = (uint64_t)v860;
            uint64_t v863 = v861;
            if (__swift_getEnumTagSinglePayload(v862, 1, v861))
            {
              uint64_t v864 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1162, v1149, *(void *)(*(void *)(v864 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, void *, uint64_t))(*(void *)(v863 - 8) + 32))(v1162, v1149, v863);
              __swift_storeEnumTagSinglePayload((uint64_t)v1162, 0, 1, v863);
            }
            uint64_t v886 = v854[15];
            uint64_t v1151 = (char *)v853 + v886;
            uint64_t v1164 = (char *)v852 + v886;
            if (__swift_getEnumTagSinglePayload((uint64_t)v853 + v886, 1, v863))
            {
              uint64_t v887 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v1164, v1151, *(void *)(*(void *)(v887 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v863 - 8) + 32))(v1164, v1151, v863);
              __swift_storeEnumTagSinglePayload((uint64_t)v1164, 0, 1, v863);
            }
            *(_OWORD *)((char *)v852 + v854[16]) = *(_OWORD *)((char *)v853 + v854[16]);
            *(_OWORD *)((char *)v852 + v854[17]) = *(_OWORD *)((char *)v853 + v854[17]);
            *(_OWORD *)((char *)v852 + v854[18]) = *(_OWORD *)((char *)v853 + v854[18]);
            *(_OWORD *)((char *)v852 + v854[19]) = *(_OWORD *)((char *)v853 + v854[19]);
            *(_OWORD *)((char *)v852 + v854[20]) = *(_OWORD *)((char *)v853 + v854[20]);
            *(void *)((char *)v852 + v854[21]) = *(void *)((char *)v853 + v854[21]);
            *(void *)((char *)v852 + v854[22]) = *(void *)((char *)v853 + v854[22]);
            uint64_t v913 = v854[23];
            uint64_t v914 = (char *)v852 + v913;
            uint64_t v915 = (char *)v853 + v913;
            v914[8] = v915[8];
            *(void *)uint64_t v914 = *(void *)v915;
            uint64_t v916 = v854[24];
            uint64_t v917 = (char *)v852 + v916;
            uint64_t v918 = (char *)v853 + v916;
            v917[8] = v918[8];
            *(void *)uint64_t v917 = *(void *)v918;
            *(_OWORD *)((char *)v852 + v854[25]) = *(_OWORD *)((char *)v853 + v854[25]);
            *(_OWORD *)((char *)v852 + v854[26]) = *(_OWORD *)((char *)v853 + v854[26]);
            *(_OWORD *)((char *)v852 + v854[27]) = *(_OWORD *)((char *)v853 + v854[27]);
            *(_OWORD *)((char *)v852 + v854[28]) = *(_OWORD *)((char *)v853 + v854[28]);
            uint64_t v919 = v854[29];
            uint64_t v920 = (char *)v852 + v919;
            uint64_t v921 = (char *)v853 + v919;
            *(void *)uint64_t v920 = *(void *)v921;
            v920[8] = v921[8];
            __swift_storeEnumTagSinglePayload((uint64_t)v852, 0, 1, (uint64_t)v854);
            uint64_t v257 = v1169;
          }
          uint64_t v922 = v257[13];
          uint64_t v923 = (_OWORD *)((char *)v255 + v922);
          uint64_t v924 = (_OWORD *)((char *)v1174 + v922);
          uint64_t v925 = (int *)type metadata accessor for RestaurantReservation(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v924, 1, (uint64_t)v925))
          {
            uint64_t v926 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RestaurantReservation?);
            memcpy(v923, v924, *(void *)(*(void *)(v926 - 8) + 64));
          }
          else
          {
            long long v927 = v924[1];
            *uint64_t v923 = *v924;
            v923[1] = v927;
            long long v928 = v924[3];
            v923[2] = v924[2];
            v923[3] = v928;
            long long v929 = v924[5];
            v923[4] = v924[4];
            v923[5] = v929;
            *((unsigned char *)v923 + 96) = *((unsigned char *)v924 + 96);
            *(_OWORD *)((char *)v923 + 104) = *(_OWORD *)((char *)v924 + 104);
            *(_OWORD *)((char *)v923 + 120) = *(_OWORD *)((char *)v924 + 120);
            uint64_t v930 = v925[14];
            uint64_t v931 = (char *)v923 + v930;
            uint64_t v932 = (char *)v924 + v930;
            uint64_t v933 = type metadata accessor for DateComponents();
            if (__swift_getEnumTagSinglePayload((uint64_t)v932, 1, v933))
            {
              uint64_t v934 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
              memcpy(v931, v932, *(void *)(*(void *)(v934 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v933 - 8) + 32))(v931, v932, v933);
              __swift_storeEnumTagSinglePayload((uint64_t)v931, 0, 1, v933);
            }
            uint64_t v45 = v1178;
            *(_OWORD *)((char *)v923 + v925[15]) = *(_OWORD *)((char *)v924 + v925[15]);
            *(_OWORD *)((char *)v923 + v925[16]) = *(_OWORD *)((char *)v924 + v925[16]);
            *(_OWORD *)((char *)v923 + v925[17]) = *(_OWORD *)((char *)v924 + v925[17]);
            *(_OWORD *)((char *)v923 + v925[18]) = *(_OWORD *)((char *)v924 + v925[18]);
            *(_OWORD *)((char *)v923 + v925[19]) = *(_OWORD *)((char *)v924 + v925[19]);
            *(void *)((char *)v923 + v925[20]) = *(void *)((char *)v924 + v925[20]);
            *(_OWORD *)((char *)v923 + v925[21]) = *(_OWORD *)((char *)v924 + v925[21]);
            *(_OWORD *)((char *)v923 + v925[22]) = *(_OWORD *)((char *)v924 + v925[22]);
            *(_OWORD *)((char *)v923 + v925[23]) = *(_OWORD *)((char *)v924 + v925[23]);
            __swift_storeEnumTagSinglePayload((uint64_t)v923, 0, 1, (uint64_t)v925);
            uint64_t v255 = v1167;
            uint64_t v257 = v1169;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v255, 0, 1, (uint64_t)v257);
        }
        uint64_t v1016 = v45[18];
        uint64_t v1017 = (_OWORD *)((char *)v7 + v1016);
        uint64_t v1018 = (_OWORD *)((char *)v8 + v1016);
        uint64_t v1019 = (int *)type metadata accessor for PreExtractedCard(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1018, 1, (uint64_t)v1019))
        {
          uint64_t v1020 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedCard?);
          memcpy(v1017, v1018, *(void *)(*(void *)(v1020 - 8) + 64));
        }
        else
        {
          long long v1021 = v1018[1];
          *uint64_t v1017 = *v1018;
          v1017[1] = v1021;
          long long v1022 = v1018[3];
          v1017[2] = v1018[2];
          v1017[3] = v1022;
          long long v1023 = v1018[5];
          v1017[4] = v1018[4];
          v1017[5] = v1023;
          uint64_t v1024 = v1019[10];
          uint64_t v1025 = (char *)v1017 + v1024;
          uint64_t v1026 = (char *)v1018 + v1024;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1018 + v1024, 1, v1171))
          {
            uint64_t v1027 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1025, v1026, *(void *)(*(void *)(v1027 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v1025, v1026, v1171);
            __swift_storeEnumTagSinglePayload((uint64_t)v1025, 0, 1, v1171);
          }
          uint64_t v1028 = v1019[11];
          uint64_t v1029 = (char *)v1017 + v1028;
          uint64_t v1030 = (char *)v1018 + v1028;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1018 + v1028, 1, v1171))
          {
            uint64_t v1031 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1029, v1030, *(void *)(*(void *)(v1031 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v1029, v1030, v1171);
            __swift_storeEnumTagSinglePayload((uint64_t)v1029, 0, 1, v1171);
          }
          *(_OWORD *)((char *)v1017 + v1019[12]) = *(_OWORD *)((char *)v1018 + v1019[12]);
          *(_OWORD *)((char *)v1017 + v1019[13]) = *(_OWORD *)((char *)v1018 + v1019[13]);
          *(_OWORD *)((char *)v1017 + v1019[14]) = *(_OWORD *)((char *)v1018 + v1019[14]);
          uint64_t v1032 = v1019[15];
          uint64_t v1033 = (char *)v1017 + v1032;
          uint64_t v1034 = (char *)v1018 + v1032;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1018 + v1032, 1, v1171))
          {
            uint64_t v1035 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1033, v1034, *(void *)(*(void *)(v1035 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v1033, v1034, v1171);
            __swift_storeEnumTagSinglePayload((uint64_t)v1033, 0, 1, v1171);
          }
          *(_OWORD *)((char *)v1017 + v1019[16]) = *(_OWORD *)((char *)v1018 + v1019[16]);
          *(_OWORD *)((char *)v1017 + v1019[17]) = *(_OWORD *)((char *)v1018 + v1019[17]);
          *(_OWORD *)((char *)v1017 + v1019[18]) = *(_OWORD *)((char *)v1018 + v1019[18]);
          *(_OWORD *)((char *)v1017 + v1019[19]) = *(_OWORD *)((char *)v1018 + v1019[19]);
          *(_OWORD *)((char *)v1017 + v1019[20]) = *(_OWORD *)((char *)v1018 + v1019[20]);
          *(_OWORD *)((char *)v1017 + v1019[21]) = *(_OWORD *)((char *)v1018 + v1019[21]);
          *(_OWORD *)((char *)v1017 + v1019[22]) = *(_OWORD *)((char *)v1018 + v1019[22]);
          *(_OWORD *)((char *)v1017 + v1019[23]) = *(_OWORD *)((char *)v1018 + v1019[23]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1017, 0, 1, (uint64_t)v1019);
          uint64_t v45 = v1178;
        }
        uint64_t v1036 = v45[19];
        uint64_t v1037 = (_OWORD *)((char *)v7 + v1036);
        uint64_t v1038 = (_OWORD *)((char *)v8 + v1036);
        uint64_t v1039 = (int *)type metadata accessor for PreExtractedContact(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1038, 1, (uint64_t)v1039))
        {
          uint64_t v1040 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedContact?);
          memcpy(v1037, v1038, *(void *)(*(void *)(v1040 - 8) + 64));
        }
        else
        {
          long long v1041 = v1038[1];
          _OWORD *v1037 = *v1038;
          v1037[1] = v1041;
          long long v1042 = v1038[3];
          v1037[2] = v1038[2];
          v1037[3] = v1042;
          long long v1043 = v1038[5];
          v1037[4] = v1038[4];
          v1037[5] = v1043;
          uint64_t v1044 = v1039[11];
          uint64_t v1045 = (char *)v1037 + v1044;
          uint64_t v1046 = (char *)v1038 + v1044;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1038 + v1044, 1, v1171))
          {
            uint64_t v1047 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1045, v1046, *(void *)(*(void *)(v1047 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v1045, v1046, v1171);
            __swift_storeEnumTagSinglePayload((uint64_t)v1045, 0, 1, v1171);
          }
          *(_OWORD *)((char *)v1037 + v1039[12]) = *(_OWORD *)((char *)v1038 + v1039[12]);
          *(void *)((char *)v1037 + v1039[13]) = *(void *)((char *)v1038 + v1039[13]);
          uint64_t v1048 = v1039[14];
          uint64_t v1049 = (char *)v1037 + v1048;
          uint64_t v1050 = (char *)v1038 + v1048;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1038 + v1048, 1, v1171))
          {
            uint64_t v1051 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1049, v1050, *(void *)(*(void *)(v1051 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v1049, v1050, v1171);
            __swift_storeEnumTagSinglePayload((uint64_t)v1049, 0, 1, v1171);
          }
          *(void *)((char *)v1037 + v1039[15]) = *(void *)((char *)v1038 + v1039[15]);
          *(void *)((char *)v1037 + v1039[16]) = *(void *)((char *)v1038 + v1039[16]);
          *(_OWORD *)((char *)v1037 + v1039[17]) = *(_OWORD *)((char *)v1038 + v1039[17]);
          *(void *)((char *)v1037 + v1039[18]) = *(void *)((char *)v1038 + v1039[18]);
          *(void *)((char *)v1037 + v1039[19]) = *(void *)((char *)v1038 + v1039[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1037, 0, 1, (uint64_t)v1039);
          uint64_t v45 = v1178;
        }
        uint64_t v1052 = v45[20];
        uint64_t v1053 = (_OWORD *)((char *)v7 + v1052);
        uint64_t v1054 = (_OWORD *)((char *)v8 + v1052);
        uint64_t v1055 = (int *)type metadata accessor for PreExtractedSharedLink(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v1054, 1, (uint64_t)v1055))
        {
          uint64_t v1056 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreExtractedSharedLink?);
          memcpy(v1053, v1054, *(void *)(*(void *)(v1056 - 8) + 64));
        }
        else
        {
          long long v1057 = v1054[1];
          *uint64_t v1053 = *v1054;
          v1053[1] = v1057;
          long long v1058 = v1054[3];
          v1053[2] = v1054[2];
          v1053[3] = v1058;
          uint64_t v1059 = v1055[8];
          uint64_t v1060 = (char *)v1053 + v1059;
          uint64_t v1061 = (char *)v1054 + v1059;
          uint64_t v1062 = type metadata accessor for URL();
          if (__swift_getEnumTagSinglePayload((uint64_t)v1061, 1, v1062))
          {
            uint64_t v1063 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
            memcpy(v1060, v1061, *(void *)(*(void *)(v1063 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1062 - 8) + 32))(v1060, v1061, v1062);
            __swift_storeEnumTagSinglePayload((uint64_t)v1060, 0, 1, v1062);
          }
          *(_OWORD *)((char *)v1053 + v1055[9]) = *(_OWORD *)((char *)v1054 + v1055[9]);
          *(_OWORD *)((char *)v1053 + v1055[10]) = *(_OWORD *)((char *)v1054 + v1055[10]);
          *(_OWORD *)((char *)v1053 + v1055[11]) = *(_OWORD *)((char *)v1054 + v1055[11]);
          uint64_t v1064 = v1055[12];
          uint64_t v1065 = (char *)v1053 + v1064;
          uint64_t v1066 = (char *)v1054 + v1064;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1054 + v1064, 1, v1171))
          {
            uint64_t v1067 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1065, v1066, *(void *)(*(void *)(v1067 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v1065, v1066, v1171);
            __swift_storeEnumTagSinglePayload((uint64_t)v1065, 0, 1, v1171);
          }
          uint64_t v1068 = v1055[13];
          uint64_t v1069 = (char *)v1053 + v1068;
          uint64_t v1070 = (char *)v1054 + v1068;
          if (__swift_getEnumTagSinglePayload((uint64_t)v1054 + v1068, 1, v1171))
          {
            uint64_t v1071 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
            memcpy(v1069, v1070, *(void *)(*(void *)(v1071 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1171 - 8) + 32))(v1069, v1070, v1171);
            __swift_storeEnumTagSinglePayload((uint64_t)v1069, 0, 1, v1171);
          }
          uint64_t v1072 = v1055[14];
          uint64_t v1073 = (char *)v1053 + v1072;
          uint64_t v1074 = (char *)v1054 + v1072;
          *(void *)uint64_t v1073 = *(void *)v1074;
          v1073[8] = v1074[8];
          *(_OWORD *)((char *)v1053 + v1055[15]) = *(_OWORD *)((char *)v1054 + v1055[15]);
          *(_OWORD *)((char *)v1053 + v1055[16]) = *(_OWORD *)((char *)v1054 + v1055[16]);
          *(_OWORD *)((char *)v1053 + v1055[17]) = *(_OWORD *)((char *)v1054 + v1055[17]);
          *(_OWORD *)((char *)v1053 + v1055[18]) = *(_OWORD *)((char *)v1054 + v1055[18]);
          *(_OWORD *)((char *)v1053 + v1055[19]) = *(_OWORD *)((char *)v1054 + v1055[19]);
          __swift_storeEnumTagSinglePayload((uint64_t)v1053, 0, 1, (uint64_t)v1055);
        }
        uint64_t v9 = v1182;
        memcpy((char *)v7 + v1178[21], (char *)v8 + v1178[21], 0x90uLL);
        goto LABEL_524;
      case 4u:
        uint64_t v51 = v9;
        long long v52 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v52;
        long long v53 = v8[3];
        v7[2] = v8[2];
        v7[3] = v53;
        uint64_t v54 = type metadata accessor for NoteDocument(0);
        uint64_t v55 = *(int *)(v54 + 32);
        uint64_t v56 = (char *)v7 + v55;
        uint64_t v57 = (char *)v8 + v55;
        uint64_t v58 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, v58))
        {
          uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
          __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v58);
        }
        uint64_t v9 = v51;
        uint64_t v259 = *(int *)(v54 + 36);
        uint64_t v260 = (char *)v7 + v259;
        uint64_t v261 = (char *)v8 + v259;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v259, 1, v58)) {
          goto LABEL_139;
        }
        goto LABEL_136;
      case 5u:
        uint64_t v60 = v9;
        long long v61 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v61;
        v7[2] = v8[2];
        uint64_t v62 = (int *)type metadata accessor for Reminder(0);
        uint64_t v63 = v62[7];
        uint64_t v64 = (char *)v7 + v63;
        uint64_t v65 = (char *)v8 + v63;
        uint64_t v66 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v66))
        {
          uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
          __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v66);
        }
        uint64_t v262 = v62[8];
        uint64_t v263 = (char *)v7 + v262;
        uint64_t v264 = (char *)v8 + v262;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v262, 1, v66))
        {
          uint64_t v265 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v263, v264, *(void *)(*(void *)(v265 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v263, v264, v66);
          __swift_storeEnumTagSinglePayload((uint64_t)v263, 0, 1, v66);
        }
        uint64_t v9 = v60;
        *((unsigned char *)v7 + v62[9]) = *((unsigned char *)v8 + v62[9]);
        *(_OWORD *)((char *)v7 + v62[10]) = *(_OWORD *)((char *)v8 + v62[10]);
        *(_OWORD *)((char *)v7 + v62[11]) = *(_OWORD *)((char *)v8 + v62[11]);
        uint64_t v325 = v62[12];
        uint64_t v85 = (char *)v7 + v325;
        uint64_t v86 = (char *)v8 + v325;
        uint64_t v87 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v87)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 6u:
        long long v68 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v68;
        long long v69 = v8[3];
        v7[2] = v8[2];
        v7[3] = v69;
        uint64_t v70 = (int *)type metadata accessor for PhoneHistory(0);
        uint64_t v71 = v70[10];
        uint64_t v72 = (char *)v7 + v71;
        uint64_t v73 = (char *)v8 + v71;
        uint64_t v74 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v73, 1, v74))
        {
          uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
          __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v74);
        }
        *(_OWORD *)((char *)v7 + v70[11]) = *(_OWORD *)((char *)v8 + v70[11]);
        *(_OWORD *)((char *)v7 + v70[12]) = *(_OWORD *)((char *)v8 + v70[12]);
        uint64_t v266 = v70[13];
        uint64_t v85 = (char *)v7 + v266;
        uint64_t v86 = (char *)v8 + v266;
        uint64_t v87 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v87)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 7u:
        long long v76 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v76;
        v7[2] = v8[2];
        uint64_t v77 = type metadata accessor for VoicemailTranscript(0);
        uint64_t v78 = *(int *)(v77 + 28);
        uint64_t v79 = (char *)v7 + v78;
        uint64_t v80 = (char *)v8 + v78;
        uint64_t v81 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v80, 1, v81))
        {
          uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v79, v80, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(v79, v80, v81);
          __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v81);
        }
        uint64_t v267 = *(int *)(v77 + 32);
        uint64_t v85 = (char *)v7 + v267;
        uint64_t v86 = (char *)v8 + v267;
        uint64_t v87 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v87)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 8u:
        long long v83 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v83;
        v7[2] = v8[2];
        uint64_t v84 = *(int *)(type metadata accessor for JournalEntry(0) + 28);
        uint64_t v85 = (char *)v7 + v84;
        uint64_t v86 = (char *)v8 + v84;
        uint64_t v87 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v87)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 9u:
        long long v88 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v88;
        uint64_t v89 = (int *)type metadata accessor for VoiceMemo(0);
        uint64_t v90 = v89[6];
        uint64_t v91 = (char *)v7 + v90;
        uint64_t v92 = (char *)v8 + v90;
        uint64_t v93 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v92, 1, v93))
        {
          uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v91, v92, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
          __swift_storeEnumTagSinglePayload((uint64_t)v91, 0, 1, v93);
        }
        uint64_t v268 = v89[7];
        uint64_t v269 = (char *)v7 + v268;
        uint64_t v270 = (char *)v8 + v268;
        *(void *)uint64_t v269 = *(void *)v270;
        v269[8] = v270[8];
        uint64_t v271 = v89[8];
        uint64_t v85 = (char *)v7 + v271;
        uint64_t v86 = (char *)v8 + v271;
        uint64_t v87 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v87)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 0xAu:
        uint64_t v95 = v9;
        long long v96 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v96;
        uint64_t v97 = (int *)type metadata accessor for Safari(0);
        uint64_t v98 = v97[6];
        uint64_t v99 = (char *)v7 + v98;
        uint64_t v100 = (char *)v8 + v98;
        uint64_t v101 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v100, 1, v101))
        {
          uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
          __swift_storeEnumTagSinglePayload((uint64_t)v99, 0, 1, v101);
        }
        uint64_t v9 = v95;
        *(_OWORD *)((char *)v7 + v97[7]) = *(_OWORD *)((char *)v8 + v97[7]);
        *(_OWORD *)((char *)v7 + v97[8]) = *(_OWORD *)((char *)v8 + v97[8]);
        uint64_t v272 = v97[9];
        uint64_t v273 = (char *)v7 + v272;
        uint64_t v274 = (char *)v8 + v272;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v272, 1, v101))
        {
          uint64_t v275 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v273, v274, *(void *)(*(void *)(v275 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v273, v274, v101);
          __swift_storeEnumTagSinglePayload((uint64_t)v273, 0, 1, v101);
        }
        goto LABEL_524;
      case 0xCu:
        long long v103 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v103;
        v7[2] = v8[2];
        uint64_t v104 = (int *)type metadata accessor for WalletTransaction(0);
        uint64_t v105 = v104[7];
        uint64_t v106 = (char *)v7 + v105;
        uint64_t v107 = (char *)v8 + v105;
        uint64_t v108 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v107, 1, v108))
        {
          uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 32))(v106, v107, v108);
          __swift_storeEnumTagSinglePayload((uint64_t)v106, 0, 1, v108);
        }
        *(_OWORD *)((char *)v7 + v104[8]) = *(_OWORD *)((char *)v8 + v104[8]);
        *(_OWORD *)((char *)v7 + v104[9]) = *(_OWORD *)((char *)v8 + v104[9]);
        *(_OWORD *)((char *)v7 + v104[10]) = *(_OWORD *)((char *)v8 + v104[10]);
        uint64_t v276 = v104[11];
        uint64_t v277 = (char *)v7 + v276;
        uint64_t v278 = (char *)v8 + v276;
        *(void *)(v277 + 13) = *(void *)(v278 + 13);
        *(_OWORD *)uint64_t v277 = *(_OWORD *)v278;
        *(_OWORD *)((char *)v7 + v104[12]) = *(_OWORD *)((char *)v8 + v104[12]);
        goto LABEL_524;
      case 0xDu:
        long long v110 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v110;
        v7[2] = v8[2];
        uint64_t v111 = (int *)type metadata accessor for WalletPass(0);
        uint64_t v112 = v111[7];
        uint64_t v113 = (char *)v7 + v112;
        uint64_t v114 = (char *)v8 + v112;
        uint64_t v115 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v114, 1, v115))
        {
          uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v113, v114, *(void *)(*(void *)(v116 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 32))(v113, v114, v115);
          __swift_storeEnumTagSinglePayload((uint64_t)v113, 0, 1, v115);
        }
        *(_OWORD *)((char *)v7 + v111[8]) = *(_OWORD *)((char *)v8 + v111[8]);
        *(void *)((char *)v7 + v111[9]) = *(void *)((char *)v8 + v111[9]);
        goto LABEL_524;
      case 0xFu:
        uint64_t v1180 = v9;
        long long v117 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v117;
        long long v118 = v8[3];
        v7[2] = v8[2];
        v7[3] = v118;
        long long v119 = v8[5];
        v7[4] = v8[4];
        v7[5] = v119;
        *((unsigned char *)v7 + 96) = *((unsigned char *)v8 + 96);
        *(_OWORD *)((char *)v7 + 104) = *(_OWORD *)((char *)v8 + 104);
        uint64_t v120 = (int *)type metadata accessor for FlightReservation(0);
        uint64_t v121 = v120[13];
        uint64_t v122 = (char *)v7 + v121;
        uint64_t v123 = (char *)v8 + v121;
        uint64_t v124 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v123, 1, v124))
        {
          uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v122, v123, *(void *)(*(void *)(v125 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(v122, v123, v124);
          __swift_storeEnumTagSinglePayload((uint64_t)v122, 0, 1, v124);
        }
        uint64_t v279 = v120[14];
        uint64_t v280 = (char *)v7 + v279;
        uint64_t v281 = (char *)v8 + v279;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v279, 1, v124))
        {
          uint64_t v282 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v280, v281, *(void *)(*(void *)(v282 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(v280, v281, v124);
          __swift_storeEnumTagSinglePayload((uint64_t)v280, 0, 1, v124);
        }
        *(_OWORD *)((char *)v7 + v120[15]) = *(_OWORD *)((char *)v8 + v120[15]);
        *(_OWORD *)((char *)v7 + v120[16]) = *(_OWORD *)((char *)v8 + v120[16]);
        *(_OWORD *)((char *)v7 + v120[17]) = *(_OWORD *)((char *)v8 + v120[17]);
        uint64_t v326 = v120[18];
        uint64_t v327 = (char *)v7 + v326;
        uint64_t v328 = (char *)v8 + v326;
        uint64_t v329 = type metadata accessor for DateComponents();
        uint64_t v330 = *(void (**)(char *, char *, uint64_t))(*(void *)(v329 - 8) + 32);
        v330(v327, v328, v329);
        v330((char *)v7 + v120[19], (char *)v8 + v120[19], v329);
        *(_OWORD *)((char *)v7 + v120[20]) = *(_OWORD *)((char *)v8 + v120[20]);
        *(_OWORD *)((char *)v7 + v120[21]) = *(_OWORD *)((char *)v8 + v120[21]);
        *(_OWORD *)((char *)v7 + v120[22]) = *(_OWORD *)((char *)v8 + v120[22]);
        *(_OWORD *)((char *)v7 + v120[23]) = *(_OWORD *)((char *)v8 + v120[23]);
        *(_OWORD *)((char *)v7 + v120[24]) = *(_OWORD *)((char *)v8 + v120[24]);
        *(_OWORD *)((char *)v7 + v120[25]) = *(_OWORD *)((char *)v8 + v120[25]);
        *(_OWORD *)((char *)v7 + v120[26]) = *(_OWORD *)((char *)v8 + v120[26]);
        *(_OWORD *)((char *)v7 + v120[27]) = *(_OWORD *)((char *)v8 + v120[27]);
        *(_OWORD *)((char *)v7 + v120[28]) = *(_OWORD *)((char *)v8 + v120[28]);
        *(_OWORD *)((char *)v7 + v120[29]) = *(_OWORD *)((char *)v8 + v120[29]);
        *(_OWORD *)((char *)v7 + v120[30]) = *(_OWORD *)((char *)v8 + v120[30]);
        *(_OWORD *)((char *)v7 + v120[31]) = *(_OWORD *)((char *)v8 + v120[31]);
        *(_OWORD *)((char *)v7 + v120[32]) = *(_OWORD *)((char *)v8 + v120[32]);
        *(void *)((char *)v7 + v120[33]) = *(void *)((char *)v8 + v120[33]);
        *(void *)((char *)v7 + v120[34]) = *(void *)((char *)v8 + v120[34]);
        *(_OWORD *)((char *)v7 + v120[35]) = *(_OWORD *)((char *)v8 + v120[35]);
        *(_OWORD *)((char *)v7 + v120[36]) = *(_OWORD *)((char *)v8 + v120[36]);
        *(_OWORD *)((char *)v7 + v120[37]) = *(_OWORD *)((char *)v8 + v120[37]);
        uint64_t v331 = v120[38];
        uint64_t v332 = (char *)v7 + v331;
        uint64_t v333 = (char *)v8 + v331;
        uint64_t v334 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v333, 1, v334))
        {
          uint64_t v335 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v332, v333, *(void *)(*(void *)(v335 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v334 - 8) + 32))(v332, v333, v334);
          __swift_storeEnumTagSinglePayload((uint64_t)v332, 0, 1, v334);
        }
        uint64_t v9 = v1180;
        *(_OWORD *)((char *)v7 + v120[39]) = *(_OWORD *)((char *)v8 + v120[39]);
        *(_OWORD *)((char *)v7 + v120[40]) = *(_OWORD *)((char *)v8 + v120[40]);
        uint64_t v360 = v120[41];
        uint64_t v361 = (char *)v7 + v360;
        uint64_t v362 = (char *)v8 + v360;
        *(void *)uint64_t v361 = *(void *)v362;
        v361[8] = v362[8];
        *(_OWORD *)((char *)v7 + v120[42]) = *(_OWORD *)((char *)v8 + v120[42]);
        uint64_t v363 = v120[43];
        uint64_t v364 = (char *)v7 + v363;
        uint64_t v365 = (char *)v8 + v363;
        *(_OWORD *)uint64_t v364 = *(_OWORD *)v365;
        *(void *)(v364 + 13) = *(void *)(v365 + 13);
        *(_OWORD *)((char *)v7 + v120[44]) = *(_OWORD *)((char *)v8 + v120[44]);
        *(_OWORD *)((char *)v7 + v120[45]) = *(_OWORD *)((char *)v8 + v120[45]);
        *(_OWORD *)((char *)v7 + v120[46]) = *(_OWORD *)((char *)v8 + v120[46]);
        *(_OWORD *)((char *)v7 + v120[47]) = *(_OWORD *)((char *)v8 + v120[47]);
        uint64_t v366 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (document: FlightReservation, experiences: [DialogExperience]));
        *(void *)((char *)v7 + *(int *)(v366 + 48)) = *(void *)((char *)v8 + *(int *)(v366 + 48));
        goto LABEL_524;
      case 0x10u:
        uint64_t v126 = v9;
        long long v127 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v127;
        long long v128 = v8[3];
        v7[2] = v8[2];
        v7[3] = v128;
        long long v129 = v8[5];
        v7[4] = v8[4];
        v7[5] = v129;
        *((unsigned char *)v7 + 96) = *((unsigned char *)v8 + 96);
        *(_OWORD *)((char *)v7 + 104) = *(_OWORD *)((char *)v8 + 104);
        *(_OWORD *)((char *)v7 + 120) = *(_OWORD *)((char *)v8 + 120);
        uint64_t v130 = (int *)type metadata accessor for HotelReservation(0);
        uint64_t v131 = v130[14];
        uint64_t v132 = (char *)v7 + v131;
        uint64_t v133 = (char *)v8 + v131;
        uint64_t v134 = type metadata accessor for DateComponents();
        if (__swift_getEnumTagSinglePayload((uint64_t)v133, 1, v134))
        {
          uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32))(v132, v133, v134);
          __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v134);
        }
        uint64_t v283 = v130[15];
        uint64_t v284 = (char *)v7 + v283;
        uint64_t v285 = (char *)v8 + v283;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v283, 1, v134))
        {
          uint64_t v286 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v284, v285, *(void *)(*(void *)(v286 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32))(v284, v285, v134);
          __swift_storeEnumTagSinglePayload((uint64_t)v284, 0, 1, v134);
        }
        uint64_t v9 = v126;
        *(_OWORD *)((char *)v7 + v130[16]) = *(_OWORD *)((char *)v8 + v130[16]);
        *(_OWORD *)((char *)v7 + v130[17]) = *(_OWORD *)((char *)v8 + v130[17]);
        *(_OWORD *)((char *)v7 + v130[18]) = *(_OWORD *)((char *)v8 + v130[18]);
        *(_OWORD *)((char *)v7 + v130[19]) = *(_OWORD *)((char *)v8 + v130[19]);
        *(_OWORD *)((char *)v7 + v130[20]) = *(_OWORD *)((char *)v8 + v130[20]);
        *(void *)((char *)v7 + v130[21]) = *(void *)((char *)v8 + v130[21]);
        *(void *)((char *)v7 + v130[22]) = *(void *)((char *)v8 + v130[22]);
        uint64_t v336 = v130[23];
        uint64_t v337 = (char *)v7 + v336;
        v338 = (char *)v8 + v336;
        v337[8] = v338[8];
        *(void *)uint64_t v337 = *(void *)v338;
        uint64_t v339 = v130[24];
        uint64_t v340 = (char *)v7 + v339;
        uint64_t v341 = (char *)v8 + v339;
        v340[8] = v341[8];
        *(void *)uint64_t v340 = *(void *)v341;
        *(_OWORD *)((char *)v7 + v130[25]) = *(_OWORD *)((char *)v8 + v130[25]);
        *(_OWORD *)((char *)v7 + v130[26]) = *(_OWORD *)((char *)v8 + v130[26]);
        *(_OWORD *)((char *)v7 + v130[27]) = *(_OWORD *)((char *)v8 + v130[27]);
        *(_OWORD *)((char *)v7 + v130[28]) = *(_OWORD *)((char *)v8 + v130[28]);
        uint64_t v342 = v130[29];
        uint64_t v343 = (char *)v7 + v342;
        uint64_t v344 = (char *)v8 + v342;
        *(void *)uint64_t v343 = *(void *)v344;
        v343[8] = v344[8];
        goto LABEL_524;
      case 0x11u:
        long long v136 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v136;
        long long v137 = v8[3];
        v7[2] = v8[2];
        v7[3] = v137;
        long long v138 = v8[5];
        v7[4] = v8[4];
        v7[5] = v138;
        *((unsigned char *)v7 + 96) = *((unsigned char *)v8 + 96);
        *(_OWORD *)((char *)v7 + 104) = *(_OWORD *)((char *)v8 + 104);
        *(_OWORD *)((char *)v7 + 120) = *(_OWORD *)((char *)v8 + 120);
        uint64_t v139 = (int *)type metadata accessor for RestaurantReservation(0);
        uint64_t v140 = v139[14];
        uint64_t v141 = (char *)v7 + v140;
        uint64_t v142 = (char *)v8 + v140;
        uint64_t v143 = type metadata accessor for DateComponents();
        if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v143))
        {
          uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DateComponents?);
          memcpy(v141, v142, *(void *)(*(void *)(v144 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 32))(v141, v142, v143);
          __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v143);
        }
        *(_OWORD *)((char *)v7 + v139[15]) = *(_OWORD *)((char *)v8 + v139[15]);
        *(_OWORD *)((char *)v7 + v139[16]) = *(_OWORD *)((char *)v8 + v139[16]);
        *(_OWORD *)((char *)v7 + v139[17]) = *(_OWORD *)((char *)v8 + v139[17]);
        *(_OWORD *)((char *)v7 + v139[18]) = *(_OWORD *)((char *)v8 + v139[18]);
        *(_OWORD *)((char *)v7 + v139[19]) = *(_OWORD *)((char *)v8 + v139[19]);
        *(void *)((char *)v7 + v139[20]) = *(void *)((char *)v8 + v139[20]);
        *(_OWORD *)((char *)v7 + v139[21]) = *(_OWORD *)((char *)v8 + v139[21]);
        *(_OWORD *)((char *)v7 + v139[22]) = *(_OWORD *)((char *)v8 + v139[22]);
        *(_OWORD *)((char *)v7 + v139[23]) = *(_OWORD *)((char *)v8 + v139[23]);
        goto LABEL_524;
      case 0x12u:
        uint64_t v145 = v9;
        long long v146 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v146;
        long long v147 = v8[3];
        v7[2] = v8[2];
        v7[3] = v147;
        long long v148 = v8[5];
        v7[4] = v8[4];
        v7[5] = v148;
        long long v149 = v8[7];
        v7[6] = v8[6];
        v7[7] = v149;
        *((unsigned char *)v7 + 128) = *((unsigned char *)v8 + 128);
        *(_WORD *)((char *)v7 + 129) = *(_WORD *)((char *)v8 + 129);
        *((void *)v7 + 17) = *((void *)v8 + 17);
        long long v150 = v8[10];
        __n128 v7[9] = v8[9];
        v7[10] = v150;
        long long v151 = v8[12];
        v7[11] = v8[11];
        v7[12] = v151;
        long long v152 = v8[14];
        __n128 v7[13] = v8[13];
        v7[14] = v152;
        v7[15] = v8[15];
        *((void *)v7 + 32) = *((void *)v8 + 32);
        *(_OWORD *)((char *)v7 + 264) = *(_OWORD *)((char *)v8 + 264);
        *(_OWORD *)((char *)v7 + 280) = *(_OWORD *)((char *)v8 + 280);
        *(_OWORD *)((char *)v7 + 296) = *(_OWORD *)((char *)v8 + 296);
        *(_OWORD *)((char *)v7 + 312) = *(_OWORD *)((char *)v8 + 312);
        *(_OWORD *)((char *)v7 + 328) = *(_OWORD *)((char *)v8 + 328);
        *(_OWORD *)((char *)v7 + 344) = *(_OWORD *)((char *)v8 + 344);
        *(_OWORD *)((char *)v7 + 360) = *(_OWORD *)((char *)v8 + 360);
        *((unsigned char *)v7 + 384) = *((unsigned char *)v8 + 384);
        *((void *)v7 + 47) = *((void *)v8 + 47);
        *(_OWORD *)((char *)v7 + 392) = *(_OWORD *)((char *)v8 + 392);
        *(_OWORD *)((char *)v7 + 408) = *(_OWORD *)((char *)v8 + 408);
        uint64_t v153 = type metadata accessor for RentalCarReservation(0);
        uint64_t v154 = *(int *)(v153 + 140);
        uint64_t v155 = (char *)v7 + v154;
        uint64_t v156 = (char *)v8 + v154;
        uint64_t v58 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v156, 1, v58))
        {
          uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v155, v156, *(void *)(*(void *)(v157 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v155, v156, v58);
          __swift_storeEnumTagSinglePayload((uint64_t)v155, 0, 1, v58);
        }
        uint64_t v9 = v145;
        uint64_t v287 = *(int *)(v153 + 144);
        uint64_t v260 = (char *)v7 + v287;
        uint64_t v261 = (char *)v8 + v287;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v287, 1, v58)) {
          goto LABEL_139;
        }
        goto LABEL_136;
      case 0x13u:
        uint64_t v158 = v9;
        long long v159 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v159;
        long long v160 = v8[3];
        v7[2] = v8[2];
        v7[3] = v160;
        long long v161 = v8[5];
        v7[4] = v8[4];
        v7[5] = v161;
        long long v162 = v8[7];
        v7[6] = v8[6];
        v7[7] = v162;
        *((unsigned char *)v7 + 128) = *((unsigned char *)v8 + 128);
        *(_WORD *)((char *)v7 + 129) = *(_WORD *)((char *)v8 + 129);
        *((void *)v7 + 17) = *((void *)v8 + 17);
        long long v163 = v8[10];
        __n128 v7[9] = v8[9];
        v7[10] = v163;
        long long v164 = v8[12];
        v7[11] = v8[11];
        v7[12] = v164;
        *((void *)v7 + 26) = *((void *)v8 + 26);
        *(_OWORD *)((char *)v7 + 216) = *(_OWORD *)((char *)v8 + 216);
        *(_OWORD *)((char *)v7 + 232) = *(_OWORD *)((char *)v8 + 232);
        *(_OWORD *)((char *)v7 + 248) = *(_OWORD *)((char *)v8 + 248);
        *(_OWORD *)((char *)v7 + 264) = *(_OWORD *)((char *)v8 + 264);
        *((unsigned char *)v7 + 296) = *((unsigned char *)v8 + 296);
        uint64_t v165 = *((void *)v8 + 36);
        *((void *)v7 + 35) = *((void *)v8 + 35);
        *((void *)v7 + 36) = v165;
        uint64_t v166 = type metadata accessor for TicketedTransportation(0);
        uint64_t v167 = *(int *)(v166 + 112);
        uint64_t v168 = (char *)v7 + v167;
        uint64_t v169 = (char *)v8 + v167;
        uint64_t v58 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v169, 1, v58))
        {
          uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v168, v169, *(void *)(*(void *)(v170 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v168, v169, v58);
          __swift_storeEnumTagSinglePayload((uint64_t)v168, 0, 1, v58);
        }
        uint64_t v9 = v158;
        uint64_t v288 = *(int *)(v166 + 116);
        uint64_t v260 = (char *)v7 + v288;
        uint64_t v261 = (char *)v8 + v288;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v288, 1, v58)) {
          goto LABEL_139;
        }
        goto LABEL_136;
      case 0x14u:
        long long v171 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v171;
        long long v172 = v8[3];
        v7[2] = v8[2];
        v7[3] = v172;
        long long v173 = v8[5];
        v7[4] = v8[4];
        v7[5] = v173;
        long long v174 = v8[7];
        v7[6] = v8[6];
        v7[7] = v174;
        *((unsigned char *)v7 + 128) = *((unsigned char *)v8 + 128);
        *(_WORD *)((char *)v7 + 129) = *(_WORD *)((char *)v8 + 129);
        *((void *)v7 + 17) = *((void *)v8 + 17);
        long long v175 = v8[10];
        __n128 v7[9] = v8[9];
        v7[10] = v175;
        long long v176 = v8[12];
        v7[11] = v8[11];
        v7[12] = v176;
        long long v177 = v8[14];
        __n128 v7[13] = v8[13];
        v7[14] = v177;
        *((void *)v7 + 30) = *((void *)v8 + 30);
        *(_OWORD *)((char *)v7 + 248) = *(_OWORD *)((char *)v8 + 248);
        *(_OWORD *)((char *)v7 + 264) = *(_OWORD *)((char *)v8 + 264);
        *((unsigned char *)v7 + 296) = *((unsigned char *)v8 + 296);
        uint64_t v178 = *((void *)v8 + 36);
        *((void *)v7 + 35) = *((void *)v8 + 35);
        *((void *)v7 + 36) = v178;
        v7[19] = v8[19];
        uint64_t v179 = (int *)type metadata accessor for TicketedShow(0);
        uint64_t v180 = v179[29];
        uint64_t v181 = (char *)v7 + v180;
        uint64_t v182 = (char *)v8 + v180;
        uint64_t v183 = type metadata accessor for URL();
        uint64_t v1181 = v9;
        if (__swift_getEnumTagSinglePayload((uint64_t)v182, 1, v183))
        {
          uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v181, v182, *(void *)(*(void *)(v184 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 32))(v181, v182, v183);
          __swift_storeEnumTagSinglePayload((uint64_t)v181, 0, 1, v183);
        }
        *(_OWORD *)((char *)v7 + v179[30]) = *(_OWORD *)((char *)v8 + v179[30]);
        uint64_t v289 = v179[31];
        uint64_t v290 = (char *)v7 + v289;
        uint64_t v291 = (char *)v8 + v289;
        uint64_t v58 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v291, 1, v58))
        {
          uint64_t v292 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v290, v291, *(void *)(*(void *)(v292 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v290, v291, v58);
          __swift_storeEnumTagSinglePayload((uint64_t)v290, 0, 1, v58);
        }
        uint64_t v9 = v1181;
        uint64_t v345 = v179[32];
        uint64_t v260 = (char *)v7 + v345;
        uint64_t v261 = (char *)v8 + v345;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v345, 1, v58)) {
          goto LABEL_139;
        }
        goto LABEL_136;
      case 0x15u:
        uint64_t v185 = v9;
        long long v186 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v186;
        long long v187 = v8[3];
        v7[2] = v8[2];
        v7[3] = v187;
        long long v188 = v8[5];
        v7[4] = v8[4];
        v7[5] = v188;
        long long v189 = v8[7];
        v7[6] = v8[6];
        v7[7] = v189;
        *((unsigned char *)v7 + 128) = *((unsigned char *)v8 + 128);
        *(_WORD *)((char *)v7 + 129) = *(_WORD *)((char *)v8 + 129);
        *((void *)v7 + 17) = *((void *)v8 + 17);
        long long v190 = v8[10];
        __n128 v7[9] = v8[9];
        v7[10] = v190;
        long long v191 = v8[12];
        v7[11] = v8[11];
        v7[12] = v191;
        long long v192 = v8[14];
        __n128 v7[13] = v8[13];
        v7[14] = v192;
        long long v193 = v8[16];
        v7[15] = v8[15];
        v7[16] = v193;
        *((unsigned char *)v7 + 280) = *((unsigned char *)v8 + 280);
        *((void *)v7 + 34) = *((void *)v8 + 34);
        v7[18] = v8[18];
        uint64_t v194 = type metadata accessor for Appointment(0);
        uint64_t v195 = *(int *)(v194 + 108);
        uint64_t v196 = (char *)v7 + v195;
        uint64_t v197 = (char *)v8 + v195;
        uint64_t v58 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v58))
        {
          uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v196, v197, *(void *)(*(void *)(v198 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v196, v197, v58);
          __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v58);
        }
        uint64_t v9 = v185;
        uint64_t v293 = *(int *)(v194 + 112);
        uint64_t v260 = (char *)v7 + v293;
        uint64_t v261 = (char *)v8 + v293;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v293, 1, v58))
        {
LABEL_139:
          uint64_t v346 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v260, v261, *(void *)(*(void *)(v346 - 8) + 64));
        }
        else
        {
LABEL_136:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v260, v261, v58);
          __swift_storeEnumTagSinglePayload((uint64_t)v260, 0, 1, v58);
        }
        goto LABEL_524;
      case 0x16u:
        uint64_t v199 = v9;
        long long v200 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v200;
        long long v201 = v8[3];
        v7[2] = v8[2];
        v7[3] = v201;
        long long v202 = v8[5];
        v7[4] = v8[4];
        v7[5] = v202;
        long long v203 = v8[7];
        v7[6] = v8[6];
        v7[7] = v203;
        *((unsigned char *)v7 + 128) = *((unsigned char *)v8 + 128);
        *(_WORD *)((char *)v7 + 129) = *(_WORD *)((char *)v8 + 129);
        *((void *)v7 + 17) = *((void *)v8 + 17);
        long long v204 = v8[10];
        __n128 v7[9] = v8[9];
        v7[10] = v204;
        long long v205 = v8[12];
        v7[11] = v8[11];
        v7[12] = v205;
        long long v206 = v8[14];
        __n128 v7[13] = v8[13];
        v7[14] = v206;
        v7[15] = v8[15];
        uint64_t v207 = (int *)type metadata accessor for Party(0);
        uint64_t v208 = v207[24];
        uint64_t v209 = (char *)v7 + v208;
        uint64_t v210 = (char *)v8 + v208;
        uint64_t v211 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v210, 1, v211))
        {
          uint64_t v212 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v209, v210, *(void *)(*(void *)(v212 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 32))(v209, v210, v211);
          __swift_storeEnumTagSinglePayload((uint64_t)v209, 0, 1, v211);
        }
        uint64_t v294 = v207[25];
        uint64_t v295 = (char *)v7 + v294;
        uint64_t v296 = (char *)v8 + v294;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v294, 1, v211))
        {
          uint64_t v297 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v295, v296, *(void *)(*(void *)(v297 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 32))(v295, v296, v211);
          __swift_storeEnumTagSinglePayload((uint64_t)v295, 0, 1, v211);
        }
        uint64_t v9 = v199;
        uint64_t v347 = v207[26];
        uint64_t v85 = (char *)v7 + v347;
        uint64_t v86 = (char *)v8 + v347;
        uint64_t v87 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v87)) {
          goto LABEL_146;
        }
        goto LABEL_128;
      case 0x17u:
        uint64_t v213 = v9;
        long long v214 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v214;
        long long v215 = v8[3];
        v7[2] = v8[2];
        v7[3] = v215;
        long long v216 = v8[5];
        v7[4] = v8[4];
        v7[5] = v216;
        long long v217 = v8[7];
        v7[6] = v8[6];
        v7[7] = v217;
        *((unsigned char *)v7 + 128) = *((unsigned char *)v8 + 128);
        *(_WORD *)((char *)v7 + 129) = *(_WORD *)((char *)v8 + 129);
        *((void *)v7 + 17) = *((void *)v8 + 17);
        long long v218 = v8[10];
        __n128 v7[9] = v8[9];
        v7[10] = v218;
        long long v219 = v8[12];
        v7[11] = v8[11];
        v7[12] = v219;
        __n128 v7[13] = v8[13];
        uint64_t v220 = (int *)type metadata accessor for Trip(0);
        uint64_t v221 = v220[22];
        uint64_t v222 = (char *)v7 + v221;
        uint64_t v223 = (char *)v8 + v221;
        uint64_t v224 = type metadata accessor for Date();
        if (__swift_getEnumTagSinglePayload((uint64_t)v223, 1, v224))
        {
          uint64_t v225 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v222, v223, *(void *)(*(void *)(v225 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v222, v223, v224);
          __swift_storeEnumTagSinglePayload((uint64_t)v222, 0, 1, v224);
        }
        uint64_t v298 = v220[23];
        uint64_t v299 = (char *)v7 + v298;
        uint64_t v300 = (char *)v8 + v298;
        if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v298, 1, v224))
        {
          uint64_t v301 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
          memcpy(v299, v300, *(void *)(*(void *)(v301 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v299, v300, v224);
          __swift_storeEnumTagSinglePayload((uint64_t)v299, 0, 1, v224);
        }
        uint64_t v9 = v213;
        uint64_t v348 = v220[24];
        uint64_t v349 = (char *)v7 + v348;
        uint64_t v350 = (char *)v8 + v348;
        *(void *)uint64_t v349 = *(void *)v350;
        v349[8] = v350[8];
        uint64_t v351 = v220[25];
        uint64_t v85 = (char *)v7 + v351;
        uint64_t v86 = (char *)v8 + v351;
        uint64_t v87 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v87))
        {
LABEL_146:
          uint64_t v352 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v85, v86, *(void *)(*(void *)(v352 - 8) + 64));
        }
        else
        {
LABEL_128:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
          __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v87);
        }
        goto LABEL_524;
      case 0x18u:
        long long v226 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v226;
        v7[2] = v8[2];
        uint64_t v227 = (int *)type metadata accessor for GlobalItem();
        uint64_t v228 = v227[7];
        uint64_t v229 = (char *)v7 + v228;
        uint64_t v230 = (char *)v8 + v228;
        uint64_t v231 = type metadata accessor for GlobalDialog();
        if (__swift_getEnumTagSinglePayload((uint64_t)v230, 1, v231))
        {
          uint64_t v232 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GlobalDialog?);
          memcpy(v229, v230, *(void *)(*(void *)(v232 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 32))(v229, v230, v231);
          __swift_storeEnumTagSinglePayload((uint64_t)v229, 0, 1, v231);
        }
        *(_OWORD *)((char *)v7 + v227[8]) = *(_OWORD *)((char *)v8 + v227[8]);
        *((unsigned char *)v7 + v227[9]) = *((unsigned char *)v8 + v227[9]);
        uint64_t v302 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (GlobalItem, experiences: [DialogExperience]));
        *(void *)((char *)v7 + *(int *)(v302 + 48)) = *(void *)((char *)v8 + *(int *)(v302 + 48));
        goto LABEL_524;
      case 0x1Au:
        long long v233 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v233;
        v7[2] = v8[2];
        *((void *)v7 + 6) = *((void *)v8 + 6);
        uint64_t v234 = (int *)type metadata accessor for Answer(0);
        uint64_t v235 = v234[9];
        uint64_t v236 = (char *)v7 + v235;
        uint64_t v237 = (char *)v8 + v235;
        uint64_t v238 = type metadata accessor for URL();
        if (__swift_getEnumTagSinglePayload((uint64_t)v237, 1, v238))
        {
          uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
          memcpy(v236, v237, *(void *)(*(void *)(v239 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v238 - 8) + 32))(v236, v237, v238);
          __swift_storeEnumTagSinglePayload((uint64_t)v236, 0, 1, v238);
        }
        *((unsigned char *)v7 + v234[10]) = *((unsigned char *)v8 + v234[10]);
        *(_OWORD *)((char *)v7 + v234[11]) = *(_OWORD *)((char *)v8 + v234[11]);
LABEL_524:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
        break;
    }
    *(void *)((char *)v7 + *(int *)(v9 + 20)) = *(void *)((char *)v8 + *(int *)(v9 + 20));
    *(_OWORD *)((char *)v7 + *(int *)(v9 + 24)) = *(_OWORD *)((char *)v8 + *(int *)(v9 + 24));
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 44)) = *(_OWORD *)(a2 + *(int *)(a3 + 44));
  return a1;
}