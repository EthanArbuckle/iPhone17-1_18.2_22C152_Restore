BOOL sub_2523D1634(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2523D1648()
{
  return sub_25247B390();
}

uint64_t sub_2523D1690()
{
  return sub_25247B360();
}

uint64_t sub_2523D16BC()
{
  return sub_25247B390();
}

id sub_2523D1760()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CloudKitQueryLogEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2523D1804()
{
  return type metadata accessor for CloudKitQueryLogEvent();
}

uint64_t type metadata accessor for CloudKitQueryLogEvent()
{
  uint64_t result = qword_269C04378;
  if (!qword_269C04378) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2523D1858()
{
  uint64_t result = sub_25247A540();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void type metadata accessor for HMMCoreAnalyticsEventOptions(uint64_t a1)
{
}

void type metadata accessor for QualityOfService(uint64_t a1)
{
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CloudKitQueryLogEvent.CloudKitQueryState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CloudKitQueryLogEvent.CloudKitQueryState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2523D1A94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

uint64_t sub_2523D1ABC(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_2523D1AC8(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CloudKitQueryLogEvent.CloudKitQueryState()
{
  return &type metadata for CloudKitQueryLogEvent.CloudKitQueryState;
}

void type metadata accessor for Scope(uint64_t a1)
{
}

uint64_t sub_2523D1AF4(uint64_t a1)
{
  uint64_t v2 = sub_2523D224C(&qword_269C04448, type metadata accessor for CKError);

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_2523D1B60(uint64_t a1)
{
  uint64_t v2 = sub_2523D224C(&qword_269C04448, type metadata accessor for CKError);

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_2523D1BD0(uint64_t a1)
{
  uint64_t v2 = sub_2523D224C(&qword_269C04480, type metadata accessor for CKError);

  return MEMORY[0x270EEF788](a1, v2);
}

id sub_2523D1C3C()
{
  return *v0;
}

uint64_t sub_2523D1C44@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void *sub_2523D1C4C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_2523D1C5C(void *a1@<X8>)
{
  *a1 = *v1;
}

unint64_t sub_2523D1C6C()
{
  unint64_t result = qword_269C04400;
  if (!qword_269C04400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04400);
  }
  return result;
}

void *sub_2523D1CC0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_2523D1CD4(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_2523D1D04(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_2523D1D18(void *result)
{
  *v1 &= *result;
  return result;
}

void sub_2523D1D2C(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_2523D1D34@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_2523D1D48@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_2523D1D5C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_2523D1D88@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_2523D1DAC(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_2523D1DC0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_2523D1DD4(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_2523D1DE8(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_2523D1DFC(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_2523D1E10()
{
  return *v0 == 0;
}

uint64_t sub_2523D1E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_2523D1E38(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_2523D1E4C()
{
  return sub_25247A840();
}

uint64_t sub_2523D1E5C(uint64_t a1)
{
  uint64_t v2 = sub_2523D224C(&qword_269C04480, type metadata accessor for CKError);

  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_2523D1EC8(uint64_t a1)
{
  uint64_t v2 = sub_2523D224C(&qword_269C04480, type metadata accessor for CKError);

  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_2523D1F34(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_2523D224C(&qword_269C04480, type metadata accessor for CKError);
  id v5 = a1;

  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_2523D1FC4()
{
  id v1 = *v0;
  uint64_t v2 = sub_25247AE80();

  return v2;
}

uint64_t sub_2523D1FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2523D224C(&qword_269C04480, type metadata accessor for CKError);

  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_2523D2078()
{
  return sub_25247B390();
}

void *sub_2523D20D8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2523D20E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_2523D2324(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_2523D2124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2523D224C(&qword_269C04480, type metadata accessor for CKError);

  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

BOOL sub_2523D21A8(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2523D21BC()
{
  return sub_2523D224C(&qword_269C04408, type metadata accessor for HMMCoreAnalyticsEventOptions);
}

uint64_t sub_2523D2204()
{
  return sub_2523D224C(&qword_269C04410, type metadata accessor for HMMCoreAnalyticsEventOptions);
}

uint64_t sub_2523D224C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2523D2294()
{
  return sub_2523D224C(&qword_269C04418, type metadata accessor for HMMCoreAnalyticsEventOptions);
}

uint64_t sub_2523D22DC()
{
  return sub_2523D224C(&qword_269C04420, type metadata accessor for HMMCoreAnalyticsEventOptions);
}

uint64_t sub_2523D2324(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void type metadata accessor for CKError(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_2523D2384()
{
  return sub_2523D224C(&qword_269C04438, type metadata accessor for CKError);
}

uint64_t sub_2523D23CC()
{
  return sub_2523D224C(&qword_269C04440, type metadata accessor for CKError);
}

uint64_t sub_2523D2414()
{
  return sub_2523D224C(&qword_269C04448, type metadata accessor for CKError);
}

uint64_t sub_2523D245C()
{
  return sub_2523D224C(&qword_269C04450, type metadata accessor for CKError);
}

uint64_t sub_2523D24A4()
{
  return sub_2523D224C(&qword_269C04458, type metadata accessor for CKError);
}

uint64_t sub_2523D24EC()
{
  return sub_2523D224C(&qword_269C04460, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

void sub_2523D2548(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_2523D2590()
{
  return sub_2523D224C(&qword_269C04468, type metadata accessor for Code);
}

unint64_t sub_2523D25DC()
{
  unint64_t result = qword_269C04470;
  if (!qword_269C04470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04470);
  }
  return result;
}

uint64_t sub_2523D2630()
{
  return sub_2523D224C(&qword_269C04478, type metadata accessor for Code);
}

uint64_t sub_2523D2678()
{
  return sub_2523D224C(&qword_269C04480, type metadata accessor for CKError);
}

uint64_t getEnumTagSinglePayload for InternalAccessoryEventStateCodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for InternalAccessoryEventStateCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2523D2840);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_2523D2868(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for InternalAccessoryEventStateCodingKeys()
{
  return &type metadata for InternalAccessoryEventStateCodingKeys;
}

uint64_t sub_2523D2884(char *a1, char *a2)
{
  return sub_2523D2EDC(*a1, *a2);
}

uint64_t sub_2523D2890(char a1, char a2)
{
  if (qword_25247E4E0[a1] == qword_25247E4E0[a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_25247B260();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_2523D28F8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD00000000000001BLL;
  }
  else {
    unint64_t v3 = 0xD000000000000032;
  }
  if (v2) {
    unint64_t v4 = 0x800000025247BDD0;
  }
  else {
    unint64_t v4 = 0x800000025247BE10;
  }
  if (a2) {
    unint64_t v5 = 0xD00000000000001BLL;
  }
  else {
    unint64_t v5 = 0xD000000000000032;
  }
  if (a2) {
    unint64_t v6 = 0x800000025247BE10;
  }
  else {
    unint64_t v6 = 0x800000025247BDD0;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_25247B260();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2523D29A4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC00000070757465;
  unint64_t v3 = 0x536C616974696E49;
  uint64_t v4 = a1;
  unint64_t v5 = 0x536C616974696E49;
  unint64_t v6 = 0xEC00000070757465;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x446C616974696E49;
      unint64_t v6 = 0xEF64616F6C6E776FLL;
      break;
    case 2:
      unint64_t v5 = 0x556C616974696E49;
      unsigned int v7 = 1634692208;
      goto LABEL_8;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x6369646F69726550;
      break;
    case 4:
      unint64_t v5 = 0xD000000000000011;
      unint64_t v6 = 0x800000025247BE60;
      break;
    case 5:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v5 = 0x74726174736552;
      break;
    case 6:
      unint64_t v5 = 0x6769725468737550;
      unsigned int v7 = 1701995879;
LABEL_8:
      unint64_t v6 = v7 | 0xED00006400000000;
      break;
    case 7:
      unint64_t v5 = 0x6E79537465736552;
      unint64_t v6 = 0xE900000000000063;
      break;
    case 8:
      int v8 = "UserActionExplicit";
      goto LABEL_13;
    case 9:
      int v8 = "UserActionImplicit";
LABEL_13:
      unint64_t v6 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 10:
      unint64_t v5 = 0x53676E6972616853;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0x446C616974696E49;
      unint64_t v2 = 0xEF64616F6C6E776FLL;
      break;
    case 2:
      unint64_t v3 = 0x556C616974696E49;
      unsigned int v9 = 1634692208;
      goto LABEL_21;
    case 3:
      unint64_t v2 = 0xE800000000000000;
      unint64_t v3 = 0x6369646F69726550;
      break;
    case 4:
      unint64_t v3 = 0xD000000000000011;
      unint64_t v2 = 0x800000025247BE60;
      break;
    case 5:
      unint64_t v2 = 0xE700000000000000;
      unint64_t v3 = 0x74726174736552;
      break;
    case 6:
      unint64_t v3 = 0x6769725468737550;
      unsigned int v9 = 1701995879;
LABEL_21:
      unint64_t v2 = v9 | 0xED00006400000000;
      break;
    case 7:
      unint64_t v3 = 0x6E79537465736552;
      unint64_t v2 = 0xE900000000000063;
      break;
    case 8:
      v10 = "UserActionExplicit";
      goto LABEL_26;
    case 9:
      v10 = "UserActionImplicit";
LABEL_26:
      unint64_t v2 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000012;
      break;
    case 10:
      unint64_t v3 = 0x53676E6972616853;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v11 = 1;
  }
  else {
    char v11 = sub_25247B260();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_2523D2CF4(char a1, char a2)
{
  if (*(void *)&aData_2[8 * a1] == *(void *)&aData_2[8 * a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_25247B260();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_2523D2D5C(char a1, char a2)
{
  if (*(void *)&aD_1[8 * a1] == *(void *)&aD_1[8 * a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_25247B260();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_2523D2DC4(char a1, char a2)
{
  if (*(void *)&aData_3[8 * a1] == *(void *)&aData_3[8 * a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_25247B260();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_2523D2E2C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6974707972636E45;
  }
  else {
    uint64_t v3 = 0x746E657645;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xED000079654B6E6FLL;
  }
  if (a2) {
    uint64_t v5 = 0x6974707972636E45;
  }
  else {
    uint64_t v5 = 0x746E657645;
  }
  if (a2) {
    unint64_t v6 = 0xED000079654B6E6FLL;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_25247B260();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2523D2EDC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6574617473;
  }
  else {
    uint64_t v3 = 115;
  }
  if (v2) {
    unint64_t v4 = 0xE100000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6574617473;
  }
  else {
    uint64_t v5 = 115;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE100000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_25247B260();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2523D2F74()
{
  return sub_25247B390();
}

uint64_t sub_2523D2FE8()
{
  sub_25247A8D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2523D3048()
{
  return sub_25247B390();
}

uint64_t sub_2523D30B8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_25247B130();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_2523D3118(uint64_t *a1@<X8>)
{
  uint64_t v2 = 115;
  if (*v1) {
    uint64_t v2 = 0x6574617473;
  }
  unint64_t v3 = 0xE100000000000000;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2523D3148()
{
  if (*v0) {
    return 0x6574617473;
  }
  else {
    return 115;
  }
}

uint64_t sub_2523D3174@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_25247B130();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_2523D31D8()
{
  return 0;
}

void sub_2523D31E4(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2523D31F0(uint64_t a1)
{
  unint64_t v2 = sub_2523D3370();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2523D322C(uint64_t a1)
{
  unint64_t v2 = sub_2523D3370();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_2523D326C()
{
  unint64_t result = qword_269C04550;
  if (!qword_269C04550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04550);
  }
  return result;
}

unint64_t sub_2523D32C4()
{
  unint64_t result = qword_269C04558;
  if (!qword_269C04558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04558);
  }
  return result;
}

unint64_t sub_2523D331C()
{
  unint64_t result = qword_269C04560;
  if (!qword_269C04560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04560);
  }
  return result;
}

unint64_t sub_2523D3370()
{
  unint64_t result = qword_269C04568;
  if (!qword_269C04568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04568);
  }
  return result;
}

void sub_2523D33C4(void *a1, uint64_t a2)
{
  v4[4] = sub_2523D36A0;
  v4[5] = a2;
  v4[0] = MEMORY[0x263EF8330];
  v4[1] = 1107296256;
  v4[2] = sub_25244C4D8;
  v4[3] = &block_descriptor;
  unint64_t v3 = _Block_copy(v4);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_resetConfigurationWithReply_, v3);
  _Block_release(v3);
}

void sub_2523D348C(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    uint64_t v8 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    unsigned int v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_2523D380C;
    v9[6] = v7;
    id v10 = a1;
    swift_retain();
    id v11 = a1;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C04578, (uint64_t)v9);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v12 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v13 = (void *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a2;
    v13[5] = sub_2523D3704;
    v13[6] = 0;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C04570, (uint64_t)v13);
    swift_release();
  }
}

void sub_2523D36A0(void *a1)
{
  sub_2523D348C(a1, v1);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_2523D370C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  unsigned int v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *unsigned int v9 = v2;
  v9[1] = sub_2523D3A1C;
  return sub_2523D4F70(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_2523D37D4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2523D380C(uint64_t a1)
{
  return sub_25245E1A4(a1, (id *)(v1 + 16));
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2523D3860(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  unsigned int v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *unsigned int v9 = v2;
  v9[1] = sub_2523D3928;
  return sub_2523D4F70(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_2523D3928()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t static HMVCommands.clearLocalDatabase(homes:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_2523D3A40, 0, 0);
}

uint64_t sub_2523D3A40()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v5 = (uint64_t (*)(void))((char *)&dword_269C04588 + dword_269C04588);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_2523D3B14;
  return v5();
}

uint64_t sub_2523D3B14()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2523D3C48;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2523D3C30;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2523D3C30()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2523D3C48()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_2523D3CAC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3;
  if (a3)
  {
    sub_25247A540();
    uint64_t v3 = (void *)sub_25247A9E0();
  }
  v7[4] = sub_2523D703C;
  v7[5] = a2;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  v7[2] = sub_25244C4D8;
  v7[3] = &block_descriptor_0;
  uint64_t v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilClearLocalDatabaseWithHomes_reply_, v3, v6);
  _Block_release(v6);
}

void sub_2523D3DA4(void *a1, uint64_t a2)
{
  sub_2523D3CAC(a1, a2, *(void **)(v2 + 16));
}

void sub_2523D3DAC(void *a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    uint64_t v7 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = 0;
    v8[3] = 0;
    v8[4] = a2;
    v8[5] = sub_2523D7084;
    v8[6] = v6;
    id v9 = a1;
    swift_retain();
    id v10 = a1;
    swift_retain();
    sub_25240BCB0((uint64_t)v5, (uint64_t)&unk_269C04658, (uint64_t)v8);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v11 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = 0;
    v12[3] = 0;
    v12[4] = a2;
    v12[5] = sub_2523D3704;
    v12[6] = 0;
    swift_retain();
    sub_25240BCB0((uint64_t)v5, (uint64_t)&unk_269C04650, (uint64_t)v12);
    swift_release();
  }
}

uint64_t sub_2523D3FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = sub_25247A6A0();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2523D4084, 0, 0);
}

uint64_t sub_2523D4084()
{
  if (qword_269C04320 != -1) {
    swift_once();
  }
  if (byte_269C05030 == 1)
  {
    type metadata accessor for XPCHMVUtilClient();
    uint64_t v1 = swift_allocObject();
    *(void *)(v0 + 64) = v1;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    *(void *)(v1 + 48) = 0;
    long long v14 = *(_OWORD *)(v0 + 24);
    sub_2524493E8();
    uint64_t v2 = swift_task_alloc();
    *(void *)(v0 + 72) = v2;
    *(void *)(v2 + 16) = v1;
    *(_OWORD *)(v2 + 24) = v14;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_2523D4300;
    uint64_t v4 = *(void *)(v0 + 16);
    uint64_t v5 = MEMORY[0x263F8EE60] + 8;
    return MEMORY[0x270FA2360](v4, 0, 0, 0xD00000000000001ELL, 0x800000025247C410, sub_2523D7018, v2, v5);
  }
  else
  {
    sub_2523E6844(*(void *)(v0 + 56));
    uint64_t v6 = sub_25247A680();
    os_log_type_t v7 = sub_25247AD20();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_2523CF000, v6, v7, "Rejected request to connect because device does not have an internal build", v8, 2u);
      MEMORY[0x2533B5DC0](v8, -1, -1);
    }
    uint64_t v10 = *(void *)(v0 + 48);
    uint64_t v9 = *(void *)(v0 + 56);
    uint64_t v11 = *(void *)(v0 + 40);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_2523D4F1C();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_2523D4300()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2523D4488;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2523D441C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2523D441C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2523D4488()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2523D44FC(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = sub_25247A6A0();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2523D45BC, 0, 0);
}

uint64_t sub_2523D45BC()
{
  if (qword_269C04320 != -1) {
    swift_once();
  }
  if (byte_269C05030 == 1)
  {
    type metadata accessor for XPCHMVUtilClient();
    uint64_t v1 = swift_allocObject();
    *(void *)(v0 + 72) = v1;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    *(void *)(v1 + 48) = 0;
    long long v13 = *(_OWORD *)(v0 + 32);
    sub_2524493E8();
    uint64_t v2 = swift_task_alloc();
    *(void *)(v0 + 80) = v2;
    *(void *)(v2 + 16) = v1;
    *(_OWORD *)(v2 + 24) = v13;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_2523D4838;
    uint64_t v4 = MEMORY[0x263F8D310];
    return MEMORY[0x270FA2360](v0 + 16, 0, 0, 0xD00000000000001ELL, 0x800000025247C410, sub_2523D6DE4, v2, v4);
  }
  else
  {
    sub_2523E6844(*(void *)(v0 + 64));
    uint64_t v5 = sub_25247A680();
    os_log_type_t v6 = sub_25247AD20();
    if (os_log_type_enabled(v5, v6))
    {
      os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v7 = 0;
      _os_log_impl(&dword_2523CF000, v5, v6, "Rejected request to connect because device does not have an internal build", v7, 2u);
      MEMORY[0x2533B5DC0](v7, -1, -1);
    }
    uint64_t v9 = *(void *)(v0 + 56);
    uint64_t v8 = *(void *)(v0 + 64);
    uint64_t v10 = *(void *)(v0 + 48);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    sub_2523D4F1C();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_2523D4838()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2523D49D4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2523D4954;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2523D4954()
{
  swift_release();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v1, v2);
}

uint64_t sub_2523D49D4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2523D4A48(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = sub_25247A6A0();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2523D4B08, 0, 0);
}

uint64_t sub_2523D4B08()
{
  if (qword_269C04320 != -1) {
    swift_once();
  }
  if (byte_269C05030 == 1)
  {
    type metadata accessor for XPCHMVUtilClient();
    uint64_t v1 = swift_allocObject();
    *(void *)(v0 + 64) = v1;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    *(void *)(v1 + 48) = 0;
    long long v13 = *(_OWORD *)(v0 + 24);
    sub_2524493E8();
    uint64_t v2 = swift_task_alloc();
    *(void *)(v0 + 72) = v2;
    *(void *)(v2 + 16) = v1;
    *(_OWORD *)(v2 + 24) = v13;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v3;
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C045A0);
    *uint64_t v3 = v0;
    v3[1] = sub_2523D4D8C;
    return MEMORY[0x270FA2360](v0 + 16, 0, 0, 0xD00000000000001ELL, 0x800000025247C410, sub_2523D6B0C, v2, v4);
  }
  else
  {
    sub_2523E6844(*(void *)(v0 + 56));
    uint64_t v5 = sub_25247A680();
    os_log_type_t v6 = sub_25247AD20();
    if (os_log_type_enabled(v5, v6))
    {
      os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v7 = 0;
      _os_log_impl(&dword_2523CF000, v5, v6, "Rejected request to connect because device does not have an internal build", v7, 2u);
      MEMORY[0x2533B5DC0](v7, -1, -1);
    }
    uint64_t v9 = *(void *)(v0 + 48);
    uint64_t v8 = *(void *)(v0 + 56);
    uint64_t v10 = *(void *)(v0 + 40);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    sub_2523D4F1C();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_2523D4D8C()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2523D4488;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2523D4EA8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2523D4EA8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

unint64_t sub_2523D4F1C()
{
  unint64_t result = qword_269C04598;
  if (!qword_269C04598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04598);
  }
  return result;
}

uint64_t sub_2523D4F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C045E8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60);
  v6[13] = v8;
  v6[14] = *(void *)(v8 - 8);
  v6[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2523D507C, a4, 0);
}

uint64_t sub_2523D507C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[8] + *(void *)(*(void *)v0[8] + 112);
  swift_beginAccess();
  sub_2523D6F54(v4, v3, &qword_269C045E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2523D6FB8(v0[12], &qword_269C045E8);
  }
  else
  {
    uint64_t v6 = v0[14];
    uint64_t v5 = v0[15];
    uint64_t v7 = v0[13];
    uint64_t v8 = v0[11];
    uint64_t v9 = (void (*)(uint64_t))v0[9];
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 32))(v5, v0[12], v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v8, 1, 1, v7);
    swift_beginAccess();
    sub_2523D6DF0(v8, v4, &qword_269C045E8);
    swift_endAccess();
    v9(v5);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_2523D5234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04610);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04618);
  v6[13] = v8;
  v6[14] = *(void *)(v8 - 8);
  v6[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2523D5340, a4, 0);
}

uint64_t sub_2523D5340()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[8] + *(void *)(*(void *)v0[8] + 112);
  swift_beginAccess();
  sub_2523D6F54(v4, v3, &qword_269C04610);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2523D6FB8(v0[12], &qword_269C04610);
  }
  else
  {
    uint64_t v6 = v0[14];
    uint64_t v5 = v0[15];
    uint64_t v7 = v0[13];
    uint64_t v8 = v0[11];
    uint64_t v9 = (void (*)(uint64_t))v0[9];
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 32))(v5, v0[12], v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v8, 1, 1, v7);
    swift_beginAccess();
    sub_2523D6DF0(v8, v4, &qword_269C04610);
    swift_endAccess();
    v9(v5);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_2523D54F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C045F8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04600);
  v6[13] = v8;
  v6[14] = *(void *)(v8 - 8);
  v6[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2523D5604, a4, 0);
}

uint64_t sub_2523D5604()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[8] + *(void *)(*(void *)v0[8] + 112);
  swift_beginAccess();
  sub_2523D6F54(v4, v3, &qword_269C045F8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2523D6FB8(v0[12], &qword_269C045F8);
  }
  else
  {
    uint64_t v6 = v0[14];
    uint64_t v5 = v0[15];
    uint64_t v7 = v0[13];
    uint64_t v8 = v0[11];
    uint64_t v9 = (void (*)(uint64_t))v0[9];
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 32))(v5, v0[12], v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v8, 1, 1, v7);
    swift_beginAccess();
    sub_2523D6DF0(v8, v4, &qword_269C045F8);
    swift_endAccess();
    v9(v5);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_2523D57BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C045A8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C045B0);
  v6[13] = v8;
  v6[14] = *(void *)(v8 - 8);
  v6[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2523D58C8, a4, 0);
}

uint64_t sub_2523D58C8()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[8] + *(void *)(*(void *)v0[8] + 112);
  swift_beginAccess();
  sub_2523D6F54(v4, v3, &qword_269C045A8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2523D6FB8(v0[12], &qword_269C045A8);
  }
  else
  {
    uint64_t v6 = v0[14];
    uint64_t v5 = v0[15];
    uint64_t v7 = v0[13];
    uint64_t v8 = v0[11];
    uint64_t v9 = (void (*)(uint64_t))v0[9];
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 32))(v5, v0[12], v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v8, 1, 1, v7);
    swift_beginAccess();
    sub_2523D6DF0(v8, v4, &qword_269C045A8);
    swift_endAccess();
    v9(v5);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_2523D5A80(uint64_t a1, void *a2, void (*a3)(void), uint64_t a4)
{
  v19[1] = a4;
  v20 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C045E8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04640);
  uint64_t v13 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v14 = v13 + *(void *)(*(void *)v13 + 112);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v15(v14, 1, 1, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v8, v12, v9);
  v15((uint64_t)v8, 0, 1, v9);
  swift_beginAccess();
  sub_2523D6DF0((uint64_t)v8, v14, &qword_269C045E8);
  swift_endAccess();
  uint64_t v16 = a2[5];
  a2[5] = sub_2523D7024;
  a2[6] = v13;
  swift_retain();
  sub_2523D6B20(v16);
  uint64_t v17 = a2[3];
  a2[3] = sub_2523D702C;
  a2[4] = v13;
  swift_retain();
  sub_2523D6B20(v17);
  sub_2524497A0();
  v20();
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_2523D5CF8(uint64_t a1, void *a2, void (*a3)(void), uint64_t a4)
{
  v19[1] = a4;
  v20 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04610);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04618);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04620);
  uint64_t v13 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v14 = v13 + *(void *)(*(void *)v13 + 112);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v15(v14, 1, 1, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v8, v12, v9);
  v15((uint64_t)v8, 0, 1, v9);
  swift_beginAccess();
  sub_2523D6DF0((uint64_t)v8, v14, &qword_269C04610);
  swift_endAccess();
  uint64_t v16 = a2[5];
  a2[5] = sub_2523D6E54;
  a2[6] = v13;
  swift_retain();
  sub_2523D6B20(v16);
  uint64_t v17 = a2[3];
  a2[3] = sub_2523D6E5C;
  a2[4] = v13;
  swift_retain();
  sub_2523D6B20(v17);
  sub_2524497A0();
  v20();
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_2523D5F70(uint64_t a1, void *a2, void (*a3)(void), uint64_t a4)
{
  v19[1] = a4;
  v20 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C045A8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C045B0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C045B8);
  uint64_t v13 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v14 = v13 + *(void *)(*(void *)v13 + 112);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v15(v14, 1, 1, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v8, v12, v9);
  v15((uint64_t)v8, 0, 1, v9);
  swift_beginAccess();
  sub_2523D6DF0((uint64_t)v8, v14, &qword_269C045A8);
  swift_endAccess();
  uint64_t v16 = a2[5];
  a2[5] = sub_2523D6B18;
  a2[6] = v13;
  swift_retain();
  sub_2523D6B20(v16);
  uint64_t v17 = a2[3];
  a2[3] = sub_2523D6B30;
  a2[4] = v13;
  swift_retain();
  sub_2523D6B20(v17);
  sub_2524497A0();
  v20();
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_2523D61E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2523D6B38();
  uint64_t v5 = (void *)swift_allocError();
  *uint64_t v6 = 0;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  uint64_t v8 = sub_25247AB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_2523D7084;
  v9[6] = v7;
  id v10 = v5;
  swift_retain();
  swift_retain();
  sub_25240BCB0((uint64_t)v4, (uint64_t)&unk_269C04648, (uint64_t)v9);
  swift_release();
  swift_release();
}

void sub_2523D636C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2523D6B38();
  uint64_t v5 = (void *)swift_allocError();
  *uint64_t v6 = 0;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  uint64_t v8 = sub_25247AB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_2523D7080;
  v9[6] = v7;
  id v10 = v5;
  swift_retain();
  swift_retain();
  sub_25240BCB0((uint64_t)v4, (uint64_t)&unk_269C04638, (uint64_t)v9);
  swift_release();
  swift_release();
}

void sub_2523D64F0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2523D6B38();
  uint64_t v5 = (void *)swift_allocError();
  *uint64_t v6 = 0;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  uint64_t v8 = sub_25247AB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_2523D707C;
  v9[6] = v7;
  id v10 = v5;
  swift_retain();
  swift_retain();
  sub_25240BCB0((uint64_t)v4, (uint64_t)&unk_269C045D8, (uint64_t)v9);
  swift_release();
  swift_release();
}

void sub_2523D6674(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2523D6B38();
  uint64_t v5 = (void *)swift_allocError();
  *uint64_t v6 = 1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  uint64_t v8 = sub_25247AB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_2523D380C;
  v9[6] = v7;
  id v10 = v5;
  swift_retain();
  swift_retain();
  sub_25240BCB0((uint64_t)v4, (uint64_t)&unk_269C04570, (uint64_t)v9);
  swift_release();
  swift_release();
}

void sub_2523D67FC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2523D6B38();
  uint64_t v5 = (void *)swift_allocError();
  *uint64_t v6 = 1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  uint64_t v8 = sub_25247AB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_2523D6E64;
  v9[6] = v7;
  id v10 = v5;
  swift_retain();
  swift_retain();
  sub_25240BCB0((uint64_t)v4, (uint64_t)&unk_269C04630, (uint64_t)v9);
  swift_release();
  swift_release();
}

void sub_2523D6984(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2523D6B38();
  uint64_t v5 = (void *)swift_allocError();
  *uint64_t v6 = 1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  uint64_t v8 = sub_25247AB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_2523D6C28;
  v9[6] = v7;
  id v10 = v5;
  swift_retain();
  swift_retain();
  sub_25240BCB0((uint64_t)v4, (uint64_t)&unk_269C045D0, (uint64_t)v9);
  swift_release();
  swift_release();
}

uint64_t sub_2523D6B0C(uint64_t a1)
{
  return sub_2523D5F70(a1, *(void **)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32));
}

void sub_2523D6B18()
{
  sub_2523D64F0(v0);
}

uint64_t sub_2523D6B20(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_2523D6B30()
{
  sub_2523D6984(v0);
}

unint64_t sub_2523D6B38()
{
  unint64_t result = qword_269C045C0;
  if (!qword_269C045C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269C045C0);
  }
  return result;
}

uint64_t sub_2523D6B8C(uint64_t a1, id *a2)
{
  return sub_2523D6BA4(a1, a2, &qword_269C04618);
}

uint64_t sub_2523D6B98(uint64_t a1, id *a2)
{
  return sub_2523D6BA4(a1, a2, &qword_269C045B0);
}

uint64_t sub_2523D6BA4(uint64_t a1, id *a2, uint64_t *a3)
{
  id v4 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_25247AAC0();
}

uint64_t sub_2523D6BF0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2523D6C28(uint64_t a1)
{
  return sub_2523D6BA4(a1, (id *)(v1 + 16), &qword_269C045B0);
}

uint64_t sub_2523D6C50(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_2523D3A1C;
  return sub_2523D57BC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_2523D6D1C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_2523D3928;
  return sub_2523D57BC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_2523D6DE4(uint64_t a1)
{
  return sub_2523D5CF8(a1, *(void **)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_2523D6DF0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void sub_2523D6E54()
{
  sub_2523D636C(v0);
}

void sub_2523D6E5C()
{
  sub_2523D67FC(v0);
}

uint64_t sub_2523D6E64(uint64_t a1)
{
  return sub_2523D6BA4(a1, (id *)(v1 + 16), &qword_269C04618);
}

uint64_t sub_2523D6E8C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_2523D3A1C;
  return sub_2523D5234(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_2523D6F54(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2523D6FB8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2523D7018(uint64_t a1)
{
  return sub_2523D5A80(a1, *(void **)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32));
}

void sub_2523D7024()
{
  sub_2523D61E8(v0);
}

void sub_2523D702C()
{
  sub_2523D6674(v0);
}

void sub_2523D703C(void *a1)
{
  sub_2523D3DAC(a1, v1);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

char *sub_2523D7088(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25247A540();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    id v10 = &a2[v8];
    uint64_t v11 = sub_25247A4B0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    uint64_t v13 = a3[8];
    *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
    a1[v13] = a2[v13];
  }
  return a1;
}

uint64_t sub_2523D71D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_25247A4B0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v6 - 8), v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);

  return v9(v7, v6);
}

uint64_t sub_2523D72B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25247A4B0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  return a1;
}

uint64_t sub_2523D73B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25247A4B0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_2523D74B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25247A4B0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  return a1;
}

uint64_t sub_2523D75AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25247A4B0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  return a1;
}

uint64_t sub_2523D76A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2523D76BC);
}

uint64_t sub_2523D76BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A540();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_25247A4B0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 32));
      if (v14 >= 2) {
        return v14 - 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_2523D77CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2523D77E0);
}

uint64_t sub_2523D77E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_25247A540();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_25247A4B0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 32)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for QueryBase()
{
  uint64_t result = qword_269C04660;
  if (!qword_269C04660) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2523D793C()
{
  uint64_t result = sub_25247A540();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25247A4B0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t HomeQuery.categories.getter()
{
  type metadata accessor for HomeQuery();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for HomeQuery()
{
  uint64_t result = qword_269C04678;
  if (!qword_269C04678) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t HomeQuery.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25247A540();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t HomeQuery.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for QueryBase() + 20);
  uint64_t v4 = sub_25247A4B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t HomeQuery.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for QueryBase() + 24);
  uint64_t v4 = sub_25247A4B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t HomeQuery.limit.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for QueryBase() + 28));
}

uint64_t HomeQuery.scope.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for QueryBase();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

void sub_2523D7C5C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, int *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9 = v8;
  uint64_t v51 = a5;
  uint64_t v54 = a2;
  uint64_t v55 = a4;
  uint64_t v57 = a3;
  uint64_t v53 = a8;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v13 - 8);
  v56 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_25247A4B0();
  uint64_t v15 = *(void *)(v50 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v50);
  v49 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  v19 = (char *)&v45 - v18;
  uint64_t v20 = sub_25247A030();
  MEMORY[0x270FA5388](v20 - 8);
  v52 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_25247A540();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v58 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  v27 = (char *)&v45 - v26;
  uint64_t v28 = type metadata accessor for EventQuery.Configuration(0);
  MEMORY[0x270FA5388](v28 - 8);
  v48 = (uint64_t *)((char *)&v45 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2523D918C(a1, (uint64_t)v61);
  v30 = a7;
  v31 = a7;
  if (!a7)
  {
    uint64_t v45 = v23;
    uint64_t v47 = v22;
    if (qword_269C04338 != -1) {
      swift_once();
    }
    v30 = (int *)qword_269C053D0;
    id v32 = (id)qword_269C053D0;
    uint64_t v22 = v47;
    uint64_t v23 = v45;
  }
  LODWORD(v47) = a6 & 1;
  Base = (int *)type metadata accessor for QueryBase();
  v34 = (int *)(*(unsigned __int8 *)(v9 + Base[8]) | 0x8000000000000000);
  v60[0] = v30;
  v60[1] = v34;
  v60[2] = 0;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v46 = v27;
  v35(v27, v54, v22);
  v35(v58, v9, v22);
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v37 = v50;
  v36(v19, v9 + Base[5], v50);
  v36(v49, v9 + Base[6], v37);
  v38 = v31;
  uint64_t v39 = (uint64_t)v52;
  sub_25247A000();
  uint64_t v40 = *(void *)(v9 + *(int *)(type metadata accessor for HomeQuery() + 20));
  uint64_t v41 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v56, 1, 1, v22);
  uint64_t v42 = *(void *)(v9 + Base[7]);
  sub_2523D918C(v55, (uint64_t)v59);
  swift_bridgeObjectRetain();
  uint64_t v43 = swift_unknownObjectRetain();
  v44 = v48;
  sub_2523E5C60((uint64_t)v61, v60, (uint64_t)v46, (uint64_t)v58, v39, v40, v41, v42, v48, 0, 2, 2, v51, v47, v43, 0, 1, (unint64_t)v59);
  sub_2523E630C(v44, v53);
}

uint64_t sub_2523D8104@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25247A540();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_2523D816C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2523D8178@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for QueryBase() + 20);
  uint64_t v4 = sub_25247A4B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2523D81F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for QueryBase() + 24);
  uint64_t v4 = sub_25247A4B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2523D8268()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for QueryBase() + 28));
}

uint64_t sub_2523D828C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for QueryBase();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t static QueryController.homeQuery(homeIdentifier:startDate:endDate:categories:limit:scope:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  char v12 = *a6;
  uint64_t v13 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a7, a1, v13);
  Base = (int *)type metadata accessor for QueryBase();
  uint64_t v15 = a7 + Base[5];
  uint64_t v16 = sub_25247A4B0();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
  v17(v15, a2, v16);
  v17(a7 + Base[6], a3, v16);
  *(void *)(a7 + Base[7]) = a5;
  *(unsigned char *)(a7 + Base[8]) = v12;
  *(void *)(a7 + *(int *)(type metadata accessor for HomeQuery() + 20)) = a4;

  return swift_bridgeObjectRetain();
}

uint64_t QueryController.homeQuery(homeIdentifier:startDate:endDate:categories:limit:scope:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  char v12 = *a6;
  uint64_t v13 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a7, a1, v13);
  Base = (int *)type metadata accessor for QueryBase();
  uint64_t v15 = a7 + Base[5];
  uint64_t v16 = sub_25247A4B0();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
  v17(v15, a2, v16);
  v17(a7 + Base[6], a3, v16);
  *(void *)(a7 + Base[7]) = a5;
  *(unsigned char *)(a7 + Base[8]) = v12;
  *(void *)(a7 + *(int *)(type metadata accessor for HomeQuery() + 20)) = a4;

  return swift_bridgeObjectRetain();
}

uint64_t static QueryFactory.createHomeQuery(homeIdentifier:startDate:endDate:limit:scope:eventCategory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, unsigned __int8 *a6@<X5>, uint64_t a7@<X8>)
{
  char v11 = *a5;
  int v12 = *a6;
  if (v12 == 4)
  {
    uint64_t v13 = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C04670);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25247E5A0;
    *(unsigned char *)(inited + 32) = v12;
    uint64_t v13 = sub_2523D86C0(inited);
    swift_setDeallocating();
  }
  uint64_t v15 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(a7, a1, v15);
  Base = (int *)type metadata accessor for QueryBase();
  uint64_t v17 = a7 + Base[5];
  uint64_t v18 = sub_25247A4B0();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  v19(v17, a2, v18);
  v19(a7 + Base[6], a3, v18);
  *(void *)(a7 + Base[7]) = a4;
  *(unsigned char *)(a7 + Base[8]) = v11;
  uint64_t result = type metadata accessor for HomeQuery();
  *(void *)(a7 + *(int *)(result + 20)) = v13;
  return result;
}

uint64_t sub_2523D86C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C04688);
    uint64_t v3 = sub_25247AF30();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      uint64_t v7 = *(char *)(v6 + v4);
      sub_25247B350();
      uint64_t v8 = qword_25247E650[v7];
      sub_25247B360();
      uint64_t result = sub_25247B390();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      uint64_t v15 = *(void *)(v3 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if (qword_25247E650[*(char *)(v15 + v11)] == v8) {
          goto LABEL_3;
        }
        uint64_t v16 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v16;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          if (qword_25247E650[*(char *)(v15 + v11)] == v8) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(unsigned char *)(v15 + v11) = v7;
      uint64_t v17 = *(void *)(v3 + 16);
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v19;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

char *initializeBufferWithCopyOfBuffer for HomeQuery(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25247A540();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    Base = (int *)type metadata accessor for QueryBase();
    uint64_t v9 = Base[5];
    uint64_t v10 = &a1[v9];
    unint64_t v11 = &a2[v9];
    uint64_t v12 = sub_25247A4B0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v13(&a1[Base[6]], &a2[Base[6]], v12);
    *(void *)&a1[Base[7]] = *(void *)&a2[Base[7]];
    a1[Base[8]] = a2[Base[8]];
    *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for HomeQuery(uint64_t a1)
{
  uint64_t v2 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t Base = type metadata accessor for QueryBase();
  uint64_t v4 = a1 + *(int *)(Base + 20);
  uint64_t v5 = sub_25247A4B0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(Base + 24), v5);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HomeQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t Base = (int *)type metadata accessor for QueryBase();
  uint64_t v8 = Base[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_25247A4B0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  v12(a1 + Base[6], a2 + Base[6], v11);
  *(void *)(a1 + Base[7]) = *(void *)(a2 + Base[7]);
  *(unsigned char *)(a1 + Base[8]) = *(unsigned char *)(a2 + Base[8]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HomeQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t Base = (int *)type metadata accessor for QueryBase();
  uint64_t v8 = Base[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_25247A4B0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24);
  v12(v9, v10, v11);
  v12(a1 + Base[6], a2 + Base[6], v11);
  *(void *)(a1 + Base[7]) = *(void *)(a2 + Base[7]);
  *(unsigned char *)(a1 + Base[8]) = *(unsigned char *)(a2 + Base[8]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for HomeQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t Base = (int *)type metadata accessor for QueryBase();
  uint64_t v8 = Base[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_25247A4B0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + Base[6], a2 + Base[6], v11);
  *(void *)(a1 + Base[7]) = *(void *)(a2 + Base[7]);
  *(unsigned char *)(a1 + Base[8]) = *(unsigned char *)(a2 + Base[8]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for HomeQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t Base = (int *)type metadata accessor for QueryBase();
  uint64_t v8 = Base[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_25247A4B0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(a1 + Base[6], a2 + Base[6], v11);
  *(void *)(a1 + Base[7]) = *(void *)(a2 + Base[7]);
  *(unsigned char *)(a1 + Base[8]) = *(unsigned char *)(a2 + Base[8]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2523D8F34);
}

uint64_t sub_2523D8F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Base = type metadata accessor for QueryBase();
  uint64_t v7 = *(void *)(Base - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, Base);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for HomeQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2523D9014);
}

uint64_t sub_2523D9014(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for QueryBase();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t sub_2523D90D0()
{
  uint64_t result = type metadata accessor for QueryBase();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of HomeQueryLegacyProtocol.homeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HomeQueryLegacyProtocol.categories.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_2523D918C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t EncryptionKeyQuery.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25247A540();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t EncryptionKeyQuery.queryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EncryptionKeyQuery() + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for EncryptionKeyQuery()
{
  uint64_t result = qword_269C046C8;
  if (!qword_269C046C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t EncryptionKeyQuery.resultsLimit.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EncryptionKeyQuery() + 24));
}

uint64_t EncryptionKeyQuery.qualityOfService.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EncryptionKeyQuery() + 28));
}

uint64_t EncryptionKeyQuery.init(database:homeIdentifier:queryIdentifier:resultsLimit:qualityOfService:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  int v36 = a7;
  uint64_t v35 = a6;
  int v40 = a5;
  uint64_t v41 = a4;
  uint64_t v39 = a3;
  uint64_t v37 = a8;
  unint64_t v10 = (int *)type metadata accessor for EncryptionKeyQuery();
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25247A540();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v32 - v18;
  uint64_t v20 = *a1;
  uint64_t v33 = a1[1];
  uint64_t v34 = v20;
  uint64_t v32 = a1[2];
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v38 = a2;
  uint64_t v22 = a2;
  uint64_t v23 = v39;
  v21((char *)&v32 - v18, v22, v13);
  uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v21)(v17, v23, v13);
  char v25 = v40;
  if ((v40 & 1) != 0 || v41 >= 1)
  {
    v21(v12, (uint64_t)v19, v13);
    v21(&v12[v10[5]], (uint64_t)v17, v13);
    uint64_t v26 = &v12[v10[6]];
    *(void *)uint64_t v26 = v41;
    v26[8] = v25 & 1;
    v27 = &v12[v10[7]];
    *(void *)v27 = v35;
    v27[8] = v36 & 1;
    uint64_t v28 = &v12[v10[8]];
    uint64_t v29 = v33;
    *(void *)uint64_t v28 = v34;
    *((void *)v28 + 1) = v29;
    *((void *)v28 + 2) = v32;
    if (qword_269C04350 != -1) {
      swift_once();
    }
    v30 = off_269C056F0;
    v31 = *(void (**)(char *, uint64_t))(v14 + 8);
    v31(v17, v13);
    v31(v19, v13);
    *(void *)&v12[v10[9]] = v30[2];
    sub_2523E1338((uint64_t)v12, v37, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    swift_unknownObjectRetain();
    v31(v23, v13);
    return ((uint64_t (*)(uint64_t, uint64_t))v31)(v38, v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id EncryptionKeyQuery.init(homeIdentifier:queryIdentifier:resultsLimit:scope:qualityOfService:operationGroup:container:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, void *a8@<X7>, uint64_t a9@<X8>, void *a10)
{
  int v43 = a4;
  int v44 = a7;
  uint64_t v49 = a6;
  uint64_t v45 = sub_25247A540();
  uint64_t v16 = *(void *)(v45 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v45);
  v46 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v39 - v19;
  uint64_t v21 = *a5;
  id v41 = a8;
  uint64_t v42 = v21;
  uint64_t v47 = a9;
  uint64_t v48 = a3;
  if (a10)
  {
    id v22 = a10;
    uint64_t v23 = a8;
    if (!a8)
    {
LABEL_11:
      uint64_t v26 = a2;
      uint64_t v27 = a1;
      id v29 = objc_allocWithZone(MEMORY[0x263EFD780]);
      id v40 = a10;
      id v28 = objc_msgSend(v29, sel_init);
      v50[0] = v28;
      sub_2523D9974(v50, (uint64_t)v22);
      goto LABEL_12;
    }
LABEL_10:
    uint64_t v26 = a2;
    uint64_t v27 = a1;
    id v40 = a10;
    id v28 = v23;
LABEL_12:
    v43 &= 1u;
    v44 &= 1u;
    v50[0] = v22;
    v50[1] = (void *)(v42 | 0x8000000000000000);
    v50[2] = v28;
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    uint64_t v31 = (uint64_t)v20;
    uint64_t v32 = v20;
    uint64_t v33 = v45;
    v30(v32, v27, v45);
    uint64_t v34 = v46;
    v30(v46, v26, v33);
    id v35 = v41;
    id v36 = v22;
    id v37 = v28;
    EncryptionKeyQuery.init(database:homeIdentifier:queryIdentifier:resultsLimit:qualityOfService:)((uint64_t *)v50, v31, v34, v48, v43, v49, v44, v47);

    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v38(v26, v33);
    return (id)((uint64_t (*)(uint64_t, uint64_t))v38)(v27, v33);
  }
  uint64_t v23 = a8;
  if (!a8)
  {
LABEL_7:
    if (qword_269C04338 != -1) {
      swift_once();
    }
    id v22 = (id)qword_269C053D0;
    if (!v23) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  id result = objc_msgSend(a8, sel_defaultConfiguration);
  if (result)
  {
    char v25 = result;
    id v22 = objc_msgSend(result, sel_container);

    uint64_t v23 = a8;
    if (v22) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_2523D9974(void **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  v13[2] = 0;
  v13[3] = 0xE000000000000000;
  v13[0] = 47;
  v13[1] = 0xE100000000000000;
  v12[2] = v13;
  uint64_t v4 = (void *)sub_25242DB30(0x7FFFFFFFFFFFFFFFLL, 1, sub_2523E13A0, (uint64_t)v12, 0xD000000000000026, 0x800000025247C4B0);
  if (v4[2])
  {
    uint64_t v5 = v4[4];
    uint64_t v6 = v4[5];
    uint64_t v7 = v4[6];
    uint64_t v8 = v4[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    MEMORY[0x2533B4B70](v5, v6, v7, v8);
    sub_25247A920();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25247A920();
    v13[0] = type metadata accessor for EncryptionKeyQuery();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C046A8);
    sub_25247A890();
    sub_25247A920();
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)sub_25247A830();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setName_, v9);

    objc_msgSend(v3, sel_setExpectedReceiveSize_, 1);
    objc_msgSend(v3, sel_setExpectedSendSize_, 1);
    id v10 = objc_msgSend(v3, sel_defaultConfiguration);
    if (v10)
    {
      uint64_t v11 = v10;
      objc_msgSend(v10, sel_setContainer_, a2);

      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    __break(1u);
  }
  __break(1u);
}

uint64_t EncryptionKeyQuery.fetchRecords()()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2523D9BDC;
  return sub_2523D9CDC();
}

uint64_t sub_2523D9BDC(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_2523D9CDC()
{
  v1[3] = v0;
  uint64_t v2 = *(void *)(type metadata accessor for EncryptionKeyQuery() - 8);
  v1[4] = v2;
  v1[5] = *(void *)(v2 + 64);
  v1[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  v1[7] = swift_task_alloc();
  uint64_t v3 = sub_25247A4B0();
  v1[8] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v1[9] = v4;
  v1[10] = *(void *)(v4 + 64);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2523D9E44, 0, 0);
}

uint64_t sub_2523D9E44()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[3];
  uint64_t v9 = v0[4];
  sub_25247A4A0();
  uint64_t v10 = sub_25247AB70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  sub_2523E0E20(v8, v7, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v5);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v12 = (v6 + *(unsigned __int8 *)(v3 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  sub_2523E1338(v7, v13 + v11, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v13 + v12, v1, v5);
  uint64_t v14 = sub_252419C30(v4, (uint64_t)&unk_269C04788, v13);
  v0[13] = v14;
  uint64_t v15 = (void *)swift_task_alloc();
  v0[14] = v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04790);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A60);
  *uint64_t v15 = v0;
  v15[1] = sub_2523DA074;
  uint64_t v18 = MEMORY[0x263F8E4E0];
  return MEMORY[0x270FA1FA8](v0 + 2, v14, v16, v17, v18);
}

uint64_t sub_2523DA074()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2523DA248;
  }
  else {
    uint64_t v2 = sub_2523DA188;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2523DA188()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v4 = v0[2];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_2523DA248()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t EncryptionKeyQuery.fetchKeys()()
{
  uint64_t v1 = type metadata accessor for EncryptionKeyRecord();
  v0[7] = v1;
  v0[8] = *(void *)(v1 - 8);
  v0[9] = swift_task_alloc();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2523DA3E8;
  return sub_2523D9CDC();
}

uint64_t sub_2523DA3E8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 88) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_2523DA538, 0, 0);
  }
}

uint64_t sub_2523DA538()
{
  uint64_t v1 = *(void *)(v0 + 88);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_2523DFC04(0, v2, 0);
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v6 = *(void *)(v3 + 72);
    uint64_t v7 = v13;
    do
    {
      uint64_t v8 = *(void *)(v0 + 72);
      sub_2523E0E20(v5, v8, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);
      sub_2523D918C(v8 + *(int *)(v4 + 20), v0 + 16);
      sub_2523E1290(v8, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2523DFC04(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v13;
      }
      unint64_t v10 = *(void *)(v7 + 16);
      unint64_t v9 = *(void *)(v7 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_2523DFC04(v9 > 1, v10 + 1, 1);
        uint64_t v7 = v13;
      }
      *(void *)(v7 + 16) = v10 + 1;
      sub_2523DFC24((long long *)(v0 + 16), v7 + 40 * v10 + 32);
      v5 += v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x263F8EE78];
  }
  swift_task_dealloc();
  unint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v11(v7);
}

uint64_t EncryptionKeyQuery.description.getter()
{
  return 0;
}

uint64_t static EncryptionKeyQuery.logCategory.getter()
{
  return 0x6974707972636E45;
}

uint64_t sub_2523DA8F8()
{
  return 0x6974707972636E45;
}

uint64_t sub_2523DA91C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v92 = a2;
  uint64_t v87 = type metadata accessor for EncryptionKeyQuery();
  uint64_t v3 = MEMORY[0x270FA5388](v87);
  v83 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v78 - v6;
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v85 = (uint64_t)&v78 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v80 = (uint64_t)&v78 - v10;
  uint64_t v11 = sub_25247A6A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v88 = v11;
  uint64_t v89 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  v84 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v78 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  v86 = (char *)&v78 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v81 = (uint64_t)&v78 - v20;
  uint64_t v21 = type metadata accessor for EncryptionKeyRecord();
  uint64_t v90 = *(void *)(v21 - 8);
  uint64_t v91 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v78 = (uint64_t)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v79 = (uint64_t)&v78 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  id v28 = (char *)&v78 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v82 = (uint64_t)&v78 - v29;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v32 = (char *)&v78 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v33 = objc_msgSend(a1, sel_recordID);
  id v34 = objc_msgSend(v33, sel_recordName);
  sub_25247A840();

  sub_25247A4C0();
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_25247A540();
  int v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v32, 1, v35);
  sub_2523D6FB8((uint64_t)v32, (uint64_t *)&unk_269C047F0);
  if (v36 == 1)
  {
    sub_2523E6CD8((uint64_t)v17);
    sub_2523E0E20(v93, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    id v37 = v33;
    uint64_t v38 = sub_25247A680();
    os_log_type_t v39 = sub_25247AD20();
    if (!os_log_type_enabled(v38, v39))
    {

      sub_2523E1290((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
LABEL_11:
      (*(void (**)(char *, uint64_t))(v89 + 8))(v17, v88);
      uint64_t v59 = 1;
      goto LABEL_12;
    }
    uint64_t v40 = swift_slowAlloc();
    uint64_t v93 = swift_slowAlloc();
    v95[0] = v93;
    *(_DWORD *)uint64_t v40 = 136446722;
    sub_2523E12F0(&qword_269C046B0, MEMORY[0x263F07508]);
    uint64_t v41 = sub_25247B200();
    uint64_t v94 = sub_25245DA98(v41, v42, v95);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    sub_2523E1290((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    *(_WORD *)(v40 + 12) = 2160;
    uint64_t v94 = 1752392040;
    sub_25247AEB0();
    *(_WORD *)(v40 + 22) = 2080;
    id v43 = objc_msgSend(v37, sel_recordName);
    uint64_t v44 = sub_25247A840();
    unint64_t v46 = v45;

    uint64_t v94 = sub_25245DA98(v44, v46, v95);
    sub_25247AEB0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2523CF000, v38, v39, "[%{public}s] Ignoring record with non-UUID record name: %{mask.hash}s", (uint8_t *)v40, 0x20u);
    uint64_t v47 = v93;
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v47, -1, -1);
    MEMORY[0x2533B5DC0](v40, -1, -1);

LABEL_10:
    goto LABEL_11;
  }
  uint64_t v48 = v93;
  uint64_t v49 = v33;
  if (objc_msgSend(a1, sel_isExpired))
  {
    uint64_t v17 = v86;
    sub_2523E6CD8((uint64_t)v86);
    uint64_t v50 = v85;
    sub_2523E0E20(v48, v85, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    uint64_t v38 = v33;
    uint64_t v51 = sub_25247A680();
    os_log_type_t v52 = sub_25247AD20();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = swift_slowAlloc();
      uint64_t v54 = (void *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      v95[0] = v55;
      *(_DWORD *)uint64_t v53 = 136446466;
      sub_2523E12F0(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v56 = sub_25247B200();
      uint64_t v94 = sub_25245DA98(v56, v57, v95);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523E1290(v50, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
      *(_WORD *)(v53 + 12) = 2114;
      uint64_t v94 = (uint64_t)v38;
      v58 = v38;
      sub_25247AEB0();
      *uint64_t v54 = v38;

      _os_log_impl(&dword_2523CF000, v51, v52, "[%{public}s] Ignoring record %{public}@ that has expired", (uint8_t *)v53, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
      uint64_t v59 = 1;
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v54, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v55, -1, -1);
      MEMORY[0x2533B5DC0](v53, -1, -1);

      (*(void (**)(char *, uint64_t))(v89 + 8))(v86, v88);
LABEL_12:
      uint64_t v61 = v91;
      uint64_t v60 = v92;
      uint64_t v62 = v90;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v60, v59, 1, v61);
    }

    sub_2523E1290(v50, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    goto LABEL_10;
  }
  EncryptionKeyRecord.init(from:)(a1, v28);
  uint64_t v64 = v82;
  sub_2523E1338((uint64_t)v28, v82, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);
  uint64_t v65 = v81;
  sub_2523E6CD8(v81);
  uint64_t v66 = v48;
  uint64_t v67 = v80;
  sub_2523E0E20(v66, v80, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
  uint64_t v68 = v79;
  sub_2523E0E20(v64, v79, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);
  v69 = sub_25247A680();
  os_log_type_t v70 = sub_25247AD30();
  if (os_log_type_enabled(v69, v70))
  {
    uint64_t v72 = swift_slowAlloc();
    uint64_t v93 = swift_slowAlloc();
    v95[0] = v93;
    *(_DWORD *)uint64_t v72 = 136315394;
    sub_2523E12F0(&qword_269C046B0, MEMORY[0x263F07508]);
    uint64_t v73 = sub_25247B200();
    uint64_t v94 = sub_25245DA98(v73, v74, v95);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    sub_2523E1290(v67, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    *(_WORD *)(v72 + 12) = 2080;
    sub_2523E0E20(v68, v78, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);
    uint64_t v61 = v91;
    uint64_t v75 = sub_25247A890();
    uint64_t v94 = sub_25245DA98(v75, v76, v95);
    sub_25247AEB0();
    uint64_t v64 = v82;
    swift_bridgeObjectRelease();
    sub_2523E1290(v68, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);
    _os_log_impl(&dword_2523CF000, v69, v70, "[%s] Successfully decoded record %s", (uint8_t *)v72, 0x16u);
    uint64_t v77 = v93;
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v77, -1, -1);
    MEMORY[0x2533B5DC0](v72, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v65, v88);
  }
  else
  {
    sub_2523E1290(v67, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    sub_2523E1290(v68, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);

    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v65, v88);
    uint64_t v61 = v91;
  }
  uint64_t v60 = v92;
  uint64_t v62 = v90;
  sub_2523E1338(v64, v92, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);
  uint64_t v59 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v60, v59, 1, v61);
}

uint64_t sub_2523DB808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  v5[9] = a1;
  uint64_t v6 = sub_25247A4B0();
  v5[12] = v6;
  v5[13] = *(void *)(v6 - 8);
  v5[14] = swift_task_alloc();
  v5[15] = type metadata accessor for EncryptionKeyQuery();
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  uint64_t v7 = sub_25247A6A0();
  v5[19] = v7;
  v5[20] = *(void *)(v7 - 8);
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2523DB984, 0, 0);
}

uint64_t sub_2523DB984()
{
  uint64_t v32 = v0;
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[10];
  sub_2523E6CD8(v0[22]);
  sub_2523E0E20(v3, v1, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
  sub_2523E0E20(v3, v2, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
  uint64_t v4 = sub_25247A680();
  os_log_type_t v5 = sub_25247AD60();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v27 = v0[20];
    uint64_t v6 = v0[18];
    uint64_t v28 = v0[19];
    uint64_t v29 = v0[22];
    uint64_t v7 = v0[17];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v31 = v26;
    *(_DWORD *)uint64_t v8 = 136446466;
    sub_25247A540();
    sub_2523E12F0(&qword_269C046B0, MEMORY[0x263F07508]);
    uint64_t v9 = sub_25247B200();
    v0[7] = sub_25245DA98(v9, v10, &v31);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    sub_2523E1290(v6, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    *(_WORD *)(v8 + 12) = 2080;
    uint64_t v11 = EncryptionKeyQuery.description.getter();
    v0[8] = sub_25245DA98(v11, v12, &v31);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    sub_2523E1290(v7, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    _os_log_impl(&dword_2523CF000, v4, v5, "[%{public}s] Beginning: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v26, -1, -1);
    MEMORY[0x2533B5DC0](v8, -1, -1);

    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v13(v29, v28);
  }
  else
  {
    uint64_t v14 = v0[22];
    uint64_t v15 = v0[19];
    uint64_t v16 = v0[20];
    uint64_t v17 = v0[17];
    sub_2523E1290(v0[18], (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    sub_2523E1290(v17, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);

    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v13(v14, v15);
  }
  v0[23] = v13;
  uint64_t v18 = v0[10];
  uint64_t v19 = v18 + *(int *)(v0[15] + 32);
  uint64_t v20 = *(void **)v19;
  v0[24] = *(void *)v19;
  uint64_t v21 = *(void *)(v19 + 8);
  v0[25] = v21;
  uint64_t v22 = *(void **)(v19 + 16);
  v0[26] = v22;
  uint64_t v23 = swift_task_alloc();
  v0[27] = v23;
  *(void *)(v23 + 16) = v18;
  sub_2523DFD9C(v20, v21, v22);
  uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C04C28 + dword_269C04C28);
  uint64_t v24 = (void *)swift_task_alloc();
  v0[28] = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_2523DBD30;
  return v30((uint64_t)&unk_269C047A8, v23, (uint64_t)v20, v21, (uint64_t)v22);
}

uint64_t sub_2523DBD30(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[2] = v2;
  v4[3] = a1;
  v4[4] = v1;
  os_log_type_t v5 = (void *)v3[26];
  uint64_t v6 = v3[25];
  uint64_t v7 = (void *)v3[24];
  uint64_t v8 = (void *)*v2;
  swift_task_dealloc();
  sub_2523DFE9C(v7, v6, v5);
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v8[1];
    return v9();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_2523DBF24, 0, 0);
  }
}

uint64_t sub_2523DBF24()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 80);
  sub_2523E6CD8(*(void *)(v0 + 168));
  sub_2523E0E20(v6, v1, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  uint64_t v7 = sub_25247A680();
  os_log_type_t v8 = sub_25247AD60();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v35 = v8;
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v36 = v34;
    *(_DWORD *)uint64_t v10 = 136446466;
    sub_25247A540();
    sub_2523E12F0(&qword_269C046B0, MEMORY[0x263F07508]);
    uint64_t v11 = sub_25247B200();
    *(void *)(v0 + 40) = sub_25245DA98(v11, v12, &v36);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    sub_2523E1290(v9, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    *(_WORD *)(v10 + 12) = 2082;
    sub_25247A470();
    id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
    objc_msgSend(v13, sel_setMaximumFractionDigits_, 2);
    uint64_t v14 = (void *)sub_25247AC40();
    id v15 = objc_msgSend(v13, sel_stringForObjectValue_, v14);

    if (v15)
    {
      uint64_t v16 = sub_25247A840();
      unint64_t v18 = v17;
    }
    else
    {
      uint64_t v16 = sub_25247AC50();
      unint64_t v18 = v25;
    }

    uint64_t v32 = *(void *)(v0 + 168);
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v0 + 184);
    uint64_t v31 = *(void *)(v0 + 152);
    uint64_t v27 = *(void *)(v0 + 104);
    uint64_t v26 = *(void *)(v0 + 112);
    uint64_t v28 = *(void *)(v0 + 96);
    *(void *)(v0 + 48) = sub_25245DA98(v16, v18, &v36);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    _os_log_impl(&dword_2523CF000, v7, v35, "[%{public}s] Finished in %{public}s seconds", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v34, -1, -1);
    MEMORY[0x2533B5DC0](v10, -1, -1);

    v33(v32, v31);
  }
  else
  {
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 184);
    uint64_t v20 = *(void *)(v0 + 168);
    uint64_t v21 = *(void *)(v0 + 152);
    uint64_t v23 = *(void *)(v0 + 104);
    uint64_t v22 = *(void *)(v0 + 112);
    uint64_t v24 = *(void *)(v0 + 96);
    sub_2523E1290(*(void *)(v0 + 128), (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);

    v19(v20, v21);
  }
  **(void **)(v0 + 72) = *(void *)(v0 + 24);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_2523DC340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[22] = a2;
  v3[23] = a3;
  v3[21] = a1;
  uint64_t v4 = sub_25247AAF0();
  v3[24] = v4;
  v3[25] = *(void *)(v4 - 8);
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C047B0);
  v3[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C047B8);
  v3[29] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for EncryptionKeyRecord();
  v3[30] = v5;
  v3[31] = *(void *)(v5 - 8);
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C047C0);
  v3[35] = v6;
  v3[36] = *(void *)(v6 - 8);
  v3[37] = swift_task_alloc();
  uint64_t v7 = sub_25247A4B0();
  v3[38] = v7;
  v3[39] = *(void *)(v7 - 8);
  v3[40] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C047C8);
  v3[41] = v8;
  v3[42] = *(void *)(v8 - 8);
  v3[43] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C047D0);
  v3[44] = v9;
  v3[45] = *(void *)(v9 - 8);
  v3[46] = swift_task_alloc();
  v3[47] = type metadata accessor for CKQueryAsyncSequence();
  v3[48] = swift_task_alloc();
  v3[49] = type metadata accessor for EncryptionKeyQuery();
  v3[50] = swift_task_alloc();
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  v3[53] = swift_task_alloc();
  v3[54] = swift_task_alloc();
  uint64_t v10 = sub_25247A6A0();
  v3[55] = v10;
  v3[56] = *(void *)(v10 - 8);
  v3[57] = swift_task_alloc();
  v3[58] = swift_task_alloc();
  v3[59] = swift_task_alloc();
  v3[60] = swift_task_alloc();
  v3[61] = swift_task_alloc();
  uint64_t v11 = sub_25247A540();
  v3[62] = v11;
  v3[63] = *(void *)(v11 - 8);
  v3[64] = swift_task_alloc();
  v3[65] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2523DC7F8, 0, 0);
}

uint64_t sub_2523DC7F8()
{
  sub_25247ABC0();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C04FD8 + dword_269C04FD8);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[66] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2523DCA44;
  uint64_t v3 = v0[22];
  uint64_t v2 = v0[23];
  return v5(v3, v2, 1);
}

uint64_t sub_2523DCA44(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[67] = a1;
  v3[68] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_2523DCCD8, 0, 0);
  }
}

uint64_t sub_2523DCCD8()
{
  uint64_t v62 = v0;
  uint64_t v1 = *(void *)(v0 + 544);
  sub_25247ABC0();
  if (v1)
  {

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 520);
    uint64_t v6 = *(void *)(v0 + 504);
    uint64_t v5 = *(void *)(v0 + 512);
    uint64_t v7 = *(void *)(v0 + 488);
    uint64_t v8 = *(void *)(v0 + 496);
    uint64_t v9 = *(void *)(v0 + 432);
    uint64_t v10 = *(void *)(v0 + 184);
    sub_2523E1254(0, &qword_269C047D8);
    id v11 = objc_msgSend(self, sel_predicateWithValue_, 1);
    uint64_t v60 = (void *)sub_25247AE40();
    *(void *)(v0 + 552) = v60;
    sub_25247A530();
    sub_2523E6CD8(v7);
    sub_2523E0E20(v10, v9, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v59(v5, v4, v8);
    unint64_t v12 = sub_25247A680();
    os_log_type_t v13 = sub_25247AD20();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = *(void *)(v0 + 504);
    uint64_t v16 = *(void *)(v0 + 512);
    uint64_t v17 = *(void *)(v0 + 488);
    uint64_t v18 = *(void *)(v0 + 496);
    uint64_t v19 = *(void *)(v0 + 440);
    uint64_t v20 = *(void *)(v0 + 448);
    uint64_t v21 = *(void *)(v0 + 432);
    if (v14)
    {
      os_log_type_t type = v13;
      uint64_t v53 = *(void *)(v0 + 512);
      uint64_t v22 = swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      v61[0] = v56;
      *(_DWORD *)uint64_t v22 = 136446466;
      sub_2523E12F0(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v23 = sub_25247B200();
      *(void *)(v0 + 152) = sub_25245DA98(v23, v24, v61);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523E1290(v21, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
      *(_WORD *)(v22 + 12) = 2082;
      uint64_t v25 = sub_25247B200();
      *(void *)(v0 + 160) = sub_25245DA98(v25, v26, v61);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v27(v53, v18);
      _os_log_impl(&dword_2523CF000, v12, type, "[%{public}s] Beginning subquery %{public}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v56, -1, -1);
      MEMORY[0x2533B5DC0](v22, -1, -1);

      uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v28(v17, v19);
    }
    else
    {
      sub_2523E1290(*(void *)(v0 + 432), (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v27(v16, v18);

      uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v28(v17, v19);
    }
    *(void *)(v0 + 568) = v28;
    *(void *)(v0 + 560) = v27;
    uint64_t v46 = *(void *)(v0 + 520);
    uint64_t v47 = *(void **)(v0 + 536);
    uint64_t v29 = *(void *)(v0 + 496);
    uint64_t v30 = *(void **)(v0 + 384);
    uint64_t v31 = *(void *)(v0 + 392);
    uint64_t v32 = *(int **)(v0 + 376);
    uint64_t v57 = *(void *)(v0 + 336);
    uint64_t v51 = *(void *)(v0 + 344);
    uint64_t v52 = *(void *)(v0 + 312);
    uint64_t v54 = *(void *)(v0 + 304);
    os_log_t log = *(os_log_t *)(v0 + 328);
    uint64_t v33 = *(void *)(v0 + 288);
    uint64_t v50 = *(void *)(v0 + 296);
    uint64_t v34 = *(void **)(v0 + 176);
    uint64_t v35 = *(void *)(v0 + 184);
    uint64_t v48 = *(void *)(v0 + 320);
    uint64_t v49 = *(void *)(v0 + 280);
    v59((uint64_t)v30 + v32[7], v35 + *(int *)(v31 + 20), v29);
    v59((uint64_t)v30 + v32[8], v46, v29);
    uint64_t v36 = (uint64_t *)(v35 + *(int *)(v31 + 28));
    uint64_t v37 = *v36;
    LOBYTE(v36) = *((unsigned char *)v36 + 8);
    void *v30 = v34;
    v30[1] = 0;
    v30[2] = 0;
    v30[3] = v47;
    v30[4] = v60;
    *(void *)((char *)v30 + v32[9]) = 0;
    uint64_t v38 = (char *)v30 + v32[10];
    *(void *)uint64_t v38 = 0;
    v38[8] = 1;
    os_log_type_t v39 = (char *)v30 + v32[11];
    *(void *)os_log_type_t v39 = v37;
    v39[8] = (char)v36;
    *(void *)((char *)v30 + v32[12]) = 0;
    *(void *)(v0 + 16) = MEMORY[0x263F8EE78];
    id v40 = v34;
    id v41 = v47;
    id v42 = v60;
    sub_25247A4A0();
    uint64_t v43 = swift_task_alloc();
    *(void *)(v43 + 16) = v30;
    *(void *)(v43 + 24) = v48;
    sub_2523E1254(0, &qword_269C047E0);
    (*(void (**)(uint64_t, void, uint64_t))(v33 + 104))(v50, *MEMORY[0x263F8F680], v49);
    sub_25247AC30();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v48, v54);
    swift_task_dealloc();
    sub_25247AC00();
    (*(void (**)(uint64_t, os_log_t))(v57 + 8))(v51, log);
    uint64_t v44 = (void *)swift_task_alloc();
    *(void *)(v0 + 576) = v44;
    void *v44 = v0;
    v44[1] = sub_2523DD43C;
    uint64_t v45 = *(void *)(v0 + 352);
    return MEMORY[0x270FA20F8](v0 + 24, 0, 0, v45, v0 + 32);
  }
}

uint64_t sub_2523DD43C()
{
  *(void *)(*(void *)v1 + 584) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2523DE9FC;
  }
  else {
    uint64_t v2 = sub_2523DD550;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2523DD550()
{
  uint64_t v161 = v0;
  unint64_t v1 = v0 + 24;
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = (uint64_t *)(v0 + 16);
  if (!v2)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 360) + 8))(*(void *)(v0 + 368), *(void *)(v0 + 352));
    goto LABEL_7;
  }
  uint64_t v4 = *(void **)(v0 + 584);
  sub_25247ABC0();
  if (v4)
  {
    uint64_t v5 = v4;
    (*(void (**)(void, void))(*(void *)(v0 + 360) + 8))(*(void *)(v0 + 368), *(void *)(v0 + 352));

    *(void *)(v0 + 40) = v4;
    id v6 = v4;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A60);
    if (swift_dynamicCast())
    {
      uint64_t v7 = *(void *)(v0 + 480);
      uint64_t v8 = *(void *)(v0 + 424);
      uint64_t v10 = *(void *)(v0 + 208);
      uint64_t v9 = *(void *)(v0 + 216);
      uint64_t v12 = *(void *)(v0 + 192);
      uint64_t v11 = *(void *)(v0 + 200);
      uint64_t v13 = *(void *)(v0 + 184);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v10, v9, v12);
      sub_2523E6CD8(v7);
      sub_2523E0E20(v13, v8, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
      BOOL v14 = sub_25247A680();
      os_log_type_t v15 = sub_25247AD20();
      BOOL v16 = os_log_type_enabled(v14, v15);
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
      if (v16)
      {
        v156 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
        uint64_t v148 = *(void *)(v0 + 440);
        uint64_t v150 = *(void *)(v0 + 480);
        uint64_t v18 = *(void *)(v0 + 424);
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        v160[0] = v20;
        *(_DWORD *)uint64_t v19 = 136446210;
        sub_2523E12F0(&qword_269C046B0, MEMORY[0x263F07508]);
        uint64_t v21 = sub_25247B200();
        *(void *)(v0 + 144) = sub_25245DA98(v21, v22, v160);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        sub_2523E1290(v18, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
        _os_log_impl(&dword_2523CF000, v14, v15, "[%{public}s] Canceled", v19, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v20, -1, -1);
        MEMORY[0x2533B5DC0](v19, -1, -1);

        v156(v150, v148);
      }
      else
      {
        uint64_t v70 = *(void *)(v0 + 480);
        uint64_t v71 = *(void *)(v0 + 440);
        sub_2523E1290(*(void *)(v0 + 424), (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);

        v17(v70, v71);
      }
      uint64_t v72 = *(void **)(v0 + 552);
      uint64_t v73 = *(void **)(v0 + 536);
      uint64_t v151 = *(void *)(v0 + 520);
      v153 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
      uint64_t v74 = *(void *)(v0 + 496);
      uint64_t v75 = *(void *)(v0 + 384);
      uint64_t v76 = *(void *)(v0 + 200);
      uint64_t v77 = *(void *)(v0 + 208);
      uint64_t v78 = *(void *)(v0 + 192);
      sub_2523E12F0(&qword_269C047E8, MEMORY[0x263F8F488]);
      swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 16))(v79, v77, v78);
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v77, v78);
      swift_bridgeObjectRelease();
      sub_2523E1290(v75, (uint64_t (*)(void))type metadata accessor for CKQueryAsyncSequence);
      v153(v151, v74);

LABEL_50:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v89 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_51;
    }
    uint64_t v43 = (void **)(v0 + 56);

    *(void *)(v0 + 48) = v5;
    id v44 = v5;
    type metadata accessor for CKError(0);
    if (swift_dynamicCast())
    {
      v149 = (id *)(v0 + 48);
      uint64_t v45 = *v43;
      *(void *)(v0 + 88) = *v43;
      sub_2523E12F0(&qword_269C04480, type metadata accessor for CKError);
      id v46 = v45;
      sub_25247A0E0();
      if (*(void *)(v0 + 80) == 28)
      {
        uint64_t v47 = *(void *)(v0 + 472);
        uint64_t v48 = *(void *)(v0 + 416);
        uint64_t v49 = *(void *)(v0 + 184);

        sub_2523E6CD8(v47);
        sub_2523E0E20(v49, v48, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
        id v50 = v46;
        uint64_t v51 = sub_25247A680();
        os_log_type_t v52 = sub_25247AD20();
        BOOL v53 = os_log_type_enabled(v51, v52);
        v157 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
        if (v53)
        {
          uint64_t v144 = *(void *)(v0 + 440);
          uint64_t v145 = *(void *)(v0 + 472);
          uint64_t v54 = *(void *)(v0 + 416);
          uint64_t v55 = swift_slowAlloc();
          v141 = (void *)swift_slowAlloc();
          uint64_t v142 = swift_slowAlloc();
          v160[0] = v142;
          *(_DWORD *)uint64_t v55 = 136446466;
          sub_2523E12F0(&qword_269C046B0, MEMORY[0x263F07508]);
          uint64_t v56 = sub_25247B200();
          *(void *)(v0 + 128) = sub_25245DA98(v56, v57, v160);
          sub_25247AEB0();
          swift_bridgeObjectRelease();
          sub_2523E1290(v54, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
          *(_WORD *)(v55 + 12) = 2114;
          id v58 = v50;
          uint64_t v59 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v0 + 136) = v59;
          sub_25247AEB0();
          void *v141 = v59;

          _os_log_impl(&dword_2523CF000, v51, v52, "[%{public}s] Found user-deleted zone: %{public}@", (uint8_t *)v55, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
          swift_arrayDestroy();
          MEMORY[0x2533B5DC0](v141, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x2533B5DC0](v142, -1, -1);
          MEMORY[0x2533B5DC0](v55, -1, -1);

          uint64_t v60 = v144;
          uint64_t v61 = v145;
        }
        else
        {
          uint64_t v110 = *(void *)(v0 + 472);
          uint64_t v111 = *(void *)(v0 + 440);
          uint64_t v112 = *(void *)(v0 + 416);

          sub_2523E1290(v112, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
          uint64_t v61 = v110;
          uint64_t v60 = v111;
        }
        v157(v61, v60);
        uint64_t v3 = (uint64_t *)(v0 + 16);

        goto LABEL_7;
      }

      *(void *)(v0 + 104) = v46;
      sub_25247A0E0();
      if (*(void *)(v0 + 96) == 26)
      {
        uint64_t v90 = *(void *)(v0 + 464);
        uint64_t v91 = *(void *)(v0 + 408);
        uint64_t v92 = *(void *)(v0 + 184);

        sub_2523E6CD8(v90);
        sub_2523E0E20(v92, v91, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
        id v93 = v46;
        uint64_t v94 = sub_25247A680();
        os_log_type_t v95 = sub_25247AD20();
        BOOL v96 = os_log_type_enabled(v94, v95);
        v159 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
        if (v96)
        {
          uint64_t v154 = *(void *)(v0 + 464);
          uint64_t v146 = *(void *)(v0 + 440);
          uint64_t v97 = *(void *)(v0 + 408);
          uint64_t v98 = swift_slowAlloc();
          v99 = (void *)swift_slowAlloc();
          uint64_t v143 = swift_slowAlloc();
          v160[0] = v143;
          *(_DWORD *)uint64_t v98 = 136446466;
          sub_2523E12F0(&qword_269C046B0, MEMORY[0x263F07508]);
          uint64_t v100 = sub_25247B200();
          *(void *)(v0 + 112) = sub_25245DA98(v100, v101, v160);
          sub_25247AEB0();
          swift_bridgeObjectRelease();
          sub_2523E1290(v97, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
          *(_WORD *)(v98 + 12) = 2114;
          id v102 = v93;
          uint64_t v103 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v0 + 120) = v103;
          sub_25247AEB0();
          void *v99 = v103;

          _os_log_impl(&dword_2523CF000, v94, v95, "[%{public}s] Did not find zone: %{public}@", (uint8_t *)v98, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
          swift_arrayDestroy();
          MEMORY[0x2533B5DC0](v99, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x2533B5DC0](v143, -1, -1);
          MEMORY[0x2533B5DC0](v98, -1, -1);

          uint64_t v104 = v146;
          uint64_t v105 = v154;
        }
        else
        {
          uint64_t v137 = *(void *)(v0 + 464);
          uint64_t v138 = *(void *)(v0 + 440);
          uint64_t v139 = *(void *)(v0 + 408);

          sub_2523E1290(v139, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
          uint64_t v105 = v137;
          uint64_t v104 = v138;
        }
        v159(v105, v104);

        uint64_t v3 = (uint64_t *)(v0 + 16);
LABEL_7:
        uint64_t v23 = *(void *)(v0 + 184) + *(int *)(*(void *)(v0 + 392) + 24);
        if ((*(unsigned char *)(v23 + 8) & 1) != 0 || *(void *)v23 >= *(void *)(*v3 + 16))
        {
          uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
          uint64_t v34 = *(void **)(v0 + 536);
          uint64_t v35 = *(void *)(v0 + 520);
          uint64_t v36 = *(void *)(v0 + 496);
          uint64_t v37 = *(void *)(v0 + 384);

          sub_2523E1290(v37, (uint64_t (*)(void))type metadata accessor for CKQueryAsyncSequence);
          v33(v35, v36);
          uint64_t v38 = *(void *)(v0 + 16);
LABEL_33:
          **(void **)(v0 + 168) = v38;
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v89 = *(uint64_t (**)(void))(v0 + 8);
LABEL_51:
          return v89();
        }
        uint64_t v24 = sub_2523E8840(*(void *)v23, *v3);
        unint64_t v26 = v25;
        uint64_t v28 = v27;
        unint64_t v1 = v29;
        if ((v29 & 1) == 0)
        {
          swift_bridgeObjectRetain();
LABEL_11:
          uint64_t v30 = *(void **)(v0 + 552);
          uint64_t v31 = *(void **)(v0 + 536);
          uint64_t v32 = sub_2523FEBE8(v24, v26, v28, v1);

LABEL_32:
          uint64_t v85 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
          uint64_t v86 = *(void *)(v0 + 520);
          uint64_t v87 = *(void *)(v0 + 496);
          uint64_t v88 = *(void *)(v0 + 384);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          sub_2523E1290(v88, (uint64_t (*)(void))type metadata accessor for CKQueryAsyncSequence);
          v85(v86, v87);
          uint64_t v38 = v32;
          goto LABEL_33;
        }
        sub_25247B270();
        swift_unknownObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v80 = swift_dynamicCastClass();
        if (!v80)
        {
          swift_unknownObjectRelease();
          uint64_t v80 = MEMORY[0x263F8EE78];
        }
        uint64_t v81 = *(void *)(v80 + 16);
        swift_release();
        if (!__OFSUB__(v1 >> 1, v28))
        {
          if (v81 == (v1 >> 1) - v28)
          {
            uint64_t v82 = *(void **)(v0 + 552);
            v83 = *(void **)(v0 + 536);
            uint64_t v84 = swift_dynamicCastClass();

            uint64_t v32 = v84;
            if (!v84)
            {
              swift_unknownObjectRelease();
              uint64_t v32 = MEMORY[0x263F8EE78];
            }
            goto LABEL_32;
          }
          goto LABEL_58;
        }
LABEL_57:
        __break(1u);
LABEL_58:
        swift_unknownObjectRelease();
        goto LABEL_11;
      }
    }
    uint64_t v113 = *(void *)(v0 + 456);
    uint64_t v114 = *(void *)(v0 + 400);
    uint64_t v115 = *(void *)(v0 + 184);

    sub_2523E6CD8(v113);
    sub_2523E0E20(v115, v114, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    id v116 = v5;
    id v117 = v5;
    v118 = sub_25247A680();
    os_log_type_t v119 = sub_25247AD40();
    BOOL v120 = os_log_type_enabled(v118, v119);
    v121 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    if (v120)
    {
      uint64_t v152 = *(void *)(v0 + 440);
      uint64_t v155 = *(void *)(v0 + 456);
      uint64_t v122 = *(void *)(v0 + 400);
      uint64_t v123 = swift_slowAlloc();
      v124 = (void *)swift_slowAlloc();
      uint64_t v147 = swift_slowAlloc();
      v160[0] = v147;
      *(_DWORD *)uint64_t v123 = 136446466;
      sub_2523E12F0(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v125 = sub_25247B200();
      *(void *)(v0 + 64) = sub_25245DA98(v125, v126, v160);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523E1290(v122, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
      *(_WORD *)(v123 + 12) = 2114;
      id v127 = v5;
      uint64_t v128 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 72) = v128;
      sub_25247AEB0();
      void *v124 = v128;

      _os_log_impl(&dword_2523CF000, v118, v119, "[%{public}s] Failed: %{public}@", (uint8_t *)v123, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v124, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v147, -1, -1);
      MEMORY[0x2533B5DC0](v123, -1, -1);

      v121(v155, v152);
    }
    else
    {
      uint64_t v129 = *(void *)(v0 + 456);
      uint64_t v130 = *(void *)(v0 + 440);
      sub_2523E1290(*(void *)(v0 + 400), (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);

      v121(v129, v130);
    }
    v131 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
    v132 = *(void **)(v0 + 552);
    v133 = *(void **)(v0 + 536);
    uint64_t v134 = *(void *)(v0 + 520);
    uint64_t v135 = *(void *)(v0 + 496);
    uint64_t v136 = *(void *)(v0 + 384);
    swift_willThrow();

    swift_bridgeObjectRelease();
    sub_2523E1290(v136, (uint64_t (*)(void))type metadata accessor for CKQueryAsyncSequence);
    v131(v134, v135);
    goto LABEL_50;
  }
  uint64_t v40 = *(void *)(v0 + 240);
  uint64_t v39 = *(void *)(v0 + 248);
  uint64_t v41 = *(void *)(v0 + 232);
  sub_2523DA91C(v2, v41);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v41, 1, v40) == 1)
  {
    uint64_t v42 = *(void *)(v0 + 232);

    sub_2523D6FB8(v42, &qword_269C047B8);
  }
  else
  {
    uint64_t v63 = *(void *)(v0 + 264);
    uint64_t v62 = *(void *)(v0 + 272);
    sub_2523E1338(*(void *)(v0 + 232), v62, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);
    sub_2523E0E20(v62, v63, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);
    uint64_t v64 = *(void *)(v0 + 16);
    uint64_t v24 = *(void *)(v64 + 16);
    if (v24)
    {
      uint64_t v65 = *(void *)(v0 + 248);
      uint64_t v28 = *(void *)(v0 + 272) + *(int *)(*(void *)(v0 + 240) + 24);
      uint64_t v66 = v64 + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80));
      uint64_t v67 = *(void *)(v65 + 72);
      uint64_t v158 = *(void *)(v0 + 16);
      swift_bridgeObjectRetain();
      unint64_t v26 = 0;
      while (1)
      {
        uint64_t v68 = *(void *)(v0 + 256);
        sub_2523E0E20(v66, v68, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);
        char v69 = sub_25247A460();
        sub_2523E1290(v68, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);
        if (v69) {
          break;
        }
        ++v26;
        v66 += v67;
        if (v24 == v26)
        {
          swift_bridgeObjectRelease();
          unint64_t v26 = *(void *)(v158 + 16);
          goto LABEL_39;
        }
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v158 + 16) < v26)
      {
        __break(1u);
        goto LABEL_57;
      }
    }
    else
    {
      unint64_t v26 = 0;
    }
LABEL_39:
    uint64_t v106 = *(void *)(v0 + 272);
    uint64_t v107 = *(void *)(v0 + 224);
    sub_2523E1338(*(void *)(v0 + 264), v107, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);
    sub_2523FE6CC(v26, v26, v107);

    sub_2523E1290(v106, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);
  }
  v108 = (void *)swift_task_alloc();
  *(void *)(v0 + 576) = v108;
  void *v108 = v0;
  v108[1] = sub_2523DD43C;
  uint64_t v109 = *(void *)(v0 + 352);
  return MEMORY[0x270FA20F8](v0 + 24, 0, 0, v109, v0 + 32);
}

uint64_t sub_2523DE9FC()
{
  uint64_t v139 = v0;
  (*(void (**)(void, void))(*(void *)(v0 + 360) + 8))(*(void *)(v0 + 368), *(void *)(v0 + 352));
  unint64_t v1 = *(void **)(v0 + 32);
  *(void *)(v0 + 40) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A60);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 480);
    uint64_t v4 = *(void *)(v0 + 424);
    uint64_t v6 = *(void *)(v0 + 208);
    uint64_t v5 = *(void *)(v0 + 216);
    uint64_t v8 = *(void *)(v0 + 192);
    uint64_t v7 = *(void *)(v0 + 200);
    uint64_t v9 = *(void *)(v0 + 184);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
    sub_2523E6CD8(v3);
    sub_2523E0E20(v9, v4, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    uint64_t v10 = sub_25247A680();
    os_log_type_t v11 = sub_25247AD20();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    if (v12)
    {
      uint64_t v135 = *(void *)(v0 + 480);
      uint64_t v130 = *(void *)(v0 + 440);
      uint64_t v14 = *(void *)(v0 + 424);
      os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      v138[0] = v16;
      *(_DWORD *)os_log_type_t v15 = 136446210;
      sub_2523E12F0(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v17 = sub_25247B200();
      *(void *)(v0 + 144) = sub_25245DA98(v17, v18, v138);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523E1290(v14, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
      _os_log_impl(&dword_2523CF000, v10, v11, "[%{public}s] Canceled", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v16, -1, -1);
      MEMORY[0x2533B5DC0](v15, -1, -1);

      v13(v135, v130);
    }
    else
    {
      uint64_t v37 = *(void *)(v0 + 480);
      uint64_t v38 = *(void *)(v0 + 440);
      sub_2523E1290(*(void *)(v0 + 424), (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);

      v13(v37, v38);
    }
    uint64_t v136 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
    uint64_t v39 = *(void **)(v0 + 552);
    uint64_t v40 = *(void **)(v0 + 536);
    uint64_t v132 = *(void *)(v0 + 520);
    uint64_t v41 = *(void *)(v0 + 496);
    uint64_t v42 = *(void *)(v0 + 384);
    uint64_t v43 = *(void *)(v0 + 200);
    uint64_t v44 = *(void *)(v0 + 208);
    uint64_t v45 = *(void *)(v0 + 192);
    sub_2523E12F0(&qword_269C047E8, MEMORY[0x263F8F488]);
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v46, v44, v45);
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v45);
    swift_bridgeObjectRelease();
    sub_2523E1290(v42, (uint64_t (*)(void))type metadata accessor for CKQueryAsyncSequence);
    v136(v132, v41);

LABEL_19:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v89 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_20;
  }
  uint64_t v19 = (void **)(v0 + 56);

  *(void *)(v0 + 48) = v1;
  id v20 = v1;
  type metadata accessor for CKError(0);
  if (!swift_dynamicCast()) {
    goto LABEL_15;
  }
  uint64_t v21 = *v19;
  *(void *)(v0 + 88) = *v19;
  sub_2523E12F0(&qword_269C04480, type metadata accessor for CKError);
  id v22 = v21;
  sub_25247A0E0();
  if (*(void *)(v0 + 80) != 28)
  {

    *(void *)(v0 + 104) = v22;
    sub_25247A0E0();
    if (*(void *)(v0 + 96) == 26)
    {
      uint64_t v47 = *(void *)(v0 + 464);
      uint64_t v48 = *(void *)(v0 + 408);
      uint64_t v49 = *(void *)(v0 + 184);

      sub_2523E6CD8(v47);
      sub_2523E0E20(v49, v48, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
      id v50 = v22;
      uint64_t v51 = sub_25247A680();
      os_log_type_t v52 = sub_25247AD20();
      BOOL v53 = os_log_type_enabled(v51, v52);
      uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
      if (v53)
      {
        uint64_t v128 = *(void *)(v0 + 440);
        uint64_t v133 = *(void *)(v0 + 464);
        uint64_t v54 = *(void *)(v0 + 408);
        v124 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
        uint64_t v55 = swift_slowAlloc();
        v121 = (void *)swift_slowAlloc();
        uint64_t v123 = swift_slowAlloc();
        v138[0] = v123;
        *(_DWORD *)uint64_t v55 = 136446466;
        sub_2523E12F0(&qword_269C046B0, MEMORY[0x263F07508]);
        uint64_t v56 = sub_25247B200();
        *(void *)(v0 + 112) = sub_25245DA98(v56, v57, v138);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        sub_2523E1290(v54, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
        *(_WORD *)(v55 + 12) = 2114;
        id v58 = v50;
        uint64_t v59 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v0 + 120) = v59;
        sub_25247AEB0();
        void *v121 = v59;

        _os_log_impl(&dword_2523CF000, v51, v52, "[%{public}s] Did not find zone: %{public}@", (uint8_t *)v55, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v121, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v123, -1, -1);
        MEMORY[0x2533B5DC0](v55, -1, -1);

        v124(v133, v128);
        goto LABEL_25;
      }
      uint64_t v91 = *(void *)(v0 + 464);
      uint64_t v92 = *(void *)(v0 + 440);
      uint64_t v93 = *(void *)(v0 + 408);

      sub_2523E1290(v93, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
      uint64_t v63 = v91;
      uint64_t v64 = v92;
LABEL_24:
      v30(v63, v64);
      goto LABEL_25;
    }

LABEL_15:
    uint64_t v65 = *(void *)(v0 + 456);
    uint64_t v66 = *(void *)(v0 + 400);
    uint64_t v67 = *(void *)(v0 + 184);

    sub_2523E6CD8(v65);
    sub_2523E0E20(v67, v66, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    id v68 = v1;
    id v69 = v1;
    uint64_t v70 = sub_25247A680();
    os_log_type_t v71 = sub_25247AD40();
    BOOL v72 = os_log_type_enabled(v70, v71);
    uint64_t v73 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    if (v72)
    {
      uint64_t v137 = *(void *)(v0 + 456);
      uint64_t v129 = *(void *)(v0 + 440);
      uint64_t v134 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
      uint64_t v74 = *(void *)(v0 + 400);
      uint64_t v75 = swift_slowAlloc();
      uint64_t v76 = (void *)swift_slowAlloc();
      uint64_t v125 = swift_slowAlloc();
      v138[0] = v125;
      *(_DWORD *)uint64_t v75 = 136446466;
      sub_2523E12F0(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v77 = sub_25247B200();
      *(void *)(v0 + 64) = sub_25245DA98(v77, v78, v138);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523E1290(v74, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
      *(_WORD *)(v75 + 12) = 2114;
      id v79 = v1;
      uint64_t v80 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 72) = v80;
      sub_25247AEB0();
      *uint64_t v76 = v80;

      _os_log_impl(&dword_2523CF000, v70, v71, "[%{public}s] Failed: %{public}@", (uint8_t *)v75, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v76, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v125, -1, -1);
      MEMORY[0x2533B5DC0](v75, -1, -1);

      v134(v137, v129);
    }
    else
    {
      uint64_t v81 = *(void *)(v0 + 456);
      uint64_t v82 = *(void *)(v0 + 440);
      sub_2523E1290(*(void *)(v0 + 400), (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);

      v73(v81, v82);
    }
    v83 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
    uint64_t v84 = *(void **)(v0 + 552);
    uint64_t v85 = *(void **)(v0 + 536);
    uint64_t v86 = *(void *)(v0 + 520);
    uint64_t v87 = *(void *)(v0 + 496);
    uint64_t v88 = *(void *)(v0 + 384);
    swift_willThrow();

    swift_bridgeObjectRelease();
    sub_2523E1290(v88, (uint64_t (*)(void))type metadata accessor for CKQueryAsyncSequence);
    v83(v86, v87);
    goto LABEL_19;
  }
  uint64_t v23 = *(void *)(v0 + 472);
  uint64_t v24 = *(void *)(v0 + 416);
  uint64_t v25 = *(void *)(v0 + 184);

  sub_2523E6CD8(v23);
  sub_2523E0E20(v25, v24, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
  id v26 = v22;
  uint64_t v27 = sub_25247A680();
  os_log_type_t v28 = sub_25247AD20();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
  if (!v29)
  {
    uint64_t v60 = *(void *)(v0 + 472);
    uint64_t v61 = *(void *)(v0 + 440);
    uint64_t v62 = *(void *)(v0 + 416);

    sub_2523E1290(v62, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    uint64_t v63 = v60;
    uint64_t v64 = v61;
    goto LABEL_24;
  }
  id v127 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
  uint64_t v131 = *(void *)(v0 + 472);
  uint64_t v126 = *(void *)(v0 + 440);
  uint64_t v31 = *(void *)(v0 + 416);
  uint64_t v32 = swift_slowAlloc();
  BOOL v120 = (void *)swift_slowAlloc();
  uint64_t v122 = swift_slowAlloc();
  v138[0] = v122;
  *(_DWORD *)uint64_t v32 = 136446466;
  sub_2523E12F0(&qword_269C046B0, MEMORY[0x263F07508]);
  uint64_t v33 = sub_25247B200();
  *(void *)(v0 + 128) = sub_25245DA98(v33, v34, v138);
  sub_25247AEB0();
  swift_bridgeObjectRelease();
  sub_2523E1290(v31, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
  *(_WORD *)(v32 + 12) = 2114;
  id v35 = v26;
  uint64_t v36 = _swift_stdlib_bridgeErrorToNSError();
  *(void *)(v0 + 136) = v36;
  sub_25247AEB0();
  *BOOL v120 = v36;

  _os_log_impl(&dword_2523CF000, v27, v28, "[%{public}s] Found user-deleted zone: %{public}@", (uint8_t *)v32, 0x16u);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
  swift_arrayDestroy();
  MEMORY[0x2533B5DC0](v120, -1, -1);
  swift_arrayDestroy();
  MEMORY[0x2533B5DC0](v122, -1, -1);
  MEMORY[0x2533B5DC0](v32, -1, -1);

  v127(v131, v126);
LABEL_25:

  uint64_t v94 = *(void *)(v0 + 184) + *(int *)(*(void *)(v0 + 392) + 24);
  if ((*(unsigned char *)(v94 + 8) & 1) == 0 && *(void *)v94 < *(void *)(*(void *)(v0 + 16) + 16))
  {
    uint64_t v95 = sub_2523E8840(*(void *)v94, *(void *)(v0 + 16));
    uint64_t v97 = v96;
    uint64_t v99 = v98;
    unint64_t v101 = v100;
    if (v100)
    {
      sub_25247B270();
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v111 = swift_dynamicCastClass();
      if (!v111)
      {
        swift_unknownObjectRelease();
        uint64_t v111 = MEMORY[0x263F8EE78];
      }
      uint64_t v112 = *(void *)(v111 + 16);
      swift_release();
      if (__OFSUB__(v101 >> 1, v99))
      {
        __break(1u);
      }
      else if (v112 == (v101 >> 1) - v99)
      {
        uint64_t v113 = *(void **)(v0 + 552);
        uint64_t v114 = *(void **)(v0 + 536);
        uint64_t v115 = swift_dynamicCastClass();

        uint64_t v104 = v115;
        if (!v115)
        {
          swift_unknownObjectRelease();
          uint64_t v104 = MEMORY[0x263F8EE78];
        }
        goto LABEL_37;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    id v102 = *(void **)(v0 + 552);
    uint64_t v103 = *(void **)(v0 + 536);
    uint64_t v104 = sub_2523FEBE8(v95, v97, v99, v101);

LABEL_37:
    id v116 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
    uint64_t v117 = *(void *)(v0 + 520);
    uint64_t v118 = *(void *)(v0 + 496);
    uint64_t v119 = *(void *)(v0 + 384);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_2523E1290(v119, (uint64_t (*)(void))type metadata accessor for CKQueryAsyncSequence);
    v116(v117, v118);
    uint64_t v110 = v104;
    goto LABEL_38;
  }
  uint64_t v105 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
  uint64_t v106 = *(void **)(v0 + 536);
  uint64_t v107 = *(void *)(v0 + 520);
  uint64_t v108 = *(void *)(v0 + 496);
  uint64_t v109 = *(void *)(v0 + 384);

  sub_2523E1290(v109, (uint64_t (*)(void))type metadata accessor for CKQueryAsyncSequence);
  v105(v107, v108);
  uint64_t v110 = *(void *)(v0 + 16);
LABEL_38:
  **(void **)(v0 + 168) = v110;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v89 = *(uint64_t (**)(void))(v0 + 8);
LABEL_20:
  return v89();
}

uint64_t sub_2523DFBE4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2523E05E8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2523DFC04(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2523E075C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2523DFC24(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for EncryptionKeyQuery(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25247A540();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = a3[7];
    os_log_type_t v11 = (char *)a1 + v9;
    BOOL v12 = (char *)a2 + v9;
    *(void *)os_log_type_t v11 = *(void *)v12;
    v11[8] = v12[8];
    uint64_t v13 = (char *)a1 + v10;
    uint64_t v14 = (char *)a2 + v10;
    *(void *)uint64_t v13 = *(void *)v14;
    v13[8] = v14[8];
    uint64_t v15 = a3[8];
    uint64_t v16 = (uint64_t *)((char *)a1 + v15);
    uint64_t v17 = (char *)a2 + v15;
    unint64_t v18 = *(void **)v17;
    uint64_t v19 = *((void *)v17 + 1);
    id v20 = (void *)*((void *)v17 + 2);
    sub_2523DFD9C(*(void **)v17, v19, v20);
    *uint64_t v16 = v18;
    v16[1] = v19;
    v16[2] = v20;
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_unknownObjectRetain();
  }
  return a1;
}

id sub_2523DFD9C(void *a1, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    id v6 = a1;
    id v5 = a3;
    a1 = v6;
  }
  else if (((v3 ^ (2 * v3)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return a1;
}

uint64_t destroy for EncryptionKeyQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A540();
  id v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  sub_2523DFE9C(*(void **)(a1 + *(int *)(a2 + 32)), *(void *)(a1 + *(int *)(a2 + 32) + 8), *(void **)(a1 + *(int *)(a2 + 32) + 16));

  return swift_unknownObjectRelease();
}

void sub_2523DFE9C(void *a1, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
  }
}

uint64_t initializeWithCopy for EncryptionKeyQuery(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25247A540();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = a1 + v9;
  uint64_t v13 = a2 + v9;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void **)v16;
  uint64_t v18 = *(void *)(v16 + 8);
  uint64_t v19 = *(void **)(v16 + 16);
  sub_2523DFD9C(*(void **)v16, v18, v19);
  *uint64_t v15 = v17;
  v15[1] = v18;
  v15[2] = v19;
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EncryptionKeyQuery(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25247A540();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  char v15 = *(unsigned char *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = v15;
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void **)v18;
  uint64_t v20 = *(void *)(v18 + 8);
  uint64_t v21 = *(void **)(v18 + 16);
  sub_2523DFD9C(*(void **)v18, v20, v21);
  id v22 = *(void **)v17;
  uint64_t v23 = *(void *)(v17 + 8);
  uint64_t v24 = *(void **)(v17 + 16);
  *(void *)uint64_t v17 = v19;
  *(void *)(v17 + 8) = v20;
  *(void *)(v17 + 16) = v21;
  sub_2523DFE9C(v22, v23, v24);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t initializeWithTake for EncryptionKeyQuery(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25247A540();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = a1 + v9;
  uint64_t v13 = a2 + v9;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  return a1;
}

uint64_t assignWithTake for EncryptionKeyQuery(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25247A540();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = a1 + v9;
  uint64_t v13 = a2 + v9;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(v16 + 16);
  uint64_t v18 = *(void **)v15;
  uint64_t v19 = *(void *)(v15 + 8);
  uint64_t v20 = *(void **)(v15 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(void *)(v15 + 16) = v17;
  sub_2523DFE9C(v18, v19, v20);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EncryptionKeyQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2523E033C);
}

uint64_t sub_2523E033C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A540();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if ((*(void *)(a1 + *(int *)(a3 + 32) + 8) >> 1) > 0x80000000)
  {
    return -(*(void *)(a1 + *(int *)(a3 + 32) + 8) >> 1);
  }
  else
  {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for EncryptionKeyQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2523E0414);
}

uint64_t sub_2523E0414(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_25247A540();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    uint64_t v11 = (void *)(a1 + *(int *)(a4 + 32));
    *uint64_t v11 = 0;
    v11[1] = 2 * -(int)a2;
    v11[2] = 0;
  }
  return result;
}

uint64_t sub_2523E04DC()
{
  uint64_t result = sub_25247A540();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2523E0588(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2523E0900(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2523E05A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2523E0B48(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2523E05C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2523E0CB4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2523E05E8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C04740);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25247B100();
  __break(1u);
  return result;
}

uint64_t sub_2523E075C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C04768);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04770);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25247B100();
  __break(1u);
  return result;
}

uint64_t sub_2523E0900(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04758);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269C04760) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269C04760) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_25247B100();
  __break(1u);
  return result;
}

uint64_t sub_2523E0B48(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C04748);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25247B100();
  __break(1u);
  return result;
}

uint64_t sub_2523E0CB4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C04750);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25247B100();
  __break(1u);
  return result;
}

uint64_t sub_2523E0E20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2523E0E88()
{
  unint64_t v1 = (int *)(type metadata accessor for EncryptionKeyQuery() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = sub_25247A4B0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v3 + v4 + v7) & ~v7;
  uint64_t v14 = v8 + *(void *)(v6 + 64);
  uint64_t v9 = v2 | v7 | 7;
  swift_unknownObjectRelease();
  uint64_t v10 = v0 + v3;
  uint64_t v11 = sub_25247A540();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  v12(v10 + v1[7], v11);
  sub_2523DFE9C(*(void **)(v10 + v1[10]), *(void *)(v10 + v1[10] + 8), *(void **)(v10 + v1[10] + 16));
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);

  return MEMORY[0x270FA0238](v0, v14, v9);
}

uint64_t sub_2523E1048(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for EncryptionKeyQuery() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(sub_25247A4B0() - 8) + 80);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v11 = v1 + v5;
  uint64_t v12 = v1 + (v8 & ~v7);
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  void *v13 = v2;
  v13[1] = sub_2523D3A1C;
  return sub_2523DB808(a1, v9, v10, v11, v12);
}

uint64_t sub_2523E119C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2523D3928;
  return sub_2523DC340(a1, a2, v6);
}

uint64_t sub_2523E124C(uint64_t a1)
{
  return sub_252454164(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_2523E1254(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2523E1290(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2523E12F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2523E1338(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2523E13A0(void *a1)
{
  return sub_25242E3D0(a1, *(void **)(v1 + 16)) & 1;
}

void sub_2523E13C0(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_2523E13F4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C048B0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v7[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2523D3370();
  sub_25247B3A0();
  if (!v1)
  {
    v7[15] = 1;
    sub_2523E4394();
    sub_25247B180();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_2523E15BC(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_2523E15F0(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_2523E1624(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_2523E1658(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_2523E168C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_2523E16C0(void *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  v11[1] = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C048B0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2523D3370();
  uint64_t v10 = sub_25247B3A0();
  if (!v3)
  {
    char v12 = 1;
    a2(v10);
    sub_25247B180();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

HomeKitEvents::LockEvent::State_optional __swiftcall LockEvent.State.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 6;
  if ((unint64_t)rawValue < 6) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (HomeKitEvents::LockEvent::State_optional)rawValue;
}

void *static LockEvent.State.allCases.getter()
{
  return &unk_2702992B0;
}

uint64_t LockEvent.State.rawValue.getter()
{
  return *v0;
}

HomeKitEvents::LockEvent::State_optional sub_2523E18C0(Swift::Int *a1)
{
  return LockEvent.State.init(rawValue:)(*a1);
}

void sub_2523E18C8(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_2523E18D4(void *a1@<X8>)
{
  *a1 = &unk_2702992B0;
}

uint64_t LockEvent.state.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for LockEvent();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for LockEvent()
{
  uint64_t result = qword_269C04898;
  if (!qword_269C04898) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LockEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25247A4B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t LockEvent.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t LockEvent.category.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for EventBase(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t LockEvent.roomIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t LockEvent.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LockEvent.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t LockEvent.accessoryName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LockEvent.userIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);

  return sub_2523E1C2C(v3, a1);
}

uint64_t sub_2523E1C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t LockEvent.hash(into:)()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A4B0();
  sub_2523E2E24(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_2523E2E24((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  type metadata accessor for LockEvent();
  return sub_25247B360();
}

BOOL static LockEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (!_s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(a1, a2)) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for LockEvent();
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20));
}

uint64_t LockEvent.hashValue.getter()
{
  return sub_25247B390();
}

uint64_t sub_2523E2010@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2523E2088()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2523E20C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2523E2140()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2523E2180@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);

  return sub_2523E1C2C(v3, a1);
}

uint64_t sub_2523E21C4@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 20));
  return result;
}

uint64_t sub_2523E21D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25247A4B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_2523E223C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2523E22B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for EventBase(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t sub_2523E22E8()
{
  return sub_25247B390();
}

uint64_t sub_2523E232C()
{
  return sub_25247B390();
}

BOOL sub_2523E2368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (j___s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0() & 1) != 0
      && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20));
}

uint64_t LockEvent.init(date:homeIdentifier:roomIdentifier:roomName:accessoryIdentifier:accessoryName:state:userIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11)
{
  char v29 = *a10;
  uint64_t v17 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a9, a1, v17);
  uint64_t v18 = type metadata accessor for EventBase(0);
  uint64_t v19 = a9 + *(int *)(v18 + 20);
  uint64_t v20 = sub_25247A540();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32);
  v21(v19, a2, v20);
  *(unsigned char *)(a9 + *(int *)(v18 + 24)) = 0;
  unint64_t v22 = (int *)type metadata accessor for AccessoryEventBase(0);
  v21(a9 + v22[5], a3, v20);
  uint64_t v23 = (void *)(a9 + v22[6]);
  *uint64_t v23 = a4;
  v23[1] = a5;
  v21(a9 + v22[7], a6, v20);
  uint64_t v24 = (void *)(a9 + v22[8]);
  *uint64_t v24 = a7;
  v24[1] = a8;
  sub_2523E28C4(a11, a9 + v22[9]);
  uint64_t result = type metadata accessor for LockEvent();
  *(unsigned char *)(a9 + *(int *)(result + 20)) = v29;
  return result;
}

uint64_t LockEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_2523D918C((uint64_t)a1, (uint64_t)v11);
  sub_252466A64((uint64_t)v11, (uint64_t)v7);
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_2523E16C0(a1, (void (*)(uint64_t))sub_2523E2EEC, (uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  char v9 = v11[0];
  sub_2523E29D8((uint64_t)v7, a2);
  uint64_t result = type metadata accessor for LockEvent();
  *(unsigned char *)(a2 + *(int *)(result + 20)) = v9;
  return result;
}

uint64_t LockEvent.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04810);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = sub_252467000(a1);
  if (!v2)
  {
    v9[15] = *(unsigned char *)(v1 + *(int *)(type metadata accessor for LockEvent() + 20));
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_2523D3370();
    sub_25247B3B0();
    v9[14] = 1;
    sub_2523E2A80();
    sub_25247B1D0();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_2523E27D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LockEvent.init(from:)(a1, a2);
}

uint64_t sub_2523E27F0(void *a1)
{
  return LockEvent.encode(to:)(a1);
}

uint64_t sub_2523E2808()
{
  return 1;
}

uint64_t sub_2523E2814()
{
  return sub_25247A9D0();
}

uint64_t sub_2523E2874()
{
  return sub_25247A9C0();
}

uint64_t sub_2523E28C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2523E297C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AccessoryEventBaseLegacy(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2523E29D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccessoryEventBaseLegacy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_2523E2A80()
{
  unint64_t result = qword_269C04818;
  if (!qword_269C04818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04818);
  }
  return result;
}

unint64_t sub_2523E2AD8()
{
  unint64_t result = qword_269C04820;
  if (!qword_269C04820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04820);
  }
  return result;
}

unint64_t sub_2523E2B30()
{
  unint64_t result = qword_269C04828;
  if (!qword_269C04828)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C04830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04828);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_2523E2BD8()
{
  unint64_t result = qword_269C04838;
  if (!qword_269C04838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04838);
  }
  return result;
}

uint64_t sub_2523E2C2C(void *a1)
{
  a1[1] = sub_2523E2E24(&qword_269C04848, (void (*)(uint64_t))type metadata accessor for LockEvent);
  a1[2] = sub_2523E2E24(&qword_269C04850, (void (*)(uint64_t))type metadata accessor for LockEvent);
  uint64_t result = sub_2523E2E24(&qword_269C04858, (void (*)(uint64_t))type metadata accessor for LockEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_2523E2CD8()
{
  return sub_2523E2E24(&qword_269C04860, (void (*)(uint64_t))type metadata accessor for LockEvent);
}

uint64_t sub_2523E2D20(uint64_t a1)
{
  uint64_t result = sub_2523E2E24(&qword_269C04840, (void (*)(uint64_t))type metadata accessor for LockEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2523E2D78(void *a1)
{
  a1[1] = sub_2523E2E24(&qword_269C04868, (void (*)(uint64_t))type metadata accessor for LockEvent);
  a1[2] = sub_2523E2E24(&qword_269C04870, (void (*)(uint64_t))type metadata accessor for LockEvent);
  uint64_t result = sub_2523E2E24(&qword_269C04878, (void (*)(uint64_t))type metadata accessor for LockEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_2523E2E24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2523E2E6C()
{
  return sub_2523E2E24(&qword_269C04868, (void (*)(uint64_t))type metadata accessor for LockEvent);
}

unint64_t sub_2523E2EB4(void *a1)
{
  a1[1] = sub_2523E2EEC();
  a1[2] = sub_2523E2A80();
  unint64_t result = sub_2523E2F40();
  a1[3] = result;
  return result;
}

unint64_t sub_2523E2EEC()
{
  unint64_t result = qword_269C04880;
  if (!qword_269C04880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04880);
  }
  return result;
}

unint64_t sub_2523E2F40()
{
  unint64_t result = qword_269C04888;
  if (!qword_269C04888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04888);
  }
  return result;
}

unint64_t sub_2523E2F94(uint64_t a1)
{
  unint64_t result = sub_2523E2FBC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2523E2FBC()
{
  unint64_t result = qword_269C04890;
  if (!qword_269C04890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04890);
  }
  return result;
}

unint64_t sub_2523E3010(uint64_t a1)
{
  unint64_t result = sub_2523E2BD8();
  *(void *)(a1 + 8) = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for LockEvent(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    a1 = (void *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_25247A4B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for EventBase(0);
    uint64_t v8 = *(int *)(v7 + 20);
    char v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_25247A540();
    uint64_t v12 = *(void *)(v11 - 8);
    unint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v13(v9, v10, v11);
    *((unsigned char *)a1 + *(int *)(v7 + 24)) = *((unsigned char *)a2 + *(int *)(v7 + 24));
    uint64_t v14 = (int *)type metadata accessor for AccessoryEventBase(0);
    v13((char *)a1 + v14[5], (char *)a2 + v14[5], v11);
    uint64_t v15 = v14[6];
    uint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = v14[7];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    swift_bridgeObjectRetain();
    v13(v20, v21, v11);
    uint64_t v22 = v14[8];
    uint64_t v23 = (void *)((char *)a1 + v22);
    uint64_t v24 = (void *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = v14[9];
    uint64_t v27 = (char *)a1 + v26;
    os_log_type_t v28 = (char *)a2 + v26;
    char v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v29(v28, 1, v11))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
      memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      v13(v27, v28, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v11);
    }
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for LockEvent(uint64_t a1)
{
  uint64_t v2 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = a1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(void *)(v4 - 8);
  char v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v9(v3, v4);
  uint64_t v6 = (int *)type metadata accessor for AccessoryEventBase(0);
  v9(a1 + v6[5], v4);
  swift_bridgeObjectRelease();
  v9(a1 + v6[7], v4);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + v6[9];
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v4);
  }
  return result;
}

uint64_t initializeWithCopy for LockEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  uint64_t v6 = type metadata accessor for EventBase(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_25247A540();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  v12(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(v6 + 24)) = *(unsigned char *)(a2 + *(int *)(v6 + 24));
  unint64_t v13 = (int *)type metadata accessor for AccessoryEventBase(0);
  v12((void *)(a1 + v13[5]), (const void *)(a2 + v13[5]), v10);
  uint64_t v14 = v13[6];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = v13[7];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  swift_bridgeObjectRetain();
  v12(v19, v20, v10);
  uint64_t v21 = v13[8];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = v13[9];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (const void *)(a2 + v25);
  os_log_type_t v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v28(v27, 1, v10))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    v12(v26, v27, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v26, 0, 1, v10);
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for LockEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a1, a2, v5);
  uint64_t v6 = type metadata accessor for EventBase(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_25247A540();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(v6 + 24)) = *(unsigned char *)(a2 + *(int *)(v6 + 24));
  unint64_t v13 = (int *)type metadata accessor for AccessoryEventBase(0);
  v12((void *)(a1 + v13[5]), (const void *)(a2 + v13[5]), v10);
  uint64_t v14 = v13[6];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12((void *)(a1 + v13[7]), (const void *)(a2 + v13[7]), v10);
  uint64_t v17 = v13[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = v13[9];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v9) = v23((const void *)(a1 + v20), 1, v10);
  int v24 = v23(v22, 1, v10);
  if (!v9)
  {
    if (!v24)
    {
      v12(v21, v22, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v21, v10);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v21, v22, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0, 1, v10);
LABEL_7:
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for LockEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for EventBase(0);
  uint64_t v8 = *(int *)(v7 + 20);
  char v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_25247A540();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  uint64_t v14 = (int *)type metadata accessor for AccessoryEventBase(0);
  v13((void *)(a1 + v14[5]), (const void *)(a2 + v14[5]), v11);
  *(_OWORD *)(a1 + v14[6]) = *(_OWORD *)(a2 + v14[6]);
  v13((void *)(a1 + v14[7]), (const void *)(a2 + v14[7]), v11);
  *(_OWORD *)(a1 + v14[8]) = *(_OWORD *)(a2 + v14[8]);
  uint64_t v15 = v14[9];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v15, 1, v11))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v13(v16, v17, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for LockEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a1, a2, v5);
  uint64_t v6 = type metadata accessor for EventBase(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_25247A540();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(v6 + 24)) = *(unsigned char *)(a2 + *(int *)(v6 + 24));
  unint64_t v13 = (int *)type metadata accessor for AccessoryEventBase(0);
  v12((void *)(a1 + v13[5]), (const void *)(a2 + v13[5]), v10);
  uint64_t v14 = v13[6];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  v12((void *)(a1 + v13[7]), (const void *)(a2 + v13[7]), v10);
  uint64_t v19 = v13[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = v13[9];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  uint64_t v27 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v9) = v27((const void *)(a1 + v24), 1, v10);
  int v28 = v27(v26, 1, v10);
  if (!v9)
  {
    if (!v28)
    {
      v12(v25, v26, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v25, v10);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v25, v26, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v25, 0, 1, v10);
LABEL_7:
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for LockEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2523E3DE8);
}

uint64_t sub_2523E3DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AccessoryEventBaseLegacy(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 6) {
      return v10 - 5;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for LockEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2523E3EB8);
}

uint64_t sub_2523E3EB8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AccessoryEventBaseLegacy(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 5;
  }
  return result;
}

uint64_t sub_2523E3F74()
{
  uint64_t result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LockEvent.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LockEvent.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2523E4164);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LockEvent.State()
{
  return &type metadata for LockEvent.State;
}

unint64_t sub_2523E419C()
{
  unint64_t result = qword_269C048A8;
  if (!qword_269C048A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C048A8);
  }
  return result;
}

unint64_t sub_2523E41F0()
{
  unint64_t result = qword_269C048B8;
  if (!qword_269C048B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C048B8);
  }
  return result;
}

unint64_t sub_2523E4244()
{
  unint64_t result = qword_269C048C0;
  if (!qword_269C048C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C048C0);
  }
  return result;
}

unint64_t sub_2523E4298()
{
  unint64_t result = qword_269C048C8;
  if (!qword_269C048C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C048C8);
  }
  return result;
}

unint64_t sub_2523E42EC()
{
  unint64_t result = qword_269C048D0;
  if (!qword_269C048D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C048D0);
  }
  return result;
}

unint64_t sub_2523E4340()
{
  unint64_t result = qword_269C048D8;
  if (!qword_269C048D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C048D8);
  }
  return result;
}

unint64_t sub_2523E4394()
{
  unint64_t result = qword_269C048E0;
  if (!qword_269C048E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C048E0);
  }
  return result;
}

unint64_t sub_2523E43E8()
{
  unint64_t result = qword_269C048E8;
  if (!qword_269C048E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C048E8);
  }
  return result;
}

void sub_2523E4504(char *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_pendingQueryLogEvents);
  unsigned int v4 = (os_unfair_lock_s *)(v3 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  uint64_t v5 = *(void *)(v3 + 16);
  if (*(void *)(v5 + 16))
  {
    unint64_t v6 = sub_252460DBC((uint64_t)&a1[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_queryIdentifier]);
    if (v7)
    {
      uint64_t v31 = (char *)*(id *)(*(void *)(v5 + 56) + 8 * v6);
      os_unfair_lock_unlock(v4);
      if (!v31) {
        return;
      }
      id v8 = objc_msgSend(a1, sel_error);
      if (v8)
      {

        uint64_t v9 = v31;
        id v10 = objc_msgSend(a1, sel_error);
        if (v10)
        {
          uint64_t v11 = v10;
          uint64_t v12 = (void *)sub_25247A110();
        }
        else
        {
          uint64_t v12 = 0;
        }
        objc_msgSend(v9, sel_setError_, v12);
      }
      uint64_t v13 = *(void *)&a1[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_numFetchedRecords];
      uint64_t v14 = *(void *)&v31[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numFetchedCKRecords];
      BOOL v15 = __OFADD__(v14, v13);
      uint64_t v16 = v14 + v13;
      if (v15)
      {
        __break(1u);
      }
      else
      {
        *(void *)&v31[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numFetchedCKRecords] = v16;
        uint64_t v17 = *(void *)&a1[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_totalRecordSize];
        uint64_t v18 = *(void *)&v31[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_totalCKRecordSize];
        BOOL v15 = __OFADD__(v18, v17);
        uint64_t v19 = v18 + v17;
        if (!v15)
        {
          *(void *)&v31[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_totalCKRecordSize] = v19;
          objc_msgSend(a1, sel_startTime);
          uint64_t v20 = v31;
          uint64_t v21 = &v31[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryExecutionEndTime];
          *(void *)uint64_t v21 = v22;
          v21[8] = 0;
          switch(a1[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state])
          {
            case 1:
              goto LABEL_19;
            case 2:
              goto LABEL_22;
            case 3:
              uint64_t v30 = &OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryCancelled;
              goto LABEL_31;
            case 4:
              uint64_t v30 = &OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryReachedLimit;
              goto LABEL_31;
            case 5:
              uint64_t v30 = &OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryDroppedEvents;
              goto LABEL_31;
            case 6:
              uint64_t v30 = &OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryTerminatedStream;
              goto LABEL_31;
            case 7:
              uint64_t v30 = &OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryResultNotHandled;
              goto LABEL_31;
            case 8:
              uint64_t v30 = &OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryResultProcessingEncounteredError;
              goto LABEL_31;
            case 9:
              uint64_t v30 = &OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryEncounteredError;
LABEL_31:
              v31[*v30] = 1;
              goto LABEL_32;
            default:
              objc_msgSend(a1, sel_startTime);
              uint64_t v20 = v31;
              uint64_t v23 = &v31[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryExecutionStartTime];
              *(void *)uint64_t v23 = v24;
              v23[8] = 0;
              uint64_t v25 = OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numCKQueries;
              uint64_t v26 = *(void *)&v31[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numCKQueries];
              BOOL v15 = __OFADD__(v26, 1);
              uint64_t v27 = v26 + 1;
              if (v15)
              {
                __break(1u);
LABEL_19:
                uint64_t v25 = OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numCKQueries;
                uint64_t v28 = *(void *)&v20[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numCKQueries];
                BOOL v15 = __OFADD__(v28, 1);
                uint64_t v27 = v28 + 1;
                if (v15)
                {
                  __break(1u);
LABEL_22:
                  uint64_t v25 = OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numCKQueriesSucceeded;
                  uint64_t v29 = *(void *)&v20[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numCKQueriesSucceeded];
                  BOOL v15 = __OFADD__(v29, 1);
                  uint64_t v27 = v29 + 1;
                  if (v15) {
                    goto LABEL_37;
                  }
                }
              }
              *(void *)&v20[v25] = v27;
LABEL_32:

              break;
          }
          return;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
      JUMPOUT(0x2523E47F4);
    }
  }

  os_unfair_lock_unlock(v4);
}

void sub_2523E481C(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_pendingQueryLogEvents);
  uint64_t v5 = (os_unfair_lock_s *)(v4 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 24));
  uint64_t v6 = *(void *)(v4 + 16);
  if (*(void *)(v6 + 16)
    && (uint64_t v7 = (uint64_t)&a1[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier],
        unint64_t v8 = sub_252460DBC((uint64_t)&a1[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier]),
        (v9 & 1) != 0))
  {
    uint64_t v36 = (char *)*(id *)(*(void *)(v6 + 56) + 8 * v8);
    os_unfair_lock_unlock(v5);
    if (v36)
    {
      uint64_t v10 = *(void *)&a1[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents];
      uint64_t v11 = *(void *)&v36[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numEmittedEvents];
      BOOL v12 = __OFADD__(v11, v10);
      uint64_t v13 = v11 + v10;
      if (v12)
      {
        __break(1u);
LABEL_51:
        __break(1u);
        JUMPOUT(0x2523E4BD4);
      }
      *(void *)&v36[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numEmittedEvents] = v13;
      id v14 = objc_msgSend(a1, sel_error);
      if (v14)
      {

        BOOL v15 = v36;
        id v16 = objc_msgSend(a1, sel_error);
        if (v16)
        {
          uint64_t v17 = v16;
          uint64_t v18 = (void *)sub_25247A110();
        }
        else
        {
          uint64_t v18 = 0;
        }
        objc_msgSend(v15, sel_setError_, v18);
      }
      uint64_t v19 = &OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_succeeded;
      uint64_t v20 = v36;
      switch(a1[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state])
      {
        case 1:
          goto LABEL_41;
        case 2:
          uint64_t v19 = &OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_cancelled;
          goto LABEL_41;
        case 3:
          uint64_t v23 = &OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingReachedLimit;
          goto LABEL_21;
        case 4:
          uint64_t v23 = &OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingDroppedEvents;
          goto LABEL_21;
        case 5:
          uint64_t v23 = &OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingTerminatedStream;
          goto LABEL_21;
        case 6:
          uint64_t v23 = &OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingResultNotHandled;
LABEL_21:
          v36[*v23] = 1;
          goto LABEL_47;
        case 7:
          uint64_t v24 = OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredExpiredRecords;
          uint64_t v25 = *(void *)&v36[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredExpiredRecords];
          BOOL v12 = __OFADD__(v25, 1);
          uint64_t v26 = v25 + 1;
          if (!v12) {
            goto LABEL_46;
          }
          __break(1u);
LABEL_25:
          uint64_t v24 = OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredNoCreationDateRecords;
          uint64_t v27 = *(void *)&v36[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredNoCreationDateRecords];
          BOOL v12 = __OFADD__(v27, 1);
          uint64_t v26 = v27 + 1;
          if (!v12) {
            goto LABEL_46;
          }
          __break(1u);
LABEL_28:
          uint64_t v24 = OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredNonUUIDNameRecords;
          uint64_t v28 = *(void *)&v36[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredNonUUIDNameRecords];
          BOOL v12 = __OFADD__(v28, 1);
          uint64_t v26 = v28 + 1;
          if (!v12) {
            goto LABEL_46;
          }
          __break(1u);
LABEL_31:
          uint64_t v29 = *(void *)&a1[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords];
          uint64_t v24 = OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numProcessedEvents;
          uint64_t v30 = *(void *)&v36[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numProcessedEvents];
          BOOL v12 = __OFADD__(v30, v29);
          uint64_t v26 = v30 + v29;
          if (!v12) {
            goto LABEL_46;
          }
          __break(1u);
LABEL_34:
          uint64_t v24 = OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredNoCreationDateRecords;
          uint64_t v31 = *(void *)&v36[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredNoCreationDateRecords];
          BOOL v12 = __OFADD__(v31, 1);
          uint64_t v26 = v31 + 1;
          if (!v12) {
            goto LABEL_46;
          }
          __break(1u);
LABEL_37:
          uint64_t v32 = *(void *)&a1[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents];
          uint64_t v24 = OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numEventsSavedToCache;
          uint64_t v33 = *(void *)&v36[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numEventsSavedToCache];
          BOOL v12 = __OFADD__(v33, v32);
          uint64_t v26 = v33 + v32;
          if (!v12) {
            goto LABEL_46;
          }
          __break(1u);
LABEL_40:
          uint64_t v19 = &OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingEncounteredError;
LABEL_41:
          v36[*v19] = 1;
          objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_logSubmitter), sel_submitLogEvent_, v36);
          os_unfair_lock_lock(v5);

          os_unfair_lock_unlock(v5);
          uint64_t v20 = v36;
          goto LABEL_47;
        case 8:
          goto LABEL_25;
        case 9:
          goto LABEL_28;
        case 10:
          goto LABEL_31;
        case 11:
          goto LABEL_34;
        case 12:
        case 17:
          goto LABEL_47;
        case 13:
          goto LABEL_37;
        case 14:
          goto LABEL_40;
        case 15:
          uint64_t v24 = OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredNoCreationDateRecords;
          uint64_t v34 = *(void *)&v36[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredNoCreationDateRecords];
          BOOL v12 = __OFADD__(v34, 1);
          uint64_t v26 = v34 + 1;
          if (!v12) {
            goto LABEL_46;
          }
          __break(1u);
LABEL_45:
          uint64_t v24 = OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredExpiredRecords;
          uint64_t v35 = *(void *)&v36[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredExpiredRecords];
          BOOL v12 = __OFADD__(v35, 1);
          uint64_t v26 = v35 + 1;
          if (v12) {
            goto LABEL_51;
          }
LABEL_46:
          *(void *)&v36[v24] = v26;
LABEL_47:

          break;
        case 16:
          goto LABEL_45;
        default:
          objc_msgSend(a1, sel_startTime);
          uint64_t v20 = v36;
          uint64_t v21 = &v36[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_queryStartTime];
          *(void *)uint64_t v21 = v22;
          v21[8] = 0;
          goto LABEL_47;
      }
    }
  }
  else
  {
    os_unfair_lock_unlock(v5);
  }
}

void sub_2523E4C1C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6)
{
  uint64_t v7 = v6;
  uint64_t v30 = a5;
  uint64_t v31 = a1;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  int v29 = a2 & 1;
  uint64_t v9 = sub_25247A540();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  BOOL v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25247A4B0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v26 - v18;
  LOBYTE(a6) = *a6;
  sub_2523D918C(v7 + OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_features, (uint64_t)v33);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v20(v19, v27, v13);
  v20(v17, v28, v13);
  char v32 = (char)a6;
  id v21 = objc_allocWithZone((Class)type metadata accessor for QueryLogEvent());
  id v22 = sub_25246E1FC(v33, v29, (uint64_t)v19, (uint64_t)v17, v30, &v32);
  uint64_t v23 = *(void *)(v7 + OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_pendingQueryLogEvents);
  os_unfair_lock_lock((os_unfair_lock_t)(v23 + 24));
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v31, v9);
  id v24 = v22;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v33[0] = *(void *)(v23 + 16);
  *(void *)(v23 + 16) = 0x8000000000000000;
  sub_25246E940((uint64_t)v24, (uint64_t)v12, isUniquelyReferenced_nonNull_native);
  *(void *)(v23 + 16) = v33[0];
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  os_unfair_lock_unlock((os_unfair_lock_t)(v23 + 24));
}

id sub_2523E4EDC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QueryMetricsObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for QueryMetricsObserver()
{
  return self;
}

uint64_t sub_2523E4FA0(uint64_t a1)
{
  objc_super v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_252460DBC(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *objc_super v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_252462790();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_25247A540();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_2523E5098(v4, v7);
  *objc_super v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_2523E5098(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v37 = a2 + 64;
    unint64_t result = sub_25247AF00();
    uint64_t v12 = v37;
    if ((*(void *)(v37 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v35 = (result + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v34 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v36 = v13;
      uint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v34(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        sub_2523E5354();
        uint64_t v18 = sub_25247A7F0();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v35)
        {
          if (v19 >= v35 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t result = v22 + v15 * a1;
            unint64_t v23 = v22 + v17 + v15;
            if (v15 * a1 < v17 || result >= v23)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v25 = *(void *)(a2 + 56);
            uint64_t v26 = (void *)(v25 + 8 * a1);
            uint64_t v27 = (void *)(v25 + 8 * v10);
            uint64_t v12 = v37;
            if (a1 != v10 || (a1 = v10, v26 >= v27 + 1))
            {
              *uint64_t v26 = *v27;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v35 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v37;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v28 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v29 = *v28;
    uint64_t v30 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v28 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v28;
    uint64_t v29 = (-1 << a1) - 1;
  }
  *uint64_t v28 = v30 & v29;
  uint64_t v31 = *(void *)(a2 + 16);
  BOOL v32 = __OFSUB__(v31, 1);
  uint64_t v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2523E5354()
{
  unint64_t result = qword_269C04808;
  if (!qword_269C04808)
  {
    sub_25247A540();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04808);
  }
  return result;
}

id sub_2523E53AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v17[3] = a4;
  v17[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  MetricsObserver = (objc_class *)type metadata accessor for QueryMetricsObserver();
  uint64_t v11 = (char *)objc_allocWithZone(MetricsObserver);
  uint64_t v12 = OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_pendingQueryLogEvents;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04990);
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 24) = 0;
  *(void *)(v13 + 16) = MEMORY[0x263F8EE80];
  *(void *)&v11[v12] = v13;
  *(void *)&v11[OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_logEventDispatcher] = 0;
  sub_2523D918C((uint64_t)v17, (uint64_t)&v11[OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_features]);
  *(void *)&v11[OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_logSubmitter] = a2;
  v16.receiver = v11;
  v16.super_class = MetricsObserver;
  id v14 = objc_msgSendSuper2(&v16, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v14;
}

void sub_2523E54B4(void *a1, uint64_t a2)
{
  *(void *)(a2 + OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_logEventDispatcher) = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04980);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_25247EAD0;
  *(void *)(v4 + 32) = type metadata accessor for CloudKitQueryLogEvent();
  *(void *)(v4 + 40) = type metadata accessor for EventsAsyncSequenceLogEvent();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04988);
  id v5 = (id)sub_25247A9E0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_addObserver_forEventClasses_, a2, v5);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t static HMVCommands.createFakeEvents(date:homeIdentifier:count:uploadOnly:saveOnly:skipZoneCreation:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6)
{
  *(unsigned char *)(v6 + 66) = a6;
  *(unsigned char *)(v6 + 65) = a5;
  *(unsigned char *)(v6 + 64) = a4;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 16) = a1;
  return MEMORY[0x270FA2498](sub_2523E5628, 0, 0);
}

uint64_t sub_2523E5628()
{
  char v1 = *(unsigned char *)(v0 + 66);
  char v2 = *(unsigned char *)(v0 + 65);
  char v3 = *(unsigned char *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 40) = v5;
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v5 + 32) = v4;
  *(unsigned char *)(v5 + 40) = v3;
  *(unsigned char *)(v5 + 41) = v2;
  *(unsigned char *)(v5 + 42) = v1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C04588 + dword_269C04588);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_2523E5728;
  return v8((uint64_t)v8, (uint64_t)sub_2523E59D4, v5);
}

uint64_t sub_2523E5728()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    char v2 = sub_2523E5844;
  }
  else
  {
    swift_task_dealloc();
    char v2 = sub_2523D3C30;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2523E5844()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_2523E58A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8)
{
  id v14 = (void *)sub_25247A440();
  uint64_t v15 = (void *)sub_25247A4E0();
  aBlock[4] = sub_2523E5C00;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25244C4D8;
  aBlock[3] = &block_descriptor_1;
  objc_super v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilCreateFakeEventsWithDate_homeIdentifier_count_uploadOnly_saveOnly_skipZoneCreation_reply_, v14, v15, a5, a6 & 1, a7 & 1, a8 & 1, v16);
  _Block_release(v16);
}

void sub_2523E59D4(void *a1, uint64_t a2)
{
  sub_2523E58A8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), *(unsigned char *)(v2 + 41), *(unsigned char *)(v2 + 42));
}

void sub_2523E59EC(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    uint64_t v8 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_2523D380C;
    v9[6] = v7;
    id v10 = a1;
    swift_retain();
    id v11 = a1;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C049A8, (uint64_t)v9);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v12 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    void v13[4] = a2;
    v13[5] = sub_2523D3704;
    v13[6] = 0;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C04570, (uint64_t)v13);
    swift_release();
  }
}

void sub_2523E5C00(void *a1)
{
  sub_2523E59EC(a1, v1);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_2523E5C24()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2523E5C60@<X0>(uint64_t a1@<X0>, int **a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *i@<X8>, char a10, char a11, char a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17, unint64_t a18)
{
  uint64_t v19 = a1;
  id v21 = *a2;
  uint64_t v22 = a2[1];
  unint64_t v23 = a2[2];
  if (!a6 || (uint64_t v24 = a6, !sub_2523EDEEC(3, a6)))
  {
    uint64_t v62 = 0;
    goto LABEL_43;
  }
  uint64_t v59 = v23;
  uint64_t v60 = v22;
  uint64_t v61 = v21;
  uint64_t v63 = i;
  uint64_t v78 = MEMORY[0x263F8EE88];
  uint64_t v70 = v24 + 56;
  uint64_t v25 = 1 << *(unsigned char *)(v24 + 32);
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  else {
    uint64_t v26 = -1;
  }
  unint64_t v27 = v26 & *(void *)(v24 + 56);
  int64_t v72 = (unint64_t)(v25 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  uint64_t v29 = 0;
  uint64_t v30 = byte_270299288;
  uint64_t v31 = qword_25247EC60;
  if (!v27) {
    goto LABEL_10;
  }
  while (2)
  {
    while (1)
    {
      unint64_t v32 = __clz(__rbit64(v27));
      v27 &= v27 - 1;
      unint64_t v33 = v32 | (v29 << 6);
LABEL_28:
      uint64_t v37 = *(unsigned __int8 *)(*(void *)(v24 + 48) + v33);
      if (v37 >= 3) {
        break;
      }
      id v21 = (int *)&v78;
      uint64_t result = sub_2524372A0(&v75, v37);
      if (!v27) {
        goto LABEL_10;
      }
    }
    unint64_t v73 = v27;
    uint64_t v74 = v29;
    uint64_t v18 = 0;
    uint64_t v38 = v78;
    for (i = (void *)(v78 + 56); ; i = (void *)(v38 + 56))
    {
      while (1)
      {
        uint64_t v39 = byte_270299288[v18++ + 32];
        sub_25247B350();
        uint64_t v40 = qword_25247EC60[v39];
        sub_25247B360();
        id v21 = (int *)&v75;
        uint64_t result = sub_25247B390();
        uint64_t v41 = -1 << *(unsigned char *)(v38 + 32);
        unint64_t v42 = result & ~v41;
        if (((*(void *)((char *)i + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42) & 1) == 0) {
          goto LABEL_39;
        }
        uint64_t v43 = *(void *)(v38 + 48);
        if (qword_25247EC60[*(char *)(v43 + v42)] != v40) {
          break;
        }
LABEL_32:
        if (v18 == 3) {
          goto LABEL_8;
        }
      }
      uint64_t v44 = ~v41;
      while (1)
      {
        unint64_t v42 = (v42 + 1) & v44;
        if (((*(void *)((char *)i + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42) & 1) == 0) {
          break;
        }
        if (qword_25247EC60[*(char *)(v43 + v42)] == v40) {
          goto LABEL_32;
        }
      }
LABEL_39:
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v75 = v38;
      id v21 = (int *)&v75;
      sub_252437A70(v39, v42, isUniquelyReferenced_nonNull_native);
      uint64_t v38 = v75;
      uint64_t result = swift_bridgeObjectRelease();
      if (v18 == 3) {
        break;
      }
    }
LABEL_8:
    uint64_t v78 = v38;
    uint64_t v24 = a6;
    unint64_t v27 = v73;
    uint64_t v29 = v74;
    if (v73) {
      continue;
    }
    break;
  }
LABEL_10:
  int64_t v34 = v29 + 1;
  if (__OFADD__(v29, 1))
  {
    __break(1u);
    goto LABEL_57;
  }
  if (v34 >= v72) {
    goto LABEL_42;
  }
  unint64_t v35 = *(void *)(v70 + 8 * v34);
  ++v29;
  if (v35) {
    goto LABEL_27;
  }
  uint64_t v29 = v34 + 1;
  if (v34 + 1 >= v72) {
    goto LABEL_42;
  }
  unint64_t v35 = *(void *)(v70 + 8 * v29);
  if (v35) {
    goto LABEL_27;
  }
  uint64_t v29 = v34 + 2;
  if (v34 + 2 >= v72) {
    goto LABEL_42;
  }
  unint64_t v35 = *(void *)(v70 + 8 * v29);
  if (v35) {
    goto LABEL_27;
  }
  uint64_t v29 = v34 + 3;
  if (v34 + 3 >= v72) {
    goto LABEL_42;
  }
  unint64_t v35 = *(void *)(v70 + 8 * v29);
  if (v35) {
    goto LABEL_27;
  }
  uint64_t v29 = v34 + 4;
  if (v34 + 4 >= v72) {
    goto LABEL_42;
  }
  unint64_t v35 = *(void *)(v70 + 8 * v29);
  if (v35) {
    goto LABEL_27;
  }
  int64_t v36 = v34 + 5;
  if (v36 >= v72)
  {
LABEL_42:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v62 = v78;
    i = v63;
    uint64_t v19 = a1;
    uint64_t v22 = v60;
    id v21 = v61;
    unint64_t v23 = v59;
LABEL_43:
    LOBYTE(v74) = a17;
    uint64_t v46 = a15;
    sub_2523D918C(v19, (uint64_t)i);
    i[5] = v21;
    i[6] = v22;
    i[7] = v23;
    id v21 = (int *)type metadata accessor for EventQuery.Configuration(0);
    uint64_t v47 = (char *)i + v21[6];
    uint64_t v24 = sub_25247A540();
    uint64_t v30 = *(char **)(v24 - 8);
    uint64_t v48 = (void (*)(char *, uint64_t, uint64_t))*((void *)v30 + 2);
    v48(v47, a3, v24);
    v48((char *)i + v21[7], a4, v24);
    uint64_t v49 = (char *)i + v21[8];
    uint64_t v29 = sub_25247A030();
    uint64_t v31 = *(void **)(v29 - 8);
    id v50 = v49;
    uint64_t v51 = i;
    ((void (*)(char *, uint64_t, uint64_t))v31[2])(v50, a5, v29);
    *(void *)((char *)i + v21[9]) = a6;
    *(void *)((char *)i + v21[10]) = v62;
    sub_2523D6F54(a7, (uint64_t)i + v21[11], (uint64_t *)&unk_269C047F0);
    os_log_type_t v52 = (char *)i + v21[12];
    *(void *)os_log_type_t v52 = a8;
    v52[8] = a10 & 1;
    *((unsigned char *)i + v21[13]) = a11 & 1;
    *((unsigned char *)i + v21[14]) = a12 & 1;
    BOOL v53 = (char *)i + v21[15];
    if (a14) {
      a13 = 17;
    }
    *(void *)BOOL v53 = a13;
    v53[8] = 0;
    unint64_t v27 = a18;
    uint64_t v18 = a16;
    if (a15)
    {
      sub_2523D6FB8(a7, (uint64_t *)&unk_269C047F0);
      ((void (*)(uint64_t, uint64_t))v31[1])(a5, v29);
      uint64_t v55 = (void (*)(uint64_t, uint64_t))*((void *)v30 + 1);
      v55(a4, v24);
      v55(a3, v24);
      __swift_destroy_boxed_opaque_existential_1(a1);
LABEL_50:
      *(void *)((char *)v51 + v21[16]) = v46;
      uint64_t v58 = 24;
      if ((v74 & 1) == 0) {
        uint64_t v58 = v18;
      }
      *(void *)((char *)v51 + v21[17]) = v58;
      if (*(void *)(v27 + 24))
      {
        sub_2523DFC24((long long *)v27, (uint64_t)&v75);
      }
      else
      {
        uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04C18);
        uint64_t v77 = sub_252408314(&qword_269C04C20, &qword_269C04C18);
      }
      return sub_2523DFC24(&v75, (uint64_t)v51 + v21[18]);
    }
    if (qword_269C04350 == -1)
    {
LABEL_49:
      uint64_t v56 = off_269C056F0;
      sub_2523D6FB8(a7, (uint64_t *)&unk_269C047F0);
      ((void (*)(uint64_t, uint64_t))v31[1])(a5, v29);
      unint64_t v57 = (void (*)(uint64_t, uint64_t))*((void *)v30 + 1);
      v57(a4, v24);
      v57(a3, v24);
      __swift_destroy_boxed_opaque_existential_1(a1);
      uint64_t v46 = v56[2];
      swift_unknownObjectRetain();
      uint64_t v51 = i;
      goto LABEL_50;
    }
LABEL_57:
    swift_once();
    goto LABEL_49;
  }
  unint64_t v35 = *(void *)(v70 + 8 * v36);
  if (v35)
  {
    uint64_t v29 = v36;
LABEL_27:
    unint64_t v27 = (v35 - 1) & v35;
    unint64_t v33 = __clz(__rbit64(v35)) + (v29 << 6);
    goto LABEL_28;
  }
  while (1)
  {
    uint64_t v29 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v29 >= v72) {
      goto LABEL_42;
    }
    unint64_t v35 = *(void *)(v70 + 8 * v29);
    ++v36;
    if (v35) {
      goto LABEL_27;
    }
  }
  __break(1u);
  return result;
}

void sub_2523E630C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_25247A4B0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - v7;
  uint64_t v9 = type metadata accessor for EventQuery.Configuration(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v41 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v42 = (uint64_t)&v39 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v43 = (uint64_t)&v39 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v39 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v39 - v19;
  uint64_t v21 = a1[6];
  if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v22 = (void *)a1[5];
    uint64_t v39 = (void *)a1[7];
    id v23 = v22;
    if (objc_msgSend(v23, sel_scope) == (id)2)
    {
      sub_2523DFE9C(v22, v21, v39);
    }
    else
    {
      id v24 = objc_msgSend(v23, sel_scope);
      sub_2523DFE9C(v22, v21, v39);
      if (v24 != (id)3)
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
  }
  sub_2523FDEEC((uint64_t)a1, (uint64_t)v20, type metadata accessor for EventQuery.Configuration);
  sub_25247A010();
  sub_25247A1D0();
  double v26 = v25;
  unint64_t v27 = *(void (**)(char *, uint64_t))(v4 + 8);
  v27(v8, v3);
  sub_2523FE440((uint64_t)v20, type metadata accessor for EventQuery.Configuration);
  if (v26 < 0.0)
  {
    __break(1u);
    goto LABEL_18;
  }
  sub_2523FDEEC((uint64_t)a1, (uint64_t)v20, type metadata accessor for EventQuery.Configuration);
  sub_252479FF0();
  uint64_t v28 = v44;
  sub_25247A010();
  sub_2523FE554(&qword_269C04B08, MEMORY[0x263F07490]);
  char v29 = sub_25247A810();
  v27(v28, v3);
  v27(v8, v3);
  sub_2523FE440((uint64_t)v20, type metadata accessor for EventQuery.Configuration);
  if (v29)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_2523FDEEC((uint64_t)a1, (uint64_t)v18, type metadata accessor for EventQuery.Configuration);
  uint64_t v30 = *(void *)&v18[*(int *)(v9 + 36)];
  uint64_t v31 = v43;
  sub_2523FDEEC((uint64_t)v18, v43, type metadata accessor for EventQuery.Configuration);
  if (!v30)
  {
LABEL_11:
    sub_2523FE440((uint64_t)v18, type metadata accessor for EventQuery.Configuration);
    sub_2523FE440(v31, type metadata accessor for EventQuery.Configuration);
    goto LABEL_12;
  }
  uint64_t v32 = *(void *)(v31 + *(int *)(v9 + 36));
  if (!v32)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v33 = *(void *)(v32 + 16);
  sub_2523FE440((uint64_t)v18, type metadata accessor for EventQuery.Configuration);
  sub_2523FE440(v31, type metadata accessor for EventQuery.Configuration);
  if (!v33)
  {
    __break(1u);
    goto LABEL_11;
  }
LABEL_12:
  uint64_t v34 = v42;
  sub_2523FDEEC((uint64_t)a1, v42, type metadata accessor for EventQuery.Configuration);
  int v35 = *(unsigned __int8 *)(v34 + *(int *)(v9 + 48) + 8);
  uint64_t v36 = v41;
  sub_2523FDEEC(v34, v41, type metadata accessor for EventQuery.Configuration);
  if (v35 == 1)
  {
    sub_2523FE440(v36, type metadata accessor for EventQuery.Configuration);
    sub_2523FE440(v34, type metadata accessor for EventQuery.Configuration);
LABEL_16:
    sub_252407EEC((uint64_t)a1, v40, type metadata accessor for EventQuery.Configuration);
    return;
  }
  uint64_t v37 = v36 + *(int *)(v9 + 48);
  if ((*(unsigned char *)(v37 + 8) & 1) == 0)
  {
    uint64_t v38 = *(void *)v37;
    sub_2523FE440(v36, type metadata accessor for EventQuery.Configuration);
    sub_2523FE440(v34, type metadata accessor for EventQuery.Configuration);
    if (v38 >= 1) {
      goto LABEL_16;
    }
    goto LABEL_19;
  }
LABEL_22:
  __break(1u);
}

uint64_t sub_2523E6844@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_25247A6A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C049F0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v37 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v32 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v32 - v18;
  type metadata accessor for LoggedObjectPropertyKey();
  uint64_t inited = (const void *)swift_initStaticObject();
  *(void *)&v38[0] = &type metadata for HMVCommands;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A08);
  uint64_t v21 = (void *)sub_25247B2A0();
  uint64_t v33 = inited;
  id v22 = objc_getAssociatedObject(v21, inited);
  swift_unknownObjectRelease();
  if (v22)
  {
    sub_25247AED0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v38, 0, sizeof(v38));
  }
  int v35 = v11;
  sub_252408294((uint64_t)v38, (uint64_t)v39, &qword_269C04A00);
  uint64_t v36 = a1;
  uint64_t v32 = v5;
  if (v39[3])
  {
    int v23 = swift_dynamicCast();
    id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v24(v19, v23 ^ 1u, 1, v2);
  }
  else
  {
    sub_2523D6FB8((uint64_t)v39, &qword_269C04A00);
    id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v24(v19, 1, 1, v2);
  }
  sub_2523D6F54((uint64_t)v19, (uint64_t)v17, &qword_269C049F0);
  double v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  int v26 = v25(v17, 1, v2);
  sub_2523D6FB8((uint64_t)v17, &qword_269C049F0);
  uint64_t v27 = (uint64_t)v37;
  if (v26 == 1)
  {
    v39[0] = &type metadata for HMVCommands;
    sub_25247A890();
    sub_25247A690();
    v24(v14, 0, 1, v2);
    sub_2523FDE84((uint64_t)v14, (uint64_t)v19);
    v39[0] = &type metadata for HMVCommands;
    uint64_t v28 = (void *)sub_25247B2A0();
    uint64_t v29 = (uint64_t)v35;
    sub_2523D6F54((uint64_t)v19, (uint64_t)v35, &qword_269C049F0);
    if (v25((char *)v29, 1, v2) == 1)
    {
      uint64_t v30 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v32, v29, v2);
      uint64_t v30 = (void *)sub_25247B2A0();
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v29, v2);
    }
    objc_setAssociatedObject(v28, v33, v30, (void *)0x301);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  sub_2523D6F54((uint64_t)v19, v27, &qword_269C049F0);
  uint64_t result = v25((char *)v27, 1, v2);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v36, v27, v2);
    return sub_2523D6FB8((uint64_t)v19, &qword_269C049F0);
  }
  return result;
}

uint64_t sub_2523E6CD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_25247A6A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C049F0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v39 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v37 = (uint64_t)&v32 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v32 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v19 = type metadata accessor for EncryptionKeyQuery();
  type metadata accessor for LoggedObjectPropertyKey();
  uint64_t inited = (const void *)swift_initStaticObject();
  *(void *)&v40[0] = v19;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C046A8);
  uint64_t v21 = (void *)sub_25247B2A0();
  uint64_t v34 = inited;
  id v22 = objc_getAssociatedObject(v21, inited);
  swift_unknownObjectRelease();
  if (v22)
  {
    sub_25247AED0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v40, 0, sizeof(v40));
  }
  sub_252408294((uint64_t)v40, (uint64_t)v41, &qword_269C04A00);
  uint64_t v38 = a1;
  uint64_t v33 = v5;
  uint64_t v36 = v19;
  if (v41[3])
  {
    int v23 = swift_dynamicCast();
    id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v24(v18, v23 ^ 1u, 1, v2);
  }
  else
  {
    sub_2523D6FB8((uint64_t)v41, &qword_269C04A00);
    id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v24(v18, 1, 1, v2);
  }
  sub_2523D6F54((uint64_t)v18, (uint64_t)v16, &qword_269C049F0);
  double v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  int v26 = v25(v16, 1, v2);
  sub_2523D6FB8((uint64_t)v16, &qword_269C049F0);
  if (v26 == 1)
  {
    sub_25247A690();
    v24(v13, 0, 1, v2);
    sub_2523FDE84((uint64_t)v13, (uint64_t)v18);
    v41[0] = v36;
    uint64_t v27 = (void *)sub_25247B2A0();
    uint64_t v28 = v37;
    sub_2523D6F54((uint64_t)v18, v37, &qword_269C049F0);
    if (v25((char *)v28, 1, v2) == 1)
    {
      uint64_t v29 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v33, v28, v2);
      uint64_t v29 = (void *)sub_25247B2A0();
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v28, v2);
    }
    objc_setAssociatedObject(v27, v34, v29, (void *)0x301);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t v30 = v39;
  sub_2523D6F54((uint64_t)v18, v39, &qword_269C049F0);
  uint64_t result = v25((char *)v30, 1, v2);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v38, v30, v2);
    return sub_2523D6FB8((uint64_t)v18, &qword_269C049F0);
  }
  return result;
}

uint64_t sub_2523E7170@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_25247A6A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C049F0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v37 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v32 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v32 - v18;
  type metadata accessor for LoggedObjectPropertyKey();
  uint64_t inited = (const void *)swift_initStaticObject();
  *(void *)&v38[0] = &type metadata for SharedZoneLookup;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04C08);
  uint64_t v21 = (void *)sub_25247B2A0();
  uint64_t v33 = inited;
  id v22 = objc_getAssociatedObject(v21, inited);
  swift_unknownObjectRelease();
  if (v22)
  {
    sub_25247AED0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v38, 0, sizeof(v38));
  }
  uint64_t v35 = v11;
  sub_252408294((uint64_t)v38, (uint64_t)v39, &qword_269C04A00);
  uint64_t v36 = a1;
  uint64_t v32 = v5;
  if (v39[3])
  {
    int v23 = swift_dynamicCast();
    id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v24(v19, v23 ^ 1u, 1, v2);
  }
  else
  {
    sub_2523D6FB8((uint64_t)v39, &qword_269C04A00);
    id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v24(v19, 1, 1, v2);
  }
  sub_2523D6F54((uint64_t)v19, (uint64_t)v17, &qword_269C049F0);
  double v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  int v26 = v25(v17, 1, v2);
  sub_2523D6FB8((uint64_t)v17, &qword_269C049F0);
  uint64_t v27 = (uint64_t)v37;
  if (v26 == 1)
  {
    v39[0] = &type metadata for SharedZoneLookup;
    sub_25247A890();
    sub_25247A690();
    v24(v14, 0, 1, v2);
    sub_2523FDE84((uint64_t)v14, (uint64_t)v19);
    v39[0] = &type metadata for SharedZoneLookup;
    uint64_t v28 = (void *)sub_25247B2A0();
    uint64_t v29 = (uint64_t)v35;
    sub_2523D6F54((uint64_t)v19, (uint64_t)v35, &qword_269C049F0);
    if (v25((char *)v29, 1, v2) == 1)
    {
      uint64_t v30 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v32, v29, v2);
      uint64_t v30 = (void *)sub_25247B2A0();
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v29, v2);
    }
    objc_setAssociatedObject(v28, v33, v30, (void *)0x301);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  sub_2523D6F54((uint64_t)v19, v27, &qword_269C049F0);
  uint64_t result = v25((char *)v27, 1, v2);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v36, v27, v2);
    return sub_2523D6FB8((uint64_t)v19, &qword_269C049F0);
  }
  return result;
}

uint64_t sub_2523E7604@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_25247A6A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C049F0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v39 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v37 = (uint64_t)&v32 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v32 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v19 = type metadata accessor for EventQuery(0);
  type metadata accessor for LoggedObjectPropertyKey();
  uint64_t inited = (const void *)swift_initStaticObject();
  *(void *)&v40[0] = v19;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04C10);
  uint64_t v21 = (void *)sub_25247B2A0();
  uint64_t v34 = inited;
  id v22 = objc_getAssociatedObject(v21, inited);
  swift_unknownObjectRelease();
  if (v22)
  {
    sub_25247AED0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v40, 0, sizeof(v40));
  }
  sub_252408294((uint64_t)v40, (uint64_t)v41, &qword_269C04A00);
  uint64_t v38 = a1;
  uint64_t v33 = v5;
  uint64_t v36 = v19;
  if (v41[3])
  {
    int v23 = swift_dynamicCast();
    id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v24(v18, v23 ^ 1u, 1, v2);
  }
  else
  {
    sub_2523D6FB8((uint64_t)v41, &qword_269C04A00);
    id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v24(v18, 1, 1, v2);
  }
  sub_2523D6F54((uint64_t)v18, (uint64_t)v16, &qword_269C049F0);
  double v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  int v26 = v25(v16, 1, v2);
  sub_2523D6FB8((uint64_t)v16, &qword_269C049F0);
  if (v26 == 1)
  {
    sub_25247A690();
    v24(v13, 0, 1, v2);
    sub_2523FDE84((uint64_t)v13, (uint64_t)v18);
    v41[0] = v36;
    uint64_t v27 = (void *)sub_25247B2A0();
    uint64_t v28 = v37;
    sub_2523D6F54((uint64_t)v18, v37, &qword_269C049F0);
    if (v25((char *)v28, 1, v2) == 1)
    {
      uint64_t v29 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v33, v28, v2);
      uint64_t v29 = (void *)sub_25247B2A0();
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v28, v2);
    }
    objc_setAssociatedObject(v27, v34, v29, (void *)0x301);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t v30 = v39;
  sub_2523D6F54((uint64_t)v18, v39, &qword_269C049F0);
  uint64_t result = v25((char *)v30, 1, v2);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v38, v30, v2);
    return sub_2523D6FB8((uint64_t)v18, &qword_269C049F0);
  }
  return result;
}

uint64_t sub_2523E7A8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_25247A6A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C049F0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v37 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v32 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v32 - v18;
  type metadata accessor for LoggedObjectPropertyKey();
  uint64_t inited = (const void *)swift_initStaticObject();
  *(void *)&v38[0] = &type metadata for EventManager;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A20);
  uint64_t v21 = (void *)sub_25247B2A0();
  uint64_t v33 = inited;
  id v22 = objc_getAssociatedObject(v21, inited);
  swift_unknownObjectRelease();
  if (v22)
  {
    sub_25247AED0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v38, 0, sizeof(v38));
  }
  uint64_t v35 = v11;
  sub_252408294((uint64_t)v38, (uint64_t)v39, &qword_269C04A00);
  uint64_t v36 = a1;
  uint64_t v32 = v5;
  if (v39[3])
  {
    int v23 = swift_dynamicCast();
    id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v24(v19, v23 ^ 1u, 1, v2);
  }
  else
  {
    sub_2523D6FB8((uint64_t)v39, &qword_269C04A00);
    id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v24(v19, 1, 1, v2);
  }
  sub_2523D6F54((uint64_t)v19, (uint64_t)v17, &qword_269C049F0);
  double v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  int v26 = v25(v17, 1, v2);
  sub_2523D6FB8((uint64_t)v17, &qword_269C049F0);
  uint64_t v27 = (uint64_t)v37;
  if (v26 == 1)
  {
    v39[0] = &type metadata for EventManager;
    sub_25247A890();
    sub_25247A690();
    v24(v14, 0, 1, v2);
    sub_2523FDE84((uint64_t)v14, (uint64_t)v19);
    v39[0] = &type metadata for EventManager;
    uint64_t v28 = (void *)sub_25247B2A0();
    uint64_t v29 = (uint64_t)v35;
    sub_2523D6F54((uint64_t)v19, (uint64_t)v35, &qword_269C049F0);
    if (v25((char *)v29, 1, v2) == 1)
    {
      uint64_t v30 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v32, v29, v2);
      uint64_t v30 = (void *)sub_25247B2A0();
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v29, v2);
    }
    objc_setAssociatedObject(v28, v33, v30, (void *)0x301);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  sub_2523D6F54((uint64_t)v19, v27, &qword_269C049F0);
  uint64_t result = v25((char *)v27, 1, v2);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v36, v27, v2);
    return sub_2523D6FB8((uint64_t)v19, &qword_269C049F0);
  }
  return result;
}

uint64_t sub_2523E7F20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_25247A6A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C049F0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v37 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v32 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v32 - v18;
  type metadata accessor for LoggedObjectPropertyKey();
  uint64_t inited = (const void *)swift_initStaticObject();
  *(void *)&v38[0] = &type metadata for CloudKitExporter;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A10);
  uint64_t v21 = (void *)sub_25247B2A0();
  uint64_t v33 = inited;
  id v22 = objc_getAssociatedObject(v21, inited);
  swift_unknownObjectRelease();
  if (v22)
  {
    sub_25247AED0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v38, 0, sizeof(v38));
  }
  uint64_t v35 = v11;
  sub_252408294((uint64_t)v38, (uint64_t)v39, &qword_269C04A00);
  uint64_t v36 = a1;
  uint64_t v32 = v5;
  if (v39[3])
  {
    int v23 = swift_dynamicCast();
    id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v24(v19, v23 ^ 1u, 1, v2);
  }
  else
  {
    sub_2523D6FB8((uint64_t)v39, &qword_269C04A00);
    id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v24(v19, 1, 1, v2);
  }
  sub_2523D6F54((uint64_t)v19, (uint64_t)v17, &qword_269C049F0);
  double v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  int v26 = v25(v17, 1, v2);
  sub_2523D6FB8((uint64_t)v17, &qword_269C049F0);
  uint64_t v27 = (uint64_t)v37;
  if (v26 == 1)
  {
    v39[0] = &type metadata for CloudKitExporter;
    sub_25247A890();
    sub_25247A690();
    v24(v14, 0, 1, v2);
    sub_2523FDE84((uint64_t)v14, (uint64_t)v19);
    v39[0] = &type metadata for CloudKitExporter;
    uint64_t v28 = (void *)sub_25247B2A0();
    uint64_t v29 = (uint64_t)v35;
    sub_2523D6F54((uint64_t)v19, (uint64_t)v35, &qword_269C049F0);
    if (v25((char *)v29, 1, v2) == 1)
    {
      uint64_t v30 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v32, v29, v2);
      uint64_t v30 = (void *)sub_25247B2A0();
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v29, v2);
    }
    objc_setAssociatedObject(v28, v33, v30, (void *)0x301);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  sub_2523D6F54((uint64_t)v19, v27, &qword_269C049F0);
  uint64_t result = v25((char *)v27, 1, v2);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v36, v27, v2);
    return sub_2523D6FB8((uint64_t)v19, &qword_269C049F0);
  }
  return result;
}

uint64_t sub_2523E83B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_25247A6A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C049F0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v39 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v37 = (uint64_t)&v32 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v32 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v19 = type metadata accessor for CKQueryAsyncSequence();
  type metadata accessor for LoggedObjectPropertyKey();
  uint64_t inited = (const void *)swift_initStaticObject();
  *(void *)&v40[0] = v19;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C049F8);
  uint64_t v21 = (void *)sub_25247B2A0();
  uint64_t v34 = inited;
  id v22 = objc_getAssociatedObject(v21, inited);
  swift_unknownObjectRelease();
  if (v22)
  {
    sub_25247AED0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v40, 0, sizeof(v40));
  }
  sub_252408294((uint64_t)v40, (uint64_t)v41, &qword_269C04A00);
  uint64_t v38 = a1;
  uint64_t v33 = v5;
  uint64_t v36 = v19;
  if (v41[3])
  {
    int v23 = swift_dynamicCast();
    id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v24(v18, v23 ^ 1u, 1, v2);
  }
  else
  {
    sub_2523D6FB8((uint64_t)v41, &qword_269C04A00);
    id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v24(v18, 1, 1, v2);
  }
  sub_2523D6F54((uint64_t)v18, (uint64_t)v16, &qword_269C049F0);
  double v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  int v26 = v25(v16, 1, v2);
  sub_2523D6FB8((uint64_t)v16, &qword_269C049F0);
  if (v26 == 1)
  {
    sub_25247A690();
    v24(v13, 0, 1, v2);
    sub_2523FDE84((uint64_t)v13, (uint64_t)v18);
    v41[0] = v36;
    uint64_t v27 = (void *)sub_25247B2A0();
    uint64_t v28 = v37;
    sub_2523D6F54((uint64_t)v18, v37, &qword_269C049F0);
    if (v25((char *)v28, 1, v2) == 1)
    {
      uint64_t v29 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v33, v28, v2);
      uint64_t v29 = (void *)sub_25247B2A0();
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v28, v2);
    }
    objc_setAssociatedObject(v27, v34, v29, (void *)0x301);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t v30 = v39;
  sub_2523D6F54((uint64_t)v18, v39, &qword_269C049F0);
  uint64_t result = v25((char *)v30, 1, v2);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v38, v30, v2);
    return sub_2523D6FB8((uint64_t)v18, &qword_269C049F0);
  }
  return result;
}

uint64_t sub_2523E8840(uint64_t a1, uint64_t a2)
{
  return sub_2523E8858(a1, a2, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);
}

uint64_t sub_2523E8858(uint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v4 = *(void *)(a2 + 16);
    if ((uint64_t)v4 >= result) {
      unint64_t v5 = result;
    }
    else {
      unint64_t v5 = *(void *)(a2 + 16);
    }
    if (result) {
      unint64_t v6 = v5;
    }
    else {
      unint64_t v6 = 0;
    }
    if (v4 >= v6)
    {
      a3(0);
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2523E88F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return MEMORY[0x270FA2498](sub_2523E8918, 0, 0);
}

uint64_t sub_2523E8918()
{
  uint64_t v20 = v0;
  uint64_t v2 = *(void **)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  if (v1 < 0)
  {
    unint64_t v6 = *(void **)(v0 + 56);
    if (v1) {
      uint64_t v7 = &selRef_sharedCloudDatabase;
    }
    else {
      uint64_t v7 = &selRef_privateCloudDatabase;
    }
    uint64_t v8 = *v7;
    id v9 = v2;
    id v10 = v6;
    *(void *)(v0 + 80) = [v9 v8];
    uint64_t v11 = *(void **)(v0 + 56);
    if (v6)
    {
      id v12 = *(id *)(v0 + 56);
    }
    else
    {
      id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFD780]), sel_init);
      uint64_t v19 = v12;
      sub_25244A9F0(&v19, (uint64_t)v9);
    }
    *(void *)(v0 + 88) = v11;
    *(void *)(v0 + 96) = v12;
    uint64_t v13 = swift_task_alloc();
    *(void *)(v0 + 104) = v13;
    *(_OWORD *)(v13 + 16) = *(_OWORD *)(v0 + 24);
    id v14 = v11;
    id v15 = v12;
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v16;
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04790);
    *uint64_t v16 = v0;
    v16[1] = sub_2523E8D68;
    return MEMORY[0x270EE35A0](v0 + 16, 0, v12, &unk_269C04C38, v13, v17);
  }
  else
  {
    uint64_t v18 = (uint64_t (*)(uint64_t, id))(*(void *)(v0 + 24) + **(int **)(v0 + 24));
    id v3 = v2;
    unint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v4;
    *unint64_t v4 = v0;
    v4[1] = sub_2523E8B80;
    return v18(v0 + 16, v3);
  }
}

uint64_t sub_2523E8B80()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2523E8D00;
  }
  else {
    uint64_t v2 = sub_2523E8C94;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2523E8C94()
{
  sub_2523DFE9C(*(void **)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56));
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_2523E8D00()
{
  sub_2523DFE9C(*(void **)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2523E8D68()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_2523E8F10;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_2523E8E8C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2523E8E8C()
{
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t v2 = *(void **)(v0 + 80);
  uint64_t v3 = *(void **)(v0 + 40);

  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(v4);
}

uint64_t sub_2523E8F10()
{
  uint64_t v1 = (void *)v0[12];
  uint64_t v3 = (void *)v0[10];
  uint64_t v2 = (void *)v0[11];
  uint64_t v4 = (void *)v0[5];

  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_2523E8FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x270FA2498](sub_2523E8FCC, 0, 0);
}

uint64_t sub_2523E8FCC()
{
  uint64_t v22 = v0;
  uint64_t v2 = *(void **)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  if (v1 < 0)
  {
    uint64_t v7 = *(void **)(v0 + 56);
    if (v1) {
      uint64_t v8 = &selRef_sharedCloudDatabase;
    }
    else {
      uint64_t v8 = &selRef_privateCloudDatabase;
    }
    id v9 = *v8;
    id v10 = v2;
    id v11 = v7;
    *(void *)(v0 + 80) = [v10 v9];
    id v12 = *(void **)(v0 + 56);
    if (v7)
    {
      id v13 = *(id *)(v0 + 56);
    }
    else
    {
      id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFD780]), sel_init);
      uint64_t v21 = v13;
      sub_25244A9F0(&v21, (uint64_t)v10);
    }
    *(void *)(v0 + 88) = v12;
    *(void *)(v0 + 96) = v13;
    uint64_t v14 = swift_task_alloc();
    *(void *)(v0 + 104) = v14;
    *(_OWORD *)(v14 + 16) = *(_OWORD *)(v0 + 24);
    id v15 = v12;
    id v16 = v13;
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_2523E9398;
    uint64_t v18 = *(void *)(v0 + 16);
    uint64_t v19 = MEMORY[0x263F8EE60] + 8;
    return MEMORY[0x270EE35A0](v18, 0, v13, &unk_269C04A88, v14, v19);
  }
  else
  {
    uint64_t v20 = (uint64_t (*)(uint64_t, id))(*(void *)(v0 + 24) + **(int **)(v0 + 24));
    id v3 = v2;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_2523E921C;
    uint64_t v5 = *(void *)(v0 + 16);
    return v20(v5, v3);
  }
}

uint64_t sub_2523E921C()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2523E8D00;
  }
  else {
    uint64_t v2 = sub_2523E9330;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2523E9330()
{
  sub_2523DFE9C(*(void **)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2523E9398()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_2523E8F10;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_2523E94BC;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2523E94BC()
{
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t v2 = *(void **)(v0 + 80);
  uint64_t v3 = *(void **)(v0 + 40);

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

id EventQuery.init(features:homeIdentifier:dateInterval:categories:accessoryIdentifier:resultsLimit:dateIntervalStartOpen:dateIntervalEndOpen:scope:qualityOfService:operationGroup:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, int a8@<W7>, uint64_t a9@<X8>, char a10, unsigned __int8 *a11, uint64_t a12, void *a13)
{
  int v64 = a8;
  LODWORD(v57) = a7;
  uint64_t v66 = a4;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v63 = &v50[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = sub_25247A030();
  uint64_t v67 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v61 = &v50[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v72 = sub_25247A540();
  uint64_t v65 = *(void *)(v72 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v72);
  uint64_t v60 = &v50[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v23);
  uint64_t v59 = &v50[-v25];
  uint64_t v26 = type metadata accessor for EventQuery.Configuration(0);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v58 = &v50[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v27);
  uint64_t v62 = &v50[-v29];
  uint64_t v30 = *a11;
  uint64_t v70 = a5;
  uint64_t v71 = a3;
  uint64_t v68 = a6;
  uint64_t v69 = a9;
  if (!a13) {
    goto LABEL_5;
  }
  uint64_t v54 = v21;
  uint64_t v31 = v30;
  id result = objc_msgSend(a13, sel_defaultConfiguration);
  if (result)
  {
    uint64_t v33 = result;
    uint64_t v34 = (int *)objc_msgSend(result, sel_container);

    uint64_t v30 = v31;
    uint64_t v21 = v54;
    if (v34)
    {
      uint64_t v35 = v54;
      uint64_t v36 = a2;
      goto LABEL_8;
    }
LABEL_5:
    if (qword_269C04338 != -1) {
      swift_once();
    }
    uint64_t v35 = v21;
    uint64_t v36 = a2;
    uint64_t v34 = (int *)(id)qword_269C053D0;
    if (!a13)
    {
      uint64_t v37 = a1;
      id v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFD780]), sel_init);
      uint64_t v76 = v38;
      sub_2523E9B38(&v76, (uint64_t)v34);
      goto LABEL_10;
    }
LABEL_8:
    uint64_t v37 = a1;
    id v38 = a13;
LABEL_10:
    uint64_t v54 = a12;
    int v51 = v57 & 1;
    uint64_t v56 = v37;
    sub_2523D918C(v37, (uint64_t)&v76);
    v75[0] = v34;
    v75[1] = (int *)(v30 | 0x8000000000000000);
    v75[2] = (int *)v38;
    id v57 = a13;
    BOOL v53 = v34;
    id v52 = v38;
    uint64_t v39 = (uint64_t)v59;
    sub_25247A530();
    uint64_t v40 = v65;
    uint64_t v41 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v65 + 16);
    uint64_t v42 = (uint64_t)v60;
    uint64_t v55 = v36;
    v41(v60, v36, v72);
    uint64_t v43 = v67;
    uint64_t v44 = (uint64_t)v61;
    uint64_t v45 = v71;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v67 + 16))(v61, v71, v35);
    uint64_t v46 = v70;
    uint64_t v47 = v63;
    sub_2523D6F54(v70, (uint64_t)v63, (uint64_t *)&unk_269C047F0);
    uint64_t v74 = 0;
    memset(v73, 0, sizeof(v73));
    uint64_t v48 = v62;
    sub_2523E5C60((uint64_t)&v76, v75, v39, v42, v44, v66, (uint64_t)v47, v68, v62, v51, v64 & 1, a10 & 1, v54, 0, 0, 0, 1, (unint64_t)v73);
    uint64_t v49 = v58;
    sub_2523FDEEC((uint64_t)v48, (uint64_t)v58, type metadata accessor for EventQuery.Configuration);
    sub_2523E630C(v49, v69);

    sub_2523D6FB8(v46, (uint64_t *)&unk_269C047F0);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v45, v35);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v55, v72);
    __swift_destroy_boxed_opaque_existential_1(v56);
    return (id)sub_2523FE440((uint64_t)v48, type metadata accessor for EventQuery.Configuration);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for EventQuery.Configuration(uint64_t a1)
{
  return sub_2523FC8A8(a1, (uint64_t *)&unk_269C049D8);
}

void sub_2523E9B38(void **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  v13[2] = 0;
  v13[3] = 0xE000000000000000;
  v13[0] = 47;
  v13[1] = 0xE100000000000000;
  v12[2] = v13;
  uint64_t v4 = (void *)sub_25242DB30(0x7FFFFFFFFFFFFFFFLL, 1, sub_2523E13A0, (uint64_t)v12, 0xD00000000000001ELL, 0x800000025247C6E0);
  if (v4[2])
  {
    uint64_t v5 = v4[4];
    uint64_t v6 = v4[5];
    uint64_t v7 = v4[6];
    uint64_t v8 = v4[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    MEMORY[0x2533B4B70](v5, v6, v7, v8);
    sub_25247A920();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25247A920();
    v13[0] = type metadata accessor for EventQuery(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C04C10);
    sub_25247A890();
    sub_25247A920();
    swift_bridgeObjectRelease();
    id v9 = (void *)sub_25247A830();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setName_, v9);

    objc_msgSend(v3, sel_setExpectedSendSize_, 1);
    id v10 = objc_msgSend(v3, sel_defaultConfiguration);
    if (v10)
    {
      id v11 = v10;
      objc_msgSend(v10, sel_setContainer_, a2);

      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    __break(1u);
  }
  __break(1u);
}

uint64_t EventQuery.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventQuery.Configuration(0) + 28);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EventQuery.dateInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventQuery.Configuration(0) + 32);
  uint64_t v4 = sub_25247A030();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EventQuery.queryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventQuery.Configuration(0) + 24);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EventQuery.categories.getter()
{
  type metadata accessor for EventQuery.Configuration(0);

  return swift_bridgeObjectRetain();
}

uint64_t EventQuery.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EventQuery.Configuration(0);
  return sub_2523D6F54(v1 + *(int *)(v3 + 44), a1, (uint64_t *)&unk_269C047F0);
}

uint64_t EventQuery.resultsLimit.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EventQuery.Configuration(0) + 48));
}

uint64_t EventQuery.dateIntervalStartOpen.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventQuery.Configuration(0) + 52));
}

uint64_t EventQuery.dateIntervalEndOpen.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventQuery.Configuration(0) + 56));
}

void EventQuery.scope.getter(char *a1@<X8>)
{
  uint64_t v3 = v1[6];
  if (v3 < 0)
  {
    char v8 = v3 & 1;
    goto LABEL_7;
  }
  uint64_t v4 = (void *)v1[5];
  uint64_t v5 = (void *)v1[7];
  sub_2523DFD9C(v4, v1[6], v5);
  id v6 = v4;
  id v7 = objc_msgSend(v6, sel_scope);
  if (v7 == (id)2)
  {
    sub_2523DFE9C(v4, v3, v5);
    sub_2523DFE9C(v4, v3, v5);
    char v8 = 0;
LABEL_7:
    *a1 = v8;
    return;
  }
  if (v7 == (id)3)
  {
    sub_2523DFE9C(v4, v3, v5);
    sub_2523DFE9C(v4, v3, v5);
    char v8 = 1;
    goto LABEL_7;
  }
  sub_25247AF40();
  sub_25247A920();
  objc_msgSend(v6, (SEL)&off_265373818);
  type metadata accessor for Scope(0);
  sub_25247B080();
  sub_25247B0B0();
  __break(1u);
}

uint64_t EventQuery.start()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C049B8);
  uint64_t v1 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_25247A4B0();
  uint64_t v4 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25247A6A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2523E7604((uint64_t)v10);
  id v11 = sub_25247A680();
  os_log_type_t v12 = sub_25247AD30();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl(&dword_2523CF000, v11, v12, "[Tamis] Beginning event query", v13, 2u);
    MEMORY[0x2533B5DC0](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v14 = sub_25247A4A0();
  MEMORY[0x270FA5388](v14);
  *(&v16 - 2) = v16;
  *(&v16 - 1) = (uint64_t)v6;
  type metadata accessor for SomeEvent();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F680], v18);
  sub_25247AC30();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v17);
}

uint64_t sub_2523EA3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = sub_25247A4B0();
  uint64_t v4 = *(void *)(v28 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v23 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05230);
  uint64_t v6 = *(void *)(v25 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v25);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EventQuery(0);
  uint64_t v24 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v24 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  id v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25247AB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_2523FDEEC(v26, (uint64_t)v11, type metadata accessor for EventQuery);
  uint64_t v16 = a1;
  uint64_t v17 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v16, v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v28);
  unint64_t v18 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v19 = (v10 + *(unsigned __int8 *)(v6 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v20 = (v7 + *(unsigned __int8 *)(v4 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = 0;
  *(void *)(v21 + 24) = 0;
  sub_252407EEC((uint64_t)v11, v21 + v18, type metadata accessor for EventQuery);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v21 + v19, v8, v17);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v21 + v20, v23, v28);
  sub_25240BCB0((uint64_t)v14, (uint64_t)&unk_269C04A40, v21);
  return swift_release();
}

uint64_t sub_2523EA730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[24] = a5;
  v6[25] = a6;
  v6[23] = a4;
  uint64_t v7 = sub_25247AAF0();
  v6[26] = v7;
  v6[27] = *(void *)(v7 - 8);
  v6[28] = swift_task_alloc();
  v6[29] = swift_task_alloc();
  uint64_t v8 = sub_25247A4B0();
  v6[30] = v8;
  v6[31] = *(void *)(v8 - 8);
  v6[32] = swift_task_alloc();
  v6[33] = swift_task_alloc();
  v6[34] = swift_task_alloc();
  v6[35] = type metadata accessor for EventQuery.Configuration(0);
  v6[36] = swift_task_alloc();
  type metadata accessor for EventQuery(0);
  v6[37] = swift_task_alloc();
  v6[38] = swift_task_alloc();
  v6[39] = swift_task_alloc();
  v6[40] = swift_task_alloc();
  v6[41] = swift_task_alloc();
  uint64_t v9 = sub_25247A6A0();
  v6[42] = v9;
  v6[43] = *(void *)(v9 - 8);
  v6[44] = swift_task_alloc();
  v6[45] = swift_task_alloc();
  v6[46] = swift_task_alloc();
  v6[47] = swift_task_alloc();
  uint64_t v10 = sub_25247A540();
  v6[48] = v10;
  v6[49] = *(void *)(v10 - 8);
  v6[50] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2523EA9EC, 0, 0);
}

uint64_t sub_2523EA9EC()
{
  uint64_t v46 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 384);
  uint64_t v5 = *(void *)(v0 + 280);
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v38 = *(void *)(v0 + 376);
  uint64_t v7 = *(void **)(v6 + *(int *)(v5 + 64));
  uint64_t v40 = *(void *)(v0 + 328);
  uint64_t v42 = *(void *)(v0 + 320);
  *(void *)(v0 + 408) = v7;
  uint64_t v8 = *(int *)(v5 + 24);
  *(_DWORD *)(v0 + 512) = v8;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  *(void *)(v0 + 416) = v9;
  *(void *)(v0 + 424) = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v3, v6 + v8, v4);
  uint64_t v10 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
  *(void *)(v0 + 432) = v10;
  id v11 = objc_allocWithZone(v10);
  v9((uint64_t)&v11[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v3, v4);
  v11[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 0;
  *(void *)&v11[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
  *(void *)&v11[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
  *(void *)&v11[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
  *(void *)(v0 + 16) = v11;
  *(void *)(v0 + 24) = v10;
  id v12 = objc_msgSendSuper2((objc_super *)(v0 + 16), sel_init);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v0 + 440) = v13;
  *(void *)(v0 + 448) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v3, v4);
  objc_msgSend(v7, sel_submitLogEvent_, v12);

  sub_2523E7604(v38);
  sub_2523FDEEC(v6, v40, type metadata accessor for EventQuery);
  sub_2523FDEEC(v6, v42, type metadata accessor for EventQuery);
  uint64_t v14 = sub_25247A680();
  os_log_type_t v15 = sub_25247AD60();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v39 = *(void *)(v0 + 344);
    uint64_t v16 = *(void *)(v0 + 328);
    uint64_t v41 = *(void *)(v1 + 336);
    uint64_t v43 = *(void *)(v1 + 376);
    uint64_t v17 = *(void *)(v1 + 320);
    uint64_t v36 = *(void *)(v1 + 288);
    uint64_t v18 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v45 = v37;
    *(_DWORD *)uint64_t v18 = 136446466;
    sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
    uint64_t v19 = sub_25247B200();
    *(void *)(v1 + 168) = sub_25245DA98(v19, v20, &v45);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    sub_2523FE440(v16, type metadata accessor for EventQuery);
    *(_WORD *)(v18 + 12) = 2082;
    sub_2523FDEEC(v17, v36, type metadata accessor for EventQuery.Configuration);
    uint64_t v21 = sub_25247A890();
    *(void *)(v1 + 176) = sub_25245DA98(v21, v22, &v45);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    sub_2523FE440(v17, type metadata accessor for EventQuery);
    _os_log_impl(&dword_2523CF000, v14, v15, "[%{public}s] Beginning query: %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v37, -1, -1);
    MEMORY[0x2533B5DC0](v18, -1, -1);

    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v23(v43, v41);
  }
  else
  {
    uint64_t v24 = *(void *)(v0 + 376);
    uint64_t v25 = *(void *)(v0 + 336);
    uint64_t v26 = *(void *)(v1 + 344);
    uint64_t v27 = *(void *)(v1 + 320);
    sub_2523FE440(*(void *)(v1 + 328), type metadata accessor for EventQuery);
    sub_2523FE440(v27, type metadata accessor for EventQuery);

    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v23(v24, v25);
  }
  *(void *)(v1 + 456) = v23;
  uint64_t v28 = swift_task_alloc();
  long long v29 = *(_OWORD *)(v1 + 184);
  uint64_t v30 = *(void **)(v1 + 184);
  uint64_t v31 = (void *)v30[5];
  *(void *)(v1 + 464) = v31;
  uint64_t v32 = v30[6];
  *(void *)(v1 + 472) = v32;
  uint64_t v33 = (void *)v30[7];
  *(void *)(v1 + 480) = v33;
  *(void *)(v1 + 488) = v28;
  *(_OWORD *)(v28 + 16) = v29;
  sub_2523DFD9C(v31, v32, v33);
  uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C04A58
                                                                                     + dword_269C04A58);
  uint64_t v34 = (void *)swift_task_alloc();
  *(void *)(v1 + 496) = v34;
  void *v34 = v1;
  v34[1] = sub_2523EAEEC;
  return v44((uint64_t)v44, (uint64_t)&unk_269C04A50, v28, (uint64_t)v31, v32, (uint64_t)v33);
}

uint64_t sub_2523EAEEC()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 480);
  uint64_t v3 = *(void *)(*(void *)v1 + 472);
  uint64_t v4 = *(void **)(*(void *)v1 + 464);
  *(void *)(*(void *)v1 + 504) = v0;
  swift_task_dealloc();
  sub_2523DFE9C(v4, v3, v2);
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = sub_2523EB554;
  }
  else {
    uint64_t v5 = sub_2523EB078;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_2523EB078()
{
  uint64_t v39 = v0;
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v4 = *(void *)(v0 + 248);
  uint64_t v5 = *(void *)(v0 + 200);
  uint64_t v6 = *(void *)(v0 + 184);
  sub_2523E7604(*(void *)(v0 + 368));
  sub_2523FDEEC(v6, v1, type metadata accessor for EventQuery);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
  uint64_t v7 = sub_25247A680();
  os_log_type_t v8 = sub_25247AD60();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v36 = *(void *)(v0 + 368);
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v35 = *(void *)(v0 + 336);
    uint64_t v9 = *(void *)(v0 + 312);
    uint64_t v10 = *(void *)(v0 + 272);
    uint64_t v11 = *(void *)(v0 + 248);
    uint64_t v34 = *(void *)(v0 + 240);
    uint64_t v12 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v38 = v33;
    *(_DWORD *)uint64_t v12 = 136446466;
    sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
    uint64_t v13 = sub_25247B200();
    *(void *)(v0 + 152) = sub_25245DA98(v13, v14, &v38);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    sub_2523FE440(v9, type metadata accessor for EventQuery);
    *(_WORD *)(v12 + 12) = 2082;
    uint64_t v15 = Date.formattedElapsedTimeInterval.getter();
    *(void *)(v0 + 160) = sub_25245DA98(v15, v16, &v38);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v34);
    _os_log_impl(&dword_2523CF000, v7, v8, "[%{public}s] Finished after %{public}s seconds", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v33, -1, -1);
    MEMORY[0x2533B5DC0](v12, -1, -1);

    v37(v36, v35);
  }
  else
  {
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v18 = *(void *)(v0 + 368);
    uint64_t v19 = *(void *)(v0 + 336);
    uint64_t v20 = *(void *)(v0 + 272);
    uint64_t v21 = *(void *)(v0 + 240);
    uint64_t v22 = *(void *)(v0 + 248);
    sub_2523FE440(*(void *)(v0 + 312), type metadata accessor for EventQuery);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);

    v17(v18, v19);
  }
  uint64_t v23 = *(void (**)(unsigned char *, uint64_t))(v0 + 440);
  uint64_t v24 = *(objc_class **)(v0 + 432);
  uint64_t v25 = *(void **)(v0 + 408);
  uint64_t v26 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v0 + 416);
  uint64_t v27 = *(unsigned char **)(v0 + 400);
  uint64_t v28 = *(void *)(v0 + 384);
  v26(v27, (unsigned char *)(*(void *)(v0 + 184) + *(int *)(v0 + 512)), v28);
  long long v29 = objc_allocWithZone(v24);
  v26(&v29[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v27, v28);
  v29[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 1;
  *(void *)&v29[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
  *(void *)&v29[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
  *(void *)&v29[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
  *(void *)(v0 + 32) = v29;
  *(void *)(v0 + 40) = v24;
  id v30 = objc_msgSendSuper2((objc_super *)(v0 + 32), sel_init);
  v23(v27, v28);
  objc_msgSend(v25, sel_submitLogEvent_, v30);

  *(void *)(v0 + 144) = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05230);
  sub_25247ABF0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_2523EB554()
{
  uint64_t v99 = v0;
  uint64_t v1 = *(void **)(v0 + 504);
  *(void *)(v0 + 136) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A60);
  char v3 = swift_dynamicCast();
  uint64_t v4 = *(void **)(v0 + 504);
  uint64_t v6 = *(void *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 248);
  if (v3)
  {
    uint64_t v7 = *(void *)(v0 + 360);
    id v90 = *(id *)(v0 + 240);
    uint64_t v95 = *(void *)(v0 + 264);
    uint64_t v9 = *(void *)(v0 + 224);
    uint64_t v8 = *(void *)(v0 + 232);
    uint64_t v11 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v85 = *(void *)(v0 + 304);
    uint64_t v88 = *(void *)(v0 + 200);
    uint64_t v12 = *(void *)(v0 + 184);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v8, v9, v11);
    sub_2523E7604(v7);
    sub_2523FDEEC(v12, v85, type metadata accessor for EventQuery);
    (*(void (**)(uint64_t, uint64_t, id))(v5 + 16))(v95, v88, v90);
    uint64_t v13 = sub_25247A680();
    os_log_type_t v14 = sub_25247AD60();
    BOOL v15 = os_log_type_enabled(v13, v14);
    unint64_t v16 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    if (v15)
    {
      id v91 = *(id *)(v0 + 336);
      uint64_t v96 = *(void *)(v0 + 360);
      uint64_t v17 = *(void *)(v0 + 304);
      uint64_t v79 = *(void *)(v0 + 264);
      uint64_t v18 = *(void *)(v0 + 248);
      uint64_t v83 = *(void *)(v0 + 240);
      uint64_t v86 = *(void (**)(uint64_t, id))(v0 + 456);
      uint64_t v19 = swift_slowAlloc();
      uint64_t v81 = swift_slowAlloc();
      uint64_t v98 = v81;
      *(_DWORD *)uint64_t v19 = 136446466;
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v20 = sub_25247B200();
      *(void *)(v0 + 120) = sub_25245DA98(v20, v21, &v98);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523FE440(v17, type metadata accessor for EventQuery);
      *(_WORD *)(v19 + 12) = 2082;
      uint64_t v22 = Date.formattedElapsedTimeInterval.getter();
      *(void *)(v0 + 128) = sub_25245DA98(v22, v23, &v98);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v79, v83);
      _os_log_impl(&dword_2523CF000, v13, v14, "[%{public}s] Canceled after %{public}s seconds", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v81, -1, -1);
      MEMORY[0x2533B5DC0](v19, -1, -1);

      v86(v96, v91);
    }
    else
    {
      uint64_t v46 = *(void *)(v0 + 360);
      uint64_t v47 = *(void *)(v0 + 336);
      uint64_t v48 = *(void *)(v0 + 264);
      uint64_t v49 = *(void *)(v0 + 240);
      uint64_t v50 = *(void *)(v0 + 248);
      sub_2523FE440(*(void *)(v0 + 304), type metadata accessor for EventQuery);
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);

      v16(v46, v47);
    }
    int v51 = *(objc_class **)(v0 + 432);
    uint64_t v87 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
    id v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 416);
    uint64_t v54 = *(void *)(v0 + 400);
    BOOL v53 = *(void **)(v0 + 408);
    uint64_t v55 = *(void *)(v0 + 384);
    id v93 = *(id *)(v0 + 232);
    uint64_t v56 = *(void *)(v0 + 208);
    uint64_t v57 = *(void *)(v0 + 216);
    v52(v54, *(void *)(v0 + 184) + *(int *)(v0 + 512), v55);
    uint64_t v58 = objc_allocWithZone(v51);
    v52((uint64_t)&v58[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v54, v55);
    v58[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 2;
    *(void *)&v58[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
    *(void *)&v58[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
    *(void *)&v58[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
    *(void *)(v0 + 64) = v58;
    *(void *)(v0 + 72) = v51;
    id v59 = objc_msgSendSuper2((objc_super *)(v0 + 64), sel_init);
    v87(v54, v55);
    objc_msgSend(v53, sel_submitLogEvent_, v59);

    sub_2523FE554(&qword_269C047E8, MEMORY[0x263F8F488]);
    uint64_t v60 = swift_allocError();
    (*(void (**)(uint64_t, id, uint64_t))(v57 + 16))(v61, v93, v56);
    *(void *)(v0 + 112) = v60;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05230);
    sub_25247ABF0();
    (*(void (**)(id, uint64_t))(v57 + 8))(v93, v56);
  }
  else
  {
    uint64_t v24 = *(void *)(v0 + 352);
    uint64_t v25 = *(void *)(v0 + 296);
    uint64_t v26 = *(void *)(v0 + 256);
    uint64_t v27 = *(void *)(v0 + 200);
    uint64_t v28 = *(void *)(v0 + 184);

    sub_2523E7604(v24);
    sub_2523FDEEC(v28, v25, type metadata accessor for EventQuery);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v26, v27, v6);
    id v29 = v4;
    id v30 = v4;
    uint64_t v31 = sub_25247A680();
    os_log_type_t v32 = sub_25247AD40();
    BOOL v33 = os_log_type_enabled(v31, v32);
    uint64_t v34 = *(void **)(v0 + 504);
    uint64_t v97 = *(void (**)(id, uint64_t))(v0 + 456);
    if (v33)
    {
      uint64_t v89 = *(void *)(v0 + 336);
      id v92 = *(id *)(v0 + 352);
      uint64_t v35 = *(void *)(v0 + 296);
      uint64_t v36 = *(void *)(v0 + 248);
      uint64_t v78 = *(void *)(v0 + 256);
      uint64_t v80 = *(void *)(v0 + 240);
      uint64_t v37 = swift_slowAlloc();
      uint64_t v82 = (void *)swift_slowAlloc();
      uint64_t v84 = swift_slowAlloc();
      uint64_t v98 = v84;
      *(_DWORD *)uint64_t v37 = 136446722;
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v38 = sub_25247B200();
      *(void *)(v0 + 80) = sub_25245DA98(v38, v39, &v98);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523FE440(v35, type metadata accessor for EventQuery);
      *(_WORD *)(v37 + 12) = 2082;
      uint64_t v40 = Date.formattedElapsedTimeInterval.getter();
      *(void *)(v0 + 88) = sub_25245DA98(v40, v41, &v98);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v78, v80);
      *(_WORD *)(v37 + 22) = 2114;
      id v42 = v34;
      uint64_t v43 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 96) = v43;
      sub_25247AEB0();
      *uint64_t v82 = v43;

      _os_log_impl(&dword_2523CF000, v31, v32, "[%{public}s] Failed after %{public}s seconds: %{public}@", (uint8_t *)v37, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v82, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v84, -1, -1);
      MEMORY[0x2533B5DC0](v37, -1, -1);

      uint64_t v44 = v89;
      id v45 = v92;
    }
    else
    {
      uint64_t v62 = *(void **)(v0 + 352);
      uint64_t v63 = *(void *)(v0 + 336);
      uint64_t v65 = *(void *)(v0 + 248);
      uint64_t v64 = *(void *)(v0 + 256);
      uint64_t v66 = *(void *)(v0 + 240);
      sub_2523FE440(*(void *)(v0 + 296), type metadata accessor for EventQuery);
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v64, v66);

      id v45 = v62;
      uint64_t v44 = v63;
    }
    v97(v45, v44);
    uint64_t v67 = *(void *)(v0 + 504);
    uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
    uint64_t v69 = *(objc_class **)(v0 + 432);
    uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 416);
    uint64_t v71 = *(void *)(v0 + 400);
    id v94 = *(id *)(v0 + 408);
    uint64_t v72 = *(void *)(v0 + 384);
    v70(v71, *(void *)(v0 + 184) + *(int *)(v0 + 512), v72);
    unint64_t v73 = objc_allocWithZone(v69);
    v70((uint64_t)&v73[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v71, v72);
    v73[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 14;
    *(void *)&v73[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
    *(void *)&v73[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
    *(void *)&v73[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
    *(void *)(v0 + 48) = v73;
    *(void *)(v0 + 56) = v69;
    id v74 = objc_msgSendSuper2((objc_super *)(v0 + 48), sel_init);
    v68(v71, v72);
    long long v75 = (void *)sub_25247A110();
    objc_msgSend(v94, sel_submitLogEvent_error_, v74, v75);

    *(void *)(v0 + 104) = v67;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05230);
    sub_25247ABF0();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v76 = *(uint64_t (**)(void))(v0 + 8);
  return v76();
}

uint64_t sub_2523EC010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_2523D3928;
  return sub_2523EC0BC(a2, a4);
}

uint64_t sub_2523EC0BC(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  uint64_t v4 = sub_25247A6A0();
  v3[14] = v4;
  v3[15] = *(void *)(v4 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  uint64_t v5 = sub_25247A540();
  v3[19] = v5;
  v3[20] = *(void *)(v5 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A98);
  v3[24] = v6;
  v3[25] = *(void *)(v6 - 8);
  v3[26] = swift_task_alloc();
  uint64_t v7 = sub_25247A030();
  v3[27] = v7;
  v3[28] = *(void *)(v7 - 8);
  v3[29] = swift_task_alloc();
  type metadata accessor for EventQuery(0);
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2523EC324, 0, 0);
}

uint64_t sub_2523EC324()
{
  sub_25247ABC0();
  uint64_t v1 = v0[13];
  uint64_t v2 = type metadata accessor for EventQuery.Configuration(0);
  v0[34] = v2;
  uint64_t v3 = v1 + *(int *)(v2 + 28);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_269C04FD8 + dword_269C04FD8);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[35] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_2523EC4E4;
  uint64_t v5 = v0[11];
  return v7(v5, v3, 1);
}

uint64_t sub_2523EC4E4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[36] = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v3[37] = v6;
    *uint64_t v6 = v3;
    v6[1] = sub_2523EC704;
    uint64_t v7 = v3[11];
    return sub_2523EDFF4(v7);
  }
}

uint64_t sub_2523EC704(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 304) = a1;
  *(void *)(v3 + 312) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_2523EDC90;
  }
  else {
    uint64_t v4 = sub_2523EC818;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2523EC818()
{
  uint64_t v68 = v0;
  uint64_t v1 = *(void *)(v0 + 304);
  sub_2523FDEEC(*(void *)(v0 + 104), *(void *)(v0 + 264), type metadata accessor for EventQuery);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 304);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 264);
    uint64_t v3 = *(void *)(v0 + 272);
    uint64_t v5 = *(void *)(v0 + 216);
    uint64_t v6 = *(void *)(v0 + 224);
    uint64_t v8 = *(void *)(v0 + 192);
    uint64_t v7 = *(void *)(v0 + 200);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C04AA8);
    unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_25247E5A0;
    unint64_t v10 = v2 + v9;
    uint64_t v11 = *(int *)(v8 + 48);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16))(v10, v4 + *(int *)(v3 + 32), v5);
    *(void *)(v10 + v11) = MEMORY[0x263F8EE78];
  }
  *(void *)(v0 + 320) = v2;
  sub_2523FE440(*(void *)(v0 + 264), type metadata accessor for EventQuery);
  uint64_t v12 = *(void *)(v2 + 16);
  *(void *)(v0 + 328) = v12;
  if (v12)
  {
    uint64_t v13 = *(void *)(v0 + 272);
    uint64_t v15 = *(void *)(v0 + 192);
    uint64_t v14 = *(void *)(v0 + 200);
    uint64_t v16 = *(void *)(v0 + 160);
    uint64_t v64 = *(void *)(v0 + 104);
    int v17 = *(_DWORD *)(v14 + 80);
    *(_DWORD *)(v0 + 424) = v17;
    *(_DWORD *)(v0 + 428) = *(_DWORD *)(v13 + 48);
    *(void *)(v0 + 336) = *(void *)(v14 + 72);
    *(void *)(v0 + 344) = 0;
    *(void *)(v0 + 352) = 0;
    uint64_t v18 = *(void *)(v0 + 224);
    uint64_t v19 = *(void *)(v0 + 232);
    uint64_t v21 = *(void *)(v0 + 208);
    uint64_t v20 = *(void *)(v0 + 216);
    uint64_t v22 = *(void *)(v0 + 184);
    uint64_t v59 = *(void *)(v0 + 256);
    uint64_t v60 = *(void *)(v0 + 176);
    uint64_t v23 = *(void *)(v0 + 144);
    uint64_t v62 = *(void *)(v0 + 152);
    sub_2523D6F54(*(void *)(v0 + 320) + ((v17 + 32) & ~(unint64_t)v17), v21, &qword_269C04A98);
    uint64_t v66 = *(void *)(v21 + *(int *)(v15 + 48));
    *(void *)(v0 + 360) = v66;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v19, v21, v20);
    sub_25247A530();
    sub_2523E7604(v23);
    sub_2523FDEEC(v64, v59, type metadata accessor for EventQuery);
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    *(void *)(v0 + 368) = v24;
    *(void *)(v0 + 376) = (v16 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v24(v60, v22, v62);
    swift_bridgeObjectRetain_n();
    uint64_t v25 = sub_25247A680();
    os_log_type_t v26 = sub_25247AD20();
    int v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v58 = *(void *)(v0 + 328);
      int v71 = v27;
      uint64_t v28 = *(void *)(v0 + 256);
      uint64_t v29 = *(void *)(v0 + 176);
      uint64_t v30 = *(void *)(v0 + 152);
      uint64_t v31 = *(void *)(v0 + 160);
      uint64_t v61 = *(void *)(v0 + 120);
      uint64_t v63 = *(void *)(v0 + 112);
      uint64_t v65 = *(void *)(v0 + 144);
      uint64_t v32 = swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      uint64_t v67 = v57;
      *(_DWORD *)uint64_t v32 = 136446978;
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v33 = sub_25247B200();
      *(void *)(v0 + 56) = sub_25245DA98(v33, v34, &v67);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523FE440(v28, type metadata accessor for EventQuery);
      *(_WORD *)(v32 + 12) = 2082;
      uint64_t v35 = sub_25247B200();
      *(void *)(v0 + 64) = sub_25245DA98(v35, v36, &v67);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v37(v29, v30);
      *(_WORD *)(v32 + 22) = 2048;
      *(void *)(v0 + 72) = 1;
      sub_25247AEB0();
      *(_WORD *)(v32 + 32) = 2048;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 80) = v58;
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2523CF000, v25, (os_log_type_t)v71, "[%{public}s] Beginning subquery %{public}s (%ld of %ld)", (uint8_t *)v32, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v57, -1, -1);
      MEMORY[0x2533B5DC0](v32, -1, -1);

      uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
      v38(v65, v63);
    }
    else
    {
      uint64_t v41 = *(void *)(v0 + 256);
      uint64_t v42 = *(void *)(v0 + 176);
      uint64_t v43 = *(void *)(v0 + 152);
      uint64_t v44 = *(void *)(v0 + 160);
      uint64_t v45 = *(void *)(v0 + 144);
      uint64_t v46 = *(void *)(v0 + 112);
      uint64_t v47 = *(void *)(v0 + 120);
      swift_bridgeObjectRelease();
      sub_2523FE440(v41, type metadata accessor for EventQuery);
      uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v37(v42, v43);
      swift_bridgeObjectRelease();

      uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
      v38(v45, v46);
    }
    *(void *)(v0 + 384) = v38;
    *(void *)(v0 + 392) = v37;
    uint64_t v48 = *(void *)(v0 + 104) + *(int *)(v0 + 428);
    uint64_t v49 = *(void *)v48;
    char v50 = *(unsigned char *)(v48 + 8);
    BOOL v51 = *(void *)(v0 + 328) == 1;
    id v52 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v52;
    void *v52 = v0;
    v52[1] = sub_2523ECEB4;
    uint64_t v53 = *(void *)(v0 + 288);
    uint64_t v54 = *(void *)(v0 + 232);
    uint64_t v55 = *(void *)(v0 + 184);
    uint64_t v56 = *(void *)(v0 + 88);
    uint64_t v72 = *(void *)(v0 + 96);
    BOOL v70 = v51;
    return sub_2523EF874(v56, v53, v55, v54, v66, v49, v50, 1);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
    return v39();
  }
}

uint64_t sub_2523ECEB4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 408) = a1;
  *(void *)(v3 + 416) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_2523EDD9C;
  }
  else
  {
    uint64_t v4 = sub_2523ED004;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2523ED004()
{
  uint64_t v123 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 368);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + 104);
  sub_2523E7604(*(void *)(v0 + 136));
  sub_2523FDEEC(v6, v2, type metadata accessor for EventQuery);
  v1(v4, v3, v5);
  uint64_t v7 = sub_25247A680();
  os_log_type_t v8 = sub_25247AD20();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v104 = *(void *)(v0 + 408);
    uint64_t v98 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
    uint64_t v118 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 384);
    uint64_t v9 = *(void *)(v0 + 248);
    uint64_t v93 = *(void *)(v0 + 168);
    os_log_t log = v7;
    uint64_t v10 = *(void *)(v0 + 152);
    uint64_t v110 = *(void *)(v0 + 112);
    uint64_t v115 = *(void *)(v0 + 136);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v100 = swift_slowAlloc();
    uint64_t v122 = v100;
    *(_DWORD *)uint64_t v11 = 136446722;
    sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
    uint64_t v12 = sub_25247B200();
    *(void *)(v0 + 32) = sub_25245DA98(v12, v13, &v122);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    sub_2523FE440(v9, type metadata accessor for EventQuery);
    *(_WORD *)(v11 + 12) = 2082;
    uint64_t v14 = sub_25247B200();
    *(void *)(v0 + 40) = sub_25245DA98(v14, v15, &v122);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    v98(v93, v10);
    *(_WORD *)(v11 + 22) = 2048;
    *(void *)(v0 + 48) = v104;
    sub_25247AEB0();
    _os_log_impl(&dword_2523CF000, log, v8, "[%{public}s] Finished subquery %{public}s, emitted %ld matching event(s)", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v100, -1, -1);
    MEMORY[0x2533B5DC0](v11, -1, -1);

    uint64_t result = v118(v115, v110);
  }
  else
  {
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 384);
    int v17 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
    uint64_t v19 = *(void *)(v0 + 168);
    uint64_t v20 = *(void *)(v0 + 152);
    uint64_t v21 = *(void *)(v0 + 136);
    uint64_t v22 = *(void *)(v0 + 112);
    sub_2523FE440(*(void *)(v0 + 248), type metadata accessor for EventQuery);
    v17(v19, v20);

    uint64_t result = v18(v21, v22);
  }
  uint64_t v23 = *(void *)(v0 + 408);
  uint64_t v24 = *(void *)(v0 + 344);
  uint64_t v25 = v24 + v23;
  if (__OFADD__(v24, v23))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v26 = *(void *)(v0 + 104);
  uint64_t v27 = v26 + *(int *)(v0 + 428);
  if ((*(unsigned char *)(v27 + 8) & 1) == 0 && v25 == *(void *)v27)
  {
    uint64_t v28 = *(void *)(v0 + 240);
    uint64_t v29 = *(void *)(v0 + 128);
    swift_bridgeObjectRelease();
    sub_2523E7604(v29);
    sub_2523FDEEC(v26, v28, type metadata accessor for EventQuery);
    uint64_t v30 = sub_25247A680();
    os_log_type_t v31 = sub_25247AD60();
    BOOL v32 = os_log_type_enabled(v30, v31);
    v121 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
    id v116 = *(void (**)(uint64_t, os_log_t))(v0 + 384);
    if (v32)
    {
      id v92 = *(void **)(v0 + 288);
      uint64_t v33 = *(void *)(v0 + 240);
      *(void *)os_log_type_t type = *(void *)(v0 + 216);
      uint64_t v111 = *(void *)(v0 + 232);
      uint64_t v101 = *(void *)(v0 + 184);
      uint64_t v105 = *(void *)(v0 + 224);
      uint64_t v34 = *(void *)(v0 + 152);
      os_log_t loga = *(os_log_t *)(v0 + 112);
      uint64_t v94 = *(void *)(v0 + 128);
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v122 = v36;
      *(_DWORD *)uint64_t v35 = 136446466;
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v37 = sub_25247B200();
      *(void *)(v0 + 16) = sub_25245DA98(v37, v38, &v122);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523FE440(v33, type metadata accessor for EventQuery);
      *(_WORD *)(v35 + 12) = 2048;
      *(void *)(v0 + 24) = v25;
      sub_25247AEB0();
      _os_log_impl(&dword_2523CF000, v30, v31, "[%{public}s] Reached query limit: %ld", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v36, -1, -1);
      MEMORY[0x2533B5DC0](v35, -1, -1);

      v116(v94, loga);
      v121(v101, v34);
      (*(void (**)(uint64_t, os_log_type_t *))(v105 + 8))(v111, *(os_log_type_t **)type);
    }
    else
    {
      uint64_t v44 = *(void *)(v0 + 240);
      uint64_t v119 = *(void *)(v0 + 232);
      uint64_t v45 = *(void *)(v0 + 224);
      uint64_t v112 = *(void *)(v0 + 216);
      uint64_t v46 = *(void *)(v0 + 184);
      uint64_t v47 = *(void *)(v0 + 152);
      uint64_t v48 = *(void *)(v0 + 128);
      uint64_t v49 = *(NSObject **)(v0 + 112);

      sub_2523FE440(v44, type metadata accessor for EventQuery);
      v116(v48, v49);
      v121(v46, v47);
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v119, v112);
    }
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v50 = *(uint64_t (**)(void))(v0 + 8);
    return v50();
  }
  uint64_t v39 = *(void *)(v0 + 328);
  uint64_t v41 = *(void *)(v0 + 224);
  uint64_t v40 = *(void *)(v0 + 232);
  uint64_t v42 = *(void *)(v0 + 216);
  uint64_t v43 = *(void *)(v0 + 352) + 1;
  (*(void (**)(void, void))(v0 + 392))(*(void *)(v0 + 184), *(void *)(v0 + 152));
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
  if (v43 == v39)
  {

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v117 = *(void *)(v0 + 352);
  *(void *)(v0 + 344) = v25;
  *(void *)(v0 + 352) = v117 + 1;
  uint64_t v120 = v25;
  uint64_t v106 = *(void *)(v0 + 256);
  uint64_t v51 = *(void *)(v0 + 224);
  uint64_t v52 = *(void *)(v0 + 232);
  uint64_t v54 = *(void *)(v0 + 208);
  uint64_t v53 = *(void *)(v0 + 216);
  uint64_t v55 = *(void *)(v0 + 184);
  uint64_t v56 = *(void *)(v0 + 192);
  uint64_t v113 = *(void *)(v0 + 176);
  uint64_t v57 = *(void *)(v0 + 160);
  uint64_t v102 = *(void *)(v0 + 152);
  uint64_t v58 = *(void *)(v0 + 144);
  uint64_t v59 = *(void *)(v0 + 104);
  sub_2523D6F54(*(void *)(v0 + 320)+ ((*(unsigned __int8 *)(v0 + 424) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 424))+ *(void *)(v0 + 336) * (v117 + 1), v54, &qword_269C04A98);
  uint64_t v99 = *(void *)(v54 + *(int *)(v56 + 48));
  *(void *)(v0 + 360) = v99;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v52, v54, v53);
  sub_25247A530();
  sub_2523E7604(v58);
  sub_2523FDEEC(v59, v106, type metadata accessor for EventQuery);
  uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16);
  *(void *)(v0 + 368) = v60;
  *(void *)(v0 + 376) = (v57 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v60(v113, v55, v102);
  swift_bridgeObjectRetain_n();
  uint64_t v61 = sub_25247A680();
  os_log_type_t v62 = sub_25247AD20();
  int v63 = v62;
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v103 = *(void *)(v0 + 328);
    int v126 = v63;
    uint64_t v64 = *(void *)(v0 + 256);
    uint64_t v65 = *(void *)(v0 + 176);
    uint64_t v67 = *(void *)(v0 + 152);
    uint64_t v66 = *(void *)(v0 + 160);
    uint64_t v107 = *(void *)(v0 + 120);
    *(void *)typea = *(void *)(v0 + 112);
    uint64_t v114 = *(void *)(v0 + 144);
    uint64_t v68 = swift_slowAlloc();
    os_log_t logb = (os_log_t)swift_slowAlloc();
    uint64_t v122 = (uint64_t)logb;
    *(_DWORD *)uint64_t v68 = 136446978;
    sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
    uint64_t v69 = sub_25247B200();
    *(void *)(v0 + 56) = sub_25245DA98(v69, v70, &v122);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    sub_2523FE440(v64, type metadata accessor for EventQuery);
    *(_WORD *)(v68 + 12) = 2082;
    uint64_t v71 = sub_25247B200();
    *(void *)(v0 + 64) = sub_25245DA98(v71, v72, &v122);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    unint64_t v73 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
    v73(v65, v67);
    *(_WORD *)(v68 + 22) = 2048;
    *(void *)(v0 + 72) = v117 + 2;
    sub_25247AEB0();
    *(_WORD *)(v68 + 32) = 2048;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 80) = v103;
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2523CF000, v61, (os_log_type_t)v126, "[%{public}s] Beginning subquery %{public}s (%ld of %ld)", (uint8_t *)v68, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](logb, -1, -1);
    MEMORY[0x2533B5DC0](v68, -1, -1);

    id v74 = *(uint64_t (**)(uint64_t, uint64_t))(v107 + 8);
    uint64_t result = v74(v114, *(void *)typea);
  }
  else
  {
    uint64_t v75 = *(void *)(v0 + 256);
    uint64_t v76 = *(void *)(v0 + 176);
    uint64_t v77 = *(void *)(v0 + 152);
    uint64_t v78 = *(void *)(v0 + 160);
    uint64_t v79 = *(void *)(v0 + 144);
    uint64_t v80 = *(void *)(v0 + 112);
    uint64_t v81 = *(void *)(v0 + 120);
    swift_bridgeObjectRelease();
    sub_2523FE440(v75, type metadata accessor for EventQuery);
    unint64_t v73 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
    v73(v76, v77);
    swift_bridgeObjectRelease();

    id v74 = *(uint64_t (**)(uint64_t, uint64_t))(v81 + 8);
    uint64_t result = v74(v79, v80);
  }
  *(void *)(v0 + 384) = v74;
  *(void *)(v0 + 392) = v73;
  uint64_t v82 = *(void *)(v0 + 104) + *(int *)(v0 + 428);
  uint64_t v83 = *(void *)v82;
  char v84 = *(unsigned char *)(v82 + 8);
  if ((v84 & 1) == 0)
  {
    BOOL v85 = __OFSUB__(v83, v120);
    v83 -= v120;
    if (v85)
    {
LABEL_24:
      __break(1u);
      return result;
    }
  }
  BOOL v86 = v117 == *(void *)(v0 + 328) - 2;
  uint64_t v87 = (void *)swift_task_alloc();
  *(void *)(v0 + 400) = v87;
  *uint64_t v87 = v0;
  v87[1] = sub_2523ECEB4;
  uint64_t v88 = *(void *)(v0 + 288);
  uint64_t v89 = *(void *)(v0 + 232);
  uint64_t v90 = *(void *)(v0 + 184);
  uint64_t v91 = *(void *)(v0 + 88);
  uint64_t v127 = *(void *)(v0 + 96);
  BOOL v125 = v86;
  return sub_2523EF874(v91, v88, v90, v89, v99, v83, v84, 0);
}

uint64_t sub_2523EDC90()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2523EDD9C()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 216);
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 152);

  v1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

BOOL sub_2523EDEEC(char a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_25247B350();
  uint64_t v4 = qword_25247EC60[a1];
  sub_25247B360();
  uint64_t v5 = sub_25247B390();
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = v5 & ~v6;
  uint64_t v8 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return 0;
  }
  uint64_t v9 = *(void *)(a2 + 48);
  if (qword_25247EC60[*(char *)(v9 + v7)] == v4) {
    return 1;
  }
  uint64_t v11 = ~v6;
  unint64_t v12 = (v7 + 1) & v11;
  if (((*(void *)(v8 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v13 = qword_25247EC60[*(char *)(v9 + v12)];
    BOOL result = v13 == v4;
    if (v13 == v4) {
      break;
    }
    unint64_t v12 = (v12 + 1) & v11;
  }
  while (((*(void *)(v8 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  return result;
}

uint64_t sub_2523EDFF4(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A98);
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_25247A5E0();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04BD0);
  v2[13] = swift_task_alloc();
  uint64_t v5 = sub_25247A640();
  v2[14] = v5;
  v2[15] = *(void *)(v5 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = *(void *)(type metadata accessor for LubyRackoffEncryptionKey() - 8);
  v2[19] = swift_task_alloc();
  uint64_t v6 = sub_25247A030();
  v2[20] = v6;
  v2[21] = *(void *)(v6 - 8);
  v2[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04BD8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  type metadata accessor for EventQuery(0);
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  uint64_t v7 = sub_25247A6A0();
  v2[28] = v7;
  v2[29] = *(void *)(v7 - 8);
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2523EE364, 0, 0);
}

uint64_t sub_2523EE364()
{
  uint64_t v22 = v0;
  uint64_t v1 = v0[6];
  uint64_t v2 = type metadata accessor for EventQuery.Configuration(0);
  v0[33] = v2;
  uint64_t v3 = *(void *)(v1 + *(int *)(v2 + 36));
  v0[34] = v3;
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[35] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_2523EE724;
    uint64_t v5 = v0[5];
    return sub_2523F4938(v5);
  }
  else
  {
    uint64_t v7 = v0[25];
    sub_2523E7604(v0[30]);
    sub_2523FDEEC(v1, v7, type metadata accessor for EventQuery);
    uint64_t v8 = sub_25247A680();
    os_log_type_t v9 = sub_25247AD20();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v12 = v0[29];
    uint64_t v11 = v0[30];
    uint64_t v13 = v0[28];
    uint64_t v14 = v0[25];
    if (v10)
    {
      uint64_t v20 = v0[28];
      unint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v21 = v16;
      *(_DWORD *)unint64_t v15 = 136446210;
      sub_25247A540();
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v17 = sub_25247B200();
      v0[2] = sub_25245DA98(v17, v18, &v21);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523FE440(v14, type metadata accessor for EventQuery);
      _os_log_impl(&dword_2523CF000, v8, v9, "[%{public}s] No categories specified, skipping query with tags", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v16, -1, -1);
      MEMORY[0x2533B5DC0](v15, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v20);
    }
    else
    {
      sub_2523FE440(v0[25], type metadata accessor for EventQuery);

      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    return v19(0);
  }
}

uint64_t sub_2523EE724(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 288) = a1;
  *(void *)(v3 + 296) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_2523EF740;
  }
  else {
    uint64_t v4 = sub_2523EE838;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2523EE838()
{
  uint64_t v137 = v0;
  uint64_t v1 = v0[36];
  if (!v1)
  {
    uint64_t v71 = v0[31];
    uint64_t v72 = v0[26];
    uint64_t v73 = v0[6];
    swift_bridgeObjectRelease();
    sub_2523E7604(v71);
    sub_2523FDEEC(v73, v72, type metadata accessor for EventQuery);
    id v74 = sub_25247A680();
    os_log_type_t v75 = sub_25247AD20();
    if (os_log_type_enabled(v74, v75))
    {
      uint64_t v128 = v0[29];
      uint64_t v131 = v0[28];
      uint64_t v134 = v0[31];
      uint64_t v76 = v0[26];
      uint64_t v77 = (uint8_t *)swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      v136[0] = v78;
      *(_DWORD *)uint64_t v77 = 136446210;
      sub_25247A540();
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v79 = sub_25247B200();
      v0[3] = sub_25245DA98(v79, v80, v136);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523FE440(v76, type metadata accessor for EventQuery);
      _os_log_impl(&dword_2523CF000, v74, v75, "[%{public}s] Feature flag disabled, skipping query with tags", v77, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v78, -1, -1);
      uint64_t v81 = v77;
LABEL_76:
      MEMORY[0x2533B5DC0](v81, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v134, v131);
      goto LABEL_83;
    }
    uint64_t v91 = v0[31];
    uint64_t v92 = v0[28];
    uint64_t v93 = v0[29];
    uint64_t v94 = v0[26];
LABEL_82:
    sub_2523FE440(v94, type metadata accessor for EventQuery);

    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v91, v92);
LABEL_83:
    unint64_t v135 = 0;
LABEL_84:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v100 = (uint64_t (*)(unint64_t))v0[1];
    return v100(v135);
  }
  if (!*(void *)(v1 + 16))
  {
    uint64_t v82 = v0[32];
    uint64_t v83 = v0[27];
    uint64_t v84 = v0[6];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2523E7604(v82);
    sub_2523FDEEC(v84, v83, type metadata accessor for EventQuery);
    id v74 = sub_25247A680();
    os_log_type_t v85 = sub_25247AD20();
    if (os_log_type_enabled(v74, v85))
    {
      uint64_t v134 = v0[32];
      uint64_t v86 = v0[27];
      uint64_t v128 = v0[29];
      uint64_t v131 = v0[28];
      uint64_t v87 = (uint8_t *)swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      v136[0] = v88;
      *(_DWORD *)uint64_t v87 = 136446210;
      sub_25247A540();
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v89 = sub_25247B200();
      v0[4] = sub_25245DA98(v89, v90, v136);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523FE440(v86, type metadata accessor for EventQuery);
      _os_log_impl(&dword_2523CF000, v74, v85, "[%{public}s] No encryption keys available, skipping query with tags", v87, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v88, -1, -1);
      uint64_t v81 = v87;
      goto LABEL_76;
    }
    uint64_t v91 = v0[32];
    uint64_t v92 = v0[28];
    uint64_t v93 = v0[29];
    uint64_t v94 = v0[27];
    goto LABEL_82;
  }
  uint64_t v116 = v0[36];
  uint64_t v2 = v0[21];
  uint64_t v127 = v0[18];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[8];
  uint64_t v120 = v0[7];
  uint64_t v114 = v0[33];
  unint64_t v6 = _s13HomeKitEvents9EventTagsO8CategoryO15tagsSplitByDate3for12dateIntervalSay10Foundation0jM0VAH_SayAI4DataVG0G0tGShyAA0dF0OG_AKtFZ_0(v0[34], v0[6] + *(int *)(v114 + 32));
  swift_bridgeObjectRelease();
  unint64_t v7 = 0;
  uint64_t v8 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  unint64_t v9 = *(void *)(v6 + 16);
  uint64_t v119 = v5;
  uint64_t v112 = (void (**)(void))(v2 + 32);
  uint64_t v113 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  uint64_t v124 = (void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  BOOL v125 = (void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  v121 = (void (**)(void, void))(v4 + 8);
  uint64_t v123 = (void (**)(uint64_t, uint64_t))(v3 + 8);
  uint64_t v118 = (void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  uint64_t v110 = (void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v10 = v0[37];
  unint64_t v11 = MEMORY[0x263F8EE78];
  unint64_t v111 = v6;
  unint64_t v105 = v9;
  uint64_t v106 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  while (1)
  {
    unint64_t v135 = v11;
    if (v7 == v9)
    {
      uint64_t v12 = 1;
      unint64_t v109 = v9;
    }
    else
    {
      if ((v7 & 0x8000000000000000) != 0) {
        goto LABEL_98;
      }
      if (v7 >= *(void *)(v6 + 16)) {
        goto LABEL_99;
      }
      unint64_t v13 = v7;
      sub_2523D6F54(v6+ ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))+ *(void *)(v119 + 72) * v7, v0[23], &qword_269C04A98);
      uint64_t v12 = 0;
      unint64_t v109 = v13 + 1;
    }
    uint64_t v15 = v0[23];
    uint64_t v14 = v0[24];
    uint64_t v16 = v0[7];
    (*v8)(v15, v12, 1, v16);
    sub_252408294(v15, v14, &qword_269C04BD8);
    if ((*v113)(v14, 1, v16) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_84;
    }
    uint64_t v17 = *(void *)(v0[24] + *(int *)(v120 + 48));
    (*v112)(v0[22]);
    uint64_t v18 = *(void *)(v116 + 16);
    uint64_t v19 = *(void *)(v17 + 16);
    if ((unsigned __int128)(v18 * (__int128)v19) >> 64 != (v18 * v19) >> 63) {
      break;
    }
    uint64_t v108 = *(void *)(v116 + 16);
    uint64_t v20 = sub_25241D78C(0, (v18 * v19) & ~((v18 * v19) >> 63), 0, MEMORY[0x263F8EE78]);
    uint64_t v21 = *(void *)(v17 + 16);
    if (v21)
    {
      unint64_t v22 = 0;
      uint64_t v23 = v0[6];
      uint64_t v24 = *(int *)(v114 + 68);
      uint64_t v25 = v17 + 32;
      uint64_t v26 = v17;
      uint64_t v27 = v116;
      uint64_t v122 = v116 + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
      uint64_t v115 = v26;
      uint64_t v103 = v23;
      uint64_t v104 = v21;
      uint64_t v101 = v25;
      uint64_t v102 = v24;
      while (v22 < *(void *)(v26 + 16))
      {
        unint64_t v30 = *(void *)(v23 + v24);
        if ((v30 & 0x8000000000000000) != 0) {
          goto LABEL_96;
        }
        if (v30)
        {
          os_log_type_t v31 = (uint64_t *)(v25 + 16 * v22);
          unint64_t v130 = v31[1];
          uint64_t v133 = *v31;
          unint64_t v32 = *(void *)(v27 + 16);
          if (v32 >= v30 || (unint64_t v30 = *(void *)(v27 + 16), v32))
          {
            unint64_t v107 = v22;
            sub_252408194(v133, v130);
            BOOL v33 = __OFSUB__(HIDWORD(v133), v133);
            BOOL v117 = v33;
            swift_bridgeObjectRetain();
            uint64_t v34 = 0;
            while (2)
            {
              if (v30 == v34)
              {
                __break(1u);
LABEL_89:
                __break(1u);
                goto LABEL_90;
              }
              uint64_t v35 = v0[19];
              uint64_t v37 = v0[16];
              uint64_t v36 = v0[17];
              uint64_t v38 = v0[13];
              uint64_t v39 = v0[14];
              uint64_t v40 = v34 + 1;
              sub_2523FDEEC(v122 + *(void *)(v127 + 72) * v34, v35, (uint64_t (*)(void))type metadata accessor for LubyRackoffEncryptionKey);
              sub_2523D6F54(v35, v38, &qword_269C04BD0);
              (*v125)(v36, v38, v39);
              (*v124)(v37, v36, v39);
              uint64_t v41 = BYTE6(v130);
              switch(v130 >> 62)
              {
                case 1uLL:
                  uint64_t v41 = HIDWORD(v133) - (int)v133;
                  if (v117) {
                    goto LABEL_93;
                  }
                  goto LABEL_36;
                case 2uLL:
                  uint64_t v43 = *(void *)(v133 + 16);
                  uint64_t v42 = *(void *)(v133 + 24);
                  BOOL v44 = __OFSUB__(v42, v43);
                  uint64_t v41 = v42 - v43;
                  if (v44) {
                    goto LABEL_94;
                  }
                  goto LABEL_36;
                case 3uLL:
                  goto LABEL_37;
                default:
LABEL_36:
                  if ((unint64_t)(v41 - 0x1000000000000000) >> 61 != 7) {
                    goto LABEL_89;
                  }
LABEL_37:
                  sub_25247A5C0();
                  if (v10)
                  {
                    uint64_t v95 = v0[22];
                    uint64_t v97 = v0[19];
                    uint64_t v96 = v0[20];
                    (*v123)(v0[17], v0[14]);
                    sub_2524081EC(v133, v130);
                    swift_bridgeObjectRelease();
                    sub_2523FE440(v97, (uint64_t (*)(void))type metadata accessor for LubyRackoffEncryptionKey);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    (*v110)(v95, v96);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    swift_task_dealloc();
                    uint64_t v98 = (uint64_t (*)(void))v0[1];
                    return v98();
                  }
                  uint64_t v45 = sub_25247A5D0();
                  unint64_t v47 = v46;
                  uint64_t v48 = v0[17];
                  uint64_t v49 = v0[14];
                  (*v121)(v0[12], v0[10]);
                  (*v123)(v48, v49);
                  sub_252408194(v45, v47);
                  unint64_t v51 = v20[2];
                  unint64_t v50 = v20[3];
                  if (v51 >= v50 >> 1) {
                    uint64_t v20 = sub_25241D78C((void *)(v50 > 1), v51 + 1, 1, v20);
                  }
                  uint64_t v52 = v0[19];
                  v20[2] = v51 + 1;
                  uint64_t v53 = &v20[2 * v51];
                  v53[4] = v45;
                  v53[5] = v47;
                  sub_2524081EC(v45, v47);
                  sub_2523FE440(v52, (uint64_t (*)(void))type metadata accessor for LubyRackoffEncryptionKey);
                  uint64_t v10 = 0;
                  uint64_t v34 = v40;
                  if (v30 != v40) {
                    continue;
                  }
                  uint64_t v27 = v116;
                  swift_bridgeObjectRelease();
                  sub_2524081EC(v133, v130);
                  uint64_t v10 = 0;
                  uint64_t v23 = v103;
                  uint64_t v21 = v104;
                  unint64_t v22 = v107;
                  uint64_t v25 = v101;
                  uint64_t v24 = v102;
                  break;
              }
              break;
            }
          }
        }
        ++v22;
        uint64_t v26 = v115;
        if (v22 == v21) {
          goto LABEL_13;
        }
      }
      goto LABEL_95;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    if (!v108) {
      goto LABEL_100;
    }
    uint64_t v129 = v10;
    uint64_t v28 = *(void *)(v0[6] + *(int *)(v114 + 68)) / v108;
    if (!v28) {
      goto LABEL_101;
    }
    int64_t v132 = v20[2];
    if (v28 >= 1 && v20[2] != 0)
    {
      int64_t v54 = 0;
      int v126 = v20 + 4;
      while (1)
      {
        int64_t v55 = __OFADD__(v54, v28) ? ((v54 + v28) >> 63) ^ 0x8000000000000000 : v54 + v28;
        if (__OFADD__(v54, v28)) {
          break;
        }
        if (v20[2] >= v54 + v28) {
          int64_t v56 = v54 + v28;
        }
        else {
          int64_t v56 = v20[2];
        }
        uint64_t v57 = v56 - v54;
        if (v56 < v54) {
          goto LABEL_91;
        }
        if (v54 < 0) {
          goto LABEL_92;
        }
        sub_25247B270();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain_n();
        uint64_t v58 = swift_dynamicCastClass();
        if (!v58)
        {
          swift_bridgeObjectRelease();
          uint64_t v58 = MEMORY[0x263F8EE78];
        }
        uint64_t v59 = *(void *)(v58 + 16);
        swift_release();
        if (v59 == v57)
        {
          uint64_t v60 = (void *)swift_dynamicCastClass();
          if (!v60)
          {
            swift_bridgeObjectRelease();
            uint64_t v60 = (void *)MEMORY[0x263F8EE78];
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v60 = (void *)MEMORY[0x263F8EE78];
          if (v56 != v54)
          {
            if (v57 < 1)
            {
              if (v57 < 0) {
                return sub_25247B100();
              }
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_269C04750);
              uint64_t v60 = (void *)swift_allocObject();
              int64_t v69 = _swift_stdlib_malloc_size(v60);
              uint64_t v70 = v69 - 32;
              if (v69 < 32) {
                uint64_t v70 = v69 - 17;
              }
              v60[2] = v57;
              v60[3] = 2 * (v70 >> 4);
            }
            if (&v126[2 * v54] < &v60[2 * v57 + 4] && v60 + 4 < &v126[2 * v56]) {
              return sub_25247B100();
            }
            swift_arrayInitWithCopy();
          }
        }
        uint64_t v61 = v0[22];
        uint64_t v62 = v0[20];
        uint64_t v63 = v0[9];
        swift_bridgeObjectRelease();
        uint64_t v64 = *(int *)(v120 + 48);
        (*v118)(v63, v61, v62);
        *(void *)(v63 + v64) = v60;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v65 = v135;
        }
        else {
          unint64_t v65 = sub_25241DB40(0, *(void *)(v135 + 16) + 1, 1, v135);
        }
        unint64_t v67 = *(void *)(v65 + 16);
        unint64_t v66 = *(void *)(v65 + 24);
        if (v67 >= v66 >> 1) {
          unint64_t v65 = sub_25241DB40(v66 > 1, v67 + 1, 1, v65);
        }
        uint64_t v68 = v0[9];
        *(void *)(v65 + 16) = v67 + 1;
        unint64_t v135 = v65;
        sub_252408294(v68, v65+ ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))+ *(void *)(v119 + 72) * v67, &qword_269C04A98);
        int64_t v54 = v55;
        if (v55 >= v132) {
          goto LABEL_20;
        }
      }
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
      break;
    }
LABEL_20:
    (*v110)(v0[22], v0[20]);
    swift_bridgeObjectRelease();
    unint64_t v11 = v135;
    unint64_t v6 = v111;
    unint64_t v9 = v105;
    uint64_t v8 = v106;
    unint64_t v7 = v109;
    uint64_t v10 = v129;
  }
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
  return sub_25247B100();
}

uint64_t sub_2523EF740()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2523EF874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  *(void *)(v9 + 720) = v8;
  *(void *)(v9 + 712) = v20;
  *(unsigned char *)(v9 + 1392) = v19;
  *(unsigned char *)(v9 + 1391) = a8;
  *(unsigned char *)(v9 + 1390) = a7;
  *(void *)(v9 + 704) = a6;
  *(void *)(v9 + 696) = a5;
  *(void *)(v9 + 688) = a4;
  *(void *)(v9 + 680) = a3;
  *(void *)(v9 + 672) = a2;
  *(void *)(v9 + 664) = a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04AB8);
  *(void *)(v9 + 728) = v10;
  *(void *)(v9 + 736) = *(void *)(v10 - 8);
  *(void *)(v9 + 744) = swift_task_alloc();
  *(void *)(v9 + 752) = swift_task_alloc();
  *(void *)(v9 + 760) = swift_task_alloc();
  *(void *)(v9 + 768) = type metadata accessor for EventRecord.DecodedEvent(0);
  *(void *)(v9 + 776) = swift_task_alloc();
  type metadata accessor for SomeEvent();
  *(void *)(v9 + 784) = swift_task_alloc();
  *(void *)(v9 + 792) = swift_task_alloc();
  type metadata accessor for EventQuery(0);
  *(void *)(v9 + 800) = swift_task_alloc();
  *(void *)(v9 + 808) = swift_task_alloc();
  *(void *)(v9 + 816) = swift_task_alloc();
  *(void *)(v9 + 824) = swift_task_alloc();
  *(void *)(v9 + 832) = swift_task_alloc();
  *(void *)(v9 + 840) = swift_task_alloc();
  *(void *)(v9 + 848) = swift_task_alloc();
  *(void *)(v9 + 856) = swift_task_alloc();
  *(void *)(v9 + 864) = swift_task_alloc();
  *(void *)(v9 + 872) = swift_task_alloc();
  uint64_t v11 = sub_25247A6A0();
  *(void *)(v9 + 880) = v11;
  *(void *)(v9 + 888) = *(void *)(v11 - 8);
  *(void *)(v9 + 896) = swift_task_alloc();
  *(void *)(v9 + 904) = swift_task_alloc();
  *(void *)(v9 + 912) = swift_task_alloc();
  *(void *)(v9 + 920) = swift_task_alloc();
  *(void *)(v9 + 928) = swift_task_alloc();
  *(void *)(v9 + 936) = swift_task_alloc();
  *(void *)(v9 + 944) = swift_task_alloc();
  *(void *)(v9 + 952) = swift_task_alloc();
  *(void *)(v9 + 960) = swift_task_alloc();
  *(void *)(v9 + 968) = swift_task_alloc();
  *(void *)(v9 + 976) = type metadata accessor for EventRecord(0);
  *(void *)(v9 + 984) = swift_task_alloc();
  *(void *)(v9 + 992) = swift_task_alloc();
  *(void *)(v9 + 1000) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  *(void *)(v9 + 1008) = swift_task_alloc();
  uint64_t v12 = sub_25247A540();
  *(void *)(v9 + 1016) = v12;
  *(void *)(v9 + 1024) = *(void *)(v12 - 8);
  *(void *)(v9 + 1032) = swift_task_alloc();
  *(void *)(v9 + 1040) = swift_task_alloc();
  *(void *)(v9 + 1048) = swift_task_alloc();
  *(void *)(v9 + 1056) = swift_task_alloc();
  *(void *)(v9 + 1064) = swift_task_alloc();
  *(void *)(v9 + 1072) = swift_task_alloc();
  *(void *)(v9 + 1080) = swift_task_alloc();
  *(void *)(v9 + 1088) = swift_task_alloc();
  *(void *)(v9 + 1096) = swift_task_alloc();
  *(void *)(v9 + 1104) = swift_task_alloc();
  *(void *)(v9 + 1112) = swift_task_alloc();
  *(void *)(v9 + 1120) = swift_task_alloc();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C047C0);
  *(void *)(v9 + 1128) = v13;
  *(void *)(v9 + 1136) = *(void *)(v13 - 8);
  *(void *)(v9 + 1144) = swift_task_alloc();
  uint64_t v14 = sub_25247A4B0();
  *(void *)(v9 + 1152) = v14;
  *(void *)(v9 + 1160) = *(void *)(v14 - 8);
  *(void *)(v9 + 1168) = swift_task_alloc();
  *(void *)(v9 + 1176) = swift_task_alloc();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C047C8);
  *(void *)(v9 + 1184) = v15;
  *(void *)(v9 + 1192) = *(void *)(v15 - 8);
  *(void *)(v9 + 1200) = swift_task_alloc();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C047D0);
  *(void *)(v9 + 1208) = v16;
  *(void *)(v9 + 1216) = *(void *)(v16 - 8);
  *(void *)(v9 + 1224) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04AC8);
  *(void *)(v9 + 1232) = swift_task_alloc();
  *(void *)(v9 + 1240) = swift_task_alloc();
  *(void *)(v9 + 1248) = swift_task_alloc();
  *(void *)(v9 + 1256) = swift_task_alloc();
  *(void *)(v9 + 1264) = type metadata accessor for CKQueryAsyncSequence();
  *(void *)(v9 + 1272) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2523EFED0, 0, 0);
}

uint64_t sub_2523EFED0()
{
  sub_25247ABC0();
  uint64_t v1 = *(void *)(v0 + 1272);
  uint64_t v2 = *(int **)(v0 + 1264);
  uint64_t v44 = *(void *)(v0 + 1200);
  uint64_t v46 = *(void *)(v0 + 1192);
  uint64_t v45 = *(void *)(v0 + 1184);
  uint64_t v39 = *(void *)(v0 + 1256);
  uint64_t v40 = *(void *)(v0 + 1176);
  uint64_t v37 = *(void *)(v0 + 1160);
  uint64_t v38 = *(void *)(v0 + 1152);
  uint64_t v41 = *(void *)(v0 + 1136);
  uint64_t v42 = *(void *)(v0 + 1144);
  uint64_t v43 = *(void *)(v0 + 1128);
  uint64_t v3 = *(void *)(v0 + 1024);
  uint64_t v4 = *(void *)(v0 + 720);
  int v31 = *(unsigned __int8 *)(v0 + 1392);
  int v29 = *(unsigned __int8 *)(v0 + 1391);
  uint64_t v30 = *(void *)(v0 + 704);
  uint64_t v5 = *(void **)(v0 + 696);
  unint64_t v6 = *(unsigned char **)(v0 + 688);
  uint64_t v33 = *(void *)(v0 + 680);
  uint64_t v34 = *(void *)(v0 + 1016);
  char v7 = *(unsigned char *)(v0 + 1390) & 1;
  uint64_t v35 = *(void **)(v0 + 664);
  uint64_t v36 = *(void **)(v0 + 672);
  uint64_t v8 = (int *)type metadata accessor for EventQuery.Configuration(0);
  *(void *)(v0 + 1280) = v8;
  uint64_t v9 = v8[6];
  *(_DWORD *)(v0 + 1384) = v9;
  uint64_t v10 = v4 + v9;
  unint64_t v32 = (void *)sub_252407954(v4 + v9, v6, v5, v29, v31);
  *(void *)(v0 + 1288) = v32;
  uint64_t v11 = sub_2523F6B8C(v30, v7, v4, (uint64_t)v5);
  LOBYTE(v30) = v12;
  uint64_t v13 = *(void *)(v4 + v8[16]);
  *(void *)(v0 + 1296) = v13;
  uint64_t v14 = v1 + v2[7];
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 1304) = v15;
  *(void *)(v0 + 1312) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v15(v14, v10, v34);
  v15(v1 + v2[8], v33, v34);
  uint64_t v16 = v4 + v8[15];
  uint64_t v17 = *(void *)v16;
  LOBYTE(v16) = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v1 = v35;
  *(_OWORD *)(v1 + 8) = 0u;
  *(void *)(v1 + 24) = v36;
  *(void *)(v1 + 32) = v32;
  *(void *)(v1 + v2[9]) = &unk_270299418;
  uint64_t v18 = v1 + v2[10];
  *(void *)uint64_t v18 = v11;
  *(unsigned char *)(v18 + 8) = v30 & 1;
  uint64_t v19 = v1 + v2[11];
  *(void *)uint64_t v19 = v17;
  *(unsigned char *)(v19 + 8) = v16;
  *(void *)(v1 + v2[12]) = v13;
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56);
  *(void *)(v0 + 1320) = v20;
  *(void *)(v0 + 1328) = (v37 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v20(v39, 1, 1, v38);
  *(void *)(v0 + 472) = MEMORY[0x263F8EE78];
  id v21 = v35;
  id v22 = v36;
  id v23 = v32;
  swift_unknownObjectRetain();
  sub_25247A4A0();
  uint64_t v24 = swift_task_alloc();
  *(void *)(v24 + 16) = v1;
  *(void *)(v24 + 24) = v40;
  sub_2523E1254(0, &qword_269C047E0);
  (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v42, *MEMORY[0x263F8F680], v43);
  sub_25247AC30();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
  *(void *)(v0 + 1336) = v25;
  *(void *)(v0 + 1344) = (v37 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v25(v40, v38);
  swift_task_dealloc();
  sub_25247AC00();
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
  *(_OWORD *)(v0 + 1352) = 0u;
  uint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 1368) = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_2523F05C8;
  uint64_t v27 = *(void *)(v0 + 1208);
  return MEMORY[0x270FA20F8](v0 + 656, 0, 0, v27, v0 + 632);
}

uint64_t sub_2523F05C8()
{
  *(void *)(*(void *)v1 + 1376) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2523F4590;
  }
  else
  {
    uint64_t v2 = sub_2523F06E4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2523F06E4()
{
  uint64_t v514 = v1;
  uint64_t v2 = v1 + 472;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 656);
  if (!v3)
  {
    (*(void (**)(void, void))(*(void *)(v1 + 1216) + 8))(*(void *)(v1 + 1224), *(void *)(v1 + 1208));
    uint64_t v26 = *(NSObject **)(v1 + 1360);
    uint64_t v27 = *(NSObject **)(v1 + 1352);
    goto LABEL_7;
  }
  uint64_t v4 = *(void *)(v1 + 1360);
  uint64_t v5 = (v4 + 1);
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_77;
  }
  uint64_t v511 = v1 + 656;
  uint64_t v6 = *(void *)(v1 + 1024);
  uint64_t v7 = *(void *)(v1 + 1016);
  uint64_t v8 = *(void *)(v1 + 1008);
  id v9 = objc_msgSend(v3, sel_recordID);
  id v10 = objc_msgSend(v9, sel_recordName);

  sub_25247A840();
  sub_25247A4C0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) == 1)
  {
    v512 = v5;
    uint64_t v11 = *(void *)(v1 + 904);
    uint64_t v12 = *(void *)(v1 + 808);
    uint64_t v13 = *(void *)(v1 + 720);
    sub_2523D6FB8(*(void *)(v1 + 1008), (uint64_t *)&unk_269C047F0);
    sub_2523E7604(v11);
    sub_2523FDEEC(v13, v12, type metadata accessor for EventQuery);
    uint64_t v14 = v3;
    uint64_t v15 = sub_25247A680();
    os_log_type_t v16 = sub_25247AD20();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v458 = *(void *)(v1 + 904);
      uint64_t v431 = *(void *)(v1 + 888);
      uint64_t v440 = *(void *)(v1 + 880);
      uint64_t v17 = *(void *)(v1 + 808);
      uint64_t v18 = swift_slowAlloc();
      uint64_t v424 = swift_slowAlloc();
      v513[0] = v424;
      *(_DWORD *)uint64_t v18 = 136446722;
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v19 = sub_25247B200();
      *(void *)(v1 + 592) = sub_25245DA98(v19, v20, v513);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523FE440(v17, type metadata accessor for EventQuery);
      *(_WORD *)(v18 + 12) = 2160;
      *(void *)(v1 + 576) = 1752392040;
      sub_25247AEB0();
      *(_WORD *)(v18 + 22) = 2080;
      id v21 = objc_msgSend(v14, sel_recordID);
      id v22 = objc_msgSend(v21, sel_recordName);

      uint64_t v23 = sub_25247A840();
      unint64_t v25 = v24;

      *(void *)(v1 + 568) = sub_25245DA98(v23, v25, v513);
      sub_25247AEB0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2523CF000, v15, v16, "[%{public}s] Ignoring record with non-UUID record name: %{mask.hash}s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v424, -1, -1);
      MEMORY[0x2533B5DC0](v18, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v431 + 8))(v458, v440);
    }
    else
    {
      uint64_t v56 = *(void *)(v1 + 904);
      uint64_t v57 = *(void *)(v1 + 888);
      uint64_t v58 = *(void *)(v1 + 880);
      sub_2523FE440(*(void *)(v1 + 808), type metadata accessor for EventQuery);

      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
    }
    uint64_t v59 = *(void (**)(uint64_t, void, uint64_t))(v1 + 1304);
    uint64_t v60 = *(void **)(v1 + 1296);
    uint64_t v61 = *(void *)(v1 + 1104);
    uint64_t v62 = *(void *)(v1 + 1024);
    uint64_t v63 = *(void *)(v1 + 1016);
    v59(v61, *(void *)(v1 + 720) + *(int *)(v1 + 1384), v63);
    uint64_t v64 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
    unint64_t v65 = objc_allocWithZone(v64);
    v59((uint64_t)&v65[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v61, v63);
    v65[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 9;
    *(void *)&v65[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
    *(void *)&v65[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
    *(void *)&v65[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
    *(void *)(v1 + 216) = v65;
    *(void *)(v1 + 224) = v64;
    id v66 = objc_msgSendSuper2((objc_super *)(v1 + 216), sel_init);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
    objc_msgSend(v60, sel_submitLogEvent_, v66);

    goto LABEL_30;
  }
  while (1)
  {
    (*(void (**)(void, void, void))(*(void *)(v1 + 1024) + 32))(*(void *)(v1 + 1120), *(void *)(v1 + 1008), *(void *)(v1 + 1016));
    v459 = v3;
    if (objc_msgSend(v3, sel_isExpired))
    {
      uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304);
      uint64_t v39 = *(void *)(v1 + 1120);
      uint64_t v40 = *(void *)(v1 + 1048);
      uint64_t v41 = *(void *)(v1 + 1016);
      uint64_t v42 = *(void *)(v1 + 816);
      uint64_t v43 = *(void *)(v1 + 720);
      sub_2523E7604(*(void *)(v1 + 912));
      sub_2523FDEEC(v43, v42, type metadata accessor for EventQuery);
      v38(v40, v39, v41);
      uint64_t v44 = sub_25247A680();
      os_log_type_t v45 = sub_25247AD20();
      v512 = v5;
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = *(void *)(v1 + 1048);
        uint64_t v419 = *(void *)(v1 + 1024);
        uint64_t v47 = *(void *)(v1 + 1016);
        uint64_t v472 = *(void *)(v1 + 888);
        uint64_t v487 = *(void *)(v1 + 880);
        uint64_t v496 = *(void *)(v1 + 912);
        uint64_t v48 = *(void *)(v1 + 816);
        uint64_t v49 = swift_slowAlloc();
        uint64_t v415 = swift_slowAlloc();
        v513[0] = v415;
        *(_DWORD *)uint64_t v49 = 136446466;
        sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
        uint64_t v50 = sub_25247B200();
        *(void *)(v1 + 608) = sub_25245DA98(v50, v51, v513);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        sub_2523FE440(v48, type metadata accessor for EventQuery);
        *(_WORD *)(v49 + 12) = 2082;
        uint64_t v52 = v46;
        uint64_t v53 = sub_25247B200();
        *(void *)(v1 + 424) = sub_25245DA98(v53, v54, v513);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        int64_t v55 = *(void (**)(uint64_t, uint64_t))(v419 + 8);
        v55(v52, v47);
        _os_log_impl(&dword_2523CF000, v44, v45, "[%{public}s] Ignoring record that has expired: %{public}s", (uint8_t *)v49, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v415, -1, -1);
        MEMORY[0x2533B5DC0](v49, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v472 + 8))(v496, v487);
      }
      else
      {
        uint64_t v118 = *(void *)(v1 + 1048);
        uint64_t v119 = *(void *)(v1 + 1024);
        uint64_t v120 = *(void *)(v1 + 1016);
        uint64_t v121 = *(void *)(v1 + 912);
        uint64_t v122 = *(void *)(v1 + 888);
        uint64_t v123 = *(void *)(v1 + 880);
        sub_2523FE440(*(void *)(v1 + 816), type metadata accessor for EventQuery);
        int64_t v55 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
        v55(v118, v120);

        (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v121, v123);
      }
      uint64_t v124 = *(void (**)(uint64_t, void, uint64_t))(v1 + 1304);
      BOOL v125 = *(void **)(v1 + 1296);
      uint64_t v498 = *(void *)(v1 + 1120);
      uint64_t v126 = *(void *)(v1 + 1104);
      uint64_t v127 = *(void *)(v1 + 1016);
      v124(v126, *(void *)(v1 + 720) + *(int *)(v1 + 1384), v127);
      uint64_t v128 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
      uint64_t v129 = objc_allocWithZone(v128);
      v124((uint64_t)&v129[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v126, v127);
      v129[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 7;
      *(void *)&v129[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
      *(void *)&v129[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
      *(void *)&v129[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
      *(void *)(v1 + 392) = v129;
      *(void *)(v1 + 400) = v128;
      id v130 = objc_msgSendSuper2((objc_super *)(v1 + 392), sel_init);
      v55(v126, v127);
      objc_msgSend(v125, sel_submitLogEvent_, v130);

      v55(v498, v127);
LABEL_30:
      uint64_t v131 = *(void (**)(void, void))(v1 + 1352);
LABEL_31:
      uint64_t v5 = v512;
      goto LABEL_32;
    }
    uint64_t v67 = sub_25247AE70();
    uint64_t v68 = *(void (**)(void, uint64_t, uint64_t, void))(v1 + 1320);
    uint64_t v69 = *(void *)(v1 + 1248);
    if (!v67)
    {
      v68(*(void *)(v1 + 1248), 1, 1, *(void *)(v1 + 1152));
LABEL_36:
      uint64_t v138 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304);
      uint64_t v139 = *(void *)(v1 + 1120);
      uint64_t v140 = *(void *)(v1 + 1056);
      uint64_t v141 = *(void *)(v1 + 1016);
      uint64_t v142 = *(void *)(v1 + 920);
      uint64_t v143 = *(void *)(v1 + 824);
      uint64_t v144 = *(void *)(v1 + 720);
      sub_2523D6FB8(*(void *)(v1 + 1248), &qword_269C04AC8);
      sub_2523E7604(v142);
      sub_2523FDEEC(v144, v143, type metadata accessor for EventQuery);
      v138(v140, v139, v141);
      uint64_t v145 = sub_25247A680();
      os_log_type_t v146 = sub_25247AD20();
      if (os_log_type_enabled(v145, v146))
      {
        uint64_t v425 = *(void *)(v1 + 1056);
        uint64_t v147 = *(void *)(v1 + 1016);
        uint64_t v490 = *(void *)(v1 + 920);
        uint64_t v499 = *(void *)(v1 + 1024);
        uint64_t v447 = *(void *)(v1 + 888);
        uint64_t v474 = *(void *)(v1 + 880);
        uint64_t v148 = *(void *)(v1 + 824);
        uint64_t v149 = swift_slowAlloc();
        uint64_t v441 = swift_slowAlloc();
        v513[0] = v441;
        *(_DWORD *)uint64_t v149 = 136446466;
        sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
        uint64_t v150 = sub_25247B200();
        *(void *)(v1 + 528) = sub_25245DA98(v150, v151, v513);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        sub_2523FE440(v148, type metadata accessor for EventQuery);
        *(_WORD *)(v149 + 12) = 2082;
        uint64_t v152 = sub_25247B200();
        *(void *)(v1 + 512) = sub_25245DA98(v152, v153, v513);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        v500 = *(void (**)(uint64_t, uint64_t))(v499 + 8);
        v500(v425, v147);
        _os_log_impl(&dword_2523CF000, v145, v146, "[%{public}s] Ignoring record with no date: %{public}s", (uint8_t *)v149, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v441, -1, -1);
        MEMORY[0x2533B5DC0](v149, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v447 + 8))(v490, v474);
      }
      else
      {
        uint64_t v154 = *(void *)(v1 + 1056);
        uint64_t v155 = *(void *)(v1 + 1024);
        uint64_t v156 = *(void *)(v1 + 1016);
        uint64_t v157 = *(void *)(v1 + 920);
        uint64_t v158 = *(void *)(v1 + 888);
        uint64_t v159 = *(void *)(v1 + 880);
        sub_2523FE440(*(void *)(v1 + 824), type metadata accessor for EventQuery);
        v500 = *(void (**)(uint64_t, uint64_t))(v155 + 8);
        v500(v154, v156);

        (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v157, v159);
      }
      v160 = *(void (**)(uint64_t, void, uint64_t))(v1 + 1304);
      uint64_t v161 = *(void **)(v1 + 1296);
      uint64_t v491 = *(void *)(v1 + 1120);
      uint64_t v162 = *(void *)(v1 + 1104);
      uint64_t v163 = *(void *)(v1 + 1016);
      v160(v162, *(void *)(v1 + 720) + *(int *)(v1 + 1384), v163);
      v164 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
      v165 = objc_allocWithZone(v164);
      v160((uint64_t)&v165[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v162, v163);
      v165[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 8;
      *(void *)&v165[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
      *(void *)&v165[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
      *(void *)&v165[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
      *(void *)(v1 + 280) = v165;
      *(void *)(v1 + 288) = v164;
      id v166 = objc_msgSendSuper2((objc_super *)(v1 + 280), sel_init);
      v500(v162, v163);
      objc_msgSend(v161, sel_submitLogEvent_, v166);

      v500(v491, v163);
      uint64_t v131 = *(void (**)(void, void))(v1 + 1352);
LABEL_32:
      *(void *)(v1 + 1360) = v5;
      *(void *)(v1 + 1352) = v131;
      int64_t v132 = (void *)swift_task_alloc();
      *(void *)(v1 + 1368) = v132;
      void *v132 = v1;
      v132[1] = sub_2523F05C8;
      uint64_t v133 = *(void *)(v1 + 1208);
      uint64_t v134 = v511;
      uint64_t v135 = 0;
      uint64_t v136 = 0;
      uint64_t v137 = v1 + 632;
      return MEMORY[0x270FA20F8](v134, v135, v136, v133, v137);
    }
    uint64_t v70 = *(void *)(v1 + 1160);
    uint64_t v71 = *(void *)(v1 + 1152);
    *(void *)(v1 + 504) = v67;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C05680);
    int v72 = swift_dynamicCast();
    v68(v69, v72 ^ 1u, 1, v71);
    uint64_t v73 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
    if (v73(v69, 1, v71) == 1) {
      goto LABEL_36;
    }
    id v74 = *(void **)(v1 + 1376);
    uint64_t v75 = *(void *)(v1 + 992);
    (*(void (**)(void, void, void))(*(void *)(v1 + 1160) + 32))(*(void *)(v1 + 1168), *(void *)(v1 + 1248), *(void *)(v1 + 1152));
    id v76 = v459;
    EventRecord.init(from:)(v76, v75);
    v512 = v5;
    if (v74)
    {
      uint64_t v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304);
      uint64_t v78 = *(void *)(v1 + 1120);
      uint64_t v79 = *(void *)(v1 + 1032);
      uint64_t v80 = *(void *)(v1 + 1016);
      uint64_t v81 = *(void *)(v1 + 800);
      uint64_t v82 = v74;
      uint64_t v83 = v76;
      uint64_t v84 = *(void *)(v1 + 720);
      sub_2523E7604(*(void *)(v1 + 896));
      sub_2523FDEEC(v84, v81, type metadata accessor for EventQuery);
      v77(v79, v78, v80);
      id v85 = v83;
      uint64_t v86 = v82;
      id v87 = v85;
      id v88 = v82;
      id v89 = v87;
      id v90 = v86;
      uint64_t v91 = sub_25247A680();
      os_log_type_t v92 = sub_25247AD40();
      v497 = v89;
      if (os_log_type_enabled(v91, v92))
      {
        uint64_t v93 = *(void *)(v1 + 1024);
        uint64_t v94 = *(void *)(v1 + 1016);
        uint64_t v473 = *(void *)(v1 + 896);
        uint64_t v488 = *(void *)(v1 + 1032);
        uint64_t v420 = *(void *)(v1 + 888);
        uint64_t v432 = *(void *)(v1 + 880);
        uint64_t v95 = *(void *)(v1 + 800);
        v406 = v91;
        uint64_t v96 = swift_slowAlloc();
        v401 = (void *)swift_slowAlloc();
        uint64_t v414 = swift_slowAlloc();
        v513[0] = v414;
        *(_DWORD *)uint64_t v96 = 136446978;
        sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
        uint64_t v97 = sub_25247B200();
        *(void *)(v1 + 480) = sub_25245DA98(v97, v98, v513);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        sub_2523FE440(v95, type metadata accessor for EventQuery);
        *(_WORD *)(v96 + 12) = 2082;
        uint64_t v99 = v488;
        uint64_t v100 = sub_25247B200();
        *(void *)(v1 + 432) = sub_25245DA98(v100, v101, v513);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        v489 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
        v489(v99, v94);
        *(_WORD *)(v96 + 22) = 2112;
        *(void *)(v1 + 416) = v89;
        id v102 = v89;
        sub_25247AEB0();
        void *v401 = v459;

        *(_WORD *)(v96 + 32) = 2114;
        id v103 = v86;
        uint64_t v104 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v1 + 408) = v104;
        sub_25247AEB0();
        v401[1] = v104;

        _os_log_impl(&dword_2523CF000, v406, v92, "[%{public}s] Ignoring invalid record: %{public}s (%@), %{public}@", (uint8_t *)v96, 0x2Au);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v401, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v414, -1, -1);
        MEMORY[0x2533B5DC0](v96, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v420 + 8))(v473, v432);
      }
      else
      {
        uint64_t v185 = *(void *)(v1 + 1032);
        v186 = v89;
        uint64_t v187 = *(void *)(v1 + 1024);
        uint64_t v188 = *(void *)(v1 + 1016);
        uint64_t v189 = *(void *)(v1 + 896);
        uint64_t v190 = *(void *)(v1 + 888);
        uint64_t v191 = *(void *)(v1 + 880);
        sub_2523FE440(*(void *)(v1 + 800), type metadata accessor for EventQuery);
        v489 = *(void (**)(uint64_t, uint64_t))(v187 + 8);
        v489(v185, v188);

        (*(void (**)(uint64_t, uint64_t))(v190 + 8))(v189, v191);
      }
      v461 = *(void (**)(uint64_t, uint64_t))(v1 + 1336);
      v192 = *(void (**)(uint64_t, void, uint64_t))(v1 + 1304);
      v193 = *(void **)(v1 + 1296);
      uint64_t v194 = *(void *)(v1 + 1152);
      uint64_t v443 = *(void *)(v1 + 1168);
      uint64_t v449 = *(void *)(v1 + 1120);
      uint64_t v195 = *(void *)(v1 + 1104);
      uint64_t v196 = *(void *)(v1 + 1016);
      v192(v195, *(void *)(v1 + 720) + *(int *)(v1 + 1384), v196);
      v197 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
      v198 = objc_allocWithZone(v197);
      v192((uint64_t)&v198[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v195, v196);
      v198[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 15;
      *(void *)&v198[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
      *(void *)&v198[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
      *(void *)&v198[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
      *(void *)(v1 + 344) = v198;
      *(void *)(v1 + 352) = v197;
      id v199 = objc_msgSendSuper2((objc_super *)(v1 + 344), sel_init);
      v489(v195, v196);
      objc_msgSend(v193, sel_submitLogEvent_, v199);

      v461(v443, v194);
      v489(v449, v196);
      goto LABEL_30;
    }
    uint64_t v167 = *(void *)(v1 + 1000);
    uint64_t v168 = *(void *)(v1 + 976);
    sub_252407EEC(*(void *)(v1 + 992), v167, type metadata accessor for EventRecord);
    int v169 = *(unsigned __int8 *)(v167 + *(int *)(v168 + 28));
    if (v169 == 7)
    {
      v407 = v76;
      v170 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304);
      uint64_t v171 = *(void *)(v1 + 1120);
      uint64_t v172 = *(void *)(v1 + 1112);
      uint64_t v173 = *(void *)(v1 + 1016);
      uint64_t v174 = *(void *)(v1 + 872);
      uint64_t v175 = *(void *)(v1 + 720);
      sub_2523E7604(*(void *)(v1 + 968));
      sub_2523FDEEC(v175, v174, type metadata accessor for EventQuery);
      v170(v172, v171, v173);
      v176 = sub_25247A680();
      os_log_type_t v177 = sub_25247AD30();
      if (os_log_type_enabled(v176, v177))
      {
        uint64_t v442 = *(void *)(v1 + 1112);
        uint64_t v178 = *(void *)(v1 + 1016);
        uint64_t v492 = *(void *)(v1 + 968);
        uint64_t v501 = *(void *)(v1 + 1024);
        uint64_t v448 = *(void *)(v1 + 888);
        uint64_t v475 = *(void *)(v1 + 880);
        uint64_t v179 = *(void *)(v1 + 872);
        uint64_t v180 = swift_slowAlloc();
        uint64_t v460 = swift_slowAlloc();
        v513[0] = v460;
        *(_DWORD *)uint64_t v180 = 136315394;
        sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
        uint64_t v181 = sub_25247B200();
        *(void *)(v1 + 640) = sub_25245DA98(v181, v182, v513);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        sub_2523FE440(v179, type metadata accessor for EventQuery);
        *(_WORD *)(v180 + 12) = 2080;
        uint64_t v183 = sub_25247B200();
        *(void *)(v1 + 648) = sub_25245DA98(v183, v184, v513);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        v502 = *(void (**)(uint64_t, uint64_t))(v501 + 8);
        v502(v442, v178);
        _os_log_impl(&dword_2523CF000, v176, v177, "[%s] Ignoring fake record: %s", (uint8_t *)v180, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v460, -1, -1);
        MEMORY[0x2533B5DC0](v180, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v448 + 8))(v492, v475);
      }
      else
      {
        uint64_t v203 = *(void *)(v1 + 1112);
        uint64_t v204 = *(void *)(v1 + 1024);
        uint64_t v205 = *(void *)(v1 + 1016);
        uint64_t v206 = *(void *)(v1 + 968);
        uint64_t v207 = *(void *)(v1 + 888);
        uint64_t v208 = *(void *)(v1 + 880);
        sub_2523FE440(*(void *)(v1 + 872), type metadata accessor for EventQuery);
        v502 = *(void (**)(uint64_t, uint64_t))(v204 + 8);
        v502(v203, v205);

        (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v206, v208);
      }
      v476 = *(void (**)(uint64_t, uint64_t))(v1 + 1336);
      v209 = *(void (**)(uint64_t, void, uint64_t))(v1 + 1304);
      v210 = *(void **)(v1 + 1296);
      uint64_t v444 = *(void *)(v1 + 1152);
      uint64_t v450 = *(void *)(v1 + 1168);
      uint64_t v462 = *(void *)(v1 + 1120);
      uint64_t v211 = *(void *)(v1 + 1104);
      uint64_t v212 = *(void *)(v1 + 1016);
      uint64_t v213 = *(void *)(v1 + 1000);
      v209(v211, *(void *)(v1 + 720) + *(int *)(v1 + 1384), v212);
      v214 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
      v215 = objc_allocWithZone(v214);
      v209((uint64_t)&v215[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v211, v212);
      v215[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 16;
      *(void *)&v215[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
      *(void *)&v215[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
      *(void *)&v215[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
      *(void *)(v1 + 328) = v215;
      *(void *)(v1 + 336) = v214;
      id v216 = objc_msgSendSuper2((objc_super *)(v1 + 328), sel_init);
      v502(v211, v212);
      objc_msgSend(v210, sel_submitLogEvent_, v216);

      sub_2523FE440(v213, type metadata accessor for EventRecord);
      v476(v450, v444);
      v502(v462, v212);
      goto LABEL_30;
    }
    v200 = (uint64_t *)(*(void *)(v1 + 1000) + *(int *)(*(void *)(v1 + 976) + 32));
    uint64_t v201 = *v200;
    uint64_t v202 = v200[1];
    *(unsigned char *)(v1 + 1389) = v169;
    sub_25243D130(v201, v202, (unsigned char *)(v1 + 1389));
    uint64_t v217 = *(void *)(v1 + 776);
    v405 = v76;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v218 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304);
      uint64_t v219 = *(void *)(v1 + 1120);
      uint64_t v220 = *(void *)(v1 + 1088);
      uint64_t v221 = *(void *)(v1 + 1016);
      uint64_t v222 = *(void *)(v1 + 1000);
      uint64_t v223 = *(void *)(v1 + 984);
      uint64_t v224 = *(void *)(v1 + 856);
      uint64_t v225 = *(void *)(v1 + 720);
      sub_2523E7604(*(void *)(v1 + 952));
      sub_2523FDEEC(v225, v224, type metadata accessor for EventQuery);
      sub_2523FDEEC(v222, v223, type metadata accessor for EventRecord);
      v218(v220, v219, v221);
      v226 = sub_25247A680();
      os_log_type_t v227 = sub_25247AD40();
      if (os_log_type_enabled(v226, v227))
      {
        uint64_t v445 = *(void *)(v1 + 1024);
        uint64_t v408 = *(void *)(v1 + 1016);
        uint64_t v410 = *(void *)(v1 + 984);
        uint64_t v228 = *(void *)(v1 + 976);
        uint64_t v463 = *(void *)(v1 + 888);
        uint64_t v477 = *(void *)(v1 + 880);
        uint64_t v493 = *(void *)(v1 + 952);
        uint64_t v416 = *(void *)(v1 + 1088);
        uint64_t v229 = *(void *)(v1 + 856);
        uint64_t v230 = swift_slowAlloc();
        uint64_t v426 = swift_slowAlloc();
        v513[0] = v426;
        *(_DWORD *)uint64_t v230 = 136446722;
        sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
        uint64_t v231 = sub_25247B200();
        *(void *)(v1 + 600) = sub_25245DA98(v231, v232, v513);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        sub_2523FE440(v229, type metadata accessor for EventQuery);
        *(_WORD *)(v230 + 12) = 2080;
        *(unsigned char *)(v1 + 1388) = *(unsigned char *)(v410 + *(int *)(v228 + 28));
        uint64_t v233 = sub_25247A890();
        *(void *)(v1 + 616) = sub_25245DA98(v233, v234, v513);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        sub_2523FE440(v410, type metadata accessor for EventRecord);
        *(_WORD *)(v230 + 22) = 2080;
        uint64_t v235 = sub_25247B200();
        *(void *)(v1 + 624) = sub_25245DA98(v235, v236, v513);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        v237 = *(void (**)(uint64_t, uint64_t))(v445 + 8);
        v237(v416, v408);
        _os_log_impl(&dword_2523CF000, v226, v227, "[%{public}s] Ignoring fake record that had mismatched dataType (%s): %s", (uint8_t *)v230, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v426, -1, -1);
        MEMORY[0x2533B5DC0](v230, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v463 + 8))(v493, v477);
      }
      else
      {
        uint64_t v256 = *(void *)(v1 + 1088);
        uint64_t v257 = *(void *)(v1 + 1024);
        uint64_t v258 = *(void *)(v1 + 1016);
        uint64_t v259 = *(void *)(v1 + 984);
        uint64_t v260 = *(void *)(v1 + 952);
        uint64_t v261 = *(void *)(v1 + 888);
        uint64_t v262 = *(void *)(v1 + 880);
        sub_2523FE440(*(void *)(v1 + 856), type metadata accessor for EventQuery);
        sub_2523FE440(v259, type metadata accessor for EventRecord);
        v237 = *(void (**)(uint64_t, uint64_t))(v257 + 8);
        v237(v256, v258);

        (*(void (**)(uint64_t, uint64_t))(v261 + 8))(v260, v262);
      }
      v263 = *(void (**)(uint64_t, void, uint64_t))(v1 + 1304);
      v264 = *(void **)(v1 + 1296);
      uint64_t v446 = *(void *)(v1 + 1152);
      uint64_t v452 = *(void *)(v1 + 1168);
      uint64_t v478 = *(void *)(v1 + 1120);
      v494 = *(void (**)(uint64_t, uint64_t))(v1 + 1336);
      uint64_t v265 = *(void *)(v1 + 1104);
      uint64_t v266 = *(void *)(v1 + 1016);
      uint64_t v435 = *(void *)(v1 + 1000);
      uint64_t v466 = *(void *)(v1 + 776);
      v263(v265, *(void *)(v1 + 720) + *(int *)(v1 + 1384), v266);
      v267 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
      v268 = objc_allocWithZone(v267);
      v263((uint64_t)&v268[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v265, v266);
      v268[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 16;
      *(void *)&v268[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
      *(void *)&v268[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
      *(void *)&v268[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
      *(void *)(v1 + 232) = v268;
      *(void *)(v1 + 240) = v267;
      id v269 = objc_msgSendSuper2((objc_super *)(v1 + 232), sel_init);
      v237(v265, v266);
      objc_msgSend(v264, sel_submitLogEvent_, v269);

      sub_2523FE440(v435, type metadata accessor for EventRecord);
      v494(v452, v446);
      v237(v478, v266);
      sub_2523FE440(v466, type metadata accessor for EventRecord.DecodedEvent);
      goto LABEL_30;
    }
    uint64_t v238 = *(void *)(v1 + 792);
    uint64_t v239 = *(void *)(v1 + 784);
    uint64_t v506 = *(void *)(v1 + 720) + *(int *)(v1 + 1384);
    sub_252407EEC(v217, v239, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    sub_2523FDEEC(v239, v238, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    SomeEvent.anyEvent.getter((uint64_t *)(v1 + 56));
    sub_2523FE440(v239, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    char v240 = sub_2523F739C(v506, (void *)(v1 + 56));
    v507 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304);
    uint64_t v241 = *(void *)(v1 + 1120);
    uint64_t v464 = *(void *)(v1 + 1016);
    uint64_t v242 = *(void *)(v1 + 720);
    uint64_t v439 = v1 + 56;
    if ((v240 & 1) == 0)
    {
      uint64_t v270 = *(void *)(v1 + 1080);
      uint64_t v271 = *(void *)(v1 + 848);
      sub_2523E7604(*(void *)(v1 + 944));
      sub_2523FDEEC(v242, v271, type metadata accessor for EventQuery);
      v507(v270, v241, v464);
      sub_2523D918C(v1 + 56, v1 + 16);
      v272 = sub_25247A680();
      os_log_type_t v273 = sub_25247AD20();
      if (os_log_type_enabled(v272, v273))
      {
        uint64_t v509 = *(void *)(v1 + 1080);
        uint64_t v274 = *(void *)(v1 + 1024);
        uint64_t v275 = *(void *)(v1 + 1016);
        uint64_t v467 = *(void *)(v1 + 888);
        uint64_t v479 = *(void *)(v1 + 880);
        uint64_t v495 = *(void *)(v1 + 944);
        uint64_t v276 = *(void *)(v1 + 848);
        uint64_t v277 = swift_slowAlloc();
        uint64_t v427 = swift_slowAlloc();
        v513[0] = v427;
        *(_DWORD *)uint64_t v277 = 136446722;
        sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
        uint64_t v278 = sub_25247B200();
        *(void *)(v1 + 488) = sub_25245DA98(v278, v279, v513);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        sub_2523FE440(v276, type metadata accessor for EventQuery);
        *(_WORD *)(v277 + 12) = 2082;
        uint64_t v280 = v509;
        uint64_t v281 = sub_25247B200();
        *(void *)(v1 + 496) = sub_25245DA98(v281, v282, v513);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        v510 = *(void (**)(uint64_t, uint64_t))(v274 + 8);
        v510(v280, v275);
        *(_WORD *)(v277 + 22) = 2080;
        sub_2523D918C(v1 + 16, v1 + 96);
        __swift_project_boxed_opaque_existential_1((void *)(v1 + 96), *(void *)(v1 + 120));
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t v284 = *(void *)(v1 + 128);
        __swift_destroy_boxed_opaque_existential_1(v1 + 96);
        *(void *)(v1 + 312) = DynamicType;
        *(void *)(v1 + 320) = v284;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269C04AD0);
        uint64_t v285 = sub_25247A890();
        *(void *)(v1 + 520) = sub_25245DA98(v285, v286, v513);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(v1 + 16);
        _os_log_impl(&dword_2523CF000, v272, v273, "[%{public}s] Ignoring record that does not match query: %{public}s, %s", (uint8_t *)v277, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v427, -1, -1);
        MEMORY[0x2533B5DC0](v277, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v467 + 8))(v495, v479);
      }
      else
      {
        uint64_t v314 = *(void *)(v1 + 1080);
        uint64_t v315 = *(void *)(v1 + 1024);
        uint64_t v316 = *(void *)(v1 + 1016);
        uint64_t v317 = *(void *)(v1 + 944);
        uint64_t v318 = *(void *)(v1 + 888);
        uint64_t v319 = *(void *)(v1 + 880);
        sub_2523FE440(*(void *)(v1 + 848), type metadata accessor for EventQuery);
        v510 = *(void (**)(uint64_t, uint64_t))(v315 + 8);
        v510(v314, v316);
        __swift_destroy_boxed_opaque_existential_1(v1 + 16);

        (*(void (**)(uint64_t, uint64_t))(v318 + 8))(v317, v319);
      }
      v481 = *(void (**)(uint64_t, uint64_t))(v1 + 1336);
      v320 = *(void (**)(uint64_t, void, uint64_t))(v1 + 1304);
      v321 = *(void **)(v1 + 1296);
      uint64_t v454 = *(void *)(v1 + 1168);
      uint64_t v468 = *(void *)(v1 + 1120);
      uint64_t v322 = *(void *)(v1 + 1104);
      uint64_t v323 = *(void *)(v1 + 1016);
      uint64_t v428 = *(void *)(v1 + 1000);
      uint64_t v436 = *(void *)(v1 + 1152);
      uint64_t v324 = *(void *)(v1 + 792);
      v320(v322, *(void *)(v1 + 720) + *(int *)(v1 + 1384), v323);
      v325 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
      v326 = objc_allocWithZone(v325);
      v320((uint64_t)&v326[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v322, v323);
      v326[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 17;
      *(void *)&v326[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
      *(void *)&v326[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
      *(void *)&v326[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
      *(void *)(v1 + 360) = v326;
      *(void *)(v1 + 368) = v325;
      id v327 = objc_msgSendSuper2((objc_super *)(v1 + 360), sel_init);
      v510(v322, v323);
      objc_msgSend(v321, sel_submitLogEvent_, v327);

      __swift_destroy_boxed_opaque_existential_1(v439);
      sub_2523FE440(v324, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      sub_2523FE440(v428, type metadata accessor for EventRecord);
      v481(v454, v436);
      v510(v468, v323);
      goto LABEL_30;
    }
    uint64_t v433 = *(void *)(v1 + 1072);
    uint64_t v243 = *(void *)(v1 + 840);
    sub_2523E7604(*(void *)(v1 + 936));
    sub_2523FDEEC(v242, v243, type metadata accessor for EventQuery);
    v507(v433, v241, v464);
    uint64_t v465 = v1 + 136;
    sub_2523D918C(v1 + 56, v1 + 136);
    v244 = sub_25247A680();
    os_log_type_t v245 = sub_25247AD20();
    v508 = v244;
    if (os_log_type_enabled(v244, v245))
    {
      uint64_t v402 = *(void *)(v1 + 1072);
      uint64_t v403 = *(void *)(v1 + 1024);
      uint64_t v397 = *(void *)(v1 + 1016);
      uint64_t v451 = *(void *)(v1 + 936);
      uint64_t v421 = *(void *)(v1 + 888);
      uint64_t v434 = *(void *)(v1 + 880);
      uint64_t v399 = *(void *)(v1 + 840);
      uint64_t v246 = swift_slowAlloc();
      uint64_t v417 = swift_slowAlloc();
      v513[0] = v417;
      *(_DWORD *)uint64_t v246 = 136446722;
      os_log_type_t v412 = v245;
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v247 = sub_25247B200();
      *(void *)(v1 + 552) = sub_25245DA98(v247, v248, v513);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523FE440(v399, type metadata accessor for EventQuery);
      *(_WORD *)(v246 + 12) = 2082;
      uint64_t v249 = sub_25247B200();
      *(void *)(v1 + 560) = sub_25245DA98(v249, v250, v513);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      v486 = *(void (**)(uint64_t, uint64_t))(v403 + 8);
      v486(v402, v397);
      *(_WORD *)(v246 + 22) = 2080;
      sub_2523D918C(v465, v1 + 176);
      __swift_project_boxed_opaque_existential_1((void *)(v1 + 176), *(void *)(v1 + 200));
      uint64_t v251 = swift_getDynamicType();
      uint64_t v252 = *(void *)(v1 + 208);
      __swift_destroy_boxed_opaque_existential_1(v1 + 176);
      *(void *)(v1 + 248) = v251;
      *(void *)(v1 + 256) = v252;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C04AD0);
      uint64_t v253 = sub_25247A890();
      *(void *)(v1 + 584) = sub_25245DA98(v253, v254, v513);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v465);
      _os_log_impl(&dword_2523CF000, v244, v412, "[%{public}s] Record contains an event that matches query: %{public}s: %s", (uint8_t *)v246, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v417, -1, -1);
      MEMORY[0x2533B5DC0](v246, -1, -1);

      v255 = *(void (**)(uint64_t, uint64_t))(v421 + 8);
      v255(v451, v434);
    }
    else
    {
      uint64_t v287 = *(void *)(v1 + 1072);
      uint64_t v288 = *(void *)(v1 + 1024);
      uint64_t v289 = *(void *)(v1 + 1016);
      uint64_t v290 = *(void *)(v1 + 936);
      uint64_t v291 = *(void *)(v1 + 888);
      uint64_t v292 = *(void *)(v1 + 880);
      sub_2523FE440(*(void *)(v1 + 840), type metadata accessor for EventQuery);
      v486 = *(void (**)(uint64_t, uint64_t))(v288 + 8);
      v486(v287, v289);
      __swift_destroy_boxed_opaque_existential_1(v465);

      v255 = *(void (**)(uint64_t, uint64_t))(v291 + 8);
      v255(v290, v292);
    }
    uint64_t v293 = *(void *)(v1 + 1240);
    uint64_t v294 = *(void *)(v1 + 1152);
    sub_2523D6F54(*(void *)(v1 + 1256), v293, &qword_269C04AC8);
    LODWORD(v294) = v73(v293, 1, v294);
    sub_2523D6FB8(v293, &qword_269C04AC8);
    if (v294 == 1)
    {
      v453 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 1320);
      v503 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304);
      uint64_t v295 = *(void *)(v1 + 1256);
      uint64_t v296 = *(void *)(v1 + 1168);
      uint64_t v297 = *(void *)(v1 + 1160);
      uint64_t v298 = *(void *)(v1 + 1152);
      uint64_t v299 = *(void *)(v1 + 1120);
      uint64_t v300 = *(void *)(v1 + 1016);
      uint64_t v480 = *(void *)(v1 + 792);
      uint64_t v301 = *(void *)(v1 + 760);
      uint64_t v302 = *(void *)(v1 + 728);
      sub_2523D6FB8(v295, &qword_269C04AC8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v297 + 16))(v295, v296, v298);
      v453(v295, 0, 1, v298);
      uint64_t v303 = v301 + *(int *)(v302 + 48);
      v503(v301, v299, v300);
      sub_2523FDEEC(v480, v303, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      unint64_t v304 = *(void *)(v1 + 472);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        unint64_t v304 = sub_25241DB54(0, *(void *)(v304 + 16) + 1, 1, v304);
        *(void *)uint64_t v2 = v304;
      }
      unint64_t v306 = *(void *)(v304 + 16);
      unint64_t v305 = *(void *)(v304 + 24);
      unint64_t v307 = v306 + 1;
      if (v306 >= v305 >> 1)
      {
        unint64_t v304 = sub_25241DB54(v305 > 1, v306 + 1, 1, v304);
        *(void *)uint64_t v2 = v304;
      }
      v308 = *(void (**)(uint64_t, uint64_t))(v1 + 1336);
      uint64_t v309 = *(void *)(v1 + 1168);
      uint64_t v310 = *(void *)(v1 + 1152);
      uint64_t v311 = *(void *)(v1 + 1000);
      uint64_t v312 = *(void *)(v1 + 792);
      uint64_t v313 = *(void *)(v1 + 760);
      goto LABEL_74;
    }
    v504 = (char *)v255;
    uint64_t v328 = *(void *)(v1 + 1232);
    uint64_t v329 = *(void *)(v1 + 1152);
    sub_2523D6F54(*(void *)(v1 + 1256), v328, &qword_269C04AC8);
    uint64_t v134 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v73)(v328, 1, v329);
    if (v134 == 1)
    {
      __break(1u);
      return MEMORY[0x270FA20F8](v134, v135, v136, v133, v137);
    }
    v330 = *(void (**)(uint64_t, uint64_t))(v1 + 1336);
    uint64_t v331 = *(void *)(v1 + 1232);
    uint64_t v332 = *(void *)(v1 + 1152);
    char v333 = sub_25247A480();
    v330(v331, v332);
    uint64_t v0 = *(void (**)(void))(v1 + 1304);
    if (v333)
    {
      uint64_t v334 = *(void *)(v1 + 792);
      uint64_t v335 = *(void *)(v1 + 752) + *(int *)(*(void *)(v1 + 728) + 48);
      v0();
      sub_2523FDEEC(v334, v335, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      unint64_t v304 = *(void *)(v1 + 472);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        unint64_t v304 = sub_25241DB54(0, *(void *)(v304 + 16) + 1, 1, v304);
        *(void *)uint64_t v2 = v304;
      }
      unint64_t v306 = *(void *)(v304 + 16);
      unint64_t v336 = *(void *)(v304 + 24);
      unint64_t v307 = v306 + 1;
      if (v306 >= v336 >> 1)
      {
        unint64_t v304 = sub_25241DB54(v336 > 1, v306 + 1, 1, v304);
        *(void *)uint64_t v2 = v304;
      }
      v308 = *(void (**)(uint64_t, uint64_t))(v1 + 1336);
      uint64_t v309 = *(void *)(v1 + 1168);
      uint64_t v310 = *(void *)(v1 + 1152);
      uint64_t v311 = *(void *)(v1 + 1000);
      uint64_t v312 = *(void *)(v1 + 792);
      uint64_t v313 = *(void *)(v1 + 752);
LABEL_74:
      uint64_t v337 = *(void *)(v1 + 736);
      *(void *)(v304 + 16) = v307;
      sub_252408294(v313, v304+ ((*(unsigned __int8 *)(v337 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v337 + 80))+ *(void *)(v337 + 72) * v306, (uint64_t *)&unk_269C04AB8);

      __swift_destroy_boxed_opaque_existential_1(v439);
      sub_2523FE440(v312, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      sub_2523FE440(v311, type metadata accessor for EventRecord);
      v308(v309, v310);
      uint64_t v131 = *(void (**)(void, void))(v1 + 1352);
LABEL_75:
      v486(*(void *)(v1 + 1120), *(void *)(v1 + 1016));
      goto LABEL_31;
    }
LABEL_77:
    char v338 = *(unsigned char *)(v1 + 1390);
    ((void (*)(void, void, void))v0)(*(void *)(v1 + 1064), *(void *)(v1 + 720) + *(int *)(v1 + 1384), *(void *)(v1 + 1016));
    uint64_t v339 = swift_bridgeObjectRetain();
    v340 = (void *)sub_2524489E4(v339);
    swift_bridgeObjectRelease();
    if (v338) {
      goto LABEL_81;
    }
    uint64_t v341 = *(void *)(v1 + 1352);
    uint64_t v342 = *(void *)(v1 + 704);
    uint64_t v343 = v342 - v341;
    if (__OFSUB__(v342, v341))
    {
      __break(1u);
LABEL_81:
      uint64_t v343 = *(void *)(v1 + 704);
      uint64_t v341 = *(void *)(v1 + 1352);
    }
    uint64_t v3 = v486;
    uint64_t v344 = *(void *)(v1 + 1256);
    v345 = *(NSObject **)(v1 + 1064);
    uint64_t v346 = *(void *)(v1 + 1016);
    unint64_t v347 = sub_2523F92C8(v345, v340, v343, *(unsigned char *)(v1 + 1390) & 1, *(void *)(v1 + 712));
    char v482 = v348;
    swift_bridgeObjectRelease();
    v486((uint64_t)v345, v346);
    sub_2523D6FB8(v344, &qword_269C04AC8);
    BOOL v32 = __OFADD__(v341, v347);
    v349 = (char *)(v341 + v347);
    if (v32)
    {
      __break(1u);
      goto LABEL_100;
    }
    (*(void (**)(void, uint64_t, uint64_t, void))(v1 + 1320))(*(void *)(v1 + 1256), 1, 1, *(void *)(v1 + 1152));
    uint64_t v350 = *(void *)(v1 + 472);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      sub_252407F54(0, *(void *)(v350 + 16));
    }
    else
    {
      *(void *)uint64_t v2 = sub_2523FEE50(0, *(void *)(v350 + 24) >> 1);
      swift_bridgeObjectRelease();
    }
    if ((*(unsigned char *)(v1 + 1390) & 1) == 0 && v349 == *(char **)(v1 + 704))
    {
      uint64_t v351 = *(void *)(v1 + 832);
      uint64_t v352 = *(void *)(v1 + 720);
      sub_2523E7604(*(void *)(v1 + 928));
      sub_2523FDEEC(v352, v351, type metadata accessor for EventQuery);
      uint64_t v26 = sub_25247A680();
      os_log_type_t v353 = sub_25247AD20();
      BOOL v354 = os_log_type_enabled(v26, v353);
      v486 = *(void (**)(uint64_t, uint64_t))(v1 + 1336);
      if (v354)
      {
        uint64_t v437 = *(void *)(v1 + 1216);
        uint64_t v469 = *(void *)(v1 + 1208);
        uint64_t v483 = *(void *)(v1 + 1224);
        uint64_t v418 = *(void *)(v1 + 1152);
        uint64_t v422 = *(void *)(v1 + 1168);
        uint64_t v455 = *(void *)(v1 + 1120);
        uint64_t v400 = *(void *)(v1 + 1016);
        uint64_t v409 = *(void *)(v1 + 928);
        uint64_t v355 = *(void *)(v1 + 832);
        uint64_t v411 = *(void *)(v1 + 792);
        uint64_t v413 = *(void *)(v1 + 1000);
        uint64_t v404 = *(void *)(v1 + 880);
        uint64_t v398 = *(void *)(v1 + 704);
        uint64_t v356 = swift_slowAlloc();
        uint64_t v357 = swift_slowAlloc();
        v513[0] = v357;
        *(_DWORD *)uint64_t v356 = 136446466;
        sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
        uint64_t v358 = sub_25247B200();
        *(void *)(v1 + 536) = sub_25245DA98(v358, v359, v513);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        sub_2523FE440(v355, type metadata accessor for EventQuery);
        *(_WORD *)(v356 + 12) = 2048;
        *(void *)(v1 + 544) = v398;
        sub_25247AEB0();
        _os_log_impl(&dword_2523CF000, v26, v353, "[%{public}s] Reached subquery limit: %ld", (uint8_t *)v356, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v357, -1, -1);
        MEMORY[0x2533B5DC0](v356, -1, -1);

        ((void (*)(uint64_t, uint64_t))v504)(v409, v404);
        __swift_destroy_boxed_opaque_existential_1(v439);
        sub_2523FE440(v411, (uint64_t (*)(void))type metadata accessor for SomeEvent);
        sub_2523FE440(v413, type metadata accessor for EventRecord);
        v486(v422, v418);
        v3(v455, v400);
        (*(void (**)(uint64_t, uint64_t))(v437 + 8))(v483, v469);
LABEL_97:
        v505 = *(NSObject **)(v1 + 704);
        goto LABEL_24;
      }
LABEL_96:
      uint64_t v378 = *(void *)(v1 + 1216);
      uint64_t v471 = *(void *)(v1 + 1208);
      uint64_t v484 = *(void *)(v1 + 1224);
      uint64_t v423 = *(void *)(v1 + 1152);
      uint64_t v430 = *(void *)(v1 + 1168);
      uint64_t v457 = *(void *)(v1 + 1120);
      uint64_t v438 = *(void *)(v1 + 1016);
      uint64_t v379 = *(void *)(v1 + 1000);
      uint64_t v380 = *(void *)(v1 + 928);
      uint64_t v381 = *(void *)(v1 + 880);
      uint64_t v382 = *(void *)(v1 + 832);
      uint64_t v383 = *(void *)(v1 + 792);

      sub_2523FE440(v382, type metadata accessor for EventQuery);
      ((void (*)(uint64_t, uint64_t))v504)(v380, v381);
      __swift_destroy_boxed_opaque_existential_1(v439);
      sub_2523FE440(v383, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      sub_2523FE440(v379, type metadata accessor for EventRecord);
      v486(v430, v423);
      v3(v457, v438);
      (*(void (**)(uint64_t, uint64_t))(v378 + 8))(v484, v471);
      goto LABEL_97;
    }
    v504 = v349;
    if (v482)
    {
      v429 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 1320);
      v470 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304);
      uint64_t v360 = *(void *)(v1 + 1256);
      uint64_t v361 = *(void *)(v1 + 1168);
      uint64_t v362 = *(void *)(v1 + 1160);
      uint64_t v363 = *(void *)(v1 + 1152);
      uint64_t v364 = *(void *)(v1 + 1120);
      uint64_t v365 = *(void *)(v1 + 1016);
      uint64_t v456 = *(void *)(v1 + 792);
      uint64_t v366 = *(void *)(v1 + 744);
      uint64_t v367 = *(void *)(v1 + 728);
      sub_2523D6FB8(v360, &qword_269C04AC8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v362 + 16))(v360, v361, v363);
      v429(v360, 0, 1, v363);
      uint64_t v368 = v366 + *(int *)(v367 + 48);
      v470(v366, v364, v365);
      sub_2523FDEEC(v456, v368, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      unint64_t v347 = *(void *)(v1 + 472);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
LABEL_92:
        unint64_t v370 = *(void *)(v347 + 16);
        unint64_t v369 = *(void *)(v347 + 24);
        if (v370 >= v369 >> 1)
        {
          unint64_t v347 = sub_25241DB54(v369 > 1, v370 + 1, 1, v347);
          *(void *)uint64_t v2 = v347;
        }
        v371 = *(void (**)(uint64_t, uint64_t))(v1 + 1336);
        uint64_t v372 = *(void *)(v1 + 1168);
        uint64_t v373 = *(void *)(v1 + 1152);
        uint64_t v374 = *(void *)(v1 + 1000);
        uint64_t v375 = *(void *)(v1 + 792);
        uint64_t v376 = *(void *)(v1 + 744);
        uint64_t v377 = *(void *)(v1 + 736);
        *(void *)(v347 + 16) = v370 + 1;
        sub_252408294(v376, v347+ ((*(unsigned __int8 *)(v377 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v377 + 80))+ *(void *)(v377 + 72) * v370, (uint64_t *)&unk_269C04AB8);

        __swift_destroy_boxed_opaque_existential_1(v439);
        sub_2523FE440(v375, (uint64_t (*)(void))type metadata accessor for SomeEvent);
        sub_2523FE440(v374, type metadata accessor for EventRecord);
        v371(v372, v373);
        uint64_t v131 = (void (*)(void, void))v504;
        goto LABEL_75;
      }
LABEL_100:
      unint64_t v347 = sub_25241DB54(0, *(void *)(v347 + 16) + 1, 1, v347);
      *(void *)uint64_t v2 = v347;
      goto LABEL_92;
    }
    v384 = *(void (**)(uint64_t, uint64_t))(v1 + 1336);
    uint64_t v511 = *(void *)(v1 + 1224);
    uint64_t v385 = *(void *)(v1 + 1216);
    uint64_t v485 = *(void *)(v1 + 1208);
    uint64_t v386 = *(void *)(v1 + 1168);
    uint64_t v387 = *(void *)(v1 + 1152);
    uint64_t v388 = *(void *)(v1 + 1120);
    uint64_t v389 = *(void *)(v1 + 1016);
    uint64_t v390 = *(void *)(v1 + 1000);
    uint64_t v391 = *(void *)(v1 + 792);

    __swift_destroy_boxed_opaque_existential_1(v439);
    sub_2523FE440(v391, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    sub_2523FE440(v390, type metadata accessor for EventRecord);
    v384(v386, v387);
    v486(v388, v389);
    v392 = *(void (**)(uint64_t, uint64_t))(v385 + 8);
    uint64_t v3 = (void (*)(uint64_t, uint64_t))(v385 + 8);
    v392(v511, v485);
    uint64_t v26 = v512;
    uint64_t v27 = v504;
LABEL_7:
    v512 = v26;
    if (!*(void *)(*(void *)v2 + 16)) {
      break;
    }
    char v28 = *(unsigned char *)(v1 + 1390);
    (*(void (**)(void, void, void))(v1 + 1304))(*(void *)(v1 + 1040), *(void *)(v1 + 720) + *(int *)(v1 + 1384), *(void *)(v1 + 1016));
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v30 = (void *)sub_2524489E4(v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = *(void *)(v1 + 704);
    if ((v28 & 1) == 0)
    {
      BOOL v32 = __OFSUB__(v31, v27);
      v31 -= (uint64_t)v27;
      if (v32)
      {
        __break(1u);
        goto LABEL_96;
      }
    }
    uint64_t v33 = *(NSObject **)(v1 + 1040);
    uint64_t v34 = *(void *)(v1 + 1024);
    uint64_t v35 = *(void *)(v1 + 1016);
    uint64_t v36 = sub_2523F92C8(v33, v30, v31, *(unsigned char *)(v1 + 1390) & 1, *(void *)(v1 + 712));
    swift_bridgeObjectRelease();
    uint64_t v37 = *(void (**)(NSObject *, uint64_t))(v34 + 8);
    uint64_t v2 = v34 + 8;
    v37(v33, v35);
    BOOL v32 = __OFADD__(v27, v36);
    uint64_t v5 = ((char *)v27 + v36);
    v505 = v5;
    if (!v32) {
      goto LABEL_25;
    }
    __break(1u);
  }
  v505 = v27;
LABEL_24:
  swift_bridgeObjectRelease();
LABEL_25:
  unint64_t v105 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304);
  id v393 = *(id *)(v1 + 1296);
  v394 = *(void **)(v1 + 1288);
  uint64_t v395 = *(void *)(v1 + 1256);
  uint64_t v396 = *(void *)(v1 + 1272);
  uint64_t v106 = *(void *)(v1 + 1104);
  uint64_t v107 = *(void *)(v1 + 1024);
  uint64_t v108 = *(void *)(v1 + 720) + *(int *)(v1 + 1384);
  uint64_t v109 = *(void *)(v1 + 1016);
  v105(v106, v108, v109);
  uint64_t v110 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
  unint64_t v111 = objc_allocWithZone(v110);
  v105((uint64_t)&v111[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v106, v109);
  v111[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 10;
  *(void *)&v111[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
  *(void *)&v111[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = v512;
  *(void *)&v111[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
  *(void *)(v1 + 296) = v111;
  *(void *)(v1 + 304) = v110;
  id v112 = objc_msgSendSuper2((objc_super *)(v1 + 296), sel_init);
  uint64_t v113 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
  v113(v106, v109);
  objc_msgSend(v393, sel_submitLogEvent_, v112);

  v105(v106, v108, v109);
  uint64_t v114 = objc_allocWithZone(v110);
  v105((uint64_t)&v114[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v106, v109);
  v114[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 12;
  *(void *)&v114[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = v505;
  *(void *)&v114[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
  *(void *)&v114[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
  *(void *)(v1 + 264) = v114;
  *(void *)(v1 + 272) = v110;
  id v115 = objc_msgSendSuper2((objc_super *)(v1 + 264), sel_init);
  v113(v106, v109);
  objc_msgSend(v393, sel_submitLogEvent_, v115);

  sub_2523D6FB8(v395, &qword_269C04AC8);
  sub_2523FE440(v396, (uint64_t (*)(void))type metadata accessor for CKQueryAsyncSequence);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v116 = *(uint64_t (**))(v1 + 8);
  return v116(v505);
}

uint64_t sub_2523F4590()
{
  uint64_t v1 = *(void *)(v0 + 1272);
  uint64_t v2 = *(void *)(v0 + 1256);
  uint64_t v3 = *(void *)(v0 + 1224);
  uint64_t v4 = *(void *)(v0 + 1216);
  uint64_t v5 = *(void *)(v0 + 1208);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_2523D6FB8(v2, &qword_269C04AC8);
  sub_2523FE440(v1, (uint64_t (*)(void))type metadata accessor for CKQueryAsyncSequence);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_2523F4938(uint64_t a1)
{
  v2[23] = a1;
  v2[24] = v1;
  v2[25] = type metadata accessor for EncryptionKeyQuery();
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  uint64_t v3 = sub_25247A540();
  v2[28] = v3;
  v2[29] = *(void *)(v3 - 8);
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  type metadata accessor for EventQuery(0);
  v2[36] = swift_task_alloc();
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  uint64_t v4 = sub_25247A6A0();
  v2[41] = v4;
  v2[42] = *(void *)(v4 - 8);
  v2[43] = swift_task_alloc();
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2523F4B5C, 0, 0);
}

uint64_t sub_2523F4B5C()
{
  uint64_t v1 = *(void **)(v0 + 192);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 192);
    uint64_t v5 = type metadata accessor for EventQuery.Configuration(0);
    *(void *)(v0 + 376) = v5;
    uint64_t v6 = *(int *)(v5 + 72);
    *(_DWORD *)(v0 + 448) = v6;
    uint64_t v7 = *(void *)(v4 + v6 + 24);
    uint64_t v8 = *(void *)(v4 + v6 + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v4 + v6), v7);
    uint64_t v9 = *(int *)(v5 + 28);
    *(_DWORD *)(v0 + 452) = v9;
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 32) + **(int **)(v8 + 32));
    uint64_t v10 = v4 + v9;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_2523F4DF0;
    return v14(v0 + 112, v10, v7, v8);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13(0);
  }
}

uint64_t sub_2523F4DF0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2523F4EEC, 0, 0);
}

uint64_t sub_2523F4EEC()
{
  uint64_t v82 = v0;
  uint64_t v1 = *(void *)(v0 + 112);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 320);
    uint64_t v3 = *(void *)(v0 + 192);
    sub_2523E7604(*(void *)(v0 + 368));
    sub_2523FDEEC(v3, v2, type metadata accessor for EventQuery);
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_25247A680();
    os_log_type_t v5 = sub_25247AD20();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v72 = *(void *)(v0 + 336);
      uint64_t v6 = *(void *)(v0 + 320);
      uint64_t v75 = *(void *)(v0 + 328);
      uint64_t v78 = *(void *)(v0 + 368);
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v81 = v8;
      *(_DWORD *)uint64_t v7 = 136446466;
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v9 = sub_25247B200();
      *(void *)(v0 + 168) = sub_25245DA98(v9, v10, &v81);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523FE440(v6, type metadata accessor for EventQuery);
      *(_WORD *)(v7 + 12) = 2048;
      uint64_t v11 = *(void *)(v1 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 176) = v11;
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2523CF000, v4, v5, "[%{public}s] Reusing %ld cached encryption key(s)", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v8, -1, -1);
      MEMORY[0x2533B5DC0](v7, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v78, v75);
    }
    else
    {
      uint64_t v30 = *(void *)(v0 + 368);
      uint64_t v32 = *(void *)(v0 + 328);
      uint64_t v31 = *(void *)(v0 + 336);
      uint64_t v33 = *(void *)(v0 + 320);
      swift_bridgeObjectRelease();
      sub_2523FE440(v33, type metadata accessor for EventQuery);
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v34 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v34(v1);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 360);
    uint64_t v13 = *(void *)(v0 + 312);
    uint64_t v15 = *(void *)(v0 + 272);
    uint64_t v14 = *(void *)(v0 + 280);
    uint64_t v16 = *(void *)(v0 + 224);
    uint64_t v17 = *(void *)(v0 + 232);
    uint64_t v18 = *(void *)(v0 + 192);
    sub_25247A530();
    sub_2523E7604(v12);
    sub_2523FDEEC(v18, v13, type metadata accessor for EventQuery);
    uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
    v79(v15, v14, v16);
    uint64_t v19 = sub_25247A680();
    os_log_type_t v20 = sub_25247AD20();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v69 = *(void *)(v0 + 336);
      uint64_t v73 = *(void *)(v0 + 328);
      uint64_t v76 = *(void *)(v0 + 360);
      uint64_t v21 = *(void *)(v0 + 312);
      uint64_t v64 = *(void *)(v0 + 272);
      uint64_t v22 = *(void *)(v0 + 224);
      uint64_t v65 = *(void *)(v0 + 232);
      uint64_t v23 = swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      uint64_t v81 = v67;
      *(_DWORD *)uint64_t v23 = 136446466;
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v24 = sub_25247B200();
      *(void *)(v0 + 152) = sub_25245DA98(v24, v25, &v81);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523FE440(v21, type metadata accessor for EventQuery);
      *(_WORD *)(v23 + 12) = 2082;
      uint64_t v26 = sub_25247B200();
      *(void *)(v0 + 160) = sub_25245DA98(v26, v27, &v81);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      char v28 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
      v28(v64, v22);
      _os_log_impl(&dword_2523CF000, v19, v20, "[%{public}s] Fetching encryption keys with query identifier %{public}s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v67, -1, -1);
      MEMORY[0x2533B5DC0](v23, -1, -1);

      uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
      v29(v76, v73);
    }
    else
    {
      uint64_t v36 = *(void *)(v0 + 360);
      uint64_t v37 = *(void *)(v0 + 328);
      uint64_t v38 = *(void *)(v0 + 336);
      uint64_t v39 = *(void *)(v0 + 272);
      uint64_t v40 = *(void *)(v0 + 224);
      uint64_t v41 = *(void *)(v0 + 232);
      sub_2523FE440(*(void *)(v0 + 312), type metadata accessor for EventQuery);
      char v28 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
      v28(v39, v40);

      uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      v29(v36, v37);
    }
    *(void *)(v0 + 392) = v29;
    *(void *)(v0 + 400) = v28;
    uint64_t v66 = *(void *)(v0 + 280);
    uint64_t v43 = *(void *)(v0 + 256);
    uint64_t v42 = *(void *)(v0 + 264);
    uint64_t v44 = *(void *)(v0 + 248);
    uint64_t v68 = *(void *)(v0 + 240);
    uint64_t v70 = *(void *)(v0 + 376);
    uint64_t v45 = *(void *)(v0 + 224);
    uint64_t v46 = *(void *)(v0 + 192);
    id v74 = *(void **)(v0 + 184);
    uint64_t v77 = v28;
    uint64_t v48 = *(int **)(v0 + 200);
    uint64_t v47 = *(void *)(v0 + 208);
    v79(v42, v46 + *(int *)(v0 + 452), v45);
    v79(v43, v66, v45);
    uint64_t v49 = (uint64_t *)(v46 + *(int *)(v70 + 60));
    uint64_t v71 = *v49;
    LOBYTE(v46) = *((unsigned char *)v49 + 8);
    v79(v44, v42, v45);
    v79(v68, v43, v45);
    v79(v47, v44, v45);
    v79(v47 + v48[5], v68, v45);
    uint64_t v50 = v47 + v48[6];
    *(void *)uint64_t v50 = 0;
    *(unsigned char *)(v50 + 8) = 1;
    uint64_t v51 = v47 + v48[7];
    *(void *)uint64_t v51 = v71;
    *(unsigned char *)(v51 + 8) = v46;
    uint64_t v52 = (void *)(v47 + v48[8]);
    v52[1] = 0;
    v52[2] = 0;
    void *v52 = v74;
    uint64_t v53 = qword_269C04350;
    id v54 = v74;
    if (v53 != -1) {
      swift_once();
    }
    uint64_t v55 = *(void *)(v0 + 256);
    uint64_t v80 = *(void *)(v0 + 264);
    uint64_t v56 = *(void *)(v0 + 240);
    uint64_t v57 = *(void *)(v0 + 248);
    uint64_t v58 = *(void *)(v0 + 224);
    uint64_t v60 = *(void *)(v0 + 208);
    uint64_t v59 = *(void *)(v0 + 216);
    uint64_t v61 = *(void *)(v0 + 200);
    uint64_t v62 = off_269C056F0;
    *(void *)(v0 + 408) = (*(void *)(v0 + 232) + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v77(v56, v58);
    v77(v57, v58);
    *(void *)(v60 + *(int *)(v61 + 36)) = v62[2];
    sub_252407EEC(v60, v59, (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    swift_unknownObjectRetain();
    v77(v55, v58);
    v77(v80, v58);
    uint64_t v63 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v63;
    *uint64_t v63 = v0;
    v63[1] = sub_2523F57E4;
    return EncryptionKeyQuery.fetchKeys()();
  }
}

uint64_t sub_2523F57E4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 424) = a1;
  *(void *)(v3 + 432) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_2523F64E8;
  }
  else {
    uint64_t v4 = sub_2523F58F8;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2523F58F8()
{
  uint64_t v72 = v0;
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 192);
  sub_2523E7604(*(void *)(v0 + 352));
  sub_2523FDEEC(v2, v1, type metadata accessor for EventQuery);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_25247A680();
  os_log_type_t v4 = sub_25247AD20();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void *)(v0 + 424);
    uint64_t v66 = *(void *)(v0 + 352);
    uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
    uint64_t v65 = *(void *)(v0 + 328);
    uint64_t v6 = *(void *)(v0 + 304);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v71[0] = v8;
    *(_DWORD *)uint64_t v7 = 136446466;
    sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
    uint64_t v9 = sub_25247B200();
    *(void *)(v0 + 136) = sub_25245DA98(v9, v10, v71);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    sub_2523FE440(v6, type metadata accessor for EventQuery);
    *(_WORD *)(v7 + 12) = 2048;
    uint64_t v11 = *(void *)(v5 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 144) = v11;
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2523CF000, v3, v4, "[%{public}s] Fetched %ld encryption key(s)", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v8, -1, -1);
    MEMORY[0x2533B5DC0](v7, -1, -1);

    v69(v66, v65);
  }
  else
  {
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
    uint64_t v13 = *(void *)(v0 + 352);
    uint64_t v14 = *(void *)(v0 + 328);
    uint64_t v15 = *(void *)(v0 + 304);
    swift_bridgeObjectRelease();
    sub_2523FE440(v15, type metadata accessor for EventQuery);
    swift_bridgeObjectRelease();

    v12(v13, v14);
  }
  uint64_t v16 = (uint64_t *)(v0 + 96);
  uint64_t v17 = *(void *)(v0 + 424);
  uint64_t v18 = *(void *)(v0 + 376);
  uint64_t v19 = *(void *)(v0 + 192);
  uint64_t v20 = swift_task_alloc();
  *(void *)(v20 + 16) = v19;
  unint64_t v21 = sub_252436754((void (*)(void))sub_2524082F8, v20, v17);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  *(void *)(v0 + 96) = v21;
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v23 = *(int *)(v18 + 68);
  if (*(void *)(v19 + v23) < v22)
  {
    uint64_t v25 = *(void *)(v0 + 288);
    uint64_t v24 = *(void *)(v0 + 296);
    uint64_t v26 = *(void *)(v0 + 192);
    sub_2523E7604(*(void *)(v0 + 344));
    sub_2523FDEEC(v26, v24, type metadata accessor for EventQuery);
    sub_2523FDEEC(v26, v25, type metadata accessor for EventQuery);
    unint64_t v27 = sub_25247A680();
    os_log_type_t v28 = sub_25247AD60();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
    if (v29)
    {
      uint64_t v63 = *(void *)(v0 + 328);
      uint64_t v64 = *(void *)(v0 + 344);
      uint64_t v30 = *(void *)(v0 + 296);
      uint64_t v61 = *(void *)(v0 + 288);
      uint64_t v31 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      v71[0] = v62;
      *(_DWORD *)uint64_t v31 = 136446722;
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v32 = sub_25247B200();
      *(void *)(v0 + 104) = sub_25245DA98(v32, v33, v71);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523FE440(v30, type metadata accessor for EventQuery);
      *(_WORD *)(v31 + 12) = 2048;
      swift_beginAccess();
      *(void *)(v0 + 120) = *(void *)(*(void *)(v0 + 96) + 16);
      sub_25247AEB0();
      *(_WORD *)(v31 + 22) = 2048;
      uint64_t v34 = *(void *)(v61 + *(int *)(v18 + 68));
      sub_2523FE440(v61, type metadata accessor for EventQuery);
      *(void *)(v0 + 128) = v34;
      sub_25247AEB0();
      _os_log_impl(&dword_2523CF000, v27, v28, "[%{public}s] Found %ld encryption keys, truncating to the most recent %ld", (uint8_t *)v31, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v62, -1, -1);
      uint64_t v35 = v31;
      uint64_t v16 = (uint64_t *)(v0 + 96);
      MEMORY[0x2533B5DC0](v35, -1, -1);

      uint64_t v36 = v63;
      uint64_t v37 = v64;
    }
    else
    {
      uint64_t v38 = *(void *)(v0 + 344);
      uint64_t v39 = *(void *)(v0 + 328);
      uint64_t v40 = *(void *)(v0 + 296);
      sub_2523FE440(*(void *)(v0 + 288), type metadata accessor for EventQuery);
      sub_2523FE440(v40, type metadata accessor for EventQuery);

      uint64_t v37 = v38;
      uint64_t v36 = v39;
    }
    v67(v37, v36);
    swift_beginAccess();
    uint64_t v41 = sub_2523E8858(*(void *)(v19 + v23), *v16, (uint64_t (*)(void))type metadata accessor for LubyRackoffEncryptionKey);
    uint64_t v43 = v42;
    uint64_t v45 = v44;
    unint64_t v47 = v46;
    if (v46)
    {
      sub_25247B270();
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v48 = swift_dynamicCastClass();
      if (!v48)
      {
        swift_unknownObjectRelease();
        uint64_t v48 = MEMORY[0x263F8EE78];
      }
      uint64_t v49 = *(void *)(v48 + 16);
      swift_release();
      if (__OFSUB__(v47 >> 1, v45))
      {
        __break(1u);
      }
      else if (v49 == (v47 >> 1) - v45)
      {
        unint64_t v21 = swift_dynamicCastClass();
        if (!v21)
        {
          swift_unknownObjectRelease();
          unint64_t v21 = MEMORY[0x263F8EE78];
        }
        goto LABEL_17;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    unint64_t v21 = sub_2523FEC08(v41, v43, v45, v47, &qword_269C04BF0, (uint64_t (*)(void))type metadata accessor for LubyRackoffEncryptionKey);
LABEL_17:
    swift_unknownObjectRelease();
    *uint64_t v16 = v21;
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void *)(v21 + 16);
  }
  if (v22)
  {
    uint64_t v50 = *(int *)(v0 + 452);
    uint64_t v51 = *(void *)(v0 + 192);
    uint64_t v52 = (void *)(v51 + *(int *)(v0 + 448));
    uint64_t v53 = v52[3];
    uint64_t v54 = v52[4];
    __swift_project_boxed_opaque_existential_1(v52, v53);
    *(void *)(v0 + 88) = v21;
    uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 + 48) + **(int **)(v54 + 48));
    uint64_t v55 = (void *)swift_task_alloc();
    *(void *)(v0 + 440) = v55;
    *uint64_t v55 = v0;
    v55[1] = sub_2523F6254;
    return v68(v0 + 88, v51 + v50, v53, v54);
  }
  else
  {
    uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v0 + 400);
    uint64_t v58 = *(void *)(v0 + 280);
    uint64_t v59 = *(void *)(v0 + 224);
    sub_2523FE440(*(void *)(v0 + 216), (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
    v57(v58, v59);
    swift_beginAccess();
    uint64_t v70 = *(void *)(v0 + 96);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v60 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v60(v70);
  }
}

uint64_t sub_2523F6254()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2523F6350, 0, 0);
}

uint64_t sub_2523F6350()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[50];
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[28];
  sub_2523FE440(v0[27], (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
  v1(v2, v3);
  swift_beginAccess();
  uint64_t v6 = v0[12];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v6);
}

uint64_t sub_2523F64E8()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[50];
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[28];
  sub_2523FE440(v0[27], (uint64_t (*)(void))type metadata accessor for EncryptionKeyQuery);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_2523F6668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for EventQuery(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25247A6A0();
  uint64_t v40 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04BF8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2523D918C(a1, (uint64_t)v43);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04770);
  uint64_t v15 = type metadata accessor for LubyRackoffEncryptionKey();
  char v16 = swift_dynamicCast();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  if (v16)
  {
    v17(v14, 0, 1, v15);
    sub_252407EEC((uint64_t)v14, a3, (uint64_t (*)(void))type metadata accessor for LubyRackoffEncryptionKey);
    uint64_t v18 = a3;
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v39 = a3;
    v17(v14, 1, 1, v15);
    sub_2523D6FB8((uint64_t)v14, (uint64_t *)&unk_269C04BF8);
    sub_2523E7604((uint64_t)v11);
    sub_2523FDEEC(a2, (uint64_t)v8, type metadata accessor for EventQuery);
    sub_2523D918C(a1, (uint64_t)v43);
    uint64_t v20 = sub_25247A680();
    os_log_type_t v21 = sub_25247AD20();
    int v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v38 = v17;
      uint64_t v24 = v23;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v44 = v37;
      *(_DWORD *)uint64_t v24 = 136446466;
      type metadata accessor for EventQuery.Configuration(0);
      sub_25247A540();
      int v36 = v22;
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v25 = sub_25247B200();
      uint64_t v42 = sub_25245DA98(v25, v26, &v44);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523FE440((uint64_t)v8, type metadata accessor for EventQuery);
      *(_WORD *)(v24 + 12) = 2080;
      uint64_t v35 = v24 + 14;
      unint64_t v27 = __swift_project_boxed_opaque_existential_1(v43, v43[3]);
      MEMORY[0x270FA5388](v27);
      (*(void (**)(char *))(v29 + 16))((char *)&v35 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      uint64_t v30 = sub_25247A890();
      uint64_t v42 = sub_25245DA98(v30, v31, &v44);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
      _os_log_impl(&dword_2523CF000, v20, (os_log_type_t)v36, "[%{public}s] Ignoring unknown encryption key type: %s", (uint8_t *)v24, 0x16u);
      uint64_t v32 = v37;
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v32, -1, -1);
      uint64_t v33 = v24;
      uint64_t v17 = v38;
      MEMORY[0x2533B5DC0](v33, -1, -1);
    }
    else
    {
      sub_2523FE440((uint64_t)v8, type metadata accessor for EventQuery);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    }

    (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v41);
    uint64_t v18 = v39;
    uint64_t v19 = 1;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(v18, v19, 1, v15);
}

uint64_t sub_2523F6B8C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a1;
  uint64_t v7 = type metadata accessor for EventQuery(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v48 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v48 - v14;
  uint64_t v16 = sub_25247A6A0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v50 = v16;
  uint64_t v51 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v48 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v48 - v24;
  if (a2)
  {
    sub_2523E7604((uint64_t)&v48 - v24);
    sub_2523FDEEC(a3, (uint64_t)v15, type metadata accessor for EventQuery);
    int v36 = sub_25247A680();
    os_log_type_t v37 = sub_25247AD30();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v53 = v39;
      *(_DWORD *)uint64_t v38 = 136315138;
      type metadata accessor for EventQuery.Configuration(0);
      sub_25247A540();
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v40 = sub_25247B200();
      uint64_t v52 = sub_25245DA98(v40, v41, &v53);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523FE440((uint64_t)v15, type metadata accessor for EventQuery);
      _os_log_impl(&dword_2523CF000, v36, v37, "[%s] Not imposing any subquery result limit because none was requested", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v39, -1, -1);
      MEMORY[0x2533B5DC0](v38, -1, -1);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v25, v50);
      return 0;
    }
    sub_2523FE440((uint64_t)v15, type metadata accessor for EventQuery);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v25, v50);
    return 0;
  }
  if (*(void *)(a3 + *(int *)(type metadata accessor for EventQuery.Configuration(0) + 36))
    && !*(void *)(a4 + 16))
  {
    sub_2523E7604((uint64_t)v23);
    sub_2523FDEEC(a3, (uint64_t)v13, type metadata accessor for EventQuery);
    uint64_t v42 = sub_25247A680();
    os_log_type_t v43 = sub_25247AD30();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v53 = v45;
      *(_DWORD *)uint64_t v44 = 136315138;
      sub_25247A540();
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v46 = sub_25247B200();
      uint64_t v52 = sub_25245DA98(v46, v47, &v53);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523FE440((uint64_t)v13, type metadata accessor for EventQuery);
      _os_log_impl(&dword_2523CF000, v42, v43, "[%s] Not imposing any subquery result limit because there are no tags to match against", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v45, -1, -1);
      MEMORY[0x2533B5DC0](v44, -1, -1);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v23, v50);
      return 0;
    }
    sub_2523FE440((uint64_t)v13, type metadata accessor for EventQuery);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v23, v50);
    return 0;
  }
  uint64_t result = sub_25247A020();
  if ((~*(void *)&v27 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v27 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v27 >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v28 = 4 * ((uint64_t)v27 / 3600) + 4;
  uint64_t v29 = v49 + v28;
  if (!__OFADD__(v49, v28))
  {
    sub_2523E7604((uint64_t)v20);
    sub_2523FDEEC(a3, (uint64_t)v10, type metadata accessor for EventQuery);
    uint64_t v30 = sub_25247A680();
    os_log_type_t v31 = sub_25247AD30();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v53 = v33;
      *(_DWORD *)uint64_t v32 = 136315650;
      sub_25247A540();
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v34 = sub_25247B200();
      uint64_t v52 = sub_25245DA98(v34, v35, &v53);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_2523FE440((uint64_t)v10, type metadata accessor for EventQuery);
      *(_WORD *)(v32 + 12) = 2048;
      uint64_t v52 = v49;
      sub_25247AEB0();
      *(_WORD *)(v32 + 22) = 2048;
      uint64_t v52 = v29;
      sub_25247AEB0();
      _os_log_impl(&dword_2523CF000, v30, v31, "[%s] Subquery is limiting result count to %ld, setting CKQuery limit to %ld to handle fake events", (uint8_t *)v32, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v33, -1, -1);
      MEMORY[0x2533B5DC0](v32, -1, -1);
    }
    else
    {
      sub_2523FE440((uint64_t)v10, type metadata accessor for EventQuery);
    }

    (*(void (**)(char *, uint64_t))(v51 + 8))(v20, v50);
    return v29;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_2523F739C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v294 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v268 = (uint64_t)&v255 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EventQuery(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v271 = (uint64_t)&v255 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v278 = (uint64_t)&v255 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v286 = (uint64_t)&v255 - v12;
  uint64_t v13 = sub_25247A4B0();
  os_log_t v298 = *(os_log_t *)(v13 - 8);
  uint64_t v299 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  os_log_type_t v273 = (char *)&v255 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v274 = (char *)&v255 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v277 = (char *)&v255 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v281 = (char *)&v255 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v287 = (char *)&v255 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v276 = (char *)&v255 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v280 = (char *)&v255 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v284 = (char *)&v255 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v285 = (char *)&v255 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v292 = (char *)&v255 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v296 = (char *)&v255 - v34;
  uint64_t v35 = sub_25247A6A0();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v289 = v35;
  uint64_t v290 = v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v263 = (uint64_t)&v255 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v269 = (uint64_t)&v255 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v272 = (uint64_t)&v255 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  unint64_t v279 = (char *)&v255 - v44;
  MEMORY[0x270FA5388](v43);
  uint64_t v293 = (uint64_t *)((char *)&v255 - v45);
  uint64_t v46 = sub_25247A540();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v262 = (char *)&v255 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v265 = (char *)&v255 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v266 = (char *)&v255 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  uint64_t v270 = (char *)&v255 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  uint64_t v275 = (char *)&v255 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  uint64_t v288 = (char *)&v255 - v59;
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  uint64_t v62 = (char *)&v255 - v61;
  MEMORY[0x270FA5388](v60);
  uint64_t v64 = (char *)&v255 - v63;
  uint64_t v66 = a2[3];
  uint64_t v65 = a2[4];
  uint64_t v297 = a2;
  __swift_project_boxed_opaque_existential_1(a2, v66);
  (*(void (**)(uint64_t, uint64_t))(v65 + 40))(v66, v65);
  uint64_t v67 = (int *)type metadata accessor for EventQuery.Configuration(0);
  uint64_t v68 = v67[7];
  uint64_t v295 = v3;
  uint64_t v69 = v3 + v68;
  uint64_t v70 = v47;
  uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
  uint64_t v72 = v47 + 16;
  uint64_t v71 = v73;
  v73(v62, v69, v46);
  uint64_t v264 = sub_2523FE554(&qword_269C04AE0, MEMORY[0x263F07508]);
  LOBYTE(a2) = sub_25247A820();
  uint64_t v267 = v70;
  uint64_t v75 = *(void (**)(char *, uint64_t))(v70 + 8);
  uint64_t v74 = v70 + 8;
  v75(v62, v46);
  uint64_t v291 = v75;
  v75(v64, v46);
  if ((a2 & 1) == 0)
  {
    sub_2523E7604((uint64_t)v293);
    uint64_t v99 = v288;
    v71(v288, v294, v46);
    sub_2523D918C((uint64_t)v297, (uint64_t)v315);
    uint64_t v100 = sub_25247A680();
    os_log_type_t v101 = sub_25247AD30();
    int v102 = v101;
    if (os_log_type_enabled(v100, v101))
    {
      uint64_t v103 = swift_slowAlloc();
      uint64_t v282 = v74;
      uint64_t v104 = v103;
      uint64_t v299 = swift_slowAlloc();
      v314[0] = v299;
      *(_DWORD *)uint64_t v104 = 136315394;
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      os_log_t v298 = v100;
      uint64_t v105 = sub_25247B200();
      uint64_t v310 = sub_25245DA98(v105, v106, v314);
      LODWORD(v297) = v102;
      uint64_t v296 = (char *)&v311;
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      uint64_t v107 = v291;
      v291(v99, v46);
      *(_WORD *)(v104 + 12) = 2080;
      uint64_t v295 = v104 + 14;
      uint64_t v109 = v316;
      uint64_t v108 = v317;
      __swift_project_boxed_opaque_existential_1(v315, v316);
      (*(void (**)(uint64_t, uint64_t))(v108 + 40))(v109, v108);
      uint64_t v110 = sub_25247B200();
      unint64_t v112 = v111;
      v107(v64, v46);
      uint64_t v310 = sub_25245DA98(v110, v112, v314);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v315);
      os_log_t v113 = v298;
      _os_log_impl(&dword_2523CF000, v298, (os_log_type_t)v297, "[%s] Failed to match home identifier: %s", (uint8_t *)v104, 0x16u);
      uint64_t v114 = v299;
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v114, -1, -1);
      MEMORY[0x2533B5DC0](v104, -1, -1);
    }
    else
    {
      v291(v99, v46);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v315);
    }
    (*(void (**)(uint64_t *, uint64_t))(v290 + 8))(v293, v289);
    return 0;
  }
  uint64_t v260 = v72;
  uint64_t v261 = v71;
  uint64_t v259 = v46;
  uint64_t v76 = v295;
  uint64_t v77 = v296;
  uint64_t v78 = v295 + v67[8];
  uint64_t v256 = v64;
  uint64_t v257 = v78;
  sub_25247A010();
  LODWORD(v78) = *(unsigned __int8 *)(v76 + v67[13]);
  uint64_t v79 = v297;
  sub_2523D918C((uint64_t)v297, (uint64_t)v315);
  os_log_t v80 = v298;
  uint64_t v81 = v299;
  Class isa = v298[2].isa;
  os_log_t v283 = v298 + 2;
  ((void (*)(char *, char *, uint64_t))isa)(v292, v77, v299);
  uint64_t v288 = (char *)isa;
  uint64_t v282 = v74;
  uint64_t v258 = v67;
  if (v78 == 1)
  {
    uint64_t v83 = v316;
    uint64_t v84 = v317;
    __swift_project_boxed_opaque_existential_1(v315, v316);
    id v85 = v285;
    (*(void (**)(uint64_t, uint64_t))(v84 + 32))(v83, v84);
    sub_2523FE554(&qword_269C04B08, MEMORY[0x263F07490]);
    uint64_t v86 = v292;
    char v87 = sub_25247A810();
    uint64_t v88 = (uint64_t)v79;
    uint64_t v89 = v76;
    uint64_t v90 = v81;
    Class v91 = v298[1].isa;
    ((void (*)(char *, uint64_t))v91)(v85, v90);
    ((void (*)(char *, uint64_t))v91)(v86, v90);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v315);
    uint64_t v92 = v286;
    sub_2523FDEEC(v89, v286, type metadata accessor for EventQuery);
    sub_2523D918C(v88, (uint64_t)v314);
    uint64_t v93 = v284;
    uint64_t v94 = v296;
    ((void (*)(char *, char *, uint64_t))v288)(v284, v296, v90);
    if ((v87 & 1) == 0)
    {
      ((void (*)(char *, uint64_t))v91)(v93, v299);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v314);
      sub_2523FE440(v92, type metadata accessor for EventQuery);
      uint64_t v95 = (uint64_t *)v91;
      uint64_t v127 = v276;
      uint64_t v126 = (uint64_t)v279;
      goto LABEL_21;
    }
    uint64_t v95 = (uint64_t *)v91;
    uint64_t v97 = v287;
    uint64_t v96 = (void (*)(char *, char *, uint64_t))v288;
    unint64_t v98 = v258;
  }
  else
  {
    unint64_t v98 = v67;
    uint64_t v95 = (uint64_t *)v80[1].isa;
    ((void (*)(char *, uint64_t))v95)(v292, v81);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v315);
    uint64_t v92 = v286;
    sub_2523FDEEC(v76, v286, type metadata accessor for EventQuery);
    sub_2523D918C((uint64_t)v79, (uint64_t)v314);
    uint64_t v93 = v284;
    uint64_t v96 = (void (*)(char *, char *, uint64_t))v288;
    ((void (*)(char *, char *, uint64_t))v288)(v284, v296, v81);
    uint64_t v97 = v287;
  }
  char v115 = *(unsigned char *)(v92 + v98[13]);
  sub_2523D918C((uint64_t)v314, (uint64_t)&v310);
  uint64_t v116 = v280;
  v96(v280, v93, v299);
  uint64_t v293 = v95;
  if (v115)
  {
    uint64_t v117 = v299;
    ((void (*)(char *, uint64_t))v95)(v116, v299);
    ((void (*)(char *, uint64_t))v95)(v93, v117);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v314);
    sub_2523FE440(v92, type metadata accessor for EventQuery);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v310);
    uint64_t v118 = v281;
    goto LABEL_14;
  }
  uint64_t v119 = v312;
  uint64_t v120 = v313;
  uint64_t v121 = v299;
  __swift_project_boxed_opaque_existential_1(&v310, v312);
  uint64_t v122 = v98;
  uint64_t v123 = v285;
  (*(void (**)(uint64_t, uint64_t))(v120 + 32))(v119, v120);
  char v124 = sub_25247A460();
  BOOL v125 = v123;
  unint64_t v98 = v122;
  ((void (*)(char *, uint64_t))v293)(v125, v121);
  ((void (*)(char *, uint64_t))v293)(v116, v121);
  ((void (*)(char *, uint64_t))v293)(v93, v121);
  uint64_t v95 = v293;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v314);
  sub_2523FE440(v286, type metadata accessor for EventQuery);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v310);
  uint64_t v118 = v281;
  if ((v124 & 1) == 0)
  {
LABEL_14:
    sub_252479FF0();
    uint64_t v128 = v295;
    int v129 = *(unsigned __int8 *)(v295 + v98[14]);
    id v130 = v297;
    sub_2523D918C((uint64_t)v297, (uint64_t)&v310);
    uint64_t v131 = (void (*)(char *, char *, uint64_t))v288;
    ((void (*)(char *, char *, uint64_t))v288)(v118, v97, v299);
    if (v129 == 1)
    {
      uint64_t v132 = (uint64_t)v130;
      uint64_t v133 = v312;
      uint64_t v134 = v313;
      __swift_project_boxed_opaque_existential_1(&v310, v312);
      uint64_t v135 = *(void (**)(uint64_t, uint64_t))(v134 + 32);
      uint64_t v136 = v285;
      uint64_t v137 = v134;
      uint64_t v95 = v293;
      v135(v133, v137);
      sub_2523FE554(&qword_269C04B08, MEMORY[0x263F07490]);
      uint64_t v138 = v299;
      LODWORD(v292) = sub_25247A810();
      ((void (*)(char *, uint64_t))v95)(v136, v138);
      ((void (*)(char *, uint64_t))v95)(v118, v138);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v310);
      uint64_t v139 = v278;
      sub_2523FDEEC(v295, v278, type metadata accessor for EventQuery);
      sub_2523D918C(v132, (uint64_t)v309);
      uint64_t v140 = v277;
      v131(v277, v97, v138);
      if ((v292 & 1) == 0)
      {
        ((void (*)(char *, uint64_t))v95)(v140, v299);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v309);
        sub_2523FE440(v139, type metadata accessor for EventQuery);
LABEL_25:
        uint64_t v175 = v272;
        sub_2523E7604(v272);
        v176 = v270;
        uint64_t v177 = v259;
        v261(v270, v294, v259);
        uint64_t v178 = v273;
        uint64_t v179 = v287;
        ((void (*)(char *, char *, uint64_t))v288)(v273, v287, v299);
        uint64_t v180 = sub_25247A680();
        os_log_type_t v181 = sub_25247AD30();
        int v182 = v181;
        if (os_log_type_enabled(v180, v181))
        {
          uint64_t v183 = swift_slowAlloc();
          uint64_t v184 = swift_slowAlloc();
          uint64_t v185 = v299;
          uint64_t v186 = v184;
          uint64_t v310 = v184;
          *(_DWORD *)uint64_t v183 = 136315394;
          sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
          LODWORD(v297) = v182;
          uint64_t v187 = sub_25247B200();
          v309[0] = sub_25245DA98(v187, v188, &v310);
          sub_25247AEB0();
          swift_bridgeObjectRelease();
          v291(v176, v177);
          *(_WORD *)(v183 + 12) = 2080;
          sub_2523FE554(&qword_269C04B00, MEMORY[0x263F07490]);
          uint64_t v189 = v273;
          uint64_t v190 = sub_25247B200();
          v309[0] = sub_25245DA98(v190, v191, &v310);
          sub_25247AEB0();
          swift_bridgeObjectRelease();
          v192 = v189;
          uint64_t v161 = v293;
          ((void (*)(char *, uint64_t))v293)(v192, v185);
          _os_log_impl(&dword_2523CF000, v180, (os_log_type_t)v297, "[%s] Failed to match end date: %s", (uint8_t *)v183, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533B5DC0](v186, -1, -1);
          MEMORY[0x2533B5DC0](v183, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v290 + 8))(v272, v289);
          ((void (*)(char *, uint64_t))v161)(v287, v185);
          uint64_t v162 = v296;
          uint64_t v163 = v185;
          goto LABEL_27;
        }

        uint64_t v164 = v299;
        ((void (*)(char *, uint64_t))v95)(v178, v299);
        v291(v176, v177);
        (*(void (**)(uint64_t, uint64_t))(v290 + 8))(v175, v289);
        id v199 = v179;
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v141 = v299;
      ((void (*)(char *, uint64_t))v95)(v118, v299);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v310);
      uint64_t v139 = v278;
      sub_2523FDEEC(v128, v278, type metadata accessor for EventQuery);
      sub_2523D918C((uint64_t)v130, (uint64_t)v309);
      uint64_t v140 = v277;
      v131(v277, v97, v141);
    }
    char v142 = *(unsigned char *)(v139 + v258[14]);
    sub_2523D918C((uint64_t)v309, (uint64_t)v306);
    uint64_t v143 = v274;
    v131(v274, v140, v299);
    if (v142)
    {
      uint64_t v144 = v143;
      uint64_t v145 = v299;
      ((void (*)(char *, uint64_t))v95)(v144, v299);
      ((void (*)(char *, uint64_t))v95)(v140, v145);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v309);
      sub_2523FE440(v139, type metadata accessor for EventQuery);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v306);
    }
    else
    {
      id v166 = v140;
      uint64_t v167 = v143;
      uint64_t v168 = v307;
      uint64_t v169 = v308;
      __swift_project_boxed_opaque_existential_1(v306, v307);
      v170 = *(void (**)(uint64_t, uint64_t))(v169 + 32);
      uint64_t v171 = v285;
      uint64_t v172 = v169;
      uint64_t v95 = v293;
      v170(v168, v172);
      char v173 = sub_25247A450();
      uint64_t v174 = v299;
      ((void (*)(char *, uint64_t))v95)(v171, v299);
      ((void (*)(char *, uint64_t))v95)(v167, v174);
      ((void (*)(char *, uint64_t))v95)(v166, v174);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v309);
      sub_2523FE440(v139, type metadata accessor for EventQuery);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v306);
      if (v173) {
        goto LABEL_25;
      }
    }
    v193 = v258;
    uint64_t v194 = v295;
    uint64_t v195 = *(void *)(v295 + v258[10]);
    uint64_t v196 = v271;
    sub_2523FDEEC(v295, v271, type metadata accessor for EventQuery);
    if (v195)
    {
      swift_bridgeObjectRetain();
      sub_2523FE440(v196, type metadata accessor for EventQuery);
      uint64_t v197 = v294;
      v198 = v261;
    }
    else
    {
      uint64_t v195 = *(void *)(v196 + v193[9]);
      swift_bridgeObjectRetain();
      sub_2523FE440(v196, type metadata accessor for EventQuery);
      uint64_t v197 = v294;
      v198 = v261;
      if (!v195) {
        goto LABEL_33;
      }
    }
    uint64_t v200 = v297[3];
    uint64_t v201 = v297[4];
    __swift_project_boxed_opaque_existential_1(v297, v200);
    uint64_t v202 = v200;
    uint64_t v95 = v293;
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v201 + 48))(v306, v202, v201);
    BOOL v203 = sub_2523EDEEC(v306[0], v195);
    swift_bridgeObjectRelease();
    if (!v203)
    {
      uint64_t v209 = v269;
      sub_2523E7604(v269);
      v210 = v266;
      uint64_t v211 = v259;
      v198(v266, v197, v259);
      sub_2523D918C((uint64_t)v297, (uint64_t)&v310);
      uint64_t v212 = sub_25247A680();
      os_log_type_t v213 = sub_25247AD30();
      if (os_log_type_enabled(v212, v213))
      {
        uint64_t v214 = swift_slowAlloc();
        uint64_t v215 = swift_slowAlloc();
        v309[0] = v215;
        *(_DWORD *)uint64_t v214 = 136315394;
        sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
        uint64_t v216 = sub_25247B200();
        v306[0] = sub_25245DA98(v216, v217, v309);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        v291(v210, v211);
        *(_WORD *)(v214 + 12) = 2080;
        uint64_t v218 = v312;
        uint64_t v219 = v313;
        __swift_project_boxed_opaque_existential_1(&v310, v312);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v219 + 48))(v306, v218, v219);
        uint64_t v220 = sub_25247A890();
        v306[0] = sub_25245DA98(v220, v221, v309);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v310);
        _os_log_impl(&dword_2523CF000, v212, v213, "[%s] Failed to match category: %s", (uint8_t *)v214, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v215, -1, -1);
        MEMORY[0x2533B5DC0](v214, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v290 + 8))(v269, v289);
        uint64_t v222 = v299;
        uint64_t v223 = v293;
        ((void (*)(char *, uint64_t))v293)(v287, v299);
        ((void (*)(char *, uint64_t))v223)(v296, v222);
        return 0;
      }

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v310);
      v291(v210, v211);
      (*(void (**)(uint64_t, uint64_t))(v290 + 8))(v209, v289);
      uint64_t v164 = v299;
      id v199 = v287;
LABEL_42:
      ((void (*)(char *, uint64_t))v95)(v199, v164);
      v165 = v296;
      goto LABEL_43;
    }
LABEL_33:
    uint64_t v204 = v268;
    sub_2523D6F54(v194 + v193[11], v268, (uint64_t *)&unk_269C047F0);
    uint64_t v205 = v267;
    uint64_t v206 = v259;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v267 + 48))(v204, 1, v259) == 1)
    {
      uint64_t v207 = v299;
      ((void (*)(char *, uint64_t))v95)(v287, v299);
      ((void (*)(char *, uint64_t))v95)(v296, v207);
      sub_2523D6FB8(v204, (uint64_t *)&unk_269C047F0);
    }
    else
    {
      uint64_t v224 = v265;
      (*(void (**)(char *, uint64_t, uint64_t))(v205 + 32))(v265, v204, v206);
      sub_2523D918C((uint64_t)v297, (uint64_t)v303);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C04AE8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C04AF0);
      if (!swift_dynamicCast())
      {
        uint64_t v302 = 0;
        memset(v301, 0, sizeof(v301));
        v291(v224, v206);
        uint64_t v233 = v299;
        ((void (*)(char *, uint64_t))v95)(v287, v299);
        ((void (*)(char *, uint64_t))v95)(v296, v233);
        sub_2523D6FB8((uint64_t)v301, &qword_269C04AF8);
        return 0;
      }
      sub_2523DFC24(v301, (uint64_t)v306);
      uint64_t v225 = v307;
      uint64_t v226 = v308;
      __swift_project_boxed_opaque_existential_1(v306, v307);
      os_log_type_t v227 = v256;
      (*(void (**)(uint64_t, uint64_t))(v226 + 32))(v225, v226);
      char v228 = sub_25247A820();
      uint64_t v229 = v224;
      uint64_t v230 = v291;
      v291(v227, v206);
      if ((v228 & 1) == 0)
      {
        uint64_t v234 = v263;
        sub_2523E7604(v263);
        uint64_t v235 = v262;
        v261(v262, v197, v206);
        sub_2523D918C((uint64_t)v306, (uint64_t)v303);
        unint64_t v236 = sub_25247A680();
        os_log_type_t v237 = sub_25247AD30();
        int v238 = v237;
        if (os_log_type_enabled(v236, v237))
        {
          uint64_t v239 = swift_slowAlloc();
          uint64_t v297 = (void *)swift_slowAlloc();
          *(void *)&v301[0] = v297;
          *(_DWORD *)uint64_t v239 = 136315394;
          uint64_t v295 = v239 + 4;
          sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
          uint64_t v240 = sub_25247B200();
          uint64_t v300 = sub_25245DA98(v240, v241, (uint64_t *)v301);
          sub_25247AEB0();
          swift_bridgeObjectRelease();
          v230(v235, v206);
          *(_WORD *)(v239 + 12) = 2080;
          uint64_t v294 = v239 + 14;
          LODWORD(v295) = v238;
          uint64_t v243 = v304;
          uint64_t v242 = v305;
          __swift_project_boxed_opaque_existential_1(v303, v304);
          v244 = v256;
          (*(void (**)(uint64_t, uint64_t))(v242 + 32))(v243, v242);
          uint64_t v245 = sub_25247B200();
          unint64_t v247 = v246;
          unint64_t v248 = v244;
          uint64_t v249 = v206;
          uint64_t v250 = v206;
          uint64_t v251 = v291;
          v291(v248, v249);
          uint64_t v300 = sub_25245DA98(v245, v247, (uint64_t *)v301);
          sub_25247AEB0();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v303);
          _os_log_impl(&dword_2523CF000, v236, (os_log_type_t)v295, "[%s] Failed to match accessory identifier: %s", (uint8_t *)v239, 0x16u);
          uint64_t v252 = v297;
          swift_arrayDestroy();
          MEMORY[0x2533B5DC0](v252, -1, -1);
          MEMORY[0x2533B5DC0](v239, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v290 + 8))(v263, v289);
          v251(v265, v250);
        }
        else
        {

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v303);
          v230(v235, v206);
          (*(void (**)(uint64_t, uint64_t))(v290 + 8))(v234, v289);
          v230(v265, v206);
        }
        uint64_t v253 = v299;
        unint64_t v254 = v293;
        ((void (*)(char *, uint64_t))v293)(v287, v299);
        ((void (*)(char *, uint64_t))v254)(v296, v253);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v306);
        return 0;
      }
      v230(v229, v206);
      uint64_t v231 = v299;
      unint64_t v232 = v293;
      ((void (*)(char *, uint64_t))v293)(v287, v299);
      ((void (*)(char *, uint64_t))v232)(v296, v231);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v306);
    }
    return 1;
  }
  uint64_t v94 = v296;
  uint64_t v126 = (uint64_t)v279;
  uint64_t v127 = v276;
LABEL_21:
  sub_2523E7604(v126);
  os_log_type_t v146 = v275;
  uint64_t v147 = v259;
  v261(v275, v294, v259);
  ((void (*)(char *, char *, uint64_t))v288)(v127, v94, v299);
  uint64_t v148 = sub_25247A680();
  os_log_type_t v149 = sub_25247AD30();
  int v150 = v149;
  if (!os_log_type_enabled(v148, v149))
  {

    uint64_t v164 = v299;
    ((void (*)(char *, uint64_t))v95)(v127, v299);
    v291(v146, v147);
    (*(void (**)(uint64_t, uint64_t))(v290 + 8))(v126, v289);
    v165 = v94;
LABEL_43:
    ((void (*)(char *, uint64_t))v95)(v165, v164);
    return 0;
  }
  uint64_t v151 = swift_slowAlloc();
  uint64_t v293 = v95;
  uint64_t v152 = v151;
  uint64_t v153 = swift_slowAlloc();
  v315[0] = v153;
  *(_DWORD *)uint64_t v152 = 136315394;
  sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
  LODWORD(v297) = v150;
  uint64_t v154 = sub_25247B200();
  v314[0] = sub_25245DA98(v154, v155, v315);
  sub_25247AEB0();
  swift_bridgeObjectRelease();
  v291(v146, v147);
  *(_WORD *)(v152 + 12) = 2080;
  sub_2523FE554(&qword_269C04B00, MEMORY[0x263F07490]);
  uint64_t v156 = v299;
  uint64_t v157 = sub_25247B200();
  v314[0] = sub_25245DA98(v157, v158, v315);
  sub_25247AEB0();
  swift_bridgeObjectRelease();
  uint64_t v159 = v156;
  uint64_t v160 = v156;
  uint64_t v161 = v293;
  ((void (*)(char *, uint64_t))v293)(v127, v159);
  _os_log_impl(&dword_2523CF000, v148, (os_log_type_t)v297, "[%s] Failed to match start date: %s", (uint8_t *)v152, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x2533B5DC0](v153, -1, -1);
  MEMORY[0x2533B5DC0](v152, -1, -1);

  (*(void (**)(char *, uint64_t))(v290 + 8))(v279, v289);
  uint64_t v162 = v296;
  uint64_t v163 = v160;
LABEL_27:
  ((void (*)(char *, uint64_t))v161)(v162, v163);
  return 0;
}

uint64_t sub_2523F92C8(NSObject *a1, void *a2, uint64_t a3, int a4, uint64_t a5)
{
  v228[1] = a5;
  int v206 = a4;
  uint64_t v198 = a3;
  os_log_t v240 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04B10);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v196 = (char *)&v192 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v204 = (char *)&v192 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v235 = (uint64_t *)((char *)&v192 - v14);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v192 - v15;
  uint64_t v212 = type metadata accessor for SomeAccessoryEvent();
  uint64_t v17 = MEMORY[0x270FA5388](v212);
  uint64_t v227 = (uint64_t)&v192 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v226 = (uint64_t)&v192 - v19;
  uint64_t v248 = sub_25247A540();
  uint64_t v20 = *(void *)(v248 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v248);
  BOOL v203 = (char *)&v192 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v193 = (char *)&v192 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v215 = ((char *)&v192 - v26);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v192 - v28;
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v197 = (char *)&v192 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v225 = (char *)&v192 - v32;
  uint64_t v242 = sub_25247A6A0();
  unint64_t v247 = *(char **)(v242 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v242);
  uint64_t v35 = (char *)&v192 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v33);
  unint64_t v217 = (char *)&v192 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v195 = (uint64_t)&v192 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v201 = (uint64_t)&v192 - v41;
  MEMORY[0x270FA5388](v40);
  os_log_type_t v237 = (char *)&v192 - v42;
  uint64_t v192 = type metadata accessor for SomeEvent();
  uint64_t v43 = MEMORY[0x270FA5388](v192);
  v228[0] = (char *)&v192 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v232 = (uint64_t)&v192 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v211 = (uint64_t)&v192 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v236 = (uint64_t)&v192 - v50;
  MEMORY[0x270FA5388](v49);
  uint64_t v249 = (uint64_t)&v192 - v51;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04B18);
  uint64_t v53 = MEMORY[0x270FA5388](v52 - 8);
  uint64_t v233 = (char *)&v192 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v53);
  uint64_t v56 = (char *)&v192 - v55;
  unint64_t v254 = a2;
  swift_bridgeObjectRetain();
  sub_2523FEF48(&v254);
  uint64_t v57 = v254;
  uint64_t v58 = type metadata accessor for EventQuery.Configuration(0);
  uint64_t v234 = 0;
  uint64_t v213 = v58;
  uint64_t v59 = *(int *)(v58 + 64);
  uint64_t v216 = v5;
  id v214 = *(id *)(v5 + v59);
  unint64_t v246 = (void (**)(char *, os_log_t, uint64_t))(v20 + 16);
  uint64_t v60 = 0;
  uint64_t v245 = (char **)(v20 + 8);
  unint64_t v241 = (void (**)(char *, uint64_t))(v247 + 8);
  uint64_t v224 = (void (**)(uint64_t *, char *, uint64_t))(v8 + 16);
  uint64_t v223 = (uint64_t (**)(uint64_t *, uint64_t))(v8 + 88);
  uint64_t v218 = v57;
  uint64_t v61 = (void *)v57[2];
  uint64_t v229 = (void (**)(char *, uint64_t))(v8 + 8);
  int v222 = *MEMORY[0x263F8F668];
  id v199 = &v251;
  v210 = (void (**)(uint64_t *, uint64_t))(v8 + 96);
  int v209 = *MEMORY[0x263F8F660];
  int v205 = *MEMORY[0x263F8F658];
  *(void *)&long long v62 = 136315394;
  long long v208 = v62;
  uint64_t v207 = MEMORY[0x263F8EE58] + 8;
  *(void *)&long long v62 = 136446466;
  long long v200 = v62;
  uint64_t v238 = v7;
  uint64_t v231 = v16;
  uint64_t v230 = v56;
  uint64_t v194 = v29;
  uint64_t v219 = v35;
  uint64_t v63 = (uint64_t)v237;
  for (i = v61; ; uint64_t v61 = i)
  {
    uint64_t v65 = (uint64_t)v233;
    if (v60 == v61)
    {
      uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04760);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v65, 1, 1, v66);
      v244 = v61;
    }
    else
    {
      if ((unint64_t)v60 >= v218[2])
      {
        __break(1u);
LABEL_49:
        __break(1u);
        swift_release();
        __break(1u);
        JUMPOUT(0x2523FB368);
      }
      uint64_t v67 = v218;
      uint64_t v68 = v60;
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04760);
      uint64_t v70 = *(void *)(v69 - 8);
      sub_2523D6F54((uint64_t)v67+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(void *)(v70 + 72) * (void)v68, v65, &qword_269C04760);
      v244 = (void *)((char *)v68 + 1);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v65, 0, 1, v69);
    }
    sub_252408294(v65, (uint64_t)v56, (uint64_t *)&unk_269C04B18);
    uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04760);
    int v72 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v71 - 8) + 48))(v56, 1, v71);
    if (v72 == 1)
    {
      swift_release();
      return v234;
    }
    uint64_t v73 = v16;
    LODWORD(v221) = v72;
    uint64_t v74 = v7;
    uint64_t v75 = v249;
    sub_252407EEC((uint64_t)&v56[*(int *)(v71 + 48)], v249, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    sub_2523E7604(v63);
    uint64_t v76 = *v246;
    uint64_t v77 = v225;
    uint64_t v78 = v248;
    (*v246)(v225, v240, v248);
    uint64_t v79 = v75;
    uint64_t v80 = v236;
    sub_2523FDEEC(v79, v236, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    uint64_t v81 = sub_25247A680();
    os_log_type_t v82 = sub_25247AD30();
    BOOL v83 = os_log_type_enabled(v81, v82);
    uint64_t v243 = v76;
    if (v83)
    {
      uint64_t v84 = swift_slowAlloc();
      uint64_t v85 = swift_slowAlloc();
      uint64_t v257 = v85;
      *(_DWORD *)uint64_t v84 = v208;
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v86 = sub_25247B200();
      *(void *)(v84 + 4) = sub_25245DA98(v86, v87, &v257);
      swift_bridgeObjectRelease();
      unint64_t v247 = *v245;
      ((void (*)(char *, uint64_t))v247)(v77, v78);
      *(_WORD *)(v84 + 12) = 2080;
      uint64_t v88 = v80;
      uint64_t v89 = v211;
      sub_2523FDEEC(v88, v211, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      uint64_t v90 = v89;
      uint64_t v91 = v226;
      sub_252407EEC(v90, v226, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      sub_2523FDEEC(v91, v227, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v92 = v85;
          uint64_t v255 = type metadata accessor for DoorEvent();
          uint64_t v93 = sub_2523FE554(&qword_269C04B50, (void (*)(uint64_t))type metadata accessor for DoorEvent);
          uint64_t v94 = type metadata accessor for DoorEvent;
          break;
        case 2u:
          uint64_t v92 = v85;
          uint64_t v255 = type metadata accessor for GarageDoorEvent();
          uint64_t v93 = sub_2523FE554(&qword_269C04B48, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
          uint64_t v94 = type metadata accessor for GarageDoorEvent;
          break;
        case 3u:
          uint64_t v92 = v85;
          uint64_t v255 = type metadata accessor for LockEvent();
          uint64_t v93 = sub_2523FE554(&qword_269C04B40, (void (*)(uint64_t))type metadata accessor for LockEvent);
          uint64_t v94 = type metadata accessor for LockEvent;
          break;
        case 4u:
          uint64_t v92 = v85;
          uint64_t v255 = type metadata accessor for SecuritySystemEvent();
          uint64_t v93 = sub_2523FE554(&qword_269C04B38, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
          uint64_t v94 = type metadata accessor for SecuritySystemEvent;
          break;
        case 5u:
          uint64_t v92 = v85;
          uint64_t v255 = type metadata accessor for SmokeDetectorEvent();
          uint64_t v93 = sub_2523FE554(&qword_269C04B30, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
          uint64_t v94 = type metadata accessor for SmokeDetectorEvent;
          break;
        case 6u:
          uint64_t v92 = v85;
          uint64_t v255 = type metadata accessor for WindowEvent();
          uint64_t v93 = sub_2523FE554(&qword_269C04B28, (void (*)(uint64_t))type metadata accessor for WindowEvent);
          uint64_t v94 = type metadata accessor for WindowEvent;
          break;
        default:
          uint64_t v92 = v85;
          uint64_t v255 = type metadata accessor for ContactSensorEvent();
          uint64_t v93 = sub_2523FE554(&qword_269C04B58, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
          uint64_t v94 = type metadata accessor for ContactSensorEvent;
          break;
      }
      uint64_t v96 = v94;
      uint64_t v256 = v93;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v254);
      sub_252407EEC(v227, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v96);
      uint64_t v99 = v255;
      uint64_t v98 = v256;
      uint64_t v100 = __swift_project_boxed_opaque_existential_1(&v254, v255);
      uint64_t v252 = v99;
      uint64_t v253 = *(void *)(v98 + 16);
      os_log_type_t v101 = __swift_allocate_boxed_opaque_existential_1(&v250);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v99 - 8) + 16))(v101, v100, v99);
      sub_2523FE440(v226, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v254);
      uint64_t v103 = v252;
      uint64_t v102 = v253;
      uint64_t v104 = __swift_project_boxed_opaque_existential_1(&v250, v252);
      uint64_t v255 = v103;
      uint64_t v256 = *(void *)(v102 + 8);
      uint64_t v105 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v254);
      unint64_t v106 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v103 - 8) + 16);
      v106(v105, v104, v103);
      uint64_t v107 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v250);
      MEMORY[0x270FA5388](v107);
      v106((uint64_t *)((char *)&v192 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0)), v105, v103);
      uint64_t v109 = sub_25247A890();
      unint64_t v111 = v110;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v254);
      *(void *)(v84 + 14) = sub_25245DA98(v109, v111, &v257);
      swift_bridgeObjectRelease();
      sub_2523FE440(v236, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      _os_log_impl(&dword_2523CF000, v81, v82, "[%s] Emitting matching event: %s", (uint8_t *)v84, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v92, -1, -1);
      MEMORY[0x2533B5DC0](v84, -1, -1);

      uint64_t v239 = *v241;
      v239(v237, v242);
      uint64_t v7 = v238;
      uint64_t v16 = v231;
      uint64_t v95 = v235;
      uint64_t v76 = v243;
    }
    else
    {
      unint64_t v247 = *v245;
      ((void (*)(char *, uint64_t))v247)(v77, v78);
      sub_2523FE440(v80, (uint64_t (*)(void))type metadata accessor for SomeEvent);

      uint64_t v239 = *v241;
      v239((char *)v63, v242);
      uint64_t v95 = v235;
      uint64_t v7 = v74;
      uint64_t v16 = v73;
    }
    sub_2523FDEEC(v249, v232, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05230);
    sub_25247ABE0();
    unint64_t v112 = *v224;
    (*v224)(v95, v16, v7);
    int v113 = (*v223)(v95, v7);
    uint64_t v114 = v228[0];
    if (v113 == v222)
    {
      (*v210)(v95, v7);
      uint64_t v115 = *v95;
      if (*v95 > 99)
      {
        (*v229)(v16, v7);
        sub_2523FE440(v249, (uint64_t (*)(void))type metadata accessor for SomeEvent);
        uint64_t v126 = (void (*)(char *, uint64_t))v247;
      }
      else
      {
        uint64_t v116 = v201;
        sub_2523E7604(v201);
        uint64_t v117 = v197;
        uint64_t v118 = v248;
        v76(v197, v240, v248);
        uint64_t v119 = sub_25247A680();
        os_log_type_t v120 = sub_25247AD20();
        if (os_log_type_enabled(v119, v120))
        {
          uint64_t v121 = swift_slowAlloc();
          uint64_t v122 = (void *)swift_slowAlloc();
          unint64_t v254 = v122;
          *(_DWORD *)uint64_t v121 = v200;
          sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
          uint64_t v123 = sub_25247B200();
          uint64_t v250 = sub_25245DA98(v123, v124, (uint64_t *)&v254);
          sub_25247AEB0();
          swift_bridgeObjectRelease();
          BOOL v125 = v117;
          uint64_t v126 = (void (*)(char *, uint64_t))v247;
          ((void (*)(char *, uint64_t))v247)(v125, v118);
          *(_WORD *)(v121 + 12) = 2048;
          uint64_t v250 = v115;
          sub_25247AEB0();
          _os_log_impl(&dword_2523CF000, v119, v120, "[%{public}s] Running out of queue space, %ld slots left", (uint8_t *)v121, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533B5DC0](v122, -1, -1);
          uint64_t v127 = v121;
          uint64_t v7 = v238;
          MEMORY[0x2533B5DC0](v127, -1, -1);

          uint64_t v128 = v201;
        }
        else
        {

          uint64_t v151 = v117;
          uint64_t v126 = (void (*)(char *, uint64_t))v247;
          ((void (*)(char *, uint64_t))v247)(v151, v118);
          uint64_t v128 = v116;
        }
        v239((char *)v128, v242);
        uint64_t v16 = v231;
        (*v229)(v231, v7);
        sub_2523FE440(v249, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      }
      uint64_t v63 = (uint64_t)v237;
      uint64_t v56 = v230;
      uint64_t v60 = v244;
      if (__OFADD__(v234, 1)) {
        goto LABEL_49;
      }
      if ((v206 & 1) == 0 && v234 + 1 == v198)
      {
        swift_release();
        v126(v56, v248);
        p_super_class = (Class *)v228;
        return (uint64_t)*(p_super_class - 32);
      }
      ++v234;
      uint64_t v64 = v248;
      goto LABEL_3;
    }
    uint64_t v129 = (uint64_t)v217;
    if (v113 == v209) {
      break;
    }
    if (v113 == v205)
    {
      swift_release();
      sub_2523E7604(v129);
      uint64_t v169 = v193;
      uint64_t v170 = v248;
      v76(v193, v240, v248);
      uint64_t v171 = sub_25247A680();
      os_log_type_t v172 = sub_25247AD20();
      if (os_log_type_enabled(v171, v172))
      {
        char v173 = v76;
        uint64_t v174 = (uint8_t *)swift_slowAlloc();
        uint64_t v175 = (void *)swift_slowAlloc();
        unint64_t v254 = v175;
        *(_DWORD *)uint64_t v174 = 136446210;
        sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
        uint64_t v176 = sub_25247B200();
        uint64_t v250 = sub_25245DA98(v176, v177, (uint64_t *)&v254);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        uint64_t v178 = (void (*)(NSObject *, uint64_t))v247;
        ((void (*)(char *, uint64_t))v247)(v169, v170);
        _os_log_impl(&dword_2523CF000, v171, v172, "[%{public}s] Yield indicated that the stream is terminated", v174, 0xCu);
        swift_arrayDestroy();
        uint64_t v179 = v175;
        uint64_t v16 = v231;
        MEMORY[0x2533B5DC0](v179, -1, -1);
        uint64_t v180 = v174;
        uint64_t v76 = v173;
        MEMORY[0x2533B5DC0](v180, -1, -1);

        os_log_type_t v181 = v217;
      }
      else
      {
        uint64_t v178 = (void (*)(NSObject *, uint64_t))v247;
        ((void (*)(char *, uint64_t))v247)(v169, v170);

        os_log_type_t v181 = (char *)v129;
      }
      v239(v181, v242);
      unint64_t v188 = v215;
      v76((char *)v215, (os_log_t)(v216 + *(int *)(v213 + 24)), v170);
      uint64_t v189 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
      uint64_t v190 = objc_allocWithZone(v189);
      v76(&v190[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v188, v170);
      v190[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 5;
      *(void *)&v190[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
      *(void *)&v190[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
      *(void *)&v190[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
      v259.receiver = v190;
      v259.super_class = v189;
      id v191 = [&v259 init];
      v178(v188, v170);
      objc_msgSend(v214, sel_submitLogEvent_, v191);

      (*v229)(v16, v238);
      sub_2523FE440(v249, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      v178(v230, v170);
      goto LABEL_46;
    }
    uint64_t v130 = (uint64_t)v219;
    sub_2523E7604((uint64_t)v219);
    uint64_t v131 = v203;
    uint64_t v64 = v248;
    v76(v203, v240, v248);
    uint64_t v132 = v204;
    v112((uint64_t *)v204, v16, v7);
    uint64_t v133 = sub_25247A680();
    os_log_type_t v134 = sub_25247AD50();
    os_log_t v221 = v133;
    if (os_log_type_enabled(v133, v134))
    {
      uint64_t v135 = swift_slowAlloc();
      uint64_t v202 = (void *)swift_slowAlloc();
      unint64_t v254 = v202;
      *(_DWORD *)uint64_t v135 = v200;
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v136 = sub_25247B200();
      uint64_t v250 = sub_25245DA98(v136, v137, (uint64_t *)&v254);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v247)(v131, v248);
      *(_WORD *)(v135 + 12) = 2082;
      uint64_t v138 = v238;
      v112((uint64_t *)v196, v132, v238);
      uint64_t v139 = sub_25247A890();
      uint64_t v250 = sub_25245DA98(v139, v140, (uint64_t *)&v254);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      uint64_t v141 = *v229;
      (*v229)(v132, v138);
      os_log_t v142 = v221;
      _os_log_impl(&dword_2523CF000, v221, v134, "[%{public}s] Yield result not handled: %{public}s", (uint8_t *)v135, 0x16u);
      uint64_t v143 = v202;
      swift_arrayDestroy();
      uint64_t v16 = v231;
      MEMORY[0x2533B5DC0](v143, -1, -1);
      uint64_t v144 = v135;
      uint64_t v64 = v248;
      MEMORY[0x2533B5DC0](v144, -1, -1);

      uint64_t v145 = (uint64_t)v219;
    }
    else
    {
      ((void (*)(char *, uint64_t))v247)(v131, v64);
      uint64_t v141 = *v229;
      (*v229)(v132, v238);

      uint64_t v145 = v130;
    }
    v239((char *)v145, v242);
    os_log_type_t v146 = v215;
    uint64_t v147 = v243;
    v243((char *)v215, (os_log_t)(v216 + *(int *)(v213 + 24)), v64);
    uint64_t v148 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
    os_log_type_t v149 = objc_allocWithZone(v148);
    v147(&v149[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v146, v64);
    v149[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 6;
    *(void *)&v149[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
    *(void *)&v149[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
    *(void *)&v149[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
    v260.receiver = v149;
    v260.super_class = v148;
    id v150 = [&v260 init];
    uint64_t v126 = (void (*)(char *, uint64_t))v247;
    ((void (*)(NSObject *, uint64_t))v247)(v146, v64);
    objc_msgSend(v214, sel_submitLogEvent_, v150);

    uint64_t v7 = v238;
    v141(v16, v238);
    sub_2523FE440(v249, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    v141((char *)v235, v7);
    uint64_t v56 = v230;
    uint64_t v63 = (uint64_t)v237;
    uint64_t v60 = v244;
LABEL_3:
    v126(v56, v64);
  }
  swift_release();
  uint64_t v154 = v195;
  sub_2523E7604(v195);
  unint64_t v155 = v194;
  uint64_t v156 = v248;
  v76(v194, v240, v248);
  sub_2523FDEEC(v249, v114, (uint64_t (*)(void))type metadata accessor for SomeEvent);
  uint64_t v157 = sub_25247A680();
  os_log_type_t v158 = sub_25247AD40();
  int v159 = v158;
  if (os_log_type_enabled(v157, v158))
  {
    uint64_t v160 = swift_slowAlloc();
    v244 = (void *)swift_slowAlloc();
    unint64_t v254 = v244;
    *(_DWORD *)uint64_t v160 = v200;
    sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
    os_log_t v240 = v157;
    uint64_t v161 = sub_25247B200();
    uint64_t v250 = sub_25245DA98(v161, v162, (uint64_t *)&v254);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    LODWORD(v237) = v159;
    uint64_t v163 = (void (*)(NSObject *, uint64_t))v247;
    ((void (*)(char *, uint64_t))v247)(v155, v156);
    *(_WORD *)(v160 + 12) = 2080;
    sub_2523FDEEC(v114, v232, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    uint64_t v164 = sub_25247A890();
    uint64_t v250 = sub_25245DA98(v164, v165, (uint64_t *)&v254);
    uint64_t v76 = v243;
    sub_25247AEB0();
    uint64_t v16 = v231;
    swift_bridgeObjectRelease();
    sub_2523FE440(v114, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    os_log_t v166 = v240;
    _os_log_impl(&dword_2523CF000, v240, (os_log_type_t)v237, "[%{public}s] Yield dropped event: %s", (uint8_t *)v160, 0x16u);
    uint64_t v167 = v244;
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v167, -1, -1);
    uint64_t v168 = v160;
    uint64_t v95 = v235;
    MEMORY[0x2533B5DC0](v168, -1, -1);
  }
  else
  {
    uint64_t v163 = (void (*)(NSObject *, uint64_t))v247;
    ((void (*)(char *, uint64_t))v247)(v155, v156);
    sub_2523FE440(v114, (uint64_t (*)(void))type metadata accessor for SomeEvent);
  }
  v239((char *)v154, v242);
  int v182 = v215;
  v76((char *)v215, (os_log_t)(v216 + *(int *)(v213 + 24)), v156);
  uint64_t v183 = (objc_class *)type metadata accessor for EventsAsyncSequenceLogEvent();
  uint64_t v184 = objc_allocWithZone(v183);
  v76(&v184[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_queryIdentifier], v182, v156);
  v184[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_state] = 4;
  *(void *)&v184[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_emittedEvents] = 0;
  *(void *)&v184[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_processedRecords] = 0;
  *(void *)&v184[OBJC_IVAR____TtC13HomeKitEvents27EventsAsyncSequenceLogEvent_cachedEvents] = 0;
  v258.receiver = v184;
  v258.super_class = v183;
  id v185 = [&v258 init];
  v163(v182, v156);
  objc_msgSend(v214, sel_submitLogEvent_, v185);

  uint64_t v186 = *v229;
  uint64_t v187 = v238;
  (*v229)(v16, v238);
  sub_2523FE440(v249, (uint64_t (*)(void))type metadata accessor for SomeEvent);
  v186((char *)v95, v187);
  v163(v230, v156);
LABEL_46:
  p_super_class = &v260.super_class;
  return (uint64_t)*(p_super_class - 32);
}

uint64_t static EventQuery.logCategory.getter()
{
  return 0x7972657551;
}

uint64_t sub_2523FB398()
{
  return 0x7972657551;
}

uint64_t sub_2523FB3AC(uint64_t a1)
{
  return sub_2523EA3C4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_2523FB3B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_2523D3A1C;
  return v8(a1, a2);
}

uint64_t initializeBufferWithCopyOfBuffer for EventQuery(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for EventQuery.Configuration(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *(void *)a1 = *a2;
    a1 = v25 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = (void *)a2[5];
    uint64_t v9 = a2[6];
    uint64_t v10 = (void *)a2[7];
    sub_2523DFD9C(v8, v9, v10);
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
    uint64_t v11 = v6[6];
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_25247A540();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(void (**)(void *, const void *, uint64_t))(v15 + 16);
    v16(v12, v13, v14);
    v16((void *)(a1 + v6[7]), (char *)a2 + v6[7], v14);
    uint64_t v17 = v6[8];
    uint64_t v18 = a1 + v17;
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = sub_25247A030();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    *(void *)(a1 + v6[9]) = *(uint64_t *)((char *)a2 + v6[9]);
    *(void *)(a1 + v6[10]) = *(uint64_t *)((char *)a2 + v6[10]);
    uint64_t v21 = v6[11];
    __dst = (void *)(a1 + v21);
    uint64_t v22 = (char *)a2 + v21;
    uint64_t v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23(v22, 1, v14))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
      memcpy(__dst, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      v16(__dst, v22, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    uint64_t v26 = v6[12];
    uint64_t v27 = a1 + v26;
    uint64_t v28 = (uint64_t)a2 + v26;
    *(void *)uint64_t v27 = *(void *)v28;
    *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
    *(unsigned char *)(a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
    *(unsigned char *)(a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
    uint64_t v29 = v6[15];
    uint64_t v30 = a1 + v29;
    uint64_t v31 = (uint64_t)a2 + v29;
    *(void *)uint64_t v30 = *(void *)v31;
    *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
    *(void *)(a1 + v6[16]) = *(uint64_t *)((char *)a2 + v6[16]);
    *(void *)(a1 + v6[17]) = *(uint64_t *)((char *)a2 + v6[17]);
    uint64_t v32 = v6[18];
    uint64_t v33 = a1 + v32;
    uint64_t v34 = (uint64_t)a2 + v32;
    long long v35 = *(_OWORD *)(v34 + 24);
    *(_OWORD *)(a1 + v32 + 24) = v35;
    uint64_t v36 = v35;
    uint64_t v37 = **(void (***)(uint64_t, uint64_t, uint64_t))(v35 - 8);
    swift_unknownObjectRetain();
    v37(v33, v34, v36);
  }
  return a1;
}

uint64_t destroy for EventQuery(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_2523DFE9C(*(void **)(a1 + 40), *(void *)(a1 + 48), *(void **)(a1 + 56));
  uint64_t v2 = (int *)type metadata accessor for EventQuery.Configuration(0);
  uint64_t v3 = a1 + v2[6];
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  v6(a1 + v2[7], v4);
  uint64_t v7 = a1 + v2[8];
  uint64_t v8 = sub_25247A030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + v2[11];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4)) {
    v6(v9, v4);
  }
  swift_unknownObjectRelease();
  uint64_t v10 = a1 + v2[18];

  return __swift_destroy_boxed_opaque_existential_1(v10);
}

uint64_t initializeWithCopy for EventQuery(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void **)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(void **)(a2 + 56);
  sub_2523DFD9C(v5, v6, v7);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = (int *)type metadata accessor for EventQuery.Configuration(0);
  uint64_t v9 = v8[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_25247A540();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(void *, const void *, uint64_t))(v13 + 16);
  v14(v10, v11, v12);
  v14((void *)(a1 + v8[7]), (const void *)(a2 + v8[7]), v12);
  uint64_t v15 = v8[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_25247A030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  *(void *)(a1 + v8[9]) = *(void *)(a2 + v8[9]);
  *(void *)(a1 + v8[10]) = *(void *)(a2 + v8[10]);
  uint64_t v19 = v8[11];
  __dst = (void *)(a1 + v19);
  uint64_t v20 = (const void *)(a2 + v19);
  uint64_t v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21(v20, 1, v12))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(__dst, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    v14(__dst, v20, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  uint64_t v23 = v8[12];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
  *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
  uint64_t v26 = v8[15];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  *(void *)(a1 + v8[16]) = *(void *)(a2 + v8[16]);
  *(void *)(a1 + v8[17]) = *(void *)(a2 + v8[17]);
  uint64_t v29 = v8[18];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  long long v32 = *(_OWORD *)(v31 + 24);
  *(_OWORD *)(a1 + v29 + 24) = v32;
  uint64_t v33 = v32;
  uint64_t v34 = **(void (***)(uint64_t, uint64_t, uint64_t))(v32 - 8);
  swift_unknownObjectRetain();
  v34(v30, v31, v33);
  return a1;
}

uint64_t *assignWithCopy for EventQuery(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  long long v4 = (void *)a2[5];
  uint64_t v5 = a2[6];
  uint64_t v6 = (void *)a2[7];
  sub_2523DFD9C(v4, v5, v6);
  uint64_t v7 = (void *)a1[5];
  uint64_t v8 = a1[6];
  uint64_t v9 = (void *)a1[7];
  a1[5] = (uint64_t)v4;
  a1[6] = v5;
  a1[7] = (uint64_t)v6;
  sub_2523DFE9C(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for EventQuery.Configuration(0);
  uint64_t v11 = v10[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_25247A540();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v15 + 24);
  v16(v12, v13, v14);
  uint64_t v36 = v16;
  v16((char *)a1 + v10[7], (char *)a2 + v10[7], v14);
  uint64_t v17 = v10[8];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_25247A030();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  *(uint64_t *)((char *)a1 + v10[9]) = *(uint64_t *)((char *)a2 + v10[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)a1 + v10[10]) = *(uint64_t *)((char *)a2 + v10[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v10[11];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v16) = v24((char *)a1 + v21, 1, v14);
  int v25 = v24(v23, 1, v14);
  if (!v16)
  {
    if (!v25)
    {
      v36(v22, v23, v14);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v14);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v22, v23, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v22, 0, 1, v14);
LABEL_7:
  uint64_t v27 = v10[12];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = *(void *)v29;
  v28[8] = v29[8];
  *(void *)uint64_t v28 = v30;
  *((unsigned char *)a1 + v10[13]) = *((unsigned char *)a2 + v10[13]);
  *((unsigned char *)a1 + v10[14]) = *((unsigned char *)a2 + v10[14]);
  uint64_t v31 = v10[15];
  long long v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = *(void *)v33;
  v32[8] = v33[8];
  *(void *)long long v32 = v34;
  *(uint64_t *)((char *)a1 + v10[16]) = *(uint64_t *)((char *)a2 + v10[16]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(uint64_t *)((char *)a1 + v10[17]) = *(uint64_t *)((char *)a2 + v10[17]);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + v10[18]), (uint64_t *)((char *)a2 + v10[18]));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t initializeWithTake for EventQuery(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = (int *)type metadata accessor for EventQuery.Configuration(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_25247A540();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v11((void *)(a1 + v5[7]), (const void *)(a2 + v5[7]), v9);
  uint64_t v12 = v5[8];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_25247A030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  *(void *)(a1 + v5[9]) = *(void *)(a2 + v5[9]);
  *(void *)(a1 + v5[10]) = *(void *)(a2 + v5[10]);
  uint64_t v16 = v5[11];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a2 + v16, 1, v9))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v11(v17, v18, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
  }
  uint64_t v20 = v5[12];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  *(unsigned char *)(a1 + v5[13]) = *(unsigned char *)(a2 + v5[13]);
  *(unsigned char *)(a1 + v5[14]) = *(unsigned char *)(a2 + v5[14]);
  uint64_t v23 = v5[15];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(void *)(a1 + v5[16]) = *(void *)(a2 + v5[16]);
  *(void *)(a1 + v5[17]) = *(void *)(a2 + v5[17]);
  uint64_t v26 = v5[18];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  long long v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(void *)(v27 + 32) = *(void *)(v28 + 32);
  return a1;
}

uint64_t assignWithTake for EventQuery(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  uint64_t v6 = *(void **)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v5;
  sub_2523DFE9C(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for EventQuery.Configuration(0);
  uint64_t v10 = v9[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_25247A540();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 40);
  v15(v11, v12, v13);
  uint64_t v37 = v15;
  v15((void *)(a1 + v9[7]), (const void *)(a2 + v9[7]), v13);
  uint64_t v16 = v9[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_25247A030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  *(void *)(a1 + v9[9]) = *(void *)(a2 + v9[9]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v9[10]) = *(void *)(a2 + v9[10]);
  swift_bridgeObjectRelease();
  uint64_t v20 = v9[11];
  uint64_t v21 = (const void *)(a2 + v20);
  uint64_t v22 = *(uint64_t (**)(void))(v14 + 48);
  uint64_t v38 = (void *)(a1 + v20);
  LODWORD(v15) = v22();
  int v23 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v22)(v21, 1, v13);
  if (v15)
  {
    if (!v23)
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v38, v21, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v38, 0, 1, v13);
      goto LABEL_9;
    }
    size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0) - 8) + 64);
    uint64_t v25 = v38;
  }
  else
  {
    if (!v23)
    {
      v37(v38, v21, v13);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v38, v13);
    size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0) - 8) + 64);
    uint64_t v25 = v38;
  }
  memcpy(v25, v21, v24);
LABEL_9:
  uint64_t v26 = v9[12];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  *(unsigned char *)(a1 + v9[13]) = *(unsigned char *)(a2 + v9[13]);
  *(unsigned char *)(a1 + v9[14]) = *(unsigned char *)(a2 + v9[14]);
  uint64_t v29 = v9[15];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)uint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  *(void *)(a1 + v9[16]) = *(void *)(a2 + v9[16]);
  swift_unknownObjectRelease();
  *(void *)(a1 + v9[17]) = *(void *)(a2 + v9[17]);
  uint64_t v32 = v9[18];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  __swift_destroy_boxed_opaque_existential_1(a1 + v32);
  long long v35 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  *(void *)(v33 + 32) = *(void *)(v34 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2523FC798);
}

uint64_t sub_2523FC798(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventQuery.Configuration(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for EventQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2523FC818);
}

uint64_t sub_2523FC818(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventQuery.Configuration(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for EventQuery(uint64_t a1)
{
  return sub_2523FC8A8(a1, (uint64_t *)&unk_269C049C8);
}

uint64_t sub_2523FC8A8(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2523FC8E0()
{
  uint64_t result = type metadata accessor for EventQuery.Configuration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_2523FC96C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (char *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (char *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = (void *)a2[5];
    uint64_t v9 = a2[6];
    uint64_t v10 = (void *)a2[7];
    sub_2523DFD9C(v8, v9, v10);
    *((void *)v4 + 5) = v8;
    *((void *)v4 + 6) = v9;
    *((void *)v4 + 7) = v10;
    uint64_t v11 = a3[6];
    uint64_t v12 = &v4[v11];
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v14 = sub_25247A540();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v16(v12, v13, v14);
    v16(&v4[a3[7]], (uint64_t)a2 + a3[7], v14);
    uint64_t v17 = a3[8];
    uint64_t v18 = &v4[v17];
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = sub_25247A030();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = a3[10];
    *(void *)&v4[a3[9]] = *(uint64_t *)((char *)a2 + a3[9]);
    *(void *)&v4[v21] = *(uint64_t *)((char *)a2 + v21);
    uint64_t v22 = a3[11];
    __dst = &v4[v22];
    int v23 = (char *)a2 + v22;
    size_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v23, 1, v14))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
      memcpy(__dst, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      v16(__dst, (uint64_t)v23, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    uint64_t v27 = a3[12];
    uint64_t v28 = a3[13];
    uint64_t v29 = &v4[v27];
    uint64_t v30 = (uint64_t)a2 + v27;
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = *(unsigned char *)(v30 + 8);
    v4[v28] = *((unsigned char *)a2 + v28);
    uint64_t v31 = a3[15];
    v4[a3[14]] = *((unsigned char *)a2 + a3[14]);
    uint64_t v32 = &v4[v31];
    uint64_t v33 = (uint64_t)a2 + v31;
    *(void *)uint64_t v32 = *(void *)v33;
    v32[8] = *(unsigned char *)(v33 + 8);
    uint64_t v34 = a3[17];
    *(void *)&v4[a3[16]] = *(uint64_t *)((char *)a2 + a3[16]);
    *(void *)&v4[v34] = *(uint64_t *)((char *)a2 + v34);
    uint64_t v35 = a3[18];
    uint64_t v36 = &v4[v35];
    uint64_t v37 = (uint64_t)a2 + v35;
    long long v38 = *(_OWORD *)(v37 + 24);
    *(_OWORD *)&v4[v35 + 24] = v38;
    uint64_t v39 = v38;
    uint64_t v40 = **(void (***)(char *, uint64_t, uint64_t))(v38 - 8);
    swift_unknownObjectRetain();
    v40(v36, v37, v39);
  }
  return v4;
}

uint64_t sub_2523FCCB8(uint64_t a1, int *a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_2523DFE9C(*(void **)(a1 + 40), *(void *)(a1 + 48), *(void **)(a1 + 56));
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_25247A540();
  uint64_t v6 = *(void *)(v5 - 8);
  long long v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v7(a1 + a2[7], v5);
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = sub_25247A030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[11];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v10, 1, v5)) {
    v7(v10, v5);
  }
  swift_unknownObjectRelease();
  uint64_t v11 = a1 + a2[18];

  return __swift_destroy_boxed_opaque_existential_1(v11);
}

uint64_t sub_2523FCE30(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  long long v7 = *(void **)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void **)(a2 + 56);
  sub_2523DFD9C(v7, v8, v9);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_25247A540();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 16);
  v15(v11, v12, v13);
  v15((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v13);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_25247A030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  uint64_t v21 = a3[11];
  __dst = (void *)(a1 + v21);
  uint64_t v22 = (const void *)(a2 + v21);
  int v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23(v22, 1, v13))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(__dst, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    v15(__dst, v22, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  uint64_t v25 = a3[12];
  uint64_t v26 = a3[13];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  *(unsigned char *)(a1 + v26) = *(unsigned char *)(a2 + v26);
  uint64_t v29 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)uint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  uint64_t v32 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v32) = *(void *)(a2 + v32);
  uint64_t v33 = a3[18];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  long long v36 = *(_OWORD *)(v35 + 24);
  *(_OWORD *)(a1 + v33 + 24) = v36;
  uint64_t v37 = v36;
  long long v38 = **(void (***)(uint64_t, uint64_t, uint64_t))(v36 - 8);
  swift_unknownObjectRetain();
  v38(v34, v35, v37);
  return a1;
}

uint64_t *sub_2523FD124(uint64_t *a1, uint64_t *a2, int *a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  long long v6 = (void *)a2[5];
  uint64_t v7 = a2[6];
  uint64_t v8 = (void *)a2[7];
  sub_2523DFD9C(v6, v7, v8);
  uint64_t v9 = (void *)a1[5];
  uint64_t v10 = a1[6];
  uint64_t v11 = (void *)a1[7];
  a1[5] = (uint64_t)v6;
  a1[6] = v7;
  a1[7] = (uint64_t)v8;
  sub_2523DFE9C(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_25247A540();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v16 + 24);
  v17(v13, v14, v15);
  uint64_t v37 = v17;
  v17((char *)a1 + a3[7], (char *)a2 + a3[7], v15);
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_25247A030();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[11];
  int v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v17) = v25((char *)a1 + v22, 1, v15);
  int v26 = v25(v24, 1, v15);
  if (!v17)
  {
    if (!v26)
    {
      v37(v23, v24, v15);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v23, v15);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v23, v24, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v23, 0, 1, v15);
LABEL_7:
  uint64_t v28 = a3[12];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = *(void *)v30;
  v29[8] = v30[8];
  *(void *)uint64_t v29 = v31;
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  uint64_t v32 = a3[15];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)v34;
  v33[8] = v34[8];
  *(void *)uint64_t v33 = v35;
  *(uint64_t *)((char *)a1 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(uint64_t *)((char *)a1 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + a3[18]), (uint64_t *)((char *)a2 + a3[18]));
  return a1;
}

uint64_t sub_2523FD438(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_25247A540();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v12((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v10);
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_25247A030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v18, 1, v10))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v12(v19, v20, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  uint64_t v22 = a3[12];
  uint64_t v23 = a3[13];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v26 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  uint64_t v30 = a3[18];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(void *)(v31 + 32) = *(void *)(v32 + 32);
  long long v33 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v33;
  return a1;
}

uint64_t sub_2523FD690(uint64_t a1, uint64_t a2, int *a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v8 = *(void **)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v7;
  sub_2523DFE9C(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_25247A540();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void (**)(void *, const void *, uint64_t))(v15 + 40);
  v16(v12, v13, v14);
  uint64_t v39 = v16;
  v16((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v14);
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_25247A030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[11];
  uint64_t v22 = (const void *)(a2 + v21);
  uint64_t v23 = *(uint64_t (**)(void))(v15 + 48);
  uint64_t v40 = (void *)(a1 + v21);
  LODWORD(v16) = v23();
  int v24 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v23)(v22, 1, v14);
  if (v16)
  {
    if (!v24)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v40, v22, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v40, 0, 1, v14);
      goto LABEL_9;
    }
    size_t v25 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0) - 8) + 64);
    uint64_t v26 = v40;
  }
  else
  {
    if (!v24)
    {
      v39(v40, v22, v14);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v40, v14);
    size_t v25 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0) - 8) + 64);
    uint64_t v26 = v40;
  }
  memcpy(v26, v22, v25);
LABEL_9:
  uint64_t v27 = a3[12];
  uint64_t v28 = a3[13];
  uint64_t v29 = a1 + v27;
  uint64_t v30 = a2 + v27;
  *(void *)uint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  uint64_t v31 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(void *)uint64_t v32 = *(void *)v33;
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_unknownObjectRelease();
  uint64_t v34 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  __swift_destroy_boxed_opaque_existential_1(a1 + v34);
  long long v37 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v37;
  *(void *)(v35 + 32) = *(void *)(v36 + 32);
  return a1;
}

uint64_t sub_2523FD9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2523FD9CC);
}

uint64_t sub_2523FD9CC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_25247A540();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_25247A030();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_9;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[11];

  return v15(v17, a2, v16);
}

uint64_t sub_2523FDB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2523FDB5C);
}

uint64_t sub_2523FDB5C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_25247A540();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_25247A030();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_7;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[11];

  return v15(v17, a2, a2, v16);
}

void sub_2523FDCD8()
{
  sub_25247A540();
  if (v0 <= 0x3F)
  {
    sub_25247A030();
    if (v1 <= 0x3F)
    {
      sub_2523FDE2C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_2523FDE2C()
{
  if (!qword_269C049E8)
  {
    sub_25247A540();
    unint64_t v0 = sub_25247AE90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269C049E8);
    }
  }
}

uint64_t sub_2523FDE84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C049F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2523FDEEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2523FDF54()
{
  uint64_t v1 = *(void *)(type metadata accessor for EventQuery(0) - 8);
  uint64_t v23 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v21 = *(void *)(v1 + 64);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05230);
  uint64_t v2 = *(void *)(v25 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v19 = *(void *)(v2 + 64);
  uint64_t v24 = sub_25247A4B0();
  uint64_t v3 = *(void *)(v24 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v18 = *(void *)(v3 + 64);
  swift_unknownObjectRelease();
  uint64_t v26 = v0;
  uint64_t v22 = (v23 + 32) & ~v23;
  uint64_t v5 = v0 + v22;
  __swift_destroy_boxed_opaque_existential_1(v0 + v22);
  sub_2523DFE9C(*(void **)(v5 + 40), *(void *)(v5 + 48), *(void **)(v5 + 56));
  long long v6 = (int *)type metadata accessor for EventQuery.Configuration(0);
  uint64_t v7 = v0 + v22 + v6[6];
  uint64_t v8 = sub_25247A540();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v10(v0 + v22 + v6[7], v8);
  uint64_t v11 = v0 + v22 + v6[8];
  uint64_t v12 = sub_25247A030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v0 + v22 + v6[11];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8)) {
    v10(v13, v8);
  }
  uint64_t v14 = v23 | v20 | v4 | 7;
  uint64_t v15 = (v22 + v21 + v20) & ~v20;
  uint64_t v16 = (v15 + v19 + v4) & ~v4;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v5 + v6[18]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v26 + v15, v25);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v26 + v16, v24);

  return MEMORY[0x270FA0238](v26, v16 + v18, v14);
}

uint64_t sub_2523FE288(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for EventQuery(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05230) - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(sub_25247A4B0() - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v14 = v1 + v5;
  uint64_t v15 = v1 + v8;
  uint64_t v16 = v1 + (v11 & ~v10);
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v17;
  *uint64_t v17 = v2;
  v17[1] = sub_2523D3928;
  return sub_2523EA730(a1, v12, v13, v14, v15, v16);
}

uint64_t sub_2523FE440(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2523FE4A0(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *unint64_t v8 = v3;
  v8[1] = sub_2523D3928;
  return sub_2523EC010(a1, a2, v7, v6);
}

uint64_t sub_2523FE554(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2523FE59C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2523D3A1C;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  unint64_t v8 = (void *)swift_task_alloc();
  v7[2] = v8;
  *unint64_t v8 = v7;
  v8[1] = sub_2523D3A1C;
  return v10(a1, a2);
}

uint64_t sub_2523FE6CC(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_25241D768(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *uint64_t v3 = v5;
  }
  uint64_t v14 = *(void *)(type metadata accessor for EncryptionKeyRecord() - 8);
  unint64_t v15 = v5 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v16 = *(void *)(v14 + 72);
  uint64_t v17 = v15 + v16 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v5 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_33;
  }
  if (v19 < 0)
  {
LABEL_35:
    uint64_t result = sub_25247B100();
    __break(1u);
    return result;
  }
  unint64_t v20 = v17 + v16;
  unint64_t v21 = v15 + v16 * a2;
  if (v17 + v16 < v21 || v20 >= v21 + v19 * v16)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v21)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v23 = *(void *)(v5 + 16);
  BOOL v24 = __OFADD__(v23, v9);
  uint64_t v25 = v23 + v9;
  if (v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v5 + 16) = v25;
LABEL_25:
  if (v16 >= 1) {
    sub_2523FDEEC(a3, v17, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);
  }
  return sub_2523D6FB8(a3, &qword_269C047B0);
}

uint64_t sub_2523FE8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v7 = a1;
    unint64_t v6 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_25247B0C0();
  swift_bridgeObjectRelease();
  if (v23 < v5) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v9 = v5 - v7;
  if (__OFSUB__(v5, v7))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_25247B0C0();
    swift_bridgeObjectRelease();
    uint64_t v11 = v10 + v8;
    if (!__OFADD__(v10, v8)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_25247B0C0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v6 = *v4;
  if (*v4 >> 62) {
    goto LABEL_36;
  }
  uint64_t v10 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 + v8;
  if (__OFADD__(v10, v8)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v6 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v6;
  uint64_t v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v10 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_39;
  }
  uint64_t v14 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11) {
    uint64_t v14 = v11;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = MEMORY[0x2533B5240](v10, v14, 1, v6);
  swift_bridgeObjectRelease();
  *uint64_t v4 = v6;
  uint64_t v13 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  unint64_t v15 = (void *)(v13 + 32 + 8 * v7);
  sub_2523E1254(0, (unint64_t *)&unk_269C04B70);
  swift_arrayDestroy();
  if (v8)
  {
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_25247B0C0();
      swift_bridgeObjectRelease();
      uint64_t v17 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_21:
        if (v17 < 0)
        {
LABEL_46:
          uint64_t result = sub_25247B100();
          __break(1u);
          return result;
        }
        uint64_t v18 = (char *)(v15 + 1);
        uint64_t v19 = (char *)(v13 + 32 + 8 * v5);
        if (v15 + 1 != (void *)v19 || v18 >= &v19[8 * v17]) {
          memmove(v18, v19, 8 * v17);
        }
        if (!(v6 >> 62))
        {
          uint64_t v20 = *(void *)(v13 + 16);
          uint64_t v21 = v20 + v8;
          if (!__OFADD__(v20, v8))
          {
LABEL_27:
            *(void *)(v13 + 16) = v21;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_25247B0C0();
        swift_bridgeObjectRelease();
        uint64_t v21 = v25 + v8;
        if (!__OFADD__(v25, v8)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v16 = *(void *)(v13 + 16);
      uint64_t v17 = v16 - v5;
      if (!__OFSUB__(v16, v5)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  *unint64_t v15 = v3;

  return sub_25247AA10();
}

uint64_t sub_2523FEBE8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_2523FEC08(a1, a2, a3, a4, (uint64_t *)&unk_269C04C40, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);
}

uint64_t sub_2523FEC08(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void))
{
  unint64_t v6 = a4 >> 1;
  uint64_t v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v7) {
    return MEMORY[0x263F8EE78];
  }
  if (v7 <= 0)
  {
    uint64_t v14 = (void *)MEMORY[0x263F8EE78];
    if (v6 != a3)
    {
LABEL_10:
      if (v7 < 0) {
        goto LABEL_24;
      }
      uint64_t v17 = *(void *)(a6(0) - 8);
      uint64_t v18 = (char *)v14 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      uint64_t v19 = *(void *)(v17 + 72);
      unint64_t v20 = a2 + v19 * a3;
      uint64_t v21 = v19 * v7;
      uint64_t v22 = &v18[v21];
      unint64_t v23 = v20 + v21;
      if (v20 < (unint64_t)v22 && (unint64_t)v18 < v23) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return (uint64_t)v14;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v11 = *(void *)(a6(0) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (void *)swift_allocObject();
  size_t v15 = _swift_stdlib_malloc_size(v14);
  if (v12)
  {
    if (v15 - v13 == 0x8000000000000000 && v12 == -1) {
      goto LABEL_23;
    }
    v14[2] = v7;
    v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
    if (v6 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_25247B100();
  __break(1u);
  return result;
}

size_t sub_2523FEE50(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04AD8);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04AB8) - 8);
  uint64_t v5 = *(void *)(v4 + 72);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v7);
  if (v5)
  {
    if (result - v6 != 0x8000000000000000 || v5 != -1)
    {
      v7[2] = a1;
      v7[3] = 2 * ((uint64_t)(result - v6) / v5);
      return (size_t)v7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2523FEF48(void **a1)
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269C04760) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_252405620(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_2523FEFF4(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_2523FEFF4(uint64_t *a1)
{
  uint64_t v388 = sub_25247A4B0();
  uint64_t v3 = *(void *)(v388 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v388);
  unint64_t v6 = (char *)&v338 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v338 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v361 = (char *)&v338 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v360 = (char *)&v338 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v345 = (char *)&v338 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v344 = (char *)&v338 - v16;
  uint64_t v402 = type metadata accessor for SomeAccessoryEvent();
  uint64_t v17 = MEMORY[0x270FA5388](v402);
  uint64_t v400 = (uint64_t)&v338 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v399 = (uint64_t)&v338 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v382 = (uint64_t)&v338 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v381 = (uint64_t)&v338 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v372 = (uint64_t)&v338 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v371 = (uint64_t)&v338 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v370 = (uint64_t)&v338 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v369 = (uint64_t)&v338 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v352 = (uint64_t)&v338 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v351 = (uint64_t)&v338 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v350 = (uint64_t)&v338 - v38;
  MEMORY[0x270FA5388](v37);
  uint64_t v349 = (uint64_t)&v338 - v39;
  uint64_t v40 = type metadata accessor for SomeEvent();
  uint64_t v41 = MEMORY[0x270FA5388](v40 - 8);
  uint64_t v380 = (uint64_t)&v338 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v379 = (uint64_t)&v338 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v359 = (uint64_t)&v338 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v358 = (uint64_t)&v338 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v343 = (uint64_t)&v338 - v50;
  MEMORY[0x270FA5388](v49);
  uint64_t v342 = (uint64_t)&v338 - v51;
  uint64_t v403 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04760);
  uint64_t v374 = *(void *)(v403 - 8);
  uint64_t v52 = MEMORY[0x270FA5388](v403);
  uint64_t v357 = (uint64_t)&v338 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  uint64_t v391 = (uint64_t)&v338 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  uint64_t v398 = (char *)&v338 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  uint64_t v397 = (char *)&v338 - v59;
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  long long v62 = (char *)&v338 - v61;
  uint64_t v63 = MEMORY[0x270FA5388](v60);
  uint64_t v65 = (char *)&v338 - v64;
  uint64_t v66 = MEMORY[0x270FA5388](v63);
  uint64_t v368 = (char *)&v338 - v67;
  uint64_t v68 = MEMORY[0x270FA5388](v66);
  uint64_t v367 = (char *)&v338 - v69;
  uint64_t v70 = MEMORY[0x270FA5388](v68);
  uint64_t v366 = (uint64_t)&v338 - v71;
  uint64_t v72 = MEMORY[0x270FA5388](v70);
  uint64_t v365 = (uint64_t)&v338 - v73;
  uint64_t v74 = MEMORY[0x270FA5388](v72);
  char v348 = (char *)&v338 - v75;
  uint64_t v76 = MEMORY[0x270FA5388](v74);
  uint64_t v341 = (char *)&v338 - v77;
  uint64_t v78 = MEMORY[0x270FA5388](v76);
  uint64_t v347 = (uint64_t)&v338 - v79;
  MEMORY[0x270FA5388](v78);
  uint64_t v346 = (uint64_t)&v338 - v80;
  uint64_t v81 = a1[1];
  uint64_t result = sub_25247B1E0();
  if (result >= v81)
  {
    if ((v81 & 0x8000000000000000) == 0)
    {
      if (v81) {
        return sub_252402260(0, v81, 1, a1);
      }
      return result;
    }
LABEL_201:
    __break(1u);
LABEL_202:
    __break(1u);
LABEL_203:
    __break(1u);
LABEL_204:
    __break(1u);
LABEL_205:
    __break(1u);
LABEL_206:
    __break(1u);
LABEL_207:
    __break(1u);
LABEL_208:
    __break(1u);
LABEL_209:
    sub_25247B0A0();
    __break(1u);
    JUMPOUT(0x2524021B8);
  }
  if (v81 >= 0) {
    uint64_t v83 = v81;
  }
  else {
    uint64_t v83 = v81 + 1;
  }
  if (v81 < -1) {
    goto LABEL_209;
  }
  uint64_t v340 = result;
  uint64_t v375 = v1;
  if (v81 < 2)
  {
    unint64_t v373 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v374 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v374 + 80));
    uint64_t v339 = MEMORY[0x263F8EE78];
    if (v81 != 1)
    {
      unint64_t v89 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v88 = (char *)MEMORY[0x263F8EE78];
LABEL_164:
      if (v89 < 2)
      {
        uint64_t v329 = v339;
        goto LABEL_178;
      }
      uint64_t v330 = *a1;
      uint64_t v329 = v339;
      while (1)
      {
        unint64_t v331 = v89 - 2;
        if (v89 < 2) {
          goto LABEL_196;
        }
        if (!v330) {
          goto LABEL_208;
        }
        uint64_t v376 = v88;
        uint64_t v332 = *(void *)&v88[16 * v331 + 32];
        uint64_t v333 = *(void *)&v88[16 * v89 + 24];
        uint64_t v334 = v375;
        sub_25240326C(v330 + *(void *)(v374 + 72) * v332, v330 + *(void *)(v374 + 72) * *(void *)&v88[16 * v89 + 16], v330 + *(void *)(v374 + 72) * v333, v373);
        uint64_t v375 = v334;
        if (v334) {
          goto LABEL_178;
        }
        if (v333 < v332) {
          goto LABEL_197;
        }
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v335 = v376;
        }
        else {
          uint64_t v335 = sub_2524053D4((uint64_t)v376);
        }
        if (v331 >= *((void *)v335 + 2)) {
          goto LABEL_198;
        }
        unint64_t v336 = &v335[16 * v331 + 32];
        *(void *)unint64_t v336 = v332;
        *((void *)v336 + 1) = v333;
        unint64_t v337 = *((void *)v335 + 2);
        if (v89 > v337) {
          goto LABEL_199;
        }
        memmove(&v335[16 * v89 + 16], &v335[16 * v89 + 32], 16 * (v337 - v89));
        uint64_t v88 = v335;
        *((void *)v335 + 2) = v337 - 1;
        unint64_t v89 = v337 - 1;
        if (v337 <= 2) {
          goto LABEL_178;
        }
      }
    }
  }
  else
  {
    uint64_t v84 = v83 >> 1;
    uint64_t v85 = sub_25247AA50();
    *(void *)(v85 + 16) = v84;
    uint64_t v86 = *(unsigned __int8 *)(v374 + 80);
    uint64_t v339 = v85;
    unint64_t v373 = v85 + ((v86 + 32) & ~v86);
  }
  uint64_t v87 = 0;
  uint64_t v387 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v88 = (char *)MEMORY[0x263F8EE78];
  uint64_t v383 = a1;
  uint64_t v378 = v6;
  uint64_t v377 = v9;
  v401 = v62;
  uint64_t v389 = v65;
  while (1)
  {
    uint64_t v90 = v87 + 1;
    uint64_t v376 = v88;
    uint64_t v364 = v87;
    if (v87 + 1 < v81)
    {
      uint64_t v91 = v87;
      uint64_t v92 = *a1;
      uint64_t v93 = *(void *)(v374 + 72);
      uint64_t v390 = v87 + 1;
      uint64_t v94 = v346;
      sub_2523D6F54(v92 + v93 * v90, v346, &qword_269C04760);
      uint64_t v353 = v92;
      uint64_t v394 = v93;
      uint64_t v95 = v347;
      sub_2523D6F54(v92 + v93 * v91, v347, &qword_269C04760);
      uint64_t v96 = *(int *)(v403 + 48);
      uint64_t v97 = v341;
      uint64_t v98 = (uint64_t)&v341[v96];
      uint64_t v99 = v94 + v96;
      uint64_t v100 = sub_25247A540();
      uint64_t v101 = *(void *)(v100 - 8);
      uint64_t v102 = *(void (**)(void))(v101 + 16);
      uint64_t v385 = v100;
      uint64_t v413 = v101 + 16;
      uint64_t v396 = v102;
      ((void (*)(char *, uint64_t))v102)(v97, v94);
      sub_2523FDEEC(v99, v98, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      uint64_t v103 = v342;
      sub_2523FDEEC(v98, v342, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      uint64_t v104 = v103;
      uint64_t v105 = v349;
      sub_252407EEC(v104, v349, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      sub_2523FDEEC(v105, v350, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v107 = v344;
      uint64_t v384 = v81;
      switch(EnumCaseMultiPayload)
      {
        case 1:
          uint64_t v411 = type metadata accessor for DoorEvent();
          uint64_t v108 = sub_2523FE554(&qword_269C04B50, (void (*)(uint64_t))type metadata accessor for DoorEvent);
          uint64_t v109 = type metadata accessor for DoorEvent;
          break;
        case 2:
          uint64_t v411 = type metadata accessor for GarageDoorEvent();
          uint64_t v108 = sub_2523FE554(&qword_269C04B48, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
          uint64_t v109 = type metadata accessor for GarageDoorEvent;
          break;
        case 3:
          uint64_t v411 = type metadata accessor for LockEvent();
          uint64_t v108 = sub_2523FE554(&qword_269C04B40, (void (*)(uint64_t))type metadata accessor for LockEvent);
          uint64_t v109 = type metadata accessor for LockEvent;
          break;
        case 4:
          uint64_t v411 = type metadata accessor for SecuritySystemEvent();
          uint64_t v108 = sub_2523FE554(&qword_269C04B38, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
          uint64_t v109 = type metadata accessor for SecuritySystemEvent;
          break;
        case 5:
          uint64_t v411 = type metadata accessor for SmokeDetectorEvent();
          uint64_t v108 = sub_2523FE554(&qword_269C04B30, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
          uint64_t v109 = type metadata accessor for SmokeDetectorEvent;
          break;
        case 6:
          uint64_t v411 = type metadata accessor for WindowEvent();
          uint64_t v108 = sub_2523FE554(&qword_269C04B28, (void (*)(uint64_t))type metadata accessor for WindowEvent);
          uint64_t v109 = type metadata accessor for WindowEvent;
          break;
        default:
          uint64_t v411 = type metadata accessor for ContactSensorEvent();
          uint64_t v108 = sub_2523FE554(&qword_269C04B58, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
          uint64_t v109 = type metadata accessor for ContactSensorEvent;
          break;
      }
      unint64_t v110 = v109;
      uint64_t v412 = v108;
      unint64_t v111 = __swift_allocate_boxed_opaque_existential_1(&v410);
      sub_252407EEC(v350, (uint64_t)v111, (uint64_t (*)(void))v110);
      uint64_t v113 = v411;
      uint64_t v112 = v412;
      uint64_t v114 = __swift_project_boxed_opaque_existential_1(&v410, v411);
      uint64_t v408 = v113;
      uint64_t v409 = *(void *)(v112 + 16);
      uint64_t v115 = __swift_allocate_boxed_opaque_existential_1(&v407);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v113 - 8) + 16))(v115, v114, v113);
      sub_2523FE440(v349, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v410);
      uint64_t v117 = v408;
      uint64_t v116 = v409;
      uint64_t v118 = __swift_project_boxed_opaque_existential_1(&v407, v408);
      uint64_t v411 = v117;
      v392 = *(uint64_t **)(v116 + 8);
      uint64_t v412 = (uint64_t)v392;
      uint64_t v119 = __swift_allocate_boxed_opaque_existential_1(&v410);
      os_log_type_t v120 = *(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v117 - 8) + 16);
      id v393 = v119;
      v120(v119, v118, v117);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v407);
      sub_2523FE440(v98, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      uint64_t v121 = *(char **)(v101 + 8);
      uint64_t v362 = v101 + 8;
      uint64_t v395 = v121;
      ((void (*)(char *, uint64_t))v121)(v97, v385);
      uint64_t v122 = *(int *)(v403 + 48);
      uint64_t v123 = (uint64_t)&v348[v122];
      uint64_t v124 = v95 + v122;
      v396();
      sub_2523FDEEC(v124, v123, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      uint64_t v125 = v343;
      sub_2523FDEEC(v123, v343, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      uint64_t v126 = v125;
      uint64_t v127 = v351;
      sub_252407EEC(v126, v351, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      sub_2523FDEEC(v127, v352, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v408 = type metadata accessor for DoorEvent();
          uint64_t v128 = sub_2523FE554(&qword_269C04B50, (void (*)(uint64_t))type metadata accessor for DoorEvent);
          uint64_t v129 = type metadata accessor for DoorEvent;
          break;
        case 2u:
          uint64_t v408 = type metadata accessor for GarageDoorEvent();
          uint64_t v128 = sub_2523FE554(&qword_269C04B48, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
          uint64_t v129 = type metadata accessor for GarageDoorEvent;
          break;
        case 3u:
          uint64_t v408 = type metadata accessor for LockEvent();
          uint64_t v128 = sub_2523FE554(&qword_269C04B40, (void (*)(uint64_t))type metadata accessor for LockEvent);
          uint64_t v129 = type metadata accessor for LockEvent;
          break;
        case 4u:
          uint64_t v408 = type metadata accessor for SecuritySystemEvent();
          uint64_t v128 = sub_2523FE554(&qword_269C04B38, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
          uint64_t v129 = type metadata accessor for SecuritySystemEvent;
          break;
        case 5u:
          uint64_t v408 = type metadata accessor for SmokeDetectorEvent();
          uint64_t v128 = sub_2523FE554(&qword_269C04B30, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
          uint64_t v129 = type metadata accessor for SmokeDetectorEvent;
          break;
        case 6u:
          uint64_t v408 = type metadata accessor for WindowEvent();
          uint64_t v128 = sub_2523FE554(&qword_269C04B28, (void (*)(uint64_t))type metadata accessor for WindowEvent);
          uint64_t v129 = type metadata accessor for WindowEvent;
          break;
        default:
          uint64_t v408 = type metadata accessor for ContactSensorEvent();
          uint64_t v128 = sub_2523FE554(&qword_269C04B58, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
          uint64_t v129 = type metadata accessor for ContactSensorEvent;
          break;
      }
      uint64_t v130 = v129;
      uint64_t v409 = v128;
      uint64_t v131 = __swift_allocate_boxed_opaque_existential_1(&v407);
      sub_252407EEC(v352, (uint64_t)v131, (uint64_t (*)(void))v130);
      uint64_t v133 = v408;
      uint64_t v132 = v409;
      os_log_type_t v134 = __swift_project_boxed_opaque_existential_1(&v407, v408);
      uint64_t v405 = v133;
      uint64_t v406 = *(void *)(v132 + 16);
      uint64_t v135 = __swift_allocate_boxed_opaque_existential_1(&v404);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v133 - 8) + 16))(v135, v134, v133);
      sub_2523FE440(v351, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v407);
      uint64_t v137 = v405;
      uint64_t v136 = v406;
      uint64_t v138 = __swift_project_boxed_opaque_existential_1(&v404, v405);
      uint64_t v408 = v137;
      uint64_t v409 = *(void *)(v136 + 8);
      uint64_t v139 = v409;
      unint64_t v140 = __swift_allocate_boxed_opaque_existential_1(&v407);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v137 - 8) + 16))(v140, v138, v137);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v404);
      sub_2523FE440(v123, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      ((void (*)(char *, uint64_t))v395)(v348, v385);
      ((void (*)(uint64_t))v392[4])(v117);
      uint64_t v141 = v345;
      (*(void (**)(uint64_t, uint64_t))(v139 + 32))(v137, v139);
      if (sub_25247A480())
      {
        sub_2523FE554(&qword_269C04B60, MEMORY[0x263F07508]);
        uint64_t v142 = v347;
        uint64_t v143 = v346;
        LODWORD(v363) = sub_25247A810();
        uint64_t v144 = v107;
        long long v62 = v401;
        uint64_t v65 = v389;
      }
      else
      {
        LODWORD(v363) = sub_25247A450();
        uint64_t v144 = v107;
        long long v62 = v401;
        uint64_t v65 = v389;
        uint64_t v142 = v347;
        uint64_t v143 = v346;
      }
      uint64_t v145 = *v387;
      os_log_type_t v146 = v141;
      uint64_t v147 = v388;
      (*v387)(v146, v388);
      uint64_t v356 = v145;
      v145(v144, v147);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v407);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v410);
      sub_2523D6FB8(v142, &qword_269C04760);
      sub_2523D6FB8(v143, &qword_269C04760);
      uint64_t v90 = v364 + 2;
      uint64_t v81 = v384;
      if (v364 + 2 < v384)
      {
        uint64_t v355 = v394 * v390;
        uint64_t v148 = v353;
        uint64_t v354 = v394 * v90;
        while (1)
        {
          uint64_t v390 = v90;
          uint64_t v149 = v365;
          sub_2523D6F54(v148 + v354, v365, &qword_269C04760);
          uint64_t v150 = v366;
          sub_2523D6F54(v148 + v355, v366, &qword_269C04760);
          uint64_t v151 = *(int *)(v403 + 48);
          uint64_t v152 = (uint64_t)&v367[v151];
          uint64_t v153 = v149 + v151;
          uint64_t v154 = v385;
          v396();
          sub_2523FDEEC(v153, v152, (uint64_t (*)(void))type metadata accessor for SomeEvent);
          uint64_t v155 = v358;
          sub_2523FDEEC(v152, v358, (uint64_t (*)(void))type metadata accessor for SomeEvent);
          uint64_t v156 = v155;
          uint64_t v157 = v369;
          sub_252407EEC(v156, v369, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
          sub_2523FDEEC(v157, v370, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v411 = type metadata accessor for DoorEvent();
              uint64_t v158 = sub_2523FE554(&qword_269C04B50, (void (*)(uint64_t))type metadata accessor for DoorEvent);
              int v159 = type metadata accessor for DoorEvent;
              break;
            case 2u:
              uint64_t v411 = type metadata accessor for GarageDoorEvent();
              uint64_t v158 = sub_2523FE554(&qword_269C04B48, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
              int v159 = type metadata accessor for GarageDoorEvent;
              break;
            case 3u:
              uint64_t v411 = type metadata accessor for LockEvent();
              uint64_t v158 = sub_2523FE554(&qword_269C04B40, (void (*)(uint64_t))type metadata accessor for LockEvent);
              int v159 = type metadata accessor for LockEvent;
              break;
            case 4u:
              uint64_t v411 = type metadata accessor for SecuritySystemEvent();
              uint64_t v158 = sub_2523FE554(&qword_269C04B38, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
              int v159 = type metadata accessor for SecuritySystemEvent;
              break;
            case 5u:
              uint64_t v411 = type metadata accessor for SmokeDetectorEvent();
              uint64_t v158 = sub_2523FE554(&qword_269C04B30, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
              int v159 = type metadata accessor for SmokeDetectorEvent;
              break;
            case 6u:
              uint64_t v411 = type metadata accessor for WindowEvent();
              uint64_t v158 = sub_2523FE554(&qword_269C04B28, (void (*)(uint64_t))type metadata accessor for WindowEvent);
              int v159 = type metadata accessor for WindowEvent;
              break;
            default:
              uint64_t v411 = type metadata accessor for ContactSensorEvent();
              uint64_t v158 = sub_2523FE554(&qword_269C04B58, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
              int v159 = type metadata accessor for ContactSensorEvent;
              break;
          }
          uint64_t v160 = v159;
          uint64_t v412 = v158;
          uint64_t v161 = __swift_allocate_boxed_opaque_existential_1(&v410);
          sub_252407EEC(v370, (uint64_t)v161, (uint64_t (*)(void))v160);
          uint64_t v162 = v411;
          uint64_t v163 = v412;
          uint64_t v164 = __swift_project_boxed_opaque_existential_1(&v410, v411);
          uint64_t v408 = v162;
          uint64_t v409 = *(void *)(v163 + 16);
          unint64_t v165 = __swift_allocate_boxed_opaque_existential_1(&v407);
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v162 - 8) + 16))(v165, v164, v162);
          sub_2523FE440(v369, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v410);
          uint64_t v167 = v408;
          uint64_t v166 = v409;
          uint64_t v168 = __swift_project_boxed_opaque_existential_1(&v407, v408);
          uint64_t v411 = v167;
          id v393 = *(uint64_t **)(v166 + 8);
          uint64_t v412 = (uint64_t)v393;
          uint64_t v169 = __swift_allocate_boxed_opaque_existential_1(&v410);
          uint64_t v170 = *(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v167 - 8) + 16);
          v392 = v169;
          v170(v169, v168, v167);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v407);
          sub_2523FE440(v152, (uint64_t (*)(void))type metadata accessor for SomeEvent);
          ((void (*)(char *, uint64_t))v395)(v367, v154);
          uint64_t v171 = *(int *)(v403 + 48);
          uint64_t v172 = (uint64_t)&v368[v171];
          uint64_t v173 = v150 + v171;
          v396();
          sub_2523FDEEC(v173, v172, (uint64_t (*)(void))type metadata accessor for SomeEvent);
          uint64_t v174 = v359;
          sub_2523FDEEC(v172, v359, (uint64_t (*)(void))type metadata accessor for SomeEvent);
          uint64_t v175 = v174;
          uint64_t v176 = v371;
          sub_252407EEC(v175, v371, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
          sub_2523FDEEC(v176, v372, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v408 = type metadata accessor for DoorEvent();
              uint64_t v177 = sub_2523FE554(&qword_269C04B50, (void (*)(uint64_t))type metadata accessor for DoorEvent);
              uint64_t v178 = type metadata accessor for DoorEvent;
              break;
            case 2u:
              uint64_t v408 = type metadata accessor for GarageDoorEvent();
              uint64_t v177 = sub_2523FE554(&qword_269C04B48, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
              uint64_t v178 = type metadata accessor for GarageDoorEvent;
              break;
            case 3u:
              uint64_t v408 = type metadata accessor for LockEvent();
              uint64_t v177 = sub_2523FE554(&qword_269C04B40, (void (*)(uint64_t))type metadata accessor for LockEvent);
              uint64_t v178 = type metadata accessor for LockEvent;
              break;
            case 4u:
              uint64_t v408 = type metadata accessor for SecuritySystemEvent();
              uint64_t v177 = sub_2523FE554(&qword_269C04B38, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
              uint64_t v178 = type metadata accessor for SecuritySystemEvent;
              break;
            case 5u:
              uint64_t v408 = type metadata accessor for SmokeDetectorEvent();
              uint64_t v177 = sub_2523FE554(&qword_269C04B30, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
              uint64_t v178 = type metadata accessor for SmokeDetectorEvent;
              break;
            case 6u:
              uint64_t v408 = type metadata accessor for WindowEvent();
              uint64_t v177 = sub_2523FE554(&qword_269C04B28, (void (*)(uint64_t))type metadata accessor for WindowEvent);
              uint64_t v178 = type metadata accessor for WindowEvent;
              break;
            default:
              uint64_t v408 = type metadata accessor for ContactSensorEvent();
              uint64_t v177 = sub_2523FE554(&qword_269C04B58, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
              uint64_t v178 = type metadata accessor for ContactSensorEvent;
              break;
          }
          uint64_t v179 = v178;
          uint64_t v409 = v177;
          uint64_t v180 = __swift_allocate_boxed_opaque_existential_1(&v407);
          sub_252407EEC(v372, (uint64_t)v180, (uint64_t (*)(void))v179);
          uint64_t v182 = v408;
          uint64_t v181 = v409;
          uint64_t v183 = __swift_project_boxed_opaque_existential_1(&v407, v408);
          uint64_t v405 = v182;
          uint64_t v406 = *(void *)(v181 + 16);
          uint64_t v184 = __swift_allocate_boxed_opaque_existential_1(&v404);
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v182 - 8) + 16))(v184, v183, v182);
          sub_2523FE440(v371, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v407);
          uint64_t v186 = v405;
          uint64_t v185 = v406;
          uint64_t v187 = __swift_project_boxed_opaque_existential_1(&v404, v405);
          uint64_t v408 = v186;
          uint64_t v188 = *(void *)(v185 + 8);
          uint64_t v409 = v188;
          uint64_t v189 = __swift_allocate_boxed_opaque_existential_1(&v407);
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v186 - 8) + 16))(v189, v187, v186);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v404);
          sub_2523FE440(v172, (uint64_t (*)(void))type metadata accessor for SomeEvent);
          ((void (*)(char *, uint64_t))v395)(v368, v154);
          uint64_t v190 = v360;
          ((void (*)(uint64_t))v393[4])(v167);
          id v191 = v361;
          (*(void (**)(uint64_t, uint64_t))(v188 + 32))(v186, v188);
          char v192 = sub_25247A480();
          uint64_t v386 = v148;
          if (v192)
          {
            sub_2523FE554(&qword_269C04B60, MEMORY[0x263F07508]);
            uint64_t v193 = v366;
            uint64_t v194 = v365;
            uint64_t v195 = v190;
            int v196 = sub_25247A810();
            long long v62 = v401;
            uint64_t v65 = v389;
          }
          else
          {
            uint64_t v195 = v190;
            int v196 = sub_25247A450();
            long long v62 = v401;
            uint64_t v65 = v389;
            uint64_t v193 = v366;
            uint64_t v194 = v365;
          }
          uint64_t v197 = v191;
          uint64_t v198 = v388;
          id v199 = v356;
          v356(v197, v388);
          v199(v195, v198);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v407);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v410);
          sub_2523D6FB8(v193, &qword_269C04760);
          sub_2523D6FB8(v194, &qword_269C04760);
          if ((v363 ^ v196)) {
            break;
          }
          uint64_t v90 = v390 + 1;
          uint64_t v148 = v386 + v394;
          uint64_t v81 = v384;
          if (v384 == v390 + 1)
          {
            uint64_t v90 = v384;
            goto LABEL_61;
          }
        }
        uint64_t v90 = v390;
        uint64_t v81 = v384;
      }
LABEL_61:
      a1 = v383;
      if (v363)
      {
        if (v90 < v364) {
          goto LABEL_202;
        }
        if (v364 < v90)
        {
          uint64_t v200 = 0;
          uint64_t v201 = v394 * (v90 - 1);
          uint64_t v202 = v90 * v394;
          uint64_t v203 = v364;
          uint64_t v204 = v364 * v394;
          do
          {
            if (v203 != v90 + v200 - 1)
            {
              uint64_t v206 = v90;
              uint64_t v207 = v353;
              if (!v353) {
                goto LABEL_207;
              }
              unint64_t v208 = v353 + v204;
              uint64_t v413 = v353 + v201;
              sub_252408294(v353 + v204, v357, &qword_269C04760);
              if (v204 < v201 || v208 >= v207 + v202)
              {
                uint64_t v205 = v413;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v205 = v413;
                if (v204 != v201) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_252408294(v357, v205, &qword_269C04760);
              uint64_t v90 = v206;
            }
            ++v203;
            --v200;
            v201 -= v394;
            v202 -= v394;
            v204 += v394;
          }
          while (v203 < v90 + v200);
          a1 = v383;
          uint64_t v65 = v389;
          uint64_t v81 = v384;
        }
      }
    }
    if (v90 < v81)
    {
      if (__OFSUB__(v90, v364)) {
        goto LABEL_200;
      }
      if (v90 - v364 < v340)
      {
        if (__OFADD__(v364, v340)) {
          goto LABEL_203;
        }
        if (v364 + v340 >= v81) {
          uint64_t v209 = v81;
        }
        else {
          uint64_t v209 = v364 + v340;
        }
        if (v209 < v364) {
          goto LABEL_204;
        }
        if (v90 != v209)
        {
          uint64_t v210 = *(void *)(v374 + 72);
          uint64_t v211 = v210 * (v90 - 1);
          uint64_t v384 = v210;
          uint64_t v212 = v90 * v210;
          uint64_t v363 = v209;
          do
          {
            id v214 = 0;
            uint64_t v215 = v364;
            uint64_t v390 = v90;
            uint64_t v386 = v211;
            uint64_t v385 = v212;
            while (1)
            {
              uint64_t v394 = v215;
              uint64_t v216 = v214;
              uint64_t v217 = *a1;
              id v393 = (uint64_t *)&v216[v212];
              sub_2523D6F54((uint64_t)&v216[v212 + v217], (uint64_t)v65, &qword_269C04760);
              uint64_t v395 = v216;
              v392 = (uint64_t *)&v216[v211];
              sub_2523D6F54((uint64_t)&v216[v211 + v217], (uint64_t)v62, &qword_269C04760);
              uint64_t v218 = *(int *)(v403 + 48);
              uint64_t v219 = v397;
              uint64_t v220 = (uint64_t)&v397[v218];
              uint64_t v221 = (uint64_t)&v65[v218];
              uint64_t v222 = sub_25247A540();
              uint64_t v413 = *(void *)(v222 - 8);
              uint64_t v223 = *(void (**)(void))(v413 + 16);
              ((void (*)(char *, char *, uint64_t))v223)(v219, v65, v222);
              sub_2523FDEEC(v221, v220, (uint64_t (*)(void))type metadata accessor for SomeEvent);
              uint64_t v224 = v379;
              sub_2523FDEEC(v220, v379, (uint64_t (*)(void))type metadata accessor for SomeEvent);
              uint64_t v225 = v381;
              sub_252407EEC(v224, v381, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
              uint64_t v226 = v382;
              sub_2523FDEEC(v225, v382, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v411 = type metadata accessor for DoorEvent();
                  uint64_t v227 = sub_2523FE554(&qword_269C04B50, (void (*)(uint64_t))type metadata accessor for DoorEvent);
                  char v228 = type metadata accessor for DoorEvent;
                  break;
                case 2u:
                  uint64_t v411 = type metadata accessor for GarageDoorEvent();
                  uint64_t v227 = sub_2523FE554(&qword_269C04B48, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
                  char v228 = type metadata accessor for GarageDoorEvent;
                  break;
                case 3u:
                  uint64_t v411 = type metadata accessor for LockEvent();
                  uint64_t v227 = sub_2523FE554(&qword_269C04B40, (void (*)(uint64_t))type metadata accessor for LockEvent);
                  char v228 = type metadata accessor for LockEvent;
                  break;
                case 4u:
                  uint64_t v411 = type metadata accessor for SecuritySystemEvent();
                  uint64_t v227 = sub_2523FE554(&qword_269C04B38, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
                  char v228 = type metadata accessor for SecuritySystemEvent;
                  break;
                case 5u:
                  uint64_t v411 = type metadata accessor for SmokeDetectorEvent();
                  uint64_t v227 = sub_2523FE554(&qword_269C04B30, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
                  char v228 = type metadata accessor for SmokeDetectorEvent;
                  break;
                case 6u:
                  uint64_t v411 = type metadata accessor for WindowEvent();
                  uint64_t v227 = sub_2523FE554(&qword_269C04B28, (void (*)(uint64_t))type metadata accessor for WindowEvent);
                  char v228 = type metadata accessor for WindowEvent;
                  break;
                default:
                  uint64_t v411 = type metadata accessor for ContactSensorEvent();
                  uint64_t v227 = sub_2523FE554(&qword_269C04B58, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
                  char v228 = type metadata accessor for ContactSensorEvent;
                  break;
              }
              uint64_t v229 = v228;
              uint64_t v412 = v227;
              uint64_t v230 = __swift_allocate_boxed_opaque_existential_1(&v410);
              sub_252407EEC(v226, (uint64_t)v230, (uint64_t (*)(void))v229);
              uint64_t v231 = v411;
              uint64_t v232 = v412;
              uint64_t v233 = __swift_project_boxed_opaque_existential_1(&v410, v411);
              uint64_t v408 = v231;
              uint64_t v409 = *(void *)(v232 + 16);
              uint64_t v234 = __swift_allocate_boxed_opaque_existential_1(&v407);
              (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v231 - 8) + 16))(v234, v233, v231);
              sub_2523FE440(v225, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v410);
              uint64_t v236 = v408;
              uint64_t v235 = v409;
              os_log_type_t v237 = __swift_project_boxed_opaque_existential_1(&v407, v408);
              uint64_t v411 = v236;
              uint64_t v238 = *(void *)(v235 + 8);
              uint64_t v412 = v238;
              uint64_t v239 = __swift_allocate_boxed_opaque_existential_1(&v410);
              os_log_t v240 = *(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v236 - 8) + 16);
              uint64_t v396 = (void (*)(void))v239;
              v240(v239, v237, v236);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v407);
              sub_2523FE440(v220, (uint64_t (*)(void))type metadata accessor for SomeEvent);
              uint64_t v242 = v413 + 8;
              unint64_t v241 = *(void (**)(char *, uint64_t))(v413 + 8);
              v241(v397, v222);
              uint64_t v243 = *(int *)(v403 + 48);
              uint64_t v244 = (uint64_t)&v398[v243];
              uint64_t v245 = (uint64_t)&v401[v243];
              v223();
              sub_2523FDEEC(v245, v244, (uint64_t (*)(void))type metadata accessor for SomeEvent);
              uint64_t v246 = v380;
              sub_2523FDEEC(v244, v380, (uint64_t (*)(void))type metadata accessor for SomeEvent);
              uint64_t v247 = v399;
              sub_252407EEC(v246, v399, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
              sub_2523FDEEC(v247, v400, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
              int v248 = swift_getEnumCaseMultiPayload();
              uint64_t v413 = v242;
              switch(v248)
              {
                case 1:
                  uint64_t v408 = type metadata accessor for DoorEvent();
                  uint64_t v249 = sub_2523FE554(&qword_269C04B50, (void (*)(uint64_t))type metadata accessor for DoorEvent);
                  uint64_t v250 = type metadata accessor for DoorEvent;
                  break;
                case 2:
                  uint64_t v408 = type metadata accessor for GarageDoorEvent();
                  uint64_t v249 = sub_2523FE554(&qword_269C04B48, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
                  uint64_t v250 = type metadata accessor for GarageDoorEvent;
                  break;
                case 3:
                  uint64_t v408 = type metadata accessor for LockEvent();
                  uint64_t v249 = sub_2523FE554(&qword_269C04B40, (void (*)(uint64_t))type metadata accessor for LockEvent);
                  uint64_t v250 = type metadata accessor for LockEvent;
                  break;
                case 4:
                  uint64_t v408 = type metadata accessor for SecuritySystemEvent();
                  uint64_t v249 = sub_2523FE554(&qword_269C04B38, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
                  uint64_t v250 = type metadata accessor for SecuritySystemEvent;
                  break;
                case 5:
                  uint64_t v408 = type metadata accessor for SmokeDetectorEvent();
                  uint64_t v249 = sub_2523FE554(&qword_269C04B30, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
                  uint64_t v250 = type metadata accessor for SmokeDetectorEvent;
                  break;
                case 6:
                  uint64_t v408 = type metadata accessor for WindowEvent();
                  uint64_t v249 = sub_2523FE554(&qword_269C04B28, (void (*)(uint64_t))type metadata accessor for WindowEvent);
                  uint64_t v250 = type metadata accessor for WindowEvent;
                  break;
                default:
                  uint64_t v408 = type metadata accessor for ContactSensorEvent();
                  uint64_t v249 = sub_2523FE554(&qword_269C04B58, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
                  uint64_t v250 = type metadata accessor for ContactSensorEvent;
                  break;
              }
              char v251 = v250;
              uint64_t v409 = v249;
              uint64_t v252 = __swift_allocate_boxed_opaque_existential_1(&v407);
              sub_252407EEC(v400, (uint64_t)v252, (uint64_t (*)(void))v251);
              uint64_t v253 = v408;
              uint64_t v254 = v409;
              uint64_t v255 = __swift_project_boxed_opaque_existential_1(&v407, v408);
              uint64_t v405 = v253;
              uint64_t v406 = *(void *)(v254 + 16);
              uint64_t v256 = __swift_allocate_boxed_opaque_existential_1(&v404);
              (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v253 - 8) + 16))(v256, v255, v253);
              sub_2523FE440(v399, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v407);
              uint64_t v257 = v405;
              uint64_t v258 = v406;
              objc_super v259 = __swift_project_boxed_opaque_existential_1(&v404, v405);
              uint64_t v408 = v257;
              uint64_t v260 = *(void *)(v258 + 8);
              uint64_t v409 = v260;
              uint64_t v261 = __swift_allocate_boxed_opaque_existential_1(&v407);
              (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v257 - 8) + 16))(v261, v259, v257);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v404);
              sub_2523FE440(v244, (uint64_t (*)(void))type metadata accessor for SomeEvent);
              v241(v398, v222);
              uint64_t v262 = v377;
              (*(void (**)(uint64_t, uint64_t))(v238 + 32))(v236, v238);
              uint64_t v263 = v378;
              (*(void (**)(uint64_t, uint64_t))(v260 + 32))(v257, v260);
              if (sub_25247A480())
              {
                sub_2523FE554(&qword_269C04B60, MEMORY[0x263F07508]);
                long long v62 = v401;
                uint64_t v65 = v389;
                char v264 = sub_25247A810();
                a1 = v383;
              }
              else
              {
                char v264 = sub_25247A450();
                a1 = v383;
                long long v62 = v401;
                uint64_t v65 = v389;
              }
              uint64_t v265 = *v387;
              uint64_t v266 = v388;
              (*v387)(v263, v388);
              v265(v262, v266);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v407);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v410);
              sub_2523D6FB8((uint64_t)v62, &qword_269C04760);
              sub_2523D6FB8((uint64_t)v65, &qword_269C04760);
              if ((v264 & 1) == 0) {
                break;
              }
              uint64_t v267 = *a1;
              uint64_t v211 = v386;
              uint64_t v212 = v385;
              if (!*a1) {
                goto LABEL_205;
              }
              uint64_t v268 = v395;
              uint64_t v269 = (uint64_t)&v395[v267 + v386];
              sub_252408294((uint64_t)&v395[v267 + v385], v391, &qword_269C04760);
              swift_arrayInitWithTakeFrontToBack();
              sub_252408294(v391, v269, &qword_269C04760);
              id v214 = &v268[-v384];
              uint64_t v215 = v394 + 1;
              uint64_t v213 = v390;
              if (v390 == v394 + 1) {
                goto LABEL_86;
              }
            }
            uint64_t v213 = v390;
            uint64_t v211 = v386;
            uint64_t v212 = v385;
LABEL_86:
            uint64_t v90 = v213 + 1;
            v211 += v384;
            v212 += v384;
          }
          while (v90 != v363);
          uint64_t v90 = v363;
        }
      }
    }
    uint64_t v270 = v364;
    if (v90 < v364) {
      goto LABEL_195;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v390 = v90;
    if (isUniquelyReferenced_nonNull_native) {
      uint64_t v88 = v376;
    }
    else {
      uint64_t v88 = sub_252405194(0, *((void *)v376 + 2) + 1, 1, v376);
    }
    unint64_t v273 = *((void *)v88 + 2);
    unint64_t v272 = *((void *)v88 + 3);
    unint64_t v89 = v273 + 1;
    if (v273 >= v272 >> 1) {
      uint64_t v88 = sub_252405194((char *)(v272 > 1), v273 + 1, 1, v88);
    }
    *((void *)v88 + 2) = v89;
    uint64_t v274 = v88 + 32;
    uint64_t v275 = &v88[16 * v273 + 32];
    uint64_t v276 = v390;
    *(void *)uint64_t v275 = v270;
    *((void *)v275 + 1) = v276;
    if (v273) {
      break;
    }
    unint64_t v89 = 1;
LABEL_14:
    uint64_t v81 = a1[1];
    uint64_t v87 = v390;
    if (v390 >= v81) {
      goto LABEL_164;
    }
  }
  uint64_t v376 = v88;
  while (1)
  {
    unint64_t v277 = v89 - 1;
    if (v89 >= 4)
    {
      uint64_t v282 = &v274[16 * v89];
      uint64_t v283 = *((void *)v282 - 8);
      uint64_t v284 = *((void *)v282 - 7);
      BOOL v288 = __OFSUB__(v284, v283);
      uint64_t v285 = v284 - v283;
      if (v288) {
        goto LABEL_184;
      }
      uint64_t v287 = *((void *)v282 - 6);
      uint64_t v286 = *((void *)v282 - 5);
      BOOL v288 = __OFSUB__(v286, v287);
      uint64_t v280 = v286 - v287;
      char v281 = v288;
      if (v288) {
        goto LABEL_185;
      }
      unint64_t v289 = v89 - 2;
      uint64_t v290 = &v274[16 * v89 - 32];
      uint64_t v292 = *(void *)v290;
      uint64_t v291 = *((void *)v290 + 1);
      BOOL v288 = __OFSUB__(v291, v292);
      uint64_t v293 = v291 - v292;
      if (v288) {
        goto LABEL_187;
      }
      BOOL v288 = __OFADD__(v280, v293);
      uint64_t v294 = v280 + v293;
      if (v288) {
        goto LABEL_190;
      }
      if (v294 >= v285)
      {
        uint64_t v312 = &v274[16 * v277];
        uint64_t v314 = *(void *)v312;
        uint64_t v313 = *((void *)v312 + 1);
        BOOL v288 = __OFSUB__(v313, v314);
        uint64_t v315 = v313 - v314;
        if (v288) {
          goto LABEL_194;
        }
        BOOL v305 = v280 < v315;
        goto LABEL_150;
      }
    }
    else
    {
      if (v89 != 3)
      {
        uint64_t v306 = *((void *)v88 + 4);
        uint64_t v307 = *((void *)v88 + 5);
        BOOL v288 = __OFSUB__(v307, v306);
        uint64_t v299 = v307 - v306;
        char v300 = v288;
        goto LABEL_144;
      }
      uint64_t v279 = *((void *)v88 + 4);
      uint64_t v278 = *((void *)v88 + 5);
      BOOL v288 = __OFSUB__(v278, v279);
      uint64_t v280 = v278 - v279;
      char v281 = v288;
    }
    if (v281) {
      goto LABEL_186;
    }
    unint64_t v289 = v89 - 2;
    uint64_t v295 = &v274[16 * v89 - 32];
    uint64_t v297 = *(void *)v295;
    uint64_t v296 = *((void *)v295 + 1);
    BOOL v298 = __OFSUB__(v296, v297);
    uint64_t v299 = v296 - v297;
    char v300 = v298;
    if (v298) {
      goto LABEL_189;
    }
    uint64_t v301 = &v274[16 * v277];
    uint64_t v303 = *(void *)v301;
    uint64_t v302 = *((void *)v301 + 1);
    BOOL v288 = __OFSUB__(v302, v303);
    uint64_t v304 = v302 - v303;
    if (v288) {
      goto LABEL_192;
    }
    if (__OFADD__(v299, v304)) {
      goto LABEL_193;
    }
    if (v299 + v304 >= v280)
    {
      BOOL v305 = v280 < v304;
LABEL_150:
      if (v305) {
        unint64_t v277 = v289;
      }
      goto LABEL_152;
    }
LABEL_144:
    if (v300) {
      goto LABEL_188;
    }
    uint64_t v308 = &v274[16 * v277];
    uint64_t v310 = *(void *)v308;
    uint64_t v309 = *((void *)v308 + 1);
    BOOL v288 = __OFSUB__(v309, v310);
    uint64_t v311 = v309 - v310;
    if (v288) {
      goto LABEL_191;
    }
    if (v311 < v299) {
      goto LABEL_14;
    }
LABEL_152:
    unint64_t v316 = v277 - 1;
    if (v277 - 1 >= v89)
    {
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
LABEL_191:
      __break(1u);
LABEL_192:
      __break(1u);
LABEL_193:
      __break(1u);
LABEL_194:
      __break(1u);
LABEL_195:
      __break(1u);
LABEL_196:
      __break(1u);
LABEL_197:
      __break(1u);
LABEL_198:
      __break(1u);
LABEL_199:
      __break(1u);
LABEL_200:
      __break(1u);
      goto LABEL_201;
    }
    uint64_t v317 = *a1;
    if (!*a1) {
      goto LABEL_206;
    }
    uint64_t v318 = v62;
    uint64_t v319 = a1;
    v320 = &v274[16 * v316];
    uint64_t v321 = *(void *)v320;
    uint64_t v322 = v274;
    unint64_t v323 = v277;
    uint64_t v324 = &v274[16 * v277];
    uint64_t v325 = *((void *)v324 + 1);
    uint64_t v326 = v375;
    sub_25240326C(v317 + *(void *)(v374 + 72) * *(void *)v320, v317 + *(void *)(v374 + 72) * *(void *)v324, v317 + *(void *)(v374 + 72) * v325, v373);
    uint64_t v375 = v326;
    if (v326) {
      break;
    }
    if (v325 < v321) {
      goto LABEL_181;
    }
    id v327 = v376;
    if (v323 > *((void *)v376 + 2)) {
      goto LABEL_182;
    }
    *(void *)v320 = v321;
    *(void *)&v322[16 * v316 + 8] = v325;
    unint64_t v328 = *((void *)v327 + 2);
    if (v323 >= v328) {
      goto LABEL_183;
    }
    unint64_t v89 = v328 - 1;
    memmove(v324, v324 + 16, 16 * (v328 - 1 - v323));
    uint64_t v274 = v322;
    uint64_t v88 = v376;
    *((void *)v376 + 2) = v328 - 1;
    uint64_t v65 = v389;
    a1 = v319;
    long long v62 = v318;
    if (v328 <= 2) {
      goto LABEL_14;
    }
  }
  uint64_t v329 = v339;
LABEL_178:
  swift_bridgeObjectRelease();
  *(void *)(v329 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_252402260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v110 = a4;
  uint64_t v94 = a1;
  uint64_t v102 = sub_25247A4B0();
  uint64_t v6 = *(void *)(v102 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v102);
  uint64_t v9 = &v92[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v92[-v10];
  uint64_t v120 = type metadata accessor for SomeAccessoryEvent();
  uint64_t v12 = MEMORY[0x270FA5388](v120);
  uint64_t v119 = &v92[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v118 = &v92[-v15];
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = &v92[-v17];
  MEMORY[0x270FA5388](v16);
  uint64_t v117 = &v92[-v19];
  uint64_t v20 = type metadata accessor for SomeEvent();
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v101 = &v92[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v21);
  uint64_t v100 = &v92[-v23];
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04760);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v107 = &v92[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v116 = &v92[-v28];
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v115 = &v92[-v30];
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v33 = &v92[-v32];
  uint64_t result = MEMORY[0x270FA5388](v31);
  uint64_t v105 = &v92[-v36];
  uint64_t v106 = a3;
  uint64_t v93 = a2;
  if (a3 != a2)
  {
    uint64_t v96 = (void (**)(unsigned char *, uint64_t))(v6 + 8);
    uint64_t v103 = *(void *)(v35 + 72);
    uint64_t v121 = v103 * v106;
    uint64_t v99 = v9;
    uint64_t v37 = v103 * (v106 - 1);
    uint64_t v98 = v11;
    uint64_t v95 = v18;
    uint64_t v97 = v24;
    uint64_t v114 = v33;
    do
    {
      uint64_t v38 = 0;
      uint64_t v111 = v94;
      uint64_t v39 = (uint64_t)v105;
      uint64_t v104 = v37;
      do
      {
        uint64_t v40 = *v110;
        uint64_t v109 = v121 + v38;
        sub_2523D6F54(v121 + v38 + v40, v39, &qword_269C04760);
        uint64_t v108 = v37 + v38;
        sub_2523D6F54(v37 + v38 + v40, (uint64_t)v33, &qword_269C04760);
        uint64_t v41 = *(int *)(v24 + 48);
        uint64_t v42 = v115;
        uint64_t v43 = (uint64_t)&v115[v41];
        uint64_t v44 = v39 + v41;
        uint64_t v45 = sub_25247A540();
        uint64_t v132 = *(void *)(v45 - 8);
        uint64_t v46 = *(void (**)(void))(v132 + 16);
        ((void (*)(unsigned char *, uint64_t, uint64_t))v46)(v42, v39, v45);
        sub_2523FDEEC(v44, v43, (uint64_t (*)(void))type metadata accessor for SomeEvent);
        uint64_t v47 = v100;
        sub_2523FDEEC(v43, (uint64_t)v100, (uint64_t (*)(void))type metadata accessor for SomeEvent);
        uint64_t v48 = (uint64_t)v47;
        uint64_t v49 = v117;
        sub_252407EEC(v48, (uint64_t)v117, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
        sub_2523FDEEC((uint64_t)v49, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v122 = v45;
        switch(EnumCaseMultiPayload)
        {
          case 1:
            uint64_t v130 = type metadata accessor for DoorEvent();
            uint64_t v51 = sub_2523FE554(&qword_269C04B50, (void (*)(uint64_t))type metadata accessor for DoorEvent);
            uint64_t v52 = type metadata accessor for DoorEvent;
            break;
          case 2:
            uint64_t v130 = type metadata accessor for GarageDoorEvent();
            uint64_t v51 = sub_2523FE554(&qword_269C04B48, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
            uint64_t v52 = type metadata accessor for GarageDoorEvent;
            break;
          case 3:
            uint64_t v130 = type metadata accessor for LockEvent();
            uint64_t v51 = sub_2523FE554(&qword_269C04B40, (void (*)(uint64_t))type metadata accessor for LockEvent);
            uint64_t v52 = type metadata accessor for LockEvent;
            break;
          case 4:
            uint64_t v130 = type metadata accessor for SecuritySystemEvent();
            uint64_t v51 = sub_2523FE554(&qword_269C04B38, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
            uint64_t v52 = type metadata accessor for SecuritySystemEvent;
            break;
          case 5:
            uint64_t v130 = type metadata accessor for SmokeDetectorEvent();
            uint64_t v51 = sub_2523FE554(&qword_269C04B30, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
            uint64_t v52 = type metadata accessor for SmokeDetectorEvent;
            break;
          case 6:
            uint64_t v130 = type metadata accessor for WindowEvent();
            uint64_t v51 = sub_2523FE554(&qword_269C04B28, (void (*)(uint64_t))type metadata accessor for WindowEvent);
            uint64_t v52 = type metadata accessor for WindowEvent;
            break;
          default:
            uint64_t v130 = type metadata accessor for ContactSensorEvent();
            uint64_t v51 = sub_2523FE554(&qword_269C04B58, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
            uint64_t v52 = type metadata accessor for ContactSensorEvent;
            break;
        }
        uint64_t v53 = v52;
        uint64_t v131 = v51;
        uint64_t v54 = __swift_allocate_boxed_opaque_existential_1(&v129);
        sub_252407EEC((uint64_t)v18, (uint64_t)v54, (uint64_t (*)(void))v53);
        uint64_t v55 = v130;
        uint64_t v56 = v131;
        uint64_t v57 = __swift_project_boxed_opaque_existential_1(&v129, v130);
        uint64_t v127 = v55;
        uint64_t v128 = *(void *)(v56 + 16);
        uint64_t v58 = __swift_allocate_boxed_opaque_existential_1(&v126);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v55 - 8) + 16))(v58, v57, v55);
        sub_2523FE440((uint64_t)v117, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v129);
        uint64_t v59 = v127;
        uint64_t v60 = v128;
        uint64_t v61 = __swift_project_boxed_opaque_existential_1(&v126, v127);
        uint64_t v130 = v59;
        uint64_t v113 = *(void *)(v60 + 8);
        uint64_t v131 = v113;
        long long v62 = __swift_allocate_boxed_opaque_existential_1(&v129);
        uint64_t v63 = *(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v59 - 8) + 16);
        uint64_t v112 = v62;
        v63(v62, v61, v59);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v126);
        sub_2523FE440(v43, (uint64_t (*)(void))type metadata accessor for SomeEvent);
        uint64_t v64 = *(void (**)(unsigned char *, uint64_t))(v132 + 8);
        v132 += 8;
        v64(v115, v122);
        uint64_t v65 = *(int *)(v24 + 48);
        uint64_t v66 = (uint64_t)&v116[v65];
        uint64_t v67 = (uint64_t)&v114[v65];
        v46();
        sub_2523FDEEC(v67, v66, (uint64_t (*)(void))type metadata accessor for SomeEvent);
        uint64_t v68 = v101;
        sub_2523FDEEC(v66, (uint64_t)v101, (uint64_t (*)(void))type metadata accessor for SomeEvent);
        uint64_t v69 = (uint64_t)v68;
        uint64_t v70 = v118;
        sub_252407EEC(v69, (uint64_t)v118, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
        sub_2523FDEEC((uint64_t)v70, (uint64_t)v119, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v127 = type metadata accessor for DoorEvent();
            uint64_t v71 = sub_2523FE554(&qword_269C04B50, (void (*)(uint64_t))type metadata accessor for DoorEvent);
            uint64_t v72 = type metadata accessor for DoorEvent;
            break;
          case 2u:
            uint64_t v127 = type metadata accessor for GarageDoorEvent();
            uint64_t v71 = sub_2523FE554(&qword_269C04B48, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
            uint64_t v72 = type metadata accessor for GarageDoorEvent;
            break;
          case 3u:
            uint64_t v127 = type metadata accessor for LockEvent();
            uint64_t v71 = sub_2523FE554(&qword_269C04B40, (void (*)(uint64_t))type metadata accessor for LockEvent);
            uint64_t v72 = type metadata accessor for LockEvent;
            break;
          case 4u:
            uint64_t v127 = type metadata accessor for SecuritySystemEvent();
            uint64_t v71 = sub_2523FE554(&qword_269C04B38, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
            uint64_t v72 = type metadata accessor for SecuritySystemEvent;
            break;
          case 5u:
            uint64_t v127 = type metadata accessor for SmokeDetectorEvent();
            uint64_t v71 = sub_2523FE554(&qword_269C04B30, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
            uint64_t v72 = type metadata accessor for SmokeDetectorEvent;
            break;
          case 6u:
            uint64_t v127 = type metadata accessor for WindowEvent();
            uint64_t v71 = sub_2523FE554(&qword_269C04B28, (void (*)(uint64_t))type metadata accessor for WindowEvent);
            uint64_t v72 = type metadata accessor for WindowEvent;
            break;
          default:
            uint64_t v127 = type metadata accessor for ContactSensorEvent();
            uint64_t v71 = sub_2523FE554(&qword_269C04B58, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
            uint64_t v72 = type metadata accessor for ContactSensorEvent;
            break;
        }
        uint64_t v73 = v72;
        uint64_t v128 = v71;
        uint64_t v74 = __swift_allocate_boxed_opaque_existential_1(&v126);
        sub_252407EEC((uint64_t)v119, (uint64_t)v74, (uint64_t (*)(void))v73);
        uint64_t v76 = v127;
        uint64_t v75 = v128;
        uint64_t v77 = __swift_project_boxed_opaque_existential_1(&v126, v127);
        uint64_t v124 = v76;
        uint64_t v125 = *(void *)(v75 + 16);
        uint64_t v78 = __swift_allocate_boxed_opaque_existential_1(&v123);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v76 - 8) + 16))(v78, v77, v76);
        sub_2523FE440((uint64_t)v118, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v126);
        uint64_t v80 = v124;
        uint64_t v79 = v125;
        uint64_t v81 = __swift_project_boxed_opaque_existential_1(&v123, v124);
        uint64_t v127 = v80;
        uint64_t v128 = *(void *)(v79 + 8);
        uint64_t v82 = v128;
        uint64_t v83 = __swift_allocate_boxed_opaque_existential_1(&v126);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v80 - 8) + 16))(v83, v81, v80);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
        sub_2523FE440(v66, (uint64_t (*)(void))type metadata accessor for SomeEvent);
        v64(v116, v122);
        uint64_t v84 = v98;
        (*(void (**)(uint64_t))(v113 + 32))(v59);
        uint64_t v85 = v99;
        (*(void (**)(uint64_t, uint64_t))(v82 + 32))(v80, v82);
        if (sub_25247A480())
        {
          sub_2523FE554(&qword_269C04B60, MEMORY[0x263F07508]);
          uint64_t v33 = v114;
          uint64_t v39 = (uint64_t)v105;
          char v86 = sub_25247A810();
          uint64_t v18 = v95;
        }
        else
        {
          char v86 = sub_25247A450();
          uint64_t v18 = v95;
          uint64_t v33 = v114;
          uint64_t v39 = (uint64_t)v105;
        }
        uint64_t v87 = *v96;
        uint64_t v88 = v85;
        uint64_t v89 = v102;
        (*v96)(v88, v102);
        v87(v84, v89);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v126);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v129);
        sub_2523D6FB8((uint64_t)v33, &qword_269C04760);
        uint64_t result = sub_2523D6FB8(v39, &qword_269C04760);
        uint64_t v24 = v97;
        uint64_t v37 = v104;
        if ((v86 & 1) == 0) {
          break;
        }
        uint64_t v90 = *v110;
        if (!*v110)
        {
          __break(1u);
          JUMPOUT(0x252403234);
        }
        uint64_t v91 = v90 + v104 + v38;
        sub_252408294(v90 + v121 + v38, (uint64_t)v107, &qword_269C04760);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = sub_252408294((uint64_t)v107, v91, &qword_269C04760);
        v38 -= v103;
        ++v111;
      }
      while (v106 != v111);
      v37 += v103;
      v121 += v103;
      ++v106;
    }
    while (v106 != v93);
  }
  return result;
}

uint64_t sub_25240326C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v209 = sub_25247A4B0();
  uint64_t v8 = *(void *)(v209 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v209);
  uint64_t v11 = &v190[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = &v190[-v13];
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = &v190[-v16];
  MEMORY[0x270FA5388](v15);
  uint64_t v197 = &v190[-v18];
  uint64_t v215 = type metadata accessor for SomeAccessoryEvent();
  uint64_t v19 = MEMORY[0x270FA5388](v215);
  unint64_t v208 = &v190[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v207 = &v190[-v22];
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  int v196 = &v190[-v24];
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v195 = &v190[-v26];
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v206 = (uint64_t *)&v190[-v28];
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v205 = (uint64_t)&v190[-v30];
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v204 = &v190[-v32];
  MEMORY[0x270FA5388](v31);
  uint64_t v203 = &v190[-v33];
  uint64_t v34 = type metadata accessor for SomeEvent();
  uint64_t v35 = MEMORY[0x270FA5388](v34 - 8);
  uint64_t v194 = &v190[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v193 = &v190[-v38];
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  char v192 = &v190[-v40];
  MEMORY[0x270FA5388](v39);
  id v191 = &v190[-v41];
  uint64_t v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04760);
  uint64_t v42 = MEMORY[0x270FA5388](v216);
  uint64_t v202 = &v190[-((v43 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v201 = &v190[-v45];
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v211 = (uint64_t *)&v190[-v47];
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v49 = MEMORY[0x270FA5388](v48);
  uint64_t v200 = &v190[-v50];
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  id v199 = &v190[-v52];
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v210 = &v190[-v54];
  MEMORY[0x270FA5388](v53);
  uint64_t v198 = &v190[-v56];
  uint64_t v213 = *(void *)(v57 + 72);
  if (!v213)
  {
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  if (a2 - a1 == 0x8000000000000000 && v213 == -1) {
    goto LABEL_100;
  }
  int64_t v58 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v213 == -1) {
    goto LABEL_101;
  }
  uint64_t v59 = (uint64_t)(a2 - a1) / v213;
  char v228 = (unsigned char *)a1;
  uint64_t v227 = (unsigned char *)a4;
  uint64_t v60 = v58 / v213;
  if (v59 < v58 / v213)
  {
    if ((v59 & 0x8000000000000000) == 0)
    {
      uint64_t v61 = v59 * v213;
      uint64_t v62 = (uint64_t)v198;
      if (a4 < a1 || a1 + v61 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a1)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      uint64_t v207 = (unsigned char *)(a4 + v61);
      unint64_t v226 = a4 + v61;
      BOOL v65 = v61 < 1 || a2 >= a3;
      uint64_t v66 = v210;
      if (!v65)
      {
        uint64_t v201 = (unsigned char *)(v8 + 8);
        uint64_t v202 = v17;
        unint64_t v212 = a3;
        do
        {
          sub_2523D6F54(a2, v62, &qword_269C04760);
          sub_2523D6F54(a4, (uint64_t)v66, &qword_269C04760);
          uint64_t v67 = *(int *)(v216 + 48);
          uint64_t v68 = v199;
          uint64_t v69 = (uint64_t)&v199[v67];
          uint64_t v70 = v62 + v67;
          uint64_t v71 = sub_25247A540();
          uint64_t v72 = *(void *)(v71 - 8);
          uint64_t v73 = *(void (**)(void))(v72 + 16);
          ((void (*)(unsigned char *, uint64_t, uint64_t))v73)(v68, v62, v71);
          sub_2523FDEEC(v70, v69, (uint64_t (*)(void))type metadata accessor for SomeEvent);
          uint64_t v74 = v191;
          sub_2523FDEEC(v69, (uint64_t)v191, (uint64_t (*)(void))type metadata accessor for SomeEvent);
          uint64_t v75 = (uint64_t)v74;
          uint64_t v76 = v203;
          sub_252407EEC(v75, (uint64_t)v203, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
          sub_2523FDEEC((uint64_t)v76, (uint64_t)v204, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          unint64_t v214 = a2;
          switch(EnumCaseMultiPayload)
          {
            case 1:
              uint64_t v224 = type metadata accessor for DoorEvent();
              uint64_t v78 = sub_2523FE554(&qword_269C04B50, (void (*)(uint64_t))type metadata accessor for DoorEvent);
              uint64_t v79 = type metadata accessor for DoorEvent;
              break;
            case 2:
              uint64_t v224 = type metadata accessor for GarageDoorEvent();
              uint64_t v78 = sub_2523FE554(&qword_269C04B48, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
              uint64_t v79 = type metadata accessor for GarageDoorEvent;
              break;
            case 3:
              uint64_t v224 = type metadata accessor for LockEvent();
              uint64_t v78 = sub_2523FE554(&qword_269C04B40, (void (*)(uint64_t))type metadata accessor for LockEvent);
              uint64_t v79 = type metadata accessor for LockEvent;
              break;
            case 4:
              uint64_t v224 = type metadata accessor for SecuritySystemEvent();
              uint64_t v78 = sub_2523FE554(&qword_269C04B38, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
              uint64_t v79 = type metadata accessor for SecuritySystemEvent;
              break;
            case 5:
              uint64_t v224 = type metadata accessor for SmokeDetectorEvent();
              uint64_t v78 = sub_2523FE554(&qword_269C04B30, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
              uint64_t v79 = type metadata accessor for SmokeDetectorEvent;
              break;
            case 6:
              uint64_t v224 = type metadata accessor for WindowEvent();
              uint64_t v78 = sub_2523FE554(&qword_269C04B28, (void (*)(uint64_t))type metadata accessor for WindowEvent);
              uint64_t v79 = type metadata accessor for WindowEvent;
              break;
            default:
              uint64_t v224 = type metadata accessor for ContactSensorEvent();
              uint64_t v78 = sub_2523FE554(&qword_269C04B58, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
              uint64_t v79 = type metadata accessor for ContactSensorEvent;
              break;
          }
          uint64_t v80 = v79;
          uint64_t v225 = v78;
          uint64_t v81 = __swift_allocate_boxed_opaque_existential_1(&v223);
          sub_252407EEC((uint64_t)v204, (uint64_t)v81, (uint64_t (*)(void))v80);
          uint64_t v82 = v224;
          uint64_t v83 = v225;
          uint64_t v84 = __swift_project_boxed_opaque_existential_1(&v223, v224);
          uint64_t v221 = v82;
          uint64_t v222 = *(void *)(v83 + 16);
          uint64_t v85 = __swift_allocate_boxed_opaque_existential_1(&v220);
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v82 - 8) + 16))(v85, v84, v82);
          sub_2523FE440((uint64_t)v203, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v223);
          uint64_t v87 = v221;
          uint64_t v86 = v222;
          uint64_t v88 = __swift_project_boxed_opaque_existential_1(&v220, v221);
          uint64_t v224 = v87;
          uint64_t v89 = *(void *)(v86 + 8);
          uint64_t v225 = v89;
          uint64_t v90 = __swift_allocate_boxed_opaque_existential_1(&v223);
          uint64_t v91 = *(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v87 - 8) + 16);
          uint64_t v211 = v90;
          v91(v90, v88, v87);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v220);
          sub_2523FE440(v69, (uint64_t (*)(void))type metadata accessor for SomeEvent);
          uint64_t v92 = *(void (**)(unsigned char *, uint64_t))(v72 + 8);
          unint64_t v208 = (unsigned char *)(v72 + 8);
          v92(v199, v71);
          uint64_t v93 = *(int *)(v216 + 48);
          uint64_t v94 = (uint64_t)&v200[v93];
          uint64_t v95 = (uint64_t)&v210[v93];
          v73();
          sub_2523FDEEC(v95, v94, (uint64_t (*)(void))type metadata accessor for SomeEvent);
          uint64_t v96 = v192;
          sub_2523FDEEC(v94, (uint64_t)v192, (uint64_t (*)(void))type metadata accessor for SomeEvent);
          uint64_t v97 = (uint64_t)v96;
          uint64_t v98 = v205;
          sub_252407EEC(v97, v205, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
          sub_2523FDEEC(v98, (uint64_t)v206, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v221 = type metadata accessor for DoorEvent();
              uint64_t v99 = sub_2523FE554(&qword_269C04B50, (void (*)(uint64_t))type metadata accessor for DoorEvent);
              uint64_t v100 = type metadata accessor for DoorEvent;
              break;
            case 2u:
              uint64_t v221 = type metadata accessor for GarageDoorEvent();
              uint64_t v99 = sub_2523FE554(&qword_269C04B48, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
              uint64_t v100 = type metadata accessor for GarageDoorEvent;
              break;
            case 3u:
              uint64_t v221 = type metadata accessor for LockEvent();
              uint64_t v99 = sub_2523FE554(&qword_269C04B40, (void (*)(uint64_t))type metadata accessor for LockEvent);
              uint64_t v100 = type metadata accessor for LockEvent;
              break;
            case 4u:
              uint64_t v221 = type metadata accessor for SecuritySystemEvent();
              uint64_t v99 = sub_2523FE554(&qword_269C04B38, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
              uint64_t v100 = type metadata accessor for SecuritySystemEvent;
              break;
            case 5u:
              uint64_t v221 = type metadata accessor for SmokeDetectorEvent();
              uint64_t v99 = sub_2523FE554(&qword_269C04B30, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
              uint64_t v100 = type metadata accessor for SmokeDetectorEvent;
              break;
            case 6u:
              uint64_t v221 = type metadata accessor for WindowEvent();
              uint64_t v99 = sub_2523FE554(&qword_269C04B28, (void (*)(uint64_t))type metadata accessor for WindowEvent);
              uint64_t v100 = type metadata accessor for WindowEvent;
              break;
            default:
              uint64_t v221 = type metadata accessor for ContactSensorEvent();
              uint64_t v99 = sub_2523FE554(&qword_269C04B58, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
              uint64_t v100 = type metadata accessor for ContactSensorEvent;
              break;
          }
          uint64_t v101 = v100;
          uint64_t v222 = v99;
          uint64_t v102 = __swift_allocate_boxed_opaque_existential_1(&v220);
          sub_252407EEC((uint64_t)v206, (uint64_t)v102, (uint64_t (*)(void))v101);
          uint64_t v103 = v221;
          uint64_t v104 = v222;
          uint64_t v105 = __swift_project_boxed_opaque_existential_1(&v220, v221);
          uint64_t v218 = v103;
          uint64_t v219 = *(void *)(v104 + 16);
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v217);
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v103 - 8) + 16))(boxed_opaque_existential_1, v105, v103);
          sub_2523FE440(v205, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v220);
          uint64_t v107 = v218;
          uint64_t v108 = v219;
          uint64_t v109 = __swift_project_boxed_opaque_existential_1(v217, v218);
          uint64_t v221 = v107;
          uint64_t v110 = *(void *)(v108 + 8);
          uint64_t v222 = v110;
          uint64_t v111 = __swift_allocate_boxed_opaque_existential_1(&v220);
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v107 - 8) + 16))(v111, v109, v107);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v217);
          sub_2523FE440(v94, (uint64_t (*)(void))type metadata accessor for SomeEvent);
          v92(v200, v71);
          uint64_t v112 = v197;
          (*(void (**)(uint64_t, uint64_t))(v89 + 32))(v87, v89);
          uint64_t v113 = v202;
          (*(void (**)(uint64_t, uint64_t))(v110 + 32))(v107, v110);
          if (sub_25247A480())
          {
            sub_2523FE554(&qword_269C04B60, MEMORY[0x263F07508]);
            uint64_t v66 = v210;
            uint64_t v114 = (uint64_t)v198;
            char v115 = sub_25247A810();
            unint64_t v116 = v212;
          }
          else
          {
            char v115 = sub_25247A450();
            unint64_t v116 = v212;
            uint64_t v66 = v210;
            uint64_t v114 = (uint64_t)v198;
          }
          uint64_t v117 = *(void (**)(unsigned char *, uint64_t))v201;
          uint64_t v118 = v209;
          (*(void (**)(unsigned char *, uint64_t))v201)(v113, v209);
          v117(v112, v118);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v220);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v223);
          sub_2523D6FB8((uint64_t)v66, &qword_269C04760);
          sub_2523D6FB8(v114, &qword_269C04760);
          unint64_t v119 = (unint64_t)v228;
          uint64_t v62 = v114;
          if (v115)
          {
            unint64_t v120 = v214 + v213;
            if ((unint64_t)v228 < v214 || (unint64_t)v228 >= v120)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v228 == (unsigned char *)v214)
            {
              unint64_t v119 = v214;
            }
            else
            {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          else
          {
            unint64_t v121 = v214;
            unint64_t v122 = (unint64_t)&v227[v213];
            if (v228 < v227 || (unint64_t)v228 >= v122)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v228 != v227)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v227 = (unsigned char *)v122;
            unint64_t v120 = v121;
          }
          char v228 = (unsigned char *)(v119 + v213);
          a4 = (unint64_t)v227;
          if (v227 >= v207) {
            break;
          }
          a2 = v120;
        }
        while (v120 < v116);
      }
      goto LABEL_98;
    }
LABEL_102:
    sub_25247B100();
    __break(1u);
    JUMPOUT(0x252405124);
  }
  if (v60 < 0) {
    goto LABEL_102;
  }
  uint64_t v63 = v60 * v213;
  uint64_t v64 = (uint64_t)v211;
  uint64_t v210 = v55;
  if (a4 < a2 || a2 + v63 <= a4)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (a4 != a2)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  unint64_t v123 = a4 + v63;
  unint64_t v226 = a4 + v63;
  char v228 = (unsigned char *)a2;
  if (v63 >= 1 && a1 < a2)
  {
    id v199 = (unsigned char *)(v8 + 8);
    uint64_t v198 = (unsigned char *)a4;
    uint64_t v125 = -v213;
    uint64_t v197 = (unsigned char *)a1;
    uint64_t v203 = v11;
    uint64_t v200 = v14;
    uint64_t v205 = -v213;
    do
    {
      uint64_t v126 = v210;
      sub_2523D6F54(v123 + v125, (uint64_t)v210, &qword_269C04760);
      uint64_t v204 = (unsigned char *)(a2 + v125);
      sub_2523D6F54(a2 + v125, v64, &qword_269C04760);
      uint64_t v127 = *(int *)(v216 + 48);
      uint64_t v128 = v201;
      uint64_t v129 = (uint64_t)&v201[v127];
      uint64_t v130 = (uint64_t)&v126[v127];
      uint64_t v131 = sub_25247A540();
      uint64_t v213 = *(void *)(v131 - 8);
      uint64_t v132 = *(void (**)(void))(v213 + 16);
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v132)(v128, v126, v131);
      sub_2523FDEEC(v130, v129, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      uint64_t v133 = v193;
      sub_2523FDEEC(v129, (uint64_t)v193, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      os_log_type_t v134 = v195;
      sub_252407EEC((uint64_t)v133, (uint64_t)v195, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      uint64_t v135 = v196;
      sub_2523FDEEC((uint64_t)v134, (uint64_t)v196, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      int v136 = swift_getEnumCaseMultiPayload();
      unint64_t v212 = a3;
      unint64_t v214 = a2;
      switch(v136)
      {
        case 1:
          uint64_t v224 = type metadata accessor for DoorEvent();
          uint64_t v137 = sub_2523FE554(&qword_269C04B50, (void (*)(uint64_t))type metadata accessor for DoorEvent);
          uint64_t v138 = type metadata accessor for DoorEvent;
          break;
        case 2:
          uint64_t v224 = type metadata accessor for GarageDoorEvent();
          uint64_t v137 = sub_2523FE554(&qword_269C04B48, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
          uint64_t v138 = type metadata accessor for GarageDoorEvent;
          break;
        case 3:
          uint64_t v224 = type metadata accessor for LockEvent();
          uint64_t v137 = sub_2523FE554(&qword_269C04B40, (void (*)(uint64_t))type metadata accessor for LockEvent);
          uint64_t v138 = type metadata accessor for LockEvent;
          break;
        case 4:
          uint64_t v224 = type metadata accessor for SecuritySystemEvent();
          uint64_t v137 = sub_2523FE554(&qword_269C04B38, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
          uint64_t v138 = type metadata accessor for SecuritySystemEvent;
          break;
        case 5:
          uint64_t v224 = type metadata accessor for SmokeDetectorEvent();
          uint64_t v137 = sub_2523FE554(&qword_269C04B30, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
          uint64_t v138 = type metadata accessor for SmokeDetectorEvent;
          break;
        case 6:
          uint64_t v224 = type metadata accessor for WindowEvent();
          uint64_t v137 = sub_2523FE554(&qword_269C04B28, (void (*)(uint64_t))type metadata accessor for WindowEvent);
          uint64_t v138 = type metadata accessor for WindowEvent;
          break;
        default:
          uint64_t v224 = type metadata accessor for ContactSensorEvent();
          uint64_t v137 = sub_2523FE554(&qword_269C04B58, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
          uint64_t v138 = type metadata accessor for ContactSensorEvent;
          break;
      }
      uint64_t v139 = v138;
      uint64_t v225 = v137;
      unint64_t v140 = __swift_allocate_boxed_opaque_existential_1(&v223);
      sub_252407EEC((uint64_t)v135, (uint64_t)v140, (uint64_t (*)(void))v139);
      uint64_t v141 = v224;
      uint64_t v142 = v225;
      uint64_t v143 = __swift_project_boxed_opaque_existential_1(&v223, v224);
      uint64_t v221 = v141;
      uint64_t v222 = *(void *)(v142 + 16);
      uint64_t v144 = __swift_allocate_boxed_opaque_existential_1(&v220);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v141 - 8) + 16))(v144, v143, v141);
      sub_2523FE440((uint64_t)v134, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v223);
      uint64_t v146 = v221;
      uint64_t v145 = v222;
      uint64_t v147 = __swift_project_boxed_opaque_existential_1(&v220, v221);
      uint64_t v224 = v146;
      uint64_t v148 = *(void *)(v145 + 8);
      uint64_t v225 = v148;
      uint64_t v149 = __swift_allocate_boxed_opaque_existential_1(&v223);
      uint64_t v150 = *(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v146 - 8) + 16);
      uint64_t v206 = v149;
      v150(v149, v147, v146);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v220);
      sub_2523FE440(v129, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      uint64_t v152 = v213 + 8;
      uint64_t v151 = *(void (**)(unsigned char *, uint64_t))(v213 + 8);
      v151(v201, v131);
      uint64_t v153 = *(int *)(v216 + 48);
      uint64_t v154 = (uint64_t)&v202[v153];
      uint64_t v155 = (uint64_t)v211 + v153;
      v132();
      sub_2523FDEEC(v155, v154, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      uint64_t v156 = v194;
      sub_2523FDEEC(v154, (uint64_t)v194, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      uint64_t v157 = (uint64_t)v156;
      uint64_t v158 = v207;
      sub_252407EEC(v157, (uint64_t)v207, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      sub_2523FDEEC((uint64_t)v158, (uint64_t)v208, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      int v159 = swift_getEnumCaseMultiPayload();
      uint64_t v213 = v152;
      switch(v159)
      {
        case 1:
          uint64_t v221 = type metadata accessor for DoorEvent();
          uint64_t v160 = sub_2523FE554(&qword_269C04B50, (void (*)(uint64_t))type metadata accessor for DoorEvent);
          uint64_t v161 = type metadata accessor for DoorEvent;
          break;
        case 2:
          uint64_t v221 = type metadata accessor for GarageDoorEvent();
          uint64_t v160 = sub_2523FE554(&qword_269C04B48, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
          uint64_t v161 = type metadata accessor for GarageDoorEvent;
          break;
        case 3:
          uint64_t v221 = type metadata accessor for LockEvent();
          uint64_t v160 = sub_2523FE554(&qword_269C04B40, (void (*)(uint64_t))type metadata accessor for LockEvent);
          uint64_t v161 = type metadata accessor for LockEvent;
          break;
        case 4:
          uint64_t v221 = type metadata accessor for SecuritySystemEvent();
          uint64_t v160 = sub_2523FE554(&qword_269C04B38, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
          uint64_t v161 = type metadata accessor for SecuritySystemEvent;
          break;
        case 5:
          uint64_t v221 = type metadata accessor for SmokeDetectorEvent();
          uint64_t v160 = sub_2523FE554(&qword_269C04B30, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
          uint64_t v161 = type metadata accessor for SmokeDetectorEvent;
          break;
        case 6:
          uint64_t v221 = type metadata accessor for WindowEvent();
          uint64_t v160 = sub_2523FE554(&qword_269C04B28, (void (*)(uint64_t))type metadata accessor for WindowEvent);
          uint64_t v161 = type metadata accessor for WindowEvent;
          break;
        default:
          uint64_t v221 = type metadata accessor for ContactSensorEvent();
          uint64_t v160 = sub_2523FE554(&qword_269C04B58, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
          uint64_t v161 = type metadata accessor for ContactSensorEvent;
          break;
      }
      uint64_t v162 = v161;
      uint64_t v222 = v160;
      uint64_t v163 = __swift_allocate_boxed_opaque_existential_1(&v220);
      sub_252407EEC((uint64_t)v208, (uint64_t)v163, (uint64_t (*)(void))v162);
      uint64_t v164 = v221;
      uint64_t v165 = v222;
      uint64_t v166 = __swift_project_boxed_opaque_existential_1(&v220, v221);
      uint64_t v218 = v164;
      uint64_t v219 = *(void *)(v165 + 16);
      uint64_t v167 = __swift_allocate_boxed_opaque_existential_1(v217);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v164 - 8) + 16))(v167, v166, v164);
      sub_2523FE440((uint64_t)v207, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v220);
      uint64_t v168 = v218;
      uint64_t v169 = v219;
      uint64_t v170 = __swift_project_boxed_opaque_existential_1(v217, v218);
      uint64_t v221 = v168;
      uint64_t v222 = *(void *)(v169 + 8);
      uint64_t v171 = v222;
      uint64_t v172 = __swift_allocate_boxed_opaque_existential_1(&v220);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v168 - 8) + 16))(v172, v170, v168);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v217);
      sub_2523FE440(v154, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      v151(v202, v131);
      uint64_t v173 = v200;
      (*(void (**)(uint64_t, uint64_t))(v148 + 32))(v146, v148);
      uint64_t v174 = *(void (**)(uint64_t, uint64_t))(v171 + 32);
      uint64_t v175 = v171;
      uint64_t v176 = v173;
      uint64_t v177 = v203;
      v174(v168, v175);
      if (sub_25247A480())
      {
        sub_2523FE554(&qword_269C04B60, MEMORY[0x263F07508]);
        uint64_t v64 = (uint64_t)v211;
        uint64_t v178 = v210;
        char v179 = sub_25247A810();
        unint64_t v180 = v212;
      }
      else
      {
        char v179 = sub_25247A450();
        unint64_t v180 = v212;
        uint64_t v64 = (uint64_t)v211;
        uint64_t v178 = v210;
      }
      uint64_t v181 = v205;
      uint64_t v213 = v180 + v205;
      uint64_t v182 = *(void (**)(unsigned char *, uint64_t))v199;
      uint64_t v183 = v177;
      uint64_t v184 = v209;
      (*(void (**)(unsigned char *, uint64_t))v199)(v183, v209);
      v182(v176, v184);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v220);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v223);
      sub_2523D6FB8(v64, &qword_269C04760);
      sub_2523D6FB8((uint64_t)v178, &qword_269C04760);
      if (v179)
      {
        uint64_t v185 = v213;
        if (v180 < v214 || v213 >= v214)
        {
          uint64_t v186 = v204;
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v125 = v205;
          unint64_t v187 = (unint64_t)v198;
        }
        else
        {
          uint64_t v125 = v205;
          uint64_t v186 = v204;
          unint64_t v187 = (unint64_t)v198;
          if (v180 != v214) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v228 += v125;
      }
      else
      {
        unint64_t v188 = v226;
        v226 += v181;
        uint64_t v125 = v181;
        uint64_t v185 = v213;
        uint64_t v186 = (unsigned char *)v214;
        if (v180 < v188 || v213 >= v188)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v180 != v188)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v187 = (unint64_t)v198;
      }
      unint64_t v123 = v226;
      if (v226 <= v187) {
        break;
      }
      a2 = (unint64_t)v186;
      a3 = v185;
    }
    while (v186 > v197);
  }
LABEL_98:
  sub_252405290((unint64_t *)&v228, (unint64_t *)&v227, (uint64_t *)&v226);
  return 1;
}

char *sub_252405194(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C04B68);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_252405290(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04760);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_25247B100();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_2524053D4(uint64_t a1)
{
  return sub_252405194(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2524053E8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 24) = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_2524054D4;
  return v7(v3 + 16, a2);
}

uint64_t sub_2524054D4()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_252405608;
  }
  else {
    uint64_t v2 = sub_2524055E8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2524055E8()
{
  **(void **)(v0 + 24) = *(void *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_252405608()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_252405620(void *a1)
{
  return sub_2523E0900(0, a1[2], 0, a1);
}

uint64_t sub_252405634(uint64_t a1, unsigned char *a2, int a3, int a4, int a5, int a6)
{
  LODWORD(v216) = a6;
  int v222 = a3;
  int v223 = a5;
  LODWORD(v217) = a4;
  *(void *)&long long v230 = a1;
  uint64_t v7 = sub_25247A030();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v224 = &v199[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v212 = &v199[-v12];
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unint64_t v208 = &v199[-v14];
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v221 = &v199[-v16];
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v209 = &v199[-v18];
  MEMORY[0x270FA5388](v17);
  uint64_t v206 = &v199[-v19];
  uint64_t v20 = sub_25247A540();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v218 = (uint64_t)&v199[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v207 = &v199[-v25];
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v204 = &v199[-v27];
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = &v199[-v29];
  MEMORY[0x270FA5388](v28);
  uint64_t v205 = &v199[-v31];
  uint64_t v32 = sub_25247A6A0();
  uint64_t v226 = *(void *)(v32 - 8);
  uint64_t v227 = v32;
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  uint64_t v219 = &v199[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v211 = &v199[-v36];
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v213 = &v199[-v38];
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = &v199[-v40];
  MEMORY[0x270FA5388](v39);
  uint64_t v215 = &v199[-v42];
  uint64_t v43 = sub_25247A4B0();
  uint64_t v232 = *(void *)(v43 - 8);
  uint64_t v233 = v43;
  uint64_t v44 = MEMORY[0x270FA5388](v43);
  os_log_t v220 = (os_log_t)&v199[-((v45 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  unint64_t v214 = &v199[-v47];
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  os_log_t v225 = (os_log_t)&v199[-v49];
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v52 = &v199[-v51];
  MEMORY[0x270FA5388](v50);
  uint64_t v54 = &v199[-v53];
  type metadata accessor for Configuration();
  uint64_t v55 = (uint64_t)static Configuration.cloudKitRecordDateCoalescingWindowSeconds.getter();
  char v228 = v54;
  uint64_t v229 = v52;
  if (v55 < 1)
  {
    sub_25247A010();
    sub_252479FF0();
    sub_2523E7604((uint64_t)v219);
    (*(void (**)(uint64_t, void, uint64_t))(v21 + 16))(v218, v230, v20);
    uint64_t v95 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16);
    uint64_t v96 = v212;
    v95(v212, a2, v7);
    v95(v224, a2, v7);
    uint64_t v97 = sub_25247A680();
    os_log_type_t v98 = sub_25247AD30();
    int v99 = v98;
    uint64_t v100 = v20;
    if (os_log_type_enabled(v97, v98))
    {
      uint64_t v101 = swift_slowAlloc();
      *(void *)&long long v230 = swift_slowAlloc();
      uint64_t v235 = (unsigned char *)v230;
      *(_DWORD *)uint64_t v101 = 136315650;
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      LODWORD(v221) = v99;
      uint64_t v102 = v218;
      os_log_t v220 = v97;
      uint64_t v103 = sub_25247B200();
      uint64_t v234 = sub_25245DA98(v103, v104, (uint64_t *)&v235);
      uint64_t v217 = (uint64_t *)&v235;
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v102, v100);
      *(_WORD *)(v101 + 12) = 2080;
      uint64_t v216 = v101 + 14;
      os_log_t v105 = v225;
      sub_25247A010();
      sub_2523FE554(&qword_269C04B00, MEMORY[0x263F07490]);
      uint64_t v106 = v233;
      uint64_t v107 = sub_25247B200();
      unint64_t v109 = v108;
      uint64_t v210 = v7;
      uint64_t v218 = *(void *)(v232 + 8);
      ((void (*)(os_log_t, uint64_t))v218)(v105, v106);
      uint64_t v234 = sub_25245DA98(v107, v109, (uint64_t *)&v235);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      uint64_t v110 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
      v110(v212, v7);
      *(_WORD *)(v101 + 22) = 2080;
      uint64_t v231 = v101 + 24;
      uint64_t v111 = v224;
      sub_252479FF0();
      uint64_t v112 = sub_25247B200();
      unint64_t v114 = v113;
      ((void (*)(os_log_t, uint64_t))v218)(v105, v106);
      uint64_t v234 = sub_25245DA98(v112, v114, (uint64_t *)&v235);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      v110(v111, v210);
      uint64_t v97 = v220;
      _os_log_impl(&dword_2523CF000, v220, (os_log_type_t)v221, "[%s] Not using coalescing window, start date %s, end date %s", (uint8_t *)v101, 0x20u);
      uint64_t v115 = v230;
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v115, -1, -1);
      MEMORY[0x2533B5DC0](v101, -1, -1);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v218, v20);
      uint64_t v131 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
      v131(v96, v7);
      v131(v224, v7);
    }

    (*(void (**)(unsigned char *, uint64_t))(v226 + 8))(v219, v227);
    goto LABEL_33;
  }
  uint64_t v218 = v55;
  uint64_t v219 = a2;
  uint64_t v224 = (unsigned char *)v21;
  uint64_t v56 = v20;
  uint64_t v231 = v8;
  if (v217)
  {
    os_log_t v57 = v225;
    int64_t v58 = v219;
    sub_25247A010();
    sub_25247A1D0();
    double v60 = v59;
    uint64_t v61 = v232;
    uint64_t v62 = (unsigned char *)(v232 + 8);
    uint64_t v63 = *(uint64_t (**)(os_log_t, uint64_t))(v232 + 8);
    uint64_t result = v63(v57, v233);
    uint64_t v65 = v230;
    if ((~*(void *)&v60 & 0x7FF0000000000000) != 0)
    {
      if (v60 > -9.22337204e18)
      {
        if (v60 < 9.22337204e18)
        {
          if ((unsigned __int128)((uint64_t)v60 / v218 * (__int128)v218) >> 64 == ((uint64_t)v60 / v218 * v218) >> 63)
          {
            uint64_t v202 = v63;
            uint64_t v209 = v62;
            uint64_t v66 = v228;
            sub_25247A1C0();
            sub_2523E7604((uint64_t)v215);
            uint64_t v67 = v224;
            uint64_t v68 = (void (*)(unsigned char *, uint64_t, uint64_t))*((void *)v224 + 2);
            uint64_t v69 = v205;
            uint64_t v203 = v56;
            v68(v205, v65, v56);
            uint64_t v70 = v231;
            uint64_t v71 = v206;
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v231 + 16))(v206, v58, v7);
            uint64_t v72 = v66;
            uint64_t v73 = v233;
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v61 + 16))(v214, v72, v233);
            uint64_t v74 = sub_25247A680();
            os_log_type_t v75 = sub_25247AD30();
            int v76 = v75;
            if (os_log_type_enabled(v74, v75))
            {
              uint64_t v77 = swift_slowAlloc();
              uint64_t v201 = swift_slowAlloc();
              uint64_t v235 = (unsigned char *)v201;
              *(_DWORD *)uint64_t v77 = 136315906;
              uint64_t v210 = v7;
              sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
              int v200 = v76;
              uint64_t v78 = v203;
              uint64_t v79 = sub_25247B200();
              uint64_t v234 = sub_25245DA98(v79, v80, (uint64_t *)&v235);
              sub_25247AEB0();
              swift_bridgeObjectRelease();
              uint64_t v217 = (uint64_t *)*((void *)v67 + 1);
              ((void (*)(unsigned char *, uint64_t))v217)(v69, v78);
              *(_WORD *)(v77 + 12) = 2048;
              uint64_t v234 = v218;
              sub_25247AEB0();
              *(_WORD *)(v77 + 22) = 2080;
              os_log_t v81 = v225;
              sub_25247A010();
              sub_2523FE554(&qword_269C04B00, MEMORY[0x263F07490]);
              uint64_t v82 = sub_25247B200();
              unint64_t v84 = v83;
              os_log_t v85 = v81;
              uint64_t v86 = v74;
              uint64_t v87 = v202;
              v202(v85, v233);
              uint64_t v234 = sub_25245DA98(v82, v84, (uint64_t *)&v235);
              int64_t v58 = v219;
              sub_25247AEB0();
              swift_bridgeObjectRelease();
              unint64_t v212 = *(unsigned char **)(v231 + 8);
              ((void (*)(unsigned char *, uint64_t))v212)(v71, v210);
              *(_WORD *)(v77 + 32) = 2080;
              uint64_t v88 = v214;
              uint64_t v7 = v210;
              uint64_t v89 = sub_25247B200();
              uint64_t v234 = sub_25245DA98(v89, v90, (uint64_t *)&v235);
              sub_25247AEB0();
              swift_bridgeObjectRelease();
              v87((os_log_t)v88, v233);
              _os_log_impl(&dword_2523CF000, v74, (os_log_type_t)v200, "[%s] Using coalescing window of %ld seconds, adjusted start date %s => %s", (uint8_t *)v77, 0x2Au);
              uint64_t v91 = v201;
              swift_arrayDestroy();
              MEMORY[0x2533B5DC0](v91, -1, -1);
              uint64_t v92 = v77;
              uint64_t v65 = v230;
              MEMORY[0x2533B5DC0](v92, -1, -1);

              uint64_t v93 = *(unsigned char **)(v226 + 8);
              ((void (*)(unsigned char *, uint64_t))v93)(v215, v227);
              uint64_t v94 = v203;
            }
            else
            {
              os_log_type_t v134 = (uint64_t *)*((void *)v67 + 1);
              uint64_t v94 = v203;
              uint64_t v217 = v134;
              ((void (*)(unsigned char *, uint64_t))v134)(v69, v203);
              unint64_t v212 = *(unsigned char **)(v70 + 8);
              ((void (*)(unsigned char *, uint64_t))v212)(v71, v7);
              v202((os_log_t)v214, v73);

              uint64_t v93 = *(unsigned char **)(v226 + 8);
              ((void (*)(unsigned char *, uint64_t))v93)(v215, v227);
            }
            goto LABEL_17;
          }
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_38;
  }
  int64_t v58 = v219;
  sub_25247A010();
  sub_2523E7604((uint64_t)v41);
  unint64_t v116 = v224;
  uint64_t v65 = v230;
  (*((void (**)(unsigned char *, void, uint64_t))v224 + 2))(v30, v230, v20);
  uint64_t v117 = v209;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v231 + 16))(v209, v58, v7);
  uint64_t v215 = v41;
  uint64_t v118 = sub_25247A680();
  os_log_type_t v119 = sub_25247AD30();
  int v120 = v119;
  if (!os_log_type_enabled(v118, v119))
  {
    uint64_t v217 = (uint64_t *)*((void *)v116 + 1);
    ((void (*)(unsigned char *, uint64_t))v217)(v30, v56);
    unint64_t v212 = *(unsigned char **)(v231 + 8);
    ((void (*)(unsigned char *, uint64_t))v212)(v117, v7);

    uint64_t v93 = *(unsigned char **)(v226 + 8);
    ((void (*)(unsigned char *, uint64_t))v93)(v215, v227);
    uint64_t v94 = v56;
    os_log_t v133 = v220;
    uint64_t v132 = v221;
    goto LABEL_18;
  }
  uint64_t v121 = swift_slowAlloc();
  unint64_t v214 = (unsigned char *)swift_slowAlloc();
  uint64_t v235 = v214;
  *(_DWORD *)uint64_t v121 = 136315394;
  sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
  LODWORD(v206) = v120;
  uint64_t v122 = sub_25247B200();
  uint64_t v234 = sub_25245DA98(v122, v123, (uint64_t *)&v235);
  sub_25247AEB0();
  swift_bridgeObjectRelease();
  uint64_t v217 = (uint64_t *)*((void *)v116 + 1);
  ((void (*)(unsigned char *, uint64_t))v217)(v30, v56);
  *(_WORD *)(v121 + 12) = 2080;
  unint64_t v212 = (unsigned char *)(v121 + 14);
  os_log_t v124 = v225;
  sub_25247A010();
  sub_2523FE554(&qword_269C04B00, MEMORY[0x263F07490]);
  uint64_t v125 = v233;
  uint64_t v126 = sub_25247B200();
  unint64_t v128 = v127;
  (*(void (**)(os_log_t, uint64_t))(v232 + 8))(v124, v125);
  uint64_t v234 = sub_25245DA98(v126, v128, (uint64_t *)&v235);
  sub_25247AEB0();
  int64_t v58 = v219;
  swift_bridgeObjectRelease();
  unint64_t v212 = *(unsigned char **)(v231 + 8);
  ((void (*)(unsigned char *, uint64_t))v212)(v117, v7);
  _os_log_impl(&dword_2523CF000, v118, (os_log_type_t)v206, "[%s] Not using coalescing window, start date %s", (uint8_t *)v121, 0x16u);
  uint64_t v129 = v214;
  swift_arrayDestroy();
  MEMORY[0x2533B5DC0](v129, -1, -1);
  uint64_t v130 = v121;
  uint64_t v65 = v230;
  MEMORY[0x2533B5DC0](v130, -1, -1);

  uint64_t v93 = *(unsigned char **)(v226 + 8);
  ((void (*)(unsigned char *, uint64_t))v93)(v215, v227);
  uint64_t v94 = v56;
LABEL_17:
  os_log_t v133 = v220;
  uint64_t v132 = v221;
LABEL_18:
  uint64_t v135 = v229;
  uint64_t v219 = v93;
  if (v216)
  {
    os_log_t v136 = v225;
    sub_252479FF0();
    sub_25247A1D0();
    double v138 = v137;
    uint64_t v139 = v232;
    unint64_t v140 = (unsigned char *)(v232 + 8);
    uint64_t v216 = *(void *)(v232 + 8);
    uint64_t result = ((uint64_t (*)(os_log_t, uint64_t))v216)(v136, v233);
    if ((~*(void *)&v138 & 0x7FF0000000000000) != 0)
    {
      if (v138 > -9.22337204e18)
      {
        if (v138 < 9.22337204e18)
        {
          uint64_t v141 = (uint64_t)v138 / v218;
          if (!__OFADD__(v141, 1))
          {
            if ((unsigned __int128)((v141 + 1) * (__int128)v218) >> 64 == ((v141 + 1) * v218) >> 63)
            {
              uint64_t v215 = v140;
              sub_25247A1C0();
              sub_2523E7604((uint64_t)v213);
              uint64_t v142 = v7;
              uint64_t v143 = v204;
              (*((void (**)(unsigned char *, void, uint64_t))v224 + 2))(v204, v230, v94);
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v231 + 16))(v132, v58, v142);
              uint64_t v144 = v135;
              uint64_t v145 = v233;
              (*(void (**)(os_log_t, unsigned char *, uint64_t))(v139 + 16))(v133, v144, v233);
              uint64_t v146 = sub_25247A680();
              os_log_type_t v147 = sub_25247AD30();
              int v148 = v147;
              if (os_log_type_enabled(v146, v147))
              {
                uint64_t v149 = v145;
                uint64_t v150 = swift_slowAlloc();
                *(void *)&long long v230 = swift_slowAlloc();
                uint64_t v235 = (unsigned char *)v230;
                *(_DWORD *)uint64_t v150 = 136315906;
                sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
                LODWORD(v214) = v148;
                uint64_t v151 = sub_25247B200();
                uint64_t v234 = sub_25245DA98(v151, v152, (uint64_t *)&v235);
                uint64_t v210 = v142;
                sub_25247AEB0();
                swift_bridgeObjectRelease();
                ((void (*)(unsigned char *, uint64_t))v217)(v143, v94);
                *(_WORD *)(v150 + 12) = 2048;
                uint64_t v234 = v218;
                sub_25247AEB0();
                *(_WORD *)(v150 + 22) = 2080;
                os_log_t v153 = v225;
                uint64_t v154 = v221;
                sub_252479FF0();
                sub_2523FE554(&qword_269C04B00, MEMORY[0x263F07490]);
                uint64_t v155 = v149;
                uint64_t v156 = sub_25247B200();
                unint64_t v158 = v157;
                os_log_t v225 = v146;
                int v159 = (void (*)(os_log_t, uint64_t))v216;
                ((void (*)(os_log_t, uint64_t))v216)(v153, v155);
                uint64_t v234 = sub_25245DA98(v156, v158, (uint64_t *)&v235);
                sub_25247AEB0();
                swift_bridgeObjectRelease();
                ((void (*)(unsigned char *, uint64_t))v212)(v154, v210);
                *(_WORD *)(v150 + 32) = 2080;
                os_log_t v160 = v220;
                uint64_t v161 = sub_25247B200();
                uint64_t v234 = sub_25245DA98(v161, v162, (uint64_t *)&v235);
                sub_25247AEB0();
                swift_bridgeObjectRelease();
                v159(v160, v155);
                os_log_t v163 = v225;
                _os_log_impl(&dword_2523CF000, v225, (os_log_type_t)v214, "[%s] Using coalescing window of %ld seconds, adjusted end date %s => %s", (uint8_t *)v150, 0x2Au);
                uint64_t v164 = v230;
                swift_arrayDestroy();
                MEMORY[0x2533B5DC0](v164, -1, -1);
                MEMORY[0x2533B5DC0](v150, -1, -1);
              }
              else
              {
                ((void (*)(unsigned char *, uint64_t))v217)(v143, v94);
                ((void (*)(unsigned char *, uint64_t))v212)(v221, v142);
                ((void (*)(os_log_t, uint64_t))v216)(v133, v145);
              }
              unint64_t v180 = &v237;
              goto LABEL_31;
            }
LABEL_44:
            __break(1u);
            return result;
          }
LABEL_43:
          __break(1u);
          goto LABEL_44;
        }
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  sub_252479FF0();
  uint64_t v165 = v211;
  sub_2523E7604((uint64_t)v211);
  uint64_t v166 = v207;
  (*((void (**)(unsigned char *, uint64_t, uint64_t))v224 + 2))(v207, v65, v94);
  uint64_t v167 = v208;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v231 + 16))(v208, v58, v7);
  uint64_t v168 = sub_25247A680();
  os_log_type_t v169 = sub_25247AD30();
  if (os_log_type_enabled(v168, v169))
  {
    uint64_t v170 = swift_slowAlloc();
    *(void *)&long long v230 = swift_slowAlloc();
    uint64_t v235 = (unsigned char *)v230;
    *(_DWORD *)uint64_t v170 = 136315394;
    sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
    uint64_t v171 = sub_25247B200();
    uint64_t v234 = sub_25245DA98(v171, v172, (uint64_t *)&v235);
    uint64_t v210 = v7;
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    ((void (*)(unsigned char *, uint64_t))v217)(v166, v94);
    *(_WORD *)(v170 + 12) = 2080;
    os_log_t v173 = v225;
    sub_252479FF0();
    sub_2523FE554(&qword_269C04B00, MEMORY[0x263F07490]);
    uint64_t v174 = v233;
    uint64_t v175 = sub_25247B200();
    uint64_t v176 = v167;
    unint64_t v178 = v177;
    (*(void (**)(os_log_t, uint64_t))(v232 + 8))(v173, v174);
    uint64_t v234 = sub_25245DA98(v175, v178, (uint64_t *)&v235);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    ((void (*)(unsigned char *, uint64_t))v212)(v176, v210);
    _os_log_impl(&dword_2523CF000, v168, v169, "[%s] Not using coalescing window, end date %s", (uint8_t *)v170, 0x16u);
    uint64_t v179 = v230;
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v179, -1, -1);
    MEMORY[0x2533B5DC0](v170, -1, -1);

    unint64_t v180 = &v236;
LABEL_31:
    uint64_t v181 = (unsigned char *)*(v180 - 32);
    goto LABEL_32;
  }
  ((void (*)(unsigned char *, uint64_t))v217)(v166, v94);
  ((void (*)(unsigned char *, uint64_t))v212)(v167, v7);

  uint64_t v181 = v165;
LABEL_32:
  ((void (*)(unsigned char *, uint64_t))v219)(v181, v227);
LABEL_33:
  char v182 = v222;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04B80);
  uint64_t v183 = swift_allocObject();
  *(_OWORD *)(v183 + 16) = xmmword_25247EB30;
  uint64_t v184 = 0x4025203D3E204B25;
  if (v182) {
    uint64_t v184 = 0x4025203E204B25;
  }
  uint64_t v231 = v184;
  uint64_t v227 = sub_2523E1254(0, (unint64_t *)&unk_269C04B70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04B90);
  uint64_t v185 = swift_allocObject();
  long long v230 = xmmword_25247EAD0;
  *(_OWORD *)(v185 + 16) = xmmword_25247EAD0;
  *(void *)(v185 + 56) = MEMORY[0x263F8D310];
  unint64_t v186 = sub_252408140();
  *(void *)(v185 + 64) = v186;
  *(void *)(v185 + 32) = 1702125924;
  *(void *)(v185 + 40) = 0xE400000000000000;
  unint64_t v187 = v228;
  uint64_t v188 = sub_25247A440();
  uint64_t v189 = sub_2523E1254(0, &qword_269C04BC0);
  *(void *)(v185 + 96) = v189;
  uint64_t v190 = sub_252408244(&qword_269C04BC8, &qword_269C04BC0);
  *(void *)(v185 + 104) = v190;
  *(void *)(v185 + 72) = v188;
  uint64_t v191 = sub_25247AD10();
  swift_bridgeObjectRelease();
  *(void *)(v183 + 32) = v191;
  uint64_t v192 = swift_allocObject();
  *(_OWORD *)(v192 + 16) = v230;
  *(void *)(v192 + 56) = MEMORY[0x263F8D310];
  *(void *)(v192 + 64) = v186;
  *(void *)(v192 + 32) = 1702125924;
  *(void *)(v192 + 40) = 0xE400000000000000;
  uint64_t v193 = v229;
  uint64_t v194 = sub_25247A440();
  *(void *)(v192 + 96) = v189;
  *(void *)(v192 + 104) = v190;
  *(void *)(v192 + 72) = v194;
  uint64_t v195 = sub_25247AD10();
  swift_bridgeObjectRelease();
  *(void *)(v183 + 40) = v195;
  uint64_t v235 = (unsigned char *)v183;
  sub_25247AA10();
  uint64_t v196 = (uint64_t)v235;
  uint64_t v197 = v233;
  uint64_t v198 = *(void (**)(unsigned char *, uint64_t))(v232 + 8);
  v198(v193, v233);
  v198(v187, v197);
  return v196;
}

uint64_t sub_2524071BC(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v39[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v39[-v9];
  uint64_t v11 = sub_25247A6A0();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = &v39[-v15];
  uint64_t v17 = (void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v43 = a2[2];
  uint64_t v44 = v18;
  if (v43)
  {
    sub_2523E7604((uint64_t)&v39[-v15]);
    (*v17)(v10, a1, v4);
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_25247A680();
    os_log_type_t v20 = sub_25247AD30();
    int v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v46 = v41;
      *(_DWORD *)uint64_t v22 = 136315650;
      int v40 = v21;
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v23 = sub_25247B200();
      uint64_t v45 = sub_25245DA98(v23, v24, &v46);
      uint64_t v42 = v11;
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v10, v4);
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v45 = sub_25245DA98(1936154996, 0xE400000000000000, &v46);
      sub_25247AEB0();
      *(_WORD *)(v22 + 22) = 2048;
      swift_bridgeObjectRelease();
      unint64_t v25 = v43;
      uint64_t v45 = v43;
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2523CF000, v19, (os_log_type_t)v40, "[%s] Creating '%s' predicate that contains %ld value(s)", (uint8_t *)v22, 0x20u);
      uint64_t v26 = v41;
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v26, -1, -1);
      MEMORY[0x2533B5DC0](v22, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v16, v42);
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v10, v4);

      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v16, v11);
      unint64_t v25 = v43;
    }
    sub_2523E1254(0, (unint64_t *)&unk_269C04B70);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C04B90);
    if (v25 < 2)
    {
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_25247EAD0;
      *(void *)(v34 + 56) = MEMORY[0x263F8D310];
      *(void *)(v34 + 64) = sub_252408140();
      *(void *)(v34 + 32) = 1936154996;
      *(void *)(v34 + 40) = 0xE400000000000000;
      uint64_t v36 = a2[4];
      unint64_t v35 = a2[5];
      sub_252408194(v36, v35);
      uint64_t v37 = sub_25247A180();
      sub_2524081EC(v36, v35);
      *(void *)(v34 + 96) = sub_2523E1254(0, &qword_269C04BA0);
      *(void *)(v34 + 104) = sub_252408244(&qword_269C04BA8, &qword_269C04BA0);
      *(void *)(v34 + 72) = v37;
    }
    else
    {
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_25247EAD0;
      *(void *)(v33 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04BB0);
      *(void *)(v33 + 64) = sub_252408314(&qword_269C04BB8, &qword_269C04BB0);
      *(void *)(v33 + 32) = a2;
      *(void *)(v33 + 96) = MEMORY[0x263F8D310];
      *(void *)(v33 + 104) = sub_252408140();
      *(void *)(v33 + 72) = 1936154996;
      *(void *)(v33 + 80) = 0xE400000000000000;
      swift_bridgeObjectRetain();
    }
    return sub_25247AD10();
  }
  else
  {
    sub_2523E7604((uint64_t)v14);
    (*v17)(v8, a1, v4);
    uint64_t v27 = sub_25247A680();
    os_log_type_t v28 = sub_25247AD30();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v46 = v43;
      *(_DWORD *)uint64_t v29 = 136315394;
      sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v30 = sub_25247B200();
      uint64_t v45 = sub_25245DA98(v30, v31, &v46);
      uint64_t v42 = v11;
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
      *(_WORD *)(v29 + 12) = 2080;
      uint64_t v45 = sub_25245DA98(1936154996, 0xE400000000000000, &v46);
      sub_25247AEB0();
      _os_log_impl(&dword_2523CF000, v27, v28, "[%s] No tags specified, skipping '%s' predicate", (uint8_t *)v29, 0x16u);
      uint64_t v32 = v43;
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v32, -1, -1);
      MEMORY[0x2533B5DC0](v29, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v14, v42);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);

      (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v14, v11);
    }
    return 0;
  }
}

uint64_t sub_252407954(uint64_t a1, unsigned char *a2, void *a3, int a4, int a5)
{
  uint64_t v10 = sub_25247A540();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25247A6A0();
  uint64_t v49 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v17 = sub_252405634(a1, a2, 0, a5, (a4 & 1) == 0, a4);
  v51[1] = v17;
  uint64_t v18 = (void *)sub_2524071BC(a1, a3);
  if (v18)
  {
    uint64_t v19 = v18;
    if (v17 >> 62)
    {
      id v43 = v18;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_25247B0C0();
      uint64_t result = swift_bridgeObjectRelease();
      if (v44 < 0)
      {
        __break(1u);
        return result;
      }
    }
    else
    {
      id v20 = v18;
    }
    sub_2523FE8EC(0, 0, (uint64_t)v19);
  }
  sub_2523E1254(0, (unint64_t *)&unk_269C04B70);
  int v21 = (void *)sub_25247A9E0();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v21);

  sub_2523E7604((uint64_t)v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  id v23 = v22;
  unint64_t v24 = sub_25247A680();
  os_log_type_t v25 = sub_25247AD30();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v48 = v16;
    uint64_t v27 = v26;
    uint64_t v46 = swift_slowAlloc();
    v51[0] = v46;
    *(_DWORD *)uint64_t v27 = 136315394;
    uint64_t v47 = v14;
    sub_2523FE554(&qword_269C046B0, MEMORY[0x263F07508]);
    uint64_t v28 = sub_25247B200();
    uint64_t v50 = sub_25245DA98(v28, v29, v51);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    *(_WORD *)(v27 + 12) = 2080;
    id v30 = objc_msgSend(v23, sel_debugDescription);
    uint64_t v31 = sub_25247A840();
    unint64_t v33 = v32;

    uint64_t v50 = sub_25245DA98(v31, v33, v51);
    sub_25247AEB0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2523CF000, v24, v25, "[%s] Final predicate: %s", (uint8_t *)v27, 0x16u);
    uint64_t v34 = v46;
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v34, -1, -1);
    MEMORY[0x2533B5DC0](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v47);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v16, v14);
  }
  sub_2523E1254(0, &qword_269C047D8);
  id v35 = v23;
  uint64_t v36 = (void *)sub_25247AE40();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04B80);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_25247EB40;
  id v38 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v39 = (void *)sub_25247A830();
  id v40 = objc_msgSend(v38, sel_initWithKey_ascending_, v39, 0);

  *(void *)(v37 + 32) = v40;
  v51[0] = v37;
  sub_25247AA10();
  sub_2523E1254(0, &qword_269C04B88);
  uint64_t v41 = (void *)sub_25247A9E0();
  swift_bridgeObjectRelease();
  objc_msgSend(v36, sel_setSortDescriptors_, v41);

  return (uint64_t)v36;
}

uint64_t sub_252407EEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_252407F54(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_25241DB54(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04AB8) - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_25247B100();
  __break(1u);
  return result;
}

unint64_t sub_252408140()
{
  unint64_t result = qword_269C04B98;
  if (!qword_269C04B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04B98);
  }
  return result;
}

uint64_t sub_252408194(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_2524081EC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_252408244(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2523E1254(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_252408294(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2524082F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2523F6668(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_252408314(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_252408358(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2523D3A1C;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_269C04C30 + dword_269C04C30);
  return v8(a1, a2, v6);
}

uint64_t static HMVCommands.echo(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_252408440, 0, 0);
}

uint64_t sub_252408440()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = swift_task_alloc();
  v0[4] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269C04608 + dword_269C04608);
  unint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *unint64_t v4 = v0;
  v4[1] = sub_252408518;
  return v6((uint64_t)sub_2524087D0, v3);
}

uint64_t sub_252408518(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 48) = v2;
  swift_task_dealloc();
  if (v2)
  {
    return MEMORY[0x270FA2498](sub_252408684, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v7(a1, a2);
  }
}

uint64_t sub_252408684()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_2524086E8(void *a1, uint64_t a2)
{
  unint64_t v4 = (void *)sub_25247A830();
  v6[4] = sub_252408A44;
  v6[5] = a2;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 1107296256;
  uint64_t v6[2] = sub_252408A4C;
  v6[3] = &block_descriptor_2;
  uint64_t v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilEchoWithString_reply_, v4, v5);
  _Block_release(v5);
}

void sub_2524087D0(void *a1, uint64_t a2)
{
}

void sub_2524087D8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a3;
    uint64_t v12 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
    unint64_t v13 = (void *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    void v13[4] = a4;
    v13[5] = sub_252408BC4;
    v13[6] = v11;
    id v14 = a3;
    id v15 = a3;
    swift_retain();
    swift_retain();
    sub_25240BCB0((uint64_t)v10, (uint64_t)&unk_269C04C58, (uint64_t)v13);
    swift_release();
    swift_release();
  }
  else if (a2)
  {
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a1;
    *(void *)(v16 + 24) = a2;
    uint64_t v17 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 1, 1, v17);
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = 0;
    v18[3] = 0;
    v18[4] = a4;
    v18[5] = sub_252408B80;
    v18[6] = v16;
    swift_bridgeObjectRetain_n();
    swift_retain();
    swift_retain();
    sub_25240BCB0((uint64_t)v10, (uint64_t)&unk_269C04630, (uint64_t)v18);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_252408A44(uint64_t a1, uint64_t a2, void *a3)
{
  sub_2524087D8(a1, a2, a3, v3);
}

uint64_t sub_252408A4C(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    uint64_t v5 = sub_25247A840();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  swift_retain();
  id v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_252408AFC()
{
  return sub_25247AAD0();
}

uint64_t sub_252408B48()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_252408B80()
{
  return sub_252408AFC();
}

uint64_t sub_252408B8C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_252408BC4(uint64_t a1)
{
  return sub_2523D6B8C(a1, (id *)(v1 + 16));
}

uint64_t sub_252408BD0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_2523D3928;
  return sub_2523D5234(a1, v4, v5, v6, v7, v8);
}

uint64_t RecordType.rawValue.getter()
{
  if (*v0) {
    return 0x6974707972636E45;
  }
  else {
    return 0x746E657645;
  }
}

HomeKitEvents::RecordType_optional __swiftcall RecordType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_25247B130();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_252408D4C(char *a1, char *a2)
{
  return sub_2523D2E2C(*a1, *a2);
}

unint64_t sub_252408D5C()
{
  unint64_t result = qword_269C04C60;
  if (!qword_269C04C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04C60);
  }
  return result;
}

uint64_t sub_252408DB0()
{
  return sub_25247B390();
}

uint64_t sub_252408E3C()
{
  sub_25247A8D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_252408EB4()
{
  return sub_25247B390();
}

HomeKitEvents::RecordType_optional sub_252408F3C(Swift::String *a1)
{
  return RecordType.init(rawValue:)(*a1);
}

void sub_252408F48(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x746E657645;
  if (*v1) {
    uint64_t v2 = 0x6974707972636E45;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xED000079654B6E6FLL;
  }
  *a1 = v2;
  a1[1] = v3;
}

unsigned char *storeEnumTagSinglePayload for RecordType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25240905CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordType()
{
  return &type metadata for RecordType;
}

unint64_t sub_252409098(unint64_t result)
{
  if ((result >> 61) <= 5) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t destroy for RecordError(unint64_t *a1)
{
  return sub_2524090C0(*a1);
}

unint64_t sub_2524090C0(unint64_t result)
{
  if ((result >> 61) <= 5) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *_s13HomeKitEvents11RecordErrorOwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_252409098(*a2);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

unint64_t *assignWithCopy for RecordError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_252409098(*a2);
  unint64_t v6 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_2524090C0(v6);
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

unint64_t *assignWithTake for RecordError(unint64_t *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  unint64_t v4 = *a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_2524090C0(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecordError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7A && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 122);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 4) | (8 * ((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x79) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RecordError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x79)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 122;
    if (a3 >= 0x7A) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7A) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)__n128 result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_252409288(void *a1)
{
  uint64_t v1 = *a1 >> 61;
  if (v1 <= 5) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 6;
  }
}

void *sub_2524092A4(void *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

void *sub_2524092B4(void *result, uint64_t a2)
{
  if (a2 < 6)
  {
    *__n128 result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  }
  else
  {
    result[1] = 0;
    result[2] = 0;
    *__n128 result = (8 * (a2 - 6)) | 0xC000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordError()
{
  return &type metadata for RecordError;
}

uint64_t sub_2524092F4(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 120) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25240933C(uint64_t a1)
{
  *(void *)(v1 + 128) = a1;
  return swift_release();
}

uint64_t ExpiringAsyncCache.__allocating_init(expirationSeconds:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ExpiringAsyncCache.init(expirationSeconds:)(a1);
  return v2;
}

uint64_t ExpiringAsyncCache.init(expirationSeconds:)(uint64_t a1)
{
  swift_defaultActor_initialize();
  swift_getTupleTypeMetadata2();
  uint64_t result = sub_25247A740();
  v1[15] = result;
  v1[16] = 0;
  if (a1 < 1)
  {
    __break(1u);
  }
  else
  {
    v1[14] = a1;
    return (uint64_t)v1;
  }
  return result;
}

uint64_t ExpiringAsyncCache.deinit()
{
  if (*(void *)(v0 + 128))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A60);
    sub_25247AB90();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ExpiringAsyncCache.__deallocating_deinit()
{
  ExpiringAsyncCache.deinit();

  return MEMORY[0x270FA2418](v0);
}

uint64_t ExpiringAsyncCache.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_2524094F0()
{
  return ExpiringAsyncCache.unownedExecutor.getter();
}

uint64_t sub_25240950C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)*v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  uint64_t result = MEMORY[0x270FA5388](v3 - 8);
  unint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v0[16])
  {
    swift_beginAccess();
    uint64_t v7 = v0[15];
    uint64_t v8 = v2[10];
    uint64_t v9 = v2[11];
    swift_bridgeObjectRetain();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v11 = v2[12];
    char v12 = MEMORY[0x2533B4A70](v7, v8, TupleTypeMetadata2, v11);
    uint64_t result = swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      uint64_t v13 = swift_beginAccess();
      uint64_t v14 = v0[15];
      v19[1] = 0x7FFFFFFFFFFFFFFFLL;
      void v19[2] = v14;
      MEMORY[0x270FA5388](v13);
      v19[-4] = v8;
      v19[-3] = v9;
      v19[-2] = v11;
      sub_25247A7C0();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      sub_25247A9B0();
      swift_bridgeObjectRelease();
      uint64_t v15 = v19[3];
      uint64_t v16 = sub_25247AB70();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
      uint64_t v17 = swift_allocObject();
      swift_weakInit();
      uint64_t v18 = (void *)swift_allocObject();
      v18[2] = 0;
      v18[3] = 0;
      v18[4] = v8;
      v18[5] = v9;
      v18[6] = v11;
      v18[7] = v15;
      v18[8] = v17;
      v1[16] = sub_252419DB0((uint64_t)v6, (uint64_t)&unk_269C04D18, (uint64_t)v18);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2524097CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = swift_getTupleTypeMetadata2();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v22 - v10;
  uint64_t v12 = *(int *)(v9 + 56);
  uint64_t v13 = &v11[v12];
  uint64_t v14 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v15 = a2 + v12;
  uint64_t v16 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v11, a2, a3);
  uint64_t v17 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v18 = *(void *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v13, v15, a4);
  uint64_t v19 = *(void *)(v15 + v17);
  *(void *)&v13[v14] = v19;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v13, a4);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v11, a3);
  uint64_t v21 = *v23;
  if (*v23 >= v19) {
    uint64_t v21 = v19;
  }
  *uint64_t v23 = v21;
  return result;
}

uint64_t sub_252409998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  uint64_t v6 = sub_25247B060();
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  uint64_t v7 = sub_25247A4B0();
  v5[10] = v7;
  v5[11] = *(void *)(v7 - 8);
  v5[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252409AB4, 0, 0);
}

uint64_t sub_252409AB4()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  sub_25247A4A0();
  sub_25247A1D0();
  double v5 = v4;
  uint64_t v6 = (uint64_t (*)())(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((~*(void *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v0[5];
  uint64_t v10 = v9 - (uint64_t)v5;
  if (__OFSUB__(v9, (uint64_t)v5))
  {
LABEL_19:
    __break(1u);
    return MEMORY[0x270FA2498](v6, v7, v8);
  }
  if (v10 >= 1)
  {
    uint64_t v11 = 1000000000000000000 * v10;
    uint64_t v12 = ((unint64_t)v10 * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64;
    sub_25247B050();
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269C04D20 + dword_269C04D20);
    uint64_t v13 = (void *)swift_task_alloc();
    v0[13] = v13;
    void *v13 = v0;
    v13[1] = sub_252409CE0;
    return v17(v11, v12, 0, 0, 1);
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[15] = Strong;
  if (Strong)
  {
    uint64_t v7 = Strong;
    uint64_t v6 = sub_252409F94;
    uint64_t v8 = 0;
    return MEMORY[0x270FA2498](v6, v7, v8);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_252409CE0()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = *(void *)(*(void *)v1 + 56);
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    double v5 = sub_252409F24;
  }
  else {
    double v5 = sub_252409E50;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_252409E50()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 120) = Strong;
  if (Strong)
  {
    return MEMORY[0x270FA2498](sub_252409F94, Strong, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_252409F24()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_252409F94()
{
  sub_25240A014();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25240A014()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)*v0;
  uint64_t v3 = sub_25247A4B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v1[16] = 0;
  swift_release();
  sub_25247A4A0();
  sub_25247A1D0();
  double v8 = v7;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v8 < 9.22337204e18)
  {
    uint64_t v10 = swift_beginAccess();
    uint64_t v11 = MEMORY[0x270FA5388](v10);
    uint64_t v12 = v2[10];
    uint64_t v13 = v2[11];
    *(void *)&v17[-32] = v12;
    *(void *)&v17[-24] = v13;
    uint64_t v14 = v2[12];
    *(void *)&v17[-16] = v14;
    *(void *)&v17[-8] = (uint64_t)v8;
    MEMORY[0x270FA5388](v11);
    *(void *)&v17[-48] = v12;
    *(void *)&v17[-40] = v13;
    *(void *)&v17[-32] = v14;
    *(void *)&v17[-24] = sub_25240BBF8;
    *(void *)&v17[-16] = v15;
    swift_bridgeObjectRetain();
    swift_getTupleTypeMetadata2();
    uint64_t v16 = sub_25247A7A0();
    swift_beginAccess();
    v1[15] = v16;
    swift_bridgeObjectRelease();
    return sub_25240950C();
  }
LABEL_7:
  __break(1u);
  return result;
}

BOOL sub_25240A288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v11 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v13 = (char *)&v15 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))((char *)&v15 - v12, a2, a6);
  *(void *)&v13[*(int *)(TupleTypeMetadata2 + 48)] = a3;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, TupleTypeMetadata2);
  return a4 < a3;
}

uint64_t ExpiringAsyncCache.subscript.getter(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = *v2;
  v3[8] = *v2;
  v3[9] = *(void *)(v4 + 88);
  v3[10] = swift_getTupleTypeMetadata2();
  uint64_t v5 = sub_25247AE90();
  v3[11] = v5;
  v3[12] = *(void *)(v5 - 8);
  v3[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25240A4E4, v2, 0);
}

uint64_t sub_25240A4E4()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[6];
  swift_beginAccess();
  uint64_t v6 = *(void *)(v3 + 120);
  uint64_t v7 = *(void *)(v4 + 80);
  uint64_t v8 = *(void *)(v4 + 96);
  swift_bridgeObjectRetain();
  MEMORY[0x2533B4A90](v5, v6, v7, v2, v8);
  swift_bridgeObjectRelease();
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  uint64_t v11 = v0[12];
  uint64_t v10 = v0[13];
  uint64_t v12 = v0[11];
  uint64_t v13 = v0[9];
  if (v9)
  {
    (*(void (**)(void, void))(v11 + 8))(v0[13], v0[11]);
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = 1;
  }
  else
  {
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(void, uint64_t, uint64_t))(v14 + 16))(v0[5], v10, v13);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    uint64_t v15 = 0;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v14 + 56))(v0[5], v15, 1, v0[9]);
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t ExpiringAsyncCache.get(_:)()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_25247A740();
  swift_getTupleTypeMetadata2();
  sub_25247A7C0();
  sub_25247A7C0();
  swift_getWitnessTable();
  sub_25247A9B0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_25240A83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v58 = a6;
  uint64_t v54 = a3;
  uint64_t v51 = a1;
  uint64_t v9 = sub_25247AE90();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v50 = (char *)&v43 - v10;
  uint64_t v11 = a4;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = swift_getTupleTypeMetadata2();
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v60 = TupleTypeMetadata2;
  uint64_t v55 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  os_log_t v57 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  double v59 = (char *)&v43 - v18;
  uint64_t v52 = v11;
  uint64_t v19 = *(void *)(v11 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v49 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  unint64_t v24 = (char *)&v43 - v23;
  uint64_t v25 = *(int *)(v22 + 56);
  uint64_t v56 = v26;
  uint64_t v27 = &v26[v25];
  uint64_t v28 = a2;
  uint64_t v29 = a2 + v25;
  uint64_t v46 = *(void (**)(char *, uint64_t))(v19 + 16);
  uint64_t v47 = v19 + 16;
  v46(v26, v28);
  uint64_t v30 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v31 = *(void *)(a5 - 8);
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  uint64_t v43 = v31 + 16;
  v45(v27, v29, a5);
  uint64_t v32 = *(void *)(v29 + v30);
  uint64_t v48 = v31;
  unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  uint64_t v34 = v57;
  v33(v57, v27, a5);
  uint64_t v53 = v19;
  id v35 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  uint64_t v36 = v52;
  v35(v24, v56, v52);
  uint64_t v37 = *(int *)(v60 + 48);
  id v38 = v59;
  v33(v59, v34, a5);
  uint64_t v44 = v32;
  *(void *)&v38[v37] = v32;
  uint64_t v56 = v24;
  if (sub_25247AC90())
  {
    ((void (*)(char *, char *, uint64_t))v46)(v49, v56, v36);
    uint64_t v39 = *(int *)(v60 + 48);
    id v40 = v57;
    v45(v57, (uint64_t)v59, a5);
    *(void *)&v40[v39] = v44;
    uint64_t v41 = v50;
    v33(v50, v40, a5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v41, 0, 1, a5);
    sub_25247A7C0();
    sub_25247A7E0();
  }
  (*(void (**)(char *, uint64_t))(v55 + 8))(v59, v60);
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v56, v36);
}

uint64_t ExpiringAsyncCache.set(_:key:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v26 = *v2;
  uint64_t v4 = *(void *)(v26 + 88);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v6 = sub_25247AE90();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = *(void *)(v26 + 80);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = sub_25247A4B0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A4A0();
  sub_25247A1D0();
  double v19 = v18;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if ((~*(void *)&v19 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v19 >= 9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v21 = v3[14];
  uint64_t v22 = (uint64_t)v19 + v21;
  if (!__OFADD__((uint64_t)v19, v21))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v24, v10);
    uint64_t v23 = *(int *)(TupleTypeMetadata2 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v9, v25, v4);
    *(void *)&v9[v23] = v22;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v9, 0, 1, TupleTypeMetadata2);
    swift_beginAccess();
    sub_25247A7C0();
    sub_25247A7E0();
    swift_endAccess();
    return sub_25240950C();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t ExpiringAsyncCache.clear(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v6 = sub_25247AE90();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = *(void *)(v4 + 80);
  MEMORY[0x270FA5388](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v16 - v11, a1, v10);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v9, 1, 1, TupleTypeMetadata2);
  swift_beginAccess();
  uint64_t v13 = *(void *)(v4 + 96);
  sub_25247A7C0();
  sub_25247A7E0();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v14 = swift_bridgeObjectRetain();
  LOBYTE(TupleTypeMetadata2) = MEMORY[0x2533B4A70](v14, v10, TupleTypeMetadata2, v13);
  uint64_t result = swift_bridgeObjectRelease();
  if (TupleTypeMetadata2)
  {
    if (v2[16])
    {
      v2[16] = 0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A60);
      sub_25247AB90();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_25240B264(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2523D3928;
  return ExpiringAsyncCache.subscript.getter(a1, a2);
}

uint64_t sub_25240B310(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_25240B330, v3, 0);
}

uint64_t sub_25240B330()
{
  uint64_t v1 = ExpiringAsyncCache.get(_:)();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_25240B390(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = a2;
  uint64_t v4 = *v2;
  v3[4] = *v2;
  return MEMORY[0x270FA2498](sub_25240B3B4, v4, 0);
}

uint64_t sub_25240B3B4()
{
  ExpiringAsyncCache.set(_:key:)(v0[2], v0[3]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25240B418(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_25240B438, v3, 0);
}

uint64_t sub_25240B438()
{
  ExpiringAsyncCache.clear(_:)(*(void *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25240B498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_25247B040();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x270FA2498](sub_25240B59C, 0, 0);
}

uint64_t sub_25240B59C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_25247B060();
  uint64_t v5 = sub_25240BBB0(&qword_269C04D28, MEMORY[0x263F8F710]);
  sub_25247B2D0();
  sub_25240BBB0(&qword_269C04D30, MEMORY[0x263F8F6D8]);
  sub_25247B070();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_25240B73C;
  uint64_t v8 = v0[11];
  return MEMORY[0x270FA2380](v8, v0 + 2, v4, v5);
}

uint64_t sub_25240B73C()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_25240B8F8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_25240B8F8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25240B964(uint64_t a1, uint64_t a2)
{
  return sub_25240A83C(a1, a2, v2[5], v2[2], v2[3], v2[4]);
}

uint64_t sub_25240B984(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

uint64_t sub_25240B990()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ExpiringAsyncCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for ExpiringAsyncCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ExpiringAsyncCache);
}

uint64_t dispatch thunk of ExpiringAsyncCache.__allocating_init(expirationSeconds:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t sub_25240BA3C(uint64_t *a1, uint64_t a2)
{
  return sub_2524097CC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_25240BA5C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25240BA94()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_25240BAD4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[7];
  uint64_t v7 = v1[8];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_2523D3928;
  return sub_252409998(a1, v4, v5, v6, v7);
}

uint64_t sub_25240BBB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_25240BBF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25240A288(a1, a2, a3, v3[5], v3[2], v3[3]);
}

uint64_t sub_25240BC04(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, void))(v2 + 40);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v5(a1, a2, *(void *)(a2 + *(int *)(TupleTypeMetadata2 + 48))) & 1;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_25240BCB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247AB70();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_25247AB60();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_2524132AC(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25247AAA0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t Future.init(closure:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for Promise();
  swift_allocObject();
  *a2 = sub_25240E00C();
  type metadata accessor for Future.ValueType();
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = swift_retain();
  a1(v4);

  return swift_release();
}

uint64_t type metadata accessor for Promise()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25240BF2C()
{
  return sub_25240E00C();
}

uint64_t type metadata accessor for Future.ValueType()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Future<>.init()()
{
  type metadata accessor for Future.ValueType();

  return swift_storeEnumTagMultiPayload();
}

uint64_t Future.init(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for Future.ValueType();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_25240C068(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 96) = a3;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = a2;
  return MEMORY[0x270FA2498](sub_25240C08C, 0, 0);
}

uint64_t sub_25240C08C()
{
  if (*(unsigned char *)(v0 + 96))
  {
    if (*(unsigned char *)(v0 + 96) == 1)
    {
      return sub_25247B0B0();
    }
    else
    {
      uint64_t v6 = *(void *)(v0 + 56);
      sub_25240E99C(v6, 2);
      uint64_t v7 = (void *)swift_task_alloc();
      *(void *)(v0 + 80) = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_25240C3C0;
      uint64_t v8 = *(void *)(v0 + 48);
      uint64_t v9 = MEMORY[0x263F8EE60] + 8;
      return MEMORY[0x270FA2360](v8, 0, 0, 0x746C75736572, 0xE600000000000000, sub_252413664, v6, v9);
    }
  }
  else
  {
    uint64_t v2 = swift_task_alloc();
    *(void *)(v0 + 64) = v2;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_25240C294;
    uint64_t v4 = *(void *)(v0 + 48);
    uint64_t v5 = MEMORY[0x263F8EE60] + 8;
    return MEMORY[0x270FA2318](v4, 0, 0, 0x746C75736572, 0xE600000000000000, sub_25241366C, v2, v5);
  }
}

uint64_t sub_25240C294()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25240C3AC, 0, 0);
}

uint64_t sub_25240C3AC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_25240C3C0()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25240C538;
  }
  else {
    uint64_t v2 = sub_25240C4D4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25240C4D4()
{
  sub_25240E9B0(*(void *)(v0 + 56), 2);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25240C538()
{
  return sub_25247B0B0();
}

uint64_t Future<>.result.getter(uint64_t a1, uint64_t a2)
{
  v3[6] = a1;
  v3[7] = v2;
  uint64_t v4 = *(void *)(a2 + 16);
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Future.ValueType();
  v3[11] = v5;
  v3[12] = *(void *)(v5 - 8);
  v3[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25240C748, 0, 0);
}

uint64_t sub_25240C748()
{
  (*(void (**)(void, void, void))(v0[12] + 16))(v0[13], v0[7], v0[11]);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      return sub_25247B0B0();
    }
    else
    {
      uint64_t v9 = *(void **)v0[13];
      v0[16] = v9;
      uint64_t v10 = (void *)swift_task_alloc();
      v0[17] = v10;
      void *v10 = v0;
      v10[1] = sub_25240CB44;
      v10[2] = v0[6];
      v10[3] = v9;
      v10[4] = *v9;
      return MEMORY[0x270FA2498](sub_25240CECC, 0, 0);
    }
  }
  else
  {
    uint64_t v3 = v0[10];
    uint64_t v4 = v0[8];
    (*(void (**)(uint64_t, void, uint64_t))(v0[9] + 32))(v3, v0[13], v4);
    uint64_t v5 = swift_task_alloc();
    v0[14] = v5;
    *(void *)(v5 + 16) = v4;
    *(void *)(v5 + 24) = v3;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[15] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_25240C9A8;
    uint64_t v7 = v0[8];
    uint64_t v8 = v0[6];
    return MEMORY[0x270FA2318](v8, 0, 0, 0x746C75736572, 0xE600000000000000, sub_25240D0E4, v5, v7);
  }
}

uint64_t sub_25240C9A8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25240CAC0, 0, 0);
}

uint64_t sub_25240CAC0()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25240CB44()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25240CCCC;
  }
  else {
    uint64_t v2 = sub_25240CC58;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25240CC58()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25240CCCC()
{
  return sub_25247B0B0();
}

uint64_t sub_25240CDAC(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25247AAE0();
  return sub_25247AAD0();
}

uint64_t Promise.result.getter(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x270FA2498](sub_25240CECC, 0, 0);
}

uint64_t sub_25240CECC()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  uint64_t v3 = *(void *)(v1 + 80);
  *uint64_t v2 = v0;
  v2[1] = sub_25240CF98;
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  return MEMORY[0x270FA2360](v4, 0, 0, 0x746C75736572, 0xE600000000000000, sub_25240E988, v5, v3);
}

uint64_t sub_25240CF98()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_25240D0CC, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_25240D0CC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_25240D0E4(uint64_t a1)
{
  return sub_25240CDAC(a1);
}

uint64_t Future.init(throwing:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for Future.ValueType();

  return swift_storeEnumTagMultiPayload();
}

uint64_t Future.result.getter(uint64_t a1, void *a2)
{
  v3[2] = a1;
  v3[3] = v2;
  v3[4] = a2[2];
  v3[5] = a2[3];
  v3[6] = a2[4];
  uint64_t v4 = type metadata accessor for Future.ValueType();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25240D25C, 0, 0);
}

uint64_t sub_25240D25C()
{
  (*(void (**)(void, void, void))(*(void *)(v0 + 64) + 16))(*(void *)(v0 + 72), *(void *)(v0 + 24), *(void *)(v0 + 56));
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v1 = **(void ***)(v0 + 72);
    *(void *)(v0 + 80) = v1;
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_25240D448;
    v2[2] = *(void *)(v0 + 16);
    v2[3] = v1;
    v2[4] = *v1;
    return MEMORY[0x270FA2498](sub_25240CECC, 0, 0);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = swift_task_alloc();
    *(void *)(v0 + 104) = v5;
    *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 32);
    *(void *)(v5 + 32) = v3;
    *(void *)(v5 + 40) = v4;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_25240D5C8;
    uint64_t v7 = *(void *)(v0 + 32);
    uint64_t v8 = *(void *)(v0 + 16);
    return MEMORY[0x270FA2360](v8, 0, 0, 0x746C75736572, 0xE600000000000000, sub_25240E990, v5, v7);
  }
}

uint64_t sub_25240D448()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25240D760;
  }
  else {
    uint64_t v2 = sub_25240D55C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25240D55C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25240D5C8()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_25240D7CC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_25240D6E4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25240D6E4()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25240D760()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25240D7CC()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_25240D860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v33 = *(void *)(a4 - 8);
  uint64_t v34 = a1;
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v10);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  double v19 = (char *)&v32 - v18;
  uint64_t v32 = v20;
  uint64_t v21 = type metadata accessor for Future.ValueType();
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v32 - v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))((char *)&v32 - v22, a2, v21);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v27 = v33;
      uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
      v28(v12, v23, a4);
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v9, v12, a4);
      uint64_t v29 = sub_25247B230();
      if (v29)
      {
        uint64_t v30 = v29;
        (*(void (**)(char *, uint64_t))(v27 + 8))(v9, a4);
      }
      else
      {
        uint64_t v30 = swift_allocError();
        v28(v31, v9, a4);
      }
      uint64_t v35 = v30;
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269C04A60);
      sub_25247AAE0();
      sub_25247AAC0();
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v12, a4);
    }
    else
    {
      uint64_t result = sub_25247B0B0();
      __break(1u);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v23, a3);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, a3);
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269C04A60);
    sub_25247AAE0();
    sub_25247AAD0();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, a3);
  }
  return result;
}

uint64_t Future<>.complete.getter()
{
  uint64_t v2 = *(void *)v0;
  *(void *)(v1 + 16) = *(void *)v0;
  char v3 = *(unsigned char *)(v0 + 8);
  *(unsigned char *)(v1 + 32) = v3;
  sub_25240E99C(v2, v3);
  uint64_t v6 = (uint64_t (*)(void))((char *)&dword_269C04D58 + dword_269C04D58);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_25240DD2C;
  return v6();
}

uint64_t sub_25240DD2C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  char v2 = *(unsigned char *)(*(void *)v0 + 32);
  swift_task_dealloc();
  sub_25240E9B0(v1, v2);
  return MEMORY[0x270FA2498](sub_25240C3AC, 0, 0);
}

uint64_t Future<>.complete.getter(void *a1)
{
  char v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *char v3 = v1;
  v3[1] = sub_25240DEE0;
  return Future.result.getter((uint64_t)v3, a1);
}

uint64_t sub_25240DEE0()
{
  *(void *)(*(void *)v1 + 24) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_25240DFF4;
  }
  else {
    char v2 = sub_2523D3C30;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25240DFF4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_25240E00C()
{
  swift_defaultActor_initialize();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = type metadata accessor for Promise.ValueType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)(v0 + *(void *)(*(void *)v0 + 104)) = 0;
  return v0;
}

uint64_t Promise.resolve(throwing:)(void *a1)
{
  uint64_t v2 = type metadata accessor for Promise.ValueType();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - v4;
  *(uint64_t *)((char *)&v8 - v4) = (uint64_t)a1;
  swift_storeEnumTagMultiPayload();
  id v6 = a1;
  LOBYTE(a1) = sub_25240E1BC((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return a1 & 1;
}

BOOL sub_25240E1BC(uint64_t a1)
{
  uint64_t v31 = a1;
  uint64_t v2 = *v1;
  uint64_t v30 = *(void *)(*v1 + 80);
  uint64_t v3 = type metadata accessor for Promise.ValueType();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v29 = (char *)&v26 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v28 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25247AE90();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = (uint64_t)v1 + *(void *)(v2 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v15, v16, v9);
  int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v15, 1, v3);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  if (v17 == 1)
  {
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v27(v13, v31, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v16, v13, v9);
    swift_endAccess();
    uint64_t v18 = *(void *)(*v1 + 104);
    uint64_t v19 = *(uint64_t *)((char *)v1 + v18);
    if (v19)
    {
      *(uint64_t *)((char *)v1 + v18) = 0;
      uint64_t v20 = sub_25247AB70();
      uint64_t v21 = (uint64_t)v28;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v28, 1, 1, v20);
      uint64_t v22 = v29;
      v27(v29, v31, v3);
      unint64_t v23 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v24 = (char *)swift_allocObject();
      *((void *)v24 + 2) = 0;
      *((void *)v24 + 3) = 0;
      *((void *)v24 + 4) = v30;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v24[v23], v22, v3);
      *(void *)&v24[(v5 + v23 + 7) & 0xFFFFFFFFFFFFFFF8] = v19;
      sub_25240BCB0(v21, (uint64_t)&unk_269C04FA0, (uint64_t)v24);
      swift_release();
    }
  }
  return v17 != 1;
}

uint64_t sub_25240E5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25247AB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = 0;
  *((void *)v12 + 3) = 0;
  *((void *)v12 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v12[v11], (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_25240BCB0((uint64_t)v9, (uint64_t)&unk_269C04FB8, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_25240E77C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)a2 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269C04A60);
  uint64_t v5 = sub_25247AAE0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25247AB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  unint64_t v13 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = 0;
  *((void *)v14 + 3) = 0;
  *((void *)v14 + 4) = v4;
  *((void *)v14 + 5) = a2;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v14[v13], v8, v5);
  swift_retain();
  sub_25240BCB0((uint64_t)v11, (uint64_t)&unk_269C04FD0, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_25240E988(uint64_t a1)
{
  return sub_25240E77C(a1, v1);
}

uint64_t sub_25240E990(uint64_t a1)
{
  return sub_25240D860(a1, v1[5], v1[2], v1[3]);
}

uint64_t sub_25240E99C(uint64_t a1, char a2)
{
  if (a2 == 2) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_25240E9B0(uint64_t a1, char a2)
{
  if (a2 == 2) {
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for Promise.ValueType()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25240E9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 32) = a5;
  return MEMORY[0x270FA2498](sub_25240E9FC, a4, 0);
}

uint64_t sub_25240E9FC()
{
  uint64_t v1 = (void *)sub_252413864(*(void *)(v0 + 32));
  *(void *)(v0 + 40) = v1;
  *(unsigned char *)(v0 + 48) = v2;
  sub_252413A78(v1, v2);
  return MEMORY[0x270FA2498](sub_25240EA70, 0, 0);
}

uint64_t sub_25240EA70()
{
  int v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255)
  {
    if (v1)
    {
      *(void *)(v0 + 16) = *(void *)(v0 + 40);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60);
      sub_25247AAC0();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60);
      sub_25247AAD0();
    }
  }
  unsigned __int8 v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_25240EB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v7 = *(void *)(*(void *)a4 + 80);
  v5[5] = v7;
  v5[6] = *(void *)(v7 - 8);
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Promise.ValueType();
  v5[9] = v8;
  uint64_t v9 = sub_25247AE90();
  v5[10] = v9;
  v5[11] = *(void *)(v9 - 8);
  v5[12] = swift_task_alloc();
  v5[13] = *(void *)(v8 - 8);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25240ECD8, a4, 0);
}

uint64_t sub_25240ECD8()
{
  sub_25240EF7C(*(void *)(v0 + 32), *(void *)(v0 + 96));
  return MEMORY[0x270FA2498](sub_25240ED44, 0, 0);
}

uint64_t sub_25240ED44()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[9];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, void))(v0[11] + 8))(v1, v0[10]);
  }
  else
  {
    uint64_t v5 = v0[14];
    uint64_t v4 = v0[15];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v5, v4, v3);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = (void *)v0[14];
    uint64_t v8 = v0[15];
    uint64_t v9 = v0[13];
    uint64_t v10 = v0[9];
    if (EnumCaseMultiPayload == 1)
    {
      v0[2] = *v7;
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269C04A60);
      sub_25247AAE0();
      sub_25247AAC0();
    }
    else
    {
      uint64_t v12 = v0[7];
      uint64_t v11 = v0[8];
      uint64_t v13 = v0[5];
      uint64_t v14 = v0[6];
      (*(void (**)(uint64_t, void *, uint64_t))(v14 + 32))(v11, v7, v13);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v11, v13);
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269C04A60);
      sub_25247AAE0();
      sub_25247AAD0();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v13);
    }
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_25240EF7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269C04A60);
  uint64_t v5 = sub_25247AAE0();
  uint64_t v21 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = type metadata accessor for Promise.ValueType();
  uint64_t v9 = sub_25247AE90();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = (uint64_t)v2 + *(void *)(v4 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  uint64_t v14 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v15 = *(void *)(*v2 + 104);
    if (*(uint64_t *)((char *)v2 + v15))
    {
      uint64_t v23 = *(uint64_t *)((char *)v2 + v15);
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v7, v22, v5);
      sub_25247AA90();
      swift_bridgeObjectRetain();
      sub_25247AA70();
      swift_bridgeObjectRelease();
      uint64_t v16 = 1;
    }
    else
    {
      sub_25247B210();
      uint64_t v17 = v21;
      swift_allocObject();
      uint64_t v16 = 1;
      uint64_t v18 = sub_25247AA20();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v19, v22, v5);
      sub_25247AA90();
      *(uint64_t *)((char *)v2 + v15) = v18;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v12, v8);
    uint64_t v16 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a2, v16, 1, v8);
}

uint64_t sub_25240F2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 40) = a5;
  *(void *)(v6 + 24) = a4;
  *(void *)(v6 + 32) = a6;
  return MEMORY[0x270FA2498](sub_25240F300, 0, 0);
}

uint64_t sub_25240F300()
{
  uint64_t v1 = *(void *)(v0 + 32);
  if (*(unsigned char *)(v0 + 40))
  {
    uint64_t v6 = *(void *)(v1 + 16);
    if (v6)
    {
      uint64_t v7 = *(void **)(v0 + 24);
      uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60) - 8);
      uint64_t v9 = v1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      swift_bridgeObjectRetain();
      sub_2524133FC(v7, 1);
      uint64_t v10 = *(void *)(v8 + 72);
      do
      {
        *(void *)(v0 + 16) = v7;
        id v11 = v7;
        sub_25247AAC0();
        v9 += v10;
        --v6;
      }
      while (v6);
      uint64_t v12 = *(void **)(v0 + 24);
      swift_bridgeObjectRelease();
      sub_25240FD04(v12, 1);
    }
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60) - 8);
      uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      uint64_t v5 = *(void *)(v3 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_25247AAD0();
        v4 += v5;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_25240F4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269C04A60);
  uint64_t v8 = sub_25247AAE0();
  v6[8] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v6[9] = v9;
  v6[10] = *(void *)(v9 + 64);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  v6[13] = *(void *)(a6 - 8);
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Promise.ValueType();
  v6[16] = v10;
  v6[17] = *(void *)(v10 - 8);
  v6[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25240F68C, 0, 0);
}

uint64_t sub_25240F68C()
{
  (*(void (**)(void, void, void))(v0[17] + 16))(v0[18], v0[5], v0[16]);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = (void **)v0[18];
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = v0[8];
    uint64_t v4 = (char *)*v2;
    uint64_t v5 = swift_bridgeObjectRetain();
    if (!MEMORY[0x2533B4D40](v5, v3)) {
      goto LABEL_22;
    }
    uint64_t v6 = 0;
    uint64_t v7 = v0[9];
    uint64_t v31 = v0[10];
    while (1)
    {
      char v8 = sub_25247AA60();
      sub_25247AA30();
      if (v8)
      {
        (*(void (**)(void, unint64_t, void))(v7 + 16))(v0[11], v0[6]+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v6, v0[8]);
        uint64_t v9 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t result = sub_25247AF60();
        if (v31 != 8)
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        uint64_t v15 = result;
        uint64_t v16 = v0[11];
        uint64_t v17 = v0[8];
        v0[2] = v15;
        (*(void (**)(uint64_t, void *, uint64_t))(v7 + 16))(v16, v0 + 2, v17);
        swift_unknownObjectRelease();
        uint64_t v9 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
LABEL_11:
          __break(1u);
          break;
        }
      }
      uint64_t v10 = v0[11];
      uint64_t v11 = v0[8];
      uint64_t v12 = v0[6];
      v0[3] = v4;
      uint64_t v13 = v4;
      sub_25247AAC0();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v11);
      ++v6;
      if (v9 == MEMORY[0x2533B4D40](v12, v11))
      {
LABEL_22:
        swift_bridgeObjectRelease();

        goto LABEL_24;
      }
    }
  }
  uint64_t v18 = v0[8];
  (*(void (**)(void, void **, void))(v0[13] + 32))(v0[15], v2, v0[7]);
  uint64_t v19 = swift_bridgeObjectRetain();
  if (MEMORY[0x2533B4D40](v19, v18))
  {
    uint64_t v4 = 0;
    uint64_t v20 = v0[9];
    uint64_t v32 = v0[10];
    uint64_t v21 = (void (**)(void, void, void))(v0[13] + 16);
    do
    {
      char v22 = sub_25247AA60();
      sub_25247AA30();
      if (v22)
      {
        (*(void (**)(void, unint64_t, void))(v20 + 16))(v0[12], v0[6]+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * (void)v4, v0[8]);
        uint64_t v23 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t result = sub_25247AF60();
        if (v32 != 8) {
          goto LABEL_28;
        }
        uint64_t v27 = result;
        uint64_t v28 = v0[12];
        uint64_t v29 = v0[8];
        v0[4] = v27;
        (*(void (**)(uint64_t, void *, uint64_t))(v20 + 16))(v28, v0 + 4, v29);
        swift_unknownObjectRelease();
        uint64_t v23 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
      }
      uint64_t v24 = v0[12];
      uint64_t v25 = v0[8];
      uint64_t v26 = v0[6];
      (*v21)(v0[14], v0[15], v0[7]);
      sub_25247AAD0();
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v24, v25);
      ++v4;
    }
    while (v23 != (char *)MEMORY[0x2533B4D40](v26, v25));
  }
  swift_bridgeObjectRelease();
  (*(void (**)(void, void))(v0[13] + 8))(v0[15], v0[7]);
LABEL_24:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v0[1];
  return v30();
}

uint64_t Promise.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  type metadata accessor for Promise.ValueType();
  uint64_t v2 = sub_25247AE90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t Promise.__deallocating_deinit()
{
  Promise.deinit();

  return MEMORY[0x270FA2418](v0);
}

uint64_t Promise.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_25240FB7C()
{
  return Promise.unownedExecutor.getter();
}

BOOL Promise<>.resolve()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  int v4 = *(unsigned __int8 *)(v0 + 120);
  if (v4 == 255)
  {
    uint64_t v5 = *(void **)(v0 + 112);
    *(void *)(v0 + 112) = 0;
    *(unsigned char *)(v0 + 120) = 0;
    sub_25240FCEC(v5, 0xFFu);
    uint64_t v6 = *(void *)(v0 + 128);
    if (v6)
    {
      *(void *)(v0 + 128) = 0;
      uint64_t v7 = sub_25247AB70();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
      uint64_t v11 = 0;
      char v12 = 0;
      char v8 = (void *)swift_allocObject();
      v8[2] = 0;
      v8[3] = 0;
      sub_25241011C((uint64_t)&v11, (uint64_t)(v8 + 4));
      v8[6] = v6;
      sub_25240BCB0((uint64_t)v3, (uint64_t)&unk_269C04D78, (uint64_t)v8);
      swift_release();
    }
  }
  return v4 != 255;
}

void sub_25240FCEC(void *a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_25240FD04(a1, a2 & 1);
  }
}

void sub_25240FD04(id a1, char a2)
{
  if (a2) {
}
  }

uint64_t Promise.resolve(with:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = type metadata accessor for Promise.ValueType();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))((char *)&v9 - v6, a1, v3);
  swift_storeEnumTagMultiPayload();
  LOBYTE(a1) = sub_25240E1BC((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return a1 & 1;
}

uint64_t sub_25240FE3C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25240FF18;
  return v6(a1);
}

uint64_t sub_25240FF18()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_252410010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v7 = *a4;
  char v8 = *((unsigned char *)a4 + 8);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v5 + 16) = v9;
  *(void *)uint64_t v9 = v5;
  *(void *)(v9 + 8) = sub_2523D3A1C;
  *(unsigned char *)(v9 + 40) = v8;
  *(void *)(v9 + 24) = v7;
  *(void *)(v9 + 32) = a5;
  return MEMORY[0x270FA2498](sub_25240F300, 0, 0);
}

uint64_t sub_2524100D0()
{
  swift_unknownObjectRelease();
  sub_25240FD04(*(id *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25241011C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_252410184(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1 + 4;
  uint64_t v7 = v1[6];
  char v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *char v8 = v2;
  v8[1] = sub_2523D3A1C;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))((char *)&dword_269C04D68 + dword_269C04D68);
  return v9(a1, v4, v5, v6, v7);
}

uint64_t sub_252410254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_25241025C()
{
  uint64_t result = type metadata accessor for Future.ValueType();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2524102F4(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 24) - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  if (v3 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  if (v3 <= 8) {
    unint64_t v3 = 8;
  }
  unsigned int v4 = a1[v3];
  unsigned int v5 = v4 - 3;
  if (v4 >= 3)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_14;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_14:
        int v8 = (v7 | (v5 << (8 * v3))) + 3;
        unsigned int v4 = v7 + 3;
        if (v3 < 4) {
          unsigned int v4 = v8;
        }
        break;
      default:
        break;
    }
  }
  if (v4 == 2) {
    return swift_release();
  }
  if (v4 == 1) {
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

void *sub_252410464(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v5 <= 8) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = v5;
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 3;
  if (v7 >= 3)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_15;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_15:
        int v11 = (v10 | (v8 << (8 * v6))) + 3;
        unsigned int v7 = v10 + 3;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v7 == 2)
  {
    *a1 = *(void *)a2;
    *((unsigned char *)a1 + v6) = 2;
    swift_retain();
  }
  else if (v7 == 1)
  {
    (*(void (**)(void *))(v4 + 16))(a1);
    *((unsigned char *)a1 + v6) = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    *((unsigned char *)a1 + v6) = 0;
  }
  return a1;
}

unsigned __int8 *sub_252410620(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    unint64_t v9 = *(void *)(v8 + 64);
    if (v9 <= *(void *)(v7 + 64)) {
      unint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    if (v9 <= 8) {
      uint64_t v10 = 8;
    }
    else {
      uint64_t v10 = v9;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 3;
    if (v11 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_16;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_16:
          int v15 = (v14 | (v12 << (8 * v10))) + 3;
          unsigned int v11 = v14 + 3;
          if (v10 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 2)
    {
      swift_release();
    }
    else
    {
      if (v11 == 1) {
        uint64_t v16 = *(void (**)(void))(v8 + 8);
      }
      else {
        uint64_t v16 = *(void (**)(void))(v7 + 8);
      }
      v16();
    }
    unsigned int v17 = a2[v10];
    unsigned int v18 = v17 - 3;
    if (v17 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v19 = v10;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_33;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_33;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_33;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_33:
          int v21 = (v20 | (v18 << (8 * v10))) + 3;
          unsigned int v17 = v20 + 3;
          if (v10 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    if (v17 == 2)
    {
      *(void *)a1 = *(void *)a2;
      a1[v10] = 2;
      swift_retain();
    }
    else if (v17 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, v6);
      a1[v10] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v5);
      a1[v10] = 0;
    }
  }
  return a1;
}

void *sub_2524108DC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v5 <= 8) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = v5;
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 3;
  if (v7 >= 3)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_15;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_15:
        int v11 = (v10 | (v8 << (8 * v6))) + 3;
        unsigned int v7 = v10 + 3;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v7 == 2)
  {
    *a1 = *(void *)a2;
    char v12 = 2;
  }
  else if (v7 == 1)
  {
    (*(void (**)(void *))(v4 + 32))(a1);
    char v12 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v12 = 0;
  }
  *((unsigned char *)a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_252410A90(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    unint64_t v9 = *(void *)(v8 + 64);
    if (v9 <= *(void *)(v7 + 64)) {
      unint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    if (v9 <= 8) {
      uint64_t v10 = 8;
    }
    else {
      uint64_t v10 = v9;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 3;
    if (v11 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_16;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_16:
          int v15 = (v14 | (v12 << (8 * v10))) + 3;
          unsigned int v11 = v14 + 3;
          if (v10 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 2)
    {
      swift_release();
    }
    else
    {
      if (v11 == 1) {
        uint64_t v16 = *(void (**)(void))(v8 + 8);
      }
      else {
        uint64_t v16 = *(void (**)(void))(v7 + 8);
      }
      v16();
    }
    unsigned int v17 = a2[v10];
    unsigned int v18 = v17 - 3;
    if (v17 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v19 = v10;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_33;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_33;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_33;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_33:
          int v21 = (v20 | (v18 << (8 * v10))) + 3;
          unsigned int v17 = v20 + 3;
          if (v10 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    if (v17 == 2)
    {
      *(void *)a1 = *(void *)a2;
      char v22 = 2;
    }
    else if (v17 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 32))(a1, a2, v6);
      char v22 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v5);
      char v22 = 0;
    }
    a1[v10] = v22;
  }
  return a1;
}

uint64_t sub_252410D44(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v4 + 64) > v3) {
    unint64_t v3 = *(void *)(v4 + 64);
  }
  uint64_t v5 = 8;
  if (v3 > 8) {
    uint64_t v5 = v3;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_24;
  }
  uint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    unsigned int v10 = ((a2 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v10 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v10 < 2)
    {
LABEL_24:
      unsigned int v12 = *((unsigned __int8 *)a1 + v5);
      if (v12 >= 3) {
        return (v12 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_24;
  }
LABEL_16:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 254;
}

void sub_252410E94(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_36:
        __break(1u);
        JUMPOUT(0x252411078);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_24;
      case 3:
        goto LABEL_36;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      default:
LABEL_24:
        if (a2) {
LABEL_25:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t type metadata accessor for Future()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2524110B8()
{
  type metadata accessor for Promise.ValueType();
  uint64_t result = sub_25247AE90();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for Promise(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Promise);
}

uint64_t sub_252411184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t sub_25241118C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_252411220(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    unsigned int v8 = *(char **)a2;
    *(void *)unint64_t v3 = *(void *)a2;
    unint64_t v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      uint64_t v14 = *(void *)a2;
      id v15 = *(id *)a2;
      *(void *)unint64_t v3 = v14;
      v3[v5] = 1;
    }
    else
    {
      (*(void (**)(char *))(v4 + 16))(a1);
      v3[v5] = 0;
    }
  }
  return v3;
}

void sub_2524113A8(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {

  }
  else {
    (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

void *sub_2524114A8(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *(void *)a2;
    id v11 = *(id *)a2;
    *a1 = v10;
    char v12 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v12 = 0;
  }
  *((unsigned char *)a1 + v4) = v12;
  return a1;
}

unsigned __int8 *sub_2524115F0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      unsigned int v18 = *(void **)a2;
      id v19 = v18;
      *(void *)a1 = v18;
      char v20 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v20 = 0;
    }
    a1[v7] = v20;
  }
  return a1;
}

void *sub_252411810(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(void *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_252411948(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_252411B60(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_252411C94(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x252411E5CLL);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_252411E84(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_252411F3C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_252412014()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_2524120EC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (v6 <= *(void *)(v4 + 64)) {
    unint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v6 <= 8) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = v6;
  }
  int v8 = *(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80);
  if ((unint64_t)(v7 + 1) > 0x18 || (v8 & 0x1000F8) != 0)
  {
    uint64_t v10 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v10 + (((v8 & 0xF8 | 7u) + 16) & ~(unint64_t)(v8 & 0xF8 | 7u)));
LABEL_26:
    swift_retain();
    return v3;
  }
  unsigned int v11 = a2[v7];
  unsigned int v12 = v11 - 3;
  if (v11 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v13 = v7;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_20;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_20;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_20;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_20:
        int v15 = (v14 | (v12 << (8 * v7))) + 3;
        unsigned int v11 = v14 + 3;
        if (v7 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 2)
  {
    *a1 = *(void *)a2;
    *((unsigned char *)a1 + v7) = 2;
    goto LABEL_26;
  }
  if (v11 == 1)
  {
    (*(void (**)(void *))(v5 + 16))(a1);
    *((unsigned char *)v3 + v7) = 1;
  }
  else
  {
    (*(void (**)(void *))(v4 + 16))(a1);
    *((unsigned char *)v3 + v7) = 0;
  }
  return v3;
}

uint64_t sub_2524122EC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 24) - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  if (v3 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  if (v3 <= 8) {
    unint64_t v3 = 8;
  }
  unsigned int v4 = a1[v3];
  unsigned int v5 = v4 - 3;
  if (v4 >= 3)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_14;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_14:
        int v8 = (v7 | (v5 << (8 * v3))) + 3;
        unsigned int v4 = v7 + 3;
        if (v3 < 4) {
          unsigned int v4 = v8;
        }
        break;
      default:
        break;
    }
  }
  if (v4 == 2) {
    return swift_release();
  }
  if (v4 == 1) {
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

void *sub_25241245C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v5 <= 8) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = v5;
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 3;
  if (v7 >= 3)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_15;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_15:
        int v11 = (v10 | (v8 << (8 * v6))) + 3;
        unsigned int v7 = v10 + 3;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v7 == 2)
  {
    *a1 = *(void *)a2;
    *((unsigned char *)a1 + v6) = 2;
    swift_retain();
  }
  else if (v7 == 1)
  {
    (*(void (**)(void *))(v4 + 16))(a1);
    *((unsigned char *)a1 + v6) = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    *((unsigned char *)a1 + v6) = 0;
  }
  return a1;
}

unsigned __int8 *sub_252412618(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    unint64_t v9 = *(void *)(v8 + 64);
    if (v9 <= *(void *)(v7 + 64)) {
      unint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    if (v9 <= 8) {
      uint64_t v10 = 8;
    }
    else {
      uint64_t v10 = v9;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 3;
    if (v11 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_16;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_16:
          int v15 = (v14 | (v12 << (8 * v10))) + 3;
          unsigned int v11 = v14 + 3;
          if (v10 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 2)
    {
      swift_release();
    }
    else
    {
      if (v11 == 1) {
        int v16 = *(void (**)(void))(v8 + 8);
      }
      else {
        int v16 = *(void (**)(void))(v7 + 8);
      }
      v16();
    }
    unsigned int v17 = a2[v10];
    unsigned int v18 = v17 - 3;
    if (v17 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v19 = v10;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_33;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_33;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_33;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_33:
          int v21 = (v20 | (v18 << (8 * v10))) + 3;
          unsigned int v17 = v20 + 3;
          if (v10 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    if (v17 == 2)
    {
      *(void *)a1 = *(void *)a2;
      a1[v10] = 2;
      swift_retain();
    }
    else if (v17 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, v6);
      a1[v10] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v5);
      a1[v10] = 0;
    }
  }
  return a1;
}

void *sub_2524128D4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v5 <= 8) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = v5;
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 3;
  if (v7 >= 3)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_15;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_15:
        int v11 = (v10 | (v8 << (8 * v6))) + 3;
        unsigned int v7 = v10 + 3;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v7 == 2)
  {
    *a1 = *(void *)a2;
    char v12 = 2;
  }
  else if (v7 == 1)
  {
    (*(void (**)(void *))(v4 + 32))(a1);
    char v12 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v12 = 0;
  }
  *((unsigned char *)a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_252412A88(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    unint64_t v9 = *(void *)(v8 + 64);
    if (v9 <= *(void *)(v7 + 64)) {
      unint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    if (v9 <= 8) {
      uint64_t v10 = 8;
    }
    else {
      uint64_t v10 = v9;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 3;
    if (v11 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_16;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_16:
          int v15 = (v14 | (v12 << (8 * v10))) + 3;
          unsigned int v11 = v14 + 3;
          if (v10 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 2)
    {
      swift_release();
    }
    else
    {
      if (v11 == 1) {
        int v16 = *(void (**)(void))(v8 + 8);
      }
      else {
        int v16 = *(void (**)(void))(v7 + 8);
      }
      v16();
    }
    unsigned int v17 = a2[v10];
    unsigned int v18 = v17 - 3;
    if (v17 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v19 = v10;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_33;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_33;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_33;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_33:
          int v21 = (v20 | (v18 << (8 * v10))) + 3;
          unsigned int v17 = v20 + 3;
          if (v10 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    if (v17 == 2)
    {
      *(void *)a1 = *(void *)a2;
      char v22 = 2;
    }
    else if (v17 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 32))(a1, a2, v6);
      char v22 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v5);
      char v22 = 0;
    }
    a1[v10] = v22;
  }
  return a1;
}

uint64_t sub_252412D3C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v4 + 64) > v3) {
    unint64_t v3 = *(void *)(v4 + 64);
  }
  uint64_t v5 = 8;
  if (v3 > 8) {
    uint64_t v5 = v3;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_24;
  }
  uint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    unsigned int v10 = ((a2 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v10 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v10 < 2)
    {
LABEL_24:
      unsigned int v12 = *((unsigned __int8 *)a1 + v5);
      if (v12 >= 3) {
        return (v12 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_24;
  }
LABEL_16:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 254;
}

void sub_252412E8C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_36:
        __break(1u);
        JUMPOUT(0x252413070);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_24;
      case 3:
        goto LABEL_36;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      default:
LABEL_24:
        if (a2) {
LABEL_25:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_252413098(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  uint64_t v3 = *(void *)(*(void *)(a2 + 24) - 8);
  if (*(void *)(v3 + 64) > v2) {
    unint64_t v2 = *(void *)(v3 + 64);
  }
  uint64_t v4 = 8;
  if (v2 > 8) {
    uint64_t v4 = v2;
  }
  uint64_t v5 = a1[v4];
  int v6 = v5 - 3;
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_14;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_14:
        unsigned int v9 = (v8 | (v6 << (8 * v4))) + 3;
        LODWORD(v5) = v8 + 3;
        if (v4 >= 4) {
          uint64_t v5 = v5;
        }
        else {
          uint64_t v5 = v9;
        }
        break;
      default:
        return v5;
    }
  }
  return v5;
}

void sub_25241316C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 > 2)
  {
    unint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
    if (*(void *)(v7 + 64) > v6) {
      unint64_t v6 = *(void *)(v7 + 64);
    }
    if (v6 <= 8) {
      size_t v8 = 8;
    }
    else {
      size_t v8 = v6;
    }
    unsigned int v9 = a2 - 3;
    if (v8 < 4)
    {
      unsigned int v10 = v9 >> (8 * v8);
      int v11 = v9 & ~(-1 << (8 * v8));
      a1[v8] = v10 + 3;
      bzero(a1, v8);
      if (v8 == 3)
      {
        *(_WORD *)a1 = v11;
        a1[2] = BYTE2(v11);
      }
      else if (v8 == 2)
      {
        *(_WORD *)a1 = v11;
      }
      else
      {
        *a1 = v11;
      }
    }
    else
    {
      a1[v8] = 3;
      bzero(a1, v8);
      *(_DWORD *)a1 = v9;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    if (*(void *)(v4 + 64) > v5) {
      unint64_t v5 = *(void *)(v4 + 64);
    }
    if (v5 <= 8) {
      unint64_t v5 = 8;
    }
    a1[v5] = a2;
  }
}

uint64_t sub_2524132AC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25241330C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_252413344(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_2523D3928;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269C04F80 + dword_269C04F80);
  return v6(a1, v4);
}

id sub_2524133FC(id result, char a2)
{
  if (a2) {
    return result;
  }
  return result;
}

uint64_t sub_252413408()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(type metadata accessor for Promise.ValueType() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  swift_unknownObjectRelease();
  if (swift_getEnumCaseMultiPayload() == 1) {

  }
  else {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v4, v1);
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_252413534(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = *(void *)(type metadata accessor for Promise.ValueType() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + v6;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  int v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *int v11 = v2;
  v11[1] = sub_2523D3A1C;
  return sub_25240F4CC(a1, v7, v8, v9, v10, v4);
}

uint64_t sub_252413664(uint64_t a1)
{
  return sub_25240E5A4(a1, v1);
}

uint64_t sub_25241366C()
{
  return sub_25247AAD0();
}

uint64_t sub_2524136A0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_252413778()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60) - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_2523D3A1C;
  v5[3] = v3;
  v5[4] = v4;
  return MEMORY[0x270FA2498](sub_25240E9FC, v3, 0);
}

uint64_t sub_252413864(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(unsigned __int8 *)(v1 + 120) != 255) {
    return *(void *)(v1 + 112);
  }
  unint64_t v8 = *(void *)(v1 + 128);
  if (v8)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v8 = sub_25241DDD4(0, *(void *)(v8 + 16) + 1, 1, v8);
    }
    unint64_t v10 = *(void *)(v8 + 16);
    unint64_t v9 = *(void *)(v8 + 24);
    if (v10 >= v9 >> 1) {
      unint64_t v8 = sub_25241DDD4(v9 > 1, v10 + 1, 1, v8);
    }
    *(void *)(v8 + 16) = v10 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v10, v6, v3);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C04FC0);
    unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_25247E5A0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 16))(v12 + v11, a1, v3);
    *(void *)(v1 + 128) = v12;
  }
  swift_bridgeObjectRelease();
  return 0;
}

id sub_252413A78(id result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_2524133FC(result, a2 & 1);
  }
  return result;
}

uint64_t sub_252413A90()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269C04A60);
  uint64_t v1 = sub_25247AAE0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_252413B84(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269C04A60);
  uint64_t v4 = *(void *)(sub_25247AAE0() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[5];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *unint64_t v9 = v2;
  v9[1] = sub_2523D3928;
  return sub_25240EB18(a1, v5, v6, v7, v8);
}

void *sub_252413CA0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_25247B0C0();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      uint64_t v23 = v4;
      unint64_t v24 = v7;
      unint64_t v25 = v7 & 0xC000000000000001;
      uint64_t v4 = 4;
      do
      {
        uint64_t v9 = v4 - 4;
        if (v25)
        {
          id v10 = (id)MEMORY[0x2533B5230](v4 - 4, v7);
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          id v10 = *(id *)(v7 + 8 * v4);
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v12 = v8;
        uint64_t v13 = v10;
        id v14 = objc_msgSend(v10, sel_zoneID, v23);
        uint64_t v15 = a3;
        id v16 = objc_msgSend(v14, sel_zoneName);

        uint64_t v17 = sub_25247A840();
        uint64_t v19 = v18;

        a3 = v15;
        BOOL v20 = v17 == a2 && v19 == v15;
        if (v20)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        char v21 = sub_25247B260();
        swift_bridgeObjectRelease();
        if (v21) {
          goto LABEL_18;
        }

        ++v4;
        uint64_t v8 = v12;
        BOOL v20 = v11 == v12;
        unint64_t v7 = v24;
      }
      while (!v20);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_252413E68(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 496) = a3;
  *(void *)(v3 + 264) = a1;
  *(void *)(v3 + 272) = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C055D0);
  *(void *)(v3 + 280) = v4;
  *(void *)(v3 + 288) = *(void *)(v4 - 8);
  *(void *)(v3 + 296) = swift_task_alloc();
  uint64_t v5 = sub_25247A6A0();
  *(void *)(v3 + 304) = v5;
  *(void *)(v3 + 312) = *(void *)(v5 - 8);
  *(void *)(v3 + 320) = swift_task_alloc();
  *(void *)(v3 + 328) = swift_task_alloc();
  *(void *)(v3 + 336) = swift_task_alloc();
  *(void *)(v3 + 344) = swift_task_alloc();
  *(void *)(v3 + 352) = swift_task_alloc();
  *(void *)(v3 + 360) = swift_task_alloc();
  *(void *)(v3 + 368) = swift_task_alloc();
  *(void *)(v3 + 376) = swift_task_alloc();
  uint64_t v6 = sub_25247A540();
  *(void *)(v3 + 384) = v6;
  *(void *)(v3 + 392) = *(void *)(v6 - 8);
  *(void *)(v3 + 400) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252414040, 0, 0);
}

uint64_t sub_252414040()
{
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 384);
  uint64_t v4 = *(void *)(v0 + 272);
  id v21 = *(id *)(v0 + 264);
  type metadata accessor for Configuration();
  static Configuration.zoneUUID(forHomeIdentifier:)(v4, v2);
  *(void *)(v0 + 168) = sub_25247A4D0();
  *(void *)(v0 + 176) = v5;
  *(void *)(v0 + 184) = 0x2D73746E657665;
  *(void *)(v0 + 192) = 0xE700000000000000;
  uint64_t v24 = sub_25247A970();
  uint64_t v25 = v6;
  sub_25247A910();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 408) = v24;
  *(void *)(v0 + 416) = v25;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  if (objc_msgSend(v21, sel_databaseScope) == (id)2)
  {
    sub_2523E1254(0, (unint64_t *)&qword_269C04FF0);
    sub_25247A840();
    id v22 = (id)sub_25247AD70();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v7 = *(uint64_t (**)(id))(v0 + 8);
    return v7(v22);
  }
  else if (*(unsigned char *)(v0 + 496) == 1)
  {
    if (qword_269C04340 != -1) {
      swift_once();
    }
    uint64_t v9 = qword_269C06480;
    *(void *)(v0 + 424) = qword_269C06480;
    return MEMORY[0x270FA2498](sub_2524144E0, v9, 0);
  }
  else
  {
    sub_2523E7170(*(void *)(v0 + 368));
    id v10 = sub_25247A680();
    os_log_type_t v11 = sub_25247AD60();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_2523CF000, v10, v11, "Fetching zones in shared database", v12, 2u);
      MEMORY[0x2533B5DC0](v12, -1, -1);
    }
    uint64_t v13 = *(void *)(v0 + 368);
    uint64_t v15 = *(void *)(v0 + 304);
    uint64_t v14 = *(void *)(v0 + 312);
    uint64_t v17 = *(void *)(v0 + 288);
    uint64_t v16 = *(void *)(v0 + 296);
    uint64_t v18 = *(void *)(v0 + 280);
    id v23 = *(id *)(v0 + 264);

    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    *(void *)(v0 + 448) = v19;
    *(void *)(v0 + 456) = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v19(v13, v15);
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 248;
    *(void *)(v0 + 24) = sub_252414A98;
    swift_continuation_init();
    *(void *)(v0 + 136) = v18;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 112));
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C04FE0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A60);
    sub_25247AAB0();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v17 + 32))(boxed_opaque_existential_1, v16, v18);
    *(void *)(v0 + 80) = MEMORY[0x263EF8330];
    *(void *)(v0 + 88) = 1107296256;
    *(void *)(v0 + 96) = sub_252428200;
    *(void *)(v0 + 104) = &block_descriptor_3;
    objc_msgSend(v23, sel_fetchAllRecordZonesWithCompletionHandler_);
    return MEMORY[0x270FA23F0](v0 + 16);
  }
}

uint64_t sub_2524144E0()
{
  uint64_t v1 = v0[53];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 128);
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = v0[51];
    uint64_t v3 = v0[52];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_252460D44(v4, v3);
    if (v6)
    {
      unint64_t v7 = (void *)(*(void *)(v2 + 56) + 16 * v5);
      v0[54] = *v7;
      v0[55] = v7[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_25241482C;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_252415F40;
    }
  }
  else
  {
    uint64_t v8 = sub_2524145F0;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

uint64_t sub_2524145F0()
{
  sub_2523E7170(v0[46]);
  uint64_t v1 = sub_25247A680();
  os_log_type_t v2 = sub_25247AD60();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_2523CF000, v1, v2, "Fetching zones in shared database", v3, 2u);
    MEMORY[0x2533B5DC0](v3, -1, -1);
  }
  uint64_t v4 = v0[46];
  uint64_t v6 = v0[38];
  uint64_t v5 = v0[39];
  uint64_t v8 = v0[36];
  uint64_t v7 = v0[37];
  uint64_t v9 = v0[35];
  uint64_t v13 = (void *)v0[33];

  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v0[56] = v10;
  v0[57] = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v10(v4, v6);
  v0[2] = v0;
  v0[7] = v0 + 31;
  v0[3] = sub_252414A98;
  swift_continuation_init();
  v0[17] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04FE0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A60);
  sub_25247AAB0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 32))(boxed_opaque_existential_1, v7, v9);
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 1107296256;
  v0[12] = sub_252428200;
  v0[13] = &block_descriptor_3;
  objc_msgSend(v13, sel_fetchAllRecordZonesWithCompletionHandler_);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_25241482C()
{
  uint64_t v1 = v0[47];
  sub_2523E1254(0, (unint64_t *)&qword_269C04FF0);
  os_log_type_t v2 = (void *)sub_25247AD70();
  sub_2523E7170(v1);
  uint64_t v13 = v2;
  uint64_t v3 = sub_25247A680();
  os_log_type_t v4 = sub_25247AD20();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    v0[32] = v13;
    uint64_t v7 = v13;
    sub_25247AEB0();
    *uint64_t v6 = v13;

    _os_log_impl(&dword_2523CF000, v3, v4, "Using cached owner name for zone: %@", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v6, -1, -1);
    MEMORY[0x2533B5DC0](v5, -1, -1);
  }
  else
  {

    uint64_t v3 = v13;
  }
  uint64_t v8 = v0[47];
  uint64_t v10 = v0[38];
  uint64_t v9 = v0[39];

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v11 = (uint64_t (*))v0[1];
  return v11(v13);
}

uint64_t sub_252414A98()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 464) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    os_log_type_t v2 = sub_252415C14;
  }
  else
  {
    os_log_type_t v2 = sub_252414BB0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_252414BB0()
{
  uint64_t v66 = v0;
  unint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 360);
  *(void *)(v0 + 472) = v1;
  sub_2523E7170(v2);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_25247A680();
  os_log_type_t v4 = sub_25247AD20();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_25247B0C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    *(void *)(v0 + 240) = v6;
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2523CF000, v3, v4, "Fetched %ld zone(s) in shared database", v5, 0xCu);
    MEMORY[0x2533B5DC0](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v7 = *(void *)(v0 + 352);
  (*(void (**)(void, void))(v0 + 448))(*(void *)(v0 + 360), *(void *)(v0 + 304));
  sub_2523E7170(v7);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_25247A680();
  os_log_type_t v9 = sub_25247AD30();
  BOOL v10 = os_log_type_enabled(v8, v9);
  os_log_type_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
  uint64_t v12 = *(void *)(v0 + 352);
  uint64_t v63 = *(void *)(v0 + 304);
  if (v10)
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v65[0] = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v15 = sub_2523E1254(0, (unint64_t *)&unk_269C056C0);
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = MEMORY[0x2533B4CC0](v16, v15);
    uint64_t v61 = v11;
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 232) = sub_25245DA98(v17, v19, v65);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2523CF000, v8, v9, "%s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v14, -1, -1);
    MEMORY[0x2533B5DC0](v13, -1, -1);

    v61(v12, v63);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v11(v12, v63);
  }
  uint64_t v20 = v0 + 248;
  if (*(unsigned char *)(v0 + 496) != 1) {
    goto LABEL_42;
  }
  v65[0] = MEMORY[0x263F8EE78];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_25247B0C0();
    if (v21) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v21 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v21)
    {
LABEL_12:
      if (v21 < 1)
      {
        __break(1u);
LABEL_56:
        swift_once();
LABEL_37:
        uint64_t v33 = qword_269C06480;
        *(void *)(v0 + 488) = qword_269C06480;
        return MEMORY[0x270FA2498](sub_2524156AC, v33, 0);
      }
      for (uint64_t i = 0; i != v21; ++i)
      {
        if ((v1 & 0xC000000000000001) != 0) {
          id v23 = (id)MEMORY[0x2533B5230](i, v1);
        }
        else {
          id v23 = *(id *)(v1 + 8 * i + 32);
        }
        uint64_t v24 = v23;
        id v25 = objc_msgSend(v23, sel_zoneID);
        id v26 = objc_msgSend(v25, sel_zoneName);

        sub_25247A840();
        LOBYTE(v25) = sub_25247A940();
        swift_bridgeObjectRelease();
        if (v25)
        {
          sub_25247AFC0();
          sub_25247AFF0();
          sub_25247B000();
          sub_25247AFD0();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v27 = v65[0];
      uint64_t v20 = v0 + 248;
      goto LABEL_25;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = MEMORY[0x263F8EE78];
LABEL_25:
  *(void *)(v0 + 480) = v27;
  BOOL v28 = v27 < 0 || (v27 & 0x4000000000000000) != 0;
  if (v28)
  {
    swift_retain();
    uint64_t v34 = sub_25247B0C0();
    swift_release();
    if (v34)
    {
LABEL_30:
      sub_2523E7170(*(void *)(v0 + 344));
      swift_retain_n();
      uint64_t v29 = sub_25247A680();
      os_log_type_t v30 = sub_25247AD20();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 134217984;
        if (v28)
        {
          swift_bridgeObjectRetain();
          uint64_t v32 = sub_25247B0C0();
          swift_release();
        }
        else
        {
          uint64_t v32 = *(void *)(v27 + 16);
        }
        swift_release();
        *(void *)(v0 + 224) = v32;
        sub_25247AEB0();
        swift_release();
        _os_log_impl(&dword_2523CF000, v29, v30, "Caching owner name for %ld zones", v31, 0xCu);
        MEMORY[0x2533B5DC0](v31, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      (*(void (**)(void, void))(v0 + 448))(*(void *)(v0 + 344), *(void *)(v0 + 304));
      if (qword_269C04340 == -1) {
        goto LABEL_37;
      }
      goto LABEL_56;
    }
  }
  else if (*(void *)(v27 + 16))
  {
    goto LABEL_30;
  }
  swift_release();
LABEL_42:
  unint64_t v35 = *(void *)(v0 + 472);
  uint64_t v36 = *(void *)(v0 + 408);
  uint64_t v37 = *(void *)(v0 + 416);
  swift_bridgeObjectRetain();
  id v38 = sub_252413CA0(v35, v36, v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v38)
  {
    uint64_t v39 = *(void *)(v0 + 336);
    swift_bridgeObjectRelease();
    id v40 = objc_msgSend(v38, sel_zoneID);
    sub_2523E7170(v39);
    id v41 = v40;
    uint64_t v42 = sub_25247A680();
    os_log_type_t v43 = sub_25247AD60();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 138412290;
      *(void *)(v20 - 32) = v41;
      id v46 = v41;
      sub_25247AEB0();
      *uint64_t v45 = v41;

      _os_log_impl(&dword_2523CF000, v42, v43, "Found shared zone for query: %@", v44, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v45, -1, -1);
      MEMORY[0x2533B5DC0](v44, -1, -1);
    }
    else
    {
    }
    (*(void (**)(void, void))(v0 + 448))(*(void *)(v0 + 336), *(void *)(v0 + 304));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v55 = *(uint64_t (**)(id))(v0 + 8);
    return v55(v41);
  }
  else
  {
    sub_2523E7170(*(void *)(v0 + 328));
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_25247A680();
    uint64_t v48 = sub_25247AD40();
    BOOL v49 = os_log_type_enabled(v47, (os_log_type_t)v48);
    uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
    unint64_t v51 = *(void *)(v0 + 416);
    if (v49)
    {
      uint64_t v52 = *(void *)(v0 + 408);
      uint64_t v62 = *(void *)(v0 + 304);
      uint64_t v64 = *(void *)(v0 + 328);
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      v65[0] = v54;
      *(_DWORD *)uint64_t v53 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 208) = sub_25245DA98(v52, v51, v65);
      sub_25247AEB0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2523CF000, v47, (os_log_type_t)v48, "Unable to find shared zone with name %s", v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v54, -1, -1);
      MEMORY[0x2533B5DC0](v53, -1, -1);

      v50(v64, v62);
    }
    else
    {
      uint64_t v56 = *(void *)(v0 + 328);
      uint64_t v57 = *(void *)(v0 + 304);
      swift_bridgeObjectRelease_n();

      v50(v56, v57);
    }
    sub_252415EDC();
    swift_allocError();
    void *v58 = 0xD000000000000024;
    v58[1] = 0x800000025247C8B0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    double v59 = *(uint64_t (**)(void))(v0 + 8);
    return v59();
  }
}

uint64_t sub_2524156AC()
{
  sub_252423DD4(*(void *)(v0 + 480), 1);
  swift_release();
  return MEMORY[0x270FA2498](sub_252415724, 0, 0);
}

uint64_t sub_252415724()
{
  uint64_t v31 = v0;
  unint64_t v1 = *(void *)(v0 + 472);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 416);
  swift_bridgeObjectRetain();
  os_log_type_t v4 = sub_252413CA0(v1, v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + 336);
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v4, sel_zoneID);
    sub_2523E7170(v5);
    id v7 = v6;
    uint64_t v8 = sub_25247A680();
    os_log_type_t v9 = sub_25247AD60();
    if (os_log_type_enabled(v8, v9))
    {
      BOOL v10 = (uint8_t *)swift_slowAlloc();
      id v26 = (void *)swift_slowAlloc();
      *(_DWORD *)BOOL v10 = 138412290;
      *(void *)(v0 + 216) = v7;
      os_log_t log = v8;
      id v11 = v7;
      sub_25247AEB0();
      *id v26 = v7;

      uint64_t v8 = log;
      _os_log_impl(&dword_2523CF000, log, v9, "Found shared zone for query: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v26, -1, -1);
      MEMORY[0x2533B5DC0](v10, -1, -1);
    }
    else
    {
    }
    (*(void (**)(void, void))(v0 + 448))(*(void *)(v0 + 336), *(void *)(v0 + 304));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(id))(v0 + 8);
    return v20(v7);
  }
  else
  {
    sub_2523E7170(*(void *)(v0 + 328));
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_25247A680();
    os_log_type_t v13 = sub_25247AD40();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = *(void (**)(uint64_t, os_log_t))(v0 + 448);
    unint64_t v16 = *(void *)(v0 + 416);
    if (v14)
    {
      uint64_t v17 = *(void *)(v0 + 408);
      os_log_t loga = *(os_log_t *)(v0 + 304);
      uint64_t v29 = *(void *)(v0 + 328);
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v30 = v19;
      *(_DWORD *)unint64_t v18 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 208) = sub_25245DA98(v17, v16, &v30);
      sub_25247AEB0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2523CF000, v12, v13, "Unable to find shared zone with name %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v19, -1, -1);
      MEMORY[0x2533B5DC0](v18, -1, -1);

      v15(v29, loga);
    }
    else
    {
      uint64_t v22 = *(void *)(v0 + 328);
      id v23 = *(NSObject **)(v0 + 304);
      swift_bridgeObjectRelease_n();

      v15(v22, v23);
    }
    sub_252415EDC();
    swift_allocError();
    *uint64_t v24 = 0xD000000000000024;
    v24[1] = 0x800000025247C8B0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v25 = *(uint64_t (**)(void))(v0 + 8);
    return v25();
  }
}

uint64_t sub_252415C14()
{
  unint64_t v1 = (void *)v0[58];
  uint64_t v2 = v0[40];
  swift_willThrow();
  sub_2523E7170(v2);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_25247A680();
  os_log_type_t v6 = sub_25247AD40();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (void *)v0[58];
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138543362;
    id v10 = v7;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[25] = v11;
    sub_25247AEB0();
    *os_log_type_t v9 = v11;

    _os_log_impl(&dword_2523CF000, v5, v6, "Failed to fetch shared database zones: %{public}@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v9, -1, -1);
    MEMORY[0x2533B5DC0](v8, -1, -1);
  }
  else
  {
    uint64_t v12 = (void *)v0[58];
  }
  os_log_type_t v13 = (void (*)(uint64_t, uint64_t))v0[56];
  uint64_t v14 = v0[40];
  uint64_t v15 = v0[38];

  v13(v14, v15);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  return sub_252415E78(a2 + 32, a1 + 32);
}

uint64_t sub_252415E78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t block_destroy_helper_3(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 32);
}

unint64_t sub_252415EDC()
{
  unint64_t result = qword_269C04FE8;
  if (!qword_269C04FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C04FE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedZoneLookup()
{
  return &type metadata for SharedZoneLookup;
}

HMVEventWriter __swiftcall HMVEventWriter.init()()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return (HMVEventWriter)objc_msgSend(v0, sel_init);
}

id HMVEventWriter.init()()
{
  v1.super_class = (Class)HMVEventWriter;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t HMVEventWriter.writeEvents(_:)(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_269C05FB8 + dword_269C05FB8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2523D3A1C;
  return v5(a1);
}

uint64_t HMVEventWriter.writeFakeEvents(date:homeIdentifier:count:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C05FC8 + dword_269C05FC8);
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *id v7 = v3;
  v7[1] = sub_2523D3A1C;
  return v9(a1, a2, a3);
}

uint64_t sub_252416154(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_269C05FB8 + dword_269C05FB8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2523D3928;
  return v5(a1);
}

uint64_t sub_2524161FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C05FC8 + dword_269C05FC8);
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *id v7 = v3;
  v7[1] = sub_2523D3A1C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of EventWriterProtocol.writeEvents(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *id v7 = v3;
  v7[1] = sub_2523D3928;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of EventWriterProtocol.writeFakeEvents(date:homeIdentifier:count:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  os_log_type_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_2523D3A1C;
  return v13(a1, a2, a3, a4, a5);
}

unint64_t type metadata accessor for HMVEventWriter()
{
  unint64_t result = qword_269C05028;
  if (!qword_269C05028)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269C05028);
  }
  return result;
}

uint64_t static OSVariant.isSeedBuild.getter()
{
  return 0;
}

uint64_t sub_252416524()
{
  uint64_t result = sub_252416548();
  byte_269C05030 = result & 1;
  return result;
}

uint64_t sub_252416548()
{
  id v0 = (void *)sub_25247A830();
  uint64_t v1 = MGCopyAnswer();

  if (!v1) {
    return 0;
  }
  uint64_t result = swift_dynamicCast();
  if (result) {
    return v3;
  }
  return result;
}

uint64_t static OSVariant.isInternalBuild.getter()
{
  if (qword_269C04320 != -1) {
    swift_once();
  }
  return byte_269C05030;
}

ValueMetadata *type metadata accessor for OSVariant()
{
  return &type metadata for OSVariant;
}

uint64_t DiscardingAsyncCache.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  return MEMORY[0x270FA2498](sub_252416660, 0, 0);
}

uint64_t sub_252416660()
{
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(*(void *)(v0[3] + 24) - 8) + 56))(v0[2], 1, 1);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t DiscardingAsyncCache.get(_:)(uint64_t a1, void *a2)
{
  os_log_type_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C05048 + dword_269C05048);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  uint64_t v6 = a2[2];
  uint64_t v5 = a2[3];
  uint64_t v7 = a2[4];
  *id v4 = v2;
  v4[1] = sub_2524167A0;
  return v9(v6, v5, v7);
}

uint64_t sub_2524167A0(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t DiscardingAsyncCache.set(_:key:)()
{
  return sub_252416B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t DiscardingAsyncCache.clear(_:)()
{
  return sub_252416B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_252416904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  uint64_t v6[2] = a1;
  v6[3] = a3;
  v6[1] = sub_2523D3928;
  return MEMORY[0x270FA2498](sub_252416660, 0, 0);
}

uint64_t sub_2524169B4(uint64_t a1, void *a2)
{
  os_log_type_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C05048 + dword_269C05048);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  uint64_t v6 = a2[2];
  uint64_t v5 = a2[3];
  uint64_t v7 = a2[4];
  *id v4 = v2;
  v4[1] = sub_252416B88;
  return v9(v6, v5, v7);
}

uint64_t sub_252416A64()
{
  return sub_252416B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_252416A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_252416ABC, 0, 0);
}

uint64_t sub_252416ABC()
{
  swift_getTupleTypeMetadata2();
  sub_25247AA40();
  uint64_t v1 = sub_25247A790();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_252416B58(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_252416B60(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 32);
}

uint64_t sub_252416B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t type metadata accessor for DiscardingAsyncCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t collectDiagnostics(includeSensitiveData:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 48) = a2;
  *(void *)(v2 + 16) = a1;
  return MEMORY[0x270FA2498](sub_252416BB0, 0, 0);
}

uint64_t sub_252416BB0()
{
  char v1 = *(unsigned char *)(v0 + 48);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *(unsigned char *)(v2 + 16) = v1;
  uint64_t v6 = (uint64_t (*)(uint64_t, void (*)(void *, uint64_t), uint64_t))((char *)&dword_269C05108
                                                                                      + dword_269C05108);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_252416C8C;
  uint64_t v4 = *(void *)(v0 + 16);
  return v6(v4, sub_2524176CC, v2);
}

uint64_t sub_252416C8C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2523D3C48, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_252416DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_252416DEC, 0, 0);
}

uint64_t sub_252416DEC()
{
  type metadata accessor for XPCDiagnosticExtensionClient();
  uint64_t v1 = swift_allocObject();
  *(void *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(void *)(v1 + 48) = 0;
  long long v7 = *(_OWORD *)(v0 + 24);
  sub_2524497F4();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  uint64_t v4 = sub_25247A140();
  *uint64_t v3 = v0;
  v3[1] = sub_252416F20;
  uint64_t v5 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v5, 0, 0, 0xD00000000000002BLL, 0x800000025247C8E0, sub_2524176D4, v2, v4);
}

uint64_t sub_252416F20()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2524170C0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_25241703C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25241703C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  objc_msgSend(*(id *)(v1 + 16), sel_invalidate);
  uint64_t v2 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = 0;
  swift_release();

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_2524170C0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_task_dealloc();
  objc_msgSend(*(id *)(v1 + 16), sel_invalidate);
  uint64_t v2 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = 0;
  swift_release();

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_252417148(uint64_t a1, void *a2, void (*a3)(void))
{
  uint64_t v18 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C045F8);
  MEMORY[0x270FA5388](v5 - 8);
  long long v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04600);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C05110);
  uint64_t v12 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v13 = v12 + *(void *)(*(void *)v12 + 112);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v14(v13, 1, 1, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v7, v11, v8);
  v14((uint64_t)v7, 0, 1, v8);
  swift_beginAccess();
  sub_2524176E0((uint64_t)v7, v13);
  swift_endAccess();
  uint64_t v15 = a2[5];
  a2[5] = sub_252417748;
  a2[6] = v12;
  swift_retain();
  sub_2523D6B20(v15);
  uint64_t v16 = a2[3];
  a2[3] = sub_252417750;
  a2[4] = v12;
  swift_retain();
  sub_2523D6B20(v16);
  sub_252449AD8();
  v18();
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_2524173C0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2523D6B38();
  uint64_t v5 = (void *)swift_allocError();
  *uint64_t v6 = 0;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  uint64_t v8 = sub_25247AB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_252417980;
  v9[6] = v7;
  id v10 = v5;
  swift_retain();
  swift_retain();
  sub_25240BCB0((uint64_t)v4, (uint64_t)&unk_269C05120, (uint64_t)v9);
  swift_release();
  swift_release();
}

void sub_252417544(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2523D6B38();
  uint64_t v5 = (void *)swift_allocError();
  *uint64_t v6 = 1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  uint64_t v8 = sub_25247AB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_2524177DC;
  v9[6] = v7;
  id v10 = v5;
  swift_retain();
  swift_retain();
  sub_25240BCB0((uint64_t)v4, (uint64_t)&unk_269C05118, (uint64_t)v9);
  swift_release();
  swift_release();
}

void sub_2524176CC(void *a1, uint64_t a2)
{
  sub_252427718(a1, a2, *(unsigned char *)(v2 + 16));
}

uint64_t sub_2524176D4(uint64_t a1)
{
  return sub_252417148(a1, *(void **)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_2524176E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C045F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_252417748()
{
  sub_2524173C0(v0);
}

void sub_252417750()
{
  sub_252417544(v0);
}

uint64_t sub_252417758(uint64_t a1, id *a2)
{
  id v2 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04600);
  return sub_25247AAC0();
}

uint64_t sub_2524177A4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2524177DC(uint64_t a1)
{
  return sub_252417758(a1, (id *)(v1 + 16));
}

uint64_t sub_2524177E8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_2523D3A1C;
  return sub_2523D54F8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_2524178B4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_2523D3928;
  return sub_2523D54F8(a1, v4, v5, v6, v7, v8);
}

uint64_t QueryResultAsyncSequence.makeAsyncIterator()()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05210);

  return sub_25247AC00();
}

uint64_t sub_2524179C4()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05210);
  sub_25247AC00();

  return sub_25241847C(v0);
}

uint64_t QueryResultAsyncSequence.Iterator.next()(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05260);
  *uint64_t v3 = v1;
  v3[1] = sub_2523D3928;
  return MEMORY[0x270FA2100](a1, v4);
}

unint64_t sub_252417AC4()
{
  unint64_t result = qword_269C05130[0];
  if (!qword_269C05130[0])
  {
    type metadata accessor for QueryResultAsyncSequence.Iterator(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269C05130);
  }
  return result;
}

uint64_t type metadata accessor for QueryResultAsyncSequence.Iterator(uint64_t a1)
{
  return sub_2523FC8A8(a1, (uint64_t *)&unk_269C05160);
}

uint64_t sub_252417B3C()
{
  return MEMORY[0x263F8E4E0];
}

uint64_t sub_252417B48(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05260);
  *uint64_t v3 = v1;
  v3[1] = sub_2523D3A1C;
  return MEMORY[0x270FA2100](a1, v4);
}

uint64_t sub_252417BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[3] = a2;
  uint64_t v6 = (void *)swift_task_alloc();
  void v4[6] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05260);
  *uint64_t v6 = v4;
  v6[1] = sub_252417CB8;
  return MEMORY[0x270FA2100](a1, v7);
}

uint64_t sub_252417CB8()
{
  uint64_t v2 = (void *)*v1;
  v2[7] = v0;
  swift_task_dealloc();
  if (v0)
  {
    if (v2[3])
    {
      swift_getObjectType();
      uint64_t v3 = sub_25247AAA0();
      uint64_t v5 = v4;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0;
    }
    return MEMORY[0x270FA2498](sub_252417E28, v3, v5);
  }
  else
  {
    uint64_t v6 = (uint64_t (*)(void))v2[1];
    return v6();
  }
}

uint64_t sub_252417E28()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = (void *)v0[5];
  v0[2] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A60);
  swift_willThrowTypedImpl();
  *uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t initializeBufferWithCopyOfBuffer for QueryResultAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252417F94(a1, a2, a3, (uint64_t *)&unk_269C05210);
}

uint64_t destroy for QueryResultAsyncSequence(uint64_t a1, uint64_t a2)
{
  return sub_25241800C(a1, a2, (uint64_t *)&unk_269C05210);
}

uint64_t initializeWithCopy for QueryResultAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25241807C(a1, a2, a3, (uint64_t *)&unk_269C05210);
}

uint64_t assignWithCopy for QueryResultAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2524180EC(a1, a2, a3, (uint64_t *)&unk_269C05210);
}

uint64_t initializeWithTake for QueryResultAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25241815C(a1, a2, a3, (uint64_t *)&unk_269C05210);
}

uint64_t assignWithTake for QueryResultAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2524181CC(a1, a2, a3, (uint64_t *)&unk_269C05210);
}

uint64_t getEnumTagSinglePayload for QueryResultAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252417F1C);
}

uint64_t sub_252417F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t *)&unk_269C05210);
}

uint64_t storeEnumTagSinglePayload for QueryResultAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252417F3C);
}

uint64_t sub_252417F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t *)&unk_269C05210);
}

uint64_t type metadata accessor for QueryResultAsyncSequence(uint64_t a1)
{
  return sub_2523FC8A8(a1, (uint64_t *)&unk_269C05148);
}

void sub_252417F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t initializeBufferWithCopyOfBuffer for QueryResultAsyncSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252417F94(a1, a2, a3, &qword_269C05260);
}

uint64_t sub_252417F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v7 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);

  return v7(a1, a2, v6);
}

uint64_t destroy for QueryResultAsyncSequence.Iterator(uint64_t a1, uint64_t a2)
{
  return sub_25241800C(a1, a2, &qword_269C05260);
}

uint64_t sub_25241800C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(a1, v4);
}

uint64_t initializeWithCopy for QueryResultAsyncSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25241807C(a1, a2, a3, &qword_269C05260);
}

uint64_t sub_25241807C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  return a1;
}

uint64_t assignWithCopy for QueryResultAsyncSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2524180EC(a1, a2, a3, &qword_269C05260);
}

uint64_t sub_2524180EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  return a1;
}

uint64_t initializeWithTake for QueryResultAsyncSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25241815C(a1, a2, a3, &qword_269C05260);
}

uint64_t sub_25241815C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  return a1;
}

uint64_t assignWithTake for QueryResultAsyncSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2524181CC(a1, a2, a3, &qword_269C05260);
}

uint64_t sub_2524181CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryResultAsyncSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252418244);
}

uint64_t sub_252418244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_269C05260);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);

  return v7(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for QueryResultAsyncSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2524182D0);
}

uint64_t sub_2524182D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_269C05260);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(a1, a2, a2, v7);
}

void sub_25241834C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_25241836C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, void))
{
  sub_252418400(319, a4, a5);
  if (v5 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_252418400(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for SomeEvent();
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269C04A60);
    unint64_t v8 = a3(a1, v6, v7, MEMORY[0x263F8E4E0]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_25241847C(uint64_t a1)
{
  uint64_t ResultAsyncSequence = type metadata accessor for QueryResultAsyncSequence(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(ResultAsyncSequence - 8) + 8))(a1, ResultAsyncSequence);
  return a1;
}

HomeKitEvents::SecuritySystemEvent::State_optional __swiftcall SecuritySystemEvent.State.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue > 8) {
    *uint64_t v1 = 8;
  }
  else {
    *uint64_t v1 = byte_25247F424[rawValue];
  }
  return (HomeKitEvents::SecuritySystemEvent::State_optional)rawValue;
}

void *static SecuritySystemEvent.State.allCases.getter()
{
  return &unk_2702994E0;
}

uint64_t SecuritySystemEvent.State.rawValue.getter()
{
  return qword_25247F450[*v0];
}

BOOL sub_252418520(char *a1, char *a2)
{
  return qword_25247F450[*a1] == qword_25247F450[*a2];
}

uint64_t sub_252418544()
{
  return sub_25247B390();
}

uint64_t sub_252418594()
{
  return sub_25247B360();
}

uint64_t sub_2524185CC()
{
  return sub_25247B390();
}

HomeKitEvents::SecuritySystemEvent::State_optional sub_252418618(Swift::Int *a1)
{
  return SecuritySystemEvent.State.init(rawValue:)(*a1);
}

void sub_252418620(void *a1@<X8>)
{
  *a1 = qword_25247F450[*v1];
}

void sub_252418638(void *a1@<X8>)
{
  *a1 = &unk_2702994E0;
}

uint64_t SecuritySystemEvent.state.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SecuritySystemEvent();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for SecuritySystemEvent()
{
  uint64_t result = qword_269C051F0;
  if (!qword_269C051F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SecuritySystemEvent.init(date:homeIdentifier:roomIdentifier:roomName:accessoryIdentifier:accessoryName:state:userIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11)
{
  char v29 = *a10;
  uint64_t v17 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a9, a1, v17);
  uint64_t v18 = type metadata accessor for EventBase(0);
  uint64_t v19 = a9 + *(int *)(v18 + 20);
  uint64_t v20 = sub_25247A540();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32);
  v21(v19, a2, v20);
  *(unsigned char *)(a9 + *(int *)(v18 + 24)) = 2;
  uint64_t v22 = (int *)type metadata accessor for AccessoryEventBase(0);
  v21(a9 + v22[5], a3, v20);
  id v23 = (void *)(a9 + v22[6]);
  *id v23 = a4;
  v23[1] = a5;
  v21(a9 + v22[7], a6, v20);
  uint64_t v24 = (void *)(a9 + v22[8]);
  *uint64_t v24 = a7;
  v24[1] = a8;
  sub_2523E28C4(a11, a9 + v22[9]);
  uint64_t result = type metadata accessor for SecuritySystemEvent();
  *(unsigned char *)(a9 + *(int *)(result + 20)) = v29;
  return result;
}

uint64_t SecuritySystemEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_2523D918C((uint64_t)a1, (uint64_t)v11);
  sub_252466A64((uint64_t)v11, (uint64_t)v7);
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_2523E13C0(a1, (uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  char v9 = v11[0];
  sub_2523E29D8((uint64_t)v7, a2);
  uint64_t result = type metadata accessor for SecuritySystemEvent();
  *(unsigned char *)(a2 + *(int *)(result + 20)) = v9;
  return result;
}

uint64_t SecuritySystemEvent.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04810);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = sub_252467000(a1);
  if (!v2)
  {
    v9[15] = *(unsigned char *)(v1 + *(int *)(type metadata accessor for SecuritySystemEvent() + 20));
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_2523D3370();
    sub_25247B3B0();
    v9[14] = 1;
    sub_252418ACC();
    sub_25247B1D0();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

unint64_t sub_252418ACC()
{
  unint64_t result = qword_269C05178;
  if (!qword_269C05178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05178);
  }
  return result;
}

uint64_t sub_252418B20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SecuritySystemEvent.init(from:)(a1, a2);
}

uint64_t sub_252418B38(void *a1)
{
  return SecuritySystemEvent.encode(to:)(a1);
}

uint64_t SecuritySystemEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25247A4B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t SecuritySystemEvent.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SecuritySystemEvent.category.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for EventBase(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SecuritySystemEvent.roomIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SecuritySystemEvent.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecuritySystemEvent.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SecuritySystemEvent.accessoryName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecuritySystemEvent.userIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);

  return sub_2523E1C2C(v3, a1);
}

uint64_t SecuritySystemEvent.hash(into:)()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A4B0();
  sub_252419650(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_252419650((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  type metadata accessor for SecuritySystemEvent();
  return sub_25247B360();
}

BOOL static SecuritySystemEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (!_s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(a1, a2)) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for SecuritySystemEvent();
  return qword_25247F450[*(char *)(a1 + *(int *)(v4 + 20))] == qword_25247F450[*(char *)(a2 + *(int *)(v4 + 20))];
}

uint64_t SecuritySystemEvent.hashValue.getter()
{
  return sub_25247B390();
}

uint64_t sub_2524191B0()
{
  return sub_25247B390();
}

uint64_t sub_2524191F4()
{
  return sub_25247B390();
}

BOOL sub_252419230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (j___s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0() & 1) != 0
      && qword_25247F450[*(char *)(a1 + *(int *)(a3 + 20))] == qword_25247F450[*(char *)(a2 + *(int *)(a3 + 20))];
}

uint64_t sub_252419298()
{
  return sub_25247A9D0();
}

uint64_t sub_2524192F8()
{
  return sub_25247A9C0();
}

unint64_t sub_25241934C()
{
  unint64_t result = qword_269C05180;
  if (!qword_269C05180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05180);
  }
  return result;
}

unint64_t sub_2524193A4()
{
  unint64_t result = qword_269C05188;
  if (!qword_269C05188)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C05190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05188);
  }
  return result;
}

unint64_t sub_252419404()
{
  unint64_t result = qword_269C05198;
  if (!qword_269C05198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05198);
  }
  return result;
}

uint64_t sub_252419458(void *a1)
{
  a1[1] = sub_252419650(&qword_269C051A8, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
  a1[2] = sub_252419650(&qword_269C051B0, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
  uint64_t result = sub_252419650(&qword_269C051B8, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_252419504()
{
  return sub_252419650(&qword_269C051C0, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
}

uint64_t sub_25241954C(uint64_t a1)
{
  uint64_t result = sub_252419650(&qword_269C051A0, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2524195A4(void *a1)
{
  a1[1] = sub_252419650(&qword_269C051C8, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
  a1[2] = sub_252419650(&qword_269C051D0, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
  uint64_t result = sub_252419650(&qword_269C051D8, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_252419650(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_252419698()
{
  return sub_252419650(&qword_269C051C8, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
}

unint64_t sub_2524196E0(void *a1)
{
  a1[1] = sub_2523E43E8();
  a1[2] = sub_252418ACC();
  unint64_t result = sub_252419718();
  a1[3] = result;
  return result;
}

unint64_t sub_252419718()
{
  unint64_t result = qword_269C051E0;
  if (!qword_269C051E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C051E0);
  }
  return result;
}

unint64_t sub_25241976C(uint64_t a1)
{
  unint64_t result = sub_252419794();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_252419794()
{
  unint64_t result = qword_269C051E8;
  if (!qword_269C051E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C051E8);
  }
  return result;
}

unint64_t sub_2524197E8(uint64_t a1)
{
  unint64_t result = sub_252419404();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SecuritySystemEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252419824);
}

uint64_t sub_252419824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AccessoryEventBaseLegacy(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 8) {
      return v10 - 7;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for SecuritySystemEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2524198F4);
}

uint64_t sub_2524198F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AccessoryEventBaseLegacy(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 7;
  }
  return result;
}

uint64_t sub_2524199B0()
{
  uint64_t result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SecuritySystemEvent.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SecuritySystemEvent.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252419BA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecuritySystemEvent.State()
{
  return &type metadata for SecuritySystemEvent.State;
}

unint64_t sub_252419BD8()
{
  unint64_t result = qword_269C05200;
  if (!qword_269C05200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05200);
  }
  return result;
}

uint64_t sub_252419C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25247AB70();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_25247AB60();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_2524132AC(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25247AAA0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04790);
  return swift_task_create();
}

uint64_t sub_252419DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25247AB70();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_25247AB60();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_2524132AC(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25247AAA0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void *QueryController.__allocating_init()()
{
  uint64_t v1 = v0;
  if (qword_269C04350 != -1) {
    swift_once();
  }
  int v2 = (void *)*((void *)off_269C056F0 + 2);
  uint64_t MetricsObserver = type metadata accessor for QueryMetricsObserver();
  int v4 = sub_2524239B8();
  uint64_t ObjectType = swift_getObjectType();
  LOWORD(v12[0]) = v4 & 0x101;
  BYTE2(v12[0]) = BYTE2(v4) & 1;
  swift_unknownObjectRetain();
  id v6 = sub_2523E53AC((uint64_t)v12, (uint64_t)v2, MetricsObserver, (uint64_t)&type metadata for Configuration.DefaultFeatureDataSource, ObjectType, (uint64_t)&off_27029B058);
  sub_2523E54B4(v2, (uint64_t)v6);
  int v7 = sub_2524239B8();
  type metadata accessor for Configuration();
  swift_unknownObjectRetain();
  id v8 = sub_252421EB0();
  sub_25241A174((uint64_t)v8, (uint64_t *)v12);
  __int16 v10 = v7 & 0x101;
  char v11 = BYTE2(v7) & 1;
  return sub_25241B910((uint64_t)&v10, (uint64_t)v6, (uint64_t)v2, 0, v12, v1, (uint64_t)&type metadata for Configuration.DefaultFeatureDataSource, ObjectType, (uint64_t)&off_27029B058);
}

uint64_t QueryController.deinit()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 56) + OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_logEventDispatcher);
  if (v1) {
    objc_msgSend(v1, sel_removeObserver_);
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  return v0;
}

uint64_t QueryController.__deallocating_deinit()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 56) + OBJC_IVAR____TtC13HomeKitEvents20QueryMetricsObserver_logEventDispatcher);
  if (v1) {
    objc_msgSend(v1, sel_removeObserver_);
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);

  return MEMORY[0x270FA0228](v0, 120, 7);
}

uint64_t sub_25241A174@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (a1 < 1)
  {
    if (a1)
    {
      a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04C18);
      uint64_t result = sub_252408314(&qword_269C04C20, &qword_269C04C18);
      a2[4] = result;
    }
    else
    {
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05288);
      uint64_t v8 = swift_allocObject();
      swift_defaultActor_initialize();
      *(void *)(v8 + 112) = MEMORY[0x263F8EE80];
      a2[3] = v7;
      uint64_t result = sub_252408314(&qword_269C05290, &qword_269C05288);
      a2[4] = result;
      *a2 = v8;
    }
  }
  else
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05298);
    uint64_t v5 = (void *)swift_allocObject();
    swift_defaultActor_initialize();
    v5[15] = MEMORY[0x263F8EE80];
    v5[16] = 0;
    v5[14] = a1;
    a2[3] = v4;
    uint64_t result = sub_252408314(&qword_269C052A0, &qword_269C05298);
    a2[4] = result;
    *a2 = (uint64_t)v5;
  }
  return result;
}

uint64_t sub_25241A2C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for EventQuery(0);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05210);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v17 - v12;
  sub_25241A49C(a1, (uint64_t)v6);
  EventQuery.start()((uint64_t)v13);
  sub_25241B9D4((uint64_t)v6);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v14, v11, v7);
  *a2 = sub_25241BAC4;
  a2[1] = v15;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_25241A49C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v20 = a2;
  uint64_t v19 = sub_25247AB70();
  uint64_t v5 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_25247A540();
  uint64_t v8 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A530();
  uint64_t Base = (int *)type metadata accessor for QueryBase();
  uint64_t v12 = a1 + Base[5];
  uint64_t v13 = a1 + Base[6];
  uint64_t v14 = *(void *)(a1 + Base[7]);
  char v21 = *(unsigned char *)(a1 + Base[8]);
  sub_2523E4C1C((uint64_t)v10, 1, v12, v13, v14, &v21);
  uint64_t v15 = *(void *)(v2 + 64);
  sub_25247ABB0();
  uint64_t v16 = sub_25241A694();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v19);
  sub_2523D7C5C(v3 + 16, (uint64_t)v10, v15, v3 + 80, v16, 0, *(int **)(v3 + 72), v20);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v18);
}

uint64_t sub_25241A694()
{
  uint64_t v0 = sub_25247AB70();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247AB20();
  char v4 = sub_25247AB30();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  if (v4) {
    return 25;
  }
  sub_25247AB50();
  char v7 = sub_25247AB30();
  v5(v3, v0);
  if (v7) {
    return -1;
  }
  sub_25247AB40();
  char v8 = sub_25247AB30();
  v5(v3, v0);
  if (v8) {
    return 17;
  }
  else {
    return 9;
  }
}

uint64_t sub_25241A7F0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C049B8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t ResultAsyncSequence = type metadata accessor for QueryResultAsyncSequence(0);
  MEMORY[0x270FA5388](ResultAsyncSequence);
  uint64_t v7 = type metadata accessor for EventQuery(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_25241A49C(a1, (uint64_t)v9);
  uint64_t v12 = v9;
  type metadata accessor for SomeEvent();
  (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F680], v2);
  sub_25247AC30();
  sub_25241BB40();
  sub_25247B1F0();
  return sub_25241B9D4((uint64_t)v9);
}

uint64_t sub_25241A9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05230);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = type metadata accessor for EventQuery(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25247AB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_25241BC2C(a2, (uint64_t)v10, type metadata accessor for EventQuery);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v16 = (v9 + *(unsigned __int8 *)(v5 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  sub_25241C094((uint64_t)v10, v17 + v15, type metadata accessor for EventQuery);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v17 + v16, (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_252419DB0((uint64_t)v13, (uint64_t)&unk_269C05248, v17);
  return swift_release();
}

uint64_t sub_25241AC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  uint64_t v6 = type metadata accessor for SomeEvent();
  v5[6] = v6;
  v5[7] = *(void *)(v6 - 8);
  v5[8] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04B10);
  v5[9] = v7;
  v5[10] = *(void *)(v7 - 8);
  v5[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C05258);
  v5[12] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05210);
  v5[13] = v8;
  v5[14] = *(void *)(v8 - 8);
  v5[15] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05260);
  v5[16] = v9;
  v5[17] = *(void *)(v9 - 8);
  v5[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25241AE98, 0, 0);
}

uint64_t sub_25241AE98()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  EventQuery.start()(v1);
  sub_25247AC00();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[19] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_25241AF98;
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[12];
  return MEMORY[0x270FA20F8](v6, 0, 0, v5, v0 + 2);
}

uint64_t sub_25241AF98()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_25241B2A8;
  }
  else {
    uint64_t v1 = sub_25241B0A8;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_25241B0A8()
{
  uint64_t v1 = v0[12];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[7] + 48))(v1, 1, v0[6]) == 1)
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    v0[3] = 0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05230);
    sub_25247ABF0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v5 = v0[10];
    uint64_t v4 = v0[11];
    uint64_t v6 = v0[9];
    sub_25241C094(v1, v0[8], (uint64_t (*)(void))type metadata accessor for SomeEvent);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05230);
    sub_25247ABE0();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[19] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_25241AF98;
    uint64_t v8 = v0[16];
    uint64_t v9 = v0[12];
    return MEMORY[0x270FA20F8](v9, 0, 0, v8, v0 + 2);
  }
}

uint64_t sub_25241B2A8()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25241B360(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_25241B380, 0, 0);
}

uint64_t sub_25241B380()
{
  uint64_t v1 = v0[2];
  sub_25241BC2C(v0[3], v1, (uint64_t (*)(void))type metadata accessor for SomeEvent);
  uint64_t v2 = type metadata accessor for SomeEvent();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_25241B438@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05210);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05260);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_252408314(&qword_269C05268, (uint64_t *)&unk_269C05210);
  sub_25247ABD0();
  uint64_t v12 = swift_allocBox();
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v13, v11, v8);
  *a2 = &unk_269C05278;
  a2[1] = v12;
  return result;
}

uint64_t sub_25241B60C(uint64_t a1)
{
  v1[5] = a1;
  v1[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05260);
  v1[7] = swift_projectBox();
  return MEMORY[0x270FA2498](sub_25241B690, 0, 0);
}

uint64_t sub_25241B690()
{
  swift_beginAccess();
  uint64_t v1 = sub_252408314(&qword_269C05280, &qword_269C05260);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_25241B770;
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[5];
  return MEMORY[0x270FA1E80](v4, v3, v1);
}

uint64_t sub_25241B770()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_25241B8AC, 0, 0);
  }
  else
  {
    swift_endAccess();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_25241B8AC()
{
  swift_endAccess();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_25241B910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v19 = a7;
  uint64_t v20 = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v18);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(boxed_opaque_existential_1, a1, a7);
  type metadata accessor for QueryController();
  unint64_t v16 = (void *)swift_allocObject();
  sub_2523DFC24(&v18, (uint64_t)(v16 + 2));
  v16[7] = a2;
  v16[8] = a3;
  v16[9] = a4;
  sub_2523DFC24(a5, (uint64_t)(v16 + 10));
  return v16;
}

uint64_t sub_25241B9D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EventQuery(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25241BA30()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05210);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_25241BAC4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05210) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_25241B438(v4, a1);
}

uint64_t sub_25241BB38(uint64_t a1)
{
  return sub_25241A9F0(a1, *(void *)(v1 + 16));
}

unint64_t sub_25241BB40()
{
  unint64_t result = qword_269C05228;
  if (!qword_269C05228)
  {
    type metadata accessor for QueryResultAsyncSequence(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05228);
  }
  return result;
}

uint64_t type metadata accessor for QueryController()
{
  return self;
}

uint64_t method lookup function for QueryController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for QueryController);
}

uint64_t dispatch thunk of QueryController.start(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of QueryController.runQuery(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

ValueMetadata *type metadata accessor for QueryFactory()
{
  return &type metadata for QueryFactory;
}

uint64_t sub_25241BC2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25241BC94()
{
  uint64_t v1 = *(void *)(type metadata accessor for EventQuery(0) - 8);
  uint64_t v18 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v16 = *(void *)(v1 + 64);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05230);
  uint64_t v2 = *(void *)(v19 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v15 = *(void *)(v2 + 64);
  swift_unknownObjectRelease();
  uint64_t v17 = (v18 + 32) & ~v18;
  uint64_t v4 = v0 + v17;
  __swift_destroy_boxed_opaque_existential_1(v0 + v17);
  sub_2523DFE9C(*(void **)(v4 + 40), *(void *)(v4 + 48), *(void **)(v4 + 56));
  uint64_t v5 = (int *)type metadata accessor for EventQuery.Configuration(0);
  uint64_t v6 = v0 + v17 + v5[6];
  uint64_t v7 = sub_25247A540();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v0 + v17 + v5[7], v7);
  uint64_t v10 = v0 + v17 + v5[8];
  uint64_t v11 = sub_25247A030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v0 + v17 + v5[11];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7)) {
    v9(v12, v7);
  }
  uint64_t v13 = (v17 + v16 + v3) & ~v3;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v4 + v5[18]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v13, v19);

  return MEMORY[0x270FA0238](v0, v13 + v15, v18 | v3 | 7);
}

uint64_t sub_25241BF38(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for EventQuery(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05230) - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v1 + v6;
  uint64_t v13 = v1 + v9;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_2523D3928;
  return sub_25241AC88(a1, v10, v11, v12, v13);
}

uint64_t sub_25241C094(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25241C0FC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2523D3A1C;
  return sub_25241B60C(a1);
}

uint64_t Date.formattedElapsedTimeInterval.getter()
{
  sub_25247A470();
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  objc_msgSend(v0, sel_setMaximumFractionDigits_, 2);
  uint64_t v1 = (void *)sub_25247AC40();
  id v2 = objc_msgSend(v0, sel_stringForObjectValue_, v1);

  if (v2)
  {
    uint64_t v3 = sub_25247A840();

    id v0 = v2;
  }
  else
  {
    uint64_t v3 = sub_25247AC50();
  }

  return v3;
}

uint64_t static Date.formattedTimeInterval(_:)()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  objc_msgSend(v0, sel_setMaximumFractionDigits_, 2);
  uint64_t v1 = (void *)sub_25247AC40();
  id v2 = objc_msgSend(v0, sel_stringForObjectValue_, v1);

  if (v2)
  {
    uint64_t v3 = sub_25247A840();

    id v0 = v2;
  }
  else
  {
    uint64_t v3 = sub_25247AC50();
  }

  return v3;
}

double Date.elapsedTimeInterval.getter()
{
  sub_25247A470();
  return -v0;
}

uint64_t FakeEvent.State.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 0;
  return result;
}

void *static FakeEvent.State.allCases.getter()
{
  return &unk_270299508;
}

uint64_t FakeEvent.State.rawValue.getter()
{
  return 0;
}

uint64_t sub_25241C36C()
{
  return sub_25247B390();
}

uint64_t sub_25241C3B0()
{
  return sub_25247B360();
}

uint64_t sub_25241C3D8()
{
  return sub_25247B390();
}

void *sub_25241C418@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

void sub_25241C42C(void *a1@<X8>)
{
  *a1 = &unk_270299530;
}

uint64_t FakeEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25247A4B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t FakeEvent.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FakeEvent.category.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for EventBase(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t FakeEvent.roomIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FakeEvent.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FakeEvent.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FakeEvent.accessoryName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FakeEvent.userIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);

  return sub_2523E1C2C(v3, a1);
}

uint64_t FakeEvent.hash(into:)()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A4B0();
  sub_25241E8A0(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_25241E8A0((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_25247B360();
}

uint64_t FakeEvent.hashValue.getter()
{
  return sub_25247B390();
}

uint64_t sub_25241CA2C()
{
  return sub_25247B390();
}

uint64_t sub_25241CA70()
{
  return sub_25247B390();
}

unint64_t FakeEvent.init(date:homeIdentifier:category:roomIdentifier:roomName:accessoryIdentifier:accessoryName:userIdentifier:state:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v57 = a7;
  uint64_t v58 = a8;
  uint64_t v63 = a2;
  uint64_t v64 = a6;
  uint64_t v59 = a5;
  uint64_t v62 = a1;
  uint64_t v56 = a9;
  uint64_t v13 = sub_25247A540();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v61 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v50 - v18;
  MEMORY[0x270FA5388](v17);
  char v21 = (char *)&v50 - v20;
  uint64_t v22 = sub_25247A4B0();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  id v25 = (char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x270FA5388](v26 - 8);
  BOOL v28 = (char *)&v50 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(a3) = *a3;
  uint64_t v52 = v25;
  uint64_t v53 = v23;
  char v29 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  uint64_t v30 = v25;
  uint64_t v31 = v64;
  uint64_t v54 = v22;
  v29(v30, v62, v22);
  uint64_t v51 = v14;
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v55 = v21;
  v32(v21, v63, v13);
  int v60 = (int)a3;
  if (a3 == 4)
  {
    unint64_t result = sub_25241DDE8(3uLL);
    if (result > 2)
    {
      __break(1u);
      goto LABEL_14;
    }
    int v60 = byte_270299558[result + 32];
  }
  v32(v19, a4, v13);
  uint64_t v34 = a4;
  uint64_t v50 = v19;
  if (!v31)
  {
    unint64_t result = sub_25241DDE8(0xBuLL);
    uint64_t v35 = v57;
    if ((uint64_t)(result + 5) >= 0)
    {
      uint64_t v65 = sub_25241E2F8(0, result + 5, 0xD00000000000003ELL, 0x800000025247C9C0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C052A8);
      sub_252408314(&qword_269C052B0, &qword_269C052A8);
      uint64_t v59 = sub_25247A960();
      uint64_t v31 = v36;
      goto LABEL_8;
    }
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v35 = v57;
LABEL_8:
  uint64_t v37 = a10;
  v32(v61, v35, v13);
  uint64_t v64 = v31;
  if (a10)
  {
    uint64_t v38 = v62;
LABEL_12:
    uint64_t v40 = v51;
    id v41 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
    v41(v35, v13);
    v41(v34, v13);
    v41(v63, v13);
    uint64_t v43 = v53;
    uint64_t v42 = v54;
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v38, v54);
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v28, v52, v42);
    uint64_t v44 = type metadata accessor for EventBase(0);
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
    v45(&v28[*(int *)(v44 + 20)], v55, v13);
    v28[*(int *)(v44 + 24)] = v60;
    id v46 = (int *)type metadata accessor for AccessoryEventBase(0);
    v45(&v28[v46[5]], v50, v13);
    uint64_t v47 = (uint64_t *)&v28[v46[6]];
    uint64_t v48 = v64;
    *uint64_t v47 = v59;
    v47[1] = v48;
    v45(&v28[v46[7]], v61, v13);
    BOOL v49 = (uint64_t *)&v28[v46[8]];
    uint64_t *v49 = v58;
    v49[1] = v37;
    sub_2523E28C4(a11, (uint64_t)&v28[v46[9]]);
    return sub_2523E29D8((uint64_t)v28, v56);
  }
  unint64_t result = sub_25241DDE8(0x10uLL);
  if ((uint64_t)(result + 5) >= 0)
  {
    uint64_t v38 = v62;
    uint64_t v65 = sub_25241E2F8(0, result + 5, 0xD00000000000003ELL, 0x800000025247C9C0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C052A8);
    sub_252408314(&qword_269C052B0, &qword_269C052A8);
    uint64_t v58 = sub_25247A960();
    uint64_t v37 = v39;
    goto LABEL_12;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t FakeEvent.isLegacySecurityEvent.getter()
{
  return 1;
}

BOOL FakeEvent.isIncludedInSecurityGroup.getter()
{
  uint64_t v1 = qword_25247F7A0[*(char *)(v0 + *(int *)(type metadata accessor for EventBase(0) + 24))];
  return qword_25247F7A0[byte_2702995C8] == v1
      || qword_25247F7A0[byte_2702995C9] == v1
      || qword_25247F7A0[byte_2702995CA] == v1;
}

uint64_t FakeEvent.tags.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25247A4B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FakeEvent();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04750);
  uint64_t v9 = swift_allocObject();
  long long v21 = xmmword_25247EAD0;
  *(_OWORD *)(v9 + 16) = xmmword_25247EAD0;
  *(_OWORD *)(v9 + 32) = xmmword_25247F500;
  *(void *)(v9 + 48) = sub_25241DEF4(v1, (uint64_t (*)(void))type metadata accessor for FakeEvent, (uint64_t (*)(void))type metadata accessor for FakeEvent, (uint64_t (*)(void))type metadata accessor for FakeEvent);
  *(void *)(v9 + 56) = v10;
  uint64_t v11 = qword_25247F7A0[*(char *)(v1 + *(int *)(type metadata accessor for EventBase(0) + 24))];
  if (qword_25247F7A0[byte_270299410] == v11
    || qword_25247F7A0[byte_270299411] == v11
    || qword_25247F7A0[byte_270299412] == v11)
  {
    sub_25241F8AC(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FakeEvent);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    char v12 = sub_2524388CC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C052B8);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = v21;
    *(unsigned char *)(v13 + 32) = v12;
    *(unsigned char *)(v13 + 33) = -1;
    uint64_t v14 = sub_25241E50C(v13);
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_25241F914((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FakeEvent);
    unint64_t v18 = *(void *)(v9 + 16);
    unint64_t v17 = *(void *)(v9 + 24);
    if (v18 >= v17 >> 1) {
      uint64_t v9 = (uint64_t)sub_25241D78C((void *)(v17 > 1), v18 + 1, 1, (void *)v9);
    }
    *(void *)(v9 + 16) = v18 + 1;
    uint64_t v19 = v9 + 16 * v18;
    *(void *)(v19 + 32) = v14;
    *(void *)(v19 + 40) = v16;
  }
  return v9;
}

uint64_t FakeEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_2523D918C((uint64_t)a1, (uint64_t)v10);
  sub_252466A64((uint64_t)v10, (uint64_t)v7);
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_2523E13F4(a1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_2523E29D8((uint64_t)v7, a2);
}

uint64_t FakeEvent.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04810);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = sub_252467000(a1);
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_2523D3370();
    sub_25247B3B0();
    v8[15] = 1;
    sub_25241E5CC();
    sub_25247B1D0();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

uint64_t sub_25241D578@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FakeEvent.init(from:)(a1, a2);
}

uint64_t sub_25241D590(void *a1)
{
  return FakeEvent.encode(to:)(a1);
}

uint64_t sub_25241D5A8()
{
  return sub_25247A9D0();
}

uint64_t sub_25241D608()
{
  return sub_25247A9C0();
}

void *sub_25241D658(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C05340);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25241E204(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25241D768(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25241D8C0(a1, a2, a3, a4, (uint64_t *)&unk_269C04C40, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord, (uint64_t (*)(void))type metadata accessor for EncryptionKeyRecord);
}

void *sub_25241D78C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C04750);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25241F974(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25241D89C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25241D8C0(a1, a2, a3, a4, &qword_269C04BF0, (uint64_t (*)(void))type metadata accessor for LubyRackoffEncryptionKey, (uint64_t (*)(void))type metadata accessor for LubyRackoffEncryptionKey);
}

uint64_t sub_25241D8C0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_25247B0A0();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25241FA68(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_25241DB40(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25241DB68(a1, a2, a3, a4, &qword_269C04AA8, &qword_269C04A98);
}

uint64_t sub_25241DB54(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25241DB68(a1, a2, a3, a4, &qword_269C04AD8, (uint64_t *)&unk_269C04AB8);
}

uint64_t sub_25241DB68(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_25247B0A0();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25241FBC4(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_25241DDD4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25241DB68(a1, a2, a3, a4, &qword_269C04FC0, (uint64_t *)&unk_269C05F60);
}

unint64_t sub_25241DDE8(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x2533B5DD0](&v3, 8);
    uint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x2533B5DD0](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25241DE74(uint64_t a1)
{
  return sub_25241DEF4(a1, (uint64_t (*)(void))type metadata accessor for LockEvent, (uint64_t (*)(void))type metadata accessor for LockEvent, (uint64_t (*)(void))type metadata accessor for LockEvent);
}

uint64_t sub_25241DEB4(uint64_t a1)
{
  return sub_25241DEF4(a1, (uint64_t (*)(void))type metadata accessor for WindowEvent, (uint64_t (*)(void))type metadata accessor for WindowEvent, (uint64_t (*)(void))type metadata accessor for WindowEvent);
}

uint64_t sub_25241DEF4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v8 = sub_25247A4B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a2(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v18 - v13;
  sub_25241F8AC(a1, (uint64_t)&v18 - v13, a3);
  LOBYTE(a1) = v14[*(int *)(type metadata accessor for EventBase(0) + 24)];
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  LOBYTE(a3) = sub_2524388CC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C052B8);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_25247EAD0;
  *(unsigned char *)(v15 + 32) = (_BYTE)a3;
  *(unsigned char *)(v15 + 33) = 0xFF030201 >> (8 * a1);
  uint64_t v16 = sub_25241E50C(v15);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_25241F914((uint64_t)v14, a4);
  return v16;
}

uint64_t sub_25241E0C4(uint64_t a1)
{
  return sub_25241DEF4(a1, (uint64_t (*)(void))type metadata accessor for GarageDoorEvent, (uint64_t (*)(void))type metadata accessor for GarageDoorEvent, (uint64_t (*)(void))type metadata accessor for GarageDoorEvent);
}

uint64_t sub_25241E104(uint64_t a1)
{
  return sub_25241DEF4(a1, (uint64_t (*)(void))type metadata accessor for ContactSensorEvent, (uint64_t (*)(void))type metadata accessor for ContactSensorEvent, (uint64_t (*)(void))type metadata accessor for ContactSensorEvent);
}

uint64_t sub_25241E144(uint64_t a1)
{
  return sub_25241DEF4(a1, (uint64_t (*)(void))type metadata accessor for SmokeDetectorEvent, (uint64_t (*)(void))type metadata accessor for SmokeDetectorEvent, (uint64_t (*)(void))type metadata accessor for SmokeDetectorEvent);
}

uint64_t sub_25241E184(uint64_t a1)
{
  return sub_25241DEF4(a1, (uint64_t (*)(void))type metadata accessor for SecuritySystemEvent, (uint64_t (*)(void))type metadata accessor for SecuritySystemEvent, (uint64_t (*)(void))type metadata accessor for SecuritySystemEvent);
}

uint64_t sub_25241E1C4(uint64_t a1)
{
  return sub_25241DEF4(a1, (uint64_t (*)(void))type metadata accessor for DoorEvent, (uint64_t (*)(void))type metadata accessor for DoorEvent, (uint64_t (*)(void))type metadata accessor for DoorEvent);
}

uint64_t sub_25241E204(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25247B100();
  __break(1u);
  return result;
}

uint64_t sub_25241E2F8(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (!v4) {
    return v5;
  }
  uint64_t v9 = result;
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2523E05A8(0, v4 & ~(v4 >> 63), 0);
  if (a2 >= v9 && (v4 & 0x8000000000000000) == 0)
  {
    uint64_t v10 = 0;
    uint64_t v5 = v22;
    uint64_t v11 = HIBYTE(a4) & 0xF;
    if ((a4 & 0x2000000000000000) == 0) {
      uint64_t v11 = a3 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v20 = v11;
    while (v10 != v4)
    {
      if (!v20) {
        goto LABEL_20;
      }
      uint64_t result = sub_25247A8E0();
      if (result < 0) {
        goto LABEL_21;
      }
      unint64_t v12 = result;
      if (!result) {
        goto LABEL_22;
      }
      uint64_t v21 = 0;
      MEMORY[0x2533B5DD0](&v21, 8);
      if (v12 > v21 * v12)
      {
        unint64_t v13 = -(uint64_t)v12 % v12;
        while (v13 > v21 * v12)
        {
          uint64_t v21 = 0;
          MEMORY[0x2533B5DD0](&v21, 8);
        }
      }
      sub_25247A900();
      uint64_t result = sub_25247A950();
      uint64_t v14 = result;
      uint64_t v16 = v15;
      uint64_t v22 = v5;
      unint64_t v18 = *(void *)(v5 + 16);
      unint64_t v17 = *(void *)(v5 + 24);
      if (v18 >= v17 >> 1)
      {
        uint64_t result = sub_2523E05A8(v17 > 1, v18 + 1, 1);
        uint64_t v5 = v22;
      }
      ++v10;
      *(void *)(v5 + 16) = v18 + 1;
      uint64_t v19 = v5 + 16 * v18;
      *(void *)(v19 + 32) = v14;
      *(void *)(v19 + 40) = v16;
      if (v10 == v4) {
        return v5;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FakeEvent()
{
  uint64_t result = qword_269C05328;
  if (!qword_269C05328) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25241E50C(uint64_t a1)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05348);
  uint64_t v10 = sub_252408314((unint64_t *)&qword_269C05350, &qword_269C05348);
  v8[0] = a1;
  unint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  unint64_t v3 = (unsigned char *)(*v2 + 32);
  uint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_25246650C(v3, v4, &v7);
  uint64_t v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

unint64_t sub_25241E5CC()
{
  unint64_t result = qword_269C052C0;
  if (!qword_269C052C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C052C0);
  }
  return result;
}

unint64_t sub_25241E624()
{
  unint64_t result = qword_269C052C8;
  if (!qword_269C052C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C052C8);
  }
  return result;
}

uint64_t sub_25241E678()
{
  return sub_252408314(&qword_269C052D0, &qword_269C052D8);
}

unint64_t sub_25241E6B8()
{
  unint64_t result = qword_269C052E0;
  if (!qword_269C052E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C052E0);
  }
  return result;
}

uint64_t sub_25241E70C(uint64_t a1)
{
  uint64_t result = sub_25241E8A0(&qword_269C052E8, (void (*)(uint64_t))type metadata accessor for FakeEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25241E764(void *a1)
{
  a1[1] = sub_25241E8A0(&qword_269C052F0, (void (*)(uint64_t))type metadata accessor for FakeEvent);
  a1[2] = sub_25241E8A0(&qword_269C052F8, (void (*)(uint64_t))type metadata accessor for FakeEvent);
  uint64_t result = sub_25241E8A0(&qword_269C05300, (void (*)(uint64_t))type metadata accessor for FakeEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_25241E810()
{
  return sub_25241E8A0(&qword_269C05308, (void (*)(uint64_t))type metadata accessor for FakeEvent);
}

uint64_t sub_25241E858()
{
  return sub_25241E8A0(&qword_269C05310, (void (*)(uint64_t))type metadata accessor for FakeEvent);
}

uint64_t sub_25241E8A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25241E8E8(void *a1)
{
  a1[1] = sub_2523E4394();
  a1[2] = sub_25241E5CC();
  unint64_t result = sub_25241E920();
  a1[3] = result;
  return result;
}

unint64_t sub_25241E920()
{
  unint64_t result = qword_269C05318;
  if (!qword_269C05318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05318);
  }
  return result;
}

unint64_t sub_25241E974(uint64_t a1)
{
  unint64_t result = sub_25241E99C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25241E99C()
{
  unint64_t result = qword_269C05320;
  if (!qword_269C05320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05320);
  }
  return result;
}

unint64_t sub_25241E9F0(uint64_t a1)
{
  unint64_t result = sub_25241E6B8();
  *(void *)(a1 + 8) = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for FakeEvent(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for AccessoryEventBase(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    a1 = (void *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v6 = (int *)v4;
    uint64_t v7 = sub_25247A4B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for EventBase(0);
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_25247A540();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v14(v10, v11, v12);
    *((unsigned char *)a1 + *(int *)(v8 + 24)) = *((unsigned char *)a2 + *(int *)(v8 + 24));
    v14((char *)a1 + v6[5], (char *)a2 + v6[5], v12);
    uint64_t v15 = v6[6];
    uint64_t v16 = (void *)((char *)a1 + v15);
    unint64_t v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = v6[7];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    swift_bridgeObjectRetain();
    v14(v20, v21, v12);
    uint64_t v22 = v6[8];
    unint64_t v23 = (void *)((char *)a1 + v22);
    uint64_t v24 = (void *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    *unint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = v6[9];
    uint64_t v27 = (char *)a1 + v26;
    BOOL v28 = (char *)a2 + v26;
    char v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v29(v28, 1, v12))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
      memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      v14(v27, v28, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v27, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t initializeWithCopy for FakeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for EventBase(0);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_25247A540();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 16);
  v11(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
  uint64_t v12 = (int *)type metadata accessor for AccessoryEventBase(0);
  v11((void *)(a1 + v12[5]), (const void *)(a2 + v12[5]), v9);
  uint64_t v13 = v12[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = v12[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  swift_bridgeObjectRetain();
  v11(v18, v19, v9);
  uint64_t v20 = v12[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = v12[9];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  uint64_t v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v27(v26, 1, v9))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    v11(v25, v26, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithCopy for FakeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for EventBase(0);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_25247A540();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
  uint64_t v12 = (int *)type metadata accessor for AccessoryEventBase(0);
  v11((void *)(a1 + v12[5]), (const void *)(a2 + v12[5]), v9);
  uint64_t v13 = v12[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11((void *)(a1 + v12[7]), (const void *)(a2 + v12[7]), v9);
  uint64_t v16 = v12[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v12[9];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  uint64_t v22 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v22((const void *)(a1 + v19), 1, v9);
  int v23 = v22(v21, 1, v9);
  if (!v7)
  {
    if (!v23)
    {
      v11(v20, v21, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v20, v9);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v20, v21, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for FakeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for EventBase(0);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_25247A540();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
  uint64_t v12 = (int *)type metadata accessor for AccessoryEventBase(0);
  v11((void *)(a1 + v12[5]), (const void *)(a2 + v12[5]), v9);
  *(_OWORD *)(a1 + v12[6]) = *(_OWORD *)(a2 + v12[6]);
  v11((void *)(a1 + v12[7]), (const void *)(a2 + v12[7]), v9);
  *(_OWORD *)(a1 + v12[8]) = *(_OWORD *)(a2 + v12[8]);
  uint64_t v13 = v12[9];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v11(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithTake for FakeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for EventBase(0);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_25247A540();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
  uint64_t v12 = (int *)type metadata accessor for AccessoryEventBase(0);
  v11((void *)(a1 + v12[5]), (const void *)(a2 + v12[5]), v9);
  uint64_t v13 = v12[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v11((void *)(a1 + v12[7]), (const void *)(a2 + v12[7]), v9);
  uint64_t v18 = v12[8];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  void *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v12[9];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  uint64_t v26 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v26((const void *)(a1 + v23), 1, v9);
  int v27 = v26(v25, 1, v9);
  if (!v7)
  {
    if (!v27)
    {
      v11(v24, v25, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v24, v9);
    goto LABEL_6;
  }
  if (v27)
  {
LABEL_6:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v24, v25, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FakeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25241F5A0);
}

uint64_t sub_25241F5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccessoryEventBaseLegacy(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FakeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25241F620);
}

uint64_t sub_25241F620(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccessoryEventBaseLegacy(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_25241F690()
{
  uint64_t result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FakeEvent.State(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for FakeEvent.State(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25241F818);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25241F840()
{
  return 0;
}

ValueMetadata *type metadata accessor for FakeEvent.State()
{
  return &type metadata for FakeEvent.State;
}

unint64_t sub_25241F858()
{
  unint64_t result = qword_269C05338;
  if (!qword_269C05338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05338);
  }
  return result;
}

uint64_t sub_25241F8AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25241F914(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25241F974(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25247B100();
  __break(1u);
  return result;
}

uint64_t sub_25241FA68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_25247B100();
  __break(1u);
  return result;
}

uint64_t sub_25241FBC4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_25247B100();
  __break(1u);
  return result;
}

uint64_t static HMVCommands.createEncryptionKey(homeIdentifier:keyIdentifier:skipZoneCreation:)(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 56) = a3;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  return MEMORY[0x270FA2498](sub_25241FD40, 0, 0);
}

uint64_t sub_25241FD40()
{
  char v1 = *(unsigned char *)(v0 + 56);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 16);
  *(unsigned char *)(v2 + 32) = v1;
  uint64_t v5 = (uint64_t (*)(void))((char *)&dword_269C04588 + dword_269C04588);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25241FE1C;
  return v5();
}

uint64_t sub_25241FE1C()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_252408684;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2523D3C30;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_25241FF38(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8 = (void *)sub_25247A4E0();
  uint64_t v9 = (void *)sub_25247A4E0();
  v11[4] = sub_252420694;
  v11[5] = a2;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  void v11[2] = sub_25244C4D8;
  v11[3] = &block_descriptor_17;
  uint64_t v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilCreateEncryptionKeyWithHomeIdentifier_keyIdentifier_skipZoneCreation_reply_, v8, v9, a5 & 1, v10);
  _Block_release(v10);
}

void sub_252420044(void *a1, uint64_t a2)
{
  sub_25241FF38(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32));
}

void sub_252420050(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    uint64_t v8 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_2523D7084;
    v9[6] = v7;
    id v10 = a1;
    swift_retain();
    id v11 = a1;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C05378, (uint64_t)v9);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v12 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    unint64_t v13 = (void *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    void v13[4] = a2;
    v13[5] = sub_2523D3704;
    v13[6] = 0;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C05370, (uint64_t)v13);
    swift_release();
  }
}

uint64_t static HMVCommands.deleteEncryptionKey(homeIdentifier:keyIdentifier:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_252420284, 0, 0);
}

uint64_t sub_252420284()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C04588 + dword_269C04588);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_25241FE1C;
  return v4((uint64_t)v4, (uint64_t)sub_252420450, v1);
}

void sub_252420354(void *a1, uint64_t a2)
{
  uint64_t v4 = (void *)sub_25247A4E0();
  uint64_t v5 = (void *)sub_25247A4E0();
  v7[4] = sub_25242066C;
  v7[5] = a2;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  v7[2] = sub_25244C4D8;
  v7[3] = &block_descriptor_4;
  uint64_t v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilDeleteEncryptionKeyWithHomeIdentifier_keyIdentifier_reply_, v4, v5, v6);
  _Block_release(v6);
}

void sub_252420450(void *a1, uint64_t a2)
{
}

void sub_252420458(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    uint64_t v8 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_2523D380C;
    v9[6] = v7;
    id v10 = a1;
    swift_retain();
    id v11 = a1;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C05368, (uint64_t)v9);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v12 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    unint64_t v13 = (void *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    void v13[4] = a2;
    v13[5] = sub_2523D3704;
    v13[6] = 0;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C04570, (uint64_t)v13);
    swift_release();
  }
}

void sub_25242066C(void *a1)
{
  sub_252420458(a1, v1);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

void sub_252420694(void *a1)
{
  sub_252420050(a1, v1);
}

uint64_t sub_2524206A0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

HomeKitEvents::QueryScope_optional __swiftcall QueryScope.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 2) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (rawValue == 1) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (HomeKitEvents::QueryScope_optional)rawValue;
}

void *static QueryScope.allCases.getter()
{
  return &unk_2702995F8;
}

uint64_t QueryScope.rawValue.getter()
{
  if (*v0) {
    return 2;
  }
  else {
    return 1;
  }
}

BOOL sub_252420724(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_252420740()
{
  unint64_t result = qword_269C05380;
  if (!qword_269C05380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05380);
  }
  return result;
}

uint64_t sub_252420794()
{
  return sub_25247B390();
}

uint64_t sub_2524207E4()
{
  return sub_25247B360();
}

uint64_t sub_25242081C()
{
  return sub_25247B390();
}

void *sub_252420868@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 2) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result == 1) {
    char v3 = 0;
  }
  else {
    char v3 = v2;
  }
  *a2 = v3;
  return result;
}

void sub_252420888(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1;
  if (*v1) {
    uint64_t v2 = 2;
  }
  *a1 = v2;
}

unint64_t sub_2524208A4()
{
  unint64_t result = qword_269C05388;
  if (!qword_269C05388)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C05390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05388);
  }
  return result;
}

void sub_252420900(void *a1@<X8>)
{
  *a1 = &unk_270299620;
}

unsigned char *storeEnumTagSinglePayload for QueryScope(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2524209DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QueryScope()
{
  return &type metadata for QueryScope;
}

uint64_t dispatch thunk of QueryProtocol.homeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of QueryProtocol.startDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of QueryProtocol.endDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of QueryProtocol.limit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of QueryProtocol.scope.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of QueryLegacyProtocol.startDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of QueryLegacyProtocol.endDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of QueryLegacyProtocol.limit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of QueryLegacyProtocol.scope.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of static TagEncryption.encrypt(tag:withKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t sub_252420AF0()
{
  uint64_t v0 = sub_25247A670();
  __swift_allocate_value_buffer(v0, qword_269C05398);
  __swift_project_value_buffer(v0, (uint64_t)qword_269C05398);
  return sub_25247A650();
}

uint64_t sub_252420B3C()
{
  if (qword_269C04328 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_25247A670();
  __swift_project_value_buffer(v0, (uint64_t)qword_269C05398);
  uint64_t result = sub_25247A660();
  qword_269C06478 = result / 8;
  return result;
}

uint64_t LubyRackoffEncryptionKey.init()()
{
  uint64_t v0 = sub_25247A670();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269C04328 != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_project_value_buffer(v0, (uint64_t)qword_269C05398);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  return sub_25247A620();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t LubyRackoffEncryptionKey.init(data:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_11;
      }
      uint64_t v2 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (qword_269C04330 != -1) {
        swift_once();
      }
      if (v2 != qword_269C06478)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x252420DF4);
      }
      return sub_25247A610();
    case 2uLL:
      uint64_t v4 = *(void *)(a1 + 16);
      uint64_t v3 = *(void *)(a1 + 24);
      uint64_t v2 = v3 - v4;
      if (!__OFSUB__(v3, v4)) {
        goto LABEL_6;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v2 = BYTE6(a2);
      goto LABEL_6;
  }
}

BOOL static LubyRackoffEncryptionKey.isValidInputData(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_10:
        __break(1u);
        JUMPOUT(0x252420EB8);
      }
      uint64_t v2 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (qword_269C04330 != -1) {
        swift_once();
      }
      return v2 == qword_269C06478;
    case 2uLL:
      uint64_t v4 = *(void *)(a1 + 16);
      uint64_t v3 = *(void *)(a1 + 24);
      uint64_t v2 = v3 - v4;
      if (!__OFSUB__(v3, v4)) {
        goto LABEL_6;
      }
      goto LABEL_10;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v2 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t LubyRackoffEncryptionKey.byteCount.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04BD0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25247A640();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25242101C(v0, (uint64_t)v3);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  uint64_t v8 = sub_25247A630();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8 / 8;
}

uint64_t sub_25242101C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_252421084(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_10:
        __break(1u);
        JUMPOUT(0x252421138);
      }
      uint64_t v2 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (qword_269C04330 != -1) {
        swift_once();
      }
      return v2 == qword_269C06478;
    case 2uLL:
      uint64_t v4 = *(void *)(a1 + 16);
      uint64_t v3 = *(void *)(a1 + 24);
      uint64_t v2 = v3 - v4;
      if (!__OFSUB__(v3, v4)) {
        goto LABEL_6;
      }
      goto LABEL_10;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v2 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_252421148()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04BD0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25247A640();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25242101C(v0, (uint64_t)v3);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  uint64_t v8 = sub_25247A630();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8 / 8;
}

uint64_t LubyRackoffEncryptionKey.withUnsafeBytes<A>(_:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04BD0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25247A640();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25242101C(v0, (uint64_t)v3);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  sub_25247A5F0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_252421418()
{
  return LubyRackoffEncryptionKey.withUnsafeBytes<A>(_:)();
}

uint64_t static LubyRackoffEncryptionKey.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04BD0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25247A640();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v17 - v12;
  sub_25242101C(a1, (uint64_t)v6);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v14(v13, v6, v7);
  sub_25242101C(a2, (uint64_t)v6);
  v14(v11, v6, v7);
  LOBYTE(a2) = sub_25247A600();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v11, v7);
  v15(v13, v7);
  return a2 & 1;
}

uint64_t sub_2524215E0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_252421694(&qword_269C053B0);
  uint64_t result = sub_252421694(&qword_269C053B8);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for LubyRackoffEncryptionKey()
{
  uint64_t result = qword_269C053C0;
  if (!qword_269C053C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_252421694(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for LubyRackoffEncryptionKey();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2524216D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04BD0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25247A640();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v17 - v12;
  sub_25242101C(a1, (uint64_t)v6);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v14(v13, v6, v7);
  sub_25242101C(a2, (uint64_t)v6);
  v14(v11, v6, v7);
  LOBYTE(a2) = sub_25247A600();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v11, v7);
  v15(v13, v7);
  return a2 & 1;
}

uint64_t initializeBufferWithCopyOfBuffer for LubyRackoffEncryptionKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A640();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for LubyRackoffEncryptionKey(uint64_t a1)
{
  uint64_t v2 = sub_25247A640();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for LubyRackoffEncryptionKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for LubyRackoffEncryptionKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for LubyRackoffEncryptionKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for LubyRackoffEncryptionKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for LubyRackoffEncryptionKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252421AFC);
}

uint64_t sub_252421AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04BD0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for LubyRackoffEncryptionKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252421B80);
}

uint64_t sub_252421B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04BD0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_252421BF4()
{
  uint64_t result = sub_25247A640();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

id static Configuration.cloudKitRecordDateCoalescingWindowSeconds.getter()
{
  return sub_25242242C(0xD000000000000025, 0x800000025247CA60, (id)0x258, (uint64_t (*)(id))sub_252422420, 0);
}

uint64_t static Configuration.zoneName(forHomeIdentifier:)(uint64_t a1)
{
  uint64_t v2 = sub_25247A540();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Configuration.zoneUUID(forHomeIdentifier:)(a1, (uint64_t)v5);
  uint64_t v12 = sub_25247A4D0();
  uint64_t v13 = v6;
  uint64_t v10 = 0x2D73746E657665;
  unint64_t v11 = 0xE700000000000000;
  uint64_t v10 = sub_25247A970();
  unint64_t v11 = v7;
  sub_25247A910();
  swift_bridgeObjectRelease();
  uint64_t v8 = v10;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v8;
}

uint64_t static Configuration.defaultFeatureDataSource.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2524239B8();
  *a1 = result & 1;
  a1[1] = BYTE1(result) & 1;
  a1[2] = BYTE2(result) & 1;
  return result;
}

id sub_252421EB0()
{
  return sub_25242242C(0xD000000000000028, 0x800000025247CBD0, (id)0x12C, (uint64_t (*)(id))sub_2523E2808, 0);
}

unint64_t static Configuration.persistentStoreName.getter()
{
  return 0xD000000000000011;
}

id static Configuration.containerID.getter()
{
  uint64_t v0 = sub_25242205C();
  id v1 = objc_allocWithZone(MEMORY[0x263EFD620]);
  uint64_t v2 = (void *)sub_25247A830();
  id v3 = objc_msgSend(v1, sel_initWithContainerIdentifier_environment_, v2, v0);

  return v3;
}

uint64_t sub_25242205C()
{
  uint64_t v1 = sub_25247A6A0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = 1;
  if (qword_269C04320 != -1) {
    swift_once();
  }
  if (byte_269C05030 == 1)
  {
    uint64_t v24 = v2;
    uint64_t v5 = self;
    id v6 = objc_msgSend(v5, sel_standardUserDefaults);
    unint64_t v7 = (void *)sub_25247A830();
    id v8 = objc_msgSend(v6, sel_objectForKey_, v7);

    if (v8)
    {
      sub_25247AED0();
      swift_unknownObjectRelease();
      sub_252423D20((uint64_t)v26);
      id v9 = objc_msgSend(v5, sel_standardUserDefaults);
      uint64_t v10 = (void *)sub_25247A830();
      unsigned int v11 = objc_msgSend(v9, sel_BOOLForKey_, v10);

      if (v11) {
        uint64_t v12 = 2;
      }
      else {
        uint64_t v12 = 1;
      }
      uint64_t v27 = v12;
      static LoggedObject.logger.getter(v0, (uint64_t)&protocol witness table for Configuration, (uint64_t)v4);
      uint64_t v13 = sub_25247A680();
      os_log_type_t v14 = sub_25247AD60();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = swift_slowAlloc();
        uint64_t v23 = swift_slowAlloc();
        *(void *)&v26[0] = v23;
        *(_DWORD *)uint64_t v15 = 136315650;
        uint64_t v25 = sub_25245DA98(0xD000000000000020, 0x800000025247CBA0, (uint64_t *)v26);
        sub_25247AEB0();
        *(_WORD *)(v15 + 12) = 1024;
        LODWORD(v25) = v11;
        sub_25247AEB0();
        *(_WORD *)(v15 + 18) = 2080;
        id v16 = (id)CKContainerEnvironmentString();
        uint64_t v17 = sub_25247A840();
        unint64_t v19 = v18;

        uint64_t v25 = sub_25245DA98(v17, v19, (uint64_t *)v26);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2523CF000, v13, v14, "Detected preference '%s' = %{BOOL}d, using environment: %s", (uint8_t *)v15, 0x1Cu);
        uint64_t v20 = v23;
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v20, -1, -1);
        MEMORY[0x2533B5DC0](v15, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v1);
    }
    else
    {
      memset(v26, 0, sizeof(v26));
      sub_252423D20((uint64_t)v26);
    }
  }
  swift_beginAccess();
  return v27;
}

BOOL sub_252422420(uint64_t a1)
{
  return a1 >= 0;
}

id sub_25242242C(uint64_t a1, unint64_t a2, id a3, uint64_t (*a4)(id), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = sub_25247A6A0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  id v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  unint64_t v18 = (char *)&v35 - v17;
  if (qword_269C04320 != -1) {
    swift_once();
  }
  if (byte_269C05030 == 1)
  {
    uint64_t v37 = a5;
    uint64_t v38 = a4;
    id v39 = a3;
    uint64_t v35 = v13;
    uint64_t v36 = v12;
    unint64_t v19 = self;
    id v20 = objc_msgSend(v19, sel_standardUserDefaults);
    uint64_t v21 = (void *)sub_25247A830();
    id v22 = objc_msgSend(v20, sel_objectForKey_, v21);

    if (v22)
    {
      sub_25247AED0();
      swift_unknownObjectRelease();
      sub_252423D20((uint64_t)v41);
      id v23 = objc_msgSend(v19, sel_standardUserDefaults);
      uint64_t v24 = (void *)sub_25247A830();
      a3 = objc_msgSend(v23, sel_integerForKey_, v24);

      uint64_t v25 = a1;
      if (v38(a3))
      {
        static LoggedObject.logger.getter(v6, (uint64_t)&protocol witness table for Configuration, (uint64_t)v18);
        swift_bridgeObjectRetain_n();
        uint64_t v26 = sub_25247A680();
        os_log_type_t v27 = sub_25247AD60();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = swift_slowAlloc();
          uint64_t v29 = swift_slowAlloc();
          *(void *)&v41[0] = v29;
          *(_DWORD *)uint64_t v28 = 136315394;
          swift_bridgeObjectRetain();
          uint64_t v40 = sub_25245DA98(a1, a2, (uint64_t *)v41);
          sub_25247AEB0();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v28 + 12) = 2048;
          uint64_t v40 = (uint64_t)a3;
          sub_25247AEB0();
          _os_log_impl(&dword_2523CF000, v26, v27, "Detected preference '%s' = %ld", (uint8_t *)v28, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533B5DC0](v29, -1, -1);
          MEMORY[0x2533B5DC0](v28, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v36);
        return a3;
      }
      static LoggedObject.logger.getter(v6, (uint64_t)&protocol witness table for Configuration, (uint64_t)v16);
      swift_bridgeObjectRetain_n();
      uint64_t v30 = sub_25247A680();
      os_log_type_t v31 = sub_25247AD40();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        *(void *)&v41[0] = v33;
        *(_DWORD *)uint64_t v32 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_25245DA98(v25, a2, (uint64_t *)v41);
        sub_25247AEB0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v32 + 12) = 2048;
        uint64_t v40 = (uint64_t)a3;
        sub_25247AEB0();
        _os_log_impl(&dword_2523CF000, v30, v31, "Ignoring invalid preference '%s' = %ld", (uint8_t *)v32, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v33, -1, -1);
        MEMORY[0x2533B5DC0](v32, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v36);
    }
    else
    {
      memset(v41, 0, sizeof(v41));
      sub_252423D20((uint64_t)v41);
    }
    return v39;
  }
  return a3;
}

void sub_25242293C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFD628]), sel_init);
  objc_msgSend(v0, sel_setUseZoneWidePCS_, 1);
  type metadata accessor for Configuration();
  uint64_t v1 = sub_25242205C();
  id v2 = objc_allocWithZone(MEMORY[0x263EFD620]);
  uint64_t v3 = (void *)sub_25247A830();
  id v4 = objc_msgSend(v2, sel_initWithContainerIdentifier_environment_, v3, v1);

  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFD610]), sel_initWithContainerID_options_, v4, v0);
  qword_269C053D0 = (uint64_t)v5;
}

id static Configuration.cloudKitContainer.getter()
{
  if (qword_269C04338 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_269C053D0;

  return v0;
}

uint64_t static Configuration.zoneUUID(forHomeIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v38 = *MEMORY[0x263EF8340];
  uint64_t v28 = sub_25247A880();
  uint64_t v3 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  id v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25247A540();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t __src = sub_25247A520();
  char v30 = v10;
  char v31 = v11;
  char v32 = v12;
  char v33 = v13;
  char v34 = v14;
  char v35 = v15;
  char v36 = v16;
  char v37 = v17;
  sub_25247A520();
  uint64_t v18 = sub_252423904(&__src, 16);
  unint64_t v20 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04750);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25247E5A0;
  sub_25247A870();
  uint64_t v22 = sub_25247A850();
  unint64_t v24 = v23;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v28);
  if (v24 >> 60 == 15) {
    __break(1u);
  }
  *(void *)(inited + 32) = v22;
  *(void *)(inited + 40) = v24;
  sub_252452CFC(v18, v20, inited, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t static Configuration.zoneName(forZoneUUID:)()
{
  sub_25247A4D0();
  uint64_t v1 = sub_25247A970();
  sub_25247A910();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static Configuration.reset(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25247AB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  id v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = a2;
  v9[6] = v2;
  swift_retain();
  sub_25240BCB0((uint64_t)v7, (uint64_t)&unk_269C053E0, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_2524231A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  uint64_t v7 = sub_25247A6A0();
  void v6[6] = v7;
  v6[7] = *(void *)(v7 - 8);
  v6[8] = swift_task_alloc();
  v6[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252423278, 0, 0);
}

uint64_t sub_252423278()
{
  static LoggedObject.logger.getter(v0[5], (uint64_t)&protocol witness table for Configuration, v0[9]);
  uint64_t v1 = sub_25247A680();
  os_log_type_t v2 = sub_25247AD60();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_2523CF000, v1, v2, "Resetting configuration", v3, 2u);
    MEMORY[0x2533B5DC0](v3, -1, -1);
  }
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];

  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v0[10] = (uint64_t)v7;
  v0[11] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v4, v5);
  char v10 = (uint64_t (*)(void))((char *)&dword_269C05FE0 + dword_269C05FE0);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[12] = (uint64_t)v8;
  *uint64_t v8 = v0;
  v8[1] = sub_2524233F4;
  return v10();
}

uint64_t sub_2524233F4()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_252423580;
  }
  else {
    os_log_type_t v2 = sub_252423508;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_252423508()
{
  (*(void (**)(void))(v0 + 24))(0);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_252423580()
{
  uint64_t v1 = *(void **)(v0 + 104);
  static LoggedObject.logger.getter(*(void *)(v0 + 40), (uint64_t)&protocol witness table for Configuration, *(void *)(v0 + 64));
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_25247A680();
  os_log_type_t v5 = sub_25247AD40();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 104);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138543362;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v10;
    sub_25247AEB0();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_2523CF000, v4, v5, "Failed to reset configuration: %{public}@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v8, -1, -1);
    MEMORY[0x2533B5DC0](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 104);
  }
  char v12 = *(void **)(v0 + 104);
  char v13 = *(void (**)(void *))(v0 + 24);
  (*(void (**)(void, void))(v0 + 80))(*(void *)(v0 + 64), *(void *)(v0 + 48));
  id v14 = v12;
  v13(v12);

  swift_task_dealloc();
  swift_task_dealloc();
  char v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

void sub_252423814(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = sub_25247A110();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

id static Configuration.encryptionKeyWriteCacheSeconds.getter()
{
  return sub_25242242C(0xD000000000000029, 0x800000025247CB00, (id)0x69780, (uint64_t (*)(id))sub_2523E2808, 0);
}

id Configuration.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Configuration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2524238EC()
{
  return *v0;
}

uint64_t sub_2524238F4()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t sub_2524238FC()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t sub_252423904(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_252466584(__src, &__src[a2]);
  }
  sub_25247A080();
  swift_allocObject();
  sub_25247A040();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_25247A170();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_2524239B8()
{
  uint64_t v7 = &type metadata for FeatureFlags;
  unint64_t v0 = sub_252423D80();
  unint64_t v8 = v0;
  v6[0] = 1;
  char v1 = sub_25247A5B0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  uint64_t v7 = &type metadata for FeatureFlags;
  unint64_t v8 = v0;
  v6[0] = 2;
  char v2 = sub_25247A5B0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  uint64_t v7 = &type metadata for FeatureFlags;
  unint64_t v8 = v0;
  v6[0] = 3;
  LOBYTE(v0) = sub_25247A5B0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if (v0) {
    int v3 = 0x10000;
  }
  else {
    int v3 = 0;
  }
  if (v2) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  return v4 & 0xFFFFFFFE | v1 & 1 | v3;
}

uint64_t sub_252423A78()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_252423AB8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  id v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *id v9 = v2;
  v9[1] = sub_2523D3928;
  return sub_2524231A4(a1, v4, v5, v6, v7, v8);
}

uint64_t type metadata accessor for Configuration()
{
  return self;
}

_UNKNOWN **sub_252423BA4()
{
  return &off_27029B058;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Configuration.DefaultFeatureDataSource(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = *(unsigned __int8 *)a1;
  BOOL v5 = v4 >= 2;
  int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for Configuration.DefaultFeatureDataSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)uint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)uint64_t result = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.DefaultFeatureDataSource()
{
  return &type metadata for Configuration.DefaultFeatureDataSource;
}

uint64_t sub_252423CE0()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_252423D18(uint64_t a1)
{
  sub_252423814(a1, *(void *)(v1 + 16));
}

uint64_t sub_252423D20(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_252423D80()
{
  unint64_t result = qword_269C053E8;
  if (!qword_269C053E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C053E8);
  }
  return result;
}

uint64_t sub_252423DD4(unint64_t a1, char a2)
{
  if (*(unsigned char *)(v2 + 120) == 1)
  {
    *(unsigned char *)(v2 + 120) = 0;
    swift_getObjectType();
    sub_25247AE10();
  }
  unint64_t v5 = v2 + 128;
  swift_beginAccess();
  *(void *)(v2 + 128) = MEMORY[0x263F8EE80];
  swift_bridgeObjectRelease();
  char v37 = a2;
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_25247B0C0();
    if (v6) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_5:
      unint64_t v39 = a1;
      unint64_t v40 = a1 & 0xC000000000000001;
      uint64_t v7 = 4;
      uint64_t v38 = v6;
      do
      {
        uint64_t v9 = v7 - 4;
        if (v40)
        {
          id v10 = (id)MEMORY[0x2533B5230](v7 - 4, a1);
          uint64_t v11 = v7 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_24;
          }
        }
        else
        {
          id v10 = *(id *)(a1 + 8 * v7);
          uint64_t v11 = v7 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
        }
        uint64_t v41 = v11;
        uint64_t v42 = v10;
        uint64_t v43 = v7;
        id v12 = objc_msgSend(v10, sel_zoneID);
        id v13 = objc_msgSend(v12, sel_zoneName);
        uint64_t v14 = sub_25247A840();
        uint64_t v16 = v15;

        id v17 = objc_msgSend(v12, sel_ownerName);
        uint64_t v18 = sub_25247A840();
        uint64_t v20 = v19;

        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v22 = *(void **)v5;
        uint64_t v44 = *(void **)v5;
        unint64_t v23 = (void *)v5;
        *(void *)unint64_t v5 = 0x8000000000000000;
        unint64_t v5 = sub_252460D44(v14, v16);
        uint64_t v25 = v22[2];
        BOOL v26 = (v24 & 1) == 0;
        uint64_t v27 = v25 + v26;
        if (__OFADD__(v25, v26)) {
          goto LABEL_25;
        }
        a1 = v24;
        if (v22[3] >= v27)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            char v30 = v44;
            if (v24) {
              goto LABEL_6;
            }
          }
          else
          {
            sub_2524625D4();
            char v30 = v44;
            if (a1) {
              goto LABEL_6;
            }
          }
        }
        else
        {
          sub_2524610F8(v27, isUniquelyReferenced_nonNull_native);
          unint64_t v28 = sub_252460D44(v14, v16);
          if ((a1 & 1) != (v29 & 1))
          {
            uint64_t result = sub_25247B2C0();
            __break(1u);
            return result;
          }
          unint64_t v5 = v28;
          char v30 = v44;
          if (a1)
          {
LABEL_6:
            uint64_t v8 = (uint64_t *)(v30[7] + 16 * v5);
            swift_bridgeObjectRelease();
            *uint64_t v8 = v18;
            v8[1] = v20;
            goto LABEL_7;
          }
        }
        v30[(v5 >> 6) + 8] |= 1 << v5;
        char v31 = (uint64_t *)(v30[6] + 16 * v5);
        uint64_t *v31 = v14;
        v31[1] = v16;
        char v32 = (uint64_t *)(v30[7] + 16 * v5);
        *char v32 = v18;
        v32[1] = v20;
        uint64_t v33 = v30[2];
        BOOL v34 = __OFADD__(v33, 1);
        uint64_t v35 = v33 + 1;
        if (v34) {
          goto LABEL_26;
        }
        v30[2] = v35;
        swift_bridgeObjectRetain();
LABEL_7:
        unint64_t v5 = (unint64_t)v23;
        *unint64_t v23 = v30;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();

        uint64_t v7 = v43 + 1;
        a1 = v39;
      }
      while (v41 != v38);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(*(void *)v5 + 16))
  {
    if (v37) {
      return sub_2524244BC();
    }
  }
  return result;
}

uint64_t sub_252424128()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for SharedZoneOwnerNameCache()
{
  return self;
}

uint64_t sub_25242418C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25247A6C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25247ADE0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  v14[0] = sub_2523E1254(0, &qword_269C05428);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C05430);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_25247EAD0;
  sub_25247ADC0();
  sub_25247ADD0();
  v14[1] = v10;
  sub_252424B0C(&qword_269C05438, MEMORY[0x263F8F178]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C05440);
  sub_252424B54(&qword_269C05448, &qword_269C05440);
  sub_25247AEF0();
  sub_2523E1254(0, (unint64_t *)&unk_269C05450);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F090], v2);
  uint64_t v11 = (void *)sub_25247ADB0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v12 = sub_25247ADF0();

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(void *)(v1 + 112) = v12;
  *(unsigned char *)(v1 + 120) = 0;
  *(void *)(v1 + 128) = MEMORY[0x263F8EE80];
  return v1;
}

uint64_t sub_252424474()
{
  return v0;
}

uint64_t sub_252424480()
{
  type metadata accessor for SharedZoneOwnerNameCache();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_25242418C();
  qword_269C06480 = v0;
  return result;
}

uint64_t sub_2524244BC()
{
  uint64_t v1 = sub_25247A6B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25247A6E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v0 + 120) & 1) == 0)
  {
    *(unsigned char *)(v0 + 120) = 1;
    swift_getObjectType();
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_252424A00;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_252448C18;
    aBlock[3] = &block_descriptor_5;
    uint64_t v11 = _Block_copy(aBlock);
    swift_retain();
    sub_25247A6D0();
    sub_252424900();
    sub_25247AE00();
    _Block_release(v11);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    swift_release();
    swift_release();
    return sub_25247AE20();
  }
  return result;
}

uint64_t sub_252424720()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    uint64_t v6 = (void *)swift_allocObject();
    uint64_t v6[2] = 0;
    v6[3] = 0;
    v6[4] = v4;
    sub_25240BCB0((uint64_t)v2, (uint64_t)&unk_269C05420, (uint64_t)v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_252424838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  return MEMORY[0x270FA2498](sub_252424858, a4, 0);
}

uint64_t sub_252424858()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (*(unsigned char *)(v1 + 120) == 1)
  {
    *(unsigned char *)(v1 + 120) = 0;
    swift_getObjectType();
    sub_25247AE10();
    uint64_t v1 = *(void *)(v0 + 40);
  }
  swift_beginAccess();
  *(void *)(v1 + 128) = MEMORY[0x263F8EE80];
  swift_bridgeObjectRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_252424900()
{
  return sub_25247AEF0();
}

uint64_t sub_2524249C8()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_252424A00()
{
  return sub_252424720();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_252424A20()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_252424A60()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2523D3928;
  v3[5] = v2;
  return MEMORY[0x270FA2498](sub_252424858, v2, 0);
}

uint64_t sub_252424B0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_252424B54(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t with<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t result = a2();
  if (!v4) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(a4, a1, a3);
  }
  return result;
}

BOOL sub_252424C20(unsigned char *a1, unsigned char *a2)
{
  uint64_t v2 = 0;
  switch(*a1)
  {
    case 1:
      goto LABEL_4;
    case 2:
      uint64_t v2 = 1;
      goto LABEL_4;
    case 3:
      uint64_t v2 = 2;
LABEL_4:
      uint64_t v3 = 0;
      switch(*a2)
      {
        case 1:
          return v2 == v3;
        case 2:
          uint64_t v3 = 1;
          return v2 == v3;
        case 3:
          uint64_t v3 = 2;
          return v2 == v3;
        default:
          goto LABEL_8;
      }
    default:
      break;
  }
LABEL_8:
  sub_25247B280();
  __break(1u);
  JUMPOUT(0x252424CB0);
}

uint64_t sub_252424CD0()
{
  uint64_t v1 = *v0;
  sub_25247B350();
  switch(v1)
  {
    case 1:
    case 2:
    case 3:
      sub_25247B360();
      return sub_25247B390();
    default:
      sub_25247B280();
      __break(1u);
      JUMPOUT(0x252424D50);
  }
}

uint64_t sub_252424D60()
{
  switch(*v0)
  {
    case 1:
    case 2:
    case 3:
      return sub_25247B360();
    default:
      sub_25247B280();
      __break(1u);
      JUMPOUT(0x252424DC4);
  }
}

uint64_t sub_252424DD4()
{
  uint64_t v1 = *v0;
  sub_25247B350();
  switch(v1)
  {
    case 1:
    case 2:
    case 3:
      sub_25247B360();
      return sub_25247B390();
    default:
      sub_25247B280();
      __break(1u);
      JUMPOUT(0x252424E50);
  }
}

const char *sub_252424E60()
{
  return "Home";
}

const char *sub_252424E74()
{
  uint64_t result = "";
  switch(*v0)
  {
    case 1:
      uint64_t result = "Colander";
      break;
    case 2:
      uint64_t result = "Tamis";
      break;
    case 3:
      uint64_t result = "Ladle";
      break;
    default:
      return result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EventCategory(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252425044);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlags()
{
  return &type metadata for FeatureFlags;
}

unint64_t sub_252425080()
{
  unint64_t result = qword_269C05460;
  if (!qword_269C05460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05460);
  }
  return result;
}

uint64_t dispatch thunk of AccessoryEventProtocol.accessoryIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AccessoryEventProtocol.accessoryName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AccessoryEventProtocol.roomIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of AccessoryEventProtocol.roomName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of AccessoryEventProtocol.userIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of AccessoryEventProtocol.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

void sub_25242514C(void *a1, uint64_t a2)
{
  unsigned int v4 = (void *)sub_25247A9E0();
  v6[4] = sub_25242544C;
  v6[5] = a2;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 1107296256;
  uint64_t v6[2] = sub_25244C4D8;
  v6[3] = &block_descriptor_6;
  uint64_t v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_createEventsWithEventsData_reply_, v4, v5);
  _Block_release(v5);
}

void sub_252425238(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v4 - 8);
  unsigned int v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    uint64_t v8 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_2523D380C;
    v9[6] = v7;
    id v10 = a1;
    swift_retain();
    id v11 = a1;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C04578, (uint64_t)v9);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v12 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    id v13 = (void *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    void v13[4] = a2;
    v13[5] = sub_2523D3704;
    v13[6] = 0;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C04570, (uint64_t)v13);
    swift_release();
  }
}

void sub_25242544C(void *a1)
{
  sub_252425238(a1, v1);
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_252425470()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

HomeKitEvents::SmokeDetectorEvent::State_optional __swiftcall SmokeDetectorEvent.State.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (HomeKitEvents::SmokeDetectorEvent::State_optional)rawValue;
}

void *static SmokeDetectorEvent.State.allCases.getter()
{
  return &unk_270299648;
}

uint64_t SmokeDetectorEvent.State.rawValue.getter()
{
  return *v0;
}

HomeKitEvents::SmokeDetectorEvent::State_optional sub_2524254D4(Swift::Int *a1)
{
  return SmokeDetectorEvent.State.init(rawValue:)(*a1);
}

void sub_2524254DC(void *a1@<X8>)
{
  *a1 = &unk_270299670;
}

uint64_t SmokeDetectorEvent.state.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SmokeDetectorEvent();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for SmokeDetectorEvent()
{
  uint64_t result = qword_269C054E0;
  if (!qword_269C054E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SmokeDetectorEvent.init(date:homeIdentifier:roomIdentifier:roomName:accessoryIdentifier:accessoryName:state:userIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11)
{
  char v29 = *a10;
  uint64_t v17 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a9, a1, v17);
  uint64_t v18 = type metadata accessor for EventBase(0);
  uint64_t v19 = a9 + *(int *)(v18 + 20);
  uint64_t v20 = sub_25247A540();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32);
  v21(v19, a2, v20);
  *(unsigned char *)(a9 + *(int *)(v18 + 24)) = 2;
  uint64_t v22 = (int *)type metadata accessor for AccessoryEventBase(0);
  v21(a9 + v22[5], a3, v20);
  unint64_t v23 = (void *)(a9 + v22[6]);
  *unint64_t v23 = a4;
  v23[1] = a5;
  v21(a9 + v22[7], a6, v20);
  unint64_t v24 = (void *)(a9 + v22[8]);
  *unint64_t v24 = a7;
  v24[1] = a8;
  sub_2523E28C4(a11, a9 + v22[9]);
  uint64_t result = type metadata accessor for SmokeDetectorEvent();
  *(unsigned char *)(a9 + *(int *)(result + 20)) = v29;
  return result;
}

uint64_t SmokeDetectorEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_2523D918C((uint64_t)a1, (uint64_t)v11);
  sub_252466A64((uint64_t)v11, (uint64_t)v7);
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_2523E15BC(a1, (uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  char v9 = v11[0];
  sub_2523E29D8((uint64_t)v7, a2);
  uint64_t result = type metadata accessor for SmokeDetectorEvent();
  *(unsigned char *)(a2 + *(int *)(result + 20)) = v9;
  return result;
}

uint64_t SmokeDetectorEvent.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04810);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = sub_252467000(a1);
  if (!v2)
  {
    v9[15] = *(unsigned char *)(v1 + *(int *)(type metadata accessor for SmokeDetectorEvent() + 20));
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_2523D3370();
    sub_25247B3B0();
    v9[14] = 1;
    sub_252425970();
    sub_25247B1D0();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

unint64_t sub_252425970()
{
  unint64_t result = qword_269C05468;
  if (!qword_269C05468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05468);
  }
  return result;
}

uint64_t sub_2524259C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SmokeDetectorEvent.init(from:)(a1, a2);
}

uint64_t sub_2524259DC(void *a1)
{
  return SmokeDetectorEvent.encode(to:)(a1);
}

uint64_t SmokeDetectorEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25247A4B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t SmokeDetectorEvent.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SmokeDetectorEvent.category.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for EventBase(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SmokeDetectorEvent.roomIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SmokeDetectorEvent.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SmokeDetectorEvent.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SmokeDetectorEvent.accessoryName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SmokeDetectorEvent.userIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);

  return sub_2523E1C2C(v3, a1);
}

uint64_t SmokeDetectorEvent.hash(into:)()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A4B0();
  sub_252426C94(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_252426C94((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  type metadata accessor for SmokeDetectorEvent();
  return sub_25247B360();
}

BOOL static SmokeDetectorEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (!_s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(a1, a2)) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for SmokeDetectorEvent();
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20));
}

uint64_t SmokeDetectorEvent.hashValue.getter()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247B350();
  sub_25247A4B0();
  sub_252426C94(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_252426C94((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  type metadata accessor for SmokeDetectorEvent();
  sub_25247B360();
  return sub_25247B390();
}

uint64_t sub_2524262F0()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A4B0();
  sub_252426C94(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_252426C94((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_25247B360();
}

uint64_t sub_2524265D8()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247B350();
  sub_25247A4B0();
  sub_252426C94(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_252426C94((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_25247B360();
  return sub_25247B390();
}

uint64_t sub_2524268DC()
{
  return sub_25247A9D0();
}

uint64_t sub_25242693C()
{
  return sub_25247A9C0();
}

unint64_t sub_252426990()
{
  unint64_t result = qword_269C05470;
  if (!qword_269C05470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05470);
  }
  return result;
}

unint64_t sub_2524269E8()
{
  unint64_t result = qword_269C05478;
  if (!qword_269C05478)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C05480);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05478);
  }
  return result;
}

unint64_t sub_252426A48()
{
  unint64_t result = qword_269C05488;
  if (!qword_269C05488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05488);
  }
  return result;
}

uint64_t sub_252426A9C(void *a1)
{
  a1[1] = sub_252426C94(&qword_269C05498, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
  a1[2] = sub_252426C94(&qword_269C054A0, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
  uint64_t result = sub_252426C94(&qword_269C054A8, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_252426B48()
{
  return sub_252426C94(&qword_269C054B0, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
}

uint64_t sub_252426B90(uint64_t a1)
{
  uint64_t result = sub_252426C94(&qword_269C05490, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_252426BE8(void *a1)
{
  a1[1] = sub_252426C94(&qword_269C054B8, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
  a1[2] = sub_252426C94(&qword_269C054C0, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
  uint64_t result = sub_252426C94(&qword_269C054C8, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_252426C94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_252426CDC()
{
  return sub_252426C94(&qword_269C054B8, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
}

unint64_t sub_252426D24(void *a1)
{
  a1[1] = sub_2523E4340();
  a1[2] = sub_252425970();
  unint64_t result = sub_252426D5C();
  a1[3] = result;
  return result;
}

unint64_t sub_252426D5C()
{
  unint64_t result = qword_269C054D0;
  if (!qword_269C054D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C054D0);
  }
  return result;
}

unint64_t sub_252426DB0(uint64_t a1)
{
  unint64_t result = sub_252426DD8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_252426DD8()
{
  unint64_t result = qword_269C054D8;
  if (!qword_269C054D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C054D8);
  }
  return result;
}

unint64_t sub_252426E2C(uint64_t a1)
{
  unint64_t result = sub_252426A48();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SmokeDetectorEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252426E68);
}

uint64_t sub_252426E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AccessoryEventBaseLegacy(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 3) {
      return v10 - 2;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for SmokeDetectorEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252426F38);
}

uint64_t sub_252426F38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AccessoryEventBaseLegacy(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  }
  return result;
}

uint64_t sub_252426FF4()
{
  uint64_t result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContactSensorEvent.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SmokeDetectorEvent.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2524271E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SmokeDetectorEvent.State()
{
  return &type metadata for SmokeDetectorEvent.State;
}

unint64_t sub_25242721C()
{
  unint64_t result = qword_269C054F0;
  if (!qword_269C054F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C054F0);
  }
  return result;
}

uint64_t static HMVCommands.clearEvents(homes:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_252427294, 0, 0);
}

uint64_t sub_252427294()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v5 = (uint64_t (*)(void))((char *)&dword_269C04588 + dword_269C04588);
  int v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *int v3 = v0;
  v3[1] = sub_2523D3B14;
  return v5();
}

void sub_252427368(void *a1, uint64_t a2, void *a3)
{
  int v3 = a3;
  if (a3)
  {
    sub_25247A540();
    int v3 = (void *)sub_25247A9E0();
  }
  v7[4] = sub_25242767C;
  v7[5] = a2;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  v7[2] = sub_25244C4D8;
  v7[3] = &block_descriptor_7;
  uint64_t v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilClearEventsWithHomes_reply_, v3, v6);
  _Block_release(v6);
}

void sub_252427460(void *a1, uint64_t a2)
{
  sub_252427368(a1, a2, *(void **)(v2 + 16));
}

void sub_252427468(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    uint64_t v8 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_2523D380C;
    v9[6] = v7;
    id v10 = a1;
    swift_retain();
    id v11 = a1;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C049A8, (uint64_t)v9);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v12 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    id v13 = (void *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    void v13[4] = a2;
    v13[5] = sub_2523D3704;
    v13[6] = 0;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C04570, (uint64_t)v13);
    swift_release();
  }
}

void sub_25242767C(void *a1)
{
  sub_252427468(a1, v1);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_2524276A0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t dispatch thunk of static EncryptionKey.isValidInputData(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of static EncryptionKey.recordKeyType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EncryptionKey.byteCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

void sub_252427718(void *a1, uint64_t a2, char a3)
{
  v6[4] = sub_252427BEC;
  v6[5] = a2;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 1107296256;
  uint64_t v6[2] = sub_252427BF4;
  v6[3] = &block_descriptor_8;
  uint64_t v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_collectDiagnosticsWithIncludeSensitiveData_reply_, a3 & 1, v5);
  _Block_release(v5);
}

void sub_2524277F0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05500);
  MEMORY[0x270FA5388](v9 - 8);
  id v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25247A140();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v29 - v17;
  sub_252427DAC(a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_252427D4C((uint64_t)v11);
    if (a2)
    {
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = a2;
      uint64_t v20 = sub_25247AB70();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v8, 1, 1, v20);
      uint64_t v21 = (void *)swift_allocObject();
      v21[2] = 0;
      v21[3] = 0;
      v21[4] = a3;
      v21[5] = sub_2524177DC;
      v21[6] = v19;
      id v22 = a2;
      swift_retain();
      id v23 = a2;
      swift_retain();
      sub_25240BCB0((uint64_t)v8, (uint64_t)&unk_269C05118, (uint64_t)v21);
      swift_release();
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v30 = a3;
    unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v24(v18, v11, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
    unint64_t v25 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v26 = swift_allocObject();
    v24((char *)(v26 + v25), v16, v12);
    uint64_t v27 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v8, 1, 1, v27);
    unint64_t v28 = (void *)swift_allocObject();
    v28[2] = 0;
    v28[3] = 0;
    v28[4] = v30;
    v28[5] = sub_252427FB8;
    v28[6] = v26;
    swift_retain();
    swift_retain();
    sub_25240BCB0((uint64_t)v8, (uint64_t)&unk_269C05508, (uint64_t)v28);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
}

void sub_252427BEC(uint64_t a1, void *a2)
{
  sub_2524277F0(a1, a2, v2);
}

uint64_t sub_252427BF4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05500);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_25247A130();
    uint64_t v10 = sub_25247A140();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = sub_25247A140();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  id v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_252427D4C((uint64_t)v8);
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_252427D4C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05500);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_252427DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_252427E14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_25247A140();
  MEMORY[0x270FA5388](v3);
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04600);
  return sub_25247AAD0();
}

uint64_t sub_252427EEC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_252427F28()
{
  uint64_t v1 = sub_25247A140();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_252427FB8(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_25247A140() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_252427E14(a1, v4);
}

uint64_t sub_25242802C()
{
  sub_25247AAE0();
  uint64_t result = sub_25247AE90();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2524280DC()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  sub_25247AAE0();
  uint64_t v2 = sub_25247AE90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_2524281A0()
{
  sub_2524280DC();

  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for SafeCheckedContinuation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2524281E4()
{
  return sub_252424474();
}

void sub_252428200(uint64_t a1, uint64_t a2, void *a3)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 32), *(void *)(a1 + 56));
  if (a3)
  {
    id v4 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C055D0);
    sub_25247AAC0();
  }
  else
  {
    sub_2523E1254(0, (unint64_t *)&unk_269C056C0);
    sub_25247A9F0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C055D0);
    sub_25247AAD0();
  }
}

unint64_t sub_2524282BC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C05698);
  uint64_t v2 = sub_25247B0F0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2523D6F54(v6, (uint64_t)&v15, &qword_269C056A0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_252460D44(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_2523DFC24(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_252428400()
{
  uint64_t v0 = sub_25247A580();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v74 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_25247A5A0();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v73 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C056D0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v72 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25247A3F0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v71 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_25247A300();
  uint64_t v67 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v66 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_25247A320();
  uint64_t v68 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v65 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25247A250();
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v64 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v62 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25247A2F0();
  uint64_t v60 = *(void *)(v12 - 8);
  uint64_t v61 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v59 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25247A2D0();
  uint64_t v57 = *(void *)(v14 - 8);
  uint64_t v58 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v56 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_25247A1F0();
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  BOOL v49 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_25247A210();
  uint64_t v51 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v47 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_25247A230();
  uint64_t v48 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  id v46 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_25247A290();
  uint64_t v19 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_25247A270();
  uint64_t v22 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  unint64_t v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_25247A2B0();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  unint64_t v28 = (char *)&v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_25247A3D0();
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v30 = sub_25247A430();
  __swift_allocate_value_buffer(v30, qword_269C05590);
  uint64_t v55 = __swift_project_value_buffer(v30, (uint64_t)qword_269C05590);
  sub_25247A3C0();
  sub_25247A3B0();
  sub_25247A2A0();
  sub_25247A370();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  sub_25247A3B0();
  sub_25247A260();
  sub_25247A340();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v44);
  sub_25247A3B0();
  sub_25247A280();
  sub_25247A360();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v45);
  sub_25247A3B0();
  char v31 = v47;
  sub_25247A200();
  char v32 = v49;
  sub_25247A1E0();
  uint64_t v33 = v46;
  sub_25247A220();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v32, v54);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v31, v52);
  sub_25247A350();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v50);
  sub_25247A3B0();
  BOOL v34 = v56;
  sub_25247A2C0();
  sub_25247A380();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v34, v58);
  sub_25247A3B0();
  uint64_t v35 = v59;
  sub_25247A2C0();
  sub_25247A390();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v35, v61);
  sub_25247A3B0();
  char v36 = v62;
  sub_25247A240();
  sub_25247A330();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v36, v64);
  sub_25247A3B0();
  uint64_t v38 = v66;
  uint64_t v37 = v67;
  uint64_t v39 = v69;
  (*(void (**)(char *, void, uint64_t))(v67 + 104))(v66, *MEMORY[0x263F071B8], v69);
  unint64_t v40 = v65;
  sub_25247A310();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  sub_25247A3A0();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v40, v70);
  sub_25247A3B0();
  sub_25247A3E0();
  uint64_t v41 = v72;
  sub_25247A550();
  uint64_t v42 = sub_25247A560();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 0, 1, v42);
  sub_25247A590();
  sub_25247A570();
  return sub_25247A410();
}

uint64_t static CloudKitExporter.dateFormatStyle.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269C04348 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25247A430();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269C05590);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void CloudKitExporter.init(outputStreamFactory:operationGroup:container:)(id a1@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, void *a4@<X3>, void *a5@<X8>)
{
  id v10 = objc_msgSend(a1, sel_defaultConfiguration);
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = objc_msgSend(v10, sel_container);

    if (v12)
    {

      a4 = v12;
    }
    *a5 = a2;
    a5[1] = a3;
    a5[2] = a4;
    a5[3] = a1;
  }
  else
  {
    __break(1u);
  }
}

void CloudKitExporter.init(outputStreamFactory:qualityOfService:container:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFD780]), sel_init);
  id v11 = v10;
  sub_252429060(&v11, a4, a3);
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a4;
  a5[3] = v10;
}

void sub_252429060(id *a1, uint64_t a2, uint64_t a3)
{
  id v5 = *a1;
  id v6 = objc_msgSend(*a1, sel_defaultConfiguration);
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v7 = v6;
  objc_msgSend(v6, sel_setContainer_, a2);

  v18[2] = 0;
  v18[3] = 0xE000000000000000;
  v18[0] = 47;
  v18[1] = 0xE100000000000000;
  MEMORY[0x270FA5388](v8);
  v17[2] = v18;
  uint64_t v9 = (void *)sub_25242DB30(0x7FFFFFFFFFFFFFFFLL, 1, sub_25242E428, (uint64_t)v17, 0xD000000000000024, 0x800000025247CD00);
  if (!v9[2])
  {
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v10 = v9[4];
  uint64_t v11 = v9[5];
  uint64_t v12 = v9[6];
  uint64_t v13 = v9[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  MEMORY[0x2533B4B70](v10, v11, v12, v13);
  sub_25247A920();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25247A920();
  v18[0] = &type metadata for CloudKitExporter;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A10);
  sub_25247A890();
  sub_25247A920();
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_25247A830();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setName_, v14);

  if (a3 == -1) {
    return;
  }
  id v15 = objc_msgSend(v5, sel_defaultConfiguration);
  if (!v15)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v16 = v15;
  objc_msgSend(v15, sel_setQualityOfService_, a3);
}

uint64_t CloudKitExporter.start()()
{
  long long v2 = v0[1];
  *(_OWORD *)(v1 + 16) = *v0;
  *(_OWORD *)(v1 + 32) = v2;
  return MEMORY[0x270FA2498](sub_2524292A4, 0, 0);
}

uint64_t sub_2524292A4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v3 + 32) = v1;
  *(void *)(v3 + 40) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_25242938C;
  return MEMORY[0x270EE3608]();
}

uint64_t sub_25242938C()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2524294A8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2523D3C30;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2524294A8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25242950C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[15] = a5;
  v6[16] = a6;
  v6[13] = a3;
  v6[14] = a4;
  v6[12] = a2;
  return MEMORY[0x270FA2498](sub_252429534, 0, 0);
}

uint64_t sub_252429534()
{
  uint64_t v1 = *(void **)(v0 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04B80);
  uint64_t inited = swift_initStackObject();
  *(void *)(v0 + 136) = inited;
  *(_OWORD *)(inited + 16) = xmmword_25247EB30;
  *(void *)(inited + 32) = objc_msgSend(v1, sel_privateCloudDatabase);
  *(void *)(inited + 40) = objc_msgSend(v1, sel_sharedCloudDatabase);
  uint64_t result = sub_25247AA10();
  *(void *)(v0 + 144) = inited;
  if ((inited & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x2533B5230](0);
  }
  else
  {
    if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v4 = *(id *)(inited + 32);
  }
  uint64_t v5 = (uint64_t)v4;
  *(void *)(v0 + 152) = v4;
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 120);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_252429690;
  return sub_252429D7C(v5);
}

uint64_t sub_252429690()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[23] = v2[19];
    v2[24] = v0;
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_252429A3C;
  }
  else
  {
    uint64_t v3 = sub_2524297B8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

void sub_2524297B8()
{
  uint64_t v1 = *(void *)(v0 + 144);

  uint64_t v2 = *(void *)(v0 + 144);
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v3 = (id)MEMORY[0x2533B5230](1, v2);
  }
  else
  {
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      return;
    }
    id v3 = *(id *)(v2 + 40);
  }
  uint64_t v4 = (uint64_t)v3;
  *(void *)(v0 + 168) = v3;
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 120);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_2524298A0;
  sub_252429D7C(v4);
}

uint64_t sub_2524298A0()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[23] = v2[21];
    v2[24] = v0;
    swift_bridgeObjectRelease();
    id v3 = sub_252429A3C;
  }
  else
  {
    id v3 = sub_2524299CC;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2524299CC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_252429A3C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_252429AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v2 + 16);
  long long v7 = *(_OWORD *)(v2 + 32);
  *(void *)(v3 + 16) = v5;
  *(void *)uint64_t v5 = v3;
  *(void *)(v5 + 8) = sub_2523D3928;
  *(_OWORD *)(v5 + 120) = v7;
  *(_OWORD *)(v5 + 104) = v6;
  *(void *)(v5 + 96) = a2;
  return MEMORY[0x270FA2498](sub_252429534, 0, 0);
}

uint64_t initializeBufferWithCopyOfBuffer for CloudKitExporter(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for CloudKitExporter(uint64_t a1)
{
  swift_release();

  uint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for CloudKitExporter(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  uint64_t v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  id v6 = v4;
  id v7 = v5;
  return a1;
}

void *assignWithCopy for CloudKitExporter(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = (void *)a2[2];
  id v6 = (void *)a1[2];
  a1[2] = v5;
  id v7 = v5;

  uint64_t v8 = (void *)a2[3];
  uint64_t v9 = (void *)a1[3];
  a1[3] = v8;
  id v10 = v8;

  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for CloudKitExporter(uint64_t a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_release();

  uint64_t v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

uint64_t getEnumTagSinglePayload for CloudKitExporter(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudKitExporter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudKitExporter()
{
  return &type metadata for CloudKitExporter;
}

uint64_t sub_252429D7C(uint64_t a1)
{
  *(void *)(v2 + 192) = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C055D0);
  *(void *)(v2 + 200) = v3;
  *(void *)(v2 + 208) = *(void *)(v3 - 8);
  *(void *)(v2 + 216) = swift_task_alloc();
  uint64_t v4 = sub_25247A6A0();
  *(void *)(v2 + 224) = v4;
  *(void *)(v2 + 232) = *(void *)(v4 - 8);
  *(void *)(v2 + 240) = swift_task_alloc();
  long long v5 = v1[1];
  *(_OWORD *)(v2 + 248) = *v1;
  *(_OWORD *)(v2 + 264) = v5;
  return MEMORY[0x270FA2498](sub_252429EAC, 0, 0);
}

uint64_t sub_252429EAC()
{
  char v36 = v0;
  uint64_t v1 = (void *)v0[24];
  uint64_t v3 = (void *)v0[33];
  uint64_t v2 = (void *)v0[34];
  sub_2523E7F20(v0[30]);
  swift_retain_n();
  id v4 = v3;
  id v5 = v2;
  id v6 = v1;
  id v7 = v4;
  id v8 = v5;
  id v9 = v6;
  id v10 = sub_25247A680();
  os_log_type_t v11 = sub_25247AD20();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (void *)v0[33];
    uint64_t v30 = (void *)v0[34];
    uint64_t v32 = v0[29];
    uint64_t v33 = v0[28];
    uint64_t v34 = v0[30];
    id v29 = (id)v0[24];
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    v35[0] = v31;
    v35[1] = 40;
    v35[2] = 0xE100000000000000;
    id v14 = objc_msgSend(v12, sel_containerID);
    id v15 = objc_msgSend(v14, sel_containerIdentifier);

    sub_25247A840();
    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_25247A920();
    objc_msgSend(v29, sel_scope);
    id v16 = (id)CKDatabaseScopeString();
    sub_25247A840();

    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_25247A920();
    v0[23] = sub_25245DA98(40, 0xE100000000000000, v35);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    swift_release_n();

    _os_log_impl(&dword_2523CF000, v10, v11, "Fetching zones for %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v31, -1, -1);
    MEMORY[0x2533B5DC0](v13, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
  }
  else
  {
    uint64_t v18 = (void *)v0[33];
    uint64_t v17 = (void *)v0[34];
    uint64_t v20 = v0[29];
    uint64_t v19 = v0[30];
    uint64_t v21 = v0[28];
    uint64_t v22 = (void *)v0[24];
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  uint64_t v24 = v0[26];
  uint64_t v23 = v0[27];
  uint64_t v25 = (void *)v0[24];
  uint64_t v26 = v0[25];
  v0[2] = v0;
  v0[7] = v0 + 22;
  v0[3] = sub_25242A328;
  swift_continuation_init();
  v0[17] = v26;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04FE0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A60);
  sub_25247AAB0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v24 + 32))(boxed_opaque_existential_1, v23, v26);
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 1107296256;
  v0[12] = sub_252428200;
  v0[13] = &block_descriptor_9;
  objc_msgSend(v25, sel_fetchAllRecordZonesWithCompletionHandler_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_25242A328()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 280) = v1;
  if (v1) {
    uint64_t v2 = sub_25242AA30;
  }
  else {
    uint64_t v2 = sub_25242A438;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25242A438()
{
  unint64_t v1 = *(void *)(v0 + 176);
  *(void *)(v0 + 288) = v1;
  if (v1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_25247B0C0();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 296) = v17;
    if (v17) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    *(void *)(v0 + 296) = v2;
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 0;
      do
      {
        uint64_t v4 = *(void *)(v0 + 288);
        if ((v4 & 0xC000000000000001) != 0) {
          id v5 = (id)MEMORY[0x2533B5230](v3);
        }
        else {
          id v5 = *(id *)(v4 + 8 * v3 + 32);
        }
        id v6 = v5;
        *(void *)(v0 + 304) = v5;
        *(void *)(v0 + 312) = v3 + 1;
        if (__OFADD__(v3, 1))
        {
          __break(1u);
          goto LABEL_19;
        }
        id v7 = objc_msgSend(v5, sel_zoneID);
        id v8 = objc_msgSend(v7, sel_zoneName);

        uint64_t v9 = sub_25247A840();
        uint64_t v11 = v10;

        if (v9 == 0x746C75616665645FLL && v11 == 0xEC000000656E6F5ALL)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v13 = sub_25247B260();
          swift_bridgeObjectRelease();
          if ((v13 & 1) == 0)
          {
            *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 248);
            *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 264);
            id v14 = (void *)swift_task_alloc();
            *(void *)(v0 + 320) = v14;
            *id v14 = v0;
            v14[1] = sub_25242A6C4;
            uint64_t v15 = *(void *)(v0 + 192);
            return sub_25242AB54(v15, (uint64_t)v6);
          }
        }

        uint64_t v3 = *(void *)(v0 + 312);
      }
      while (v3 != *(void *)(v0 + 296));
    }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_25242A6C4()
{
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_25242AAB0;
  }
  else
  {
    uint64_t v2 = sub_25242A7E0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

id sub_25242A7E0()
{
  uint64_t v1 = *(void *)(v0 + 312);
  if (v1 == *(void *)(v0 + 296))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v2();
  }
  while (1)
  {
    uint64_t v4 = *(void *)(v0 + 288);
    if ((v4 & 0xC000000000000001) != 0) {
      id result = (id)MEMORY[0x2533B5230](v1);
    }
    else {
      id result = *(id *)(v4 + 8 * v1 + 32);
    }
    id v5 = result;
    *(void *)(v0 + 304) = result;
    *(void *)(v0 + 312) = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      return result;
    }
    id v6 = objc_msgSend(result, sel_zoneID);
    id v7 = objc_msgSend(v6, sel_zoneName);

    uint64_t v8 = sub_25247A840();
    uint64_t v10 = v9;

    if (v8 != 0x746C75616665645FLL || v10 != 0xEC000000656E6F5ALL) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_7:

    uint64_t v1 = *(void *)(v0 + 312);
    if (v1 == *(void *)(v0 + 296)) {
      goto LABEL_2;
    }
  }
  char v12 = sub_25247B260();
  swift_bridgeObjectRelease();
  if (v12) {
    goto LABEL_7;
  }
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 264);
  char v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v13;
  void *v13 = v0;
  v13[1] = sub_25242A6C4;
  uint64_t v14 = *(void *)(v0 + 192);
  return (id)sub_25242AB54(v14, (uint64_t)v5);
}

uint64_t sub_25242AA30()
{
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25242AAB0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  return sub_252415E78(a2 + 32, a1 + 32);
}

uint64_t block_destroy_helper_9(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 32);
}

uint64_t sub_25242AB54(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 328) = a1;
  *(void *)(v3 + 336) = a2;
  uint64_t v4 = sub_25247ACD0();
  *(void *)(v3 + 344) = v4;
  *(void *)(v3 + 352) = *(void *)(v4 - 8);
  *(void *)(v3 + 360) = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C055E0);
  *(void *)(v3 + 368) = v5;
  *(void *)(v3 + 376) = *(void *)(v5 - 8);
  *(void *)(v3 + 384) = swift_task_alloc();
  *(void *)(v3 + 392) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C055E8);
  *(void *)(v3 + 400) = swift_task_alloc();
  *(void *)(v3 + 408) = swift_task_alloc();
  uint64_t v6 = sub_25247A6A0();
  *(void *)(v3 + 416) = v6;
  *(void *)(v3 + 424) = *(void *)(v6 - 8);
  *(void *)(v3 + 432) = swift_task_alloc();
  *(void *)(v3 + 440) = swift_task_alloc();
  long long v7 = v2[1];
  *(_OWORD *)(v3 + 448) = *v2;
  *(_OWORD *)(v3 + 464) = v7;
  return MEMORY[0x270FA2498](sub_25242AD38, 0, 0);
}

uint64_t sub_25242AD38()
{
  uint64_t v84 = v0;
  (*(void (**)(id, void))(v0 + 448))(objc_msgSend(*(id *)(v0 + 328), sel_scope), *(void *)(v0 + 336));
  uint64_t v2 = *(void **)(v0 + 464);
  uint64_t v1 = *(void **)(v0 + 472);
  uint64_t v3 = *(void **)(v0 + 328);
  uint64_t v4 = *(void **)(v0 + 336);
  if (*(void *)(v0 + 168))
  {
    uint64_t v5 = *(void *)(v0 + 440);
    sub_2523DFC24((long long *)(v0 + 144), v0 + 104);
    sub_2523E7F20(v5);
    swift_retain_n();
    id v6 = v2;
    id v7 = v1;
    id v8 = v3;
    id v9 = v4;
    id v10 = v6;
    id v11 = v7;
    id v12 = v8;
    id v13 = v9;
    uint64_t v14 = sub_25247A680();
    os_log_type_t v15 = sub_25247AD20();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = *(void **)(v0 + 464);
    uint64_t v18 = *(void **)(v0 + 472);
    unint64_t v19 = *(void *)(v0 + 456);
    if (v16)
    {
      os_log_type_t type = v15;
      uint64_t v20 = *(void *)(v0 + 448);
      uint64_t v72 = *(void *)(v0 + 424);
      uint64_t v74 = *(void *)(v0 + 416);
      uint64_t v76 = *(void *)(v0 + 440);
      uint64_t v21 = *(void **)(v0 + 328);
      uint64_t v22 = *(void **)(v0 + 336);
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v79 = v69;
      uint64_t v80 = v20;
      unint64_t v81 = v19;
      uint64_t v82 = v17;
      unint64_t v83 = v18;
      uint64_t v24 = sub_25242BF2C(v21, v22);
      *(void *)(v0 + 320) = sub_25245DA98(v24, v25, &v79);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      swift_release_n();

      _os_log_impl(&dword_2523CF000, v14, type, "Fetching records for %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v69, -1, -1);
      MEMORY[0x2533B5DC0](v23, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v76, v74);
    }
    else
    {
      uint64_t v47 = *(void *)(v0 + 440);
      uint64_t v48 = *(void *)(v0 + 416);
      uint64_t v49 = *(void *)(v0 + 424);
      uint64_t v51 = *(void **)(v0 + 328);
      uint64_t v50 = *(void **)(v0 + 336);
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
    }
    uint64_t v52 = *(void **)(v0 + 464);
    uint64_t v53 = *(void **)(v0 + 328);
    uint64_t v54 = *(void **)(v0 + 336);
    uint64_t v80 = 0;
    unint64_t v81 = 0xE000000000000000;
    sub_25247AF40();
    swift_bridgeObjectRelease();
    uint64_t v80 = 8827;
    unint64_t v81 = 0xE200000000000000;
    id v55 = objc_msgSend(v52, sel_containerID);
    id v56 = objc_msgSend(v55, sel_containerIdentifier);

    sub_25247A840();
    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_25247A920();
    objc_msgSend(v53, sel_scope);
    id v57 = (id)CKDatabaseScopeString();
    sub_25247A840();

    sub_25247A8A0();
    swift_bridgeObjectRelease();
    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_25247A920();
    id v58 = objc_msgSend(v54, sel_zoneID);
    id v59 = objc_msgSend(v58, sel_zoneName);

    sub_25247A840();
    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_25247A920();
    __swift_mutable_project_boxed_opaque_existential_1(v0 + 104, *(void *)(v0 + 128));
    sub_25247B090();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v0 + 528) = 1;
    *(void *)(v0 + 480) = 0;
    id v60 = objc_msgSend(*(id *)(v0 + 336), sel_zoneID);
    *(void *)(v0 + 488) = v60;
    uint64_t v61 = (void *)swift_task_alloc();
    *(void *)(v0 + 496) = v61;
    *uint64_t v61 = v0;
    v61[1] = sub_25242B52C;
    return MEMORY[0x270EE35E0](v60, 0, 0, 0, 1);
  }
  else
  {
    uint64_t v26 = *(void *)(v0 + 432);
    sub_2523D6FB8(v0 + 144, &qword_269C055F0);
    sub_2523E7F20(v26);
    swift_retain_n();
    id v27 = v2;
    id v28 = v1;
    id v29 = v3;
    id v30 = v4;
    id v31 = v27;
    id v32 = v28;
    id v33 = v29;
    id v34 = v30;
    uint64_t v35 = sub_25247A680();
    os_log_type_t v36 = sub_25247AD30();
    uint64_t v78 = v35;
    BOOL v37 = os_log_type_enabled(v35, v36);
    uint64_t v38 = *(void **)(v0 + 464);
    uint64_t v39 = *(void **)(v0 + 472);
    unint64_t v40 = *(void *)(v0 + 456);
    if (v37)
    {
      uint64_t v41 = *(void *)(v0 + 448);
      uint64_t v73 = *(void *)(v0 + 424);
      uint64_t v75 = *(void *)(v0 + 416);
      uint64_t v77 = *(void *)(v0 + 432);
      uint64_t v42 = *(void **)(v0 + 328);
      uint64_t v43 = *(void **)(v0 + 336);
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 136315138;
      uint64_t v79 = v70;
      uint64_t v80 = v41;
      unint64_t v81 = v40;
      uint64_t v82 = v38;
      unint64_t v83 = v39;
      uint64_t v45 = sub_25242BF2C(v42, v43);
      *(void *)(v0 + 312) = sub_25245DA98(v45, v46, &v79);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      swift_release_n();

      _os_log_impl(&dword_2523CF000, v78, v36, "Skipping %s", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v70, -1, -1);
      MEMORY[0x2533B5DC0](v44, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v77, v75);
    }
    else
    {
      uint64_t v63 = *(void *)(v0 + 424);
      uint64_t v62 = *(void *)(v0 + 432);
      uint64_t v64 = *(void *)(v0 + 416);
      uint64_t v66 = *(void **)(v0 + 328);
      uint64_t v65 = *(void **)(v0 + 336);
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v67 = *(uint64_t (**)(void))(v0 + 8);
    return v67();
  }
}

uint64_t sub_25242B52C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = *v5;
  uint64_t v7 = *v5;
  *(void *)(v7 + 504) = a1;
  *(void *)(v7 + 512) = a3;
  *(unsigned char *)(v7 + 529) = a4;
  *(void *)(v7 + 520) = v4;
  swift_task_dealloc();
  id v8 = *(void **)(v6 + 488);
  if (v4)
  {

    id v9 = sub_25242BE24;
  }
  else
  {
    swift_bridgeObjectRelease();

    id v9 = sub_25242B680;
  }
  return MEMORY[0x270FA2498](v9, 0, 0);
}

uint64_t sub_25242B680()
{
  uint64_t v59 = v0 + 104;
  id v56 = (uint64_t *)(v0 + 216);
  id v57 = (void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 504);
  uint64_t v53 = *(void *)(v0 + 512);

  int64_t v60 = 0;
  uint64_t v54 = v1 + 64;
  uint64_t v7 = -1;
  uint64_t v58 = v1;
  uint64_t v8 = -1 << *(unsigned char *)(v1 + 32);
  if (-v8 < 64) {
    uint64_t v7 = ~(-1 << -(char)v8);
  }
  unint64_t v9 = v7 & *(void *)(v1 + 64);
  int64_t v55 = (unint64_t)(63 - v8) >> 6;
  for (char i = *(unsigned char *)(v0 + 528); ; char i = 0)
  {
    if (v9)
    {
      unint64_t v18 = __clz(__rbit64(v9));
      uint64_t v19 = (v9 - 1) & v9;
      unint64_t v20 = v18 | (v60 << 6);
LABEL_8:
      uint64_t v21 = *(void **)(v0 + 400);
      uint64_t v22 = *(void *)(v0 + 376);
      uint64_t v23 = *(void **)(*(void *)(v58 + 48) + 8 * v20);
      *uint64_t v21 = v23;
      uint64_t v24 = *(void *)(v58 + 56) + *(void *)(v22 + 72) * v20;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C055F8);
      sub_2523D6F54(v24, (uint64_t)v21 + *(int *)(v25 + 48), &qword_269C055E0);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v21, 0, 1, v25);
      id v26 = v23;
      goto LABEL_27;
    }
    int64_t v27 = v60 + 1;
    if (__OFADD__(v60, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v27 < v55)
    {
      unint64_t v28 = *(void *)(v54 + 8 * v27);
      if (v28) {
        goto LABEL_12;
      }
      int64_t v29 = v60 + 2;
      ++v60;
      if (v27 + 1 < v55)
      {
        unint64_t v28 = *(void *)(v54 + 8 * v29);
        if (v28) {
          goto LABEL_15;
        }
        int64_t v60 = v27 + 1;
        if (v27 + 2 < v55)
        {
          unint64_t v28 = *(void *)(v54 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_12;
          }
          int64_t v29 = v27 + 3;
          int64_t v60 = v27 + 2;
          if (v27 + 3 < v55)
          {
            unint64_t v28 = *(void *)(v54 + 8 * v29);
            if (v28)
            {
LABEL_15:
              int64_t v27 = v29;
LABEL_12:
              uint64_t v19 = (v28 - 1) & v28;
              unint64_t v20 = __clz(__rbit64(v28)) + (v27 << 6);
              int64_t v60 = v27;
              goto LABEL_8;
            }
            while (1)
            {
              int64_t v27 = v29 + 1;
              if (__OFADD__(v29, 1)) {
                break;
              }
              if (v27 >= v55)
              {
                int64_t v60 = v55 - 1;
                goto LABEL_26;
              }
              unint64_t v28 = *(void *)(v54 + 8 * v27);
              ++v29;
              if (v28) {
                goto LABEL_12;
              }
            }
LABEL_42:
            __break(1u);
            return MEMORY[0x270EE35E0](v2, v3, v4, v5, v6);
          }
        }
      }
    }
LABEL_26:
    uint64_t v30 = *(void *)(v0 + 400);
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C055F8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
    uint64_t v19 = 0;
LABEL_27:
    uint64_t v32 = *(void *)(v0 + 408);
    sub_252408294(*(void *)(v0 + 400), v32, &qword_269C055E8);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C055F8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v32, 1, v33) == 1) {
      break;
    }
    unint64_t v62 = v19;
    id v34 = *(void ***)(v0 + 408);
    uint64_t v35 = *(void *)(v0 + 384);
    uint64_t v36 = *(void *)(v0 + 392);
    BOOL v37 = *v34;
    sub_252408294((uint64_t)v34 + *(int *)(v33 + 48), v36, &qword_269C055E0);
    uint64_t v38 = 44;
    if (i) {
      uint64_t v38 = 0;
    }
    unint64_t v39 = 0xE000000000000000;
    if ((i & 1) == 0) {
      unint64_t v39 = 0xE100000000000000;
    }
    *(void *)(v0 + 288) = v38;
    *(void *)(v0 + 296) = v39;
    *(void *)(v0 + 272) = 34;
    *(void *)(v0 + 280) = 0xE100000000000000;
    uint64_t v61 = v37;
    id v40 = objc_msgSend(v37, sel_recordName);
    sub_25247A840();

    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_25247A920();
    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_2523D6F54(v36, v35, &qword_269C055E0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v42 = *(void ***)(v0 + 384);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = *v42;
      sub_2523E1254(0, &qword_269C05600);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C05608);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_25247E5A0;
      *(void *)(inited + 32) = 0x726F727265;
      *(void *)(inited + 40) = 0xE500000000000000;
      swift_getErrorValue();
      uint64_t v13 = *(void *)(v0 + 248);
      uint64_t v14 = *(void *)(v0 + 256);
      *(void *)(v0 + 240) = v14;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v56);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(boxed_opaque_existential_1, v13, v14);
      sub_25242CA24(v56, (uint64_t *)(inited + 48));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
      unint64_t v16 = sub_2524282BC(inited);
      *(void *)(v0 + 208) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05610);
      *(void *)(v0 + 184) = v16;
      sub_25242D0F0(v57, 14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
      sub_25247A920();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v44 = *(void *)(v0 + 352);
      uint64_t v43 = *(void *)(v0 + 360);
      uint64_t v45 = *(void *)(v0 + 344);
      uint64_t v46 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v44 + 32))(v43, v42, v45);
      uint64_t v47 = (void *)MEMORY[0x2533B4F80](v46);
      sub_25242C0B8(v47);

      sub_25247A920();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
    }
    uint64_t v17 = *(void *)(v0 + 392);
    __swift_mutable_project_boxed_opaque_existential_1(v59, *(void *)(v0 + 128));
    sub_25247B090();
    swift_bridgeObjectRelease();

    uint64_t v2 = sub_2523D6FB8(v17, &qword_269C055E0);
    unint64_t v9 = v62;
  }
  char v48 = *(unsigned char *)(v0 + 529);
  swift_release();
  if (v48)
  {
    *(unsigned char *)(v0 + 528) = i & 1;
    *(void *)(v0 + 480) = v53;
    id v49 = objc_msgSend(*(id *)(v0 + 336), sel_zoneID);
    *(void *)(v0 + 488) = v49;
    uint64_t v50 = (void *)swift_task_alloc();
    *(void *)(v0 + 496) = v50;
    *uint64_t v50 = v0;
    v50[1] = sub_25242B52C;
    uint64_t v2 = (uint64_t)v49;
    uint64_t v3 = v53;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 1;
    return MEMORY[0x270EE35E0](v2, v3, v4, v5, v6);
  }

  __swift_mutable_project_boxed_opaque_existential_1(v59, *(void *)(v0 + 128));
  sub_25247B090();
  __swift_destroy_boxed_opaque_existential_1(v59);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v51 = *(uint64_t (**)(void))(v0 + 8);
  return v51();
}

uint64_t sub_25242BE24()
{
  __swift_mutable_project_boxed_opaque_existential_1(v0 + 104, *(void *)(v0 + 128));
  sub_25247B090();
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25242BF2C(void *a1, void *a2)
{
  id v5 = objc_msgSend(*(id *)(v2 + 16), sel_containerID);
  id v6 = objc_msgSend(v5, sel_containerIdentifier);

  sub_25247A840();
  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  objc_msgSend(a1, sel_scope);
  id v7 = (id)CKDatabaseScopeString();
  sub_25247A840();

  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  id v8 = objc_msgSend(a2, sel_zoneID);
  id v9 = objc_msgSend(v8, sel_zoneName);

  sub_25247A840();
  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  return 40;
}

uint64_t sub_25242C0B8(void *a1)
{
  uint64_t v2 = sub_25247A4B0();
  unint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v70 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v61 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04AC8);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (uint64_t *)((char *)&v61 - v13);
  MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v61 - v15;
  uint64_t v17 = sub_25247AE60();
  uint64_t v68 = v18;
  uint64_t v69 = v17;
  id v75 = a1;
  id v19 = objc_msgSend(a1, sel_creationDate);
  if (!v19)
  {
LABEL_32:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v16, 1, 1, v2);
    goto LABEL_33;
  }
  unint64_t v20 = v19;
  sub_25247A490();

  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v21(v16, v7, v2);
  uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  unint64_t v74 = v3 + 56;
  v73(v16, 0, 1, v2);
  uint64_t v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  unint64_t v72 = v3 + 48;
  if (v71(v16, 1, v2) == 1)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v84[3] = v2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v84);
  v21((char *)boxed_opaque_existential_1, v16, v2);
  sub_25242CA24(v84, v85);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
  id v23 = objc_msgSend(v75, sel_modificationDate);
  if (!v23)
  {
LABEL_34:
    v73((char *)v14, 1, 1, v2);
    goto LABEL_35;
  }
  uint64_t v24 = v23;
  sub_25247A490();

  v21((char *)v14, v7, v2);
  v73((char *)v14, 0, 1, v2);
  if (v71((char *)v14, 1, v2) != 1)
  {
    v83[3] = v2;
    uint64_t v25 = __swift_allocate_boxed_opaque_existential_1(v83);
    uint64_t v66 = v21;
    unint64_t v67 = v3 + 32;
    v21((char *)v25, (char *)v14, v2);
    sub_25242CA24(v83, v84);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    id v26 = v75;
    id v27 = objc_msgSend(v75, sel_values);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C05680);
    uint64_t v28 = MEMORY[0x263F8D310];
    uint64_t v29 = sub_25247A770();

    uint64_t ObjectType = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05688);
    *(void *)&long long v81 = v29;
    sub_25242CA24(&v81, v83);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v81);
    id v30 = objc_msgSend(objc_msgSend(v26, sel_encryptedValues), sel_allKeys);
    swift_unknownObjectRelease();
    uint64_t v31 = sub_25247A9F0();

    uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05690);
    uint64_t v32 = *(void *)(v31 + 16);
    if (v32)
    {
      unint64_t v62 = v7;
      uint64_t v63 = v11;
      unint64_t v64 = v3;
      uint64_t v65 = v2;
      swift_bridgeObjectRetain();
      uint64_t v61 = v31;
      uint64_t v14 = (uint64_t *)(v31 + 40);
      uint64_t v33 = (void *)MEMORY[0x263F8EE80];
      unint64_t v3 = 0x265373000uLL;
      while (1)
      {
        unint64_t v16 = (char *)*(v14 - 1);
        uint64_t v35 = *v14;
        swift_bridgeObjectRetain_n();
        id v36 = objc_msgSend(v75, sel_encryptedValues, v61);
        BOOL v37 = (void *)sub_25247A830();
        uint64_t v2 = (uint64_t)objc_msgSend(v36, sel_objectForKeyedSubscript_, v37);
        swift_unknownObjectRelease();

        if (!v2)
        {
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        uint64_t ObjectType = swift_getObjectType();
        *(void *)&long long v81 = v2;
        sub_25242E180(&v81, &v76);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v80 = v33;
        unint64_t v40 = sub_252460D44((uint64_t)v16, v35);
        uint64_t v41 = v33[2];
        BOOL v42 = (v39 & 1) == 0;
        uint64_t v43 = v41 + v42;
        if (__OFADD__(v41, v42))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
        uint64_t v2 = v39;
        if (v33[3] >= v43)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v33 = v80;
            if (v39) {
              goto LABEL_7;
            }
          }
          else
          {
            sub_252462C14();
            uint64_t v33 = v80;
            if (v2) {
              goto LABEL_7;
            }
          }
        }
        else
        {
          sub_252461B6C(v43, isUniquelyReferenced_nonNull_native);
          unint64_t v44 = sub_252460D44((uint64_t)v16, v35);
          if ((v2 & 1) != (v45 & 1)) {
            goto LABEL_36;
          }
          unint64_t v40 = v44;
          uint64_t v33 = v80;
          if (v2)
          {
LABEL_7:
            id v34 = (_OWORD *)(v33[7] + 32 * v40);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
            sub_25242E180(&v76, v34);
            goto LABEL_8;
          }
        }
        v33[(v40 >> 6) + 8] |= 1 << v40;
        uint64_t v46 = (char **)(v33[6] + 16 * v40);
        char *v46 = v16;
        v46[1] = (char *)v35;
        sub_25242E180(&v76, (_OWORD *)(v33[7] + 32 * v40));
        uint64_t v47 = v33[2];
        BOOL v48 = __OFADD__(v47, 1);
        uint64_t v49 = v47 + 1;
        if (v48) {
          goto LABEL_30;
        }
        v33[2] = v49;
        swift_bridgeObjectRetain();
LABEL_8:
        v14 += 2;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        if (!--v32)
        {
          swift_bridgeObjectRelease();
          unint64_t v3 = v64;
          uint64_t v2 = v65;
          uint64_t v50 = v70;
          id v7 = v62;
          uint64_t v11 = v63;
          uint64_t v28 = MEMORY[0x263F8D310];
          goto LABEL_23;
        }
      }
    }
    uint64_t v33 = (void *)MEMORY[0x263F8EE80];
    uint64_t v50 = v70;
LABEL_23:
    swift_bridgeObjectRelease();
    *(void *)&long long v78 = v33;
    sub_25242CA24(&v78, (uint64_t *)&v81);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v78);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C05608);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25247FFC0;
    *(void *)(inited + 32) = 0x795464726F636572;
    *(void *)(inited + 40) = 0xEA00000000006570;
    *(void *)(inited + 72) = v28;
    *(void *)(inited + 80) = &off_27029B5D8;
    uint64_t v52 = v68;
    *(void *)(inited + 48) = v69;
    *(void *)(inited + 56) = v52;
    *(void *)(inited + 88) = 0x64657461657263;
    *(void *)(inited + 96) = 0xE700000000000000;
    sub_2523D918C((uint64_t)v85, inited + 104);
    *(void *)(inited + 144) = 0x6465696669646F6DLL;
    *(void *)(inited + 152) = 0xE800000000000000;
    sub_2523D918C((uint64_t)v84, inited + 160);
    *(void *)(inited + 200) = 0x7365756C6176;
    *(void *)(inited + 208) = 0xE600000000000000;
    sub_2523D918C((uint64_t)v83, inited + 216);
    *(void *)(inited + 256) = 0x6574707972636E65;
    *(void *)(inited + 264) = 0xE900000000000064;
    sub_2523D918C((uint64_t)&v81, inited + 272);
    unint64_t v53 = sub_2524282BC(inited);
    id v54 = objc_msgSend(v75, sel_expirationDate);
    if (v54)
    {
      int64_t v55 = v54;
      sub_25247A490();

      id v56 = v66;
      v66(v11, v7, v2);
      v73(v11, 0, 1, v2);
      if (v71(v11, 1, v2) != 1)
      {
        v56(v50, v11, v2);
        uint64_t v77 = v2;
        id v57 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v76);
        (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(v57, v50, v2);
        sub_25242CA24(&v76, (uint64_t *)&v78);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v76);
        sub_2523DFC24(&v78, (uint64_t)&v76);
        char v58 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v80 = (void *)v53;
        sub_25246EAE8(&v76, 0x73657269707865, 0xE700000000000000, v58);
        unint64_t v53 = (unint64_t)v80;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v50, v2);
LABEL_28:
        sub_2523E1254(0, &qword_269C05600);
        uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05610);
        *(void *)&long long v78 = v53;
        uint64_t v59 = sub_25242D0F0(&v78, 14);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v81);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v78);
        return v59;
      }
    }
    else
    {
      v73(v11, 1, 1, v2);
    }
    sub_2523D6FB8((uint64_t)v11, &qword_269C04AC8);
    goto LABEL_28;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  uint64_t result = sub_25247B2C0();
  __break(1u);
  return result;
}

uint64_t sub_25242CA24@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v57 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_25247A4B0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v49 - v9;
  sub_252415E78((uint64_t)a1, (uint64_t)v56);
  uint64_t v11 = MEMORY[0x263F8D310];
  if (swift_dynamicCast())
  {
    long long v12 = v53[0];
    a2[3] = v11;
    a2[4] = (uint64_t)&off_27029B5D8;
    *(_OWORD *)a2 = v12;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  }
  uint64_t v13 = MEMORY[0x263F8D6C8];
  if (swift_dynamicCast())
  {
    uint64_t v14 = *(void *)&v53[0];
    uint64_t v15 = &off_27029B5E0;
LABEL_7:
    a2[3] = v13;
    a2[4] = (uint64_t)v15;
    *a2 = v14;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  }
  uint64_t v13 = MEMORY[0x263F8D9D0];
  if (swift_dynamicCast())
  {
    uint64_t v14 = *(void *)&v53[0];
    uint64_t v15 = &off_27029B5E8;
    goto LABEL_7;
  }
  uint64_t v17 = MEMORY[0x263F8D5C8];
  if (swift_dynamicCast())
  {
    int v18 = v53[0];
    a2[3] = v17;
    a2[4] = (uint64_t)&off_27029B5F0;
    *(_DWORD *)a2 = v18;
  }
  else
  {
    uint64_t v19 = MEMORY[0x263F8D538];
    if (swift_dynamicCast())
    {
      uint64_t v20 = *(void *)&v53[0];
      a2[3] = v19;
      a2[4] = (uint64_t)&off_27029B5F8;
      *a2 = v20;
    }
    else if (swift_dynamicCast())
    {
      uint64_t v22 = v54;
      unint64_t v21 = v55;
      switch(v55 >> 62)
      {
        case 1uLL:
          uint64_t v31 = (int)v54;
          uint64_t v32 = v54 >> 32;
          goto LABEL_26;
        case 2uLL:
          uint64_t v31 = *(void *)(v54 + 16);
          uint64_t v32 = *(void *)(v54 + 24);
LABEL_26:
          if (v31 == v32) {
            goto LABEL_27;
          }
          goto LABEL_16;
        case 3uLL:
          goto LABEL_27;
        default:
          if ((v55 & 0xFF000000000000) != 0)
          {
LABEL_16:
            id v23 = self;
            uint64_t v24 = (void *)sub_25247A180();
            v49[0] = 0;
            id v25 = objc_msgSend(v23, sel_JSONObjectWithData_options_error_, v24, 0, v49);

            id v26 = v49[0];
            if (v25)
            {
              sub_25247AED0();
              swift_unknownObjectRelease();
              sub_25242E180(&v50, v53);
              sub_25242CA24(a2, v53);
              sub_2524081EC(v22, v21);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
            }
            else
            {
              uint64_t v39 = v26;
              unint64_t v40 = (void *)sub_25247A120();

              swift_willThrow();
              uint64_t v41 = sub_25247A190();
              uint64_t v43 = v42;
              a2[3] = v11;
              a2[4] = (uint64_t)&off_27029B5D8;
              sub_2524081EC(v22, v21);
              *a2 = v41;
              a2[1] = v43;
            }
          }
          else
          {
LABEL_27:
            a2[3] = v11;
            a2[4] = (uint64_t)&off_27029B5D8;
            sub_2524081EC(v22, v21);
            *a2 = 0;
            a2[1] = 0xE000000000000000;
          }
          break;
      }
    }
    else if (swift_dynamicCast())
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
      if (qword_269C04348 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_25247A430();
      __swift_project_value_buffer(v27, (uint64_t)qword_269C05590);
      uint64_t v28 = sub_25247A420();
      a2[3] = v11;
      a2[4] = (uint64_t)&off_27029B5D8;
      *a2 = v28;
      a2[1] = v29;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C05690);
      if (swift_dynamicCast())
      {
        uint64_t v30 = sub_25242E1B4(*(uint64_t *)&v53[0]);
        swift_bridgeObjectRelease();
        a2[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05610);
        a2[4] = (uint64_t)&off_27029B608;
        *a2 = v30;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_269C056A8);
        if (swift_dynamicCast())
        {
          sub_2523DFC24(v53, (uint64_t)&v50);
          uint64_t v33 = v51;
          id v34 = v52;
          uint64_t v35 = __swift_project_boxed_opaque_existential_1(&v50, (uint64_t)v51);
          MEMORY[0x270FA5388](v35);
          v49[-4] = v33;
          v49[-3] = v34;
          v49[-2] = sub_25242D364;
          v49[-1] = 0;
          id v36 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_269C056B0);
          uint64_t v38 = sub_25242D434((void (*)(char *, char *))sub_25242E190, (uint64_t)&v49[-6], (uint64_t)v33, v36, MEMORY[0x263F8E628], (uint64_t)v34, MEMORY[0x263F8E658], v37);
          a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269C056B8);
          a2[4] = (uint64_t)&off_27029B600;
          *a2 = v38;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
        }
        else
        {
          unint64_t v44 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
          MEMORY[0x270FA5388](v44);
          (*(void (**)(char *))(v46 + 16))((char *)v49 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
          uint64_t v47 = sub_25247A890();
          a2[3] = v11;
          a2[4] = (uint64_t)&off_27029B5D8;
          *a2 = v47;
          a2[1] = v48;
        }
      }
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
}

uint64_t sub_25242D0F0(void *a1, uint64_t a2)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_25247A880();
  MEMORY[0x270FA5388](v4 - 8);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  id v16 = 0;
  id v6 = objc_msgSend(ObjCClassFromMetadata, sel_dataWithJSONObject_options_error_, sub_25247B250(), a2, &v16);
  swift_unknownObjectRelease();
  id v7 = v16;
  if (v6)
  {
    uint64_t v8 = sub_25247A1A0();
    unint64_t v10 = v9;

    sub_25247A870();
    uint64_t v11 = sub_25247A860();
    if (v12)
    {
      uint64_t v13 = v11;
      sub_2524081EC(v8, v10);
      return v13;
    }
    id v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_25247AF40();
    swift_bridgeObjectRelease();
    id v16 = (id)0xD000000000000025;
    unint64_t v17 = 0x800000025247CD60;
    sub_25247A150();
    sub_25247A920();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = v7;
    sub_25247A120();

    swift_willThrow();
    id v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_25247AF40();
    sub_25247A920();
    swift_getErrorValue();
    sub_25247B240();
  }
  uint64_t result = sub_25247B0B0();
  __break(1u);
  return result;
}

uint64_t sub_25242D368(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[3] = AssociatedTypeWitness;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_1, a1, AssociatedTypeWitness);
  a2(v7);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t sub_25242D434(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  uint64_t v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  unint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_25247AE90();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  id v23 = (char *)&v40 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  unint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_25247A9A0();
  uint64_t v61 = sub_25247B020();
  uint64_t v56 = sub_25247B030();
  sub_25247AFE0();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  uint64_t v59 = v30;
  uint64_t result = sub_25247A990();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    id v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_25247AEA0();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_25247B010();
      if (!--v31)
      {
        uint64_t v35 = v54;
        id v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  id v36 = v51;
LABEL_9:
  sub_25247AEA0();
  unint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_25247B010();
      sub_25247AEA0();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t sub_25242DB30(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_25242DFD4(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_25247A950();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_25247A8F0();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_25247A8F0();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_25247A980();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_25241D658(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_25241D658((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_25247A8F0();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_25247A980();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_25241D658(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_25241D658((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    v13[2] = v39 + 1;
    unint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_25247B0A0();
  __break(1u);
LABEL_42:
  uint64_t result = sub_25247B0A0();
  __break(1u);
  return result;
}

uint64_t sub_25242DFD4(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_25247A980();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_25241D658(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_25241D658((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    void v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    void v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_25247B0A0();
  __break(1u);
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

_OWORD *sub_25242E180(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_25242E190(uint64_t a1)
{
  return sub_25242D368(a1, *(void (**)(uint64_t *))(v1 + 32));
}

uint64_t sub_25242E1B4(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C05698);
  uint64_t result = sub_25247B0D0();
  unint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v22 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v25 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    unint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_252415E78(*(void *)(a1 + 56) + 32 * i, (uint64_t)v24);
    swift_bridgeObjectRetain();
    sub_25242CA24(v23, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    *(void *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    char v18 = (void *)(v3[6] + 16 * i);
    *char v18 = v17;
    v18[1] = v16;
    uint64_t result = sub_2523DFC24(v23, v3[7] + 40 * i);
    uint64_t v19 = v3[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v21;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v12 >= v25) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v22 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v25) {
        return (uint64_t)v3;
      }
      unint64_t v13 = *(void *)(v22 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v25) {
          return (uint64_t)v3;
        }
        unint64_t v13 = *(void *)(v22 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v25) {
    return (uint64_t)v3;
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v25) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v22 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_25242E3D0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_25247B260() & 1;
  }
}

uint64_t sub_25242E428(void *a1)
{
  long long v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_25247B260() & 1;
  }
}

uint64_t sub_25242E480()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25242E4B8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t static HMVCommands.exit(_:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_25242E4E8, 0, 0);
}

uint64_t sub_25242E4E8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v5 = (uint64_t (*)(void))((char *)&dword_269C04588 + dword_269C04588);
  unint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *unint64_t v3 = v0;
  v3[1] = sub_2523D3B14;
  return v5();
}

void sub_25242E5BC(void *a1, uint64_t a2, uint64_t a3)
{
  v6[4] = sub_25242E8B0;
  v6[5] = a2;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 1107296256;
  uint64_t v6[2] = sub_25244C4D8;
  v6[3] = &block_descriptor_10;
  uint64_t v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_exitWithExitStatus_reply_, a3, v5);
  _Block_release(v5);
}

void sub_25242E694(void *a1, uint64_t a2)
{
  sub_25242E5BC(a1, a2, *(void *)(v2 + 16));
}

void sub_25242E69C(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    uint64_t v8 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_2523D380C;
    v9[6] = v7;
    id v10 = a1;
    swift_retain();
    id v11 = a1;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C049A8, (uint64_t)v9);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v12 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    unint64_t v13 = (void *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    void v13[4] = a2;
    v13[5] = sub_2523D3704;
    v13[6] = 0;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C04570, (uint64_t)v13);
    swift_release();
  }
}

void sub_25242E8B0(void *a1)
{
  sub_25242E69C(a1, v1);
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_25242E8D4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_25242E910()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F499C0]), sel_init);
  id v1 = objc_allocWithZone(MEMORY[0x263F49990]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C057C0);
  uint64_t v2 = (void *)sub_25247A9E0();
  id v3 = objc_msgSend(v1, sel_initWithDelegate_filters_, 0, v2);

  type metadata accessor for MetricsManager();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v0;
  *(void *)(v4 + 24) = v3;
  id result = objc_msgSend(v0, sel_addObserver_forProtocol_, v3, &unk_2702A1C30);
  off_269C056F0 = (_UNKNOWN *)v4;
  return result;
}

uint64_t static MetricsManager.sharedInstance.getter()
{
  if (qword_269C04350 != -1) {
    swift_once();
  }

  return swift_retain();
}

void MetricsManager.submitLogEvent(_:error:)(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRetain();
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void **)(v2 + 16);
    if (a2) {
      uint64_t v7 = sub_25247A110();
    }
    else {
      uint64_t v7 = 0;
    }
    id v8 = (id)v7;
    objc_msgSend(v6, sel_submitLogEvent_error_, v5);
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    sub_25247AF40();
    sub_25247A920();
    swift_getObjectType();
    sub_25247B240();
    sub_25247B0B0();
    __break(1u);
  }
}

uint64_t MetricsManager.deinit()
{
  swift_unknownObjectRelease();

  return v0;
}

uint64_t MetricsManager.__deallocating_deinit()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0228](v0, 32, 7);
}

uint64_t type metadata accessor for MetricsManager()
{
  return self;
}

uint64_t method lookup function for MetricsManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MetricsManager);
}

uint64_t SimpleAsyncCache.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  SimpleAsyncCache.init()();
  return v0;
}

uint64_t SimpleAsyncCache.init()()
{
  swift_defaultActor_initialize();
  *(void *)(v0 + 112) = sub_25247A740();
  return v0;
}

uint64_t SimpleAsyncCache.deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t SimpleAsyncCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return MEMORY[0x270FA2418](v0);
}

uint64_t SimpleAsyncCache.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_25242ED30()
{
  return SimpleAsyncCache.unownedExecutor.getter();
}

uint64_t SimpleAsyncCache.subscript.getter(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *v2;
  return MEMORY[0x270FA2498](sub_25242ED98, v2, 0);
}

uint64_t sub_25242ED98()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)v0[5];
  uint64_t v3 = v0[3];
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 112);
  uint64_t v5 = v2[10];
  uint64_t v6 = v2[11];
  uint64_t v7 = v2[12];
  swift_bridgeObjectRetain();
  MEMORY[0x2533B4A90](v3, v4, v5, v6, v7);
  swift_bridgeObjectRelease();
  id v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t SimpleAsyncCache.get(_:)()
{
  return sub_25247A7A0();
}

uint64_t sub_25242EF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v10 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v12 = (char *)&v15 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))((char *)&v15 - v11, a1, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(&v12[*(int *)(TupleTypeMetadata2 + 48)], a2, a5);
  char v13 = sub_25247AC90();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, TupleTypeMetadata2);
  return v13 & 1;
}

uint64_t SimpleAsyncCache.set(_:key:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(*v2 + 88);
  uint64_t v7 = sub_25247AE90();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = *(void *)(v5 + 80);
  MEMORY[0x270FA5388](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v16 - v12, a2, v11);
  uint64_t v14 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v10, a1, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v6);
  swift_beginAccess();
  sub_25247A7C0();
  sub_25247A7E0();
  return swift_endAccess();
}

uint64_t SimpleAsyncCache.clear(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 88);
  uint64_t v5 = sub_25247AE90();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(v3 + 80);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v13 - v10, a1, v9);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v8, 1, 1, v4);
  swift_beginAccess();
  sub_25247A7C0();
  sub_25247A7E0();
  return swift_endAccess();
}

uint64_t sub_25242F480(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  uint64_t v7[4] = v6;
  v7[1] = sub_2523D3928;
  v7[2] = a1;
  v7[5] = *v6;
  return MEMORY[0x270FA2498](sub_25242ED98, v6, 0);
}

uint64_t sub_25242F564(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_25242F584, v3, 0);
}

uint64_t sub_25242F584()
{
  uint64_t v1 = SimpleAsyncCache.get(_:)();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_25242F5E4(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = a2;
  uint64_t v4 = *v2;
  v3[4] = *v2;
  return MEMORY[0x270FA2498](sub_25242F608, v4, 0);
}

uint64_t sub_25242F608()
{
  SimpleAsyncCache.set(_:key:)(v0[2], v0[3]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25242F66C(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_25242F68C, v3, 0);
}

uint64_t sub_25242F68C()
{
  SimpleAsyncCache.clear(_:)(*(void *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25242F6EC(uint64_t a1, uint64_t a2)
{
  return sub_25242EF30(a1, a2, v2[5], v2[2], v2[3]) & 1;
}

uint64_t sub_25242F710()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for SimpleAsyncCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for SimpleAsyncCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SimpleAsyncCache);
}

uint64_t dispatch thunk of SimpleAsyncCache.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t static HMVCommands.registerForTaskWithIdentifier(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_25242F7C4, 0, 0);
}

uint64_t sub_25242F7C4()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = swift_task_alloc();
  v0[4] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C04588 + dword_269C04588);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_25241FE1C;
  return v6((uint64_t)v6, (uint64_t)sub_25242F984, v3);
}

void sub_25242F89C(void *a1, uint64_t a2)
{
  uint64_t v4 = (void *)sub_25247A830();
  v6[4] = sub_25242FBA0;
  v6[5] = a2;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 1107296256;
  uint64_t v6[2] = sub_25244C4D8;
  v6[3] = &block_descriptor_11;
  uint64_t v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilRegisterForTaskWithIdentifierWithIdentifier_reply_, v4, v5);
  _Block_release(v5);
}

void sub_25242F984(void *a1, uint64_t a2)
{
}

void sub_25242F98C(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    uint64_t v8 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_2523D380C;
    v9[6] = v7;
    id v10 = a1;
    swift_retain();
    id v11 = a1;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C049A8, (uint64_t)v9);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v12 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    void v13[4] = a2;
    v13[5] = sub_2523D3704;
    v13[6] = 0;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C04570, (uint64_t)v13);
    swift_release();
  }
}

void sub_25242FBA0(void *a1)
{
  sub_25242F98C(a1, v1);
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t sub_25242FBC4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void *static EventCategory.securityGroupCategories.getter()
{
  return &unk_270299468;
}

void *static EventCategory.allCases.getter()
{
  return &unk_270299580;
}

BOOL EventCategory.isIncludedInSecurityGroup.getter()
{
  uint64_t v1 = qword_2524802E0[*v0];
  return qword_2524802E0[byte_2702995F0] == v1
      || qword_2524802E0[byte_2702995F1] == v1
      || qword_2524802E0[byte_2702995F2] == v1;
}

HomeKitEvents::EventCategory_optional __swiftcall EventCategory.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue > 2)
  {
    if (rawValue == 255)
    {
      *uint64_t v1 = 3;
      return (HomeKitEvents::EventCategory_optional)rawValue;
    }
    if (rawValue == 3)
    {
      *uint64_t v1 = 2;
      return (HomeKitEvents::EventCategory_optional)rawValue;
    }
LABEL_8:
    *uint64_t v1 = 4;
    return (HomeKitEvents::EventCategory_optional)rawValue;
  }
  if (rawValue == 1)
  {
    *uint64_t v1 = 0;
    return (HomeKitEvents::EventCategory_optional)rawValue;
  }
  if (rawValue != 2) {
    goto LABEL_8;
  }
  *uint64_t v1 = 1;
  return (HomeKitEvents::EventCategory_optional)rawValue;
}

uint64_t EventCategory.rawValue.getter()
{
  return qword_2524802E0[*v0];
}

BOOL sub_25242FCE4(char *a1, char *a2)
{
  return qword_2524802E0[*a1] == qword_2524802E0[*a2];
}

HomeKitEvents::EventCategory_optional sub_25242FD08(Swift::Int *a1)
{
  return EventCategory.init(rawValue:)(*a1);
}

void sub_25242FD10(void *a1@<X8>)
{
  *a1 = qword_2524802E0[*v1];
}

uint64_t sub_25242FD28()
{
  return sub_25247A9D0();
}

uint64_t sub_25242FD88()
{
  return sub_25247A9C0();
}

uint64_t sub_25242FDD8()
{
  return sub_25247B390();
}

uint64_t sub_25242FE28()
{
  return sub_25247B360();
}

uint64_t sub_25242FE60()
{
  return sub_25247B390();
}

uint64_t static EventCategory.legacySecurityEventTag.getter()
{
  return 0;
}

void *static EventCategory.legacySecurityEventCategories.getter()
{
  return &unk_270299698;
}

BOOL EventCategory.isLegacySecurity.getter()
{
  uint64_t v1 = qword_2524802E0[*v0];
  return qword_2524802E0[byte_2702996E0] == v1
      || qword_2524802E0[byte_2702996E1] == v1
      || qword_2524802E0[byte_2702996E2] == v1;
}

BOOL EventCategory.isGroup.getter()
{
  return *v0 > 2u;
}

unint64_t sub_25242FF30()
{
  unint64_t result = qword_269C05878;
  if (!qword_269C05878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05878);
  }
  return result;
}

unint64_t sub_25242FF88()
{
  unint64_t result = qword_269C05880;
  if (!qword_269C05880)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C05888);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05880);
  }
  return result;
}

void sub_25242FFE4(void *a1@<X8>)
{
  *a1 = &unk_2702996E8;
}

unsigned char *storeEnumTagSinglePayload for EventCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2524300C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventCategory()
{
  return &type metadata for EventCategory;
}

unint64_t sub_2524300F8()
{
  unint64_t result = qword_269C05890;
  if (!qword_269C05890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05890);
  }
  return result;
}

BOOL static XPCConnectionError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t XPCConnectionError.hash(into:)()
{
  return sub_25247B360();
}

uint64_t XPCConnectionError.hashValue.getter()
{
  return sub_25247B390();
}

unint64_t sub_2524301DC()
{
  unint64_t result = qword_269C05898;
  if (!qword_269C05898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05898);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for XPCConnectionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2524302FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCConnectionError()
{
  return &type metadata for XPCConnectionError;
}

uint64_t AccessoryEventProtocol.accessoryNameLegacy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t SomeEvent.anyEvent.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x270FA5388](v4 - 8);
  unsigned int v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SomeEvent();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252430554(v2, (uint64_t)v9);
  sub_252431B34((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
  sub_25246F9FC(v19);
  uint64_t v10 = v20;
  uint64_t v11 = v21;
  uint64_t v12 = __swift_project_boxed_opaque_existential_1(v19, v20);
  uint64_t v23 = v10;
  uint64_t v24 = *(void *)(v11 + 16);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(boxed_opaque_existential_1, v12, v10);
  sub_2524305B8((uint64_t)v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  uint64_t v14 = v23;
  uint64_t v15 = v24;
  uint64_t v16 = __swift_project_boxed_opaque_existential_1(v22, v23);
  a1[3] = v14;
  a1[4] = *(void *)(v15 + 8);
  uint64_t v17 = __swift_allocate_boxed_opaque_existential_1(a1);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v17, v16, v14);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t type metadata accessor for SomeEvent()
{
  uint64_t result = qword_269C05900;
  if (!qword_269C05900) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_252430554(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SomeEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2524305B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SomeAccessoryEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SomeEvent.hash(into:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SomeEvent();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252430554(v1, (uint64_t)v5);
  sub_25247B360();
  SomeAccessoryEvent.hash(into:)(a1);
  return sub_2524305B8((uint64_t)v5);
}

uint64_t static SomeEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x270FA5388](v4 - 8);
  unsigned int v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C058A0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_252430554(a1, (uint64_t)v10);
  sub_252430554(a2, v11);
  sub_252431B34((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
  LOBYTE(a2) = _s13HomeKitEvents18SomeAccessoryEventO2eeoiySbAC_ACtFZ_0((uint64_t)v6, v11);
  sub_2524305B8(v11);
  sub_2524305B8((uint64_t)v6);
  return a2 & 1;
}

uint64_t sub_2524307E0()
{
  return 12383;
}

uint64_t sub_2524307EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_25247B260();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_25243086C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_252430878(uint64_t a1)
{
  unint64_t v2 = sub_252431AE0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2524308B4(uint64_t a1)
{
  unint64_t v2 = sub_252431AE0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2524308F0()
{
  return 0x726F737365636361;
}

uint64_t sub_25243090C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x726F737365636361 && a2 == 0xE900000000000079)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_25247B260();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2524309B0(uint64_t a1)
{
  unint64_t v2 = sub_252431A8C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2524309EC(uint64_t a1)
{
  unint64_t v2 = sub_252431A8C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SomeEvent.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C058A8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v19 = v2;
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x270FA5388](v18);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SomeEvent();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C058B0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252431A8C();
  sub_25247B3B0();
  sub_252430554(v17, (uint64_t)v10);
  sub_252431B34((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
  sub_252431AE0();
  sub_25247B1A0();
  sub_252431BE4(&qword_269C058C8, (void (*)(uint64_t))type metadata accessor for SomeAccessoryEvent);
  uint64_t v15 = v19;
  sub_25247B1D0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v15);
  sub_2524305B8((uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t SomeEvent.hashValue.getter()
{
  uint64_t v1 = type metadata accessor for SomeEvent();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_25247B350();
  sub_252430554(v0, (uint64_t)v3);
  sub_25247B360();
  SomeAccessoryEvent.hash(into:)((uint64_t)v6);
  sub_2524305B8((uint64_t)v3);
  return sub_25247B390();
}

uint64_t SomeEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = type metadata accessor for SomeEvent();
  MEMORY[0x270FA5388](v3);
  char v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C058D0);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C058D8);
  uint64_t v24 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_252431A8C();
  uint64_t v28 = v10;
  uint64_t v11 = v27;
  sub_25247B3A0();
  if (!v11)
  {
    unint64_t v27 = a1;
    uint64_t v12 = v25;
    uint64_t v13 = v26;
    uint64_t v14 = sub_25247B190();
    uint64_t v15 = *(void *)(v14 + 16);
    uint64_t v22 = v14;
    if (v15 == 1)
    {
      sub_252431AE0();
      sub_25247B140();
      uint64_t v16 = v24;
      type metadata accessor for SomeAccessoryEvent();
      sub_252431BE4(&qword_269C058E8, (void (*)(uint64_t))type metadata accessor for SomeAccessoryEvent);
      sub_25247B180();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v6);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v28, v13);
      a1 = v27;
      sub_252431B34((uint64_t)v5, v23, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    }
    else
    {
      uint64_t v17 = sub_25247AFA0();
      swift_allocError();
      uint64_t v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C058E0);
      uint64_t *v19 = v3;
      sub_25247B150();
      sub_25247AF90();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x263F8DCB0], v17);
      swift_willThrow();
      uint64_t v20 = v24;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v13);
      a1 = v27;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2524311A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SomeEvent.init(from:)(a1, a2);
}

uint64_t sub_2524311BC(void *a1)
{
  return SomeEvent.encode(to:)(a1);
}

uint64_t sub_2524311D4(uint64_t a1)
{
  MEMORY[0x270FA5388](a1 - 8);
  uint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_25247B350();
  sub_252430554(v1, (uint64_t)v3);
  sub_25247B360();
  SomeAccessoryEvent.hash(into:)((uint64_t)v6);
  sub_2524305B8((uint64_t)v3);
  return sub_25247B390();
}

uint64_t sub_252431274(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252430554(v1, (uint64_t)v4);
  sub_25247B360();
  SomeAccessoryEvent.hash(into:)(a1);
  return sub_2524305B8((uint64_t)v4);
}

uint64_t sub_252431308(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_25247B350();
  sub_252430554(v1, (uint64_t)v3);
  sub_25247B360();
  SomeAccessoryEvent.hash(into:)((uint64_t)v6);
  sub_2524305B8((uint64_t)v3);
  return sub_25247B390();
}

uint64_t sub_2524313A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C058A0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_252430554(a1, (uint64_t)v10);
  sub_252430554(a2, v11);
  sub_252431B34((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
  LOBYTE(a2) = static SomeAccessoryEvent.== infix(_:_:)((uint64_t)v6, v11);
  sub_2524305B8(v11);
  sub_2524305B8((uint64_t)v6);
  return a2 & 1;
}

uint64_t SomeEvent.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SomeEvent();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2523D918C(a1, (uint64_t)v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04AE8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04AF0);
  if (swift_dynamicCast())
  {
    sub_2523DFC24(&v16, (uint64_t)v13);
    uint64_t v7 = v14;
    uint64_t v8 = __swift_project_boxed_opaque_existential_1(v13, v14);
    MEMORY[0x270FA5388](v8);
    uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v11 + 16))(v10);
    SomeAccessoryEvent.init<A>(_:)(v10, v7, (uint64_t)v6);
    __swift_destroy_boxed_opaque_existential_1(a1);
    sub_252431B34((uint64_t)v6, a2, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    sub_2523D918C(a1, (uint64_t)&v16);
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    sub_25247AF40();
    sub_25247A920();
    uint64_t v15 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C058F0);
    sub_25247A890();
    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_25247A920();
    __swift_project_boxed_opaque_existential_1(&v16, v17);
    sub_25247B240();
    uint64_t result = sub_25247B0B0();
    __break(1u);
  }
  return result;
}

uint64_t SomeEvent.isLegacySecurityEvent.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SomeEvent();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252430554(v1, (uint64_t)v7);
  sub_252431B34((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
  sub_25246F9FC(v14);
  uint64_t v8 = v15;
  uint64_t v9 = v16;
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(v14, v15);
  v17[3] = v8;
  uint64_t v11 = *(void *)(v9 + 16);
  void v17[4] = v11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_1, v10, v8);
  sub_2524305B8((uint64_t)v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  LOBYTE(v8) = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v8, v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v8 & 1;
}

uint64_t SomeEvent.tags.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SomeEvent();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252430554(v1, (uint64_t)v7);
  sub_252431B34((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
  sub_25246F9FC(v15);
  uint64_t v8 = v16;
  uint64_t v9 = v17;
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(v15, v16);
  v18[3] = v8;
  uint64_t v11 = *(void *)(v9 + 16);
  void v18[4] = v11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_1, v10, v8);
  sub_2524305B8((uint64_t)v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(v8, v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return v13;
}

unint64_t sub_252431A8C()
{
  unint64_t result = qword_269C058B8;
  if (!qword_269C058B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C058B8);
  }
  return result;
}

unint64_t sub_252431AE0()
{
  unint64_t result = qword_269C058C0;
  if (!qword_269C058C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C058C0);
  }
  return result;
}

uint64_t sub_252431B34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_252431B9C()
{
  return sub_252431BE4(&qword_269C058F8, (void (*)(uint64_t))type metadata accessor for SomeEvent);
}

uint64_t sub_252431BE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SomeEvent(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    a1 = (void *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for SomeAccessoryEvent();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v32 = sub_25247A4B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
        uint64_t v33 = type metadata accessor for EventBase(0);
        uint64_t v34 = *(int *)(v33 + 20);
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        uint64_t v37 = sub_25247A540();
        uint64_t v38 = *(void *)(v37 - 8);
        unint64_t v39 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
        v39(v35, v36, v37);
        *((unsigned char *)a1 + *(int *)(v33 + 24)) = *((unsigned char *)a2 + *(int *)(v33 + 24));
        unint64_t v40 = (int *)type metadata accessor for AccessoryEventBase(0);
        v39((char *)a1 + v40[5], (char *)a2 + v40[5], v37);
        uint64_t v41 = v40[6];
        uint64_t v42 = (void *)((char *)a1 + v41);
        uint64_t v43 = (void *)((char *)a2 + v41);
        uint64_t v44 = v43[1];
        *uint64_t v42 = *v43;
        v42[1] = v44;
        uint64_t v45 = v40[7];
        uint64_t v46 = (char *)a1 + v45;
        uint64_t v47 = (char *)a2 + v45;
        swift_bridgeObjectRetain();
        v39(v46, v47, v37);
        uint64_t v48 = v40[8];
        uint64_t v49 = (void *)((char *)a1 + v48);
        uint64_t v50 = (void *)((char *)a2 + v48);
        uint64_t v51 = v50[1];
        void *v49 = *v50;
        v49[1] = v51;
        uint64_t v52 = v40[9];
        unint64_t v53 = (char *)a1 + v52;
        uint64_t v54 = (char *)a2 + v52;
        unint64_t v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
        swift_bridgeObjectRetain();
        if (v55(v54, 1, v37))
        {
          uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          v39(v53, v54, v37);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v53, 0, 1, v37);
        }
        uint64_t v183 = type metadata accessor for DoorEvent();
        *((unsigned char *)a1 + *(int *)(v183 + 20)) = *((unsigned char *)a2 + *(int *)(v183 + 20));
        break;
      case 2u:
        uint64_t v57 = sub_25247A4B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v57 - 8) + 16))(a1, a2, v57);
        uint64_t v58 = type metadata accessor for EventBase(0);
        uint64_t v59 = *(int *)(v58 + 20);
        uint64_t v60 = (char *)a1 + v59;
        uint64_t v61 = (char *)a2 + v59;
        uint64_t v62 = sub_25247A540();
        uint64_t v63 = *(void *)(v62 - 8);
        unint64_t v64 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
        v64(v60, v61, v62);
        *((unsigned char *)a1 + *(int *)(v58 + 24)) = *((unsigned char *)a2 + *(int *)(v58 + 24));
        uint64_t v65 = (int *)type metadata accessor for AccessoryEventBase(0);
        v64((char *)a1 + v65[5], (char *)a2 + v65[5], v62);
        uint64_t v66 = v65[6];
        unint64_t v67 = (void *)((char *)a1 + v66);
        uint64_t v68 = (void *)((char *)a2 + v66);
        uint64_t v69 = v68[1];
        *unint64_t v67 = *v68;
        v67[1] = v69;
        uint64_t v70 = v65[7];
        uint64_t v71 = (char *)a1 + v70;
        unint64_t v72 = (char *)a2 + v70;
        swift_bridgeObjectRetain();
        v64(v71, v72, v62);
        uint64_t v73 = v65[8];
        unint64_t v74 = (void *)((char *)a1 + v73);
        id v75 = (void *)((char *)a2 + v73);
        uint64_t v76 = v75[1];
        *unint64_t v74 = *v75;
        v74[1] = v76;
        uint64_t v77 = v65[9];
        long long v78 = (char *)a1 + v77;
        uint64_t v79 = (char *)a2 + v77;
        uint64_t v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
        swift_bridgeObjectRetain();
        if (v80(v79, 1, v62))
        {
          uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          v64(v78, v79, v62);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v78, 0, 1, v62);
        }
        uint64_t v184 = type metadata accessor for GarageDoorEvent();
        *((unsigned char *)a1 + *(int *)(v184 + 20)) = *((unsigned char *)a2 + *(int *)(v184 + 20));
        break;
      case 3u:
        uint64_t v82 = sub_25247A4B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v82 - 8) + 16))(a1, a2, v82);
        uint64_t v83 = type metadata accessor for EventBase(0);
        uint64_t v84 = *(int *)(v83 + 20);
        uint64_t v85 = (char *)a1 + v84;
        uint64_t v86 = (char *)a2 + v84;
        uint64_t v87 = sub_25247A540();
        uint64_t v88 = *(void *)(v87 - 8);
        uint64_t v89 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
        v89(v85, v86, v87);
        *((unsigned char *)a1 + *(int *)(v83 + 24)) = *((unsigned char *)a2 + *(int *)(v83 + 24));
        unint64_t v90 = (int *)type metadata accessor for AccessoryEventBase(0);
        v89((char *)a1 + v90[5], (char *)a2 + v90[5], v87);
        uint64_t v91 = v90[6];
        uint64_t v92 = (void *)((char *)a1 + v91);
        uint64_t v93 = (void *)((char *)a2 + v91);
        uint64_t v94 = v93[1];
        *uint64_t v92 = *v93;
        v92[1] = v94;
        uint64_t v95 = v90[7];
        uint64_t v96 = (char *)a1 + v95;
        uint64_t v97 = (char *)a2 + v95;
        swift_bridgeObjectRetain();
        v89(v96, v97, v87);
        uint64_t v98 = v90[8];
        int v99 = (void *)((char *)a1 + v98);
        uint64_t v100 = (void *)((char *)a2 + v98);
        uint64_t v101 = v100[1];
        void *v99 = *v100;
        v99[1] = v101;
        uint64_t v102 = v90[9];
        uint64_t v103 = (char *)a1 + v102;
        unint64_t v104 = (char *)a2 + v102;
        os_log_t v105 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
        swift_bridgeObjectRetain();
        if (v105(v104, 1, v87))
        {
          uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v103, v104, *(void *)(*(void *)(v106 - 8) + 64));
        }
        else
        {
          v89(v103, v104, v87);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v103, 0, 1, v87);
        }
        uint64_t v185 = type metadata accessor for LockEvent();
        *((unsigned char *)a1 + *(int *)(v185 + 20)) = *((unsigned char *)a2 + *(int *)(v185 + 20));
        break;
      case 4u:
        uint64_t v107 = sub_25247A4B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v107 - 8) + 16))(a1, a2, v107);
        uint64_t v108 = type metadata accessor for EventBase(0);
        uint64_t v109 = *(int *)(v108 + 20);
        uint64_t v110 = (char *)a1 + v109;
        uint64_t v111 = (char *)a2 + v109;
        uint64_t v112 = sub_25247A540();
        uint64_t v113 = *(void *)(v112 - 8);
        unint64_t v114 = *(void (**)(char *, char *, uint64_t))(v113 + 16);
        v114(v110, v111, v112);
        *((unsigned char *)a1 + *(int *)(v108 + 24)) = *((unsigned char *)a2 + *(int *)(v108 + 24));
        uint64_t v115 = (int *)type metadata accessor for AccessoryEventBase(0);
        v114((char *)a1 + v115[5], (char *)a2 + v115[5], v112);
        uint64_t v116 = v115[6];
        uint64_t v117 = (void *)((char *)a1 + v116);
        uint64_t v118 = (void *)((char *)a2 + v116);
        uint64_t v119 = v118[1];
        *uint64_t v117 = *v118;
        v117[1] = v119;
        uint64_t v120 = v115[7];
        uint64_t v121 = (char *)a1 + v120;
        uint64_t v122 = (char *)a2 + v120;
        swift_bridgeObjectRetain();
        v114(v121, v122, v112);
        uint64_t v123 = v115[8];
        os_log_t v124 = (void *)((char *)a1 + v123);
        uint64_t v125 = (void *)((char *)a2 + v123);
        uint64_t v126 = v125[1];
        void *v124 = *v125;
        v124[1] = v126;
        uint64_t v127 = v115[9];
        unint64_t v128 = (char *)a1 + v127;
        uint64_t v129 = (char *)a2 + v127;
        uint64_t v130 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48);
        swift_bridgeObjectRetain();
        if (v130(v129, 1, v112))
        {
          uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v128, v129, *(void *)(*(void *)(v131 - 8) + 64));
        }
        else
        {
          v114(v128, v129, v112);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v128, 0, 1, v112);
        }
        uint64_t v186 = type metadata accessor for SecuritySystemEvent();
        *((unsigned char *)a1 + *(int *)(v186 + 20)) = *((unsigned char *)a2 + *(int *)(v186 + 20));
        break;
      case 5u:
        uint64_t v132 = sub_25247A4B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v132 - 8) + 16))(a1, a2, v132);
        uint64_t v133 = type metadata accessor for EventBase(0);
        uint64_t v134 = *(int *)(v133 + 20);
        uint64_t v135 = (char *)a1 + v134;
        os_log_t v136 = (char *)a2 + v134;
        uint64_t v137 = sub_25247A540();
        uint64_t v138 = *(void *)(v137 - 8);
        uint64_t v139 = *(void (**)(char *, char *, uint64_t))(v138 + 16);
        v139(v135, v136, v137);
        *((unsigned char *)a1 + *(int *)(v133 + 24)) = *((unsigned char *)a2 + *(int *)(v133 + 24));
        unint64_t v140 = (int *)type metadata accessor for AccessoryEventBase(0);
        v139((char *)a1 + v140[5], (char *)a2 + v140[5], v137);
        uint64_t v141 = v140[6];
        uint64_t v142 = (void *)((char *)a1 + v141);
        uint64_t v143 = (void *)((char *)a2 + v141);
        uint64_t v144 = v143[1];
        *uint64_t v142 = *v143;
        v142[1] = v144;
        uint64_t v145 = v140[7];
        uint64_t v146 = (char *)a1 + v145;
        os_log_type_t v147 = (char *)a2 + v145;
        swift_bridgeObjectRetain();
        v139(v146, v147, v137);
        uint64_t v148 = v140[8];
        uint64_t v149 = (void *)((char *)a1 + v148);
        uint64_t v150 = (void *)((char *)a2 + v148);
        uint64_t v151 = v150[1];
        void *v149 = *v150;
        v149[1] = v151;
        uint64_t v152 = v140[9];
        os_log_t v153 = (char *)a1 + v152;
        uint64_t v154 = (char *)a2 + v152;
        uint64_t v155 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v138 + 48);
        swift_bridgeObjectRetain();
        if (v155(v154, 1, v137))
        {
          uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v153, v154, *(void *)(*(void *)(v156 - 8) + 64));
        }
        else
        {
          v139(v153, v154, v137);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v138 + 56))(v153, 0, 1, v137);
        }
        uint64_t v187 = type metadata accessor for SmokeDetectorEvent();
        *((unsigned char *)a1 + *(int *)(v187 + 20)) = *((unsigned char *)a2 + *(int *)(v187 + 20));
        break;
      case 6u:
        uint64_t v157 = sub_25247A4B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v157 - 8) + 16))(a1, a2, v157);
        uint64_t v158 = type metadata accessor for EventBase(0);
        uint64_t v159 = *(int *)(v158 + 20);
        os_log_t v160 = (char *)a1 + v159;
        uint64_t v161 = (char *)a2 + v159;
        uint64_t v162 = sub_25247A540();
        uint64_t v163 = *(void *)(v162 - 8);
        uint64_t v164 = *(void (**)(char *, char *, uint64_t))(v163 + 16);
        v164(v160, v161, v162);
        *((unsigned char *)a1 + *(int *)(v158 + 24)) = *((unsigned char *)a2 + *(int *)(v158 + 24));
        uint64_t v165 = (int *)type metadata accessor for AccessoryEventBase(0);
        v164((char *)a1 + v165[5], (char *)a2 + v165[5], v162);
        uint64_t v166 = v165[6];
        uint64_t v167 = (void *)((char *)a1 + v166);
        uint64_t v168 = (void *)((char *)a2 + v166);
        uint64_t v169 = v168[1];
        *uint64_t v167 = *v168;
        v167[1] = v169;
        uint64_t v170 = v165[7];
        uint64_t v171 = (char *)a1 + v170;
        unint64_t v172 = (char *)a2 + v170;
        swift_bridgeObjectRetain();
        v164(v171, v172, v162);
        uint64_t v173 = v165[8];
        uint64_t v174 = (void *)((char *)a1 + v173);
        uint64_t v175 = (void *)((char *)a2 + v173);
        uint64_t v176 = v175[1];
        *uint64_t v174 = *v175;
        v174[1] = v176;
        uint64_t v177 = v165[9];
        unint64_t v178 = (char *)a1 + v177;
        uint64_t v179 = (char *)a2 + v177;
        unint64_t v180 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48);
        swift_bridgeObjectRetain();
        if (v180(v179, 1, v162))
        {
          uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v178, v179, *(void *)(*(void *)(v181 - 8) + 64));
        }
        else
        {
          v164(v178, v179, v162);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v163 + 56))(v178, 0, 1, v162);
        }
        uint64_t v188 = type metadata accessor for WindowEvent();
        *((unsigned char *)a1 + *(int *)(v188 + 20)) = *((unsigned char *)a2 + *(int *)(v188 + 20));
        break;
      default:
        uint64_t v6 = sub_25247A4B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = type metadata accessor for EventBase(0);
        uint64_t v8 = *(int *)(v7 + 20);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_25247A540();
        uint64_t v12 = *(void *)(v11 - 8);
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
        v13(v9, v10, v11);
        *((unsigned char *)a1 + *(int *)(v7 + 24)) = *((unsigned char *)a2 + *(int *)(v7 + 24));
        uint64_t v14 = (int *)type metadata accessor for AccessoryEventBase(0);
        v13((char *)a1 + v14[5], (char *)a2 + v14[5], v11);
        uint64_t v15 = v14[6];
        uint64_t v16 = (void *)((char *)a1 + v15);
        uint64_t v17 = (void *)((char *)a2 + v15);
        uint64_t v18 = v17[1];
        *uint64_t v16 = *v17;
        v16[1] = v18;
        uint64_t v19 = v14[7];
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        swift_bridgeObjectRetain();
        v13(v20, v21, v11);
        uint64_t v22 = v14[8];
        uint64_t v23 = (void *)((char *)a1 + v22);
        uint64_t v24 = (void *)((char *)a2 + v22);
        uint64_t v25 = v24[1];
        *uint64_t v23 = *v24;
        v23[1] = v25;
        uint64_t v26 = v14[9];
        unint64_t v27 = (char *)a1 + v26;
        uint64_t v28 = (char *)a2 + v26;
        uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
        swift_bridgeObjectRetain();
        if (v29(v28, 1, v11))
        {
          uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          v13(v27, v28, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v11);
        }
        uint64_t v182 = type metadata accessor for ContactSensorEvent();
        *((unsigned char *)a1 + *(int *)(v182 + 20)) = *((unsigned char *)a2 + *(int *)(v182 + 20));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SomeEvent(uint64_t a1)
{
  type metadata accessor for SomeAccessoryEvent();
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      uint64_t v3 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      uint64_t v4 = a1 + *(int *)(type metadata accessor for EventBase(0) + 20);
      uint64_t v5 = sub_25247A540();
      uint64_t v6 = *(void *)(v5 - 8);
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v9(v4, v5);
      uint64_t v7 = (int *)type metadata accessor for AccessoryEventBase(0);
      v9(a1 + v7[5], v5);
      swift_bridgeObjectRelease();
      v9(a1 + v7[7], v5);
      swift_bridgeObjectRelease();
      uint64_t v8 = a1 + v7[9];
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5);
      if (!result)
      {
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v5);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for SomeEvent(uint64_t a1, uint64_t a2)
{
  type metadata accessor for SomeAccessoryEvent();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v29 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
      uint64_t v30 = type metadata accessor for EventBase(0);
      uint64_t v31 = *(int *)(v30 + 20);
      uint64_t v32 = (void *)(a1 + v31);
      uint64_t v33 = (const void *)(a2 + v31);
      uint64_t v34 = sub_25247A540();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = *(void (**)(void *, const void *, uint64_t))(v35 + 16);
      v36(v32, v33, v34);
      *(unsigned char *)(a1 + *(int *)(v30 + 24)) = *(unsigned char *)(a2 + *(int *)(v30 + 24));
      uint64_t v37 = (int *)type metadata accessor for AccessoryEventBase(0);
      v36((void *)(a1 + v37[5]), (const void *)(a2 + v37[5]), v34);
      uint64_t v38 = v37[6];
      unint64_t v39 = (void *)(a1 + v38);
      unint64_t v40 = (void *)(a2 + v38);
      uint64_t v41 = v40[1];
      *unint64_t v39 = *v40;
      v39[1] = v41;
      uint64_t v42 = v37[7];
      uint64_t v43 = (void *)(a1 + v42);
      uint64_t v44 = (const void *)(a2 + v42);
      swift_bridgeObjectRetain();
      v36(v43, v44, v34);
      uint64_t v45 = v37[8];
      uint64_t v46 = (void *)(a1 + v45);
      uint64_t v47 = (void *)(a2 + v45);
      uint64_t v48 = v47[1];
      void *v46 = *v47;
      v46[1] = v48;
      uint64_t v49 = v37[9];
      uint64_t v50 = (void *)(a1 + v49);
      uint64_t v51 = (const void *)(a2 + v49);
      uint64_t v52 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48);
      swift_bridgeObjectRetain();
      if (v52(v51, 1, v34))
      {
        uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        v36(v50, v51, v34);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v50, 0, 1, v34);
      }
      uint64_t v179 = type metadata accessor for DoorEvent();
      break;
    case 2u:
      uint64_t v54 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(a1, a2, v54);
      uint64_t v55 = type metadata accessor for EventBase(0);
      uint64_t v56 = *(int *)(v55 + 20);
      uint64_t v57 = (void *)(a1 + v56);
      uint64_t v58 = (const void *)(a2 + v56);
      uint64_t v59 = sub_25247A540();
      uint64_t v60 = *(void *)(v59 - 8);
      uint64_t v61 = *(void (**)(void *, const void *, uint64_t))(v60 + 16);
      v61(v57, v58, v59);
      *(unsigned char *)(a1 + *(int *)(v55 + 24)) = *(unsigned char *)(a2 + *(int *)(v55 + 24));
      uint64_t v62 = (int *)type metadata accessor for AccessoryEventBase(0);
      v61((void *)(a1 + v62[5]), (const void *)(a2 + v62[5]), v59);
      uint64_t v63 = v62[6];
      unint64_t v64 = (void *)(a1 + v63);
      uint64_t v65 = (void *)(a2 + v63);
      uint64_t v66 = v65[1];
      *unint64_t v64 = *v65;
      v64[1] = v66;
      uint64_t v67 = v62[7];
      uint64_t v68 = (void *)(a1 + v67);
      uint64_t v69 = (const void *)(a2 + v67);
      swift_bridgeObjectRetain();
      v61(v68, v69, v59);
      uint64_t v70 = v62[8];
      uint64_t v71 = (void *)(a1 + v70);
      unint64_t v72 = (void *)(a2 + v70);
      uint64_t v73 = v72[1];
      *uint64_t v71 = *v72;
      v71[1] = v73;
      uint64_t v74 = v62[9];
      id v75 = (void *)(a1 + v74);
      uint64_t v76 = (const void *)(a2 + v74);
      uint64_t v77 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v60 + 48);
      swift_bridgeObjectRetain();
      if (v77(v76, 1, v59))
      {
        uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        v61(v75, v76, v59);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v75, 0, 1, v59);
      }
      uint64_t v179 = type metadata accessor for GarageDoorEvent();
      break;
    case 3u:
      uint64_t v79 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 16))(a1, a2, v79);
      uint64_t v80 = type metadata accessor for EventBase(0);
      uint64_t v81 = *(int *)(v80 + 20);
      uint64_t v82 = (void *)(a1 + v81);
      uint64_t v83 = (const void *)(a2 + v81);
      uint64_t v84 = sub_25247A540();
      uint64_t v85 = *(void *)(v84 - 8);
      uint64_t v86 = *(void (**)(void *, const void *, uint64_t))(v85 + 16);
      v86(v82, v83, v84);
      *(unsigned char *)(a1 + *(int *)(v80 + 24)) = *(unsigned char *)(a2 + *(int *)(v80 + 24));
      uint64_t v87 = (int *)type metadata accessor for AccessoryEventBase(0);
      v86((void *)(a1 + v87[5]), (const void *)(a2 + v87[5]), v84);
      uint64_t v88 = v87[6];
      uint64_t v89 = (void *)(a1 + v88);
      unint64_t v90 = (void *)(a2 + v88);
      uint64_t v91 = v90[1];
      *uint64_t v89 = *v90;
      v89[1] = v91;
      uint64_t v92 = v87[7];
      uint64_t v93 = (void *)(a1 + v92);
      uint64_t v94 = (const void *)(a2 + v92);
      swift_bridgeObjectRetain();
      v86(v93, v94, v84);
      uint64_t v95 = v87[8];
      uint64_t v96 = (void *)(a1 + v95);
      uint64_t v97 = (void *)(a2 + v95);
      uint64_t v98 = v97[1];
      *uint64_t v96 = *v97;
      v96[1] = v98;
      uint64_t v99 = v87[9];
      uint64_t v100 = (void *)(a1 + v99);
      uint64_t v101 = (const void *)(a2 + v99);
      uint64_t v102 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v85 + 48);
      swift_bridgeObjectRetain();
      if (v102(v101, 1, v84))
      {
        uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v100, v101, *(void *)(*(void *)(v103 - 8) + 64));
      }
      else
      {
        v86(v100, v101, v84);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v85 + 56))(v100, 0, 1, v84);
      }
      uint64_t v179 = type metadata accessor for LockEvent();
      break;
    case 4u:
      uint64_t v104 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 16))(a1, a2, v104);
      uint64_t v105 = type metadata accessor for EventBase(0);
      uint64_t v106 = *(int *)(v105 + 20);
      uint64_t v107 = (void *)(a1 + v106);
      uint64_t v108 = (const void *)(a2 + v106);
      uint64_t v109 = sub_25247A540();
      uint64_t v110 = *(void *)(v109 - 8);
      uint64_t v111 = *(void (**)(void *, const void *, uint64_t))(v110 + 16);
      v111(v107, v108, v109);
      *(unsigned char *)(a1 + *(int *)(v105 + 24)) = *(unsigned char *)(a2 + *(int *)(v105 + 24));
      uint64_t v112 = (int *)type metadata accessor for AccessoryEventBase(0);
      v111((void *)(a1 + v112[5]), (const void *)(a2 + v112[5]), v109);
      uint64_t v113 = v112[6];
      unint64_t v114 = (void *)(a1 + v113);
      uint64_t v115 = (void *)(a2 + v113);
      uint64_t v116 = v115[1];
      *unint64_t v114 = *v115;
      v114[1] = v116;
      uint64_t v117 = v112[7];
      uint64_t v118 = (void *)(a1 + v117);
      uint64_t v119 = (const void *)(a2 + v117);
      swift_bridgeObjectRetain();
      v111(v118, v119, v109);
      uint64_t v120 = v112[8];
      uint64_t v121 = (void *)(a1 + v120);
      uint64_t v122 = (void *)(a2 + v120);
      uint64_t v123 = v122[1];
      void *v121 = *v122;
      v121[1] = v123;
      uint64_t v124 = v112[9];
      uint64_t v125 = (void *)(a1 + v124);
      uint64_t v126 = (const void *)(a2 + v124);
      uint64_t v127 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v110 + 48);
      swift_bridgeObjectRetain();
      if (v127(v126, 1, v109))
      {
        uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v125, v126, *(void *)(*(void *)(v128 - 8) + 64));
      }
      else
      {
        v111(v125, v126, v109);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v110 + 56))(v125, 0, 1, v109);
      }
      uint64_t v179 = type metadata accessor for SecuritySystemEvent();
      break;
    case 5u:
      uint64_t v129 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 16))(a1, a2, v129);
      uint64_t v130 = type metadata accessor for EventBase(0);
      uint64_t v131 = *(int *)(v130 + 20);
      uint64_t v132 = (void *)(a1 + v131);
      uint64_t v133 = (const void *)(a2 + v131);
      uint64_t v134 = sub_25247A540();
      uint64_t v135 = *(void *)(v134 - 8);
      os_log_t v136 = *(void (**)(void *, const void *, uint64_t))(v135 + 16);
      v136(v132, v133, v134);
      *(unsigned char *)(a1 + *(int *)(v130 + 24)) = *(unsigned char *)(a2 + *(int *)(v130 + 24));
      uint64_t v137 = (int *)type metadata accessor for AccessoryEventBase(0);
      v136((void *)(a1 + v137[5]), (const void *)(a2 + v137[5]), v134);
      uint64_t v138 = v137[6];
      uint64_t v139 = (void *)(a1 + v138);
      unint64_t v140 = (void *)(a2 + v138);
      uint64_t v141 = v140[1];
      *uint64_t v139 = *v140;
      v139[1] = v141;
      uint64_t v142 = v137[7];
      uint64_t v143 = (void *)(a1 + v142);
      uint64_t v144 = (const void *)(a2 + v142);
      swift_bridgeObjectRetain();
      v136(v143, v144, v134);
      uint64_t v145 = v137[8];
      uint64_t v146 = (void *)(a1 + v145);
      os_log_type_t v147 = (void *)(a2 + v145);
      uint64_t v148 = v147[1];
      *uint64_t v146 = *v147;
      v146[1] = v148;
      uint64_t v149 = v137[9];
      uint64_t v150 = (void *)(a1 + v149);
      uint64_t v151 = (const void *)(a2 + v149);
      uint64_t v152 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v135 + 48);
      swift_bridgeObjectRetain();
      if (v152(v151, 1, v134))
      {
        uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v150, v151, *(void *)(*(void *)(v153 - 8) + 64));
      }
      else
      {
        v136(v150, v151, v134);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v135 + 56))(v150, 0, 1, v134);
      }
      uint64_t v179 = type metadata accessor for SmokeDetectorEvent();
      break;
    case 6u:
      uint64_t v154 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 16))(a1, a2, v154);
      uint64_t v155 = type metadata accessor for EventBase(0);
      uint64_t v156 = *(int *)(v155 + 20);
      uint64_t v157 = (void *)(a1 + v156);
      uint64_t v158 = (const void *)(a2 + v156);
      uint64_t v159 = sub_25247A540();
      uint64_t v160 = *(void *)(v159 - 8);
      uint64_t v161 = *(void (**)(void *, const void *, uint64_t))(v160 + 16);
      v161(v157, v158, v159);
      *(unsigned char *)(a1 + *(int *)(v155 + 24)) = *(unsigned char *)(a2 + *(int *)(v155 + 24));
      uint64_t v162 = (int *)type metadata accessor for AccessoryEventBase(0);
      v161((void *)(a1 + v162[5]), (const void *)(a2 + v162[5]), v159);
      uint64_t v163 = v162[6];
      uint64_t v164 = (void *)(a1 + v163);
      uint64_t v165 = (void *)(a2 + v163);
      uint64_t v166 = v165[1];
      void *v164 = *v165;
      v164[1] = v166;
      uint64_t v167 = v162[7];
      uint64_t v168 = (void *)(a1 + v167);
      uint64_t v169 = (const void *)(a2 + v167);
      swift_bridgeObjectRetain();
      v161(v168, v169, v159);
      uint64_t v170 = v162[8];
      uint64_t v171 = (void *)(a1 + v170);
      unint64_t v172 = (void *)(a2 + v170);
      uint64_t v173 = v172[1];
      *uint64_t v171 = *v172;
      v171[1] = v173;
      uint64_t v174 = v162[9];
      uint64_t v175 = (void *)(a1 + v174);
      uint64_t v176 = (const void *)(a2 + v174);
      uint64_t v177 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v160 + 48);
      swift_bridgeObjectRetain();
      if (v177(v176, 1, v159))
      {
        uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v175, v176, *(void *)(*(void *)(v178 - 8) + 64));
      }
      else
      {
        v161(v175, v176, v159);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v160 + 56))(v175, 0, 1, v159);
      }
      uint64_t v179 = type metadata accessor for WindowEvent();
      break;
    default:
      uint64_t v4 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = type metadata accessor for EventBase(0);
      uint64_t v6 = *(int *)(v5 + 20);
      uint64_t v7 = (void *)(a1 + v6);
      uint64_t v8 = (const void *)(a2 + v6);
      uint64_t v9 = sub_25247A540();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 16);
      v11(v7, v8, v9);
      *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
      uint64_t v12 = (int *)type metadata accessor for AccessoryEventBase(0);
      v11((void *)(a1 + v12[5]), (const void *)(a2 + v12[5]), v9);
      uint64_t v13 = v12[6];
      uint64_t v14 = (void *)(a1 + v13);
      uint64_t v15 = (void *)(a2 + v13);
      uint64_t v16 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v16;
      uint64_t v17 = v12[7];
      uint64_t v18 = (void *)(a1 + v17);
      uint64_t v19 = (const void *)(a2 + v17);
      swift_bridgeObjectRetain();
      v11(v18, v19, v9);
      uint64_t v20 = v12[8];
      uint64_t v21 = (void *)(a1 + v20);
      uint64_t v22 = (void *)(a2 + v20);
      uint64_t v23 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v23;
      uint64_t v24 = v12[9];
      uint64_t v25 = (void *)(a1 + v24);
      uint64_t v26 = (const void *)(a2 + v24);
      unint64_t v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
      swift_bridgeObjectRetain();
      if (v27(v26, 1, v9))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        v11(v25, v26, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
      }
      uint64_t v179 = type metadata accessor for ContactSensorEvent();
      break;
  }
  *(unsigned char *)(a1 + *(int *)(v179 + 20)) = *(unsigned char *)(a2 + *(int *)(v179 + 20));
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for SomeEvent(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2524305B8(a1);
    type metadata accessor for SomeAccessoryEvent();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v27 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
        uint64_t v28 = type metadata accessor for EventBase(0);
        uint64_t v29 = *(int *)(v28 + 20);
        uint64_t v30 = a1 + v29;
        uint64_t v31 = a2 + v29;
        uint64_t v32 = sub_25247A540();
        uint64_t v33 = *(void *)(v32 - 8);
        uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
        v34(v30, v31, v32);
        *(unsigned char *)(a1 + *(int *)(v28 + 24)) = *(unsigned char *)(a2 + *(int *)(v28 + 24));
        uint64_t v35 = (int *)type metadata accessor for AccessoryEventBase(0);
        v34(a1 + v35[5], a2 + v35[5], v32);
        uint64_t v36 = v35[6];
        uint64_t v37 = (void *)(a1 + v36);
        uint64_t v38 = (void *)(a2 + v36);
        *uint64_t v37 = *v38;
        v37[1] = v38[1];
        uint64_t v39 = v35[7];
        uint64_t v40 = a1 + v39;
        uint64_t v41 = a2 + v39;
        swift_bridgeObjectRetain();
        v34(v40, v41, v32);
        uint64_t v42 = v35[8];
        uint64_t v43 = (void *)(a1 + v42);
        uint64_t v44 = (void *)(a2 + v42);
        *uint64_t v43 = *v44;
        v43[1] = v44[1];
        uint64_t v45 = v35[9];
        uint64_t v46 = (void *)(a1 + v45);
        uint64_t v47 = (const void *)(a2 + v45);
        uint64_t v48 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48);
        swift_bridgeObjectRetain();
        if (v48(v47, 1, v32))
        {
          uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          v34((uint64_t)v46, (uint64_t)v47, v32);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v46, 0, 1, v32);
        }
        uint64_t v165 = type metadata accessor for DoorEvent();
        break;
      case 2u:
        uint64_t v50 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(a1, a2, v50);
        uint64_t v51 = type metadata accessor for EventBase(0);
        uint64_t v52 = *(int *)(v51 + 20);
        uint64_t v53 = a1 + v52;
        uint64_t v54 = a2 + v52;
        uint64_t v55 = sub_25247A540();
        uint64_t v56 = *(void *)(v55 - 8);
        uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
        v57(v53, v54, v55);
        *(unsigned char *)(a1 + *(int *)(v51 + 24)) = *(unsigned char *)(a2 + *(int *)(v51 + 24));
        uint64_t v58 = (int *)type metadata accessor for AccessoryEventBase(0);
        v57(a1 + v58[5], a2 + v58[5], v55);
        uint64_t v59 = v58[6];
        uint64_t v60 = (void *)(a1 + v59);
        uint64_t v61 = (void *)(a2 + v59);
        *uint64_t v60 = *v61;
        v60[1] = v61[1];
        uint64_t v62 = v58[7];
        uint64_t v63 = a1 + v62;
        uint64_t v64 = a2 + v62;
        swift_bridgeObjectRetain();
        v57(v63, v64, v55);
        uint64_t v65 = v58[8];
        uint64_t v66 = (void *)(a1 + v65);
        uint64_t v67 = (void *)(a2 + v65);
        *uint64_t v66 = *v67;
        v66[1] = v67[1];
        uint64_t v68 = v58[9];
        uint64_t v69 = (void *)(a1 + v68);
        uint64_t v70 = (const void *)(a2 + v68);
        uint64_t v71 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48);
        swift_bridgeObjectRetain();
        if (v71(v70, 1, v55))
        {
          uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          v57((uint64_t)v69, (uint64_t)v70, v55);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v69, 0, 1, v55);
        }
        uint64_t v165 = type metadata accessor for GarageDoorEvent();
        break;
      case 3u:
        uint64_t v73 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 16))(a1, a2, v73);
        uint64_t v74 = type metadata accessor for EventBase(0);
        uint64_t v75 = *(int *)(v74 + 20);
        uint64_t v76 = a1 + v75;
        uint64_t v77 = a2 + v75;
        uint64_t v78 = sub_25247A540();
        uint64_t v79 = *(void *)(v78 - 8);
        uint64_t v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16);
        v80(v76, v77, v78);
        *(unsigned char *)(a1 + *(int *)(v74 + 24)) = *(unsigned char *)(a2 + *(int *)(v74 + 24));
        uint64_t v81 = (int *)type metadata accessor for AccessoryEventBase(0);
        v80(a1 + v81[5], a2 + v81[5], v78);
        uint64_t v82 = v81[6];
        uint64_t v83 = (void *)(a1 + v82);
        uint64_t v84 = (void *)(a2 + v82);
        void *v83 = *v84;
        v83[1] = v84[1];
        uint64_t v85 = v81[7];
        uint64_t v86 = a1 + v85;
        uint64_t v87 = a2 + v85;
        swift_bridgeObjectRetain();
        v80(v86, v87, v78);
        uint64_t v88 = v81[8];
        uint64_t v89 = (void *)(a1 + v88);
        unint64_t v90 = (void *)(a2 + v88);
        *uint64_t v89 = *v90;
        v89[1] = v90[1];
        uint64_t v91 = v81[9];
        uint64_t v92 = (void *)(a1 + v91);
        uint64_t v93 = (const void *)(a2 + v91);
        uint64_t v94 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v79 + 48);
        swift_bridgeObjectRetain();
        if (v94(v93, 1, v78))
        {
          uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v92, v93, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          v80((uint64_t)v92, (uint64_t)v93, v78);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v79 + 56))(v92, 0, 1, v78);
        }
        uint64_t v165 = type metadata accessor for LockEvent();
        break;
      case 4u:
        uint64_t v96 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16))(a1, a2, v96);
        uint64_t v97 = type metadata accessor for EventBase(0);
        uint64_t v98 = *(int *)(v97 + 20);
        uint64_t v99 = a1 + v98;
        uint64_t v100 = a2 + v98;
        uint64_t v101 = sub_25247A540();
        uint64_t v102 = *(void *)(v101 - 8);
        uint64_t v103 = *(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 16);
        v103(v99, v100, v101);
        *(unsigned char *)(a1 + *(int *)(v97 + 24)) = *(unsigned char *)(a2 + *(int *)(v97 + 24));
        uint64_t v104 = (int *)type metadata accessor for AccessoryEventBase(0);
        v103(a1 + v104[5], a2 + v104[5], v101);
        uint64_t v105 = v104[6];
        uint64_t v106 = (void *)(a1 + v105);
        uint64_t v107 = (void *)(a2 + v105);
        *uint64_t v106 = *v107;
        v106[1] = v107[1];
        uint64_t v108 = v104[7];
        uint64_t v109 = a1 + v108;
        uint64_t v110 = a2 + v108;
        swift_bridgeObjectRetain();
        v103(v109, v110, v101);
        uint64_t v111 = v104[8];
        uint64_t v112 = (void *)(a1 + v111);
        uint64_t v113 = (void *)(a2 + v111);
        *uint64_t v112 = *v113;
        v112[1] = v113[1];
        uint64_t v114 = v104[9];
        uint64_t v115 = (void *)(a1 + v114);
        uint64_t v116 = (const void *)(a2 + v114);
        uint64_t v117 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v102 + 48);
        swift_bridgeObjectRetain();
        if (v117(v116, 1, v101))
        {
          uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v115, v116, *(void *)(*(void *)(v118 - 8) + 64));
        }
        else
        {
          v103((uint64_t)v115, (uint64_t)v116, v101);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v102 + 56))(v115, 0, 1, v101);
        }
        uint64_t v165 = type metadata accessor for SecuritySystemEvent();
        break;
      case 5u:
        uint64_t v119 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 16))(a1, a2, v119);
        uint64_t v120 = type metadata accessor for EventBase(0);
        uint64_t v121 = *(int *)(v120 + 20);
        uint64_t v122 = a1 + v121;
        uint64_t v123 = a2 + v121;
        uint64_t v124 = sub_25247A540();
        uint64_t v125 = *(void *)(v124 - 8);
        uint64_t v126 = *(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 16);
        v126(v122, v123, v124);
        *(unsigned char *)(a1 + *(int *)(v120 + 24)) = *(unsigned char *)(a2 + *(int *)(v120 + 24));
        uint64_t v127 = (int *)type metadata accessor for AccessoryEventBase(0);
        v126(a1 + v127[5], a2 + v127[5], v124);
        uint64_t v128 = v127[6];
        uint64_t v129 = (void *)(a1 + v128);
        uint64_t v130 = (void *)(a2 + v128);
        *uint64_t v129 = *v130;
        v129[1] = v130[1];
        uint64_t v131 = v127[7];
        uint64_t v132 = a1 + v131;
        uint64_t v133 = a2 + v131;
        swift_bridgeObjectRetain();
        v126(v132, v133, v124);
        uint64_t v134 = v127[8];
        uint64_t v135 = (void *)(a1 + v134);
        os_log_t v136 = (void *)(a2 + v134);
        *uint64_t v135 = *v136;
        v135[1] = v136[1];
        uint64_t v137 = v127[9];
        uint64_t v138 = (void *)(a1 + v137);
        uint64_t v139 = (const void *)(a2 + v137);
        unint64_t v140 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v125 + 48);
        swift_bridgeObjectRetain();
        if (v140(v139, 1, v124))
        {
          uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v138, v139, *(void *)(*(void *)(v141 - 8) + 64));
        }
        else
        {
          v126((uint64_t)v138, (uint64_t)v139, v124);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v125 + 56))(v138, 0, 1, v124);
        }
        uint64_t v165 = type metadata accessor for SmokeDetectorEvent();
        break;
      case 6u:
        uint64_t v142 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v142 - 8) + 16))(a1, a2, v142);
        uint64_t v143 = type metadata accessor for EventBase(0);
        uint64_t v144 = *(int *)(v143 + 20);
        uint64_t v145 = a1 + v144;
        uint64_t v146 = a2 + v144;
        uint64_t v147 = sub_25247A540();
        uint64_t v148 = *(void *)(v147 - 8);
        uint64_t v149 = *(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 16);
        v149(v145, v146, v147);
        *(unsigned char *)(a1 + *(int *)(v143 + 24)) = *(unsigned char *)(a2 + *(int *)(v143 + 24));
        uint64_t v150 = (int *)type metadata accessor for AccessoryEventBase(0);
        v149(a1 + v150[5], a2 + v150[5], v147);
        uint64_t v151 = v150[6];
        uint64_t v152 = (void *)(a1 + v151);
        uint64_t v153 = (void *)(a2 + v151);
        *uint64_t v152 = *v153;
        v152[1] = v153[1];
        uint64_t v154 = v150[7];
        uint64_t v155 = a1 + v154;
        uint64_t v156 = a2 + v154;
        swift_bridgeObjectRetain();
        v149(v155, v156, v147);
        uint64_t v157 = v150[8];
        uint64_t v158 = (void *)(a1 + v157);
        uint64_t v159 = (void *)(a2 + v157);
        *uint64_t v158 = *v159;
        v158[1] = v159[1];
        uint64_t v160 = v150[9];
        uint64_t v161 = (void *)(a1 + v160);
        uint64_t v162 = (const void *)(a2 + v160);
        uint64_t v163 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v148 + 48);
        swift_bridgeObjectRetain();
        if (v163(v162, 1, v147))
        {
          uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v161, v162, *(void *)(*(void *)(v164 - 8) + 64));
        }
        else
        {
          v149((uint64_t)v161, (uint64_t)v162, v147);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v148 + 56))(v161, 0, 1, v147);
        }
        uint64_t v165 = type metadata accessor for WindowEvent();
        break;
      default:
        uint64_t v4 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        uint64_t v5 = type metadata accessor for EventBase(0);
        uint64_t v6 = *(int *)(v5 + 20);
        uint64_t v7 = a1 + v6;
        uint64_t v8 = a2 + v6;
        uint64_t v9 = sub_25247A540();
        uint64_t v10 = *(void *)(v9 - 8);
        uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
        v11(v7, v8, v9);
        *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
        uint64_t v12 = (int *)type metadata accessor for AccessoryEventBase(0);
        v11(a1 + v12[5], a2 + v12[5], v9);
        uint64_t v13 = v12[6];
        uint64_t v14 = (void *)(a1 + v13);
        uint64_t v15 = (void *)(a2 + v13);
        *uint64_t v14 = *v15;
        v14[1] = v15[1];
        uint64_t v16 = v12[7];
        uint64_t v17 = a1 + v16;
        uint64_t v18 = a2 + v16;
        swift_bridgeObjectRetain();
        v11(v17, v18, v9);
        uint64_t v19 = v12[8];
        uint64_t v20 = (void *)(a1 + v19);
        uint64_t v21 = (void *)(a2 + v19);
        *uint64_t v20 = *v21;
        v20[1] = v21[1];
        uint64_t v22 = v12[9];
        uint64_t v23 = (void *)(a1 + v22);
        uint64_t v24 = (const void *)(a2 + v22);
        uint64_t v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
        swift_bridgeObjectRetain();
        if (v25(v24, 1, v9))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          v11((uint64_t)v23, (uint64_t)v24, v9);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
        }
        uint64_t v165 = type metadata accessor for ContactSensorEvent();
        break;
    }
    *(unsigned char *)(a1 + *(int *)(v165 + 20)) = *(unsigned char *)(a2 + *(int *)(v165 + 20));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for SomeEvent(uint64_t a1, uint64_t a2)
{
  type metadata accessor for SomeAccessoryEvent();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v17 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
      uint64_t v18 = type metadata accessor for EventBase(0);
      uint64_t v19 = *(int *)(v18 + 20);
      uint64_t v20 = (void *)(a1 + v19);
      uint64_t v21 = (const void *)(a2 + v19);
      uint64_t v22 = sub_25247A540();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = *(void (**)(void *, const void *, uint64_t))(v23 + 32);
      v24(v20, v21, v22);
      *(unsigned char *)(a1 + *(int *)(v18 + 24)) = *(unsigned char *)(a2 + *(int *)(v18 + 24));
      uint64_t v25 = (int *)type metadata accessor for AccessoryEventBase(0);
      v24((void *)(a1 + v25[5]), (const void *)(a2 + v25[5]), v22);
      *(_OWORD *)(a1 + v25[6]) = *(_OWORD *)(a2 + v25[6]);
      v24((void *)(a1 + v25[7]), (const void *)(a2 + v25[7]), v22);
      *(_OWORD *)(a1 + v25[8]) = *(_OWORD *)(a2 + v25[8]);
      uint64_t v26 = v25[9];
      uint64_t v27 = (void *)(a1 + v26);
      uint64_t v28 = (const void *)(a2 + v26);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(a2 + v26, 1, v22))
      {
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        v24(v27, v28, v22);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v22);
      }
      uint64_t v95 = type metadata accessor for DoorEvent();
      break;
    case 2u:
      uint64_t v30 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
      uint64_t v31 = type metadata accessor for EventBase(0);
      uint64_t v32 = *(int *)(v31 + 20);
      uint64_t v33 = (void *)(a1 + v32);
      uint64_t v34 = (const void *)(a2 + v32);
      uint64_t v35 = sub_25247A540();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = *(void (**)(void *, const void *, uint64_t))(v36 + 32);
      v37(v33, v34, v35);
      *(unsigned char *)(a1 + *(int *)(v31 + 24)) = *(unsigned char *)(a2 + *(int *)(v31 + 24));
      uint64_t v38 = (int *)type metadata accessor for AccessoryEventBase(0);
      v37((void *)(a1 + v38[5]), (const void *)(a2 + v38[5]), v35);
      *(_OWORD *)(a1 + v38[6]) = *(_OWORD *)(a2 + v38[6]);
      v37((void *)(a1 + v38[7]), (const void *)(a2 + v38[7]), v35);
      *(_OWORD *)(a1 + v38[8]) = *(_OWORD *)(a2 + v38[8]);
      uint64_t v39 = v38[9];
      uint64_t v40 = (void *)(a1 + v39);
      uint64_t v41 = (const void *)(a2 + v39);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(a2 + v39, 1, v35))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        v37(v40, v41, v35);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v40, 0, 1, v35);
      }
      uint64_t v95 = type metadata accessor for GarageDoorEvent();
      break;
    case 3u:
      uint64_t v43 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(a1, a2, v43);
      uint64_t v44 = type metadata accessor for EventBase(0);
      uint64_t v45 = *(int *)(v44 + 20);
      uint64_t v46 = (void *)(a1 + v45);
      uint64_t v47 = (const void *)(a2 + v45);
      uint64_t v48 = sub_25247A540();
      uint64_t v49 = *(void *)(v48 - 8);
      uint64_t v50 = *(void (**)(void *, const void *, uint64_t))(v49 + 32);
      v50(v46, v47, v48);
      *(unsigned char *)(a1 + *(int *)(v44 + 24)) = *(unsigned char *)(a2 + *(int *)(v44 + 24));
      uint64_t v51 = (int *)type metadata accessor for AccessoryEventBase(0);
      v50((void *)(a1 + v51[5]), (const void *)(a2 + v51[5]), v48);
      *(_OWORD *)(a1 + v51[6]) = *(_OWORD *)(a2 + v51[6]);
      v50((void *)(a1 + v51[7]), (const void *)(a2 + v51[7]), v48);
      *(_OWORD *)(a1 + v51[8]) = *(_OWORD *)(a2 + v51[8]);
      uint64_t v52 = v51[9];
      uint64_t v53 = (void *)(a1 + v52);
      uint64_t v54 = (const void *)(a2 + v52);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(a2 + v52, 1, v48))
      {
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        v50(v53, v54, v48);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v53, 0, 1, v48);
      }
      uint64_t v95 = type metadata accessor for LockEvent();
      break;
    case 4u:
      uint64_t v56 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 32))(a1, a2, v56);
      uint64_t v57 = type metadata accessor for EventBase(0);
      uint64_t v58 = *(int *)(v57 + 20);
      uint64_t v59 = (void *)(a1 + v58);
      uint64_t v60 = (const void *)(a2 + v58);
      uint64_t v61 = sub_25247A540();
      uint64_t v62 = *(void *)(v61 - 8);
      uint64_t v63 = *(void (**)(void *, const void *, uint64_t))(v62 + 32);
      v63(v59, v60, v61);
      *(unsigned char *)(a1 + *(int *)(v57 + 24)) = *(unsigned char *)(a2 + *(int *)(v57 + 24));
      uint64_t v64 = (int *)type metadata accessor for AccessoryEventBase(0);
      v63((void *)(a1 + v64[5]), (const void *)(a2 + v64[5]), v61);
      *(_OWORD *)(a1 + v64[6]) = *(_OWORD *)(a2 + v64[6]);
      v63((void *)(a1 + v64[7]), (const void *)(a2 + v64[7]), v61);
      *(_OWORD *)(a1 + v64[8]) = *(_OWORD *)(a2 + v64[8]);
      uint64_t v65 = v64[9];
      uint64_t v66 = (void *)(a1 + v65);
      uint64_t v67 = (const void *)(a2 + v65);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(a2 + v65, 1, v61))
      {
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        v63(v66, v67, v61);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(v66, 0, 1, v61);
      }
      uint64_t v95 = type metadata accessor for SecuritySystemEvent();
      break;
    case 5u:
      uint64_t v69 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 32))(a1, a2, v69);
      uint64_t v70 = type metadata accessor for EventBase(0);
      uint64_t v71 = *(int *)(v70 + 20);
      uint64_t v72 = (void *)(a1 + v71);
      uint64_t v73 = (const void *)(a2 + v71);
      uint64_t v74 = sub_25247A540();
      uint64_t v75 = *(void *)(v74 - 8);
      uint64_t v76 = *(void (**)(void *, const void *, uint64_t))(v75 + 32);
      v76(v72, v73, v74);
      *(unsigned char *)(a1 + *(int *)(v70 + 24)) = *(unsigned char *)(a2 + *(int *)(v70 + 24));
      uint64_t v77 = (int *)type metadata accessor for AccessoryEventBase(0);
      v76((void *)(a1 + v77[5]), (const void *)(a2 + v77[5]), v74);
      *(_OWORD *)(a1 + v77[6]) = *(_OWORD *)(a2 + v77[6]);
      v76((void *)(a1 + v77[7]), (const void *)(a2 + v77[7]), v74);
      *(_OWORD *)(a1 + v77[8]) = *(_OWORD *)(a2 + v77[8]);
      uint64_t v78 = v77[9];
      uint64_t v79 = (void *)(a1 + v78);
      uint64_t v80 = (const void *)(a2 + v78);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(a2 + v78, 1, v74))
      {
        uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        v76(v79, v80, v74);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v79, 0, 1, v74);
      }
      uint64_t v95 = type metadata accessor for SmokeDetectorEvent();
      break;
    case 6u:
      uint64_t v82 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 32))(a1, a2, v82);
      uint64_t v83 = type metadata accessor for EventBase(0);
      uint64_t v84 = *(int *)(v83 + 20);
      uint64_t v85 = (void *)(a1 + v84);
      uint64_t v86 = (const void *)(a2 + v84);
      uint64_t v87 = sub_25247A540();
      uint64_t v88 = *(void *)(v87 - 8);
      uint64_t v89 = *(void (**)(void *, const void *, uint64_t))(v88 + 32);
      v89(v85, v86, v87);
      *(unsigned char *)(a1 + *(int *)(v83 + 24)) = *(unsigned char *)(a2 + *(int *)(v83 + 24));
      unint64_t v90 = (int *)type metadata accessor for AccessoryEventBase(0);
      v89((void *)(a1 + v90[5]), (const void *)(a2 + v90[5]), v87);
      *(_OWORD *)(a1 + v90[6]) = *(_OWORD *)(a2 + v90[6]);
      v89((void *)(a1 + v90[7]), (const void *)(a2 + v90[7]), v87);
      *(_OWORD *)(a1 + v90[8]) = *(_OWORD *)(a2 + v90[8]);
      uint64_t v91 = v90[9];
      uint64_t v92 = (void *)(a1 + v91);
      uint64_t v93 = (const void *)(a2 + v91);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(a2 + v91, 1, v87))
      {
        uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        v89(v92, v93, v87);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v88 + 56))(v92, 0, 1, v87);
      }
      uint64_t v95 = type metadata accessor for WindowEvent();
      break;
    default:
      uint64_t v4 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      uint64_t v5 = type metadata accessor for EventBase(0);
      uint64_t v6 = *(int *)(v5 + 20);
      uint64_t v7 = (void *)(a1 + v6);
      uint64_t v8 = (const void *)(a2 + v6);
      uint64_t v9 = sub_25247A540();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
      v11(v7, v8, v9);
      *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
      uint64_t v12 = (int *)type metadata accessor for AccessoryEventBase(0);
      v11((void *)(a1 + v12[5]), (const void *)(a2 + v12[5]), v9);
      *(_OWORD *)(a1 + v12[6]) = *(_OWORD *)(a2 + v12[6]);
      v11((void *)(a1 + v12[7]), (const void *)(a2 + v12[7]), v9);
      *(_OWORD *)(a1 + v12[8]) = *(_OWORD *)(a2 + v12[8]);
      uint64_t v13 = v12[9];
      uint64_t v14 = (void *)(a1 + v13);
      uint64_t v15 = (const void *)(a2 + v13);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a2 + v13, 1, v9))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        v11(v14, v15, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
      }
      uint64_t v95 = type metadata accessor for ContactSensorEvent();
      break;
  }
  *(unsigned char *)(a1 + *(int *)(v95 + 20)) = *(unsigned char *)(a2 + *(int *)(v95 + 20));
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for SomeEvent(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2524305B8(a1);
    type metadata accessor for SomeAccessoryEvent();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v17 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
        uint64_t v18 = type metadata accessor for EventBase(0);
        uint64_t v19 = *(int *)(v18 + 20);
        uint64_t v20 = a1 + v19;
        uint64_t v21 = a2 + v19;
        uint64_t v22 = sub_25247A540();
        uint64_t v23 = *(void *)(v22 - 8);
        uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32);
        v24(v20, v21, v22);
        *(unsigned char *)(a1 + *(int *)(v18 + 24)) = *(unsigned char *)(a2 + *(int *)(v18 + 24));
        uint64_t v25 = (int *)type metadata accessor for AccessoryEventBase(0);
        v24(a1 + v25[5], a2 + v25[5], v22);
        *(_OWORD *)(a1 + v25[6]) = *(_OWORD *)(a2 + v25[6]);
        v24(a1 + v25[7], a2 + v25[7], v22);
        *(_OWORD *)(a1 + v25[8]) = *(_OWORD *)(a2 + v25[8]);
        uint64_t v26 = v25[9];
        uint64_t v27 = (void *)(a1 + v26);
        uint64_t v28 = (const void *)(a2 + v26);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(a2 + v26, 1, v22))
        {
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          v24((uint64_t)v27, (uint64_t)v28, v22);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v22);
        }
        uint64_t v95 = type metadata accessor for DoorEvent();
        break;
      case 2u:
        uint64_t v30 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
        uint64_t v31 = type metadata accessor for EventBase(0);
        uint64_t v32 = *(int *)(v31 + 20);
        uint64_t v33 = a1 + v32;
        uint64_t v34 = a2 + v32;
        uint64_t v35 = sub_25247A540();
        uint64_t v36 = *(void *)(v35 - 8);
        uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
        v37(v33, v34, v35);
        *(unsigned char *)(a1 + *(int *)(v31 + 24)) = *(unsigned char *)(a2 + *(int *)(v31 + 24));
        uint64_t v38 = (int *)type metadata accessor for AccessoryEventBase(0);
        v37(a1 + v38[5], a2 + v38[5], v35);
        *(_OWORD *)(a1 + v38[6]) = *(_OWORD *)(a2 + v38[6]);
        v37(a1 + v38[7], a2 + v38[7], v35);
        *(_OWORD *)(a1 + v38[8]) = *(_OWORD *)(a2 + v38[8]);
        uint64_t v39 = v38[9];
        uint64_t v40 = (void *)(a1 + v39);
        uint64_t v41 = (const void *)(a2 + v39);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(a2 + v39, 1, v35))
        {
          uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          v37((uint64_t)v40, (uint64_t)v41, v35);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v40, 0, 1, v35);
        }
        uint64_t v95 = type metadata accessor for GarageDoorEvent();
        break;
      case 3u:
        uint64_t v43 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(a1, a2, v43);
        uint64_t v44 = type metadata accessor for EventBase(0);
        uint64_t v45 = *(int *)(v44 + 20);
        uint64_t v46 = a1 + v45;
        uint64_t v47 = a2 + v45;
        uint64_t v48 = sub_25247A540();
        uint64_t v49 = *(void *)(v48 - 8);
        uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32);
        v50(v46, v47, v48);
        *(unsigned char *)(a1 + *(int *)(v44 + 24)) = *(unsigned char *)(a2 + *(int *)(v44 + 24));
        uint64_t v51 = (int *)type metadata accessor for AccessoryEventBase(0);
        v50(a1 + v51[5], a2 + v51[5], v48);
        *(_OWORD *)(a1 + v51[6]) = *(_OWORD *)(a2 + v51[6]);
        v50(a1 + v51[7], a2 + v51[7], v48);
        *(_OWORD *)(a1 + v51[8]) = *(_OWORD *)(a2 + v51[8]);
        uint64_t v52 = v51[9];
        uint64_t v53 = (void *)(a1 + v52);
        uint64_t v54 = (const void *)(a2 + v52);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(a2 + v52, 1, v48))
        {
          uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          v50((uint64_t)v53, (uint64_t)v54, v48);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v53, 0, 1, v48);
        }
        uint64_t v95 = type metadata accessor for LockEvent();
        break;
      case 4u:
        uint64_t v56 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 32))(a1, a2, v56);
        uint64_t v57 = type metadata accessor for EventBase(0);
        uint64_t v58 = *(int *)(v57 + 20);
        uint64_t v59 = a1 + v58;
        uint64_t v60 = a2 + v58;
        uint64_t v61 = sub_25247A540();
        uint64_t v62 = *(void *)(v61 - 8);
        uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32);
        v63(v59, v60, v61);
        *(unsigned char *)(a1 + *(int *)(v57 + 24)) = *(unsigned char *)(a2 + *(int *)(v57 + 24));
        uint64_t v64 = (int *)type metadata accessor for AccessoryEventBase(0);
        v63(a1 + v64[5], a2 + v64[5], v61);
        *(_OWORD *)(a1 + v64[6]) = *(_OWORD *)(a2 + v64[6]);
        v63(a1 + v64[7], a2 + v64[7], v61);
        *(_OWORD *)(a1 + v64[8]) = *(_OWORD *)(a2 + v64[8]);
        uint64_t v65 = v64[9];
        uint64_t v66 = (void *)(a1 + v65);
        uint64_t v67 = (const void *)(a2 + v65);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(a2 + v65, 1, v61))
        {
          uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          v63((uint64_t)v66, (uint64_t)v67, v61);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(v66, 0, 1, v61);
        }
        uint64_t v95 = type metadata accessor for SecuritySystemEvent();
        break;
      case 5u:
        uint64_t v69 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 32))(a1, a2, v69);
        uint64_t v70 = type metadata accessor for EventBase(0);
        uint64_t v71 = *(int *)(v70 + 20);
        uint64_t v72 = a1 + v71;
        uint64_t v73 = a2 + v71;
        uint64_t v74 = sub_25247A540();
        uint64_t v75 = *(void *)(v74 - 8);
        uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32);
        v76(v72, v73, v74);
        *(unsigned char *)(a1 + *(int *)(v70 + 24)) = *(unsigned char *)(a2 + *(int *)(v70 + 24));
        uint64_t v77 = (int *)type metadata accessor for AccessoryEventBase(0);
        v76(a1 + v77[5], a2 + v77[5], v74);
        *(_OWORD *)(a1 + v77[6]) = *(_OWORD *)(a2 + v77[6]);
        v76(a1 + v77[7], a2 + v77[7], v74);
        *(_OWORD *)(a1 + v77[8]) = *(_OWORD *)(a2 + v77[8]);
        uint64_t v78 = v77[9];
        uint64_t v79 = (void *)(a1 + v78);
        uint64_t v80 = (const void *)(a2 + v78);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(a2 + v78, 1, v74))
        {
          uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          v76((uint64_t)v79, (uint64_t)v80, v74);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v79, 0, 1, v74);
        }
        uint64_t v95 = type metadata accessor for SmokeDetectorEvent();
        break;
      case 6u:
        uint64_t v82 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 32))(a1, a2, v82);
        uint64_t v83 = type metadata accessor for EventBase(0);
        uint64_t v84 = *(int *)(v83 + 20);
        uint64_t v85 = a1 + v84;
        uint64_t v86 = a2 + v84;
        uint64_t v87 = sub_25247A540();
        uint64_t v88 = *(void *)(v87 - 8);
        uint64_t v89 = *(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32);
        v89(v85, v86, v87);
        *(unsigned char *)(a1 + *(int *)(v83 + 24)) = *(unsigned char *)(a2 + *(int *)(v83 + 24));
        unint64_t v90 = (int *)type metadata accessor for AccessoryEventBase(0);
        v89(a1 + v90[5], a2 + v90[5], v87);
        *(_OWORD *)(a1 + v90[6]) = *(_OWORD *)(a2 + v90[6]);
        v89(a1 + v90[7], a2 + v90[7], v87);
        *(_OWORD *)(a1 + v90[8]) = *(_OWORD *)(a2 + v90[8]);
        uint64_t v91 = v90[9];
        uint64_t v92 = (void *)(a1 + v91);
        uint64_t v93 = (const void *)(a2 + v91);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(a2 + v91, 1, v87))
        {
          uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          v89((uint64_t)v92, (uint64_t)v93, v87);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v88 + 56))(v92, 0, 1, v87);
        }
        uint64_t v95 = type metadata accessor for WindowEvent();
        break;
      default:
        uint64_t v4 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
        uint64_t v5 = type metadata accessor for EventBase(0);
        uint64_t v6 = *(int *)(v5 + 20);
        uint64_t v7 = a1 + v6;
        uint64_t v8 = a2 + v6;
        uint64_t v9 = sub_25247A540();
        uint64_t v10 = *(void *)(v9 - 8);
        uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
        v11(v7, v8, v9);
        *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
        uint64_t v12 = (int *)type metadata accessor for AccessoryEventBase(0);
        v11(a1 + v12[5], a2 + v12[5], v9);
        *(_OWORD *)(a1 + v12[6]) = *(_OWORD *)(a2 + v12[6]);
        v11(a1 + v12[7], a2 + v12[7], v9);
        *(_OWORD *)(a1 + v12[8]) = *(_OWORD *)(a2 + v12[8]);
        uint64_t v13 = v12[9];
        uint64_t v14 = (void *)(a1 + v13);
        uint64_t v15 = (const void *)(a2 + v13);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a2 + v13, 1, v9))
        {
          uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          v11((uint64_t)v14, (uint64_t)v15, v9);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
        }
        uint64_t v95 = type metadata accessor for ContactSensorEvent();
        break;
    }
    *(unsigned char *)(a1 + *(int *)(v95 + 20)) = *(unsigned char *)(a2 + *(int *)(v95 + 20));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SomeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SomeAccessoryEvent();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SomeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SomeAccessoryEvent();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, a2, a3, v6);
}

uint64_t sub_2524363AC(uint64_t a1)
{
  uint64_t result = type metadata accessor for SomeAccessoryEvent();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

ValueMetadata *type metadata accessor for SomeEvent.CodingKeys()
{
  return &type metadata for SomeEvent.CodingKeys;
}

unsigned char *_s13HomeKitEvents9SomeEventO10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x252436504);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SomeEvent.AccessoryCodingKeys()
{
  return &type metadata for SomeEvent.AccessoryCodingKeys;
}

unint64_t sub_252436540()
{
  unint64_t result = qword_269C05910;
  if (!qword_269C05910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05910);
  }
  return result;
}

unint64_t sub_252436598()
{
  unint64_t result = qword_269C05918;
  if (!qword_269C05918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05918);
  }
  return result;
}

unint64_t sub_2524365F0()
{
  unint64_t result = qword_269C05920;
  if (!qword_269C05920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05920);
  }
  return result;
}

unint64_t sub_252436648()
{
  unint64_t result = qword_269C05928;
  if (!qword_269C05928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05928);
  }
  return result;
}

unint64_t sub_2524366A0()
{
  unint64_t result = qword_269C05930;
  if (!qword_269C05930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05930);
  }
  return result;
}

unint64_t sub_2524366F8()
{
  unint64_t result = qword_269C05938;
  if (!qword_269C05938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05938);
  }
  return result;
}

unint64_t sub_252436754(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04BF8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for LubyRackoffEncryptionKey();
  uint64_t v9 = MEMORY[0x270FA5388](v26);
  uint64_t v25 = (uint64_t)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v24 = (uint64_t)v21 - v12;
  uint64_t v13 = *(void *)(a3 + 16);
  if (!v13) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v14 = a3 + 32;
  v21[1] = a3;
  uint64_t v22 = v11;
  uint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  unint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t v23 = a1;
  do
  {
    a1(v14);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((*v15)(v8, 1, v26) == 1)
    {
      sub_2523D6FB8((uint64_t)v8, (uint64_t *)&unk_269C04BF8);
    }
    else
    {
      uint64_t v17 = v24;
      sub_2524392E8((uint64_t)v8, v24);
      sub_2524392E8(v17, v25);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v16 = sub_25241D89C(0, *(void *)(v16 + 16) + 1, 1, v16);
      }
      unint64_t v19 = *(void *)(v16 + 16);
      unint64_t v18 = *(void *)(v16 + 24);
      if (v19 >= v18 >> 1) {
        unint64_t v16 = sub_25241D89C(v18 > 1, v19 + 1, 1, v16);
      }
      *(void *)(v16 + 16) = v19 + 1;
      sub_2524392E8(v25, v16+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v19);
      a1 = v23;
    }
    v14 += 40;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t sub_2524369F0(void (*a1)(uint64_t *), uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v6 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04BD8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A98);
  uint64_t v28 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v31 = (uint64_t)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v26 - v16;
  if (a4 < a3) {
    goto LABEL_25;
  }
  uint64_t v32 = a4;
  a1(&v32);
  unint64_t v5 = v4;
  if (v4)
  {
    unint64_t v6 = MEMORY[0x263F8EE78];
LABEL_4:
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
    uint64_t v30 = v28 + 48;
    int v19 = v29(v12, 1, v13);
    uint64_t v27 = v13;
    if (v19 != 1)
    {
      sub_252439280((uint64_t)v12, (uint64_t)v17);
      sub_252439280((uint64_t)v17, v31);
      unint64_t v6 = MEMORY[0x263F8EE78];
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
    sub_2523D6FB8((uint64_t)v12, &qword_269C04BD8);
    unint64_t v6 = MEMORY[0x263F8EE78];
    while (a4 != a3)
    {
      uint64_t v26 = a1;
      while (a4 > a3)
      {
        uint64_t v32 = --a4;
        a1(&v32);
        if (v5) {
          goto LABEL_4;
        }
        if (v29(v12, 1, v13) == 1)
        {
          sub_2523D6FB8((uint64_t)v12, &qword_269C04BD8);
          if (a3 == a4) {
            return v6;
          }
        }
        else
        {
          sub_252439280((uint64_t)v12, (uint64_t)v17);
          sub_252439280((uint64_t)v17, v31);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v6 = sub_25241DB40(0, *(void *)(v6 + 16) + 1, 1, v6);
          }
          unint64_t v24 = *(void *)(v6 + 16);
          unint64_t v23 = *(void *)(v6 + 24);
          if (v24 >= v23 >> 1) {
            unint64_t v6 = sub_25241DB40(v23 > 1, v24 + 1, 1, v6);
          }
          *(void *)(v6 + 16) = v24 + 1;
          sub_252439280(v31, v6+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v24);
          a1 = v26;
          uint64_t v13 = v27;
          if (a3 == a4) {
            return v6;
          }
        }
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      unint64_t v6 = sub_25241DB40(0, *(void *)(v6 + 16) + 1, 1, v6);
LABEL_9:
      unint64_t v21 = *(void *)(v6 + 16);
      unint64_t v20 = *(void *)(v6 + 24);
      uint64_t v22 = (void (*)(uint64_t *))(v21 + 1);
      if (v21 >= v20 >> 1)
      {
        uint64_t v26 = (void (*)(uint64_t *))(v21 + 1);
        uint64_t v25 = sub_25241DB40(v20 > 1, v21 + 1, 1, v6);
        uint64_t v22 = v26;
        unint64_t v6 = v25;
      }
      *(void *)(v6 + 16) = v22;
      sub_252439280(v31, v6+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v21);
      uint64_t v13 = v27;
    }
  }
  return v6;
}

uint64_t static EventTags.Category.legacySecurityEventTag.getter()
{
  return 0;
}

uint64_t static EventTags.Category.tag(for:)(void *a1)
{
  return sub_252436DD4(a1, (uint64_t (*)(void *, uint64_t, uint64_t))sub_252438554);
}

uint64_t static EventTags.Category.securityGroupTag(for:)(void *a1)
{
  return sub_252436DD4(a1, (uint64_t (*)(void *, uint64_t, uint64_t))sub_252438784);
}

uint64_t sub_252436DD4(void *a1, uint64_t (*a2)(void *, uint64_t, uint64_t))
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  unint64_t v4 = __swift_project_boxed_opaque_existential_1(a1, v2);

  return a2(v4, v2, v3);
}

uint64_t static EventTags.Category.securityGroupTag(for:)(uint64_t a1)
{
  return sub_252436E58(a1, (uint64_t (*)(void *, uint64_t, uint64_t))sub_252438784);
}

uint64_t static EventTags.Category.tag(for:)(uint64_t a1)
{
  return sub_252436E58(a1, (uint64_t (*)(void *, uint64_t, uint64_t))sub_252438554);
}

uint64_t sub_252436E58(uint64_t a1, uint64_t (*a2)(void *, uint64_t, uint64_t))
{
  SomeEvent.anyEvent.getter(v8);
  uint64_t v3 = v9;
  uint64_t v4 = v10;
  unint64_t v5 = __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v6 = a2(v5, v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

uint64_t static EventTags.Category.tagsSplitByDate(for:dateInterval:)(uint64_t a1, uint64_t a2)
{
  return sub_25243723C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))_s13HomeKitEvents9EventTagsO8CategoryO15tagsSplitByDate3for12dateIntervalSay10Foundation0jM0VAH_SayAI4DataVG0G0tGShyAA0dF0OG_AKtFZ_0);
}

uint64_t sub_252436EE4@<X0>(unint64_t *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, unint64_t *a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v28 = a7;
  uint64_t v29 = a6;
  uint64_t v32 = a5;
  LODWORD(v27) = a4;
  uint64_t v30 = a8;
  uint64_t v11 = sub_25247A4B0();
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_25247A030();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t result = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = *a1;
  int v19 = *a1 / 6 - 255 * ((unint64_t)((*a1 / 6 * (unsigned __int128)0x4040404040404041uLL) >> 64) >> 6);
  uint64_t v31 = a2;
  if (v18 == a3)
  {
    uint64_t v27 = result;
    uint64_t result = sub_25247A010();
LABEL_12:
    unint64_t v22 = *v32;
    if (*v32 == v29)
    {
      sub_252479FF0();
LABEL_17:
      sub_25247A000();
      unint64_t v23 = _s13HomeKitEvents9EventTagsO8CategoryO4tags3for12dateIntervalSay10Foundation4DataVGShyAA0dF0OG_AI04DateJ0VtFZ_0(v28);
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A98);
      uint64_t v25 = *(int *)(v24 + 48);
      uint64_t v26 = v30;
      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v30, v17, v27);
      *(void *)(v26 + v25) = v23;
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v26, 0, 1, v24);
      *uint64_t v32 = v18;
      goto LABEL_18;
    }
    if (is_mul_ok(v22, 0x3CuLL))
    {
      if (is_mul_ok(60 * v22, 0x3CuLL))
      {
        sub_25247A1C0();
        goto LABEL_17;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_21;
  }
  if (v19 != v27 || *a2 == v19)
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A98);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v30, 1, 1, v21);
LABEL_18:
    unsigned char *v31 = v19;
    return result;
  }
  if (!is_mul_ok(v18, 0x3CuLL))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (is_mul_ok(60 * v18, 0x3CuLL))
  {
    uint64_t v27 = result;
    uint64_t result = sub_25247A1C0();
    goto LABEL_12;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t static EventTags.Category.tags(for:dateInterval:)(uint64_t a1, uint64_t a2)
{
  return sub_25243723C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))_s13HomeKitEvents9EventTagsO8CategoryO4tags3for12dateIntervalSay10Foundation4DataVGShyAA0dF0OG_AI04DateJ0VtFZ_0);
}

uint64_t sub_25243723C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_252438BC0(v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3(v6, a2);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_2524372A0(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_25247B350();
  uint64_t v6 = qword_2524806E8[(char)a2];
  sub_25247B360();
  uint64_t v7 = sub_25247B390();
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_252437A70(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v5 + 48);
  if (qword_2524806E8[*(char *)(v10 + v9)] != v6)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (qword_2524806E8[*(char *)(v10 + v9)] != v6);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v9);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_2524373E0(unsigned char *a1, char *a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *a2;
  sub_25247B350();
  uint64_t v6 = qword_2524806E8[v5];
  sub_25247B360();
  uint64_t v7 = sub_25247B390();
  uint64_t v8 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v4 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    while (qword_2524806E8[*(char *)(*(void *)(v4 + 48) + v9)] != v6)
    {
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v4 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_5;
      }
    }
    uint64_t result = 0;
    char v11 = *(unsigned char *)(*(void *)(*v2 + 48) + v9);
  }
  else
  {
LABEL_5:
    char v11 = v5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v14 = v5;
    uint64_t v15 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_252437BE0((uint64_t)&v14, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = v11;
  return result;
}

uint64_t sub_252437514()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04688);
  uint64_t result = sub_25247AF20();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_31;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_31;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v17 = v15 + 2;
            if (v17 >= v10)
            {
LABEL_31:
              uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
              if (v26 > 63) {
                bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v6 = -1 << v26;
              }
              uint64_t v1 = v0;
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v5 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_37;
                }
                if (v5 >= v10) {
                  goto LABEL_31;
                }
                unint64_t v16 = v6[v5];
                ++v17;
                if (v16) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v5 = v17;
          }
        }
LABEL_21:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_25247B350();
      sub_25247B360();
      uint64_t result = sub_25247B390();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2524377B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04688);
  uint64_t result = sub_25247AF20();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_25247B350();
      sub_25247B360();
      uint64_t result = sub_25247B390();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_252437A70(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_252437514();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_252437D44();
      goto LABEL_14;
    }
    sub_252438058();
  }
  uint64_t v8 = *v3;
  sub_25247B350();
  uint64_t v9 = qword_2524806E8[v5];
  sub_25247B360();
  uint64_t result = sub_25247B390();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = *(void *)(v8 + 48);
    if (qword_2524806E8[*(char *)(v11 + a2)] == v9)
    {
LABEL_13:
      uint64_t result = sub_25247B2B0();
      __break(1u);
    }
    else
    {
      uint64_t v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (qword_2524806E8[*(char *)(v11 + a2)] == v9) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v13 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v13 + 48) + a2) = v5;
  uint64_t v14 = *(void *)(v13 + 16);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    *(void *)(v13 + 16) = v16;
  }
  return result;
}

uint64_t sub_252437BE0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  unint64_t v6 = (unsigned char *)result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2524377B8();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_252437EC4();
      goto LABEL_12;
    }
    sub_2524382CC();
  }
  uint64_t v9 = *v3;
  uint64_t v10 = (char)*v6;
  sub_25247B350();
  uint64_t v11 = qword_2524806E8[v10];
  sub_25247B360();
  uint64_t result = sub_25247B390();
  uint64_t v12 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v12;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v13 = ~v12;
    while (qword_2524806E8[*(char *)(*(void *)(v9 + 48) + a2)] != v11)
    {
      a2 = (a2 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_12;
      }
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v14 + 48) + a2) = *v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (!v16)
  {
    *(void *)(v14 + 16) = v17;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_25247B2B0();
  __break(1u);
  return result;
}

void *sub_252437D44()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04688);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25247AF10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17) {
        break;
      }
    }
LABEL_25:
    unint64_t v19 = __clz(__rbit64(v17));
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = v19 + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 2;
  if (v18 >= v13) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_252437EC4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04688);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25247AF10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_252438058()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04688);
  uint64_t result = sub_25247AF20();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_33:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v15 >= v10) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_31;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16) {
        break;
      }
    }
LABEL_21:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_22:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_25247B350();
    sub_25247B360();
    uint64_t result = sub_25247B390();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 2;
  if (v17 >= v10)
  {
LABEL_31:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_2524382CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04688);
  uint64_t result = sub_25247AF20();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_25247B350();
    sub_25247B360();
    uint64_t result = sub_25247B390();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_252438554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A4B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  int64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, a2);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 48))(&v18, a2, a3);
  LOBYTE(a1) = v18;
  (*(void (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  LOBYTE(a3) = sub_2524388CC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C052B8);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_25247EAD0;
  *(unsigned char *)(v14 + 32) = a3;
  *(unsigned char *)(v14 + 33) = 0xFF030201 >> (8 * a1);
  uint64_t v15 = sub_25241E50C(v14);
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, a2);
  return v15;
}

uint64_t sub_252438784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25247A4B0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  char v9 = sub_2524388CC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C052B8);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_25247EAD0;
  *(unsigned char *)(v10 + 32) = v9;
  *(unsigned char *)(v10 + 33) = -1;
  uint64_t v11 = sub_25241E50C(v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

uint64_t sub_2524388CC()
{
  uint64_t result = sub_25247A1D0();
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19) {
    return ((unint64_t)v1 / 0x5460)
  }
         - 255 * (((unint64_t)v1 / 0x5460 * (unsigned __int128)0x101010101010102uLL) >> 64);
LABEL_7:
  __break(1u);
  return result;
}

unint64_t _s13HomeKitEvents9EventTagsO8CategoryO15tagsSplitByDate3for12dateIntervalSay10Foundation0jM0VAH_SayAI4DataVG0G0tGShyAA0dF0OG_AKtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A4B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_25247A010();
  unint64_t result = sub_25247A1D0();
  double v10 = v9;
  if ((~*(void *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v9 <= -1.0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v9 >= 1.84467441e19)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v11 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  sub_252479FF0();
  unint64_t result = sub_25247A1D0();
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v12 <= -1.0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v12 >= 1.84467441e19)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v13 = (unint64_t)v10 / 0xE10;
  unint64_t v14 = (unint64_t)v12;
  unint64_t v15 = (unint64_t)v12 / 0xE10;
  unint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v11)(v7, v4);
  char v19 = v14 / 0x5460 + ((v14 / 0x5460 * (unsigned __int128)0x101010101010102uLL) >> 64);
  unint64_t v18 = v15;
  if (v15 >= v13)
  {
    MEMORY[0x270FA5388](result);
    *(void *)&v17[-64] = &v19;
    *(void *)&v17[-56] = v13;
    v17[-48] = v16;
    *(void *)&v17[-40] = &v18;
    *(void *)&v17[-32] = a2;
    *(void *)&v17[-24] = v15;
    *(void *)&v17[-16] = a1;
    return sub_2524369F0((void (*)(uint64_t *))sub_252439258, (uint64_t)&v17[-80], (unint64_t)v10 / 0xE10, v15);
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_252438BC0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_252439204();
  uint64_t result = sub_25247AC80();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (char *)(a1 + 32);
    do
    {
      char v5 = *v4++;
      char v6 = v5;
      sub_2524373E0(&v7, &v6);
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

void *_s13HomeKitEvents9EventTagsO8CategoryO4tags3for12dateIntervalSay10Foundation4DataVGShyAA0dF0OG_AI04DateJ0VtFZ_0(uint64_t a1)
{
  v49[5] = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_25247A4B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A010();
  sub_25247A1D0();
  double v7 = v6;
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0) {
    goto LABEL_55;
  }
  if (v6 <= -1.0)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v6 >= 1.84467441e19)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  uint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_252479FF0();
  sub_25247A1D0();
  if ((~*(void *)&v9 & 0x7FF0000000000000) == 0)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  if (v9 <= -1.0)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if (v9 >= 1.84467441e19)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  unint64_t v10 = (unint64_t)v9;
  v8(v5, v2);
  unint64_t v11 = v10 / 0x5460 - (unint64_t)v7 / 0x5460;
  if (v10 / 0x5460 < (unint64_t)v7 / 0x5460)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  unint64_t v12 = v11 + 1;
  if (v11 == -1)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if ((v12 & 0x8000000000000000) != 0)
  {
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
  }
  uint64_t v13 = *(void *)(a1 + 16);
  if ((unsigned __int128)((uint64_t)v12 * (__int128)v13) >> 64 != (uint64_t)(v12 * v13) >> 63) {
    goto LABEL_64;
  }
  unint64_t v14 = sub_25241D78C(0, (v12 * v13) & ~((uint64_t)(v12 * v13) >> 63), 0, MEMORY[0x263F8EE78]);
  uint64_t v15 = 0;
  uint64_t v45 = a1 + 56;
  int v16 = v10 / 0x5460 - 255 * ((v10 / 0x5460 * (unsigned __int128)0x101010101010102uLL) >> 64);
  if (v12 <= 1) {
    uint64_t v17 = 1;
  }
  else {
    uint64_t v17 = v12;
  }
  uint64_t v42 = v17;
  long long v46 = xmmword_25247EAD0;
  unint64_t v43 = v12;
  while (2)
  {
    uint64_t v44 = v15 + 1;
    uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    unint64_t v20 = v19 & *(void *)(a1 + 56);
    int64_t v21 = (unint64_t)(v18 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v22 = 0;
    if (v20)
    {
LABEL_23:
      unint64_t v23 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v24 = v23 | (v22 << 6);
      goto LABEL_38;
    }
    while (1)
    {
      int64_t v25 = v22 + 1;
      if (__OFADD__(v22, 1))
      {
        __break(1u);
        goto LABEL_53;
      }
      if (v25 >= v21) {
        break;
      }
      unint64_t v26 = *(void *)(v45 + 8 * v25);
      ++v22;
      if (v26) {
        goto LABEL_37;
      }
      int64_t v22 = v25 + 1;
      if (v25 + 1 >= v21) {
        break;
      }
      unint64_t v26 = *(void *)(v45 + 8 * v22);
      if (v26) {
        goto LABEL_37;
      }
      int64_t v22 = v25 + 2;
      if (v25 + 2 >= v21) {
        break;
      }
      unint64_t v26 = *(void *)(v45 + 8 * v22);
      if (v26) {
        goto LABEL_37;
      }
      int64_t v27 = v25 + 3;
      if (v27 >= v21) {
        break;
      }
      unint64_t v26 = *(void *)(v45 + 8 * v27);
      if (!v26)
      {
        while (1)
        {
          int64_t v22 = v27 + 1;
          if (__OFADD__(v27, 1)) {
            break;
          }
          if (v22 >= v21) {
            goto LABEL_15;
          }
          unint64_t v26 = *(void *)(v45 + 8 * v22);
          ++v27;
          if (v26) {
            goto LABEL_37;
          }
        }
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      int64_t v22 = v27;
LABEL_37:
      unint64_t v20 = (v26 - 1) & v26;
      unint64_t v24 = __clz(__rbit64(v26)) + (v22 << 6);
LABEL_38:
      unsigned int v28 = 0xFF030201 >> (8 * *(unsigned char *)(*(void *)(a1 + 48) + v24));
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C052B8);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = v46;
      *(unsigned char *)(v29 + 32) = v16;
      *(unsigned char *)(v29 + 33) = v28;
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05348);
      v49[3] = v30;
      v49[4] = sub_2524391A8();
      v49[0] = v29;
      uint64_t v31 = __swift_project_boxed_opaque_existential_1(v49, v30);
      uint64_t v32 = *v31;
      size_t v33 = *(void *)(*v31 + 16);
      if (v33)
      {
        if (v33 <= 0xE)
        {
          memset(__dst, 0, sizeof(__dst));
          unsigned __int8 v48 = v33;
          memcpy(__dst, (const void *)(v32 + 32), v33);
          uint64_t v36 = *(void *)__dst;
          unint64_t v37 = *(unsigned int *)&__dst[8] | ((unint64_t)__dst[12] << 32) | ((unint64_t)__dst[13] << 40) | ((unint64_t)v48 << 48);
          swift_bridgeObjectRetain();
        }
        else
        {
          sub_25247A080();
          swift_allocObject();
          swift_bridgeObjectRetain();
          uint64_t v34 = sub_25247A040();
          uint64_t v35 = v34;
          if (v33 >= 0x7FFFFFFF)
          {
            sub_25247A170();
            uint64_t v36 = swift_allocObject();
            *(void *)(v36 + 16) = 0;
            *(void *)(v36 + 24) = v33;
            unint64_t v37 = v35 | 0x8000000000000000;
          }
          else
          {
            uint64_t v36 = v33 << 32;
            unint64_t v37 = v34 | 0x4000000000000000;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v36 = 0;
        unint64_t v37 = 0xC000000000000000;
      }
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
      unint64_t v39 = v14[2];
      unint64_t v38 = v14[3];
      if (v39 >= v38 >> 1) {
        unint64_t v14 = sub_25241D78C((void *)(v38 > 1), v39 + 1, 1, v14);
      }
      void v14[2] = v39 + 1;
      uint64_t v40 = &v14[2 * v39];
      v40[4] = v36;
      v40[5] = v37;
      if (v20) {
        goto LABEL_23;
      }
    }
LABEL_15:
    swift_release();
    if ((_BYTE)v16)
    {
      uint64_t v15 = v44;
      if (v44 != v43)
      {
        LOBYTE(v16) = v16 - 1;
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v15 = v44;
      if (v44 != v43)
      {
        LOBYTE(v16) = -1;
LABEL_18:
        if (v15 == v42) {
          goto LABEL_54;
        }
        continue;
      }
    }
    return v14;
  }
}

unint64_t sub_2524391A8()
{
  unint64_t result = qword_269C05350;
  if (!qword_269C05350)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C05348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05350);
  }
  return result;
}

unint64_t sub_252439204()
{
  unint64_t result = qword_269C05940;
  if (!qword_269C05940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05940);
  }
  return result;
}

uint64_t sub_252439258@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_252436EE4(a1, *(unsigned __int8 **)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(unint64_t **)(v2 + 40), *(void *)(v2 + 56), *(void *)(v2 + 64), a2);
}

uint64_t sub_252439280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2524392E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LubyRackoffEncryptionKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t asyncCache<A, B>(of:withKeysOf:expirationSeconds:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  if (a1 >= 1)
  {
    uint64_t v10 = type metadata accessor for ExpiringAsyncCache();
    uint64_t v11 = ExpiringAsyncCache.__allocating_init(expirationSeconds:)(a1);
    a5[3] = v10;
LABEL_3:
    uint64_t result = swift_getWitnessTable();
    a5[4] = result;
    *a5 = v11;
    return result;
  }
  if (!a1)
  {
    uint64_t v13 = type metadata accessor for SimpleAsyncCache();
    uint64_t v11 = SimpleAsyncCache.__allocating_init()();
    a5[3] = v13;
    goto LABEL_3;
  }
  a5[3] = type metadata accessor for DiscardingAsyncCache();
  a5[4] = swift_getWitnessTable();

  return DiscardingAsyncCache.init()(a2, a3, a4);
}

uint64_t dispatch thunk of AsyncCache.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 32) + **(int **)(a4 + 32));
  double v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *double v9 = v4;
  v9[1] = sub_2523D3A1C;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of AsyncCache.get(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 40) + **(int **)(a3 + 40));
  double v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *double v7 = v3;
  v7[1] = sub_2524167A0;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of AsyncCache.set(_:key:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 48) + **(int **)(a4 + 48));
  double v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *double v9 = v4;
  v9[1] = sub_2523D3928;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of AsyncCache.clear(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 56) + **(int **)(a3 + 56));
  double v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *double v7 = v3;
  v7[1] = sub_2523D3A1C;
  return v9(a1, a2, a3);
}

HomeKitEvents::WindowEvent::State_optional __swiftcall WindowEvent.State.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 5;
  if ((unint64_t)rawValue < 5) {
    char v2 = rawValue;
  }
  *double v1 = v2;
  return (HomeKitEvents::WindowEvent::State_optional)rawValue;
}

void *static WindowEvent.State.allCases.getter()
{
  return &unk_270299710;
}

uint64_t WindowEvent.State.rawValue.getter()
{
  return *v0;
}

HomeKitEvents::WindowEvent::State_optional sub_2524398D0(Swift::Int *a1)
{
  return WindowEvent.State.init(rawValue:)(*a1);
}

void sub_2524398D8(void *a1@<X8>)
{
  *a1 = &unk_270299738;
}

uint64_t WindowEvent.state.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for WindowEvent();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for WindowEvent()
{
  uint64_t result = qword_269C059E0;
  if (!qword_269C059E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t WindowEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25247A4B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t WindowEvent.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WindowEvent.category.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for EventBase(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t WindowEvent.roomIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WindowEvent.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WindowEvent.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  uint64_t v4 = sub_25247A540();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WindowEvent.accessoryName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WindowEvent.userIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);

  return sub_2523E1C2C(v3, a1);
}

uint64_t WindowEvent.hash(into:)()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  double v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A4B0();
  sub_25243B0E4(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_25243B0E4((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  type metadata accessor for WindowEvent();
  return sub_25247B360();
}

BOOL static WindowEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (!_s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(a1, a2)) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for WindowEvent();
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20));
}

uint64_t WindowEvent.hashValue.getter()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  double v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247B350();
  sub_25247A4B0();
  sub_25243B0E4(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_25243B0E4((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  type metadata accessor for WindowEvent();
  sub_25247B360();
  return sub_25247B390();
}

uint64_t sub_25243A264()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  double v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A4B0();
  sub_25243B0E4(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_25243B0E4((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_25247B360();
}

uint64_t sub_25243A54C()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  double v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247B350();
  sub_25247A4B0();
  sub_25243B0E4(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_25243B0E4((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_25247B360();
  return sub_25247B390();
}

BOOL sub_25243A84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(a1, a2)
      && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20));
}

uint64_t WindowEvent.init(date:homeIdentifier:roomIdentifier:roomName:accessoryIdentifier:accessoryName:state:userIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11)
{
  char v29 = *a10;
  uint64_t v17 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a9, a1, v17);
  uint64_t v18 = type metadata accessor for EventBase(0);
  uint64_t v19 = a9 + *(int *)(v18 + 20);
  uint64_t v20 = sub_25247A540();
  int64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32);
  v21(v19, a2, v20);
  *(unsigned char *)(a9 + *(int *)(v18 + 24)) = 1;
  int64_t v22 = (int *)type metadata accessor for AccessoryEventBase(0);
  v21(a9 + v22[5], a3, v20);
  unint64_t v23 = (void *)(a9 + v22[6]);
  *unint64_t v23 = a4;
  v23[1] = a5;
  v21(a9 + v22[7], a6, v20);
  unint64_t v24 = (void *)(a9 + v22[8]);
  *unint64_t v24 = a7;
  v24[1] = a8;
  sub_2523E28C4(a11, a9 + v22[9]);
  uint64_t result = type metadata accessor for WindowEvent();
  *(unsigned char *)(a9 + *(int *)(result + 20)) = v29;
  return result;
}

uint64_t WindowEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x270FA5388](v5 - 8);
  double v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_2523D918C((uint64_t)a1, (uint64_t)v11);
  sub_252466A64((uint64_t)v11, (uint64_t)v7);
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_2523E15F0(a1, (uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  char v9 = v11[0];
  sub_2523E29D8((uint64_t)v7, a2);
  uint64_t result = type metadata accessor for WindowEvent();
  *(unsigned char *)(a2 + *(int *)(result + 20)) = v9;
  return result;
}

uint64_t WindowEvent.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04810);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = sub_252467000(a1);
  if (!v2)
  {
    v9[15] = *(unsigned char *)(v1 + *(int *)(type metadata accessor for WindowEvent() + 20));
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_2523D3370();
    sub_25247B3B0();
    v9[14] = 1;
    sub_25243AD88();
    sub_25247B1D0();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_25243ACA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WindowEvent.init(from:)(a1, a2);
}

uint64_t sub_25243ACBC(void *a1)
{
  return WindowEvent.encode(to:)(a1);
}

uint64_t sub_25243ACD8()
{
  return sub_25247A9D0();
}

uint64_t sub_25243AD38()
{
  return sub_25247A9C0();
}

unint64_t sub_25243AD88()
{
  unint64_t result = qword_269C05968;
  if (!qword_269C05968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05968);
  }
  return result;
}

unint64_t sub_25243ADE0()
{
  unint64_t result = qword_269C05970;
  if (!qword_269C05970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05970);
  }
  return result;
}

unint64_t sub_25243AE38()
{
  unint64_t result = qword_269C05978;
  if (!qword_269C05978)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C05980);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05978);
  }
  return result;
}

unint64_t sub_25243AE98()
{
  unint64_t result = qword_269C05988;
  if (!qword_269C05988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05988);
  }
  return result;
}

uint64_t sub_25243AEEC(void *a1)
{
  a1[1] = sub_25243B0E4(&qword_269C05998, (void (*)(uint64_t))type metadata accessor for WindowEvent);
  a1[2] = sub_25243B0E4(&qword_269C059A0, (void (*)(uint64_t))type metadata accessor for WindowEvent);
  uint64_t result = sub_25243B0E4(&qword_269C059A8, (void (*)(uint64_t))type metadata accessor for WindowEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_25243AF98()
{
  return sub_25243B0E4(&qword_269C059B0, (void (*)(uint64_t))type metadata accessor for WindowEvent);
}

uint64_t sub_25243AFE0(uint64_t a1)
{
  uint64_t result = sub_25243B0E4(&qword_269C05990, (void (*)(uint64_t))type metadata accessor for WindowEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25243B038(void *a1)
{
  a1[1] = sub_25243B0E4(&qword_269C059B8, (void (*)(uint64_t))type metadata accessor for WindowEvent);
  a1[2] = sub_25243B0E4(&qword_269C059C0, (void (*)(uint64_t))type metadata accessor for WindowEvent);
  uint64_t result = sub_25243B0E4(&qword_269C059C8, (void (*)(uint64_t))type metadata accessor for WindowEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_25243B0E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25243B12C()
{
  return sub_25243B0E4(&qword_269C059B8, (void (*)(uint64_t))type metadata accessor for WindowEvent);
}

unint64_t sub_25243B174(void *a1)
{
  a1[1] = sub_2523E42EC();
  a1[2] = sub_25243AD88();
  unint64_t result = sub_25243B1AC();
  a1[3] = result;
  return result;
}

unint64_t sub_25243B1AC()
{
  unint64_t result = qword_269C059D0;
  if (!qword_269C059D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C059D0);
  }
  return result;
}

unint64_t sub_25243B200(uint64_t a1)
{
  unint64_t result = sub_25243B228();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25243B228()
{
  unint64_t result = qword_269C059D8;
  if (!qword_269C059D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C059D8);
  }
  return result;
}

unint64_t sub_25243B27C(uint64_t a1)
{
  unint64_t result = sub_25243AE98();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for WindowEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25243B2B8);
}

uint64_t sub_25243B2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AccessoryEventBaseLegacy(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 5) {
      return v10 - 4;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for WindowEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25243B388);
}

uint64_t sub_25243B388(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AccessoryEventBaseLegacy(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 4;
  }
  return result;
}

uint64_t sub_25243B444()
{
  uint64_t result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DoorEvent.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WindowEvent.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25243B634);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WindowEvent.State()
{
  return &type metadata for WindowEvent.State;
}

unint64_t sub_25243B66C()
{
  unint64_t result = qword_269C059F0;
  if (!qword_269C059F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C059F0);
  }
  return result;
}

uint64_t static HMVCommands.submitTaskRequestForIdentifier(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_25243B6E4, 0, 0);
}

uint64_t sub_25243B6E4()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = swift_task_alloc();
  v0[4] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  unsigned int v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C04588 + dword_269C04588);
  unsigned int v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *unsigned int v4 = v0;
  v4[1] = sub_25241FE1C;
  return v6((uint64_t)v6, (uint64_t)sub_25243B8A4, v3);
}

void sub_25243B7BC(void *a1, uint64_t a2)
{
  unsigned int v4 = (void *)sub_25247A830();
  v6[4] = sub_25243BAC0;
  v6[5] = a2;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 1107296256;
  uint64_t v6[2] = sub_25244C4D8;
  v6[3] = &block_descriptor_12;
  uint64_t v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilSubmitTaskRequestForIdentifierWithIdentifier_reply_, v4, v5);
  _Block_release(v5);
}

void sub_25243B8A4(void *a1, uint64_t a2)
{
}

void sub_25243B8AC(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v4 - 8);
  unsigned int v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    uint64_t v8 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_2523D380C;
    v9[6] = v7;
    id v10 = a1;
    swift_retain();
    id v11 = a1;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C049A8, (uint64_t)v9);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v12 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = 0;
    void v13[3] = 0;
    void v13[4] = a2;
    v13[5] = sub_2523D3704;
    v13[6] = 0;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C04570, (uint64_t)v13);
    swift_release();
  }
}

void sub_25243BAC0(void *a1)
{
  sub_25243B8AC(a1, v1);
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t sub_25243BAE4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t static EventRecord.fieldKey(_:)(char *a1)
{
  return *(void *)&aData_4[8 * *a1];
}

uint64_t EventRecord.Field.rawValue.getter()
{
  return *(void *)&aData_4[8 * *v0];
}

void EventRecord.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for EventRecord(0);
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25247A4B0();
  uint64_t v80 = *(void *)(v7 - 8);
  uint64_t v81 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v79 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SomeEvent();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v77 = (uint64_t)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for EventRecord.DecodedEvent(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v78 = (uint64_t *)((char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v84 = (uint64_t)&v71 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_25247A540();
  uint64_t v87 = *(void *)(v18 - 8);
  uint64_t v88 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v83 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v82 = (char *)&v71 - v22;
  MEMORY[0x270FA5388](v21);
  unint64_t v24 = (char *)&v71 - v23;
  if (sub_25247AE60() == 0x746E657645 && v25 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v26 = sub_25247B260();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
    {
      *(void *)&long long v89 = 0;
      *((void *)&v89 + 1) = 0xE000000000000000;
      sub_25247AF40();
      swift_bridgeObjectRelease();
      *(void *)&long long v89 = 0xD00000000000001FLL;
      *((void *)&v89 + 1) = 0x800000025247CF30;
      sub_25247AE60();
      sub_25247A920();
      swift_bridgeObjectRelease();
      long long v41 = v89;
      sub_25243D91C();
      swift_allocError();
      *(void *)uint64_t v42 = v4;
      *(_OWORD *)(v42 + 8) = v41;
      swift_willThrow();

      return;
    }
  }
  uint64_t v75 = v6;
  uint64_t v76 = a2;
  uint64_t v85 = v4;
  id v27 = objc_msgSend(a1, sel_recordID);
  unsigned int v28 = a1;
  id v29 = objc_msgSend(v27, sel_recordName);

  sub_25247A840();
  sub_25247A4C0();
  swift_bridgeObjectRelease();
  uint64_t v30 = v87;
  uint64_t v31 = v88;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v17, 1, v88) == 1)
  {
    sub_25243D970((uint64_t)v17);
    *(void *)&long long v89 = 0;
    *((void *)&v89 + 1) = 0xE000000000000000;
    sub_25247AF40();
    swift_bridgeObjectRelease();
    *(void *)&long long v89 = 0xD00000000000002FLL;
    *((void *)&v89 + 1) = 0x800000025247CF50;
    id v32 = objc_msgSend(v28, sel_recordID);
    id v33 = objc_msgSend(v32, sel_recordName);

    sub_25247A840();
    sub_25247A920();
    swift_bridgeObjectRelease();
    long long v34 = v89;
    unint64_t v35 = v85 | 0x8000000000000000;
    sub_25243D91C();
    swift_allocError();
    *(void *)uint64_t v36 = v35;
    *(_OWORD *)(v36 + 8) = v34;
    swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v24, v17, v31);
    id v37 = objc_msgSend(v28, sel_encryptedValues);
    uint64_t v38 = v86;
    uint64_t v39 = sub_252464B4C(1, v37);
    uint64_t v40 = v28;
    if (v38)
    {
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v31);
    }
    else
    {
      uint64_t v43 = v39;
      char v44 = v39 - 1;
      if ((unint64_t)(v39 - 1) >= 8)
      {
        *(void *)&long long v89 = 0;
        *((void *)&v89 + 1) = 0xE000000000000000;
        sub_25247AF40();
        swift_bridgeObjectRelease();
        *(void *)&long long v89 = 0xD000000000000020;
        *((void *)&v89 + 1) = 0x800000025247CF80;
        uint64_t v92 = v43;
        sub_25247B200();
        sub_25247A920();
        swift_bridgeObjectRelease();
        long long v45 = v89;
        uint64_t v46 = v85 | 0x2000000000000000;
        sub_25243D91C();
        swift_allocError();
        *(void *)uint64_t v47 = v46;
        *(_OWORD *)(v47 + 8) = v45;
        swift_willThrow();
        swift_unknownObjectRelease();

        (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v88);
      }
      else
      {
        swift_unknownObjectRetain();
        sub_252464DB8(v37, &v89);
        swift_unknownObjectRelease();
        long long v48 = v89;
        LOBYTE(v89) = v44;
        id v49 = v37;
        uint64_t v50 = v84;
        uint64_t v86 = v48;
        sub_25243D130(v48, *((uint64_t *)&v89 + 1), &v89);
        uint64_t v73 = *((void *)&v48 + 1);
        id v74 = v49;
        uint64_t v51 = (void (*)(void, void, void))v78;
        sub_25243DDE0(v50, (uint64_t)v78, type metadata accessor for EventRecord.DecodedEvent);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v90 = type metadata accessor for FakeEvent();
          uint64_t v91 = sub_252444944(&qword_269C052E8, (void (*)(uint64_t))type metadata accessor for FakeEvent);
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v89);
          sub_25243DD18((uint64_t)v51, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for FakeEvent);
        }
        else
        {
          uint64_t v53 = (uint64_t)v51;
          uint64_t v54 = v77;
          sub_25243DD18(v53, v77, (uint64_t (*)(void))type metadata accessor for SomeEvent);
          SomeEvent.anyEvent.getter((uint64_t *)&v89);
          uint64_t v30 = v87;
          sub_25243DD80(v54, (uint64_t (*)(void))type metadata accessor for SomeEvent);
        }
        uint64_t v72 = v24;
        uint64_t v78 = *(void **)(v30 + 16);
        ((void (*)(char *, char *, uint64_t))v78)(v82, v24, v88);
        uint64_t v55 = v90;
        uint64_t v56 = v91;
        __swift_project_boxed_opaque_existential_1(&v89, v90);
        (*(void (**)(uint64_t, uint64_t))(v56 + 40))(v55, v56);
        uint64_t v57 = v90;
        uint64_t v58 = v91;
        __swift_project_boxed_opaque_existential_1(&v89, v90);
        uint64_t v59 = v79;
        (*(void (**)(uint64_t, uint64_t))(v58 + 32))(v57, v58);
        uint64_t v77 = EventRecord.DecodedEvent.tags.getter();
        uint64_t v60 = (uint64_t)v75;
        uint64_t v61 = v88;
        uint64_t v62 = (void (*)(uint64_t, char *, uint64_t))v78;
        ((void (*)(char *, char *, uint64_t))v78)(v75, v82, v88);
        uint64_t v63 = (int *)v85;
        v62(v60 + *(int *)(v85 + 20), v83, v61);
        uint64_t v65 = v80;
        uint64_t v64 = v81;
        (*(void (**)(uint64_t, char *, uint64_t))(v80 + 16))(v60 + v63[6], v59, v81);
        *(unsigned char *)(v60 + v63[7]) = v44;
        uint64_t v66 = (void *)(v60 + v63[8]);
        uint64_t v67 = v73;
        *uint64_t v66 = v86;
        v66[1] = v67;
        *(void *)(v60 + v63[9]) = v77;
        type metadata accessor for Configuration();
        id v68 = static Configuration.cloudKitRecordDateCoalescingWindowSeconds.getter();
        (*(void (**)(char *, uint64_t))(v65 + 8))(v59, v64);
        uint64_t v69 = v88;
        uint64_t v70 = *(void (**)(char *, uint64_t))(v87 + 8);
        v70(v83, v88);
        v70(v82, v69);
        *(void *)(v60 + v63[10]) = v68;
        sub_25243DD18(v60, v76, type metadata accessor for EventRecord);
        swift_unknownObjectRelease();

        sub_25243DD80(v84, type metadata accessor for EventRecord.DecodedEvent);
        v70(v72, v69);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
      }
    }
  }
}

uint64_t EventRecord.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25247A540();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t EventRecord.home.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventRecord(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EventRecord.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventRecord(0) + 24);
  uint64_t v4 = sub_25247A4B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EventRecord.dataType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for EventRecord(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t EventRecord.data.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for EventRecord(0) + 32);
  uint64_t v2 = *(void *)v1;
  sub_252408194(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t EventRecord.tags.getter()
{
  type metadata accessor for EventRecord(0);

  return swift_bridgeObjectRetain();
}

uint64_t EventRecord.coalescingWindowSeconds.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EventRecord(0) + 40));
}

uint64_t EventRecord.init(identifier:home:date:dataType:data:tags:coalescingWindowSeconds:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>, char a10)
{
  char v14 = *a4;
  uint64_t v15 = sub_25247A540();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v30 = a1;
  v17(a9, a1, v15);
  uint64_t v18 = (int *)type metadata accessor for EventRecord(0);
  v17(a9 + v18[5], a2, v15);
  uint64_t v19 = a9 + v18[6];
  uint64_t v20 = sub_25247A4B0();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, a3, v20);
  *(unsigned char *)(a9 + v18[7]) = v14;
  id v22 = a8;
  uint64_t v23 = (void *)(a9 + v18[8]);
  *uint64_t v23 = a5;
  v23[1] = a6;
  *(void *)(a9 + v18[9]) = a7;
  if (a10)
  {
    type metadata accessor for Configuration();
    id v22 = static Configuration.cloudKitRecordDateCoalescingWindowSeconds.getter();
  }
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a3, v20);
  unint64_t v24 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v24(a2, v15);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v24)(v30, v15);
  *(void *)(a9 + v18[10]) = v22;
  return result;
}

uint64_t EventRecord.init(identifier:dataType:data:coalescingWindowSeconds:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  int v67 = a6;
  uint64_t v72 = a5;
  uint64_t v77 = a1;
  uint64_t v78 = a4;
  uint64_t v69 = a7;
  uint64_t v68 = type metadata accessor for EventRecord(0);
  MEMORY[0x270FA5388](v68);
  uint64_t v71 = (char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_25247A4B0();
  uint64_t v74 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v75 = (char *)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SomeEvent();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v66 = (uint64_t (**)(uint64_t, uint64_t))((char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v85 = sub_25247A540();
  uint64_t v13 = *(uint64_t (***)(uint64_t, uint64_t))(v85 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v85);
  uint64_t v16 = (char *)v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v73 = (char *)v59 - v17;
  uint64_t v18 = type metadata accessor for EventRecord.DecodedEvent(0);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  unint64_t v24 = (char *)v59 - v23;
  MEMORY[0x270FA5388](v22);
  char v26 = (char *)v59 - v25;
  int v27 = *a2;
  LOBYTE(v82[0]) = v27;
  unint64_t v28 = v78;
  id v29 = v76;
  sub_25243D130(a3, v78, v82);
  if (v29)
  {
    sub_2524081EC(a3, v28);
    return v13[1](v77, v85);
  }
  else
  {
    uint64_t v60 = v21;
    uint64_t v31 = (uint64_t)v66;
    int v62 = v27;
    uint64_t v76 = v16;
    uint64_t v63 = 0;
    id v32 = v13[2];
    id v33 = v73;
    v59[1] = v13 + 2;
    uint64_t v61 = v32;
    ((void (*)(char *, uint64_t, uint64_t))v32)(v73, v77, v85);
    uint64_t v65 = v26;
    sub_25243DDE0((uint64_t)v26, (uint64_t)v24, type metadata accessor for EventRecord.DecodedEvent);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    unint64_t v35 = v33;
    uint64_t v64 = a3;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v83 = type metadata accessor for FakeEvent();
      uint64_t v84 = sub_252444944(&qword_269C052E8, (void (*)(uint64_t))type metadata accessor for FakeEvent);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v82);
      sub_25243DD18((uint64_t)v24, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for FakeEvent);
      uint64_t v37 = v31;
    }
    else
    {
      uint64_t v37 = v31;
      sub_25243DD18((uint64_t)v24, v31, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      SomeEvent.anyEvent.getter(v82);
      sub_25243DD80(v31, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    }
    uint64_t v66 = v13;
    uint64_t v38 = v83;
    uint64_t v39 = v84;
    __swift_project_boxed_opaque_existential_1(v82, v83);
    uint64_t v40 = v76;
    (*(void (**)(uint64_t, uint64_t))(v39 + 40))(v38, v39);
    uint64_t v41 = (uint64_t)v60;
    sub_25243DDE0((uint64_t)v65, (uint64_t)v60, type metadata accessor for EventRecord.DecodedEvent);
    int v42 = swift_getEnumCaseMultiPayload();
    uint64_t v43 = v70;
    if (v42 == 1)
    {
      uint64_t v80 = type metadata accessor for FakeEvent();
      uint64_t v81 = sub_252444944(&qword_269C052E8, (void (*)(uint64_t))type metadata accessor for FakeEvent);
      char v44 = __swift_allocate_boxed_opaque_existential_1(v79);
      sub_25243DD18(v41, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for FakeEvent);
    }
    else
    {
      sub_25243DD18(v41, v37, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      SomeEvent.anyEvent.getter(v79);
      sub_25243DD80(v37, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    }
    long long v45 = v75;
    uint64_t v46 = v40;
    uint64_t v47 = v80;
    uint64_t v48 = v81;
    __swift_project_boxed_opaque_existential_1(v79, v80);
    (*(void (**)(uint64_t, uint64_t))(v48 + 32))(v47, v48);
    uint64_t v49 = EventRecord.DecodedEvent.tags.getter();
    uint64_t v50 = (uint64_t)v71;
    uint64_t v51 = v85;
    uint64_t v52 = v61;
    ((void (*)(char *, char *, uint64_t))v61)(v71, v35, v85);
    uint64_t v53 = (int *)v68;
    ((void (*)(uint64_t, char *, uint64_t))v52)(v50 + *(int *)(v68 + 20), v46, v51);
    (*(void (**)(uint64_t, char *, uint64_t))(v74 + 16))(v50 + v53[6], v45, v43);
    *(unsigned char *)(v50 + v53[7]) = v62;
    uint64_t v54 = (uint64_t *)(v50 + v53[8]);
    uint64_t v55 = v78;
    *uint64_t v54 = v64;
    v54[1] = v55;
    *(void *)(v50 + v53[9]) = v49;
    id v56 = v72;
    if (v67)
    {
      type metadata accessor for Configuration();
      id v56 = static Configuration.cloudKitRecordDateCoalescingWindowSeconds.getter();
    }
    (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v43);
    uint64_t v57 = v66[1];
    uint64_t v58 = v85;
    v57((uint64_t)v76, v85);
    v57((uint64_t)v73, v58);
    *(void *)(v50 + v53[10]) = v56;
    sub_25243DD18(v50, v69, type metadata accessor for EventRecord);
    v57(v77, v58);
    sub_25243DD80((uint64_t)v65, type metadata accessor for EventRecord.DecodedEvent);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
  }
}

uint64_t sub_25243D130(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  switch(*a3)
  {
    case 1:
      sub_252479FB0();
      swift_allocObject();
      sub_252479FA0();
      type metadata accessor for ContactSensorEvent();
      sub_252444944(qword_269C05A48, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
      sub_252479F90();
      uint64_t result = swift_release();
      if (!v3) {
        goto LABEL_15;
      }
      break;
    case 2:
      sub_252479FB0();
      swift_allocObject();
      sub_252479FA0();
      type metadata accessor for DoorEvent();
      sub_252444944(&qword_269C05A40, (void (*)(uint64_t))type metadata accessor for DoorEvent);
      sub_252479F90();
      uint64_t result = swift_release();
      if (!v3) {
        goto LABEL_15;
      }
      break;
    case 3:
      sub_252479FB0();
      swift_allocObject();
      sub_252479FA0();
      type metadata accessor for GarageDoorEvent();
      sub_252444944(&qword_269C05A38, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
      sub_252479F90();
      uint64_t result = swift_release();
      if (!v3) {
        goto LABEL_15;
      }
      break;
    case 4:
      sub_252479FB0();
      swift_allocObject();
      sub_252479FA0();
      type metadata accessor for SecuritySystemEvent();
      sub_252444944(&qword_269C051A8, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
      sub_252479F90();
      uint64_t result = swift_release();
      if (!v3) {
        goto LABEL_15;
      }
      break;
    case 5:
      sub_252479FB0();
      swift_allocObject();
      sub_252479FA0();
      type metadata accessor for SmokeDetectorEvent();
      sub_252444944(&qword_269C05498, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
      sub_252479F90();
      uint64_t result = swift_release();
      if (!v3) {
        goto LABEL_15;
      }
      break;
    case 6:
      sub_252479FB0();
      swift_allocObject();
      sub_252479FA0();
      type metadata accessor for WindowEvent();
      sub_252444944(&qword_269C05998, (void (*)(uint64_t))type metadata accessor for WindowEvent);
      sub_252479F90();
      uint64_t result = swift_release();
      if (!v3) {
        goto LABEL_15;
      }
      break;
    case 7:
      sub_252479FB0();
      swift_allocObject();
      sub_252479FA0();
      type metadata accessor for FakeEvent();
      sub_252444944(&qword_269C052F0, (void (*)(uint64_t))type metadata accessor for FakeEvent);
      sub_252479F90();
      uint64_t result = swift_release();
      if (!v3)
      {
        type metadata accessor for EventRecord.DecodedEvent(0);
        goto LABEL_16;
      }
      break;
    default:
      sub_252479FB0();
      swift_allocObject();
      sub_252479FA0();
      type metadata accessor for LockEvent();
      sub_252444944(&qword_269C04848, (void (*)(uint64_t))type metadata accessor for LockEvent);
      sub_252479F90();
      uint64_t result = swift_release();
      if (!v3)
      {
LABEL_15:
        type metadata accessor for SomeAccessoryEvent();
        swift_storeEnumTagMultiPayload();
        type metadata accessor for EventRecord.DecodedEvent(0);
LABEL_16:
        uint64_t result = swift_storeEnumTagMultiPayload();
      }
      break;
  }
  return result;
}

uint64_t EventRecord.DecodedEvent.anyEvent.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SomeEvent();
  MEMORY[0x270FA5388](v4 - 8);
  unsigned int v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EventRecord.DecodedEvent(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25243DDE0(v2, (uint64_t)v9, type metadata accessor for EventRecord.DecodedEvent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    a1[3] = type metadata accessor for FakeEvent();
    a1[4] = sub_252444944(&qword_269C052E8, (void (*)(uint64_t))type metadata accessor for FakeEvent);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
    return sub_25243DD18((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for FakeEvent);
  }
  else
  {
    sub_25243DD18((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    SomeEvent.anyEvent.getter(a1);
    return sub_25243DD80((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SomeEvent);
  }
}

uint64_t type metadata accessor for EventRecord(uint64_t a1)
{
  return sub_2523FC8A8(a1, (uint64_t *)&unk_269C05A18);
}

uint64_t type metadata accessor for EventRecord.DecodedEvent(uint64_t a1)
{
  return sub_2523FC8A8(a1, (uint64_t *)&unk_269C05A28);
}

unint64_t sub_25243D91C()
{
  unint64_t result = qword_269C05A00;
  if (!qword_269C05A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05A00);
  }
  return result;
}

uint64_t sub_25243D970(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t EventRecord.DecodedEvent.tags.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FakeEvent();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SomeEvent();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v26 - v12;
  uint64_t v14 = type metadata accessor for EventRecord.DecodedEvent(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25243DDE0(v1, (uint64_t)v16, type metadata accessor for EventRecord.DecodedEvent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_25243DD18((uint64_t)v16, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FakeEvent);
    uint64_t v17 = FakeEvent.tags.getter();
    uint64_t v18 = type metadata accessor for FakeEvent;
    uint64_t v19 = (uint64_t)v4;
  }
  else
  {
    sub_25243DD18((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    sub_25243DDE0((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    sub_25243DD18((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
    sub_25246F9FC(v26);
    uint64_t v20 = v27;
    uint64_t v21 = v28;
    uint64_t v22 = __swift_project_boxed_opaque_existential_1(v26, v27);
    v29[3] = v20;
    uint64_t v23 = *(void *)(v21 + 16);
    v29[4] = v23;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v29);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(boxed_opaque_existential_1, v22, v20);
    sub_25243DD80((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 48))(v20, v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    uint64_t v18 = type metadata accessor for SomeEvent;
    uint64_t v19 = (uint64_t)v13;
  }
  sub_25243DD80(v19, (uint64_t (*)(void))v18);
  return v17;
}

void static EventRecord.recordType.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

HomeKitEvents::EventRecord::DataType_optional __swiftcall EventRecord.DataType.init(rawValue:)(Swift::Int64 rawValue)
{
  char v2 = rawValue - 1;
  if ((unint64_t)(rawValue - 1) >= 8) {
    char v2 = 8;
  }
  *uint64_t v1 = v2;
  return (HomeKitEvents::EventRecord::DataType_optional)rawValue;
}

uint64_t sub_25243DD18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25243DD80(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25243DDE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

HomeKitEvents::EventRecord::Field_optional __swiftcall EventRecord.Field.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  unint64_t v3 = sub_25247B130();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *char v2 = v5;
  return result;
}

uint64_t sub_25243DEA4(char *a1, char *a2)
{
  return sub_2523D2DC4(*a1, *a2);
}

uint64_t sub_25243DEB0()
{
  return sub_25247B390();
}

uint64_t sub_25243DF0C()
{
  sub_25247A8D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25243DF4C()
{
  return sub_25247B390();
}

HomeKitEvents::EventRecord::Field_optional sub_25243DFA4(Swift::String *a1)
{
  return EventRecord.Field.init(rawValue:)(*a1);
}

void sub_25243DFB0(void *a1@<X8>)
{
  *a1 = *(void *)&aData_4[8 * *v1];
  a1[1] = 0xE400000000000000;
}

uint64_t static EventRecord.recordZoneID(forHomeIdentifier:)(uint64_t a1)
{
  uint64_t v2 = sub_25247A540();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A840();
  sub_25243E170();
  type metadata accessor for Configuration();
  static Configuration.zoneUUID(forHomeIdentifier:)(a1, (uint64_t)v5);
  uint64_t v11 = sub_25247A4D0();
  uint64_t v12 = v6;
  uint64_t v9 = 0x2D73746E657665;
  unint64_t v10 = 0xE700000000000000;
  uint64_t v9 = sub_25247A970();
  unint64_t v10 = v7;
  sub_25247A910();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_25247AD70();
}

unint64_t sub_25243E170()
{
  unint64_t result = qword_269C04FF0;
  if (!qword_269C04FF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269C04FF0);
  }
  return result;
}

uint64_t static EventRecord.encodeEvent(_:)(unsigned char *a1, uint64_t a2)
{
  id v32 = a1;
  uint64_t v30 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x270FA5388](v30);
  uint64_t v31 = (uint64_t)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SomeEvent();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  unint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  unint64_t v10 = (char *)&v29 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = type metadata accessor for EventRecord.DecodedEvent(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v29 - v17;
  sub_25243DDE0(a2, (uint64_t)&v29 - v17, type metadata accessor for EventRecord.DecodedEvent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v37 = type metadata accessor for FakeEvent();
    uint64_t v38 = sub_252444944(&qword_269C052E8, (void (*)(uint64_t))type metadata accessor for FakeEvent);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v36);
    sub_25243DD18((uint64_t)v18, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for FakeEvent);
  }
  else
  {
    sub_25243DD18((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    SomeEvent.anyEvent.getter(v36);
    sub_25243DD80((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SomeEvent);
  }
  uint64_t v20 = v37;
  uint64_t v21 = v38;
  uint64_t v22 = __swift_project_boxed_opaque_existential_1(v36, v37);
  uint64_t v34 = v20;
  uint64_t v35 = *(void *)(v21 + 16);
  uint64_t v23 = __swift_allocate_boxed_opaque_existential_1(v33);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v23, v22, v20);
  __swift_project_boxed_opaque_existential_1(v33, v34);
  sub_252479FE0();
  swift_allocObject();
  sub_252479FD0();
  uint64_t v24 = v39;
  uint64_t v25 = sub_252479FC0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  if (!v24)
  {
    sub_25243DDE0(a2, (uint64_t)v16, type metadata accessor for EventRecord.DecodedEvent);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_25243DD80((uint64_t)v16, type metadata accessor for EventRecord.DecodedEvent);
      *id v32 = 7;
    }
    else
    {
      sub_25243DD18((uint64_t)v16, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      sub_25243DDE0((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      uint64_t v26 = v31;
      sub_25243DD18((uint64_t)v7, v31, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      unint64_t v27 = 0x6050400030201uLL >> (8 * swift_getEnumCaseMultiPayload());
      sub_25243DD80(v26, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      sub_25243DD80((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      *id v32 = v27;
    }
  }
  return v25;
}

uint64_t EventRecord.DataType.rawValue.getter()
{
  return *v0 + 1;
}

uint64_t sub_25243E630()
{
  return sub_25247B390();
}

uint64_t sub_25243E678()
{
  return sub_25247B380();
}

uint64_t sub_25243E6A8()
{
  return sub_25247B390();
}

HomeKitEvents::EventRecord::DataType_optional sub_25243E6EC(Swift::Int64 *a1)
{
  return EventRecord.DataType.init(rawValue:)(*a1);
}

void sub_25243E6F4(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

BOOL EventRecord.DecodedEvent.isFake.getter()
{
  uint64_t v1 = type metadata accessor for EventRecord.DecodedEvent(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25243DDE0(v0, (uint64_t)v3, type metadata accessor for EventRecord.DecodedEvent);
  BOOL v4 = swift_getEnumCaseMultiPayload() == 1;
  sub_25243DD80((uint64_t)v3, type metadata accessor for EventRecord.DecodedEvent);
  return v4;
}

uint64_t EventRecord.DecodedEvent.isLegacySecurityEvent.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x270FA5388](v2 - 8);
  BOOL v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SomeEvent();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)v21 - v9;
  uint64_t v11 = type metadata accessor for EventRecord.DecodedEvent(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25243DDE0(v1, (uint64_t)v13, type metadata accessor for EventRecord.DecodedEvent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_25243DD80((uint64_t)v13, type metadata accessor for EventRecord.DecodedEvent);
    char v14 = 1;
  }
  else
  {
    sub_25243DD18((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    sub_25243DDE0((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    sub_25243DD18((uint64_t)v8, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
    sub_25246F9FC(v21);
    uint64_t v15 = v22;
    uint64_t v16 = v23;
    uint64_t v17 = __swift_project_boxed_opaque_existential_1(v21, v22);
    v24[3] = v15;
    uint64_t v18 = *(void *)(v16 + 16);
    v24[4] = v18;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(boxed_opaque_existential_1, v17, v15);
    sub_25243DD80((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    char v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v15, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    sub_25243DD80((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SomeEvent);
  }
  return v14 & 1;
}

unint64_t sub_25243EA88()
{
  unint64_t result = qword_269C05A08;
  if (!qword_269C05A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05A08);
  }
  return result;
}

unint64_t sub_25243EAE0()
{
  unint64_t result = qword_269C05A10;
  if (!qword_269C05A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05A10);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for EventRecord(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25247A540();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[6];
    unint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_25247A4B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    char v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = *(void *)((char *)a2 + v13);
    unint64_t v16 = *(void *)((char *)a2 + v13 + 8);
    sub_252408194(v15, v16);
    *char v14 = v15;
    v14[1] = v16;
    uint64_t v17 = a3[10];
    *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EventRecord(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_25247A540();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  sub_2524081EC(*(void *)(a1 + a2[8]), *(void *)(a1 + a2[8] + 8));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EventRecord(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25247A540();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v13 = (uint64_t *)(a1 + v12);
  uint64_t v14 = *(void *)(a2 + v12);
  unint64_t v15 = *(void *)(a2 + v12 + 8);
  sub_252408194(v14, v15);
  uint64_t *v13 = v14;
  v13[1] = v15;
  uint64_t v16 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EventRecord(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25247A540();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v12 = a3[8];
  uint64_t v13 = (uint64_t *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  sub_252408194(*v14, v16);
  uint64_t v17 = *v13;
  unint64_t v18 = v13[1];
  uint64_t *v13 = v15;
  v13[1] = v16;
  sub_2524081EC(v17, v18);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for EventRecord(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25247A540();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v13 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for EventRecord(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25247A540();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v13 = *(void *)(a1 + v12);
  unint64_t v14 = *(void *)(a1 + v12 + 8);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  sub_2524081EC(v13, v14);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25243F22C);
}

uint64_t sub_25243F22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A540();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_25247A4B0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 36));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for EventRecord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25243F354);
}

uint64_t sub_25243F354(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_25247A540();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_25247A4B0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_25243F464()
{
  uint64_t result = sub_25247A540();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25247A4B0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EventRecord.Field(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25243F628);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventRecord.Field()
{
  return &type metadata for EventRecord.Field;
}

unsigned char *storeEnumTagSinglePayload for EventRecord.DataType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25243F72CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventRecord.DataType()
{
  return &type metadata for EventRecord.DataType;
}

void *initializeBufferWithCopyOfBuffer for EventRecord.DecodedEvent(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    a1 = (void *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_25247A4B0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for EventBase(0);
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_25247A540();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      v13(v9, v10, v11);
      *((unsigned char *)a1 + *(int *)(v7 + 24)) = *((unsigned char *)a2 + *(int *)(v7 + 24));
      uint64_t v14 = (int *)type metadata accessor for AccessoryEventBase(0);
      v13((char *)a1 + v14[5], (char *)a2 + v14[5], v11);
      uint64_t v15 = v14[6];
      unint64_t v16 = (void *)((char *)a1 + v15);
      uint64_t v17 = (void *)((char *)a2 + v15);
      uint64_t v18 = v17[1];
      *unint64_t v16 = *v17;
      v16[1] = v18;
      uint64_t v19 = v14[7];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      swift_bridgeObjectRetain();
      v13(v20, v21, v11);
      uint64_t v22 = v14[8];
      uint64_t v23 = (void *)((char *)a1 + v22);
      uint64_t v24 = (void *)((char *)a2 + v22);
      uint64_t v25 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v25;
      uint64_t v26 = v14[9];
      unint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = (char *)a2 + v26;
      uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      swift_bridgeObjectRetain();
      if (v29(v28, 1, v11))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        v13(v27, v28, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v11);
      }
    }
    else
    {
      type metadata accessor for SomeAccessoryEvent();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v56 = sub_25247A4B0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(a1, a2, v56);
          uint64_t v57 = type metadata accessor for EventBase(0);
          uint64_t v58 = *(int *)(v57 + 20);
          uint64_t v59 = (char *)a1 + v58;
          uint64_t v60 = (char *)a2 + v58;
          uint64_t v61 = sub_25247A540();
          uint64_t v62 = *(void *)(v61 - 8);
          uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
          v63(v59, v60, v61);
          *((unsigned char *)a1 + *(int *)(v57 + 24)) = *((unsigned char *)a2 + *(int *)(v57 + 24));
          uint64_t v64 = (int *)type metadata accessor for AccessoryEventBase(0);
          v63((char *)a1 + v64[5], (char *)a2 + v64[5], v61);
          uint64_t v65 = v64[6];
          uint64_t v66 = (void *)((char *)a1 + v65);
          int v67 = (void *)((char *)a2 + v65);
          uint64_t v68 = v67[1];
          *uint64_t v66 = *v67;
          v66[1] = v68;
          uint64_t v69 = v64[7];
          uint64_t v70 = (char *)a1 + v69;
          uint64_t v71 = (char *)a2 + v69;
          swift_bridgeObjectRetain();
          v63(v70, v71, v61);
          uint64_t v72 = v64[8];
          uint64_t v73 = (void *)((char *)a1 + v72);
          uint64_t v74 = (void *)((char *)a2 + v72);
          uint64_t v75 = v74[1];
          *uint64_t v73 = *v74;
          v73[1] = v75;
          uint64_t v76 = v64[9];
          __dsta = (char *)a1 + v76;
          uint64_t v77 = (char *)a2 + v76;
          uint64_t v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
          swift_bridgeObjectRetain();
          if (v78(v77, 1, v61))
          {
            uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(__dsta, v77, *(void *)(*(void *)(v79 - 8) + 64));
          }
          else
          {
            v63(__dsta, v77, v61);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(__dsta, 0, 1, v61);
          }
          uint64_t v200 = type metadata accessor for DoorEvent();
          break;
        case 2u:
          uint64_t v80 = sub_25247A4B0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v80 - 8) + 16))(a1, a2, v80);
          uint64_t v81 = type metadata accessor for EventBase(0);
          uint64_t v82 = *(int *)(v81 + 20);
          uint64_t v83 = (char *)a1 + v82;
          uint64_t v84 = (char *)a2 + v82;
          uint64_t v85 = sub_25247A540();
          uint64_t v86 = *(void *)(v85 - 8);
          uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
          v87(v83, v84, v85);
          *((unsigned char *)a1 + *(int *)(v81 + 24)) = *((unsigned char *)a2 + *(int *)(v81 + 24));
          uint64_t v88 = (int *)type metadata accessor for AccessoryEventBase(0);
          v87((char *)a1 + v88[5], (char *)a2 + v88[5], v85);
          uint64_t v89 = v88[6];
          uint64_t v90 = (void *)((char *)a1 + v89);
          uint64_t v91 = (void *)((char *)a2 + v89);
          uint64_t v92 = v91[1];
          *uint64_t v90 = *v91;
          v90[1] = v92;
          uint64_t v93 = v88[7];
          uint64_t v94 = (char *)a1 + v93;
          uint64_t v95 = (char *)a2 + v93;
          swift_bridgeObjectRetain();
          v87(v94, v95, v85);
          uint64_t v96 = v88[8];
          uint64_t v97 = (void *)((char *)a1 + v96);
          uint64_t v98 = (void *)((char *)a2 + v96);
          uint64_t v99 = v98[1];
          *uint64_t v97 = *v98;
          v97[1] = v99;
          uint64_t v100 = v88[9];
          __dstb = (char *)a1 + v100;
          uint64_t v101 = (char *)a2 + v100;
          uint64_t v102 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
          swift_bridgeObjectRetain();
          if (v102(v101, 1, v85))
          {
            uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(__dstb, v101, *(void *)(*(void *)(v103 - 8) + 64));
          }
          else
          {
            v87(__dstb, v101, v85);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(__dstb, 0, 1, v85);
          }
          uint64_t v200 = type metadata accessor for GarageDoorEvent();
          break;
        case 3u:
          uint64_t v104 = sub_25247A4B0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v104 - 8) + 16))(a1, a2, v104);
          uint64_t v105 = type metadata accessor for EventBase(0);
          uint64_t v106 = *(int *)(v105 + 20);
          uint64_t v107 = (char *)a1 + v106;
          uint64_t v108 = (char *)a2 + v106;
          uint64_t v109 = sub_25247A540();
          uint64_t v110 = *(void *)(v109 - 8);
          uint64_t v111 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
          v111(v107, v108, v109);
          *((unsigned char *)a1 + *(int *)(v105 + 24)) = *((unsigned char *)a2 + *(int *)(v105 + 24));
          uint64_t v112 = (int *)type metadata accessor for AccessoryEventBase(0);
          v111((char *)a1 + v112[5], (char *)a2 + v112[5], v109);
          uint64_t v113 = v112[6];
          uint64_t v114 = (void *)((char *)a1 + v113);
          uint64_t v115 = (void *)((char *)a2 + v113);
          uint64_t v116 = v115[1];
          *uint64_t v114 = *v115;
          v114[1] = v116;
          uint64_t v117 = v112[7];
          uint64_t v118 = (char *)a1 + v117;
          uint64_t v119 = (char *)a2 + v117;
          swift_bridgeObjectRetain();
          v111(v118, v119, v109);
          uint64_t v120 = v112[8];
          uint64_t v121 = (void *)((char *)a1 + v120);
          uint64_t v122 = (void *)((char *)a2 + v120);
          uint64_t v123 = v122[1];
          void *v121 = *v122;
          v121[1] = v123;
          uint64_t v124 = v112[9];
          __dstc = (char *)a1 + v124;
          uint64_t v125 = (char *)a2 + v124;
          uint64_t v126 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48);
          swift_bridgeObjectRetain();
          if (v126(v125, 1, v109))
          {
            uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(__dstc, v125, *(void *)(*(void *)(v127 - 8) + 64));
          }
          else
          {
            v111(__dstc, v125, v109);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(__dstc, 0, 1, v109);
          }
          uint64_t v200 = type metadata accessor for LockEvent();
          break;
        case 4u:
          uint64_t v128 = sub_25247A4B0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v128 - 8) + 16))(a1, a2, v128);
          uint64_t v129 = type metadata accessor for EventBase(0);
          uint64_t v130 = *(int *)(v129 + 20);
          uint64_t v131 = (char *)a1 + v130;
          uint64_t v132 = (char *)a2 + v130;
          uint64_t v133 = sub_25247A540();
          uint64_t v134 = *(void *)(v133 - 8);
          uint64_t v135 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
          v135(v131, v132, v133);
          *((unsigned char *)a1 + *(int *)(v129 + 24)) = *((unsigned char *)a2 + *(int *)(v129 + 24));
          os_log_t v136 = (int *)type metadata accessor for AccessoryEventBase(0);
          v135((char *)a1 + v136[5], (char *)a2 + v136[5], v133);
          uint64_t v137 = v136[6];
          uint64_t v138 = (void *)((char *)a1 + v137);
          uint64_t v139 = (void *)((char *)a2 + v137);
          uint64_t v140 = v139[1];
          *uint64_t v138 = *v139;
          v138[1] = v140;
          uint64_t v141 = v136[7];
          uint64_t v142 = (char *)a1 + v141;
          uint64_t v143 = (char *)a2 + v141;
          swift_bridgeObjectRetain();
          v135(v142, v143, v133);
          uint64_t v144 = v136[8];
          uint64_t v145 = (void *)((char *)a1 + v144);
          uint64_t v146 = (void *)((char *)a2 + v144);
          uint64_t v147 = v146[1];
          *uint64_t v145 = *v146;
          v145[1] = v147;
          uint64_t v148 = v136[9];
          __dstd = (char *)a1 + v148;
          uint64_t v149 = (char *)a2 + v148;
          uint64_t v150 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48);
          swift_bridgeObjectRetain();
          if (v150(v149, 1, v133))
          {
            uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(__dstd, v149, *(void *)(*(void *)(v151 - 8) + 64));
          }
          else
          {
            v135(__dstd, v149, v133);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56))(__dstd, 0, 1, v133);
          }
          uint64_t v200 = type metadata accessor for SecuritySystemEvent();
          break;
        case 5u:
          uint64_t v152 = sub_25247A4B0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v152 - 8) + 16))(a1, a2, v152);
          uint64_t v153 = type metadata accessor for EventBase(0);
          uint64_t v154 = *(int *)(v153 + 20);
          uint64_t v155 = (char *)a1 + v154;
          uint64_t v156 = (char *)a2 + v154;
          uint64_t v157 = sub_25247A540();
          uint64_t v158 = *(void *)(v157 - 8);
          uint64_t v159 = *(void (**)(char *, char *, uint64_t))(v158 + 16);
          v159(v155, v156, v157);
          *((unsigned char *)a1 + *(int *)(v153 + 24)) = *((unsigned char *)a2 + *(int *)(v153 + 24));
          uint64_t v160 = (int *)type metadata accessor for AccessoryEventBase(0);
          v159((char *)a1 + v160[5], (char *)a2 + v160[5], v157);
          uint64_t v161 = v160[6];
          uint64_t v162 = (void *)((char *)a1 + v161);
          uint64_t v163 = (void *)((char *)a2 + v161);
          uint64_t v164 = v163[1];
          *uint64_t v162 = *v163;
          v162[1] = v164;
          uint64_t v165 = v160[7];
          uint64_t v166 = (char *)a1 + v165;
          uint64_t v167 = (char *)a2 + v165;
          swift_bridgeObjectRetain();
          v159(v166, v167, v157);
          uint64_t v168 = v160[8];
          uint64_t v169 = (void *)((char *)a1 + v168);
          uint64_t v170 = (void *)((char *)a2 + v168);
          uint64_t v171 = v170[1];
          *uint64_t v169 = *v170;
          v169[1] = v171;
          uint64_t v172 = v160[9];
          __dste = (char *)a1 + v172;
          uint64_t v173 = (char *)a2 + v172;
          uint64_t v174 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48);
          swift_bridgeObjectRetain();
          if (v174(v173, 1, v157))
          {
            uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(__dste, v173, *(void *)(*(void *)(v175 - 8) + 64));
          }
          else
          {
            v159(__dste, v173, v157);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v158 + 56))(__dste, 0, 1, v157);
          }
          uint64_t v200 = type metadata accessor for SmokeDetectorEvent();
          break;
        case 6u:
          uint64_t v176 = sub_25247A4B0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v176 - 8) + 16))(a1, a2, v176);
          uint64_t v177 = type metadata accessor for EventBase(0);
          uint64_t v178 = *(int *)(v177 + 20);
          uint64_t v179 = (char *)a1 + v178;
          unint64_t v180 = (char *)a2 + v178;
          uint64_t v181 = sub_25247A540();
          uint64_t v182 = *(void *)(v181 - 8);
          uint64_t v183 = *(void (**)(char *, char *, uint64_t))(v182 + 16);
          v183(v179, v180, v181);
          *((unsigned char *)a1 + *(int *)(v177 + 24)) = *((unsigned char *)a2 + *(int *)(v177 + 24));
          uint64_t v184 = (int *)type metadata accessor for AccessoryEventBase(0);
          v183((char *)a1 + v184[5], (char *)a2 + v184[5], v181);
          uint64_t v185 = v184[6];
          uint64_t v186 = (void *)((char *)a1 + v185);
          uint64_t v187 = (void *)((char *)a2 + v185);
          uint64_t v188 = v187[1];
          void *v186 = *v187;
          v186[1] = v188;
          uint64_t v189 = v184[7];
          uint64_t v190 = (char *)a1 + v189;
          uint64_t v191 = (char *)a2 + v189;
          swift_bridgeObjectRetain();
          v183(v190, v191, v181);
          uint64_t v192 = v184[8];
          uint64_t v193 = (void *)((char *)a1 + v192);
          uint64_t v194 = (void *)((char *)a2 + v192);
          uint64_t v195 = v194[1];
          void *v193 = *v194;
          v193[1] = v195;
          uint64_t v196 = v184[9];
          __dstf = (char *)a1 + v196;
          uint64_t v197 = (char *)a2 + v196;
          uint64_t v198 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v182 + 48);
          swift_bridgeObjectRetain();
          if (v198(v197, 1, v181))
          {
            uint64_t v199 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(__dstf, v197, *(void *)(*(void *)(v199 - 8) + 64));
          }
          else
          {
            v183(__dstf, v197, v181);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v182 + 56))(__dstf, 0, 1, v181);
          }
          uint64_t v200 = type metadata accessor for WindowEvent();
          break;
        default:
          uint64_t v32 = sub_25247A4B0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
          uint64_t v33 = type metadata accessor for EventBase(0);
          uint64_t v34 = *(int *)(v33 + 20);
          uint64_t v35 = (char *)a1 + v34;
          uint64_t v36 = (char *)a2 + v34;
          uint64_t v37 = sub_25247A540();
          uint64_t v38 = *(void *)(v37 - 8);
          uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
          v39(v35, v36, v37);
          *((unsigned char *)a1 + *(int *)(v33 + 24)) = *((unsigned char *)a2 + *(int *)(v33 + 24));
          uint64_t v40 = (int *)type metadata accessor for AccessoryEventBase(0);
          v39((char *)a1 + v40[5], (char *)a2 + v40[5], v37);
          uint64_t v41 = v40[6];
          int v42 = (void *)((char *)a1 + v41);
          uint64_t v43 = (void *)((char *)a2 + v41);
          uint64_t v44 = v43[1];
          *int v42 = *v43;
          v42[1] = v44;
          uint64_t v45 = v40[7];
          uint64_t v46 = (char *)a1 + v45;
          uint64_t v47 = (char *)a2 + v45;
          swift_bridgeObjectRetain();
          v39(v46, v47, v37);
          uint64_t v48 = v40[8];
          uint64_t v49 = (void *)((char *)a1 + v48);
          uint64_t v50 = (void *)((char *)a2 + v48);
          uint64_t v51 = v50[1];
          void *v49 = *v50;
          v49[1] = v51;
          uint64_t v52 = v40[9];
          __dst = (char *)a1 + v52;
          uint64_t v53 = (char *)a2 + v52;
          uint64_t v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
          swift_bridgeObjectRetain();
          if (v54(v53, 1, v37))
          {
            uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(__dst, v53, *(void *)(*(void *)(v55 - 8) + 64));
          }
          else
          {
            v39(__dst, v53, v37);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v37);
          }
          uint64_t v200 = type metadata accessor for ContactSensorEvent();
          break;
      }
      *((unsigned char *)a1 + *(int *)(v200 + 20)) = *((unsigned char *)a2 + *(int *)(v200 + 20));
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for EventRecord.DecodedEvent(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
LABEL_3:
    uint64_t v3 = sub_25247A4B0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    uint64_t v4 = a1 + *(int *)(type metadata accessor for EventBase(0) + 20);
    uint64_t v5 = sub_25247A540();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v9(v4, v5);
    uint64_t v7 = (int *)type metadata accessor for AccessoryEventBase(0);
    v9(a1 + v7[5], v5);
    swift_bridgeObjectRelease();
    v9(a1 + v7[7], v5);
    swift_bridgeObjectRelease();
    uint64_t v8 = a1 + v7[9];
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5);
    if (!result)
    {
      return ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v5);
    }
  }
  else
  {
    type metadata accessor for SomeAccessoryEvent();
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
        goto LABEL_3;
      default:
        return result;
    }
  }
  return result;
}

uint64_t initializeWithCopy for EventRecord.DecodedEvent(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_25247A4B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    uint64_t v5 = type metadata accessor for EventBase(0);
    uint64_t v6 = *(int *)(v5 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    uint64_t v9 = sub_25247A540();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 16);
    v11(v7, v8, v9);
    *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
    uint64_t v12 = (int *)type metadata accessor for AccessoryEventBase(0);
    v11((void *)(a1 + v12[5]), (const void *)(a2 + v12[5]), v9);
    uint64_t v13 = v12[6];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (void *)(a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = v12[7];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (const void *)(a2 + v17);
    swift_bridgeObjectRetain();
    v11(v18, v19, v9);
    uint64_t v20 = v12[8];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (void *)(a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = v12[9];
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (const void *)(a2 + v24);
    unint64_t v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v27(v26, 1, v9))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
      memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      v11(v25, v26, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
    }
  }
  else
  {
    type metadata accessor for SomeAccessoryEvent();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v55 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
        uint64_t v56 = type metadata accessor for EventBase(0);
        uint64_t v57 = *(int *)(v56 + 20);
        uint64_t v58 = (void *)(a1 + v57);
        uint64_t v59 = (const void *)(a2 + v57);
        uint64_t v60 = sub_25247A540();
        uint64_t v61 = *(void *)(v60 - 8);
        uint64_t v62 = *(void (**)(void *, const void *, uint64_t))(v61 + 16);
        v62(v58, v59, v60);
        *(unsigned char *)(a1 + *(int *)(v56 + 24)) = *(unsigned char *)(a2 + *(int *)(v56 + 24));
        uint64_t v63 = (int *)type metadata accessor for AccessoryEventBase(0);
        v62((void *)(a1 + v63[5]), (const void *)(a2 + v63[5]), v60);
        uint64_t v64 = v63[6];
        uint64_t v65 = (void *)(a1 + v64);
        uint64_t v66 = (void *)(a2 + v64);
        uint64_t v67 = v66[1];
        *uint64_t v65 = *v66;
        v65[1] = v67;
        uint64_t v68 = v63[7];
        uint64_t v69 = (void *)(a1 + v68);
        uint64_t v70 = (const void *)(a2 + v68);
        swift_bridgeObjectRetain();
        v62(v69, v70, v60);
        uint64_t v71 = v63[8];
        uint64_t v72 = (void *)(a1 + v71);
        uint64_t v73 = (void *)(a2 + v71);
        uint64_t v74 = v73[1];
        *uint64_t v72 = *v73;
        v72[1] = v74;
        uint64_t v75 = v63[9];
        uint64_t v76 = (void *)(a1 + v75);
        uint64_t v77 = (const void *)(a2 + v75);
        uint64_t v78 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v61 + 48);
        swift_bridgeObjectRetain();
        if (v78(v77, 1, v60))
        {
          uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
        }
        else
        {
          v62(v76, v77, v60);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v76, 0, 1, v60);
        }
        uint64_t v205 = type metadata accessor for DoorEvent();
        break;
      case 2:
        uint64_t v80 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16))(a1, a2, v80);
        uint64_t v81 = type metadata accessor for EventBase(0);
        uint64_t v82 = *(int *)(v81 + 20);
        uint64_t v83 = (void *)(a1 + v82);
        uint64_t v84 = (const void *)(a2 + v82);
        uint64_t v85 = sub_25247A540();
        uint64_t v86 = *(void *)(v85 - 8);
        uint64_t v87 = *(void (**)(void *, const void *, uint64_t))(v86 + 16);
        v87(v83, v84, v85);
        *(unsigned char *)(a1 + *(int *)(v81 + 24)) = *(unsigned char *)(a2 + *(int *)(v81 + 24));
        uint64_t v88 = (int *)type metadata accessor for AccessoryEventBase(0);
        v87((void *)(a1 + v88[5]), (const void *)(a2 + v88[5]), v85);
        uint64_t v89 = v88[6];
        uint64_t v90 = (void *)(a1 + v89);
        uint64_t v91 = (void *)(a2 + v89);
        uint64_t v92 = v91[1];
        *uint64_t v90 = *v91;
        v90[1] = v92;
        uint64_t v93 = v88[7];
        uint64_t v94 = (void *)(a1 + v93);
        uint64_t v95 = (const void *)(a2 + v93);
        swift_bridgeObjectRetain();
        v87(v94, v95, v85);
        uint64_t v96 = v88[8];
        uint64_t v97 = (void *)(a1 + v96);
        uint64_t v98 = (void *)(a2 + v96);
        uint64_t v99 = v98[1];
        *uint64_t v97 = *v98;
        v97[1] = v99;
        uint64_t v100 = v88[9];
        uint64_t v101 = (void *)(a1 + v100);
        uint64_t v102 = (const void *)(a2 + v100);
        uint64_t v103 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v86 + 48);
        swift_bridgeObjectRetain();
        if (v103(v102, 1, v85))
        {
          uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v101, v102, *(void *)(*(void *)(v104 - 8) + 64));
        }
        else
        {
          v87(v101, v102, v85);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v101, 0, 1, v85);
        }
        uint64_t v205 = type metadata accessor for GarageDoorEvent();
        break;
      case 3:
        uint64_t v105 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 16))(a1, a2, v105);
        uint64_t v106 = type metadata accessor for EventBase(0);
        uint64_t v107 = *(int *)(v106 + 20);
        uint64_t v108 = (void *)(a1 + v107);
        uint64_t v109 = (const void *)(a2 + v107);
        uint64_t v110 = sub_25247A540();
        uint64_t v111 = *(void *)(v110 - 8);
        uint64_t v112 = *(void (**)(void *, const void *, uint64_t))(v111 + 16);
        v112(v108, v109, v110);
        *(unsigned char *)(a1 + *(int *)(v106 + 24)) = *(unsigned char *)(a2 + *(int *)(v106 + 24));
        uint64_t v113 = (int *)type metadata accessor for AccessoryEventBase(0);
        v112((void *)(a1 + v113[5]), (const void *)(a2 + v113[5]), v110);
        uint64_t v114 = v113[6];
        uint64_t v115 = (void *)(a1 + v114);
        uint64_t v116 = (void *)(a2 + v114);
        uint64_t v117 = v116[1];
        *uint64_t v115 = *v116;
        v115[1] = v117;
        uint64_t v118 = v113[7];
        uint64_t v119 = (void *)(a1 + v118);
        uint64_t v120 = (const void *)(a2 + v118);
        swift_bridgeObjectRetain();
        v112(v119, v120, v110);
        uint64_t v121 = v113[8];
        uint64_t v122 = (void *)(a1 + v121);
        uint64_t v123 = (void *)(a2 + v121);
        uint64_t v124 = v123[1];
        *uint64_t v122 = *v123;
        v122[1] = v124;
        uint64_t v125 = v113[9];
        uint64_t v126 = (void *)(a1 + v125);
        uint64_t v127 = (const void *)(a2 + v125);
        uint64_t v128 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v111 + 48);
        swift_bridgeObjectRetain();
        if (v128(v127, 1, v110))
        {
          uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v126, v127, *(void *)(*(void *)(v129 - 8) + 64));
        }
        else
        {
          v112(v126, v127, v110);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v111 + 56))(v126, 0, 1, v110);
        }
        uint64_t v205 = type metadata accessor for LockEvent();
        break;
      case 4:
        uint64_t v130 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v130 - 8) + 16))(a1, a2, v130);
        uint64_t v131 = type metadata accessor for EventBase(0);
        uint64_t v132 = *(int *)(v131 + 20);
        uint64_t v133 = (void *)(a1 + v132);
        uint64_t v134 = (const void *)(a2 + v132);
        uint64_t v135 = sub_25247A540();
        uint64_t v136 = *(void *)(v135 - 8);
        uint64_t v137 = *(void (**)(void *, const void *, uint64_t))(v136 + 16);
        v137(v133, v134, v135);
        *(unsigned char *)(a1 + *(int *)(v131 + 24)) = *(unsigned char *)(a2 + *(int *)(v131 + 24));
        uint64_t v138 = (int *)type metadata accessor for AccessoryEventBase(0);
        v137((void *)(a1 + v138[5]), (const void *)(a2 + v138[5]), v135);
        uint64_t v139 = v138[6];
        uint64_t v140 = (void *)(a1 + v139);
        uint64_t v141 = (void *)(a2 + v139);
        uint64_t v142 = v141[1];
        *uint64_t v140 = *v141;
        v140[1] = v142;
        uint64_t v143 = v138[7];
        uint64_t v144 = (void *)(a1 + v143);
        uint64_t v145 = (const void *)(a2 + v143);
        swift_bridgeObjectRetain();
        v137(v144, v145, v135);
        uint64_t v146 = v138[8];
        uint64_t v147 = (void *)(a1 + v146);
        uint64_t v148 = (void *)(a2 + v146);
        uint64_t v149 = v148[1];
        *uint64_t v147 = *v148;
        v147[1] = v149;
        uint64_t v150 = v138[9];
        uint64_t v151 = (void *)(a1 + v150);
        uint64_t v152 = (const void *)(a2 + v150);
        uint64_t v153 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v136 + 48);
        swift_bridgeObjectRetain();
        if (v153(v152, 1, v135))
        {
          uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v151, v152, *(void *)(*(void *)(v154 - 8) + 64));
        }
        else
        {
          v137(v151, v152, v135);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v136 + 56))(v151, 0, 1, v135);
        }
        uint64_t v205 = type metadata accessor for SecuritySystemEvent();
        break;
      case 5:
        uint64_t v155 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 16))(a1, a2, v155);
        uint64_t v156 = type metadata accessor for EventBase(0);
        uint64_t v157 = *(int *)(v156 + 20);
        uint64_t v158 = (void *)(a1 + v157);
        uint64_t v159 = (const void *)(a2 + v157);
        uint64_t v160 = sub_25247A540();
        uint64_t v161 = *(void *)(v160 - 8);
        uint64_t v162 = *(void (**)(void *, const void *, uint64_t))(v161 + 16);
        v162(v158, v159, v160);
        *(unsigned char *)(a1 + *(int *)(v156 + 24)) = *(unsigned char *)(a2 + *(int *)(v156 + 24));
        uint64_t v163 = (int *)type metadata accessor for AccessoryEventBase(0);
        v162((void *)(a1 + v163[5]), (const void *)(a2 + v163[5]), v160);
        uint64_t v164 = v163[6];
        uint64_t v165 = (void *)(a1 + v164);
        uint64_t v166 = (void *)(a2 + v164);
        uint64_t v167 = v166[1];
        void *v165 = *v166;
        v165[1] = v167;
        uint64_t v168 = v163[7];
        uint64_t v169 = (void *)(a1 + v168);
        uint64_t v170 = (const void *)(a2 + v168);
        swift_bridgeObjectRetain();
        v162(v169, v170, v160);
        uint64_t v171 = v163[8];
        uint64_t v172 = (void *)(a1 + v171);
        uint64_t v173 = (void *)(a2 + v171);
        uint64_t v174 = v173[1];
        *uint64_t v172 = *v173;
        v172[1] = v174;
        uint64_t v175 = v163[9];
        uint64_t v176 = (void *)(a1 + v175);
        uint64_t v177 = (const void *)(a2 + v175);
        uint64_t v178 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v161 + 48);
        swift_bridgeObjectRetain();
        if (v178(v177, 1, v160))
        {
          uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v176, v177, *(void *)(*(void *)(v179 - 8) + 64));
        }
        else
        {
          v162(v176, v177, v160);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v161 + 56))(v176, 0, 1, v160);
        }
        uint64_t v205 = type metadata accessor for SmokeDetectorEvent();
        break;
      case 6:
        uint64_t v180 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v180 - 8) + 16))(a1, a2, v180);
        uint64_t v181 = type metadata accessor for EventBase(0);
        uint64_t v182 = *(int *)(v181 + 20);
        uint64_t v183 = (void *)(a1 + v182);
        uint64_t v184 = (const void *)(a2 + v182);
        uint64_t v185 = sub_25247A540();
        uint64_t v186 = *(void *)(v185 - 8);
        uint64_t v187 = *(void (**)(void *, const void *, uint64_t))(v186 + 16);
        v187(v183, v184, v185);
        *(unsigned char *)(a1 + *(int *)(v181 + 24)) = *(unsigned char *)(a2 + *(int *)(v181 + 24));
        uint64_t v188 = (int *)type metadata accessor for AccessoryEventBase(0);
        v187((void *)(a1 + v188[5]), (const void *)(a2 + v188[5]), v185);
        uint64_t v189 = v188[6];
        uint64_t v190 = (void *)(a1 + v189);
        uint64_t v191 = (void *)(a2 + v189);
        uint64_t v192 = v191[1];
        *uint64_t v190 = *v191;
        v190[1] = v192;
        uint64_t v193 = v188[7];
        uint64_t v194 = (void *)(a1 + v193);
        uint64_t v195 = (const void *)(a2 + v193);
        swift_bridgeObjectRetain();
        v187(v194, v195, v185);
        uint64_t v196 = v188[8];
        uint64_t v197 = (void *)(a1 + v196);
        uint64_t v198 = (void *)(a2 + v196);
        uint64_t v199 = v198[1];
        void *v197 = *v198;
        v197[1] = v199;
        uint64_t v200 = v188[9];
        uint64_t v201 = (void *)(a1 + v200);
        uint64_t v202 = (const void *)(a2 + v200);
        uint64_t v203 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v186 + 48);
        swift_bridgeObjectRetain();
        if (v203(v202, 1, v185))
        {
          uint64_t v204 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v201, v202, *(void *)(*(void *)(v204 - 8) + 64));
        }
        else
        {
          v187(v201, v202, v185);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v186 + 56))(v201, 0, 1, v185);
        }
        uint64_t v205 = type metadata accessor for WindowEvent();
        break;
      default:
        uint64_t v30 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
        uint64_t v31 = type metadata accessor for EventBase(0);
        uint64_t v32 = *(int *)(v31 + 20);
        uint64_t v33 = (void *)(a1 + v32);
        uint64_t v34 = (const void *)(a2 + v32);
        uint64_t v35 = sub_25247A540();
        uint64_t v36 = *(void *)(v35 - 8);
        uint64_t v37 = *(void (**)(void *, const void *, uint64_t))(v36 + 16);
        v37(v33, v34, v35);
        *(unsigned char *)(a1 + *(int *)(v31 + 24)) = *(unsigned char *)(a2 + *(int *)(v31 + 24));
        uint64_t v38 = (int *)type metadata accessor for AccessoryEventBase(0);
        v37((void *)(a1 + v38[5]), (const void *)(a2 + v38[5]), v35);
        uint64_t v39 = v38[6];
        uint64_t v40 = (void *)(a1 + v39);
        uint64_t v41 = (void *)(a2 + v39);
        uint64_t v42 = v41[1];
        *uint64_t v40 = *v41;
        v40[1] = v42;
        uint64_t v43 = v38[7];
        uint64_t v44 = (void *)(a1 + v43);
        uint64_t v45 = (const void *)(a2 + v43);
        swift_bridgeObjectRetain();
        v37(v44, v45, v35);
        uint64_t v46 = v38[8];
        uint64_t v47 = (void *)(a1 + v46);
        uint64_t v48 = (void *)(a2 + v46);
        uint64_t v49 = v48[1];
        *uint64_t v47 = *v48;
        v47[1] = v49;
        uint64_t v50 = v38[9];
        uint64_t v51 = (void *)(a1 + v50);
        uint64_t v52 = (const void *)(a2 + v50);
        uint64_t v53 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48);
        swift_bridgeObjectRetain();
        if (v53(v52, 1, v35))
        {
          uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          v37(v51, v52, v35);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v51, 0, 1, v35);
        }
        uint64_t v205 = type metadata accessor for ContactSensorEvent();
        break;
    }
    *(unsigned char *)(a1 + *(int *)(v205 + 20)) = *(unsigned char *)(a2 + *(int *)(v205 + 20));
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for EventRecord.DecodedEvent(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_25243DD80(a1, type metadata accessor for EventRecord.DecodedEvent);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = type metadata accessor for EventBase(0);
      uint64_t v6 = *(int *)(v5 + 20);
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = sub_25247A540();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      v11(v7, v8, v9);
      *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
      uint64_t v12 = (int *)type metadata accessor for AccessoryEventBase(0);
      v11(a1 + v12[5], a2 + v12[5], v9);
      uint64_t v13 = v12[6];
      uint64_t v14 = (void *)(a1 + v13);
      uint64_t v15 = (void *)(a2 + v13);
      *uint64_t v14 = *v15;
      v14[1] = v15[1];
      uint64_t v16 = v12[7];
      uint64_t v17 = a1 + v16;
      uint64_t v18 = a2 + v16;
      swift_bridgeObjectRetain();
      v11(v17, v18, v9);
      uint64_t v19 = v12[8];
      uint64_t v20 = (void *)(a1 + v19);
      uint64_t v21 = (void *)(a2 + v19);
      *uint64_t v20 = *v21;
      v20[1] = v21[1];
      uint64_t v22 = v12[9];
      uint64_t v23 = (void *)(a1 + v22);
      uint64_t v24 = (const void *)(a2 + v22);
      uint64_t v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
      swift_bridgeObjectRetain();
      if (v25(v24, 1, v9))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        v11((uint64_t)v23, (uint64_t)v24, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      }
    }
    else
    {
      type metadata accessor for SomeAccessoryEvent();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v49 = sub_25247A4B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(a1, a2, v49);
          uint64_t v50 = type metadata accessor for EventBase(0);
          uint64_t v51 = *(int *)(v50 + 20);
          uint64_t v52 = a1 + v51;
          uint64_t v53 = a2 + v51;
          uint64_t v54 = sub_25247A540();
          uint64_t v55 = *(void *)(v54 - 8);
          uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16);
          v56(v52, v53, v54);
          *(unsigned char *)(a1 + *(int *)(v50 + 24)) = *(unsigned char *)(a2 + *(int *)(v50 + 24));
          uint64_t v57 = (int *)type metadata accessor for AccessoryEventBase(0);
          v56(a1 + v57[5], a2 + v57[5], v54);
          uint64_t v58 = v57[6];
          uint64_t v59 = (void *)(a1 + v58);
          uint64_t v60 = (void *)(a2 + v58);
          *uint64_t v59 = *v60;
          v59[1] = v60[1];
          uint64_t v61 = v57[7];
          uint64_t v62 = a1 + v61;
          uint64_t v63 = a2 + v61;
          swift_bridgeObjectRetain();
          v56(v62, v63, v54);
          uint64_t v64 = v57[8];
          uint64_t v65 = (void *)(a1 + v64);
          uint64_t v66 = (void *)(a2 + v64);
          *uint64_t v65 = *v66;
          v65[1] = v66[1];
          uint64_t v67 = v57[9];
          __dsta = (void *)(a1 + v67);
          uint64_t v68 = (const void *)(a2 + v67);
          uint64_t v69 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48);
          swift_bridgeObjectRetain();
          if (v69(v68, 1, v54))
          {
            uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(__dsta, v68, *(void *)(*(void *)(v70 - 8) + 64));
          }
          else
          {
            v56((uint64_t)__dsta, (uint64_t)v68, v54);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(__dsta, 0, 1, v54);
          }
          uint64_t v181 = type metadata accessor for DoorEvent();
          break;
        case 2u:
          uint64_t v71 = sub_25247A4B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 16))(a1, a2, v71);
          uint64_t v72 = type metadata accessor for EventBase(0);
          uint64_t v73 = *(int *)(v72 + 20);
          uint64_t v74 = a1 + v73;
          uint64_t v75 = a2 + v73;
          uint64_t v76 = sub_25247A540();
          uint64_t v77 = *(void *)(v76 - 8);
          uint64_t v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16);
          v78(v74, v75, v76);
          *(unsigned char *)(a1 + *(int *)(v72 + 24)) = *(unsigned char *)(a2 + *(int *)(v72 + 24));
          uint64_t v79 = (int *)type metadata accessor for AccessoryEventBase(0);
          v78(a1 + v79[5], a2 + v79[5], v76);
          uint64_t v80 = v79[6];
          uint64_t v81 = (void *)(a1 + v80);
          uint64_t v82 = (void *)(a2 + v80);
          *uint64_t v81 = *v82;
          v81[1] = v82[1];
          uint64_t v83 = v79[7];
          uint64_t v84 = a1 + v83;
          uint64_t v85 = a2 + v83;
          swift_bridgeObjectRetain();
          v78(v84, v85, v76);
          uint64_t v86 = v79[8];
          uint64_t v87 = (void *)(a1 + v86);
          uint64_t v88 = (void *)(a2 + v86);
          *uint64_t v87 = *v88;
          v87[1] = v88[1];
          uint64_t v89 = v79[9];
          __dstb = (void *)(a1 + v89);
          uint64_t v90 = (const void *)(a2 + v89);
          uint64_t v91 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v77 + 48);
          swift_bridgeObjectRetain();
          if (v91(v90, 1, v76))
          {
            uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(__dstb, v90, *(void *)(*(void *)(v92 - 8) + 64));
          }
          else
          {
            v78((uint64_t)__dstb, (uint64_t)v90, v76);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(__dstb, 0, 1, v76);
          }
          uint64_t v181 = type metadata accessor for GarageDoorEvent();
          break;
        case 3u:
          uint64_t v93 = sub_25247A4B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 16))(a1, a2, v93);
          uint64_t v94 = type metadata accessor for EventBase(0);
          uint64_t v95 = *(int *)(v94 + 20);
          uint64_t v96 = a1 + v95;
          uint64_t v97 = a2 + v95;
          uint64_t v98 = sub_25247A540();
          uint64_t v99 = *(void *)(v98 - 8);
          uint64_t v100 = *(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 16);
          v100(v96, v97, v98);
          *(unsigned char *)(a1 + *(int *)(v94 + 24)) = *(unsigned char *)(a2 + *(int *)(v94 + 24));
          uint64_t v101 = (int *)type metadata accessor for AccessoryEventBase(0);
          v100(a1 + v101[5], a2 + v101[5], v98);
          uint64_t v102 = v101[6];
          uint64_t v103 = (void *)(a1 + v102);
          uint64_t v104 = (void *)(a2 + v102);
          *uint64_t v103 = *v104;
          v103[1] = v104[1];
          uint64_t v105 = v101[7];
          uint64_t v106 = a1 + v105;
          uint64_t v107 = a2 + v105;
          swift_bridgeObjectRetain();
          v100(v106, v107, v98);
          uint64_t v108 = v101[8];
          uint64_t v109 = (void *)(a1 + v108);
          uint64_t v110 = (void *)(a2 + v108);
          *uint64_t v109 = *v110;
          v109[1] = v110[1];
          uint64_t v111 = v101[9];
          __dstc = (void *)(a1 + v111);
          uint64_t v112 = (const void *)(a2 + v111);
          uint64_t v113 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v99 + 48);
          swift_bridgeObjectRetain();
          if (v113(v112, 1, v98))
          {
            uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(__dstc, v112, *(void *)(*(void *)(v114 - 8) + 64));
          }
          else
          {
            v100((uint64_t)__dstc, (uint64_t)v112, v98);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v99 + 56))(__dstc, 0, 1, v98);
          }
          uint64_t v181 = type metadata accessor for LockEvent();
          break;
        case 4u:
          uint64_t v115 = sub_25247A4B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 16))(a1, a2, v115);
          uint64_t v116 = type metadata accessor for EventBase(0);
          uint64_t v117 = *(int *)(v116 + 20);
          uint64_t v118 = a1 + v117;
          uint64_t v119 = a2 + v117;
          uint64_t v120 = sub_25247A540();
          uint64_t v121 = *(void *)(v120 - 8);
          uint64_t v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 16);
          v122(v118, v119, v120);
          *(unsigned char *)(a1 + *(int *)(v116 + 24)) = *(unsigned char *)(a2 + *(int *)(v116 + 24));
          uint64_t v123 = (int *)type metadata accessor for AccessoryEventBase(0);
          v122(a1 + v123[5], a2 + v123[5], v120);
          uint64_t v124 = v123[6];
          uint64_t v125 = (void *)(a1 + v124);
          uint64_t v126 = (void *)(a2 + v124);
          *uint64_t v125 = *v126;
          v125[1] = v126[1];
          uint64_t v127 = v123[7];
          uint64_t v128 = a1 + v127;
          uint64_t v129 = a2 + v127;
          swift_bridgeObjectRetain();
          v122(v128, v129, v120);
          uint64_t v130 = v123[8];
          uint64_t v131 = (void *)(a1 + v130);
          uint64_t v132 = (void *)(a2 + v130);
          *uint64_t v131 = *v132;
          v131[1] = v132[1];
          uint64_t v133 = v123[9];
          __dstd = (void *)(a1 + v133);
          uint64_t v134 = (const void *)(a2 + v133);
          uint64_t v135 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v121 + 48);
          swift_bridgeObjectRetain();
          if (v135(v134, 1, v120))
          {
            uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(__dstd, v134, *(void *)(*(void *)(v136 - 8) + 64));
          }
          else
          {
            v122((uint64_t)__dstd, (uint64_t)v134, v120);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v121 + 56))(__dstd, 0, 1, v120);
          }
          uint64_t v181 = type metadata accessor for SecuritySystemEvent();
          break;
        case 5u:
          uint64_t v137 = sub_25247A4B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 16))(a1, a2, v137);
          uint64_t v138 = type metadata accessor for EventBase(0);
          uint64_t v139 = *(int *)(v138 + 20);
          uint64_t v140 = a1 + v139;
          uint64_t v141 = a2 + v139;
          uint64_t v142 = sub_25247A540();
          uint64_t v143 = *(void *)(v142 - 8);
          uint64_t v144 = *(void (**)(uint64_t, uint64_t, uint64_t))(v143 + 16);
          v144(v140, v141, v142);
          *(unsigned char *)(a1 + *(int *)(v138 + 24)) = *(unsigned char *)(a2 + *(int *)(v138 + 24));
          uint64_t v145 = (int *)type metadata accessor for AccessoryEventBase(0);
          v144(a1 + v145[5], a2 + v145[5], v142);
          uint64_t v146 = v145[6];
          uint64_t v147 = (void *)(a1 + v146);
          uint64_t v148 = (void *)(a2 + v146);
          *uint64_t v147 = *v148;
          v147[1] = v148[1];
          uint64_t v149 = v145[7];
          uint64_t v150 = a1 + v149;
          uint64_t v151 = a2 + v149;
          swift_bridgeObjectRetain();
          v144(v150, v151, v142);
          uint64_t v152 = v145[8];
          uint64_t v153 = (void *)(a1 + v152);
          uint64_t v154 = (void *)(a2 + v152);
          *uint64_t v153 = *v154;
          v153[1] = v154[1];
          uint64_t v155 = v145[9];
          __dste = (void *)(a1 + v155);
          uint64_t v156 = (const void *)(a2 + v155);
          uint64_t v157 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v143 + 48);
          swift_bridgeObjectRetain();
          if (v157(v156, 1, v142))
          {
            uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(__dste, v156, *(void *)(*(void *)(v158 - 8) + 64));
          }
          else
          {
            v144((uint64_t)__dste, (uint64_t)v156, v142);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v143 + 56))(__dste, 0, 1, v142);
          }
          uint64_t v181 = type metadata accessor for SmokeDetectorEvent();
          break;
        case 6u:
          uint64_t v159 = sub_25247A4B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 16))(a1, a2, v159);
          uint64_t v160 = type metadata accessor for EventBase(0);
          uint64_t v161 = *(int *)(v160 + 20);
          uint64_t v162 = a1 + v161;
          uint64_t v163 = a2 + v161;
          uint64_t v164 = sub_25247A540();
          uint64_t v165 = *(void *)(v164 - 8);
          uint64_t v166 = *(void (**)(uint64_t, uint64_t, uint64_t))(v165 + 16);
          v166(v162, v163, v164);
          *(unsigned char *)(a1 + *(int *)(v160 + 24)) = *(unsigned char *)(a2 + *(int *)(v160 + 24));
          uint64_t v167 = (int *)type metadata accessor for AccessoryEventBase(0);
          v166(a1 + v167[5], a2 + v167[5], v164);
          uint64_t v168 = v167[6];
          uint64_t v169 = (void *)(a1 + v168);
          uint64_t v170 = (void *)(a2 + v168);
          *uint64_t v169 = *v170;
          v169[1] = v170[1];
          uint64_t v171 = v167[7];
          uint64_t v172 = a1 + v171;
          uint64_t v173 = a2 + v171;
          swift_bridgeObjectRetain();
          v166(v172, v173, v164);
          uint64_t v174 = v167[8];
          uint64_t v175 = (void *)(a1 + v174);
          uint64_t v176 = (void *)(a2 + v174);
          *uint64_t v175 = *v176;
          v175[1] = v176[1];
          uint64_t v177 = v167[9];
          __dstf = (void *)(a1 + v177);
          uint64_t v178 = (const void *)(a2 + v177);
          uint64_t v179 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v165 + 48);
          swift_bridgeObjectRetain();
          if (v179(v178, 1, v164))
          {
            uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(__dstf, v178, *(void *)(*(void *)(v180 - 8) + 64));
          }
          else
          {
            v166((uint64_t)__dstf, (uint64_t)v178, v164);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v165 + 56))(__dstf, 0, 1, v164);
          }
          uint64_t v181 = type metadata accessor for WindowEvent();
          break;
        default:
          uint64_t v27 = sub_25247A4B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
          uint64_t v28 = type metadata accessor for EventBase(0);
          uint64_t v29 = *(int *)(v28 + 20);
          uint64_t v30 = a1 + v29;
          uint64_t v31 = a2 + v29;
          uint64_t v32 = sub_25247A540();
          uint64_t v33 = *(void *)(v32 - 8);
          uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
          v34(v30, v31, v32);
          *(unsigned char *)(a1 + *(int *)(v28 + 24)) = *(unsigned char *)(a2 + *(int *)(v28 + 24));
          uint64_t v35 = (int *)type metadata accessor for AccessoryEventBase(0);
          v34(a1 + v35[5], a2 + v35[5], v32);
          uint64_t v36 = v35[6];
          uint64_t v37 = (void *)(a1 + v36);
          uint64_t v38 = (void *)(a2 + v36);
          *uint64_t v37 = *v38;
          v37[1] = v38[1];
          uint64_t v39 = v35[7];
          uint64_t v40 = a1 + v39;
          uint64_t v41 = a2 + v39;
          swift_bridgeObjectRetain();
          v34(v40, v41, v32);
          uint64_t v42 = v35[8];
          uint64_t v43 = (void *)(a1 + v42);
          uint64_t v44 = (void *)(a2 + v42);
          *uint64_t v43 = *v44;
          v43[1] = v44[1];
          uint64_t v45 = v35[9];
          __dst = (void *)(a1 + v45);
          uint64_t v46 = (const void *)(a2 + v45);
          uint64_t v47 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48);
          swift_bridgeObjectRetain();
          if (v47(v46, 1, v32))
          {
            uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(__dst, v46, *(void *)(*(void *)(v48 - 8) + 64));
          }
          else
          {
            v34((uint64_t)__dst, (uint64_t)v46, v32);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v32);
          }
          uint64_t v181 = type metadata accessor for ContactSensorEvent();
          break;
      }
      *(unsigned char *)(a1 + *(int *)(v181 + 20)) = *(unsigned char *)(a2 + *(int *)(v181 + 20));
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for EventRecord.DecodedEvent(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_25247A4B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    uint64_t v5 = type metadata accessor for EventBase(0);
    uint64_t v6 = *(int *)(v5 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    uint64_t v9 = sub_25247A540();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
    v11(v7, v8, v9);
    *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
    uint64_t v12 = (int *)type metadata accessor for AccessoryEventBase(0);
    v11((void *)(a1 + v12[5]), (const void *)(a2 + v12[5]), v9);
    *(_OWORD *)(a1 + v12[6]) = *(_OWORD *)(a2 + v12[6]);
    v11((void *)(a1 + v12[7]), (const void *)(a2 + v12[7]), v9);
    *(_OWORD *)(a1 + v12[8]) = *(_OWORD *)(a2 + v12[8]);
    uint64_t v13 = v12[9];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v11(v14, v15, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    }
  }
  else
  {
    type metadata accessor for SomeAccessoryEvent();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v30 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
        uint64_t v31 = type metadata accessor for EventBase(0);
        uint64_t v32 = *(int *)(v31 + 20);
        uint64_t v33 = (void *)(a1 + v32);
        uint64_t v34 = (const void *)(a2 + v32);
        uint64_t v35 = sub_25247A540();
        uint64_t v36 = *(void *)(v35 - 8);
        uint64_t v37 = *(void (**)(void *, const void *, uint64_t))(v36 + 32);
        v37(v33, v34, v35);
        *(unsigned char *)(a1 + *(int *)(v31 + 24)) = *(unsigned char *)(a2 + *(int *)(v31 + 24));
        uint64_t v38 = (int *)type metadata accessor for AccessoryEventBase(0);
        v37((void *)(a1 + v38[5]), (const void *)(a2 + v38[5]), v35);
        *(_OWORD *)(a1 + v38[6]) = *(_OWORD *)(a2 + v38[6]);
        v37((void *)(a1 + v38[7]), (const void *)(a2 + v38[7]), v35);
        *(_OWORD *)(a1 + v38[8]) = *(_OWORD *)(a2 + v38[8]);
        uint64_t v39 = v38[9];
        uint64_t v40 = (void *)(a1 + v39);
        uint64_t v41 = (const void *)(a2 + v39);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(a2 + v39, 1, v35))
        {
          uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          v37(v40, v41, v35);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v40, 0, 1, v35);
        }
        uint64_t v108 = type metadata accessor for DoorEvent();
        break;
      case 2u:
        uint64_t v43 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(a1, a2, v43);
        uint64_t v44 = type metadata accessor for EventBase(0);
        uint64_t v45 = *(int *)(v44 + 20);
        uint64_t v46 = (void *)(a1 + v45);
        uint64_t v47 = (const void *)(a2 + v45);
        uint64_t v48 = sub_25247A540();
        uint64_t v49 = *(void *)(v48 - 8);
        uint64_t v50 = *(void (**)(void *, const void *, uint64_t))(v49 + 32);
        v50(v46, v47, v48);
        *(unsigned char *)(a1 + *(int *)(v44 + 24)) = *(unsigned char *)(a2 + *(int *)(v44 + 24));
        uint64_t v51 = (int *)type metadata accessor for AccessoryEventBase(0);
        v50((void *)(a1 + v51[5]), (const void *)(a2 + v51[5]), v48);
        *(_OWORD *)(a1 + v51[6]) = *(_OWORD *)(a2 + v51[6]);
        v50((void *)(a1 + v51[7]), (const void *)(a2 + v51[7]), v48);
        *(_OWORD *)(a1 + v51[8]) = *(_OWORD *)(a2 + v51[8]);
        uint64_t v52 = v51[9];
        uint64_t v53 = (void *)(a1 + v52);
        uint64_t v54 = (const void *)(a2 + v52);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(a2 + v52, 1, v48))
        {
          uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          v50(v53, v54, v48);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v53, 0, 1, v48);
        }
        uint64_t v108 = type metadata accessor for GarageDoorEvent();
        break;
      case 3u:
        uint64_t v56 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 32))(a1, a2, v56);
        uint64_t v57 = type metadata accessor for EventBase(0);
        uint64_t v58 = *(int *)(v57 + 20);
        uint64_t v59 = (void *)(a1 + v58);
        uint64_t v60 = (const void *)(a2 + v58);
        uint64_t v61 = sub_25247A540();
        uint64_t v62 = *(void *)(v61 - 8);
        uint64_t v63 = *(void (**)(void *, const void *, uint64_t))(v62 + 32);
        v63(v59, v60, v61);
        *(unsigned char *)(a1 + *(int *)(v57 + 24)) = *(unsigned char *)(a2 + *(int *)(v57 + 24));
        uint64_t v64 = (int *)type metadata accessor for AccessoryEventBase(0);
        v63((void *)(a1 + v64[5]), (const void *)(a2 + v64[5]), v61);
        *(_OWORD *)(a1 + v64[6]) = *(_OWORD *)(a2 + v64[6]);
        v63((void *)(a1 + v64[7]), (const void *)(a2 + v64[7]), v61);
        *(_OWORD *)(a1 + v64[8]) = *(_OWORD *)(a2 + v64[8]);
        uint64_t v65 = v64[9];
        uint64_t v66 = (void *)(a1 + v65);
        uint64_t v67 = (const void *)(a2 + v65);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(a2 + v65, 1, v61))
        {
          uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          v63(v66, v67, v61);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(v66, 0, 1, v61);
        }
        uint64_t v108 = type metadata accessor for LockEvent();
        break;
      case 4u:
        uint64_t v69 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 32))(a1, a2, v69);
        uint64_t v70 = type metadata accessor for EventBase(0);
        uint64_t v71 = *(int *)(v70 + 20);
        uint64_t v72 = (void *)(a1 + v71);
        uint64_t v73 = (const void *)(a2 + v71);
        uint64_t v74 = sub_25247A540();
        uint64_t v75 = *(void *)(v74 - 8);
        uint64_t v76 = *(void (**)(void *, const void *, uint64_t))(v75 + 32);
        v76(v72, v73, v74);
        *(unsigned char *)(a1 + *(int *)(v70 + 24)) = *(unsigned char *)(a2 + *(int *)(v70 + 24));
        uint64_t v77 = (int *)type metadata accessor for AccessoryEventBase(0);
        v76((void *)(a1 + v77[5]), (const void *)(a2 + v77[5]), v74);
        *(_OWORD *)(a1 + v77[6]) = *(_OWORD *)(a2 + v77[6]);
        v76((void *)(a1 + v77[7]), (const void *)(a2 + v77[7]), v74);
        *(_OWORD *)(a1 + v77[8]) = *(_OWORD *)(a2 + v77[8]);
        uint64_t v78 = v77[9];
        uint64_t v79 = (void *)(a1 + v78);
        uint64_t v80 = (const void *)(a2 + v78);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(a2 + v78, 1, v74))
        {
          uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          v76(v79, v80, v74);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v79, 0, 1, v74);
        }
        uint64_t v108 = type metadata accessor for SecuritySystemEvent();
        break;
      case 5u:
        uint64_t v82 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 32))(a1, a2, v82);
        uint64_t v83 = type metadata accessor for EventBase(0);
        uint64_t v84 = *(int *)(v83 + 20);
        uint64_t v85 = (void *)(a1 + v84);
        uint64_t v86 = (const void *)(a2 + v84);
        uint64_t v87 = sub_25247A540();
        uint64_t v88 = *(void *)(v87 - 8);
        uint64_t v89 = *(void (**)(void *, const void *, uint64_t))(v88 + 32);
        v89(v85, v86, v87);
        *(unsigned char *)(a1 + *(int *)(v83 + 24)) = *(unsigned char *)(a2 + *(int *)(v83 + 24));
        uint64_t v90 = (int *)type metadata accessor for AccessoryEventBase(0);
        v89((void *)(a1 + v90[5]), (const void *)(a2 + v90[5]), v87);
        *(_OWORD *)(a1 + v90[6]) = *(_OWORD *)(a2 + v90[6]);
        v89((void *)(a1 + v90[7]), (const void *)(a2 + v90[7]), v87);
        *(_OWORD *)(a1 + v90[8]) = *(_OWORD *)(a2 + v90[8]);
        uint64_t v91 = v90[9];
        uint64_t v92 = (void *)(a1 + v91);
        uint64_t v93 = (const void *)(a2 + v91);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(a2 + v91, 1, v87))
        {
          uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          v89(v92, v93, v87);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v88 + 56))(v92, 0, 1, v87);
        }
        uint64_t v108 = type metadata accessor for SmokeDetectorEvent();
        break;
      case 6u:
        uint64_t v95 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 32))(a1, a2, v95);
        uint64_t v96 = type metadata accessor for EventBase(0);
        uint64_t v97 = *(int *)(v96 + 20);
        uint64_t v98 = (void *)(a1 + v97);
        uint64_t v99 = (const void *)(a2 + v97);
        uint64_t v100 = sub_25247A540();
        uint64_t v101 = *(void *)(v100 - 8);
        uint64_t v102 = *(void (**)(void *, const void *, uint64_t))(v101 + 32);
        v102(v98, v99, v100);
        *(unsigned char *)(a1 + *(int *)(v96 + 24)) = *(unsigned char *)(a2 + *(int *)(v96 + 24));
        uint64_t v103 = (int *)type metadata accessor for AccessoryEventBase(0);
        v102((void *)(a1 + v103[5]), (const void *)(a2 + v103[5]), v100);
        *(_OWORD *)(a1 + v103[6]) = *(_OWORD *)(a2 + v103[6]);
        v102((void *)(a1 + v103[7]), (const void *)(a2 + v103[7]), v100);
        *(_OWORD *)(a1 + v103[8]) = *(_OWORD *)(a2 + v103[8]);
        uint64_t v104 = v103[9];
        uint64_t v105 = (void *)(a1 + v104);
        uint64_t v106 = (const void *)(a2 + v104);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(a2 + v104, 1, v100))
        {
          uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
        }
        else
        {
          v102(v105, v106, v100);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v101 + 56))(v105, 0, 1, v100);
        }
        uint64_t v108 = type metadata accessor for WindowEvent();
        break;
      default:
        uint64_t v17 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
        uint64_t v18 = type metadata accessor for EventBase(0);
        uint64_t v19 = *(int *)(v18 + 20);
        uint64_t v20 = (void *)(a1 + v19);
        uint64_t v21 = (const void *)(a2 + v19);
        uint64_t v22 = sub_25247A540();
        uint64_t v23 = *(void *)(v22 - 8);
        uint64_t v24 = *(void (**)(void *, const void *, uint64_t))(v23 + 32);
        v24(v20, v21, v22);
        *(unsigned char *)(a1 + *(int *)(v18 + 24)) = *(unsigned char *)(a2 + *(int *)(v18 + 24));
        uint64_t v25 = (int *)type metadata accessor for AccessoryEventBase(0);
        v24((void *)(a1 + v25[5]), (const void *)(a2 + v25[5]), v22);
        *(_OWORD *)(a1 + v25[6]) = *(_OWORD *)(a2 + v25[6]);
        v24((void *)(a1 + v25[7]), (const void *)(a2 + v25[7]), v22);
        *(_OWORD *)(a1 + v25[8]) = *(_OWORD *)(a2 + v25[8]);
        uint64_t v26 = v25[9];
        uint64_t v27 = (void *)(a1 + v26);
        uint64_t v28 = (const void *)(a2 + v26);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(a2 + v26, 1, v22))
        {
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          v24(v27, v28, v22);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v22);
        }
        uint64_t v108 = type metadata accessor for ContactSensorEvent();
        break;
    }
    *(unsigned char *)(a1 + *(int *)(v108 + 20)) = *(unsigned char *)(a2 + *(int *)(v108 + 20));
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for EventRecord.DecodedEvent(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_25243DD80(a1, type metadata accessor for EventRecord.DecodedEvent);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      uint64_t v5 = type metadata accessor for EventBase(0);
      uint64_t v6 = *(int *)(v5 + 20);
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = sub_25247A540();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
      v11(v7, v8, v9);
      *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
      uint64_t v12 = (int *)type metadata accessor for AccessoryEventBase(0);
      v11(a1 + v12[5], a2 + v12[5], v9);
      *(_OWORD *)(a1 + v12[6]) = *(_OWORD *)(a2 + v12[6]);
      v11(a1 + v12[7], a2 + v12[7], v9);
      *(_OWORD *)(a1 + v12[8]) = *(_OWORD *)(a2 + v12[8]);
      uint64_t v13 = v12[9];
      uint64_t v14 = (void *)(a1 + v13);
      uint64_t v15 = (const void *)(a2 + v13);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        v11((uint64_t)v14, (uint64_t)v15, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
      }
    }
    else
    {
      type metadata accessor for SomeAccessoryEvent();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v30 = sub_25247A4B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
          uint64_t v31 = type metadata accessor for EventBase(0);
          uint64_t v32 = *(int *)(v31 + 20);
          uint64_t v33 = a1 + v32;
          uint64_t v34 = a2 + v32;
          uint64_t v35 = sub_25247A540();
          uint64_t v36 = *(void *)(v35 - 8);
          uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
          v37(v33, v34, v35);
          *(unsigned char *)(a1 + *(int *)(v31 + 24)) = *(unsigned char *)(a2 + *(int *)(v31 + 24));
          uint64_t v38 = (int *)type metadata accessor for AccessoryEventBase(0);
          v37(a1 + v38[5], a2 + v38[5], v35);
          *(_OWORD *)(a1 + v38[6]) = *(_OWORD *)(a2 + v38[6]);
          v37(a1 + v38[7], a2 + v38[7], v35);
          *(_OWORD *)(a1 + v38[8]) = *(_OWORD *)(a2 + v38[8]);
          uint64_t v39 = v38[9];
          uint64_t v40 = (void *)(a1 + v39);
          uint64_t v41 = (const void *)(a2 + v39);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(a2 + v39, 1, v35))
          {
            uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
          }
          else
          {
            v37((uint64_t)v40, (uint64_t)v41, v35);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v40, 0, 1, v35);
          }
          uint64_t v108 = type metadata accessor for DoorEvent();
          break;
        case 2u:
          uint64_t v43 = sub_25247A4B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(a1, a2, v43);
          uint64_t v44 = type metadata accessor for EventBase(0);
          uint64_t v45 = *(int *)(v44 + 20);
          uint64_t v46 = a1 + v45;
          uint64_t v47 = a2 + v45;
          uint64_t v48 = sub_25247A540();
          uint64_t v49 = *(void *)(v48 - 8);
          uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32);
          v50(v46, v47, v48);
          *(unsigned char *)(a1 + *(int *)(v44 + 24)) = *(unsigned char *)(a2 + *(int *)(v44 + 24));
          uint64_t v51 = (int *)type metadata accessor for AccessoryEventBase(0);
          v50(a1 + v51[5], a2 + v51[5], v48);
          *(_OWORD *)(a1 + v51[6]) = *(_OWORD *)(a2 + v51[6]);
          v50(a1 + v51[7], a2 + v51[7], v48);
          *(_OWORD *)(a1 + v51[8]) = *(_OWORD *)(a2 + v51[8]);
          uint64_t v52 = v51[9];
          uint64_t v53 = (void *)(a1 + v52);
          uint64_t v54 = (const void *)(a2 + v52);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(a2 + v52, 1, v48))
          {
            uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
          }
          else
          {
            v50((uint64_t)v53, (uint64_t)v54, v48);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v53, 0, 1, v48);
          }
          uint64_t v108 = type metadata accessor for GarageDoorEvent();
          break;
        case 3u:
          uint64_t v56 = sub_25247A4B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 32))(a1, a2, v56);
          uint64_t v57 = type metadata accessor for EventBase(0);
          uint64_t v58 = *(int *)(v57 + 20);
          uint64_t v59 = a1 + v58;
          uint64_t v60 = a2 + v58;
          uint64_t v61 = sub_25247A540();
          uint64_t v62 = *(void *)(v61 - 8);
          uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32);
          v63(v59, v60, v61);
          *(unsigned char *)(a1 + *(int *)(v57 + 24)) = *(unsigned char *)(a2 + *(int *)(v57 + 24));
          uint64_t v64 = (int *)type metadata accessor for AccessoryEventBase(0);
          v63(a1 + v64[5], a2 + v64[5], v61);
          *(_OWORD *)(a1 + v64[6]) = *(_OWORD *)(a2 + v64[6]);
          v63(a1 + v64[7], a2 + v64[7], v61);
          *(_OWORD *)(a1 + v64[8]) = *(_OWORD *)(a2 + v64[8]);
          uint64_t v65 = v64[9];
          uint64_t v66 = (void *)(a1 + v65);
          uint64_t v67 = (const void *)(a2 + v65);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(a2 + v65, 1, v61))
          {
            uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
          }
          else
          {
            v63((uint64_t)v66, (uint64_t)v67, v61);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(v66, 0, 1, v61);
          }
          uint64_t v108 = type metadata accessor for LockEvent();
          break;
        case 4u:
          uint64_t v69 = sub_25247A4B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 32))(a1, a2, v69);
          uint64_t v70 = type metadata accessor for EventBase(0);
          uint64_t v71 = *(int *)(v70 + 20);
          uint64_t v72 = a1 + v71;
          uint64_t v73 = a2 + v71;
          uint64_t v74 = sub_25247A540();
          uint64_t v75 = *(void *)(v74 - 8);
          uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32);
          v76(v72, v73, v74);
          *(unsigned char *)(a1 + *(int *)(v70 + 24)) = *(unsigned char *)(a2 + *(int *)(v70 + 24));
          uint64_t v77 = (int *)type metadata accessor for AccessoryEventBase(0);
          v76(a1 + v77[5], a2 + v77[5], v74);
          *(_OWORD *)(a1 + v77[6]) = *(_OWORD *)(a2 + v77[6]);
          v76(a1 + v77[7], a2 + v77[7], v74);
          *(_OWORD *)(a1 + v77[8]) = *(_OWORD *)(a2 + v77[8]);
          uint64_t v78 = v77[9];
          uint64_t v79 = (void *)(a1 + v78);
          uint64_t v80 = (const void *)(a2 + v78);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(a2 + v78, 1, v74))
          {
            uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
          }
          else
          {
            v76((uint64_t)v79, (uint64_t)v80, v74);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v79, 0, 1, v74);
          }
          uint64_t v108 = type metadata accessor for SecuritySystemEvent();
          break;
        case 5u:
          uint64_t v82 = sub_25247A4B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 32))(a1, a2, v82);
          uint64_t v83 = type metadata accessor for EventBase(0);
          uint64_t v84 = *(int *)(v83 + 20);
          uint64_t v85 = a1 + v84;
          uint64_t v86 = a2 + v84;
          uint64_t v87 = sub_25247A540();
          uint64_t v88 = *(void *)(v87 - 8);
          uint64_t v89 = *(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32);
          v89(v85, v86, v87);
          *(unsigned char *)(a1 + *(int *)(v83 + 24)) = *(unsigned char *)(a2 + *(int *)(v83 + 24));
          uint64_t v90 = (int *)type metadata accessor for AccessoryEventBase(0);
          v89(a1 + v90[5], a2 + v90[5], v87);
          *(_OWORD *)(a1 + v90[6]) = *(_OWORD *)(a2 + v90[6]);
          v89(a1 + v90[7], a2 + v90[7], v87);
          *(_OWORD *)(a1 + v90[8]) = *(_OWORD *)(a2 + v90[8]);
          uint64_t v91 = v90[9];
          uint64_t v92 = (void *)(a1 + v91);
          uint64_t v93 = (const void *)(a2 + v91);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(a2 + v91, 1, v87))
          {
            uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
          }
          else
          {
            v89((uint64_t)v92, (uint64_t)v93, v87);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v88 + 56))(v92, 0, 1, v87);
          }
          uint64_t v108 = type metadata accessor for SmokeDetectorEvent();
          break;
        case 6u:
          uint64_t v95 = sub_25247A4B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 32))(a1, a2, v95);
          uint64_t v96 = type metadata accessor for EventBase(0);
          uint64_t v97 = *(int *)(v96 + 20);
          uint64_t v98 = a1 + v97;
          uint64_t v99 = a2 + v97;
          uint64_t v100 = sub_25247A540();
          uint64_t v101 = *(void *)(v100 - 8);
          uint64_t v102 = *(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 32);
          v102(v98, v99, v100);
          *(unsigned char *)(a1 + *(int *)(v96 + 24)) = *(unsigned char *)(a2 + *(int *)(v96 + 24));
          uint64_t v103 = (int *)type metadata accessor for AccessoryEventBase(0);
          v102(a1 + v103[5], a2 + v103[5], v100);
          *(_OWORD *)(a1 + v103[6]) = *(_OWORD *)(a2 + v103[6]);
          v102(a1 + v103[7], a2 + v103[7], v100);
          *(_OWORD *)(a1 + v103[8]) = *(_OWORD *)(a2 + v103[8]);
          uint64_t v104 = v103[9];
          uint64_t v105 = (void *)(a1 + v104);
          uint64_t v106 = (const void *)(a2 + v104);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(a2 + v104, 1, v100))
          {
            uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
          }
          else
          {
            v102((uint64_t)v105, (uint64_t)v106, v100);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v101 + 56))(v105, 0, 1, v100);
          }
          uint64_t v108 = type metadata accessor for WindowEvent();
          break;
        default:
          uint64_t v17 = sub_25247A4B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
          uint64_t v18 = type metadata accessor for EventBase(0);
          uint64_t v19 = *(int *)(v18 + 20);
          uint64_t v20 = a1 + v19;
          uint64_t v21 = a2 + v19;
          uint64_t v22 = sub_25247A540();
          uint64_t v23 = *(void *)(v22 - 8);
          uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32);
          v24(v20, v21, v22);
          *(unsigned char *)(a1 + *(int *)(v18 + 24)) = *(unsigned char *)(a2 + *(int *)(v18 + 24));
          uint64_t v25 = (int *)type metadata accessor for AccessoryEventBase(0);
          v24(a1 + v25[5], a2 + v25[5], v22);
          *(_OWORD *)(a1 + v25[6]) = *(_OWORD *)(a2 + v25[6]);
          v24(a1 + v25[7], a2 + v25[7], v22);
          *(_OWORD *)(a1 + v25[8]) = *(_OWORD *)(a2 + v25[8]);
          uint64_t v26 = v25[9];
          uint64_t v27 = (void *)(a1 + v26);
          uint64_t v28 = (const void *)(a2 + v26);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(a2 + v26, 1, v22))
          {
            uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
            memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
          }
          else
          {
            v24((uint64_t)v27, (uint64_t)v28, v22);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v22);
          }
          uint64_t v108 = type metadata accessor for ContactSensorEvent();
          break;
      }
      *(unsigned char *)(a1 + *(int *)(v108 + 20)) = *(unsigned char *)(a2 + *(int *)(v108 + 20));
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SomeAccessoryEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for SomeAccessoryEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_252444870()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_252444880()
{
  uint64_t result = type metadata accessor for SomeAccessoryEvent();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FakeEvent();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_252444944(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_252444994()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_252444A24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_252444ADC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_252444B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_252444B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_252444BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_252444BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_252444C48(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_252444DA4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x252444FBCLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for UncheckedSendable()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t dispatch thunk of EventProtocol.date.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EventProtocol.homeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EventProtocol.category.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_252445050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_0);
}

uint64_t sub_252445068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_0);
}

uint64_t type metadata accessor for EventBase(uint64_t a1)
{
  return sub_2523FC8A8(a1, (uint64_t *)&unk_269C05AD0);
}

void *sub_2524450A8()
{
  uint64_t v1 = v0;
  v19[7] = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_25247A4B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04750);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25247E5A0;
  *(void *)(inited + 32) = sub_25241DE74(v1);
  *(void *)(inited + 40) = v7;
  size_t v8 = sub_25241D78C((void *)1, 2, 1, (void *)inited);
  v8[2] = 2;
  *((_OWORD *)v8 + 3) = xmmword_25247F500;
  uint64_t v9 = qword_252481148[*(char *)(v1 + *(int *)(type metadata accessor for EventBase(0) + 24))];
  if (qword_252481148[byte_2702992F8] == v9
    || qword_252481148[byte_2702992F9] == v9
    || qword_252481148[byte_2702992FA] == v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
    char v10 = sub_2524388CC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C052B8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_25247EAD0;
    *(unsigned char *)(v11 + 32) = v10;
    *(unsigned char *)(v11 + 33) = -1;
    uint64_t v12 = sub_25241E50C(v11);
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    unint64_t v16 = v8[2];
    unint64_t v15 = v8[3];
    if (v16 >= v15 >> 1) {
      size_t v8 = sub_25241D78C((void *)(v15 > 1), v16 + 1, 1, v8);
    }
    v8[2] = v16 + 1;
    uint64_t v17 = &v8[2 * v16];
    void v17[4] = v12;
    uint64_t v17[5] = v14;
  }
  return v8;
}

void *sub_25244530C()
{
  uint64_t v1 = v0;
  v19[7] = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_25247A4B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04750);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25247E5A0;
  *(void *)(inited + 32) = sub_25241DEB4(v1);
  *(void *)(inited + 40) = v7;
  size_t v8 = sub_25241D78C((void *)1, 2, 1, (void *)inited);
  v8[2] = 2;
  *((_OWORD *)v8 + 3) = xmmword_25247F500;
  uint64_t v9 = qword_252481148[*(char *)(v1 + *(int *)(type metadata accessor for EventBase(0) + 24))];
  if (qword_252481148[byte_270299320] == v9
    || qword_252481148[byte_270299321] == v9
    || qword_252481148[byte_270299322] == v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
    char v10 = sub_2524388CC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C052B8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_25247EAD0;
    *(unsigned char *)(v11 + 32) = v10;
    *(unsigned char *)(v11 + 33) = -1;
    uint64_t v12 = sub_25241E50C(v11);
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    unint64_t v16 = v8[2];
    unint64_t v15 = v8[3];
    if (v16 >= v15 >> 1) {
      size_t v8 = sub_25241D78C((void *)(v15 > 1), v16 + 1, 1, v8);
    }
    v8[2] = v16 + 1;
    uint64_t v17 = &v8[2 * v16];
    void v17[4] = v12;
    uint64_t v17[5] = v14;
  }
  return v8;
}

void *sub_252445570()
{
  uint64_t v1 = v0;
  v19[7] = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_25247A4B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04750);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25247E5A0;
  *(void *)(inited + 32) = sub_25241E0C4(v1);
  *(void *)(inited + 40) = v7;
  size_t v8 = sub_25241D78C((void *)1, 2, 1, (void *)inited);
  v8[2] = 2;
  *((_OWORD *)v8 + 3) = xmmword_25247F500;
  uint64_t v9 = qword_252481148[*(char *)(v1 + *(int *)(type metadata accessor for EventBase(0) + 24))];
  if (qword_252481148[byte_270299348] == v9
    || qword_252481148[byte_270299349] == v9
    || qword_252481148[byte_27029934A] == v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
    char v10 = sub_2524388CC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C052B8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_25247EAD0;
    *(unsigned char *)(v11 + 32) = v10;
    *(unsigned char *)(v11 + 33) = -1;
    uint64_t v12 = sub_25241E50C(v11);
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    unint64_t v16 = v8[2];
    unint64_t v15 = v8[3];
    if (v16 >= v15 >> 1) {
      size_t v8 = sub_25241D78C((void *)(v15 > 1), v16 + 1, 1, v8);
    }
    v8[2] = v16 + 1;
    uint64_t v17 = &v8[2 * v16];
    void v17[4] = v12;
    uint64_t v17[5] = v14;
  }
  return v8;
}

void *sub_2524457D4()
{
  uint64_t v1 = v0;
  v19[7] = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_25247A4B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04750);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25247E5A0;
  *(void *)(inited + 32) = sub_25241E104(v1);
  *(void *)(inited + 40) = v7;
  size_t v8 = sub_25241D78C((void *)1, 2, 1, (void *)inited);
  v8[2] = 2;
  *((_OWORD *)v8 + 3) = xmmword_25247F500;
  uint64_t v9 = qword_252481148[*(char *)(v1 + *(int *)(type metadata accessor for EventBase(0) + 24))];
  if (qword_252481148[byte_270299370] == v9
    || qword_252481148[byte_270299371] == v9
    || qword_252481148[byte_270299372] == v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
    char v10 = sub_2524388CC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C052B8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_25247EAD0;
    *(unsigned char *)(v11 + 32) = v10;
    *(unsigned char *)(v11 + 33) = -1;
    uint64_t v12 = sub_25241E50C(v11);
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    unint64_t v16 = v8[2];
    unint64_t v15 = v8[3];
    if (v16 >= v15 >> 1) {
      size_t v8 = sub_25241D78C((void *)(v15 > 1), v16 + 1, 1, v8);
    }
    v8[2] = v16 + 1;
    uint64_t v17 = &v8[2 * v16];
    void v17[4] = v12;
    uint64_t v17[5] = v14;
  }
  return v8;
}

void *sub_252445A38()
{
  uint64_t v1 = v0;
  v19[7] = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_25247A4B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04750);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25247E5A0;
  *(void *)(inited + 32) = sub_25241E144(v1);
  *(void *)(inited + 40) = v7;
  size_t v8 = sub_25241D78C((void *)1, 2, 1, (void *)inited);
  v8[2] = 2;
  *((_OWORD *)v8 + 3) = xmmword_25247F500;
  uint64_t v9 = qword_252481148[*(char *)(v1 + *(int *)(type metadata accessor for EventBase(0) + 24))];
  if (qword_252481148[byte_270299398] == v9
    || qword_252481148[byte_270299399] == v9
    || qword_252481148[byte_27029939A] == v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
    char v10 = sub_2524388CC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C052B8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_25247EAD0;
    *(unsigned char *)(v11 + 32) = v10;
    *(unsigned char *)(v11 + 33) = -1;
    uint64_t v12 = sub_25241E50C(v11);
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    unint64_t v16 = v8[2];
    unint64_t v15 = v8[3];
    if (v16 >= v15 >> 1) {
      size_t v8 = sub_25241D78C((void *)(v15 > 1), v16 + 1, 1, v8);
    }
    v8[2] = v16 + 1;
    uint64_t v17 = &v8[2 * v16];
    void v17[4] = v12;
    uint64_t v17[5] = v14;
  }
  return v8;
}

void *sub_252445C9C()
{
  uint64_t v1 = v0;
  v19[7] = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_25247A4B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04750);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25247E5A0;
  *(void *)(inited + 32) = sub_25241E184(v1);
  *(void *)(inited + 40) = v7;
  size_t v8 = sub_25241D78C((void *)1, 2, 1, (void *)inited);
  v8[2] = 2;
  *((_OWORD *)v8 + 3) = xmmword_25247F500;
  uint64_t v9 = qword_252481148[*(char *)(v1 + *(int *)(type metadata accessor for EventBase(0) + 24))];
  if (qword_252481148[byte_2702993C0] == v9
    || qword_252481148[byte_2702993C1] == v9
    || qword_252481148[byte_2702993C2] == v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
    char v10 = sub_2524388CC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C052B8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_25247EAD0;
    *(unsigned char *)(v11 + 32) = v10;
    *(unsigned char *)(v11 + 33) = -1;
    uint64_t v12 = sub_25241E50C(v11);
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    unint64_t v16 = v8[2];
    unint64_t v15 = v8[3];
    if (v16 >= v15 >> 1) {
      size_t v8 = sub_25241D78C((void *)(v15 > 1), v16 + 1, 1, v8);
    }
    v8[2] = v16 + 1;
    uint64_t v17 = &v8[2 * v16];
    void v17[4] = v12;
    uint64_t v17[5] = v14;
  }
  return v8;
}

void *sub_252445F00()
{
  uint64_t v1 = v0;
  v19[7] = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_25247A4B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04750);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25247E5A0;
  *(void *)(inited + 32) = sub_25241E1C4(v1);
  *(void *)(inited + 40) = v7;
  size_t v8 = sub_25241D78C((void *)1, 2, 1, (void *)inited);
  v8[2] = 2;
  *((_OWORD *)v8 + 3) = xmmword_25247F500;
  uint64_t v9 = qword_252481148[*(char *)(v1 + *(int *)(type metadata accessor for EventBase(0) + 24))];
  if (qword_252481148[byte_2702993E8] == v9
    || qword_252481148[byte_2702993E9] == v9
    || qword_252481148[byte_2702993EA] == v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
    char v10 = sub_2524388CC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C052B8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_25247EAD0;
    *(unsigned char *)(v11 + 32) = v10;
    *(unsigned char *)(v11 + 33) = -1;
    uint64_t v12 = sub_25241E50C(v11);
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    unint64_t v16 = v8[2];
    unint64_t v15 = v8[3];
    if (v16 >= v15 >> 1) {
      size_t v8 = sub_25241D78C((void *)(v15 > 1), v16 + 1, 1, v8);
    }
    v8[2] = v16 + 1;
    uint64_t v17 = &v8[2 * v16];
    void v17[4] = v12;
    uint64_t v17[5] = v14;
  }
  return v8;
}

uint64_t sub_252446170@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v27 = sub_25247A540();
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25247A4B0();
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v28 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05B70);
  uint64_t v26 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  size_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EventBaseLegacy(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2524481D0();
  uint64_t v30 = v8;
  uint64_t v12 = v31;
  sub_25247B3A0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v22 = v9;
  uint64_t v31 = a1;
  uint64_t v13 = (uint64_t)v11;
  uint64_t v15 = v26;
  uint64_t v14 = v27;
  char v35 = 0;
  sub_252447580(&qword_269C05AF8, MEMORY[0x263F07490]);
  unint64_t v16 = v28;
  sub_25247B180();
  uint64_t v17 = *(void (**)(uint64_t, char *))(v25 + 32);
  uint64_t v28 = (char *)v5;
  v17(v13, v16);
  char v34 = 1;
  sub_252447580(&qword_269C05B00, MEMORY[0x263F07508]);
  uint64_t v18 = v4;
  sub_25247B180();
  uint64_t v19 = v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v13 + *(int *)(v22 + 20), v18, v14);
  char v32 = 2;
  sub_2524475C8();
  sub_25247B180();
  uint64_t v20 = (uint64_t)v31;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v30, v29);
  *(unsigned char *)(v13 + *(int *)(v19 + 24)) = v33;
  sub_252448224(v13, v23, type metadata accessor for EventBaseLegacy);
  __swift_destroy_boxed_opaque_existential_1(v20);
  return sub_25244828C(v13, type metadata accessor for EventBaseLegacy);
}

uint64_t sub_252446648()
{
  uint64_t v1 = 0x6E656449656D6F68;
  if (*v0 != 1) {
    uint64_t v1 = 0x79726F6765746163;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1702125924;
  }
}

uint64_t sub_2524466A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252448018(a1, a2);
  *a3 = result;
  return result;
}

void sub_2524466D0(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_2524466DC(uint64_t a1)
{
  unint64_t v2 = sub_2524481D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252446718(uint64_t a1)
{
  unint64_t v2 = sub_2524481D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252446754@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_252446170(a1, a2);
}

uint64_t sub_25244676C(void *a1)
{
  return sub_252446D48(a1, &qword_269C05B60, (void (*)(void))sub_2524481D0, (uint64_t)&type metadata for EventBaseLegacy.CodingKeys, (uint64_t)type metadata accessor for EventBaseLegacy);
}

uint64_t sub_2524467BC()
{
  return sub_25247B390();
}

uint64_t sub_2524468C8()
{
  return sub_25247B360();
}

uint64_t sub_2524469C4()
{
  return sub_25247B390();
}

BOOL sub_252446ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_25247A480() & 1) != 0
      && (sub_25247A4F0() & 1) != 0
      && qword_252481148[*(char *)(a1 + *(int *)(a3 + 24))] == qword_252481148[*(char *)(a2 + *(int *)(a3 + 24))];
}

uint64_t sub_252446B44(char *a1, char *a2)
{
  return sub_2523D2890(*a1, *a2);
}

uint64_t sub_252446B50()
{
  return sub_25247B390();
}

uint64_t sub_252446BAC()
{
  sub_25247A8D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_252446BEC()
{
  return sub_25247B390();
}

uint64_t sub_252446C44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252448184();
  *a1 = result;
  return result;
}

void sub_252446C74(void *a1@<X8>)
{
  *a1 = qword_252481130[*v1];
  a1[1] = 0xE100000000000000;
}

uint64_t sub_252446C90()
{
  return qword_252481130[*v0];
}

uint64_t sub_252446CA8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252448184();
  *a1 = result;
  return result;
}

uint64_t sub_252446CD0(uint64_t a1)
{
  unint64_t v2 = sub_25244752C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252446D0C(uint64_t a1)
{
  unint64_t v2 = sub_25244752C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252446D48(void *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  v16[0] = a5;
  uint64_t v7 = v5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_25247B3B0();
  char v20 = 0;
  sub_25247A4B0();
  sub_252447580(&qword_269C05B18, MEMORY[0x263F07490]);
  uint64_t v13 = v16[1];
  sub_25247B1D0();
  if (!v13)
  {
    uint64_t v14 = ((uint64_t (*)(void))v16[0])(0);
    char v19 = 1;
    sub_25247A540();
    sub_252447580(&qword_269C05B20, MEMORY[0x263F07508]);
    sub_25247B1D0();
    char v18 = *(unsigned char *)(v7 + *(int *)(v14 + 24));
    char v17 = 2;
    sub_25244761C();
    sub_25247B1D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_252446FA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v27 = sub_25247A540();
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25247A4B0();
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v28 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C05AE8);
  uint64_t v26 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  size_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EventBase(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25244752C();
  uint64_t v30 = v8;
  uint64_t v12 = v31;
  sub_25247B3A0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v22 = v9;
  uint64_t v31 = a1;
  uint64_t v13 = (uint64_t)v11;
  uint64_t v15 = v26;
  uint64_t v14 = v27;
  char v35 = 0;
  sub_252447580(&qword_269C05AF8, MEMORY[0x263F07490]);
  unint64_t v16 = v28;
  sub_25247B180();
  char v17 = *(void (**)(uint64_t, char *))(v25 + 32);
  uint64_t v28 = (char *)v5;
  v17(v13, v16);
  char v34 = 1;
  sub_252447580(&qword_269C05B00, MEMORY[0x263F07508]);
  char v18 = v4;
  sub_25247B180();
  uint64_t v19 = v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v13 + *(int *)(v22 + 20), v18, v14);
  char v32 = 2;
  sub_2524475C8();
  sub_25247B180();
  uint64_t v20 = (uint64_t)v31;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v30, v29);
  *(unsigned char *)(v13 + *(int *)(v19 + 24)) = v33;
  sub_252448224(v13, v23, type metadata accessor for EventBase);
  __swift_destroy_boxed_opaque_existential_1(v20);
  return sub_25244828C(v13, type metadata accessor for EventBase);
}

uint64_t sub_25244747C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_252446FA4(a1, a2);
}

uint64_t sub_252447494(void *a1)
{
  return sub_252446D48(a1, &qword_269C05B10, (void (*)(void))sub_25244752C, (uint64_t)&type metadata for EventBase.CodingKeys, (uint64_t)type metadata accessor for EventBase);
}

uint64_t sub_2524474E4()
{
  return sub_252447580(&qword_269C05AE0, (void (*)(uint64_t))type metadata accessor for EventBase);
}

unint64_t sub_25244752C()
{
  unint64_t result = qword_269C05AF0;
  if (!qword_269C05AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05AF0);
  }
  return result;
}

uint64_t sub_252447580(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2524475C8()
{
  unint64_t result = qword_269C05B08;
  if (!qword_269C05B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05B08);
  }
  return result;
}

unint64_t sub_25244761C()
{
  unint64_t result = qword_269C05B28;
  if (!qword_269C05B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05B28);
  }
  return result;
}

void *sub_25244767C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25247A4B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_25247A540();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_252447798(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_25247A540();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_252447840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_25244790C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_2524479D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_252447AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_252447B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252447B84);
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A4B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_25247A540();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 4) {
        return v14 - 3;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_252447C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252447CAC);
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_25247A4B0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_25247A540();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 3;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for EventBaseLegacy(uint64_t a1)
{
  return sub_2523FC8A8(a1, (uint64_t *)&unk_269C05B30);
}

uint64_t sub_252447DE0()
{
  uint64_t result = sub_25247A4B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25247A540();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventBase.CodingKeys()
{
  return &type metadata for EventBase.CodingKeys;
}

unint64_t sub_252447ECC()
{
  unint64_t result = qword_269C05B40;
  if (!qword_269C05B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05B40);
  }
  return result;
}

uint64_t sub_252447F20()
{
  return sub_252447580(&qword_269C05B48, (void (*)(uint64_t))type metadata accessor for EventBaseLegacy);
}

unint64_t sub_252447F6C()
{
  unint64_t result = qword_269C05B50;
  if (!qword_269C05B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05B50);
  }
  return result;
}

unint64_t sub_252447FC4()
{
  unint64_t result = qword_269C05B58;
  if (!qword_269C05B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05B58);
  }
  return result;
}

uint64_t sub_252448018(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_25247B260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656449656D6F68 && a2 == 0xEE00726569666974 || (sub_25247B260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79726F6765746163 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25247B260();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_252448184()
{
  unint64_t v0 = sub_25247B130();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_2524481D0()
{
  unint64_t result = qword_269C05B68;
  if (!qword_269C05B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05B68);
  }
  return result;
}

uint64_t sub_252448224(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25244828C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *_s13HomeKitEvents9EventBaseV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2524483B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventBaseLegacy.CodingKeys()
{
  return &type metadata for EventBaseLegacy.CodingKeys;
}

unint64_t sub_2524483F4()
{
  unint64_t result = qword_269C05B78;
  if (!qword_269C05B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05B78);
  }
  return result;
}

unint64_t sub_25244844C()
{
  unint64_t result = qword_269C05B80;
  if (!qword_269C05B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05B80);
  }
  return result;
}

unint64_t sub_2524484A4()
{
  unint64_t result = qword_269C05B88;
  if (!qword_269C05B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05B88);
  }
  return result;
}

unint64_t static LubyRackoffEncryption.encrypt(tag:withKey:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_252448528(a1, a2, a3);
}

unint64_t sub_252448510(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_252448528(a1, a2, a3);
}

unint64_t sub_252448528(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A5E0();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04BD0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25247A640();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  char v18 = (char *)&v25 - v17;
  sub_25242101C(a3, (uint64_t)v11);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v19) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_11;
      }
      uint64_t v19 = (int)v19;
LABEL_6:
      if ((unint64_t)(v19 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x25244883CLL);
      }
LABEL_7:
      uint64_t v23 = v27;
      sub_25247A5C0();
      if (!v23)
      {
        a2 = sub_25247A5D0();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v26);
      }
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
      return a2;
    case 2uLL:
      uint64_t v21 = *(void *)(a1 + 16);
      uint64_t v20 = *(void *)(a1 + 24);
      BOOL v22 = __OFSUB__(v20, v21);
      uint64_t v19 = v20 - v21;
      if (!v22) {
        goto LABEL_6;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v19 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_252448850()
{
  unint64_t result = qword_269C060C0;
  if (!qword_269C060C0)
  {
    type metadata accessor for LubyRackoffEncryptionKey();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C060C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LubyRackoffEncryption()
{
  return &type metadata for LubyRackoffEncryption;
}

uint64_t sub_2524488B8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_2523DFBE4(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269C04988);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2523DFBE4(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_2523DFBE4(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_25242E180(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2524489E4(uint64_t a1)
{
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04AB8);
  uint64_t v2 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04760);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_2523E0588(0, v9, 0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v12 = *(void *)(v2 + 72);
    uint64_t v10 = v17;
    do
    {
      sub_25244A0C8(v11, (uint64_t)v4);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2523E0588(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v17;
      }
      unint64_t v14 = *(void *)(v10 + 16);
      unint64_t v13 = *(void *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_2523E0588(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v17;
      }
      *(void *)(v10 + 16) = v14 + 1;
      sub_25244A130((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_252448C18(uint64_t a1)
{
  int64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_252448C5C()
{
  int64_t v1 = (void *)v0[2];
  if (v1)
  {
    objc_msgSend(v1, sel_invalidate);
    uint64_t v2 = (void *)v0[2];
  }
  else
  {
    uint64_t v2 = 0;
  }

  sub_2523D6B20(v0[3]);
  sub_2523D6B20(v0[5]);

  return MEMORY[0x270FA0228](v0, 56, 7);
}

uint64_t type metadata accessor for XPCClient()
{
  return self;
}

uint64_t sub_252448CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_25247A6A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static LoggedObject.logger.getter(a2, (uint64_t)&off_27029C030, (uint64_t)v6);
  uint64_t v7 = sub_25247A680();
  os_log_type_t v8 = sub_25247AD20();
  if (os_log_type_enabled(v7, v8))
  {
    int64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v9 = 0;
    _os_log_impl(&dword_2523CF000, v7, v8, "Connection invalidated", v9, 2u);
    MEMORY[0x2533B5DC0](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = *(void (**)(uint64_t))(result + 24);
    sub_252449F18((uint64_t)v11);
    uint64_t result = swift_release();
    if (v11)
    {
      v11(result);
      return sub_2523D6B20((uint64_t)v11);
    }
  }
  return result;
}

uint64_t sub_252448E94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_25247A6A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static LoggedObject.logger.getter(a2, (uint64_t)&off_27029C030, (uint64_t)v6);
  uint64_t v7 = sub_25247A680();
  os_log_type_t v8 = sub_25247AD40();
  if (os_log_type_enabled(v7, v8))
  {
    int64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v9 = 0;
    _os_log_impl(&dword_2523CF000, v7, v8, "Connection interrupted", v9, 2u);
    MEMORY[0x2533B5DC0](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = *(void (**)(uint64_t))(result + 40);
    sub_252449F18((uint64_t)v11);
    uint64_t result = swift_release();
    if (v11)
    {
      v11(result);
      return sub_2523D6B20((uint64_t)v11);
    }
  }
  return result;
}

void sub_252449044()
{
  if (!v0[2])
  {
    uint64_t v1 = *v0;
    id v2 = objc_allocWithZone(MEMORY[0x263F08D68]);
    uint64_t v3 = (void *)sub_25247A830();
    id v4 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v3, 0);

    uint64_t v5 = self;
    id v6 = objc_msgSend(v5, sel_interfaceWithProtocol_, &unk_2702A1950);
    objc_msgSend(v4, sel_setExportedInterface_, v6);

    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v7;
    *(void *)(v8 + 24) = v1;
    uint64_t v19 = sub_25244A198;
    uint64_t v20 = v8;
    uint64_t v15 = MEMORY[0x263EF8330];
    uint64_t v16 = 1107296256;
    uint64_t v17 = sub_252448C18;
    char v18 = &block_descriptor_112;
    int64_t v9 = _Block_copy(&v15);
    swift_release();
    objc_msgSend(v4, sel_setInvalidationHandler_, v9);
    _Block_release(v9);
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = v1;
    uint64_t v19 = sub_25244A19C;
    uint64_t v20 = v11;
    uint64_t v15 = MEMORY[0x263EF8330];
    uint64_t v16 = 1107296256;
    uint64_t v17 = sub_252448C18;
    char v18 = &block_descriptor_120;
    uint64_t v12 = _Block_copy(&v15);
    swift_release();
    objc_msgSend(v4, sel_setInterruptionHandler_, v12);
    _Block_release(v12);
    id v13 = objc_msgSend(v5, sel_interfaceWithProtocol_, &unk_2702A22A8);
    objc_msgSend(v4, sel_setRemoteObjectInterface_, v13);

    objc_msgSend(v4, sel_resume);
    unint64_t v14 = (void *)v0[2];
    v0[2] = (uint64_t)v4;
  }
}

void sub_252449328()
{
}

void sub_252449358(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t type metadata accessor for XPCPublicClient()
{
  return self;
}

void sub_2524493E8()
{
  if (!v0[2])
  {
    uint64_t v1 = *v0;
    id v2 = objc_allocWithZone(MEMORY[0x263F08D68]);
    uint64_t v3 = (void *)sub_25247A830();
    id v4 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v3, 0);

    uint64_t v5 = self;
    id v6 = objc_msgSend(v5, sel_interfaceWithProtocol_, &unk_2702A1950);
    objc_msgSend(v4, sel_setExportedInterface_, v6);

    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v7;
    *(void *)(v8 + 24) = v1;
    uint64_t v20 = sub_25244A198;
    uint64_t v21 = v8;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v17 = 1107296256;
    char v18 = sub_252448C18;
    uint64_t v19 = &block_descriptor_90;
    int64_t v9 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v4, sel_setInvalidationHandler_, v9);
    _Block_release(v9);
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = v1;
    uint64_t v20 = sub_25244A19C;
    uint64_t v21 = v11;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v17 = 1107296256;
    char v18 = sub_252448C18;
    uint64_t v19 = &block_descriptor_98;
    uint64_t v12 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v4, sel_setInterruptionHandler_, v12);
    _Block_release(v12);
    id v13 = objc_msgSend(v5, sel_interfaceWithProtocol_, &unk_2702A2308);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C04980);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25247FFC0;
    *(void *)(inited + 32) = sub_2523E1254(0, &qword_269C05BA0);
    *(void *)(inited + 40) = sub_2523E1254(0, &qword_269C05BA8);
    *(void *)(inited + 48) = sub_2523E1254(0, &qword_269C05BB0);
    *(void *)(inited + 56) = sub_2523E1254(0, &qword_269C05BB8);
    *(void *)(inited + 64) = sub_2523E1254(0, &qword_269C04BA0);
    sub_252449F38((uint64_t)v13, inited);
    swift_setDeallocating();
    objc_msgSend(v4, sel_setRemoteObjectInterface_, v13);
    objc_msgSend(v4, sel_resume);

    uint64_t v15 = (void *)v0[2];
    v0[2] = (uint64_t)v4;
  }
}

void sub_2524497A0()
{
}

uint64_t type metadata accessor for XPCHMVUtilClient()
{
  return self;
}

void sub_2524497F4()
{
  if (!v0[2])
  {
    uint64_t v1 = *v0;
    id v2 = objc_allocWithZone(MEMORY[0x263F08D68]);
    uint64_t v3 = (void *)sub_25247A830();
    id v4 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v3, 0);

    uint64_t v5 = self;
    id v6 = objc_msgSend(v5, sel_interfaceWithProtocol_, &unk_2702A1950);
    objc_msgSend(v4, sel_setExportedInterface_, v6);

    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v7;
    *(void *)(v8 + 24) = v1;
    uint64_t v19 = sub_252449F08;
    uint64_t v20 = v8;
    uint64_t v15 = MEMORY[0x263EF8330];
    uint64_t v16 = 1107296256;
    uint64_t v17 = sub_252448C18;
    char v18 = &block_descriptor_69;
    int64_t v9 = _Block_copy(&v15);
    swift_release();
    objc_msgSend(v4, sel_setInvalidationHandler_, v9);
    _Block_release(v9);
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = v1;
    uint64_t v19 = sub_252449F10;
    uint64_t v20 = v11;
    uint64_t v15 = MEMORY[0x263EF8330];
    uint64_t v16 = 1107296256;
    uint64_t v17 = sub_252448C18;
    char v18 = &block_descriptor_76;
    uint64_t v12 = _Block_copy(&v15);
    swift_release();
    objc_msgSend(v4, sel_setInterruptionHandler_, v12);
    _Block_release(v12);
    id v13 = objc_msgSend(v5, sel_interfaceWithProtocol_, &unk_2702A2368);
    objc_msgSend(v4, sel_setRemoteObjectInterface_, v13);

    objc_msgSend(v4, sel_resume);
    unint64_t v14 = (void *)v0[2];
    v0[2] = (uint64_t)v4;
  }
}

void sub_252449AD8()
{
}

void sub_252449B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = (void *)v4[2];
  if (v5)
  {
    uint64_t v9 = *v4;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    uint64_t v18 = a2;
    uint64_t v19 = v10;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v16 = sub_252449358;
    uint64_t v17 = a3;
    uint64_t v11 = _Block_copy(&aBlock);
    id v12 = v5;
    swift_release();
    id v13 = objc_msgSend(v12, sel_remoteObjectProxyWithErrorHandler_, v11);
    _Block_release(v11);

    sub_25247AED0();
    swift_unknownObjectRelease();
    sub_25242E180(&aBlock, &v14);
    __swift_instantiateConcreteTypeFromMangledName(a4);
    swift_dynamicCast();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_252449C64(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A6A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static LoggedObject.logger.getter(a2, (uint64_t)&off_27029C030, (uint64_t)v7);
  id v8 = a1;
  id v9 = a1;
  uint64_t v10 = sub_25247A680();
  os_log_type_t v11 = sub_25247AD40();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    v19[0] = v4;
    id v13 = (uint8_t *)v12;
    long long v14 = (void *)swift_slowAlloc();
    *(_DWORD *)id v13 = 138543362;
    id v15 = a1;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    v19[1] = v16;
    sub_25247AEB0();
    *long long v14 = v16;

    _os_log_impl(&dword_2523CF000, v10, v11, "Failed to construct proxy: %{public}@", v13, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v14, -1, -1);
    uint64_t v17 = v13;
    uint64_t v4 = v19[0];
    MEMORY[0x2533B5DC0](v17, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t type metadata accessor for XPCDiagnosticExtensionClient()
{
  return self;
}

uint64_t sub_252449EA8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t sub_252449ED0()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_252449F08()
{
  return sub_252448CE4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_252449F10()
{
  return sub_252448E94(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_252449F18(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_252449F28()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_252449F38(uint64_t a1, uint64_t a2)
{
  sub_2524488B8(a2);
  id v2 = objc_allocWithZone(MEMORY[0x263EFFA08]);
  uint64_t v3 = (void *)sub_25247A9E0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithArray_, v3);

  sub_25247AC70();
  __break(1u);
}

uint64_t sub_25244A064()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25244A074(void *a1)
{
  return sub_252449C64(a1, *(void *)(v1 + 16));
}

uint64_t sub_25244A090()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25244A0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25244A130(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t DatabaseConfiguration.configure<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(_OWORD *)(v5 + 48) = *(_OWORD *)v4;
  *(void *)(v5 + 64) = *(void *)(v4 + 16);
  return MEMORY[0x270FA2498](sub_25244A22C, 0, 0);
}

uint64_t sub_25244A22C()
{
  uint64_t v24 = v0;
  id v2 = *(void **)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  if (v1 < 0)
  {
    uint64_t v7 = *(void **)(v0 + 64);
    if (v1) {
      id v8 = &selRef_sharedCloudDatabase;
    }
    else {
      id v8 = &selRef_privateCloudDatabase;
    }
    id v9 = *v8;
    id v10 = v2;
    id v11 = v7;
    *(void *)(v0 + 88) = [v10 v9];
    if (v7)
    {
      uint64_t v12 = *(void **)(v0 + 64);
      id v13 = v12;
    }
    else
    {
      id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFD780]), sel_init);
      uint64_t v23 = v13;
      sub_25244A9F0(&v23, (uint64_t)v10);
      uint64_t v12 = 0;
    }
    *(void *)(v0 + 96) = v12;
    *(void *)(v0 + 104) = v13;
    uint64_t v14 = *(void *)(v0 + 40);
    uint64_t v15 = swift_task_alloc();
    *(void *)(v0 + 112) = v15;
    long long v16 = *(_OWORD *)(v0 + 24);
    *(void *)(v15 + 16) = v14;
    *(_OWORD *)(v15 + 24) = v16;
    id v17 = v12;
    id v18 = v13;
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v19;
    void *v19 = v0;
    v19[1] = sub_25244A5FC;
    uint64_t v20 = *(void *)(v0 + 40);
    uint64_t v21 = *(void *)(v0 + 16);
    return MEMORY[0x270EE35A0](v21, 0, v13, &unk_269C05BD8, v15, v20);
  }
  else
  {
    BOOL v22 = (uint64_t (*)(uint64_t, id))(*(void *)(v0 + 24) + **(int **)(v0 + 24));
    id v3 = v2;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_25244A480;
    uint64_t v5 = *(void *)(v0 + 16);
    return v22(v5, v3);
  }
}

uint64_t sub_25244A480()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_25244A7A0;
  }
  else {
    id v2 = sub_25244A594;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25244A594()
{
  sub_2523DFE9C(*(void **)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25244A5FC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_25244A808;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_25244A720;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_25244A720()
{
  uint64_t v1 = *(void **)(v0 + 96);
  uint64_t v2 = *(void **)(v0 + 88);
  uint64_t v3 = *(void **)(v0 + 48);

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_25244A7A0()
{
  sub_2523DFE9C(*(void **)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25244A808()
{
  uint64_t v1 = (void *)v0[13];
  uint64_t v3 = (void *)v0[11];
  uint64_t v2 = (void *)v0[12];
  uint64_t v4 = (void *)v0[6];

  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

void DatabaseConfiguration.scope.getter(char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  if (v3 < 0)
  {
    char v8 = v3 & 1;
    goto LABEL_7;
  }
  id v4 = *(id *)v1;
  uint64_t v5 = *(void **)(v1 + 16);
  id v6 = *(id *)v1;
  id v7 = objc_msgSend(v6, sel_scope);
  if (v7 == (id)2)
  {
    sub_2523DFE9C(v4, v3, v5);
    char v8 = 0;
LABEL_7:
    *a1 = v8;
    return;
  }
  if (v7 == (id)3)
  {
    sub_2523DFE9C(v4, v3, v5);
    char v8 = 1;
    goto LABEL_7;
  }
  sub_25247AF40();
  sub_25247A920();
  objc_msgSend(v6, (SEL)&off_265373818);
  type metadata accessor for Scope(0);
  sub_25247B080();
  sub_25247B0B0();
  __break(1u);
}

void sub_25244A9F0(void **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  v13[2] = 0;
  void v13[3] = 0xE000000000000000;
  v13[0] = 47;
  v13[1] = 0xE100000000000000;
  long long v12[2] = v13;
  id v4 = (void *)sub_25242DB30(0x7FFFFFFFFFFFFFFFLL, 1, sub_2523E13A0, (uint64_t)v12, 0xD000000000000029, 0x800000025247C5A0);
  if (v4[2])
  {
    uint64_t v5 = v4[4];
    uint64_t v6 = v4[5];
    uint64_t v7 = v4[6];
    uint64_t v8 = v4[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    MEMORY[0x2533B4B70](v5, v6, v7, v8);
    sub_25247A920();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v9 = (void *)sub_25247A830();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setName_, v9);

    id v10 = objc_msgSend(v3, sel_defaultConfiguration);
    if (v10)
    {
      id v11 = v10;
      objc_msgSend(v10, sel_setContainer_, a2);

      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_25244AB5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_2523D3928;
  return v8(a1, a2);
}

uint64_t sub_25244AC44(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 24);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2523D3928;
  id v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v8 = (void *)swift_task_alloc();
  v7[2] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_2523D3928;
  return v10(a1, a2);
}

uint64_t DatabaseConfiguration.description.getter()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 16);
  if (v1 < 0)
  {
    id v5 = v3;
    id v6 = v2;
    sub_25247AF40();
    sub_25247A920();
    id v7 = v6;
    sub_25244B048(v2);

    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_25247A920();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C05BE0);
    sub_25247A890();
    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_25247A920();
    sub_25247A890();
    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_25247A920();
    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_25247A920();
    sub_25244B3A0(v3);
    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_25247A920();
  }
  else
  {
    id v4 = v2;
    sub_25247AF40();
    swift_bridgeObjectRelease();
    sub_25244B230(v4);
    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_2523DFE9C(v2, v1, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C05BE8);
  sub_25247A890();
  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  return 60;
}

uint64_t sub_25244B048(void *a1)
{
  if (!a1) {
    return 7104878;
  }
  id v1 = a1;
  sub_25247AF40();
  swift_bridgeObjectRelease();
  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C05C00);
  sub_25247A890();
  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  id v2 = objc_msgSend(v1, sel_containerID);
  id v3 = objc_msgSend(v2, sel_containerIdentifier);

  sub_25247A840();
  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  id v4 = objc_msgSend(v1, sel_containerID);
  objc_msgSend(v4, sel_environment);

  id v5 = (id)CKContainerEnvironmentString();
  sub_25247A840();

  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();

  return 60;
}

uint64_t sub_25244B230(void *a1)
{
  sub_25247AF40();
  swift_bridgeObjectRelease();
  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C05BF0);
  sub_25247A890();
  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  objc_msgSend(a1, sel_scope);
  id v2 = (id)CKDatabaseScopeString();
  sub_25247A840();

  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  id v3 = objc_msgSend(a1, sel_container);
  sub_25244B048(v3);

  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  return 60;
}

uint64_t sub_25244B3A0(void *a1)
{
  if (!a1) {
    return 7104878;
  }
  id v1 = a1;
  sub_25247AF40();
  swift_bridgeObjectRelease();
  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C05BF8);
  sub_25247A890();
  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  id v2 = objc_msgSend(v1, sel_operationGroupID);
  sub_25247A840();

  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  id v3 = objc_msgSend(v1, sel_name);
  if (v3)
  {
    id v4 = v3;
    sub_25247A840();
  }
  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();

  return 60;
}

void destroy for DatabaseConfiguration(uint64_t a1)
{
}

void *_s13HomeKitEvents21DatabaseConfigurationOwCP_0(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  id v5 = *(void **)(a2 + 16);
  sub_2523DFD9C(*(void **)a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t assignWithCopy for DatabaseConfiguration(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  id v5 = *(void **)(a2 + 16);
  sub_2523DFD9C(*(void **)a2, v4, v5);
  id v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  sub_2523DFE9C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DatabaseConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  id v5 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  sub_2523DFE9C(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 8) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 2 * -a2;
      *(void *)(result + 16) = 0;
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_25244B6C8(uint64_t a1)
{
  return *(void *)(a1 + 8) >> 63;
}

uint64_t sub_25244B6D4(uint64_t result)
{
  *(void *)(result + 8) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_25244B6E4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = *(void *)(result + 8) & 1 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for DatabaseConfiguration()
{
  return &type metadata for DatabaseConfiguration;
}

uint64_t static HMVCommands.createEvent(eventData:uploadOnly:saveOnly:skipZoneCreation:)(uint64_t a1, uint64_t a2, char a3, char a4, char a5)
{
  *(unsigned char *)(v5 + 66) = a5;
  *(unsigned char *)(v5 + 65) = a4;
  *(unsigned char *)(v5 + 64) = a3;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  return MEMORY[0x270FA2498](sub_25244B734, 0, 0);
}

uint64_t sub_25244B734()
{
  char v1 = *(unsigned char *)(v0 + 66);
  char v2 = *(unsigned char *)(v0 + 65);
  char v3 = *(unsigned char *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 16);
  unint64_t v5 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04750);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 32) = v6;
  *(_OWORD *)(v6 + 16) = xmmword_25247E5A0;
  *(void *)(v6 + 32) = v4;
  *(void *)(v6 + 40) = v5;
  sub_252408194(v4, v5);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 40) = v7;
  *(void *)(v7 + 16) = v6;
  *(unsigned char *)(v7 + 24) = v3;
  *(unsigned char *)(v7 + 25) = v2;
  *(unsigned char *)(v7 + 26) = v1;
  id v10 = (uint64_t (*)(void))((char *)&dword_269C04588 + dword_269C04588);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_25244B86C;
  return v10();
}

uint64_t sub_25244B86C()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    char v2 = sub_25244B9EC;
  }
  else
  {
    swift_task_dealloc();
    char v2 = sub_25244B988;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25244B988()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25244B9EC()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static HMVCommands.createEvents(eventsData:uploadOnly:saveOnly:skipZoneCreation:)(uint64_t a1, char a2, char a3, char a4)
{
  *(unsigned char *)(v4 + 50) = a4;
  *(unsigned char *)(v4 + 49) = a3;
  *(unsigned char *)(v4 + 48) = a2;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x270FA2498](sub_25244BA84, 0, 0);
}

uint64_t sub_25244BA84()
{
  char v1 = *(unsigned char *)(v0 + 50);
  char v2 = *(unsigned char *)(v0 + 49);
  char v3 = *(unsigned char *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 24) = v5;
  *(void *)(v5 + 16) = v4;
  *(unsigned char *)(v5 + 24) = v3;
  *(unsigned char *)(v5 + 25) = v2;
  *(unsigned char *)(v5 + 26) = v1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C04588 + dword_269C04588);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_2523D3B14;
  return v8((uint64_t)v8, (uint64_t)sub_25244BF10, v5);
}

void sub_25244BB7C(void *a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6)
{
  uint64_t v11 = (void *)sub_25247A9E0();
  void v13[4] = sub_25244BEB0;
  v13[5] = a2;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  v13[2] = sub_25244C4D8;
  void v13[3] = &block_descriptor_14;
  uint64_t v12 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilCreateEventsWithEventsData_uploadOnly_saveOnly_skipZoneCreation_reply_, v11, a4 & 1, a5 & 1, a6 & 1, v12);
  _Block_release(v12);
}

void sub_25244BC88(void *a1, uint64_t a2)
{
  sub_25244BB7C(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), *(unsigned char *)(v2 + 25), *(unsigned char *)(v2 + 26));
}

void sub_25244BC9C(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    uint64_t v8 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_2523D380C;
    v9[6] = v7;
    id v10 = a1;
    swift_retain();
    id v11 = a1;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C05C18, (uint64_t)v9);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v12 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    id v13 = (void *)swift_allocObject();
    v13[2] = 0;
    void v13[3] = 0;
    void v13[4] = a2;
    v13[5] = sub_2523D3704;
    void v13[6] = 0;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C04570, (uint64_t)v13);
    swift_release();
  }
}

void sub_25244BEB0(void *a1)
{
  sub_25244BC9C(a1, v1);
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t sub_25244BED4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

ValueMetadata *type metadata accessor for HMVCommands()
{
  return &type metadata for HMVCommands;
}

unsigned char *storeEnumTagSinglePayload for HMVCommandError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25244BFC0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HMVCommandError()
{
  return &type metadata for HMVCommandError;
}

unint64_t sub_25244BFFC()
{
  unint64_t result = qword_269C05C20;
  if (!qword_269C05C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05C20);
  }
  return result;
}

uint64_t static HMVCommands.uploadEvents(batchCount:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 48) = a2;
  *(void *)(v2 + 16) = a1;
  return MEMORY[0x270FA2498](sub_25244C074, 0, 0);
}

void sub_25244C074()
{
  char v1 = *(unsigned char *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 16);
  if ((v1 & 1) != 0 || v2 >= 1)
  {
    uint64_t v3 = swift_task_alloc();
    *(void *)(v0 + 24) = v3;
    *(void *)(v3 + 16) = v2;
    *(unsigned char *)(v3 + 24) = v1 & 1;
    uint64_t v5 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C04588 + dword_269C04588);
    unsigned int v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 32) = v4;
    *unsigned int v4 = v0;
    v4[1] = sub_2523D3B14;
    v5((uint64_t)v5, (uint64_t)sub_25244C258, v3);
  }
  else
  {
    __break(1u);
  }
}

void sub_25244C168(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = (void *)sub_25247ACA0();
  }
  v8[4] = sub_25244C478;
  v8[5] = a2;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  v8[2] = sub_25244C4D8;
  uint64_t v8[3] = &block_descriptor_15;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilUploadEventsWithBatchCount_reply_, v6, v7);
  _Block_release(v7);
}

void sub_25244C258(void *a1, uint64_t a2)
{
  sub_25244C168(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

void sub_25244C264(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    uint64_t v8 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_2523D380C;
    v9[6] = v7;
    id v10 = a1;
    swift_retain();
    id v11 = a1;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C049A8, (uint64_t)v9);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v12 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    id v13 = (void *)swift_allocObject();
    v13[2] = 0;
    void v13[3] = 0;
    void v13[4] = a2;
    v13[5] = sub_2523D3704;
    void v13[6] = 0;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C04570, (uint64_t)v13);
    swift_release();
  }
}

void sub_25244C478(void *a1)
{
  sub_25244C264(a1, v1);
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t sub_25244C49C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_25244C4D8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_25244C544(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3;
  if (a3)
  {
    sub_25247A540();
    uint64_t v3 = (void *)sub_25247A9E0();
  }
  uint64_t v7[4] = sub_25244C850;
  v7[5] = a2;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  v7[2] = sub_25244C4D8;
  v7[3] = &block_descriptor_16;
  uint64_t v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_clearEventsWithHomes_reply_, v3, v6);
  _Block_release(v6);
}

void sub_25244C63C(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    uint64_t v8 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_2523D380C;
    v9[6] = v7;
    id v10 = a1;
    swift_retain();
    id v11 = a1;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C04578, (uint64_t)v9);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v12 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    id v13 = (void *)swift_allocObject();
    v13[2] = 0;
    void v13[3] = 0;
    void v13[4] = a2;
    v13[5] = sub_25244C870;
    void v13[6] = 0;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C04570, (uint64_t)v13);
    swift_release();
  }
}

void sub_25244C850(void *a1)
{
  sub_25244C63C(a1, v1);
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t sub_25244C870()
{
  return sub_25247AAD0();
}

uint64_t sub_25244C8A8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void *initializeBufferWithCopyOfBuffer for HomeKitEventsError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for HomeKitEventsError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for HomeKitEventsError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for HomeKitEventsError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeKitEventsError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HomeKitEventsError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_25244CA44(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_25244CA5C(void *result, int a2)
{
  if (a2 < 0)
  {
    *__n128 result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeKitEventsError()
{
  return &type metadata for HomeKitEventsError;
}

HomeKitEvents::GarageDoorEvent::State_optional __swiftcall GarageDoorEvent.State.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 7;
  if ((unint64_t)rawValue < 7) {
    char v2 = rawValue;
  }
  *unint64_t v1 = v2;
  return (HomeKitEvents::GarageDoorEvent::State_optional)rawValue;
}

void *static GarageDoorEvent.State.allCases.getter()
{
  return &unk_270299848;
}

uint64_t GarageDoorEvent.State.rawValue.getter()
{
  return *v0;
}

HomeKitEvents::GarageDoorEvent::State_optional sub_25244CAB8(Swift::Int *a1)
{
  return GarageDoorEvent.State.init(rawValue:)(*a1);
}

void sub_25244CAC0(void *a1@<X8>)
{
  *a1 = &unk_270299848;
}

uint64_t GarageDoorEvent.state.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for GarageDoorEvent();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for GarageDoorEvent()
{
  uint64_t result = qword_269C05CA0;
  if (!qword_269C05CA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t GarageDoorEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25247A4B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t GarageDoorEvent.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GarageDoorEvent.category.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for EventBase(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t GarageDoorEvent.roomIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GarageDoorEvent.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GarageDoorEvent.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GarageDoorEvent.accessoryName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GarageDoorEvent.userIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);

  return sub_2523E1C2C(v3, a1);
}

uint64_t GarageDoorEvent.hash(into:)()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A4B0();
  sub_25244E278(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_25244E278((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  type metadata accessor for GarageDoorEvent();
  return sub_25247B360();
}

BOOL static GarageDoorEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (!_s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(a1, a2)) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for GarageDoorEvent();
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20));
}

uint64_t GarageDoorEvent.hashValue.getter()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247B350();
  sub_25247A4B0();
  sub_25244E278(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_25244E278((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  type metadata accessor for GarageDoorEvent();
  sub_25247B360();
  return sub_25247B390();
}

uint64_t sub_25244D44C()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A4B0();
  sub_25244E278(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_25244E278((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_25247B360();
}

uint64_t sub_25244D734()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247B350();
  sub_25247A4B0();
  sub_25244E278(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_25244E278((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_25247B360();
  return sub_25247B390();
}

uint64_t GarageDoorEvent.init(date:homeIdentifier:roomIdentifier:roomName:accessoryIdentifier:accessoryName:state:userIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11)
{
  char v29 = *a10;
  uint64_t v17 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a9, a1, v17);
  uint64_t v18 = type metadata accessor for EventBase(0);
  uint64_t v19 = a9 + *(int *)(v18 + 20);
  uint64_t v20 = sub_25247A540();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32);
  v21(v19, a2, v20);
  *(unsigned char *)(a9 + *(int *)(v18 + 24)) = 1;
  BOOL v22 = (int *)type metadata accessor for AccessoryEventBase(0);
  v21(a9 + v22[5], a3, v20);
  uint64_t v23 = (void *)(a9 + v22[6]);
  *uint64_t v23 = a4;
  v23[1] = a5;
  v21(a9 + v22[7], a6, v20);
  uint64_t v24 = (void *)(a9 + v22[8]);
  *uint64_t v24 = a7;
  v24[1] = a8;
  sub_2523E28C4(a11, a9 + v22[9]);
  uint64_t result = type metadata accessor for GarageDoorEvent();
  *(unsigned char *)(a9 + *(int *)(result + 20)) = v29;
  return result;
}

uint64_t GarageDoorEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_2523D918C((uint64_t)a1, (uint64_t)v11);
  sub_252466A64((uint64_t)v11, (uint64_t)v7);
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_2523E1624(a1, (uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  char v9 = v11[0];
  sub_2523E29D8((uint64_t)v7, a2);
  uint64_t result = type metadata accessor for GarageDoorEvent();
  *(unsigned char *)(a2 + *(int *)(result + 20)) = v9;
  return result;
}

uint64_t GarageDoorEvent.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04810);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = sub_252467000(a1);
  if (!v2)
  {
    v9[15] = *(unsigned char *)(v1 + *(int *)(type metadata accessor for GarageDoorEvent() + 20));
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_2523D3370();
    sub_25247B3B0();
    v9[14] = 1;
    sub_25244DF1C();
    sub_25247B1D0();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_25244DE38@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GarageDoorEvent.init(from:)(a1, a2);
}

uint64_t sub_25244DE50(void *a1)
{
  return GarageDoorEvent.encode(to:)(a1);
}

uint64_t sub_25244DE6C()
{
  return sub_25247A9D0();
}

uint64_t sub_25244DECC()
{
  return sub_25247A9C0();
}

unint64_t sub_25244DF1C()
{
  unint64_t result = qword_269C05C30;
  if (!qword_269C05C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05C30);
  }
  return result;
}

unint64_t sub_25244DF74()
{
  unint64_t result = qword_269C05C38;
  if (!qword_269C05C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05C38);
  }
  return result;
}

unint64_t sub_25244DFCC()
{
  unint64_t result = qword_269C05C40;
  if (!qword_269C05C40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C05C48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05C40);
  }
  return result;
}

unint64_t sub_25244E02C()
{
  unint64_t result = qword_269C05C50;
  if (!qword_269C05C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05C50);
  }
  return result;
}

uint64_t sub_25244E080(void *a1)
{
  a1[1] = sub_25244E278(&qword_269C05A38, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
  a1[2] = sub_25244E278(&qword_269C05C60, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
  uint64_t result = sub_25244E278(&qword_269C05C68, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_25244E12C()
{
  return sub_25244E278(&qword_269C05C70, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
}

uint64_t sub_25244E174(uint64_t a1)
{
  uint64_t result = sub_25244E278(&qword_269C05C58, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25244E1CC(void *a1)
{
  a1[1] = sub_25244E278(&qword_269C05C78, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
  a1[2] = sub_25244E278(&qword_269C05C80, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
  uint64_t result = sub_25244E278(&qword_269C05C88, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_25244E278(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25244E2C0()
{
  return sub_25244E278(&qword_269C05C78, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
}

unint64_t sub_25244E308(void *a1)
{
  a1[1] = sub_2523E4298();
  a1[2] = sub_25244DF1C();
  unint64_t result = sub_25244E340();
  a1[3] = result;
  return result;
}

unint64_t sub_25244E340()
{
  unint64_t result = qword_269C05C90;
  if (!qword_269C05C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05C90);
  }
  return result;
}

unint64_t sub_25244E394(uint64_t a1)
{
  unint64_t result = sub_25244E3BC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25244E3BC()
{
  unint64_t result = qword_269C05C98;
  if (!qword_269C05C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05C98);
  }
  return result;
}

unint64_t sub_25244E410(uint64_t a1)
{
  unint64_t result = sub_25244E02C();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for GarageDoorEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25244E44C);
}

uint64_t sub_25244E44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AccessoryEventBaseLegacy(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 7) {
      return v10 - 6;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for GarageDoorEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25244E51C);
}

uint64_t sub_25244E51C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AccessoryEventBaseLegacy(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 6;
  }
  return result;
}

uint64_t sub_25244E5D8()
{
  uint64_t result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for GarageDoorEvent.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GarageDoorEvent.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25244E7C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GarageDoorEvent.State()
{
  return &type metadata for GarageDoorEvent.State;
}

unint64_t sub_25244E800()
{
  unint64_t result = qword_269C05CB0;
  if (!qword_269C05CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05CB0);
  }
  return result;
}

uint64_t TypedAsyncSequence.makeAsyncIteratorClosure.getter()
{
  uint64_t v0 = sub_25244F1E4();
  swift_retain();
  return v0;
}

uint64_t TypedAsyncSequence.makeAsyncIterator()()
{
  unint64_t v1 = *v0;
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t TypedAsyncSequence.AsyncIterator.nextClosure.getter()
{
  uint64_t v0 = sub_25244F1E4();
  sub_252449F18(v0);
  return v0;
}

uint64_t TypedAsyncSequence.AsyncIterator.nextClosure.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2523D6B20(*v2);
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TypedAsyncSequence.AsyncIterator.nextClosure.modify())()
{
  return nullsub_1;
}

uint64_t TypedAsyncSequence.AsyncIterator.next()(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = v2;
  v3[4] = *(void *)(a2 + 16);
  uint64_t v4 = sub_25247AE90();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25244EA38, 0, 0);
}

uint64_t sub_25244EA38()
{
  if ((sub_25247ABA0() & 1) == 0)
  {
    unint64_t v1 = (int **)v0[3];
    uint64_t v2 = *v1;
    v0[8] = *v1;
    v0[9] = v1[1];
    if (v2)
    {
      sub_252449F18((uint64_t)v2);
      unsigned int v10 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
      int v3 = (void *)swift_task_alloc();
      v0[10] = v3;
      *int v3 = v0;
      v3[1] = sub_25244EC18;
      uint64_t v4 = v0[7];
      return v10(v4);
    }
    (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v0[4] - 8) + 56))(v0[7], 1, 1);
    (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  }
  BOOL v7 = (uint64_t *)v0[3];
  uint64_t v6 = v0[4];
  uint64_t v8 = v0[2];
  sub_2523D6B20(*v7);
  *BOOL v7 = 0;
  v7[1] = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v8, 1, 1, v6);
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_25244EC18()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25244EEB0;
  }
  else {
    uint64_t v2 = sub_25244ED2C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25244ED2C()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[4];
  sub_2523D6B20(v0[8]);
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
    uint64_t v5 = (uint64_t *)v0[3];
    uint64_t v4 = v0[4];
    uint64_t v6 = v0[2];
    sub_2523D6B20(*v5);
    *uint64_t v5 = 0;
    v5[1] = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v6, 1, 1, v4);
  }
  else
  {
    uint64_t v7 = v0[4];
    uint64_t v8 = v0[2];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v8, v0[7], v7);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v7);
  }
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_25244EEB0()
{
  sub_2523D6B20(*(void *)(v0 + 64));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25244EF20(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2523D3928;
  return TypedAsyncSequence.AsyncIterator.next()(a1, a2);
}

uint64_t sub_25244EFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_25244F0A8;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v6 + 16);
}

uint64_t sub_25244F0A8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v2 + 24) = *(void *)(v2 + 16);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t sub_25244F1B8()
{
  TypedAsyncSequence.makeAsyncIterator()();

  return swift_release();
}

uint64_t sub_25244F1E4()
{
  return *(void *)v0;
}

uint64_t sub_25244F1EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_25244F208@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *a1;
  if (*a1) {
    uint64_t v3 = a1[1];
  }
  else {
    uint64_t v3 = 0;
  }
  *a2 = v2;
  a2[1] = v3;
  return sub_252449F18(v2);
}

uint64_t sub_25244F220(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  if (*a1) {
    uint64_t v4 = a1[1];
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *a2;
  sub_252449F18(*a1);
  uint64_t result = sub_2523D6B20(v5);
  *a2 = v3;
  a2[1] = v4;
  return result;
}

uint64_t sub_25244F278()
{
  return 8;
}

void *sub_25244F284(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void *sub_25244F290(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t sub_25244F2C0()
{
  return swift_release();
}

void *sub_25244F2C8(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_25244F304(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_25244F338(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25244F380(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for TypedAsyncSequence()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_25244F3D8(void *result)
{
  if (*result) {
    return (void *)swift_release();
  }
  return result;
}

void *sub_25244F3EC(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v3 = a2[1];
    *a1 = *a2;
    a1[1] = v3;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

void *sub_25244F430(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      uint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_25244F4A8(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      uint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release();
  return a1;
}

uint64_t sub_25244F514(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_25244F570(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for TypedAsyncSequence.AsyncIterator()
{
  return __swift_instantiateGenericMetadata();
}

HomeKitEvents::DoorEvent::State_optional __swiftcall DoorEvent.State.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 5;
  if ((unint64_t)rawValue < 5) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (HomeKitEvents::DoorEvent::State_optional)rawValue;
}

void *static DoorEvent.State.allCases.getter()
{
  return &unk_270299870;
}

uint64_t DoorEvent.State.rawValue.getter()
{
  return *v0;
}

HomeKitEvents::DoorEvent::State_optional sub_25244F604(Swift::Int *a1)
{
  return DoorEvent.State.init(rawValue:)(*a1);
}

void sub_25244F60C(void *a1@<X8>)
{
  *a1 = &unk_270299898;
}

uint64_t DoorEvent.state.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for DoorEvent();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for DoorEvent()
{
  uint64_t result = qword_269C05E40;
  if (!qword_269C05E40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DoorEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25247A4B0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t DoorEvent.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t DoorEvent.category.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for EventBase(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t DoorEvent.roomIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t DoorEvent.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DoorEvent.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t DoorEvent.accessoryName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DoorEvent.userIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);

  return sub_2523E1C2C(v3, a1);
}

uint64_t DoorEvent.hash(into:)()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A4B0();
  sub_2524505A4(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_2524505A4((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  type metadata accessor for DoorEvent();
  return sub_25247B360();
}

BOOL static DoorEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (!_s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(a1, a2)) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for DoorEvent();
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20));
}

uint64_t DoorEvent.hashValue.getter()
{
  return sub_25247B390();
}

uint64_t sub_25244FCE0()
{
  return sub_25247B390();
}

uint64_t sub_25244FD24()
{
  return sub_25247B390();
}

uint64_t DoorEvent.init(date:homeIdentifier:roomIdentifier:roomName:accessoryIdentifier:accessoryName:state:userIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11)
{
  char v29 = *a10;
  uint64_t v17 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a9, a1, v17);
  uint64_t v18 = type metadata accessor for EventBase(0);
  uint64_t v19 = a9 + *(int *)(v18 + 20);
  uint64_t v20 = sub_25247A540();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32);
  v21(v19, a2, v20);
  *(unsigned char *)(a9 + *(int *)(v18 + 24)) = 1;
  BOOL v22 = (int *)type metadata accessor for AccessoryEventBase(0);
  v21(a9 + v22[5], a3, v20);
  uint64_t v23 = (void *)(a9 + v22[6]);
  *uint64_t v23 = a4;
  v23[1] = a5;
  v21(a9 + v22[7], a6, v20);
  uint64_t v24 = (void *)(a9 + v22[8]);
  *uint64_t v24 = a7;
  v24[1] = a8;
  sub_2523E28C4(a11, a9 + v22[9]);
  uint64_t result = type metadata accessor for DoorEvent();
  *(unsigned char *)(a9 + *(int *)(result + 20)) = v29;
  return result;
}

uint64_t DoorEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_2523D918C((uint64_t)a1, (uint64_t)v11);
  sub_252466A64((uint64_t)v11, (uint64_t)v7);
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_2523E1658(a1, (uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  char v9 = v11[0];
  sub_2523E29D8((uint64_t)v7, a2);
  uint64_t result = type metadata accessor for DoorEvent();
  *(unsigned char *)(a2 + *(int *)(result + 20)) = v9;
  return result;
}

uint64_t DoorEvent.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04810);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = sub_252467000(a1);
  if (!v2)
  {
    v9[15] = *(unsigned char *)(v1 + *(int *)(type metadata accessor for DoorEvent() + 20));
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_2523D3370();
    sub_25247B3B0();
    v9[14] = 1;
    sub_252450248();
    sub_25247B1D0();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_252450164@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DoorEvent.init(from:)(a1, a2);
}

uint64_t sub_25245017C(void *a1)
{
  return DoorEvent.encode(to:)(a1);
}

uint64_t sub_252450198()
{
  return sub_25247A9D0();
}

uint64_t sub_2524501F8()
{
  return sub_25247A9C0();
}

unint64_t sub_252450248()
{
  unint64_t result = qword_269C05DD0;
  if (!qword_269C05DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05DD0);
  }
  return result;
}

unint64_t sub_2524502A0()
{
  unint64_t result = qword_269C05DD8;
  if (!qword_269C05DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05DD8);
  }
  return result;
}

unint64_t sub_2524502F8()
{
  unint64_t result = qword_269C05DE0;
  if (!qword_269C05DE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C05DE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05DE0);
  }
  return result;
}

unint64_t sub_252450358()
{
  unint64_t result = qword_269C05DF0;
  if (!qword_269C05DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05DF0);
  }
  return result;
}

uint64_t sub_2524503AC(void *a1)
{
  a1[1] = sub_2524505A4(&qword_269C05A40, (void (*)(uint64_t))type metadata accessor for DoorEvent);
  a1[2] = sub_2524505A4(&qword_269C05E00, (void (*)(uint64_t))type metadata accessor for DoorEvent);
  uint64_t result = sub_2524505A4(&qword_269C05E08, (void (*)(uint64_t))type metadata accessor for DoorEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_252450458()
{
  return sub_2524505A4(&qword_269C05E10, (void (*)(uint64_t))type metadata accessor for DoorEvent);
}

uint64_t sub_2524504A0(uint64_t a1)
{
  uint64_t result = sub_2524505A4(&qword_269C05DF8, (void (*)(uint64_t))type metadata accessor for DoorEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2524504F8(void *a1)
{
  a1[1] = sub_2524505A4(&qword_269C05E18, (void (*)(uint64_t))type metadata accessor for DoorEvent);
  a1[2] = sub_2524505A4(&qword_269C05E20, (void (*)(uint64_t))type metadata accessor for DoorEvent);
  uint64_t result = sub_2524505A4(&qword_269C05E28, (void (*)(uint64_t))type metadata accessor for DoorEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_2524505A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2524505EC()
{
  return sub_2524505A4(&qword_269C05E18, (void (*)(uint64_t))type metadata accessor for DoorEvent);
}

unint64_t sub_252450634(void *a1)
{
  a1[1] = sub_2523E4244();
  a1[2] = sub_252450248();
  unint64_t result = sub_25245066C();
  a1[3] = result;
  return result;
}

unint64_t sub_25245066C()
{
  unint64_t result = qword_269C05E30;
  if (!qword_269C05E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05E30);
  }
  return result;
}

unint64_t sub_2524506C0(uint64_t a1)
{
  unint64_t result = sub_2524506E8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2524506E8()
{
  unint64_t result = qword_269C05E38;
  if (!qword_269C05E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05E38);
  }
  return result;
}

unint64_t sub_25245073C(uint64_t a1)
{
  unint64_t result = sub_252450358();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DoorEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252450778);
}

uint64_t sub_252450778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AccessoryEventBaseLegacy(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 5) {
      return v10 - 4;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for DoorEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252450848);
}

uint64_t sub_252450848(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AccessoryEventBaseLegacy(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 4;
  }
  return result;
}

uint64_t sub_252450904()
{
  uint64_t result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DoorEvent.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252450A64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DoorEvent.State()
{
  return &type metadata for DoorEvent.State;
}

unint64_t sub_252450A9C()
{
  unint64_t result = qword_269C05E50;
  if (!qword_269C05E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05E50);
  }
  return result;
}

uint64_t sub_252450AF4()
{
  return sub_252450B44((uint64_t (*)(void))type metadata accessor for LockEvent, &qword_269C05F10);
}

uint64_t sub_252450B1C()
{
  return sub_252450B44((uint64_t (*)(void))type metadata accessor for DoorEvent, &qword_269C05EE8);
}

uint64_t sub_252450B44(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_25247AF40();
  uint64_t v8 = a1(0);
  uint64_t v12 = v8;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_25247A890();
  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  LOBYTE(v12) = *(unsigned char *)(v2 + *(int *)(v8 + 20));
  sub_25247B080();
  sub_25247A920();
  LOBYTE(v12) = *(unsigned char *)(v2 + *(int *)(type metadata accessor for EventBase(0) + 24));
  sub_25247A890();
  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  sub_25247A4B0();
  sub_252452CB0(&qword_269C04B00, MEMORY[0x263F07490]);
  sub_25247B200();
  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  sub_25247A540();
  sub_252452CB0(&qword_269C046B0, MEMORY[0x263F07508]);
  sub_25247B200();
  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  uint64_t v9 = type metadata accessor for AccessoryEventBase(0);
  sub_25247B200();
  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  sub_25247B200();
  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  sub_2523E1C2C(v2 + *(int *)(v9 + 36), (uint64_t)v7);
  sub_25247A890();
  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  return v13;
}

uint64_t sub_252450EC4()
{
  return sub_252450B44((uint64_t (*)(void))type metadata accessor for SecuritySystemEvent, &qword_269C05F08);
}

uint64_t sub_252450EEC()
{
  return sub_252450B44((uint64_t (*)(void))type metadata accessor for SmokeDetectorEvent, &qword_269C05F00);
}

uint64_t sub_252450F14()
{
  return sub_252450B44((uint64_t (*)(void))type metadata accessor for GarageDoorEvent, &qword_269C05EF0);
}

uint64_t sub_252450F3C()
{
  return sub_252450B44((uint64_t (*)(void))type metadata accessor for WindowEvent, &qword_269C05EF8);
}

HomeKitEvents::ContactSensorEvent::State_optional __swiftcall ContactSensorEvent.State.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *unint64_t v1 = v2;
  return (HomeKitEvents::ContactSensorEvent::State_optional)rawValue;
}

void *static ContactSensorEvent.State.allCases.getter()
{
  return &unk_2702998C0;
}

uint64_t ContactSensorEvent.State.rawValue.getter()
{
  return *v0;
}

HomeKitEvents::ContactSensorEvent::State_optional sub_252450F8C(Swift::Int *a1)
{
  return ContactSensorEvent.State.init(rawValue:)(*a1);
}

void sub_252450F94(void *a1@<X8>)
{
  *a1 = &unk_2702998E8;
}

uint64_t ContactSensorEvent.state.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ContactSensorEvent();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for ContactSensorEvent()
{
  uint64_t result = qword_269C05EC8;
  if (!qword_269C05EC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ContactSensorEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25247A4B0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ContactSensorEvent.homeIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContactSensorEvent.category.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for EventBase(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ContactSensorEvent.roomIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 20);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContactSensorEvent.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactSensorEvent.accessoryIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 28);
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ContactSensorEvent.accessoryName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactSensorEvent.userIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccessoryEventBase(0) + 36);

  return sub_2523E1C2C(v3, a1);
}

uint64_t ContactSensorEvent.hash(into:)()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A4B0();
  sub_252452CB0(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_252452CB0((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  type metadata accessor for ContactSensorEvent();
  return sub_25247B360();
}

BOOL static ContactSensorEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (!_s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(a1, a2)) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for ContactSensorEvent();
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20));
}

uint64_t ContactSensorEvent.hashValue.getter()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247B350();
  sub_25247A4B0();
  sub_252452CB0(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_252452CB0((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  type metadata accessor for ContactSensorEvent();
  sub_25247B360();
  return sub_25247B390();
}

uint64_t sub_252451920()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A4B0();
  sub_252452CB0(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_252452CB0((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_25247B360();
}

uint64_t sub_252451C08()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247B350();
  sub_25247A4B0();
  sub_252452CB0(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_252452CB0((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_25247B360();
  return sub_25247B390();
}

uint64_t ContactSensorEvent.init(date:homeIdentifier:roomIdentifier:roomName:accessoryIdentifier:accessoryName:state:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10)
{
  char v27 = *a10;
  long long v16 = (int *)type metadata accessor for AccessoryEventBase(0);
  uint64_t v17 = a9 + v16[9];
  uint64_t v18 = sub_25247A540();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  uint64_t v20 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(a9, a1, v20);
  uint64_t v21 = type metadata accessor for EventBase(0);
  BOOL v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32);
  v22(a9 + *(int *)(v21 + 20), a2, v18);
  *(unsigned char *)(a9 + *(int *)(v21 + 24)) = 1;
  v22(a9 + v16[5], a3, v18);
  uint64_t v23 = (void *)(a9 + v16[6]);
  *uint64_t v23 = a4;
  v23[1] = a5;
  v22(a9 + v16[7], a6, v18);
  uint64_t v24 = (void *)(a9 + v16[8]);
  *uint64_t v24 = a7;
  v24[1] = a8;
  uint64_t result = type metadata accessor for ContactSensorEvent();
  *(unsigned char *)(a9 + *(int *)(result + 20)) = v27;
  return result;
}

uint64_t ContactSensorEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AccessoryEventBaseLegacy(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_2523D918C((uint64_t)a1, (uint64_t)v11);
  sub_252466A64((uint64_t)v11, (uint64_t)v7);
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_2523E168C(a1, (uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  char v9 = v11[0];
  sub_2523E29D8((uint64_t)v7, a2);
  uint64_t result = type metadata accessor for ContactSensorEvent();
  *(unsigned char *)(a2 + *(int *)(result + 20)) = v9;
  return result;
}

uint64_t ContactSensorEvent.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04810);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = sub_252467000(a1);
  if (!v2)
  {
    v9[15] = *(unsigned char *)(v1 + *(int *)(type metadata accessor for ContactSensorEvent() + 20));
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_2523D3370();
    sub_25247B3B0();
    v9[14] = 1;
    sub_252452450();
    sub_25247B1D0();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_252452334@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ContactSensorEvent.init(from:)(a1, a2);
}

uint64_t sub_25245234C(void *a1)
{
  return ContactSensorEvent.encode(to:)(a1);
}

uint64_t sub_252452364()
{
  return sub_252450B44((uint64_t (*)(void))type metadata accessor for ContactSensorEvent, &qword_269C05EE0);
}

uint64_t sub_2524523A0()
{
  return sub_25247A9D0();
}

uint64_t sub_252452400()
{
  return sub_25247A9C0();
}

unint64_t sub_252452450()
{
  unint64_t result = qword_269C05E58;
  if (!qword_269C05E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05E58);
  }
  return result;
}

unint64_t sub_2524524A8()
{
  unint64_t result = qword_269C05E60;
  if (!qword_269C05E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05E60);
  }
  return result;
}

unint64_t sub_252452500()
{
  unint64_t result = qword_269C05E68;
  if (!qword_269C05E68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269C05E70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05E68);
  }
  return result;
}

unint64_t sub_252452560()
{
  unint64_t result = qword_269C05E78;
  if (!qword_269C05E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05E78);
  }
  return result;
}

uint64_t sub_2524525B4(void *a1)
{
  a1[1] = sub_252452CB0(qword_269C05A48, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
  a1[2] = sub_252452CB0(&qword_269C05E88, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
  uint64_t result = sub_252452CB0(&qword_269C05E90, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_252452660()
{
  return sub_252452CB0(&qword_269C05E98, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
}

uint64_t sub_2524526A8(uint64_t a1)
{
  uint64_t result = sub_252452CB0(&qword_269C05E80, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_252452700(void *a1)
{
  a1[1] = sub_252452CB0(&qword_269C05EA0, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
  a1[2] = sub_252452CB0(&qword_269C05EA8, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
  uint64_t result = sub_252452CB0(&qword_269C05EB0, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
  a1[3] = result;
  return result;
}

uint64_t sub_2524527AC()
{
  return sub_252452CB0(&qword_269C05EA0, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
}

unint64_t sub_2524527F4(void *a1)
{
  a1[1] = sub_2523E41F0();
  a1[2] = sub_252452450();
  unint64_t result = sub_25245282C();
  a1[3] = result;
  return result;
}

unint64_t sub_25245282C()
{
  unint64_t result = qword_269C05EB8;
  if (!qword_269C05EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05EB8);
  }
  return result;
}

unint64_t sub_252452880(uint64_t a1)
{
  unint64_t result = sub_2524528A8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2524528A8()
{
  unint64_t result = qword_269C05EC0;
  if (!qword_269C05EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05EC0);
  }
  return result;
}

unint64_t sub_2524528FC(uint64_t a1)
{
  unint64_t result = sub_252452560();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ContactSensorEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252452938);
}

uint64_t sub_252452938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AccessoryEventBaseLegacy(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 3) {
      return v10 - 2;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for ContactSensorEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252452A08);
}

uint64_t sub_252452A08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AccessoryEventBaseLegacy(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  }
  return result;
}

uint64_t sub_252452AC4()
{
  uint64_t result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContactSensorEvent.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252452C24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactSensorEvent.State()
{
  return &type metadata for ContactSensorEvent.State;
}

unint64_t sub_252452C5C()
{
  unint64_t result = qword_269C05ED8;
  if (!qword_269C05ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05ED8);
  }
  return result;
}

uint64_t sub_252452CB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_252452CFC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v80 = *MEMORY[0x263EF8340];
  uint64_t v8 = sub_25247A700();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25247A540();
  unint64_t v64 = *(void *)(v12 - 8);
  uint64_t v65 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v63 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_25247A730();
  uint64_t v14 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v68 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v17 = (int)a1;
      uint64_t v18 = a1 >> 32;
      goto LABEL_5;
    case 2uLL:
      uint64_t v17 = *(void *)(a1 + 16);
      uint64_t v18 = *(void *)(a1 + 24);
      goto LABEL_5;
    case 3uLL:
      goto LABEL_42;
    default:
      uint64_t v17 = 0;
      uint64_t v18 = BYTE6(a2);
LABEL_5:
      if (v17 == v18)
      {
LABEL_42:
        __break(1u);
        JUMPOUT(0x25245368CLL);
      }
      unint64_t v66 = a3;
      uint64_t v19 = *(void *)(a3 + 16);
      if (!v19) {
        goto LABEL_39;
      }
      sub_25247A720();
      uint64_t v61 = a1;
      unint64_t v62 = a2;
      uint64_t v59 = v14;
      uint64_t v60 = a4;
      uint64_t v58 = v8;
      uint64_t v57 = v9;
      uint64_t v56 = v11;
      if (v16)
      {
        if (v16 == 1)
        {
          if (a1 >> 32 < (int)a1) {
            goto LABEL_40;
          }
          sub_252408194(a1, a2);
          sub_2524536AC((int)a1, a1 >> 32);
          uint64_t v55 = 0;
        }
        else
        {
          uint64_t v20 = *(void *)(a1 + 16);
          uint64_t v21 = *(void *)(a1 + 24);
          sub_252408194(a1, a2);
          swift_retain();
          swift_retain();
          sub_2524536AC(v20, v21);
          uint64_t v55 = 0;
          swift_release();
          swift_release();
        }
      }
      else
      {
        uint64_t v55 = 0;
        uint64_t v72 = a1;
        __int16 v73 = a2;
        char v74 = BYTE2(a2);
        char v75 = BYTE3(a2);
        char v76 = BYTE4(a2);
        char v77 = BYTE5(a2);
        sub_25245378C(&qword_269C05F18, MEMORY[0x263F047F8]);
        sub_25247A6F0();
      }
      sub_2524081EC(a1, a2);
      BOOL v22 = (unint64_t *)(v66 + 40);
      while (2)
      {
        uint64_t v23 = *(v22 - 1);
        unint64_t v24 = *v22;
        unint64_t v25 = *v22 >> 62;
        v22 += 2;
        switch(v25)
        {
          case 1uLL:
            if (v23 >> 32 == (int)v23) {
              goto LABEL_33;
            }
            if (v23 >> 32 < (int)v23) {
              goto LABEL_35;
            }
            swift_retain();
            if (sub_25247A050() && __OFSUB__((int)v23, sub_25247A070())) {
              goto LABEL_38;
            }
            sub_25247A060();
            sub_25245378C(&qword_269C05F18, MEMORY[0x263F047F8]);
            sub_25247A6F0();
            goto LABEL_27;
          case 2uLL:
            uint64_t v26 = *(void *)(v23 + 16);
            uint64_t v27 = *(void *)(v23 + 24);
            if (v26 == v27) {
              goto LABEL_34;
            }
            sub_252408194(v23, v24);
            swift_retain();
            swift_retain();
            if (sub_25247A050() && __OFSUB__(v26, sub_25247A070())) {
              goto LABEL_37;
            }
            if (__OFSUB__(v27, v26)) {
              goto LABEL_36;
            }
            sub_25247A060();
            sub_25245378C(&qword_269C05F18, MEMORY[0x263F047F8]);
            sub_25247A6F0();
            swift_release();
            swift_release();
            goto LABEL_27;
          case 3uLL:
            goto LABEL_41;
          default:
            if (!BYTE6(v24))
            {
              __break(1u);
LABEL_33:
              __break(1u);
LABEL_34:
              __break(1u);
LABEL_35:
              __break(1u);
LABEL_36:
              __break(1u);
LABEL_37:
              __break(1u);
LABEL_38:
              __break(1u);
LABEL_39:
              __break(1u);
LABEL_40:
              __break(1u);
LABEL_41:
              __break(1u);
            }
            uint64_t v72 = v23;
            __int16 v73 = v24;
            char v74 = BYTE2(v24);
            char v75 = BYTE3(v24);
            char v76 = BYTE4(v24);
            char v77 = BYTE5(v24);
            sub_25245378C(&qword_269C05F18, MEMORY[0x263F047F8]);
            sub_25247A6F0();
            sub_2524081EC(v23, v24);
LABEL_27:
            sub_2524081EC(v23, v24);
            if (--v19) {
              continue;
            }
            swift_bridgeObjectRelease();
            uint64_t v28 = v63;
            sub_25247A530();
            unint64_t v29 = sub_25247A520();
            char v30 = v29;
            char v32 = v31;
            unint64_t v33 = v29 >> 8;
            unint64_t v34 = v29 >> 16;
            unint64_t v35 = v29 >> 24;
            unint64_t v36 = HIDWORD(v29);
            unint64_t v37 = v29 >> 40;
            unint64_t v38 = HIWORD(v29);
            unint64_t v39 = HIBYTE(v29);
            unint64_t v50 = v31 >> 8;
            unint64_t v51 = v31 >> 16;
            unint64_t v52 = v31 >> 24;
            unint64_t v53 = HIDWORD(v31);
            unint64_t v54 = v31 >> 40;
            unint64_t v66 = HIWORD(v31);
            uint64_t v40 = *(void (**)(char *, uint64_t))(v64 + 8);
            unint64_t v64 = HIBYTE(v31);
            v40(v28, v65);
            LOBYTE(v69) = v30;
            BYTE1(v69) = v33;
            BYTE2(v69) = v34;
            BYTE3(v69) = v35;
            BYTE4(v69) = v36;
            BYTE5(v69) = v37;
            BYTE6(v69) = v38;
            BYTE7(v69) = v39;
            BYTE8(v69) = v32;
            BYTE9(v69) = v50;
            BYTE10(v69) = v51;
            BYTE11(v69) = v52;
            BYTE12(v69) = v53;
            BYTE13(v69) = v54;
            BYTE14(v69) = v66;
            HIBYTE(v69) = v64;
            uint64_t v41 = v56;
            sub_25247A710();
            uint64_t v42 = v58;
            uint64_t v78 = v58;
            uint64_t v79 = sub_25245378C((unint64_t *)&unk_269C05F20, MEMORY[0x263F045C0]);
            uint64_t v43 = __swift_allocate_boxed_opaque_existential_1(&v72);
            uint64_t v44 = v57;
            (*(void (**)(uint64_t *, char *, uint64_t))(v57 + 16))(v43, v41, v42);
            __swift_project_boxed_opaque_existential_1(&v72, v78);
            sub_25247A090();
            (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v42);
            uint64_t v45 = v70;
            unint64_t v46 = v71;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
            sub_252408194(v45, v46);
            uint64_t v47 = sub_2524537D4(v45, v46);
            sub_2524081EC(v45, v46);
            if (&v69 != (long long *)(v47 + 4) || &v69 >= (long long *)v47 + 3) {
              long long v69 = *((_OWORD *)v47 + 2);
            }
            swift_release();
            BYTE6(v69) = BYTE6(v69) & 0xF | 0x50;
            BYTE8(v69) = BYTE8(v69) & 0x3F | 0x80;
            sub_25247A510();
            sub_2524081EC(v45, v46);
            sub_2524081EC(v61, v62);
            return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v68, v67);
        }
      }
  }
}

uint64_t sub_2524536AC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_25247A050();
  if (!result || (uint64_t result = sub_25247A070(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_25247A060();
      sub_25247A730();
      sub_25245378C(&qword_269C05F18, MEMORY[0x263F047F8]);
      return sub_25247A6F0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25245378C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_2524537D4(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_25247A1B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_269C052B8);
          uint64_t v8 = (void *)swift_allocObject();
          size_t v12 = _swift_stdlib_malloc_size(v8);
          v8[2] = v9;
          uint64_t v8[3] = 2 * v12 - 64;
        }
        sub_252408194(a1, a2);
        uint64_t v13 = sub_25247A160();
        sub_2524081EC(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x252453980);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t static LoggedObject.logger.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v5 = sub_25247A6A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C049F0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v41 = (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v39 = (uint64_t)&v34 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v34 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v34 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v34 - v20;
  type metadata accessor for LoggedObjectPropertyKey();
  uint64_t inited = (const void *)swift_initStaticObject();
  *(void *)&v42[0] = a1;
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
  uint64_t v23 = (void *)sub_25247B250();
  unint64_t v36 = inited;
  id v24 = objc_getAssociatedObject(v23, inited);
  swift_unknownObjectRelease();
  if (v24)
  {
    sub_25247AED0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v42, 0, sizeof(v42));
  }
  sub_252453EAC((uint64_t)v42, (uint64_t)v43);
  uint64_t v40 = a3;
  unint64_t v35 = v8;
  if (v43[3])
  {
    int v25 = swift_dynamicCast();
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v26(v21, v25 ^ 1u, 1, v5);
  }
  else
  {
    sub_2523D6FB8((uint64_t)v43, &qword_269C04A00);
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v26(v21, 1, 1, v5);
  }
  sub_252453F14((uint64_t)v21, (uint64_t)v19);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  int v28 = v27(v19, 1, v5);
  sub_2523D6FB8((uint64_t)v19, &qword_269C049F0);
  if (v28 == 1)
  {
    (*(void (**)(uint64_t))(v38 + 16))(a1);
    sub_25247A690();
    v26(v16, 0, 1, v5);
    sub_2523FDE84((uint64_t)v16, (uint64_t)v21);
    v43[0] = a1;
    unint64_t v29 = (void *)sub_25247B250();
    uint64_t v30 = v39;
    sub_252453F14((uint64_t)v21, v39);
    if (v27((char *)v30, 1, v5) == 1)
    {
      unint64_t v31 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v35, v30, v5);
      unint64_t v31 = (void *)sub_25247B2A0();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v30, v5);
    }
    objc_setAssociatedObject(v29, v36, v31, (void *)0x301);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t v32 = v41;
  sub_252453F14((uint64_t)v21, v41);
  uint64_t result = v27((char *)v32, 1, v5);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v40, v32, v5);
    return sub_2523D6FB8((uint64_t)v21, &qword_269C049F0);
  }
  return result;
}

uint64_t type metadata accessor for LoggedObjectPropertyKey()
{
  return self;
}

uint64_t sub_252453E30(uint64_t a1, uint64_t a2)
{
  return sub_2524540D4(a1, a2, &qword_269C04C08);
}

uint64_t static LoggedObject.logCategory.getter()
{
  return sub_25247A890();
}

uint64_t sub_252453E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return static LoggedObject.logger.getter(a1, a2, a3);
}

uint64_t sub_252453E84()
{
  return static LoggedObject.logCategory.getter();
}

uint64_t sub_252453EA0(uint64_t a1, uint64_t a2)
{
  return sub_2524540D4(a1, a2, (uint64_t *)&unk_269C04A10);
}

uint64_t sub_252453EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_252453F14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C049F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_252453F80(uint64_t a1, uint64_t a2)
{
  return sub_2524540D4(a1, a2, &qword_269C04A08);
}

unint64_t static Log.subsystem.getter()
{
  return 0xD000000000000017;
}

uint64_t static Log.logger(category:)()
{
  swift_bridgeObjectRetain();

  return sub_25247A690();
}

uint64_t sub_252454014()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t static LoggedObject<>.logger.getter()
{
  return sub_25247A690();
}

ValueMetadata *type metadata accessor for Log()
{
  return &type metadata for Log;
}

uint64_t dispatch thunk of static LoggedObject.logger.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static LoggedObject.logCategory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_2524540C8(uint64_t a1, uint64_t a2)
{
  return sub_2524540D4(a1, a2, (uint64_t *)&unk_269C04A20);
}

uint64_t sub_2524540D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_25247A890();
}

ValueMetadata *type metadata accessor for EventTags()
{
  return &type metadata for EventTags;
}

ValueMetadata *type metadata accessor for EventTags.Category()
{
  return &type metadata for EventTags.Category;
}

uint64_t dispatch thunk of FeatureDataSource.isEventCategoryTagWritingEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeatureDataSource.isEventCategoryTagQueryingEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeatureDataSource.isLadleSchedulingEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_252454164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = sub_25247A4B0();
  uint64_t v4 = *(void *)(v28 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v28);
  uint64_t v23 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F30);
  uint64_t v6 = *(void *)(v25 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v25);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CKQueryAsyncSequence();
  uint64_t v24 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v24 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25247AB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_25245568C(v26, (uint64_t)v11);
  uint64_t v16 = a1;
  uint64_t v17 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v16, v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v28);
  unint64_t v18 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v19 = (v10 + *(unsigned __int8 *)(v6 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v20 = (v7 + *(unsigned __int8 *)(v4 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = 0;
  *(void *)(v21 + 24) = 0;
  sub_252455950((uint64_t)v11, v21 + v18);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v21 + v19, v8, v17);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v21 + v20, v23, v28);
  sub_25240BCB0((uint64_t)v14, (uint64_t)&unk_269C05F48, v21);
  return swift_release();
}

uint64_t sub_2524544A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[14] = a5;
  v6[15] = a6;
  v6[13] = a4;
  uint64_t v7 = sub_25247A4B0();
  v6[16] = v7;
  v6[17] = *(void *)(v7 - 8);
  v6[18] = swift_task_alloc();
  uint64_t v8 = sub_25247AAF0();
  v6[19] = v8;
  v6[20] = *(void *)(v8 - 8);
  v6[21] = swift_task_alloc();
  v6[22] = swift_task_alloc();
  v6[23] = type metadata accessor for CKQueryAsyncSequence();
  unsigned char v6[24] = swift_task_alloc();
  v6[25] = swift_task_alloc();
  v6[26] = swift_task_alloc();
  v6[27] = swift_task_alloc();
  v6[28] = swift_task_alloc();
  v6[29] = swift_task_alloc();
  uint64_t v9 = sub_25247A6A0();
  v6[30] = v9;
  v6[31] = *(void *)(v9 - 8);
  v6[32] = swift_task_alloc();
  v6[33] = swift_task_alloc();
  v6[34] = swift_task_alloc();
  v6[35] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2524546CC, 0, 0);
}

uint64_t sub_2524546CC()
{
  unint64_t v33 = v0;
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[28];
  uint64_t v2 = v0[29];
  sub_2523E83B4(v0[35]);
  sub_25245568C(v1, v2);
  sub_25245568C(v1, v3);
  uint64_t v4 = sub_25247A680();
  os_log_type_t v5 = sub_25247AD20();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v28 = v0[31];
    uint64_t v6 = v0[29];
    uint64_t v29 = v0[30];
    uint64_t v30 = v0[35];
    uint64_t v7 = v0[28];
    uint64_t v26 = v0[27];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v32 = v27;
    *(_DWORD *)uint64_t v8 = 136446466;
    sub_25247A540();
    sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
    uint64_t v9 = sub_25247B200();
    v0[11] = sub_25245DA98(v9, v10, &v32);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    sub_252459AE4(v6);
    *(_WORD *)(v8 + 12) = 2080;
    sub_25245568C(v7, v26);
    uint64_t v11 = sub_25247A890();
    v0[12] = sub_25245DA98(v11, v12, &v32);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    sub_252459AE4(v7);
    _os_log_impl(&dword_2523CF000, v4, v5, "[%{public}s] Beginning query: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v27, -1, -1);
    MEMORY[0x2533B5DC0](v8, -1, -1);

    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v13(v30, v29);
  }
  else
  {
    uint64_t v14 = v0[35];
    uint64_t v15 = v0[30];
    uint64_t v16 = v0[31];
    uint64_t v17 = v0[28];
    sub_252459AE4(v0[29]);
    sub_252459AE4(v17);

    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v13(v14, v15);
  }
  v0[36] = v13;
  uint64_t v18 = swift_task_alloc();
  long long v19 = *(_OWORD *)(v0 + 13);
  uint64_t v20 = v0[13];
  uint64_t v21 = *(void **)v20;
  v0[37] = *(void *)v20;
  uint64_t v22 = *(void *)(v20 + 8);
  v0[38] = v22;
  uint64_t v23 = *(void **)(v20 + 16);
  v0[39] = v23;
  v0[40] = v18;
  *(_OWORD *)(v18 + 16) = v19;
  sub_2523DFD9C(v21, v22, v23);
  unint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269C04A58
                                                                                     + dword_269C04A58);
  uint64_t v24 = (void *)swift_task_alloc();
  v0[41] = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_252454A38;
  return v31((uint64_t)v31, (uint64_t)&unk_269C05F58, v18, (uint64_t)v21, v22, (uint64_t)v23);
}

uint64_t sub_252454A38()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 312);
  uint64_t v3 = *(void *)(*(void *)v1 + 304);
  uint64_t v4 = *(void **)(*(void *)v1 + 296);
  *(void *)(*(void *)v1 + 336) = v0;
  swift_task_dealloc();
  sub_2523DFE9C(v4, v3, v2);
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v5 = sub_252454BC4;
  }
  else {
    os_log_type_t v5 = sub_252455288;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_252454BC4()
{
  uint64_t v53 = v0;
  uint64_t v1 = *(void **)(v0 + 336);
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A60);
  char v3 = swift_dynamicCast();
  uint64_t v4 = *(void **)(v0 + 336);
  if (v3)
  {
    uint64_t v5 = *(void *)(v0 + 264);
    uint64_t v6 = *(void *)(v0 + 200);
    uint64_t v8 = *(void *)(v0 + 168);
    uint64_t v7 = *(void *)(v0 + 176);
    uint64_t v9 = *(void *)(v0 + 152);
    uint64_t v10 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 104);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v8, v7, v9);
    sub_2523E83B4(v5);
    sub_25245568C(v11, v6);
    unint64_t v12 = sub_25247A680();
    os_log_type_t v13 = sub_25247AD20();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
    uint64_t v16 = *(void *)(v0 + 264);
    uint64_t v17 = *(void *)(v0 + 240);
    uint64_t v18 = *(void *)(v0 + 200);
    if (v14)
    {
      unint64_t v51 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
      long long v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v52 = v20;
      *(_DWORD *)long long v19 = 136446210;
      sub_25247A540();
      sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v21 = sub_25247B200();
      *(void *)(v0 + 56) = sub_25245DA98(v21, v22, &v52);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_252459AE4(v18);
      _os_log_impl(&dword_2523CF000, v12, v13, "[%{public}s] Canceled", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v20, -1, -1);
      MEMORY[0x2533B5DC0](v19, -1, -1);

      v51(v16, v17);
    }
    else
    {
      sub_252459AE4(*(void *)(v0 + 200));

      v15(v16, v17);
    }
    uint64_t v42 = *(void *)(v0 + 160);
    uint64_t v41 = *(void *)(v0 + 168);
    uint64_t v43 = *(void *)(v0 + 152);
    sub_25245A3D4(&qword_269C047E8, MEMORY[0x263F8F488]);
    uint64_t v44 = swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v45, v41, v43);
    *(void *)(v0 + 48) = v44;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F30);
    sub_25247ABF0();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 256);
    uint64_t v24 = *(void *)(v0 + 192);
    uint64_t v25 = *(void *)(v0 + 104);

    sub_2523E83B4(v23);
    sub_25245568C(v25, v24);
    id v26 = v4;
    id v27 = v4;
    uint64_t v28 = sub_25247A680();
    os_log_type_t v29 = sub_25247AD40();
    BOOL v30 = os_log_type_enabled(v28, v29);
    unint64_t v31 = *(void **)(v0 + 336);
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
    uint64_t v33 = *(void *)(v0 + 256);
    uint64_t v34 = *(void *)(v0 + 240);
    uint64_t v35 = *(void *)(v0 + 192);
    if (v30)
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v48 = (void *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136446466;
      uint64_t v52 = v49;
      sub_25247A540();
      uint64_t v50 = v34;
      sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v37 = sub_25247B200();
      *(void *)(v0 + 32) = sub_25245DA98(v37, v38, &v52);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_252459AE4(v35);
      *(_WORD *)(v36 + 12) = 2114;
      id v39 = v31;
      uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 40) = v40;
      sub_25247AEB0();
      void *v48 = v40;

      _os_log_impl(&dword_2523CF000, v28, v29, "[%{public}s] Failed: %{public}@", (uint8_t *)v36, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v48, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v49, -1, -1);
      MEMORY[0x2533B5DC0](v36, -1, -1);

      v32(v33, v50);
    }
    else
    {
      sub_252459AE4(*(void *)(v0 + 192));

      v32(v33, v34);
    }
    *(void *)(v0 + 24) = *(void *)(v0 + 336);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F30);
    sub_25247ABF0();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
  return v46();
}

uint64_t sub_252455288()
{
  unint64_t v31 = v0;
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v5 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v6 = v0[13];
  sub_2523E83B4(v0[34]);
  sub_25245568C(v6, v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  uint64_t v7 = sub_25247A680();
  os_log_type_t v8 = sub_25247AD20();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v28 = v0[34];
    os_log_type_t v29 = (void (*)(uint64_t, uint64_t))v0[36];
    uint64_t v27 = v0[30];
    uint64_t v9 = v0[26];
    uint64_t v11 = v0[17];
    uint64_t v10 = v0[18];
    uint64_t v26 = v0[16];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v30 = v25;
    *(_DWORD *)uint64_t v12 = 136446466;
    sub_25247A540();
    sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
    uint64_t v13 = sub_25247B200();
    v0[9] = sub_25245DA98(v13, v14, &v30);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    sub_252459AE4(v9);
    *(_WORD *)(v12 + 12) = 2082;
    uint64_t v15 = Date.formattedElapsedTimeInterval.getter();
    v0[10] = sub_25245DA98(v15, v16, &v30);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v26);
    _os_log_impl(&dword_2523CF000, v7, v8, "[%{public}s] Finished in %{public}s seconds", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v25, -1, -1);
    MEMORY[0x2533B5DC0](v12, -1, -1);

    v29(v28, v27);
  }
  else
  {
    uint64_t v17 = (void (*)(uint64_t, uint64_t))v0[36];
    uint64_t v18 = v0[34];
    uint64_t v19 = v0[30];
    uint64_t v21 = v0[17];
    uint64_t v20 = v0[18];
    uint64_t v22 = v0[16];
    sub_252459AE4(v0[26]);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);

    v17(v18, v19);
  }
  v0[8] = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F30);
  sub_25247ABF0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_252455628()
{
  return 0x74694B64756F6C43;
}

uint64_t type metadata accessor for CKQueryAsyncSequence()
{
  uint64_t result = qword_269C05F80;
  if (!qword_269C05F80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25245568C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CKQueryAsyncSequence();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2524556F0()
{
  uint64_t v1 = (int *)(type metadata accessor for CKQueryAsyncSequence() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F30);
  uint64_t v5 = *(void *)(v20 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = (v4 + v6) & ~v6;
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v19 = sub_25247A4B0();
  uint64_t v8 = *(void *)(v19 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v16 + v7 + v9) & ~v9;
  uint64_t v17 = v2 | v9 | v6 | 7;
  uint64_t v18 = v10 + *(void *)(v8 + 64);
  swift_unknownObjectRelease();
  uint64_t v11 = v0 + v3;
  sub_2523DFE9C(*(void **)(v0 + v3), *(void *)(v0 + v3 + 8), *(void **)(v0 + v3 + 16));

  uint64_t v12 = v0 + v3 + v1[9];
  uint64_t v13 = sub_25247A540();
  unint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  v14(v12, v13);
  v14(v11 + v1[10], v13);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v16, v20);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v10, v19);

  return MEMORY[0x270FA0238](v0, v18, v17);
}

uint64_t sub_252455950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CKQueryAsyncSequence();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2524559B4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CKQueryAsyncSequence() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F30) - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(sub_25247A4B0() - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v14 = v1 + v5;
  uint64_t v15 = v1 + v8;
  uint64_t v16 = v1 + (v11 & ~v10);
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v17;
  *uint64_t v17 = v2;
  v17[1] = sub_2523D3928;
  return sub_2524544A8(a1, v12, v13, v14, v15, v16);
}

uint64_t sub_252455B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  return MEMORY[0x270FA2498](sub_252455B90, 0, 0);
}

uint64_t sub_252455B90()
{
  uint64_t v1 = v0[2].i64[0];
  uint64_t v2 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  v2[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2[2].i64[0] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[3].i64[0] = (uint64_t)v3;
  *uint64_t v3 = v0;
  uint64_t v4 = MEMORY[0x263F8EE60];
  v3[1] = sub_2523E5728;
  return MEMORY[0x270FA2360](v3, 0, 0, 0xD000000000000023, 0x800000025247D190, sub_252459BF4, v2, v4 + 8);
}

void sub_252455C88(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = sub_25247A540();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CKQueryAsyncSequence();
  uint64_t v13 = *(void **)(a2 + *(int *)(v12 + 48));
  if (v13)
  {
    uint64_t v14 = a2 + *(int *)(v12 + 28);
    v22[1] = a2;
    uint64_t v15 = a3;
    uint64_t v16 = a4;
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v17(v11, v14, v8);
    LogEvent = (objc_class *)type metadata accessor for CloudKitQueryLogEvent();
    v22[0] = a1;
    uint64_t v19 = LogEvent;
    uint64_t v20 = objc_allocWithZone(LogEvent);
    v17(&v20[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_queryIdentifier], (uint64_t)v11, v8);
    a4 = v16;
    a3 = v15;
    v20[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 0;
    *(void *)&v20[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_numFetchedRecords] = 0;
    *(void *)&v20[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_totalRecordSize] = 0;
    v23.receiver = v20;
    v23.super_class = v19;
    id v21 = objc_msgSendSuper2(&v23, sel_init);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    objc_msgSend(v13, sel_submitLogEvent_, v21);

    a1 = v22[0];
  }
  sub_252455E74(a3, a1, a4, 0, 0);
}

void sub_252455E74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v84 = a4;
  uint64_t v90 = a3;
  uint64_t v80 = a2;
  uint64_t v82 = a1;
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60);
  uint64_t v83 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v81 = v8;
  uint64_t v92 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F30);
  uint64_t v95 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v89 = v9;
  uint64_t v94 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CKQueryAsyncSequence();
  unint64_t v11 = *(void **)(v10 - 8);
  uint64_t v12 = (char *)v11[8];
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v88 = (uint64_t)&v71 - ((unint64_t)(v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v71 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v71 - v17;
  uint64_t v87 = sub_25247A6A0();
  uint64_t v85 = *(void *)(v87 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v87);
  id v21 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  objc_super v23 = (char *)&v71 - v22;
  uint64_t v86 = v10;
  if (a5)
  {
    id v24 = a5;
    sub_2523E83B4((uint64_t)v23);
    sub_25245568C(v6, (uint64_t)v18);
    uint64_t v25 = sub_25247A680();
    os_log_type_t v26 = sub_25247AD20();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      id v78 = v24;
      uint64_t v28 = (uint8_t *)v27;
      uint64_t v77 = swift_slowAlloc();
      v97[0] = v77;
      uint64_t v79 = v12;
      *(_DWORD *)uint64_t v28 = 136446210;
      char v76 = (void (*)(char *, uint64_t, uint64_t))(v28 + 4);
      sub_25247A540();
      sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
      id v24 = v78;
      uint64_t v29 = sub_25247B200();
      uint64_t v96 = sub_25245DA98(v29, v30, v97);
      uint64_t v12 = v79;
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_252459AE4((uint64_t)v18);
      _os_log_impl(&dword_2523CF000, v25, v26, "[%{public}s] Cursor query starting", v28, 0xCu);
      uint64_t v31 = v77;
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v31, -1, -1);
      MEMORY[0x2533B5DC0](v28, -1, -1);
    }
    else
    {
      sub_252459AE4((uint64_t)v18);
    }

    (*(void (**)(char *, uint64_t))(v85 + 8))(v23, v87);
    id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFD7C0]), sel_initWithCursor_, v24);
  }
  else
  {
    sub_2523E83B4((uint64_t)v21);
    sub_25245568C(v6, (uint64_t)v16);
    uint64_t v32 = sub_25247A680();
    os_log_type_t v33 = sub_25247AD20();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v79 = v12;
      uint64_t v36 = v35;
      v97[0] = v35;
      id v78 = v11;
      *(_DWORD *)uint64_t v34 = 136446210;
      uint64_t v77 = (uint64_t)(v34 + 4);
      sub_25247A540();
      sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v37 = sub_25247B200();
      uint64_t v96 = sub_25245DA98(v37, v38, v97);
      unint64_t v11 = v78;
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_252459AE4((uint64_t)v16);
      _os_log_impl(&dword_2523CF000, v32, v33, "[%{public}s] Query starting", v34, 0xCu);
      swift_arrayDestroy();
      uint64_t v39 = v36;
      uint64_t v12 = v79;
      MEMORY[0x2533B5DC0](v39, -1, -1);
      MEMORY[0x2533B5DC0](v34, -1, -1);
    }
    else
    {
      sub_252459AE4((uint64_t)v16);
    }

    (*(void (**)(char *, uint64_t))(v85 + 8))(v21, v87);
    id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFD7C0]), sel_initWithQuery_, *(void *)(v6 + 32));
  }
  objc_msgSend(v40, sel_setZoneID_, *(void *)(v6 + 24));
  uint64_t v41 = v86;
  swift_bridgeObjectRetain();
  sub_25247AD80();
  uint64_t v42 = v6 + *(int *)(v41 + 44);
  if ((*(unsigned char *)(v42 + 8) & 1) == 0) {
    objc_msgSend(v40, sel_setQualityOfService_, *(void *)v42);
  }
  uint64_t v43 = v6 + *(int *)(v41 + 40);
  if (*(unsigned char *)(v43 + 8)) {
    goto LABEL_15;
  }
  uint64_t v44 = *(void *)v43;
  if (!__OFSUB__(v44, v84))
  {
    objc_msgSend(v40, sel_setResultsLimit_, v44 - v84);
LABEL_15:
    uint64_t v86 = swift_allocObject();
    *(void *)(v86 + 16) = 0;
    uint64_t v85 = swift_allocObject();
    *(void *)(v85 + 16) = 0;
    uint64_t v45 = swift_allocObject();
    uint64_t v87 = (uint64_t)v40;
    swift_unknownObjectWeakInit();
    uint64_t v46 = v88;
    sub_25245568C(v6, v88);
    uint64_t v47 = v95;
    uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 16);
    uint64_t v75 = v95 + 16;
    char v76 = v48;
    uint64_t v49 = v94;
    v48(v94, v90, v91);
    uint64_t v50 = *((unsigned __int8 *)v11 + 80);
    uint64_t v51 = (v50 + 16) & ~v50;
    char v74 = v12 + 7;
    unint64_t v52 = (unint64_t)&v12[v51 + 7] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v77 = *(unsigned __int8 *)(v47 + 80);
    id v78 = (id)(v77 + 8);
    uint64_t v53 = (v77 + 8 + v52) & ~v77;
    uint64_t v73 = v50 | v77 | 7;
    uint64_t v72 = v6;
    unint64_t v54 = (v89 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v55 = swift_allocObject();
    sub_252455950(v46, v55 + v51);
    *(void *)(v55 + v52) = v85;
    uint64_t v56 = *(char **)(v95 + 32);
    v95 += 32;
    uint64_t v79 = v56;
    uint64_t v57 = v49;
    uint64_t v58 = v91;
    ((void (*)(uint64_t, char *, uint64_t))v56)(v55 + v53, v57, v91);
    *(void *)(v55 + v54) = v86;
    *(void *)(v55 + ((v54 + 15) & 0xFFFFFFFFFFFFFFF8)) = v45;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_25247ADA0();
    swift_release();
    uint64_t v59 = v88;
    sub_25245568C(v72, v88);
    uint64_t v60 = v83;
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v92, v80, v93);
    v76(v94, v90, v58);
    uint64_t v61 = (v50 + 32) & ~v50;
    unint64_t v62 = (unint64_t)&v74[v61] & 0xFFFFFFFFFFFFFFF8;
    unint64_t v63 = (v62 + *(unsigned __int8 *)(v60 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
    unint64_t v64 = (v81 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v65 = ((unint64_t)v78 + v64) & ~v77;
    uint64_t v66 = swift_allocObject();
    uint64_t v67 = v86;
    *(void *)(v66 + 16) = v84;
    *(void *)(v66 + 24) = v67;
    sub_252455950(v59, v66 + v61);
    *(void *)(v66 + v62) = v85;
    (*(void (**)(unint64_t, char *, uint64_t))(v60 + 32))(v66 + v63, v92, v93);
    uint64_t v68 = v82;
    *(void *)(v66 + v64) = v82;
    ((void (*)(unint64_t, char *, uint64_t))v79)(v66 + v65, v94, v58);
    swift_retain();
    swift_retain();
    id v69 = v68;
    uint64_t v70 = (void *)v87;
    sub_25247AD90();
    objc_msgSend(v69, sel_addOperation_, v70);
    swift_release();
    swift_release();

    return;
  }
  __break(1u);
}

void sub_252456898(void *a1, id a2, char a3, uint64_t a4, char *a5, char *a6, uint64_t a7, char *a8)
{
  uint64_t v197 = a8;
  uint64_t v196 = a7;
  uint64_t v198 = a6;
  uint64_t v199 = a5;
  id v202 = a1;
  uint64_t v204 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F70);
  uint64_t v205 = *(void *)(v204 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v204);
  uint64_t v192 = (char *)&v189 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v194 = (char *)&v189 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v203 = (char *)&v189 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v210 = (char *)&v189 - v17;
  uint64_t v211 = sub_25247A540();
  uint64_t v201 = *(void *)(v211 - 8);
  MEMORY[0x270FA5388](v211);
  uint64_t v200 = (char *)&v189 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = type metadata accessor for CKQueryAsyncSequence();
  uint64_t v19 = MEMORY[0x270FA5388](v206);
  uint64_t v195 = (char *)&v189 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v193 = (uint64_t)&v189 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v189 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v189 - v27;
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v31 = (char *)&v189 - v30;
  MEMORY[0x270FA5388](v29);
  os_log_type_t v33 = (char *)&v189 - v32;
  uint64_t v208 = sub_25247A6A0();
  uint64_t v207 = *(void *)(v208 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v208);
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  unint64_t v38 = (char *)&v189 - v37;
  uint64_t v39 = MEMORY[0x270FA5388](v36);
  uint64_t v40 = MEMORY[0x270FA5388](v39);
  uint64_t v42 = (char *)&v189 - v41;
  MEMORY[0x270FA5388](v40);
  uint64_t v47 = (char *)&v189 - v46;
  uint64_t v209 = a4;
  if (a3)
  {
    id v66 = a2;
    sub_2523E83B4((uint64_t)v47);
    sub_25245568C(a4, (uint64_t)v33);
    sub_25245A3BC(a2);
    id v67 = v202;
    sub_25245A3BC(a2);
    id v68 = v67;
    id v69 = sub_25247A680();
    os_log_type_t v70 = sub_25247AD40();
    int v71 = v70;
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v72 = swift_slowAlloc();
      uint64_t v205 = swift_slowAlloc();
      uint64_t v210 = (char *)swift_slowAlloc();
      os_log_t v220 = v210;
      *(_DWORD *)uint64_t v72 = 136446722;
      id v202 = a2;
      uint64_t v73 = v206;
      sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v74 = sub_25247B200();
      LODWORD(v204) = v71;
      uint64_t v219 = (char *)sub_25245DA98(v74, v75, (uint64_t *)&v220);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_252459AE4((uint64_t)v33);
      *(_WORD *)(v72 + 12) = 2082;
      id v76 = objc_msgSend(v68, sel_recordName);
      uint64_t v77 = sub_25247A840();
      unint64_t v79 = v78;

      a2 = v202;
      uint64_t v219 = (char *)sub_25245DA98(v77, v79, (uint64_t *)&v220);
      sub_25247AEB0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v72 + 22) = 2114;
      id v80 = a2;
      uint64_t v81 = (char *)_swift_stdlib_bridgeErrorToNSError();
      uint64_t v219 = v81;
      uint64_t v82 = v209;
      sub_25247AEB0();
      uint64_t v83 = v205;
      *(void *)uint64_t v205 = v81;
      sub_25245A3C8(a2);
      sub_25245A3C8(a2);
      _os_log_impl(&dword_2523CF000, v69, (os_log_type_t)v204, "[%{public}s] Failed to fetch %{public}s: %{public}@", (uint8_t *)v72, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v83, -1, -1);
      uint64_t v84 = v210;
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v84, -1, -1);
      MEMORY[0x2533B5DC0](v72, -1, -1);

      (*(void (**)(char *, uint64_t))(v207 + 8))(v47, v208);
    }
    else
    {
      uint64_t v82 = a4;
      sub_252459AE4((uint64_t)v33);

      sub_25245A3C8(a2);
      sub_25245A3C8(a2);

      (*(void (**)(char *, uint64_t))(v207 + 8))(v47, v208);
      uint64_t v73 = v206;
    }
    uint64_t v85 = *(void **)(v82 + *(int *)(v73 + 48));
    if (v85)
    {
      uint64_t v86 = v82 + *(int *)(v73 + 28);
      uint64_t v87 = v201;
      uint64_t v88 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 16);
      uint64_t v89 = v200;
      uint64_t v90 = v211;
      v88(v200, v86, v211);
      LogEvent = (objc_class *)type metadata accessor for CloudKitQueryLogEvent();
      uint64_t v92 = objc_allocWithZone(LogEvent);
      v88(&v92[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_queryIdentifier], (uint64_t)v89, v90);
      v92[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 8;
      *(void *)&v92[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_numFetchedRecords] = 0;
      *(void *)&v92[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_totalRecordSize] = 0;
      v212.receiver = v92;
      v212.super_class = LogEvent;
      id v93 = objc_msgSendSuper2(&v212, sel_init);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v89, v90);
      uint64_t v94 = (void *)sub_25247A110();
      objc_msgSend(v85, sel_submitLogEvent_error_, v93, v94);
      sub_25245A3C8(a2);
    }
    else
    {
      sub_25245A3C8(a2);
    }
  }
  else
  {
    uint64_t v189 = v45;
    uint64_t v190 = v44;
    uint64_t v191 = v43;
    uint64_t v48 = v199 + 16;
    id v202 = a2;
    uint64_t v49 = (char *)a2;
    uint64_t v50 = (char *)objc_msgSend(v49, sel_size);
    swift_beginAccess();
    uint64_t v51 = &v50[*v48];
    if (__OFADD__(*v48, v50))
    {
      __break(1u);
LABEL_50:
      __break(1u);
      return;
    }
    uint64_t v199 = v25;
    void *v48 = v51;
    uint64_t v219 = v49;
    unint64_t v52 = v49;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F30);
    sub_25247ABE0();
    uint64_t v53 = v205;
    unint64_t v54 = (uint64_t *)v203;
    uint64_t v55 = v204;
    uint64_t v56 = *(void (**)(void))(v205 + 16);
    v56();
    int v57 = (*(uint64_t (**)(uint64_t *, uint64_t))(v53 + 88))(v54, v55);
    if (v57 == *MEMORY[0x263F8F668])
    {
      uint64_t v58 = (void *)(v196 + 16);
      (*(void (**)(uint64_t *, uint64_t))(v53 + 96))(v54, v55);
      uint64_t v59 = *v54;
      if (v59 > 99)
      {
        (*(void (**)(char *, uint64_t))(v53 + 8))(v210, v55);
        sub_25245A3C8(v202);
      }
      else
      {
        sub_2523E83B4((uint64_t)v42);
        sub_25245568C(v209, (uint64_t)v31);
        uint64_t v60 = sub_25247A680();
        os_log_type_t v61 = sub_25247AD20();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = swift_slowAlloc();
          unint64_t v63 = (char *)swift_slowAlloc();
          uint64_t v219 = v63;
          *(_DWORD *)uint64_t v62 = 136446466;
          uint64_t v209 = v62 + 4;
          sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
          uint64_t v64 = sub_25247B200();
          uint64_t v217 = (char *)sub_25245DA98(v64, v65, (uint64_t *)&v219);
          sub_25247AEB0();
          swift_bridgeObjectRelease();
          sub_252459AE4((uint64_t)v31);
          *(_WORD *)(v62 + 12) = 2048;
          uint64_t v217 = (char *)v59;
          sub_25247AEB0();
          _os_log_impl(&dword_2523CF000, v60, v61, "[%{public}s] Running out of queue space, %ld slots left", (uint8_t *)v62, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533B5DC0](v63, -1, -1);
          MEMORY[0x2533B5DC0](v62, -1, -1);
        }
        else
        {

          sub_252459AE4((uint64_t)v31);
        }
        sub_25245A3C8(v202);
        (*(void (**)(char *, uint64_t))(v207 + 8))(v42, v208);
        (*(void (**)(char *, uint64_t))(v205 + 8))(v210, v204);
      }
      swift_beginAccess();
      if (!__OFADD__(*v58, 1))
      {
        ++*v58;
        return;
      }
      goto LABEL_50;
    }
    uint64_t v95 = v197 + 16;
    if (v57 == *MEMORY[0x263F8F660])
    {
      uint64_t v198 = v197 + 16;
      uint64_t v96 = (id *)v203;
      (*(void (**)(char *, uint64_t))(v53 + 96))(v203, v55);

      uint64_t v97 = v190;
      sub_2523E83B4(v190);
      uint64_t v98 = v209;
      sub_25245568C(v209, (uint64_t)v28);
      id v99 = v202;
      sub_25245A3BC(v202);
      uint64_t v100 = v52;
      uint64_t v101 = sub_25247A680();
      os_log_type_t v102 = sub_25247AD40();
      if (os_log_type_enabled(v101, v102))
      {
        uint64_t v103 = swift_slowAlloc();
        uint64_t v197 = v100;
        uint64_t v104 = v103;
        uint64_t v199 = (char *)swift_slowAlloc();
        uint64_t v203 = (char *)swift_slowAlloc();
        uint64_t v219 = v203;
        *(_DWORD *)uint64_t v104 = 136446466;
        uint64_t v105 = v206;
        sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
        uint64_t v106 = sub_25247B200();
        uint64_t v217 = (char *)sub_25245DA98(v106, v107, (uint64_t *)&v219);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        sub_252459AE4((uint64_t)v28);
        *(_WORD *)(v104 + 12) = 2112;
        uint64_t v217 = v197;
        uint64_t v108 = v197;
        sub_25247AEB0();
        uint64_t v109 = (void (*)(void, void))v199;
        *(void *)uint64_t v199 = v99;
        sub_25245A3C8(v99);
        sub_25245A3C8(v99);
        _os_log_impl(&dword_2523CF000, v101, v102, "[%{public}s] Yield dropped record: %@", (uint8_t *)v104, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v109, -1, -1);
        uint64_t v110 = v203;
        swift_arrayDestroy();
        uint64_t v98 = v209;
        MEMORY[0x2533B5DC0](v110, -1, -1);
        MEMORY[0x2533B5DC0](v104, -1, -1);

        uint64_t v199 = *(char **)(v207 + 8);
        ((void (*)(uint64_t, uint64_t))v199)(v97, v208);
      }
      else
      {
        sub_252459AE4((uint64_t)v28);
        sub_25245A3C8(v99);
        sub_25245A3C8(v99);

        uint64_t v199 = *(char **)(v207 + 8);
        ((void (*)(uint64_t, uint64_t))v199)(v97, v208);
        uint64_t v105 = v206;
      }
      uint64_t v119 = *(void **)(v98 + *(int *)(v105 + 48));
      uint64_t v120 = v205;
      if (v119)
      {
        uint64_t v121 = v98 + *(int *)(v105 + 28);
        uint64_t v122 = v201;
        uint64_t v123 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 16);
        uint64_t v124 = v200;
        uint64_t v125 = v211;
        v123(v200, v121, v211);
        uint64_t v126 = (objc_class *)type metadata accessor for CloudKitQueryLogEvent();
        uint64_t v127 = objc_allocWithZone(v126);
        v123(&v127[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_queryIdentifier], (uint64_t)v124, v125);
        v127[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 5;
        *(void *)&v127[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_numFetchedRecords] = 0;
        *(void *)&v127[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_totalRecordSize] = 0;
        v213.receiver = v127;
        v213.super_class = v126;
        id v128 = objc_msgSendSuper2(&v213, sel_init);
        (*(void (**)(char *, uint64_t))(v122 + 8))(v124, v125);
        objc_msgSend(v119, sel_submitLogEvent_, v128);

        sub_25245A3C8(v202);
        (*(void (**)(char *, uint64_t))(v120 + 8))(v210, v204);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v205 + 8))(v210, v204);
        sub_25245A3C8(v202);
      }
      uint64_t v149 = (uint64_t)v195;
      uint64_t v95 = v198;
    }
    else if (v57 == *MEMORY[0x263F8F658])
    {
      sub_2523E83B4((uint64_t)v38);
      uint64_t v111 = (void (*)(void, void))v199;
      sub_25245568C(v209, (uint64_t)v199);
      uint64_t v112 = sub_25247A680();
      os_log_type_t v113 = sub_25247AD20();
      if (os_log_type_enabled(v112, v113))
      {
        uint64_t v114 = (uint8_t *)swift_slowAlloc();
        uint64_t v203 = (char *)swift_slowAlloc();
        uint64_t v219 = v203;
        *(_DWORD *)uint64_t v114 = 136446210;
        uint64_t v198 = v95;
        uint64_t v115 = v206;
        sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
        uint64_t v116 = sub_25247B200();
        uint64_t v217 = (char *)sub_25245DA98(v116, v117, (uint64_t *)&v219);
        uint64_t v95 = v198;
        uint64_t v53 = v205;
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        sub_252459AE4((uint64_t)v111);
        _os_log_impl(&dword_2523CF000, v112, v113, "[%{public}s] Yield indicated that the stream is terminated", v114, 0xCu);
        uint64_t v118 = v203;
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v118, -1, -1);
        MEMORY[0x2533B5DC0](v114, -1, -1);

        uint64_t v199 = *(char **)(v207 + 8);
        ((void (*)(char *, uint64_t))v199)(v38, v208);
      }
      else
      {
        sub_252459AE4((uint64_t)v111);

        uint64_t v199 = *(char **)(v207 + 8);
        ((void (*)(char *, uint64_t))v199)(v38, v208);
        uint64_t v115 = v206;
      }
      uint64_t v150 = *(void **)(v209 + *(int *)(v115 + 48));
      if (v150)
      {
        uint64_t v151 = v209 + *(int *)(v115 + 28);
        uint64_t v152 = v201;
        uint64_t v153 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 16);
        uint64_t v154 = v200;
        uint64_t v155 = v211;
        v153(v200, v151, v211);
        uint64_t v156 = (objc_class *)type metadata accessor for CloudKitQueryLogEvent();
        uint64_t v157 = objc_allocWithZone(v156);
        v153(&v157[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_queryIdentifier], (uint64_t)v154, v155);
        v157[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 6;
        *(void *)&v157[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_numFetchedRecords] = 0;
        *(void *)&v157[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_totalRecordSize] = 0;
        v214.receiver = v157;
        v214.super_class = v156;
        id v158 = objc_msgSendSuper2(&v214, sel_init);
        (*(void (**)(char *, uint64_t))(v152 + 8))(v154, v155);
        objc_msgSend(v150, sel_submitLogEvent_, v158);

        sub_25245A3C8(v202);
        (*(void (**)(char *, uint64_t))(v53 + 8))(v210, v204);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v53 + 8))(v210, v204);
        sub_25245A3C8(v202);
      }
      uint64_t v149 = (uint64_t)v195;
    }
    else
    {
      uint64_t v129 = v189;
      sub_2523E83B4(v189);
      uint64_t v130 = v193;
      sub_25245568C(v209, v193);
      uint64_t v131 = v194;
      ((void (*)(char *, char *, uint64_t))v56)(v194, v210, v55);
      uint64_t v132 = v55;
      uint64_t v133 = sub_25247A680();
      os_log_type_t v134 = sub_25247AD50();
      LODWORD(v199) = v134;
      BOOL v135 = os_log_type_enabled(v133, v134);
      uint64_t v136 = v206;
      if (v135)
      {
        uint64_t v137 = swift_slowAlloc();
        uint64_t v197 = (char *)swift_slowAlloc();
        uint64_t v219 = v197;
        *(_DWORD *)uint64_t v137 = 136446466;
        uint64_t v196 = v137 + 4;
        uint64_t v138 = v136;
        sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
        uint64_t v139 = sub_25247B200();
        uint64_t v217 = (char *)sub_25245DA98(v139, v140, (uint64_t *)&v219);
        uint64_t v198 = v95;
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        sub_252459AE4(v130);
        *(_WORD *)(v137 + 12) = 2082;
        uint64_t v141 = v194;
        ((void (*)(char *, char *, uint64_t))v56)(v192, v194, v132);
        uint64_t v142 = sub_25247A890();
        uint64_t v217 = (char *)sub_25245DA98(v142, v143, (uint64_t *)&v219);
        uint64_t v95 = v198;
        uint64_t v144 = v205;
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        uint64_t v145 = *(void (**)(char *, uint64_t))(v144 + 8);
        v145(v141, v132);
        _os_log_impl(&dword_2523CF000, v133, (os_log_type_t)v199, "[%{public}s] Yield result not handled: %{public}s", (uint8_t *)v137, 0x16u);
        uint64_t v146 = v197;
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v146, -1, -1);
        MEMORY[0x2533B5DC0](v137, -1, -1);

        uint64_t v147 = *(char **)(v207 + 8);
        uint64_t v148 = v189;
      }
      else
      {
        sub_252459AE4(v130);
        uint64_t v145 = *(void (**)(char *, uint64_t))(v53 + 8);
        v145(v131, v132);

        uint64_t v147 = *(char **)(v207 + 8);
        uint64_t v148 = v129;
        uint64_t v138 = v136;
      }
      uint64_t v199 = v147;
      ((void (*)(uint64_t, uint64_t))v147)(v148, v208);
      uint64_t v159 = *(void **)(v209 + *(int *)(v138 + 48));
      if (v159)
      {
        uint64_t v160 = v209 + *(int *)(v138 + 28);
        uint64_t v161 = v201;
        uint64_t v162 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 16);
        uint64_t v163 = v200;
        uint64_t v164 = v211;
        v162(v200, v160, v211);
        uint64_t v165 = (objc_class *)type metadata accessor for CloudKitQueryLogEvent();
        uint64_t v166 = objc_allocWithZone(v165);
        v162(&v166[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_queryIdentifier], (uint64_t)v163, v164);
        v166[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 7;
        *(void *)&v166[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_numFetchedRecords] = 0;
        *(void *)&v166[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_totalRecordSize] = 0;
        v215.receiver = v166;
        v215.super_class = v165;
        id v167 = objc_msgSendSuper2(&v215, sel_init);
        (*(void (**)(char *, uint64_t))(v161 + 8))(v163, v164);
        objc_msgSend(v159, sel_submitLogEvent_, v167);

        uint64_t v132 = v204;
        sub_25245A3C8(v202);
        v145(v210, v132);
      }
      else
      {
        v145(v210, v132);
        sub_25245A3C8(v202);
      }
      uint64_t v149 = (uint64_t)v195;
      v145(v203, v132);
    }
    swift_beginAccess();
    uint64_t v168 = MEMORY[0x2533B5EA0](v95);
    if (v168)
    {
      uint64_t v169 = (void *)v168;
      uint64_t v170 = v191;
      sub_2523E83B4(v191);
      uint64_t v171 = v209;
      sub_25245568C(v209, v149);
      uint64_t v172 = sub_25247A680();
      os_log_type_t v173 = sub_25247AD20();
      if (os_log_type_enabled(v172, v173))
      {
        uint64_t v174 = (uint8_t *)swift_slowAlloc();
        uint64_t v175 = (char *)swift_slowAlloc();
        uint64_t v217 = v175;
        *(_DWORD *)uint64_t v174 = 136446210;
        uint64_t v210 = (char *)(v174 + 4);
        uint64_t v176 = v206;
        sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
        uint64_t v177 = sub_25247B200();
        uint64_t v216 = sub_25245DA98(v177, v178, (uint64_t *)&v217);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        sub_252459AE4(v149);
        _os_log_impl(&dword_2523CF000, v172, v173, "[%{public}s] Canceling operation", v174, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533B5DC0](v175, -1, -1);
        uint64_t v179 = v174;
        uint64_t v171 = v209;
        MEMORY[0x2533B5DC0](v179, -1, -1);

        ((void (*)(uint64_t, uint64_t))v199)(v170, v208);
      }
      else
      {
        sub_252459AE4(v149);

        ((void (*)(uint64_t, uint64_t))v199)(v170, v208);
        uint64_t v176 = v206;
      }
      uint64_t v180 = *(void **)(v171 + *(int *)(v176 + 48));
      if (v180)
      {
        uint64_t v181 = v171 + *(int *)(v176 + 28);
        uint64_t v182 = v201;
        uint64_t v183 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 16);
        uint64_t v184 = v200;
        uint64_t v185 = v211;
        v183(v200, v181, v211);
        uint64_t v186 = (objc_class *)type metadata accessor for CloudKitQueryLogEvent();
        uint64_t v187 = objc_allocWithZone(v186);
        v183(&v187[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_queryIdentifier], (uint64_t)v184, v185);
        v187[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 3;
        *(void *)&v187[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_numFetchedRecords] = 0;
        *(void *)&v187[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_totalRecordSize] = 0;
        v218.receiver = v187;
        v218.super_class = v186;
        id v188 = objc_msgSendSuper2(&v218, sel_init);
        (*(void (**)(char *, uint64_t))(v182 + 8))(v184, v185);
        objc_msgSend(v180, sel_submitLogEvent_, v188);
      }
      objc_msgSend(v169, sel_cancel);
    }
  }
}

void sub_252458400(void *a1, int a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9)
{
  LODWORD(v188) = a2;
  id v193 = a1;
  uint64_t v15 = type metadata accessor for CKQueryAsyncSequence();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v178 = (uint64_t)&v168 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v174 = (uint64_t)&v168 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v185 = (char *)&v168 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v170 = (uint64_t)&v168 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v173 = (uint64_t)&v168 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v176 = (uint64_t)&v168 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v181 = (uint64_t)&v168 - v28;
  uint64_t v189 = sub_25247A6A0();
  uint64_t v191 = *(void *)(v189 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v189);
  uint64_t v180 = (char *)&v168 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v177 = (uint64_t)&v168 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v169 = (uint64_t)&v168 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v184 = (char *)&v168 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v172 = (uint64_t)&v168 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v179 = (uint64_t)&v168 - v40;
  MEMORY[0x270FA5388](v39);
  uint64_t v182 = (uint64_t)&v168 - v41;
  uint64_t v42 = sub_25247A540();
  uint64_t v43 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v45 = (char *)&v168 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = a4 + 2;
  swift_beginAccess();
  uint64_t v183 = a4;
  uint64_t v46 = a4[2];
  uint64_t v47 = a3 + v46;
  if (__OFADD__(a3, v46))
  {
    __break(1u);
    return;
  }
  uint64_t v168 = a8;
  uint64_t v187 = a7;
  uint64_t v190 = v15;
  uint64_t v48 = a5 + *(int *)(v15 + 28);
  uint64_t v49 = a5;
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v50(v45, v48, v42);
  swift_beginAccess();
  uint64_t v51 = *(void *)(a6 + 16);
  LogEvent = (objc_class *)type metadata accessor for CloudKitQueryLogEvent();
  uint64_t v53 = objc_allocWithZone(LogEvent);
  v50(&v53[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_queryIdentifier], (uint64_t)v45, v42);
  v53[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 2;
  *(void *)&v53[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_numFetchedRecords] = v47;
  *(void *)&v53[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_totalRecordSize] = v51;
  v197.receiver = v53;
  v197.super_class = LogEvent;
  unint64_t v54 = objc_msgSendSuper2(&v197, sel_init);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v43 + 8);
  uint64_t v186 = v42;
  v55(v45, v42);
  uint64_t v192 = v49;
  if (v188)
  {
    id v72 = v193;
    v194[0] = (uint64_t)v193;
    id v73 = v193;
    id v74 = v72;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A60);
    type metadata accessor for CKError(0);
    if (swift_dynamicCast())
    {
      unint64_t v75 = v196;
      sub_25245A3D4(&qword_269C04480, type metadata accessor for CKError);
      sub_25247A0E0();
      uint64_t v76 = v192;
      if (v194[0] == 26 || (uint64_t v196 = v75, sub_25247A0E0(), v194[0] == 28))
      {
        uint64_t v77 = v177;
        sub_2523E83B4(v177);
        uint64_t v78 = v174;
        sub_25245568C(v76, v174);
        unint64_t v79 = sub_25247A680();
        os_log_type_t v80 = sub_25247AD20();
        if (os_log_type_enabled(v79, v80))
        {
          uint64_t v81 = (uint8_t *)swift_slowAlloc();
          uint64_t v82 = swift_slowAlloc();
          uint64_t v188 = (uint64_t)v75;
          uint64_t v83 = v78;
          uint64_t v84 = v82;
          v194[0] = v82;
          *(_DWORD *)uint64_t v81 = 136446210;
          uint64_t v85 = v190;
          sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
          uint64_t v86 = sub_25247B200();
          uint64_t v196 = (void *)sub_25245DA98(v86, v87, v194);
          id v72 = v193;
          sub_25247AEB0();
          swift_bridgeObjectRelease();
          uint64_t v88 = v83;
          unint64_t v75 = (void *)v188;
          sub_252459AE4(v88);
          _os_log_impl(&dword_2523CF000, v79, v80, "[%{public}s] Query completed (zone does not exist)", v81, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2533B5DC0](v84, -1, -1);
          uint64_t v89 = v81;
          uint64_t v76 = v192;
          MEMORY[0x2533B5DC0](v89, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v191 + 8))(v177, v189);
        }
        else
        {
          sub_252459AE4(v78);

          (*(void (**)(uint64_t, uint64_t))(v191 + 8))(v77, v189);
          uint64_t v85 = v190;
        }
        BOOL v135 = *(void **)(v76 + *(int *)(v85 + 48));
        if (v135) {
          objc_msgSend(v135, sel_submitLogEvent_, v54);
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60);
        sub_25247AAD0();

        uint64_t v136 = v72;
        goto LABEL_53;
      }
    }
    else
    {
      uint64_t v76 = v192;
    }
    uint64_t v106 = v180;
    sub_2523E83B4((uint64_t)v180);
    uint64_t v107 = v178;
    sub_25245568C(v76, v178);
    sub_25245A3BC(v72);
    id v108 = v72;
    uint64_t v109 = sub_25247A680();
    os_log_type_t v110 = sub_25247AD40();
    if (os_log_type_enabled(v109, v110))
    {
      uint64_t v111 = swift_slowAlloc();
      uint64_t v112 = (void *)swift_slowAlloc();
      uint64_t v188 = swift_slowAlloc();
      v194[0] = v188;
      *(_DWORD *)uint64_t v111 = 136446466;
      uint64_t v113 = v190;
      sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v114 = sub_25247B200();
      uint64_t v196 = (void *)sub_25245DA98(v114, v115, v194);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_252459AE4(v107);
      *(_WORD *)(v111 + 12) = 2114;
      id v116 = v193;
      uint64_t v117 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v196 = (void *)v117;
      sub_25247AEB0();
      *uint64_t v112 = v117;
      uint64_t v76 = v192;
      sub_25245A3C8(v193);
      sub_25245A3C8(v193);
      _os_log_impl(&dword_2523CF000, v109, v110, "[%{public}s] Query failed: %{public}@", (uint8_t *)v111, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v112, -1, -1);
      uint64_t v118 = v188;
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v118, -1, -1);
      uint64_t v119 = v111;
      id v72 = v193;
      MEMORY[0x2533B5DC0](v119, -1, -1);

      (*(void (**)(char *, uint64_t))(v191 + 8))(v180, v189);
    }
    else
    {
      sub_252459AE4(v107);
      sub_25245A3C8(v72);
      sub_25245A3C8(v72);

      (*(void (**)(char *, uint64_t))(v191 + 8))(v106, v189);
      uint64_t v113 = v190;
    }
    v54[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 9;
    uint64_t v131 = *(void **)(v76 + *(int *)(v113 + 48));
    if (v131)
    {
      uint64_t v132 = (void *)sub_25247A110();
      objc_msgSend(v131, sel_submitLogEvent_error_, v54, v132);
    }
    v194[0] = (uint64_t)v72;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60);
    sub_25247AAC0();
    goto LABEL_54;
  }
  uint64_t v188 = v47;
  id v171 = v54;
  id v56 = v193;
  uint64_t v180 = (char *)v193;
  uint64_t v57 = v182;
  sub_2523E83B4(v182);
  uint64_t v58 = v181;
  sub_25245568C(v49, v181);
  sub_25245A3BC(v56);
  uint64_t v59 = v183;
  swift_retain();
  sub_25245A3BC(v56);
  swift_retain();
  uint64_t v60 = sub_25247A680();
  os_log_type_t v61 = sub_25247AD20();
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v62 = swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    uint64_t v196 = (void *)v63;
    *(_DWORD *)uint64_t v62 = 136446978;
    uint64_t v64 = v190;
    sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
    uint64_t v65 = sub_25247B200();
    v194[0] = sub_25245DA98(v65, v66, (uint64_t *)&v196);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    sub_252459AE4(v58);
    *(_WORD *)(v62 + 12) = 2048;
    swift_beginAccess();
    uint64_t v67 = v59[2];
    swift_release();
    uint64_t v195 = v67;
    sub_25247AEB0();
    swift_release();
    *(_WORD *)(v62 + 22) = 2048;
    uint64_t v195 = v188;
    sub_25247AEB0();
    *(_WORD *)(v62 + 32) = 2082;
    if (v193) {
      uint64_t v68 = 0;
    }
    else {
      uint64_t v68 = 7302688;
    }
    if (v193) {
      unint64_t v69 = 0xE000000000000000;
    }
    else {
      unint64_t v69 = 0xE300000000000000;
    }
    uint64_t v195 = sub_25245DA98(v68, v69, (uint64_t *)&v196);
    id v56 = v193;
    uint64_t v70 = v64;
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    sub_25245A3C8(v56);
    sub_25245A3C8(v56);
    _os_log_impl(&dword_2523CF000, v60, v61, "[%{public}s] Query found %ld matching records on this iteration (%ld total),%{public}s cursor available", (uint8_t *)v62, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v63, -1, -1);
    MEMORY[0x2533B5DC0](v62, -1, -1);

    uint64_t v71 = v189;
    uint64_t v183 = *(void **)(v191 + 8);
    ((void (*)(uint64_t, uint64_t))v183)(v57, v189);
  }
  else
  {
    swift_release();
    sub_252459AE4(v58);
    swift_release();
    sub_25245A3C8(v56);
    sub_25245A3C8(v56);

    uint64_t v71 = v189;
    uint64_t v183 = *(void **)(v191 + 8);
    ((void (*)(uint64_t, uint64_t))v183)(v57, v189);
    uint64_t v70 = v190;
  }
  uint64_t v90 = (uint64_t)v184;
  uint64_t v91 = v192;
  uint64_t v92 = v192 + *(int *)(v70 + 40);
  uint64_t v93 = (uint64_t)v185;
  if ((*(unsigned char *)(v92 + 8) & 1) == 0)
  {
    uint64_t v94 = *(void *)v92;
    if (v188 >= *(void *)v92)
    {
      uint64_t v95 = v179;
      sub_2523E83B4(v179);
      uint64_t v96 = v176;
      sub_25245568C(v91, v176);
      uint64_t v97 = sub_25247A680();
      os_log_type_t v98 = sub_25247AD20();
      if (os_log_type_enabled(v97, v98))
      {
        uint64_t v99 = swift_slowAlloc();
        uint64_t v100 = swift_slowAlloc();
        uint64_t v196 = (void *)v100;
        *(_DWORD *)uint64_t v99 = 136446466;
        sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
        uint64_t v101 = sub_25247B200();
        uint64_t v195 = sub_25245DA98(v101, v102, (uint64_t *)&v196);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        sub_252459AE4(v96);
        *(_WORD *)(v99 + 12) = 2048;
        uint64_t v195 = v94;
        sub_25247AEB0();
        _os_log_impl(&dword_2523CF000, v97, v98, "[%{public}s] Reached result limit %ld, finishing early", (uint8_t *)v99, 0x16u);
        swift_arrayDestroy();
        uint64_t v103 = v100;
        uint64_t v70 = v190;
        MEMORY[0x2533B5DC0](v103, -1, -1);
        uint64_t v104 = v99;
        id v56 = v193;
        MEMORY[0x2533B5DC0](v104, -1, -1);

        uint64_t v105 = v179;
      }
      else
      {
        sub_252459AE4(v96);

        uint64_t v105 = v95;
      }
      ((void (*)(uint64_t, uint64_t))v183)(v105, v71);
      uint64_t v133 = v171;
      *((unsigned char *)v171 + OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state) = 4;
      os_log_type_t v134 = *(void **)(v192 + *(int *)(v70 + 48));
      if (v134) {
        objc_msgSend(v134, sel_submitLogEvent_, v133);
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60);
      sub_25247AAD0();
      sub_25245A3C8(v56);

      return;
    }
  }
  if (v56)
  {
    uint64_t v120 = v180;
    char v121 = sub_25247ABA0();
    unint64_t v54 = v171;
    if (v121)
    {
      sub_2523E83B4(v90);
      uint64_t v122 = v170;
      sub_25245568C(v91, v170);
      uint64_t v123 = sub_25247A680();
      os_log_type_t v124 = sub_25247AD20();
      if (os_log_type_enabled(v123, v124))
      {
        uint64_t v125 = (uint8_t *)swift_slowAlloc();
        uint64_t v126 = swift_slowAlloc();
        uint64_t v196 = (void *)v126;
        *(_DWORD *)uint64_t v125 = 136446210;
        uint64_t v188 = (uint64_t)(v125 + 4);
        sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
        uint64_t v127 = sub_25247B200();
        uint64_t v195 = sub_25245DA98(v127, v128, (uint64_t *)&v196);
        sub_25247AEB0();
        swift_bridgeObjectRelease();
        sub_252459AE4(v122);
        _os_log_impl(&dword_2523CF000, v123, v124, "[%{public}s] Task was canceled", v125, 0xCu);
        swift_arrayDestroy();
        uint64_t v129 = v126;
        uint64_t v70 = v190;
        MEMORY[0x2533B5DC0](v129, -1, -1);
        uint64_t v130 = v125;
        id v56 = v193;
        MEMORY[0x2533B5DC0](v130, -1, -1);
      }
      else
      {
        sub_252459AE4(v122);
      }

      ((void (*)(uint64_t, uint64_t))v183)(v90, v71);
      uint64_t v161 = *(void **)(v192 + *(int *)(v70 + 48));
      if (v161) {
        objc_msgSend(v161, sel_submitLogEvent_, v54);
      }
      sub_25247AAF0();
      sub_25245A3D4(&qword_269C047E8, MEMORY[0x263F8F488]);
      uint64_t v162 = swift_allocError();
      sub_25247A750();
      uint64_t v196 = (void *)v162;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60);
      sub_25247AAC0();
      sub_25245A3C8(v56);
      uint64_t v136 = v56;
LABEL_53:
      sub_25245A3C8(v136);
LABEL_54:

      return;
    }
    uint64_t v184 = a9;
    uint64_t v149 = v169;
    sub_2523E83B4(v169);
    sub_25245568C(v91, v93);
    uint64_t v150 = sub_25247A680();
    os_log_type_t v151 = sub_25247AD20();
    if (os_log_type_enabled(v150, v151))
    {
      uint64_t v152 = (uint8_t *)swift_slowAlloc();
      uint64_t v153 = v93;
      uint64_t v154 = swift_slowAlloc();
      uint64_t v196 = (void *)v154;
      *(_DWORD *)uint64_t v152 = 136446210;
      sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v155 = sub_25247B200();
      uint64_t v195 = sub_25245DA98(v155, v156, (uint64_t *)&v196);
      unint64_t v54 = v171;
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_252459AE4(v153);
      _os_log_impl(&dword_2523CF000, v150, v151, "[%{public}s] Running cursor query", v152, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v154, -1, -1);
      uint64_t v157 = v152;
      uint64_t v70 = v190;
      MEMORY[0x2533B5DC0](v157, -1, -1);

      uint64_t v158 = v149;
      uint64_t v159 = v189;
    }
    else
    {
      sub_252459AE4(v93);

      uint64_t v158 = v149;
      uint64_t v159 = v71;
    }
    ((void (*)(uint64_t, uint64_t))v183)(v158, v159);
    v54[OBJC_IVAR____TtC13HomeKitEvents21CloudKitQueryLogEvent_state] = 1;
    uint64_t v163 = *(void **)(v192 + *(int *)(v70 + 48));
    uint64_t v164 = v188;
    if (v163) {
      objc_msgSend(v163, sel_submitLogEvent_, v54);
    }
    uint64_t v165 = v120;
    uint64_t v166 = v164;
    id v167 = v193;
    sub_252455E74(v168, v187, v184, v166, v193);
    sub_25245A3C8(v167);
    sub_25245A3C8(v167);
  }
  else
  {
    uint64_t v137 = v172;
    sub_2523E83B4(v172);
    uint64_t v138 = v173;
    sub_25245568C(v91, v173);
    uint64_t v139 = sub_25247A680();
    os_log_type_t v140 = sub_25247AD20();
    BOOL v141 = os_log_type_enabled(v139, v140);
    uint64_t v142 = v171;
    if (v141)
    {
      unint64_t v143 = (uint8_t *)swift_slowAlloc();
      uint64_t v144 = swift_slowAlloc();
      uint64_t v196 = (void *)v144;
      *(_DWORD *)unint64_t v143 = 136446210;
      sub_25245A3D4(&qword_269C046B0, MEMORY[0x263F07508]);
      uint64_t v145 = sub_25247B200();
      uint64_t v195 = sub_25245DA98(v145, v146, (uint64_t *)&v196);
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      sub_252459AE4(v138);
      _os_log_impl(&dword_2523CF000, v139, v140, "[%{public}s] Query completed", v143, 0xCu);
      swift_arrayDestroy();
      uint64_t v147 = v144;
      uint64_t v70 = v190;
      MEMORY[0x2533B5DC0](v147, -1, -1);
      uint64_t v148 = v143;
      uint64_t v142 = v171;
      MEMORY[0x2533B5DC0](v148, -1, -1);
    }
    else
    {
      sub_252459AE4(v138);
    }

    ((void (*)(uint64_t, uint64_t))v183)(v137, v71);
    uint64_t v160 = *(void **)(v192 + *(int *)(v70 + 48));
    if (v160) {
      objc_msgSend(v160, sel_submitLogEvent_, v142);
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60);
    sub_25247AAD0();
  }
}

uint64_t sub_252459AE4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CKQueryAsyncSequence();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_252459B40(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v2 + 16);
  *(void *)(v3 + 16) = v5;
  *(void *)uint64_t v5 = v3;
  *(void *)(v5 + 8) = sub_2523D3928;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a2;
  return MEMORY[0x270FA2498](sub_252455B90, 0, 0);
}

void sub_252459BF4(uint64_t a1)
{
  sub_252455C88(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_252459C00()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_252459C10()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_252459C48()
{
  uint64_t v1 = (int *)(type metadata accessor for CKQueryAsyncSequence() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v12 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F30);
  uint64_t v4 = *(void *)(v14 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v12 + v5 + 8) & ~v5;
  uint64_t v15 = v2 | v5 | 7;
  unint64_t v13 = ((((*(void *)(v4 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v7 = v0 + v3;
  sub_2523DFE9C(*(void **)(v0 + v3), *(void *)(v0 + v3 + 8), *(void **)(v0 + v3 + 16));

  uint64_t v8 = v0 + v3 + v1[9];
  uint64_t v9 = sub_25247A540();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v7 + v1[10], v9);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v6, v14);
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, v13, v15);
}

void sub_252459E6C(void *a1, void *a2, char a3)
{
  char v6 = a3 & 1;
  uint64_t v7 = *(void *)(type metadata accessor for CKQueryAsyncSequence() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F30) - 8);
  unint64_t v11 = (v9 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v12 = (*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = *(char **)(v3 + v9);
  uint64_t v14 = *(void *)(v3 + v12);
  uint64_t v15 = *(char **)(v3 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_252456898(a1, a2, v6, v3 + v8, v13, (char *)(v3 + v11), v14, v15);
}

uint64_t sub_252459FA4()
{
  uint64_t v1 = (int *)(type metadata accessor for CKQueryAsyncSequence() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  unint64_t v17 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60);
  uint64_t v4 = *(void *)(v20 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v16 = (v17 + v5 + 8) & ~v5;
  unint64_t v14 = (*(void *)(v4 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F30);
  uint64_t v6 = *(void *)(v19 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v14 + v7 + 8) & ~v7;
  uint64_t v18 = v8 + *(void *)(v6 + 64);
  uint64_t v15 = v2 | v5 | v7 | 7;
  swift_release();
  uint64_t v9 = v0 + v3;
  sub_2523DFE9C(*(void **)(v0 + v3), *(void *)(v0 + v3 + 8), *(void **)(v0 + v3 + 16));

  uint64_t v10 = v0 + v3 + v1[9];
  uint64_t v11 = sub_25247A540();
  unint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  v12(v9 + v1[10], v11);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v16, v20);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v19);

  return MEMORY[0x270FA0238](v0, v18, v15);
}

void sub_25245A248(void *a1, char a2)
{
  int v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for CKQueryAsyncSequence() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60) - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F30) - 8);
  sub_252458400(a1, v4, *(void *)(v2 + 16), *(void **)(v2 + 24), v2 + v6, *(void *)(v2 + v7), v2 + v9, *(void *)(v2 + v10), (char *)(v2 + ((v10 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))));
}

id sub_25245A3BC(id a1)
{
  return a1;
}

void sub_25245A3C8(id a1)
{
}

uint64_t sub_25245A3D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_25245A41C(char *a1, void **a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = (char *)*a2;
    *(void *)a1 = *a2;
    a1 = &v26[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    unint64_t v7 = (char *)*a2;
    uint64_t v8 = (uint64_t)a2[1];
    unint64_t v9 = (char *)a2[2];
    sub_2523DFD9C(*a2, v8, v9);
    *(void *)a1 = v7;
    *((void *)a1 + 1) = v8;
    unint64_t v10 = (char *)a2[3];
    uint64_t v11 = (char *)a2[4];
    *((void *)a1 + 2) = v9;
    *((void *)a1 + 3) = v10;
    *((void *)a1 + 4) = v11;
    uint64_t v12 = a3[7];
    unint64_t v13 = &a1[v12];
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_25247A540();
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
    unint64_t v17 = v10;
    uint64_t v18 = v11;
    v16(v13, v14, v15);
    v16(&a1[a3[8]], (uint64_t)a2 + a3[8], v15);
    uint64_t v19 = a3[10];
    *(void *)&a1[a3[9]] = *(void **)((char *)a2 + a3[9]);
    uint64_t v20 = &a1[v19];
    uint64_t v21 = (uint64_t)a2 + v19;
    *(void *)uint64_t v20 = *(void *)v21;
    v20[8] = *(unsigned char *)(v21 + 8);
    uint64_t v22 = a3[11];
    uint64_t v23 = a3[12];
    uint64_t v24 = &a1[v22];
    uint64_t v25 = (uint64_t)a2 + v22;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = *(unsigned char *)(v25 + 8);
    *(void *)&a1[v23] = *(void **)((char *)a2 + v23);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t sub_25245A5A4(uint64_t a1, uint64_t a2)
{
  sub_2523DFE9C(*(void **)a1, *(void *)(a1 + 8), *(void **)(a1 + 16));

  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_25247A540();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 32), v5);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

char *sub_25245A674(char *a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void **)(a2 + 16);
  sub_2523DFD9C(*(void **)a2, v7, v8);
  *(void *)a1 = v6;
  *((void *)a1 + 1) = v7;
  unint64_t v9 = *(void **)(a2 + 24);
  unint64_t v10 = *(void **)(a2 + 32);
  *((void *)a1 + 2) = v8;
  *((void *)a1 + 3) = v9;
  *((void *)a1 + 4) = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_25247A540();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  id v16 = v9;
  id v17 = v10;
  v15(v12, v13, v14);
  v15(&a1[a3[8]], a2 + a3[8], v14);
  uint64_t v18 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)(a2 + a3[9]);
  uint64_t v19 = &a1[v18];
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  void v19[8] = *(unsigned char *)(v20 + 8);
  uint64_t v21 = a3[11];
  uint64_t v22 = a3[12];
  uint64_t v23 = &a1[v21];
  uint64_t v24 = a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = *(unsigned char *)(v24 + 8);
  *(void *)&a1[v22] = *(void *)(a2 + v22);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_25245A7AC(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void **)(a2 + 16);
  sub_2523DFD9C(*(void **)a2, v7, v8);
  unint64_t v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void **)(a1 + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  sub_2523DFE9C(v9, v10, v11);
  uint64_t v12 = *(void **)(a2 + 24);
  uint64_t v13 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v12;
  id v14 = v12;

  uint64_t v15 = *(void **)(a2 + 32);
  id v16 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v15;
  id v17 = v15;

  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_25247A540();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24);
  v22(v19, v20, v21);
  v22(a1 + a3[8], a2 + a3[8], v21);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v26 = *v25;
  *(unsigned char *)(v24 + 8) = *((unsigned char *)v25 + 8);
  *(void *)uint64_t v24 = v26;
  uint64_t v27 = a3[11];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v30 = *v29;
  *(unsigned char *)(v28 + 8) = *((unsigned char *)v29 + 8);
  *(void *)uint64_t v28 = v30;
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_25245A91C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25247A540();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + a3[8], a2 + a3[8], v9);
  uint64_t v11 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  uint64_t v14 = a3[11];
  uint64_t v15 = a3[12];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  return a1;
}

uint64_t sub_25245AA28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  sub_2523DFE9C(v7, v8, v9);
  uint64_t v10 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  uint64_t v11 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_25247A540();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v16(a1 + a3[8], a2 + a3[8], v15);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[10];
  uint64_t v18 = a3[11];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  *(void *)uint64_t v19 = *(void *)v20;
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_25245AB6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25245AB80);
}

uint64_t sub_25245AB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    if ((*(void *)(a1 + 8) >> 1) > 0x80000000) {
      return -(*(void *)(a1 + 8) >> 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v7 = sub_25247A540();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
    uint64_t v9 = v7;
    uint64_t v10 = a1 + *(int *)(a3 + 28);
    return v8(v10, a2, v9);
  }
}

uint64_t sub_25245AC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25245AC44);
}

void *sub_25245AC44(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = 0;
    result[1] = 2 * -(int)a2;
    result[2] = 0;
  }
  else
  {
    uint64_t v7 = sub_25247A540();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25245ACF4()
{
  uint64_t result = sub_25247A540();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_25245ADB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_25247A440();
  uint64_t v9 = (void *)sub_25247A4E0();
  v11[4] = sub_25245B0D4;
  v11[5] = a2;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  void v11[2] = sub_25244C4D8;
  v11[3] = &block_descriptor_17;
  uint64_t v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_createFakeEventsWithDate_homeIdentifier_count_reply_, v8, v9, a5, v10);
  _Block_release(v10);
}

void sub_25245AEC0(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    uint64_t v8 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_2523D380C;
    v9[6] = v7;
    id v10 = a1;
    swift_retain();
    id v11 = a1;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C04578, (uint64_t)v9);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v12 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = 0;
    void v13[3] = 0;
    void v13[4] = a2;
    v13[5] = sub_2523D3704;
    void v13[6] = 0;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C04570, (uint64_t)v13);
    swift_release();
  }
}

void sub_25245B0D4(void *a1)
{
  sub_25245AEC0(a1, v1);
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t sub_25245B0F8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_25245B194()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EventsAsyncSequenceLogEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25245B238()
{
  return type metadata accessor for EventsAsyncSequenceLogEvent();
}

uint64_t type metadata accessor for EventsAsyncSequenceLogEvent()
{
  uint64_t result = qword_269C05F90;
  if (!qword_269C05F90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25245B28C()
{
  uint64_t result = sub_25247A540();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EventsAsyncSequenceLogEvent.EventsAsyncSequenceState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EventsAsyncSequenceLogEvent.EventsAsyncSequenceState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *uint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25245B494);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventsAsyncSequenceLogEvent.EventsAsyncSequenceState()
{
  return &type metadata for EventsAsyncSequenceLogEvent.EventsAsyncSequenceState;
}

unint64_t sub_25245B4D0()
{
  unint64_t result = qword_269C05FA0;
  if (!qword_269C05FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C05FA0);
  }
  return result;
}

uint64_t static HMVCommands.resetConfiguration()()
{
  int v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C04588 + dword_269C04588);
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_25240DEE0;
  return v3((uint64_t)v3, (uint64_t)sub_25245B5DC, 0);
}

void sub_25245B5DC(void *a1, uint64_t a2)
{
  v4[4] = sub_25245B8B8;
  v4[5] = a2;
  v4[0] = MEMORY[0x263EF8330];
  v4[1] = 1107296256;
  v4[2] = sub_25244C4D8;
  v4[3] = &block_descriptor_18;
  int v3 = _Block_copy(v4);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilResetConfigurationWithReply_, v3);
  _Block_release(v3);
}

void sub_25245B6A4(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v4 - 8);
  unsigned int v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    uint64_t v8 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v9[5] = sub_2523D380C;
    v9[6] = v7;
    id v10 = a1;
    swift_retain();
    id v11 = a1;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C049A8, (uint64_t)v9);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v12 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = 0;
    void v13[3] = 0;
    void v13[4] = a2;
    v13[5] = sub_2523D3704;
    void v13[6] = 0;
    swift_retain();
    sub_25240BCB0((uint64_t)v6, (uint64_t)&unk_269C04570, (uint64_t)v13);
    swift_release();
  }
}

void sub_25245B8B8(void *a1)
{
  sub_25245B6A4(a1, v1);
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t sub_25245B8DC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25245B918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_25245B93C, 0, 0);
}

uint64_t sub_25245B93C()
{
  type metadata accessor for XPCPublicClient();
  uint64_t v1 = swift_allocObject();
  *(void *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(void *)(v1 + 48) = 0;
  long long v7 = *(_OWORD *)(v0 + 24);
  sub_252449044();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v7;
  int v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *int v3 = v0;
  v3[1] = sub_252416F20;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2360](v4, 0, 0, 0xD000000000000024, 0x800000025247D460, sub_25245F2CC, v2, v5);
}

uint64_t sub_25245BA70(uint64_t a1, void *a2, void (*a3)(void))
{
  uint64_t v18 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C045E8);
  MEMORY[0x270FA5388](v5 - 8);
  long long v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04640);
  uint64_t v12 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v13 = v12 + *(void *)(*(void *)v12 + 112);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v14(v13, 1, 1, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v7, v11, v8);
  v14((uint64_t)v7, 0, 1, v8);
  swift_beginAccess();
  sub_25245F2D8((uint64_t)v7, v13);
  swift_endAccess();
  uint64_t v15 = a2[5];
  a2[5] = sub_25245F340;
  a2[6] = v12;
  swift_retain();
  sub_2523D6B20(v15);
  uint64_t v16 = a2[3];
  a2[3] = sub_25245F348;
  a2[4] = v12;
  swift_retain();
  sub_2523D6B20(v16);
  sub_252449328();
  v18();
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_25245BCE8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2523D6B38();
  uint64_t v5 = (void *)swift_allocError();
  *uint64_t v6 = 0;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  uint64_t v8 = sub_25247AB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_2523D7084;
  v9[6] = v7;
  id v10 = v5;
  swift_retain();
  swift_retain();
  sub_25240BCB0((uint64_t)v4, (uint64_t)&unk_269C05FE8, (uint64_t)v9);
  swift_release();
  swift_release();
}

void sub_25245BE6C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2523D6B38();
  uint64_t v5 = (void *)swift_allocError();
  *uint64_t v6 = 1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  uint64_t v8 = sub_25247AB70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = sub_2523D380C;
  v9[6] = v7;
  id v10 = v5;
  swift_retain();
  swift_retain();
  sub_25240BCB0((uint64_t)v4, (uint64_t)&unk_269C04570, (uint64_t)v9);
  swift_release();
  swift_release();
}

uint64_t static EventManager.writeEvents(_:)(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_269C05FB8 + dword_269C05FB8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2523D3928;
  return v5(a1);
}

uint64_t static EventManager.writeFakeEvents(date:homeIdentifier:count:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C05FC8 + dword_269C05FC8);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2523D3A1C;
  return v9(a1, a2, a3);
}

uint64_t sub_25245C15C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v78 = a2;
  unint64_t v75 = a3;
  uint64_t v97 = *MEMORY[0x263EF8340];
  uint64_t v85 = type metadata accessor for SomeEvent();
  uint64_t v4 = MEMORY[0x270FA5388](v85);
  uint64_t v76 = (uint64_t)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v80 = (uint64_t)&v73 - v6;
  uint64_t v7 = sub_25247A6A0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v79 = (uint64_t)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v73 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v84 = (uint64_t)&v73 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v73 - v16;
  uint64_t v88 = a1;
  SomeEvent.anyEvent.getter(v94);
  __swift_project_boxed_opaque_existential_1(v94, v95);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v19 = v96;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v94);
  *(void *)&v89[0] = DynamicType;
  *((void *)&v89[0] + 1) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C04AD0);
  uint64_t v20 = sub_25247A890();
  unint64_t v22 = v21;
  sub_2523E7A8C((uint64_t)v17);
  swift_bridgeObjectRetain_n();
  uint64_t v23 = sub_25247A680();
  os_log_type_t v24 = sub_25247AD60();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v83 = v7;
  uint64_t v86 = v8;
  uint64_t v77 = v13;
  unint64_t v82 = v22;
  uint64_t v74 = v20;
  if (v25)
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    v94[0] = v27;
    *(_DWORD *)uint64_t v26 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)&v89[0] = sub_25245DA98(v20, v22, v94);
    uint64_t v8 = v86;
    sub_25247AEB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2523CF000, v23, v24, "Writing %{public}s event", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v27, -1, -1);
    uint64_t v7 = v83;
    MEMORY[0x2533B5DC0](v26, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v87 = *(void (**)(char *, uint64_t))(v8 + 8);
  v87(v17, v7);
  uint64_t v28 = v84;
  sub_2523E7A8C(v84);
  uint64_t v29 = v80;
  sub_252430554(v88, v80);
  uint64_t v30 = sub_25247A680();
  os_log_type_t v31 = sub_25247AD20();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    v94[0] = v33;
    *(_DWORD *)uint64_t v32 = 136315138;
    sub_252430554(v29, v76);
    uint64_t v34 = sub_25247A890();
    *(void *)&v89[0] = sub_25245DA98(v34, v35, v94);
    uint64_t v7 = v83;
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    sub_25245F3A4(v29);
    _os_log_impl(&dword_2523CF000, v30, v31, "%s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v33, -1, -1);
    MEMORY[0x2533B5DC0](v32, -1, -1);

    uint64_t v36 = v84;
  }
  else
  {
    sub_25245F3A4(v29);

    uint64_t v36 = v28;
  }
  v87((char *)v36, v7);
  sub_252479FE0();
  swift_allocObject();
  sub_252479FD0();
  sub_25245F400(&qword_269C05FF0, (void (*)(uint64_t))type metadata accessor for SomeEvent);
  uint64_t v37 = v81;
  uint64_t v38 = sub_252479FC0();
  unint64_t v40 = v82;
  if (v37)
  {
    swift_release();
    uint64_t v41 = v79;
    sub_2523E7A8C(v79);
    id v42 = v37;
    swift_bridgeObjectRetain();
    id v43 = v37;
    uint64_t v44 = sub_25247A680();
    os_log_type_t v45 = sub_25247AD50();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v47 = (void *)swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      v94[0] = v88;
      *(_DWORD *)uint64_t v46 = 136446466;
      swift_bridgeObjectRetain();
      *(void *)&v89[0] = sub_25245DA98(v74, v40, v94);
      sub_25247AEB0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v46 + 12) = 2114;
      id v48 = v37;
      uint64_t v49 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&v89[0] = v49;
      sub_25247AEB0();
      *uint64_t v47 = v49;

      _os_log_impl(&dword_2523CF000, v44, v45, "Failed to encode %{public}s event: %{public}@", (uint8_t *)v46, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v47, -1, -1);
      uint64_t v50 = v88;
      swift_arrayDestroy();
      MEMORY[0x2533B5DC0](v50, -1, -1);
      MEMORY[0x2533B5DC0](v46, -1, -1);

      uint64_t v51 = v79;
      uint64_t v52 = v83;
    }
    else
    {
      swift_bridgeObjectRelease_n();

      uint64_t v51 = v41;
      uint64_t v52 = v7;
    }
    v87((char *)v51, v52);
    uint64_t result = swift_willThrow();
    *uint64_t v78 = v37;
  }
  else
  {
    uint64_t v53 = v38;
    unint64_t v54 = v39;
    swift_release();
    swift_bridgeObjectRelease();
    sub_252408194(v53, v54);
    uint64_t v55 = (uint64_t)v77;
    sub_2523E7A8C((uint64_t)v77);
    sub_252408194(v53, v54);
    id v56 = sub_25247A680();
    os_log_type_t v57 = sub_25247AD30();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      uint64_t v93 = v59;
      *(_DWORD *)uint64_t v58 = 136315138;
      uint64_t v88 = v59;
      switch(v54 >> 62)
      {
        case 1uLL:
          if (v53 >> 32 < (int)v53) {
            __break(1u);
          }
          sub_252408194(v53, v54);
          swift_retain();
          uint64_t v65 = sub_25245E1F0((int)v53, v53 >> 32, v54 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_25245E2F4);
          unint64_t v67 = v70;
          sub_2524081EC(v53, v54);
          if (v67) {
            goto LABEL_29;
          }
          goto LABEL_22;
        case 2uLL:
          uint64_t v63 = *(void *)(v53 + 16);
          uint64_t v64 = *(void *)(v53 + 24);
          sub_252408194(v53, v54);
          swift_retain();
          swift_retain();
          uint64_t v65 = sub_25245E1F0(v63, v64, v54 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_25245E2F4);
          unint64_t v67 = v66;
          swift_release();
          swift_release();
          if (v67) {
            goto LABEL_29;
          }
LABEL_22:
          uint64_t v91 = v53;
          unint64_t v92 = v54;
          sub_252408194(v53, v54);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269C05FF8);
          if (swift_dynamicCast())
          {
            sub_2523DFC24(v89, (uint64_t)v94);
            __swift_project_boxed_opaque_existential_1(v94, v95);
            if (sub_25247B120())
            {
              sub_2524081EC(v53, v54);
              __swift_project_boxed_opaque_existential_1(v94, v95);
              sub_25247B110();
              unint64_t v67 = *((void *)&v89[0] + 1);
              uint64_t v65 = *(void *)&v89[0];
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v94);
              goto LABEL_30;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v94);
          }
          else
          {
            uint64_t v90 = 0;
            memset(v89, 0, sizeof(v89));
            sub_25245F448((uint64_t)v89);
          }
          uint64_t v68 = sub_25245E0F0(v53, v54);
LABEL_28:
          uint64_t v65 = v68;
          unint64_t v67 = v69;
LABEL_29:
          sub_2524081EC(v53, v54);
LABEL_30:
          v94[0] = sub_25245DA98(v65, v67, &v93);
          sub_25247AEB0();
          swift_bridgeObjectRelease();
          sub_2524081EC(v53, v54);
          sub_2524081EC(v53, v54);
          _os_log_impl(&dword_2523CF000, v56, v57, "JSON: '%s'", v58, 0xCu);
          uint64_t v71 = v88;
          swift_arrayDestroy();
          MEMORY[0x2533B5DC0](v71, -1, -1);
          MEMORY[0x2533B5DC0](v58, -1, -1);

          uint64_t v61 = (uint64_t)v77;
          uint64_t v62 = v83;
          break;
        case 3uLL:
          memset(v94, 0, 14);
          goto LABEL_19;
        default:
          v94[0] = v53;
          LOWORD(v94[1]) = v54;
          BYTE2(v94[1]) = BYTE2(v54);
          BYTE3(v94[1]) = BYTE3(v54);
          BYTE4(v94[1]) = BYTE4(v54);
          BYTE5(v94[1]) = BYTE5(v54);
LABEL_19:
          uint64_t v68 = sub_25247A8C0();
          goto LABEL_28;
      }
    }
    else
    {
      sub_2524081EC(v53, v54);
      sub_2524081EC(v53, v54);

      uint64_t v61 = v55;
      uint64_t v62 = v7;
    }
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v87)(v61, v62);
    id v72 = v75;
    *unint64_t v75 = v53;
    v72[1] = v54;
  }
  return result;
}

uint64_t static EventManager.removeEvents(homeIdentifier:)(uint64_t a1)
{
  v1[9] = a1;
  uint64_t v2 = sub_25247A540();
  v1[10] = v2;
  v1[11] = *(void *)(v2 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  uint64_t v3 = sub_25247A6A0();
  v1[15] = v3;
  v1[16] = *(void *)(v3 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25245CF40, 0, 0);
}

uint64_t sub_25245CF40()
{
  uint64_t v36 = v0;
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[11];
  sub_2523E7A8C(v0[19]);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[20] = v5;
  v0[21] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v2, v1, v3);
  uint64_t v6 = sub_25247A680();
  os_log_type_t v7 = sub_25247AD60();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_t log = v6;
    uint64_t v30 = v0[16];
    uint64_t v8 = v0[14];
    uint64_t v31 = v0[15];
    uint64_t v32 = v0[19];
    uint64_t v9 = v0[10];
    uint64_t v28 = v0[11];
    uint64_t v33 = v5;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    v0[7] = 1752392040;
    uint64_t v35 = v27;
    *(_DWORD *)uint64_t v10 = 141558274;
    sub_25247AEB0();
    *(_WORD *)(v10 + 12) = 2080;
    sub_25245F400(&qword_269C046B0, MEMORY[0x263F07508]);
    uint64_t v11 = sub_25247B200();
    v0[8] = sub_25245DA98(v11, v12, &v35);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v13(v8, v9);
    _os_log_impl(&dword_2523CF000, log, v7, "Removing all events for home %{mask.hash}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v27, -1, -1);
    uint64_t v14 = v10;
    uint64_t v5 = v33;
    MEMORY[0x2533B5DC0](v14, -1, -1);

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v15(v32, v31);
  }
  else
  {
    uint64_t v16 = v0[19];
    uint64_t v17 = v0[15];
    uint64_t v18 = v0[16];
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v0[11] + 8);
    v13(v0[14], v0[10]);

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v15(v16, v17);
  }
  v0[22] = v15;
  v0[23] = v13;
  uint64_t v19 = v0[10];
  uint64_t v20 = v0[11];
  uint64_t v21 = v0[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C05FD8);
  unint64_t v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v23 = swift_allocObject();
  v0[24] = v23;
  *(_OWORD *)(v23 + 16) = xmmword_25247E5A0;
  v5(v23 + v22, v21, v19);
  uint64_t v24 = swift_task_alloc();
  v0[25] = v24;
  *(void *)(v24 + 16) = v23;
  uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C05FE0 + dword_269C05FE0);
  BOOL v25 = (void *)swift_task_alloc();
  v0[26] = v25;
  *BOOL v25 = v0;
  v25[1] = sub_25245D2CC;
  return v34((uint64_t)v34, (uint64_t)sub_25245F2B4, v24);
}

uint64_t sub_25245D2CC()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_25245D6CC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_25245D3E8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25245D3E8()
{
  uint64_t v24 = v0;
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[20];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[13];
  uint64_t v5 = v0[9];
  uint64_t v4 = v0[10];
  swift_bridgeObjectRelease();
  sub_2523E7A8C(v2);
  v1(v3, v5, v4);
  uint64_t v6 = sub_25247A680();
  os_log_type_t v7 = sub_25247AD60();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v21 = v0[18];
    unint64_t v22 = (void (*)(uint64_t, uint64_t))v0[22];
    uint64_t v19 = (void (*)(uint64_t, uint64_t))v0[23];
    uint64_t v20 = v0[15];
    uint64_t v8 = v0[13];
    uint64_t v9 = v0[10];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v0[5] = 1752392040;
    uint64_t v23 = v11;
    *(_DWORD *)uint64_t v10 = 141558274;
    sub_25247AEB0();
    *(_WORD *)(v10 + 12) = 2080;
    sub_25245F400(&qword_269C046B0, MEMORY[0x263F07508]);
    uint64_t v12 = sub_25247B200();
    v0[6] = sub_25245DA98(v12, v13, &v23);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    v19(v8, v9);
    _os_log_impl(&dword_2523CF000, v6, v7, "Successfully removed all events for home %{mask.hash}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v11, -1, -1);
    MEMORY[0x2533B5DC0](v10, -1, -1);

    v22(v21, v20);
  }
  else
  {
    uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[22];
    uint64_t v15 = v0[18];
    uint64_t v16 = v0[15];
    ((void (*)(void, void))v0[23])(v0[13], v0[10]);

    v14(v15, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_25245D6CC()
{
  uint64_t v33 = v0;
  uint64_t v1 = (void *)v0[27];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[20];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[12];
  uint64_t v6 = v0[9];
  uint64_t v5 = v0[10];
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_2523E7A8C(v3);
  v2(v4, v6, v5);
  id v7 = v1;
  id v8 = v1;
  uint64_t v9 = sub_25247A680();
  os_log_type_t v10 = sub_25247AD40();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (void *)v0[27];
    uint64_t v27 = (void (*)(uint64_t, uint64_t))v0[23];
    uint64_t v30 = v0[17];
    uint64_t v31 = (void (*)(uint64_t, uint64_t))v0[22];
    uint64_t v29 = v0[15];
    os_log_t log = v9;
    uint64_t v12 = v0[12];
    uint64_t v13 = v0[10];
    uint64_t v14 = swift_slowAlloc();
    uint64_t v26 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v0[2] = 1752392040;
    uint64_t v32 = v28;
    *(_DWORD *)uint64_t v14 = 141558530;
    sub_25247AEB0();
    *(_WORD *)(v14 + 12) = 2080;
    sub_25245F400(&qword_269C046B0, MEMORY[0x263F07508]);
    uint64_t v15 = sub_25247B200();
    v0[3] = sub_25245DA98(v15, v16, &v32);
    sub_25247AEB0();
    swift_bridgeObjectRelease();
    v27(v12, v13);
    *(_WORD *)(v14 + 22) = 2114;
    id v17 = v11;
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v18;
    sub_25247AEB0();
    *uint64_t v26 = v18;

    _os_log_impl(&dword_2523CF000, log, v10, "Failed to remove all events for home %{mask.hash}s: %{public}@", (uint8_t *)v14, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v26, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v28, -1, -1);
    MEMORY[0x2533B5DC0](v14, -1, -1);

    v31(v30, v29);
  }
  else
  {
    uint64_t v19 = (void *)v0[27];
    uint64_t v20 = (void (*)(uint64_t, uint64_t))v0[22];
    uint64_t v21 = v0[17];
    uint64_t v22 = v0[15];
    ((void (*)(void, void))v0[23])(v0[12], v0[10]);

    v20(v21, v22);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_25245DA98(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_25245DB6C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_252415E78((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_252415E78((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_25245DB6C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_25247AEC0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_25245DD28(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_25247AFB0();
  if (!v8)
  {
    sub_25247B0A0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_25247B100();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_25245DD28(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_25245DDC0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_25245DFA0(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_25245DFA0(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_25245DDC0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_25245DF38(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_25247AF50();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_25247B0A0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_25247A930();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_25247B100();
    __break(1u);
LABEL_14:
    uint64_t result = sub_25247B0A0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_25245DF38(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C052B8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_25245DFA0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C052B8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25247B100();
  __break(1u);
  return result;
}

uint64_t sub_25245E0F0(uint64_t a1, unint64_t a2)
{
  sub_252408194(a1, a2);
  sub_2524537D4(a1, a2);
  sub_2524081EC(a1, a2);
  uint64_t v4 = sub_25247A8C0();
  swift_release();
  return v4;
}

uint64_t sub_25245E168@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25247A8C0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25245E1A4(uint64_t a1, id *a2)
{
  id v2 = *a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C05F60);
  return sub_25247AAC0();
}

uint64_t sub_25245E1F0(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = sub_25247A050();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = sub_25247A070();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = sub_25247A060();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t result = (uint64_t)sub_25245E2A0(v9, v15, a4);
  if (v4) {
    return v16;
  }
  return result;
}

void *sub_25245E2A0(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v4 = a2 - a1;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t result = a3(&v6, a1, v4);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

uint64_t sub_25245E2F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25247A8C0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25245E32C(uint64_t a1)
{
  v1[5] = a1;
  uint64_t v2 = sub_25247A6A0();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25245E408, 0, 0);
}

void sub_25245E408()
{
  uint64_t v22 = v0;
  int64_t v1 = *(void *)(v0[5] + 16);
  if (v1)
  {
    sub_2523E7A8C(v0[10]);
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_25247A680();
    os_log_type_t v3 = sub_25247AD60();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 134217984;
      v0[4] = v1;
      sub_25247AEB0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2523CF000, v2, v3, "Writing %ld event(s)", v4, 0xCu);
      MEMORY[0x2533B5DC0](v4, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    uint64_t v5 = v0[10];
    uint64_t v6 = v0[6];
    uint64_t v7 = v0[7];
    uint64_t v8 = v0[5];
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v0[11] = v9;
    v0[12] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v9(v5, v6);
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_2523E05C8(0, v1, 0);
    uint64_t v10 = *(void *)(type metadata accessor for SomeEvent() - 8);
    uint64_t v11 = v8 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v12 = *(void *)(v10 + 72);
    do
    {
      sub_25245C15C(v11, v0 + 2, v21);
      long long v13 = *(_OWORD *)v21;
      unint64_t v15 = *(void *)(v20 + 16);
      unint64_t v14 = *(void *)(v20 + 24);
      if (v15 >= v14 >> 1)
      {
        long long v18 = *(_OWORD *)v21;
        sub_2523E05C8(v14 > 1, v15 + 1, 1);
        long long v13 = v18;
      }
      v0[13] = v20;
      *(void *)(v20 + 16) = v15 + 1;
      *(_OWORD *)(v20 + 16 * v15 + 32) = v13;
      v11 += v12;
      --v1;
    }
    while (v1);
    uint64_t v16 = swift_task_alloc();
    v0[14] = v16;
    *(void *)(v16 + 16) = v20;
    uint64_t v19 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C05FE0 + dword_269C05FE0);
    id v17 = (void *)swift_task_alloc();
    v0[15] = v17;
    *id v17 = v0;
    v17[1] = sub_25245E75C;
    v19((uint64_t)v19, (uint64_t)sub_25245F39C, v16);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_25245E75C()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_25245E9A0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_25245E878;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25245E878()
{
  uint64_t v1 = v0[9];
  swift_bridgeObjectRelease();
  sub_2523E7A8C(v1);
  uint64_t v2 = sub_25247A680();
  os_log_type_t v3 = sub_25247AD60();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_2523CF000, v2, v3, "Successfully wrote event(s)", v4, 2u);
    MEMORY[0x2533B5DC0](v4, -1, -1);
  }
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v0[11];
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[6];

  v5(v6, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_25245E9A0()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = v0[8];
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_2523E7A8C(v2);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_25247A680();
  os_log_type_t v6 = sub_25247AD40();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (void *)v0[16];
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138543362;
    id v10 = v7;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v11;
    sub_25247AEB0();
    *uint64_t v9 = v11;

    _os_log_impl(&dword_2523CF000, v5, v6, "Failed to write event(s): %{public}@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v9, -1, -1);
    MEMORY[0x2533B5DC0](v8, -1, -1);
  }
  else
  {
    uint64_t v12 = (void *)v0[16];
  }
  long long v13 = (void (*)(uint64_t, uint64_t))v0[11];
  uint64_t v14 = v0[8];
  uint64_t v15 = v0[6];

  v13(v14, v15);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_25245EBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  uint64_t v4 = sub_25247A6A0();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25245EC84, 0, 0);
}

void sub_25245EC84()
{
  if (*(uint64_t *)(v0 + 56) < 1)
  {
    __break(1u);
  }
  else
  {
    sub_2523E7A8C(*(void *)(v0 + 96));
    uint64_t v1 = sub_25247A680();
    os_log_type_t v2 = sub_25247AD60();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = *(void *)(v0 + 56);
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 134217984;
      *(void *)(v0 + 32) = v3;
      sub_25247AEB0();
      _os_log_impl(&dword_2523CF000, v1, v2, "Writing %ld fake event(s)", v4, 0xCu);
      MEMORY[0x2533B5DC0](v4, -1, -1);
    }

    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v6 = *(void *)(v0 + 64);
    uint64_t v7 = *(void *)(v0 + 72);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    uint64_t v9 = *(void *)(v0 + 56);
    *(void *)(v0 + 104) = v8;
    *(void *)(v0 + 112) = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    long long v12 = *(_OWORD *)(v0 + 40);
    v8(v5, v6);
    uint64_t v10 = swift_task_alloc();
    *(void *)(v0 + 120) = v10;
    *(_OWORD *)(v10 + 16) = v12;
    *(void *)(v10 + 32) = v9;
    long long v13 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269C05FE0 + dword_269C05FE0);
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_25245EE54;
    v13((uint64_t)v13, (uint64_t)sub_25245F390, v10);
  }
}

uint64_t sub_25245EE54()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v2 = sub_25245F0B8;
  }
  else
  {
    swift_task_dealloc();
    os_log_type_t v2 = sub_25245EF70;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25245EF70()
{
  sub_2523E7A8C(v0[11]);
  uint64_t v1 = sub_25247A680();
  os_log_type_t v2 = sub_25247AD60();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[7];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    v0[3] = v3;
    sub_25247AEB0();
    _os_log_impl(&dword_2523CF000, v1, v2, "Successfully wrote %ld fake events", v4, 0xCu);
    MEMORY[0x2533B5DC0](v4, -1, -1);
  }
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v0[13];
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[8];

  v5(v6, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_25245F0B8()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = v0[10];
  swift_task_dealloc();
  sub_2523E7A8C(v2);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_25247A680();
  os_log_type_t v6 = sub_25247AD40();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (void *)v0[17];
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138543362;
    id v10 = v7;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v11;
    sub_25247AEB0();
    *uint64_t v9 = v11;

    _os_log_impl(&dword_2523CF000, v5, v6, "Failed to write fake event(s): %{public}@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C04A70);
    swift_arrayDestroy();
    MEMORY[0x2533B5DC0](v9, -1, -1);
    MEMORY[0x2533B5DC0](v8, -1, -1);
  }
  else
  {
    long long v12 = (void *)v0[17];
  }
  long long v13 = (void (*)(uint64_t, uint64_t))v0[13];
  uint64_t v14 = v0[10];
  uint64_t v15 = v0[8];

  v13(v14, v15);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

void sub_25245F2B4(void *a1, uint64_t a2)
{
  sub_25244C544(a1, a2, *(void **)(v2 + 16));
}

ValueMetadata *type metadata accessor for EventManager()
{
  return &type metadata for EventManager;
}

uint64_t sub_25245F2CC(uint64_t a1)
{
  return sub_25245BA70(a1, *(void **)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_25245F2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C045E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_25245F340()
{
  sub_25245BCE8(v0);
}

void sub_25245F348()
{
  sub_25245BE6C(v0);
}

uint64_t sub_25245F350()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_25245F390(void *a1, uint64_t a2)
{
  sub_25245ADB4(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_25245F39C(void *a1, uint64_t a2)
{
}

uint64_t sub_25245F3A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SomeEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25245F400(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25245F448(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06000);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t HMVCommands.UnpackedEvent.dataType.getter()
{
  return *(void *)v0;
}

uint64_t HMVCommands.UnpackedEvent.data.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_252408194(v1, *(void *)(v0 + 16));
  return v1;
}

uint64_t static HMVCommands.dumpLocalDatabase()()
{
  v0[38] = type metadata accessor for SomeAccessoryEvent();
  v0[39] = swift_task_alloc();
  v0[40] = swift_task_alloc();
  type metadata accessor for SomeEvent();
  v0[41] = swift_task_alloc();
  v0[42] = swift_task_alloc();
  v0[43] = type metadata accessor for EventRecord.DecodedEvent(0);
  v0[44] = swift_task_alloc();
  v0[45] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C06010);
  v0[46] = swift_task_alloc();
  uint64_t v1 = type metadata accessor for EventRecord(0);
  v0[47] = v1;
  v0[48] = *(void *)(v1 - 8);
  v0[49] = swift_task_alloc();
  uint64_t v2 = sub_25247A540();
  v0[50] = v2;
  v0[51] = *(void *)(v2 - 8);
  v0[52] = swift_task_alloc();
  v0[53] = swift_task_alloc();
  v0[54] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C06018);
  v0[55] = swift_task_alloc();
  v0[56] = swift_task_alloc();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269C04590 + dword_269C04590);
  id v3 = (void *)swift_task_alloc();
  v0[57] = v3;
  *id v3 = v0;
  v3[1] = sub_25245F7A0;
  return v5((uint64_t)sub_252460920, 0);
}

uint64_t sub_25245F7A0(uint64_t a1)
{
  id v3 = (void *)*v2;
  v3[58] = a1;
  v3[59] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_25245F994, 0, 0);
  }
}

uint64_t sub_25245F994()
{
  uint64_t v120 = v0;
  uint64_t v109 = (long long *)(v0 + 2);
  id v116 = (long long *)(v0 + 10);
  uint64_t v1 = (uint64_t)(v0 + 18);
  os_log_type_t v98 = v0 + 28;
  uint64_t v99 = v0 + 23;
  uint64_t v97 = v0 + 33;
  uint64_t v2 = v0[58];
  uint64_t v3 = v0[51];
  uint64_t v4 = v0[48];
  uint64_t v100 = v0[47];
  uint64_t v118 = (void *)MEMORY[0x263F8EE80];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C06020);
  sub_25247A780();
  int64_t v5 = 0;
  uint64_t v101 = v2 + 64;
  uint64_t v6 = -1;
  uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
  if (-v7 < 64) {
    uint64_t v6 = ~(-1 << -(char)v7);
  }
  unint64_t v8 = v6 & *(void *)(v2 + 64);
  uint64_t v9 = (void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16);
  os_log_type_t v110 = (void (**)(void))(v3 + 32);
  uint64_t v104 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v105 = v2;
  uint64_t v112 = v3;
  uint64_t v107 = (void (**)(uint64_t, uint64_t))(v3 + 8);
  int64_t v103 = (unint64_t)(63 - v7) >> 6;
  uint64_t v117 = v0;
  id v108 = (void *)v0[59];
  id v10 = v118;
  uint64_t v111 = (uint64_t)(v0 + 18);
  uint64_t v106 = (void (**)(uint64_t, void, void))(v3 + 16);
  while (1)
  {
    if (v8)
    {
      int64_t v114 = v5;
      uint64_t v115 = (v8 - 1) & v8;
      unint64_t v15 = __clz(__rbit64(v8)) | (v5 << 6);
      uint64_t v16 = v117;
LABEL_8:
      uint64_t v17 = v16[55];
      (*(void (**)(uint64_t, unint64_t, void))(v112 + 16))(v17, *(void *)(v105 + 48) + *(void *)(v112 + 72) * v15, v16[50]);
      uint64_t v18 = (void *)(*(void *)(v105 + 56) + 24 * v15);
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06028);
      uint64_t v20 = (void *)(v17 + *(int *)(v19 + 48));
      uint64_t v21 = v18[1];
      unint64_t v22 = v18[2];
      *uint64_t v20 = *v18;
      v20[1] = v21;
      v20[2] = v22;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 0, 1, v19);
      sub_252408194(v21, v22);
      goto LABEL_15;
    }
    int64_t v23 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_68;
    }
    uint64_t v16 = v117;
    if (v23 >= v103)
    {
      int64_t v114 = v5;
    }
    else
    {
      unint64_t v24 = *(void *)(v101 + 8 * v23);
      if (v24) {
        goto LABEL_12;
      }
      int64_t v83 = v5 + 2;
      if (v5 + 2 >= v103) {
        goto LABEL_59;
      }
      unint64_t v24 = *(void *)(v101 + 8 * v83);
      if (v24) {
        goto LABEL_36;
      }
      if (v5 + 3 >= v103)
      {
        int64_t v114 = v5 + 2;
      }
      else
      {
        unint64_t v24 = *(void *)(v101 + 8 * (v5 + 3));
        if (v24)
        {
          int64_t v23 = v5 + 3;
          goto LABEL_12;
        }
        int64_t v83 = v5 + 4;
        if (v5 + 4 < v103)
        {
          unint64_t v24 = *(void *)(v101 + 8 * v83);
          if (v24)
          {
LABEL_36:
            int64_t v23 = v83;
LABEL_12:
            int64_t v114 = v23;
            uint64_t v115 = (v24 - 1) & v24;
            unint64_t v15 = __clz(__rbit64(v24)) + (v23 << 6);
            goto LABEL_8;
          }
          while (1)
          {
            int64_t v23 = v83 + 1;
            if (__OFADD__(v83, 1)) {
              goto LABEL_69;
            }
            if (v23 >= v103) {
              break;
            }
            unint64_t v24 = *(void *)(v101 + 8 * v23);
            ++v83;
            if (v24) {
              goto LABEL_12;
            }
          }
          int64_t v23 = v103 - 1;
LABEL_59:
          int64_t v114 = v23;
          goto LABEL_14;
        }
        int64_t v114 = v5 + 3;
      }
    }
LABEL_14:
    uint64_t v25 = v117[55];
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06028);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
    uint64_t v115 = 0;
LABEL_15:
    uint64_t v27 = v16[56];
    sub_252408294(v16[55], v27, &qword_269C06018);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06028);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v27, 1, v28) == 1) {
      break;
    }
    uint64_t v29 = (uint64_t *)(v16[56] + *(int *)(v28 + 48));
    uint64_t v30 = *v29;
    uint64_t v31 = v29[1];
    unint64_t v32 = v29[2];
    (*v110)(v16[54]);
    uint64_t v113 = v30;
    unint64_t v33 = v30 - 1;
    if (v33 >= 8)
    {
      uint64_t v39 = v31;
      unint64_t v40 = v32;
      uint64_t v37 = *v9;
      goto LABEL_20;
    }
    uint64_t v34 = v16[53];
    uint64_t v35 = v16[46];
    uint64_t v36 = *v9;
    (*v9)(v34, v16[54], v16[50]);
    uint64_t v37 = v36;
    LOBYTE(v119[0]) = v33;
    sub_252408194(v31, v32);
    EventRecord.init(identifier:dataType:data:coalescingWindowSeconds:)(v34, (unsigned __int8 *)v119, v31, v32, 0, 1, v35);
    if (v108)
    {
      uint64_t v38 = v16;
      uint64_t v39 = v31;
      unint64_t v40 = v32;
      uint64_t v42 = v38[46];
      uint64_t v41 = v38[47];

      (*v104)(v42, 1, 1, v41);
      sub_2523D6FB8(v42, &qword_269C06010);
      id v108 = 0;
LABEL_20:
      *(void *)(v1 + 32) = 0;
      *(_OWORD *)uint64_t v1 = 0u;
      *(_OWORD *)(v1 + 16) = 0u;
      goto LABEL_21;
    }
    unint64_t v102 = v36;
    uint64_t v66 = v16[49];
    uint64_t v67 = v16[46];
    (*v104)(v67, 0, 1, v16[47]);
    sub_2524631E4(v67, v66, type metadata accessor for EventRecord);
    uint64_t v68 = (uint64_t *)(v66 + *(int *)(v100 + 32));
    uint64_t v69 = *v68;
    uint64_t v70 = v68[1];
    LOBYTE(v119[0]) = *(unsigned char *)(v66 + *(int *)(v100 + 28));
    sub_25243D130(v69, v70, v119);
    sub_25246311C(v16[45], v16[44], type metadata accessor for EventRecord.DecodedEvent);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v72 = v16[44];
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v73 = v16;
      uint64_t v39 = v31;
      unint64_t v40 = v32;
      v73[26] = type metadata accessor for FakeEvent();
      v73[27] = sub_2524635A0(&qword_269C052E8, (void (*)(uint64_t))type metadata accessor for FakeEvent);
      uint64_t v74 = (uint64_t)v99;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v99);
      sub_2524631E4(v72, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for FakeEvent);
    }
    else
    {
      uint64_t v77 = v16[41];
      uint64_t v76 = v16[42];
      uint64_t v79 = v16[39];
      uint64_t v78 = v16[40];
      sub_2524631E4(v72, v76, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      sub_25246311C(v76, v77, (uint64_t (*)(void))type metadata accessor for SomeEvent);
      sub_2524631E4(v77, v78, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      sub_25246311C(v78, v79, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      uint64_t v39 = v31;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          unint64_t v40 = v32;
          uint64_t v73 = v117;
          uint64_t v80 = v117[39];
          v117[36] = type metadata accessor for DoorEvent();
          v117[37] = sub_2524635A0(&qword_269C04B50, (void (*)(uint64_t))type metadata accessor for DoorEvent);
          uint64_t v81 = __swift_allocate_boxed_opaque_existential_1(v97);
          unint64_t v82 = type metadata accessor for DoorEvent;
          break;
        case 2u:
          unint64_t v40 = v32;
          uint64_t v73 = v117;
          uint64_t v80 = v117[39];
          v117[36] = type metadata accessor for GarageDoorEvent();
          v117[37] = sub_2524635A0(&qword_269C04B48, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
          uint64_t v81 = __swift_allocate_boxed_opaque_existential_1(v97);
          unint64_t v82 = type metadata accessor for GarageDoorEvent;
          break;
        case 3u:
          unint64_t v40 = v32;
          uint64_t v73 = v117;
          uint64_t v80 = v117[39];
          v117[36] = type metadata accessor for LockEvent();
          v117[37] = sub_2524635A0(&qword_269C04B40, (void (*)(uint64_t))type metadata accessor for LockEvent);
          uint64_t v81 = __swift_allocate_boxed_opaque_existential_1(v97);
          unint64_t v82 = type metadata accessor for LockEvent;
          break;
        case 4u:
          unint64_t v40 = v32;
          uint64_t v73 = v117;
          uint64_t v80 = v117[39];
          v117[36] = type metadata accessor for SecuritySystemEvent();
          v117[37] = sub_2524635A0(&qword_269C04B38, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
          uint64_t v81 = __swift_allocate_boxed_opaque_existential_1(v97);
          unint64_t v82 = type metadata accessor for SecuritySystemEvent;
          break;
        case 5u:
          unint64_t v40 = v32;
          uint64_t v73 = v117;
          uint64_t v80 = v117[39];
          v117[36] = type metadata accessor for SmokeDetectorEvent();
          v117[37] = sub_2524635A0(&qword_269C04B30, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
          uint64_t v81 = __swift_allocate_boxed_opaque_existential_1(v97);
          unint64_t v82 = type metadata accessor for SmokeDetectorEvent;
          break;
        case 6u:
          unint64_t v40 = v32;
          uint64_t v73 = v117;
          uint64_t v80 = v117[39];
          v117[36] = type metadata accessor for WindowEvent();
          v117[37] = sub_2524635A0(&qword_269C04B28, (void (*)(uint64_t))type metadata accessor for WindowEvent);
          uint64_t v81 = __swift_allocate_boxed_opaque_existential_1(v97);
          unint64_t v82 = type metadata accessor for WindowEvent;
          break;
        default:
          unint64_t v40 = v32;
          uint64_t v73 = v117;
          uint64_t v80 = v117[39];
          v117[36] = type metadata accessor for ContactSensorEvent();
          v117[37] = sub_2524635A0(&qword_269C04B58, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
          uint64_t v81 = __swift_allocate_boxed_opaque_existential_1(v97);
          unint64_t v82 = type metadata accessor for ContactSensorEvent;
          break;
      }
      sub_2524631E4(v80, (uint64_t)v81, (uint64_t (*)(void))v82);
      uint64_t v84 = v73[42];
      uint64_t v85 = v73[40];
      uint64_t v86 = v73[36];
      uint64_t v87 = v73[37];
      uint64_t v88 = __swift_project_boxed_opaque_existential_1(v97, v86);
      v73[31] = v86;
      v73[32] = *(void *)(v87 + 16);
      uint64_t v89 = __swift_allocate_boxed_opaque_existential_1(v98);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v86 - 8) + 16))(v89, v88, v86);
      sub_252463184(v85, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
      uint64_t v90 = v73[31];
      uint64_t v91 = v73[32];
      unint64_t v92 = __swift_project_boxed_opaque_existential_1(v98, v90);
      v73[26] = v90;
      v73[27] = *(void *)(v91 + 8);
      uint64_t v74 = (uint64_t)v99;
      uint64_t v93 = __swift_allocate_boxed_opaque_existential_1(v99);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v90 - 8) + 16))(v93, v92, v90);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
      sub_252463184(v84, (uint64_t (*)(void))type metadata accessor for SomeEvent);
    }
    uint64_t v94 = v73[49];
    sub_252463184(v73[45], type metadata accessor for EventRecord.DecodedEvent);
    sub_252463184(v94, type metadata accessor for EventRecord);
    uint64_t v1 = v111;
    sub_252408294(v74, v111, &qword_269C06030);
    id v108 = 0;
    uint64_t v37 = v102;
LABEL_21:
    uint64_t v43 = v117[52];
    uint64_t v44 = v37;
    v37(v43, v117[54], v117[50]);
    sub_2523D6F54(v1, (uint64_t)v109, &qword_269C06030);
    v117[7] = v113;
    v117[8] = v39;
    v117[9] = v40;
    long long v45 = v109[1];
    *id v116 = *v109;
    v116[1] = v45;
    long long v46 = v109[3];
    v116[2] = v109[2];
    v116[3] = v46;
    sub_252408194(v39, v40);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v119[0] = v10;
    unint64_t v49 = sub_252460DBC(v43);
    uint64_t v50 = v10[2];
    BOOL v51 = (v48 & 1) == 0;
    uint64_t v52 = v50 + v51;
    if (__OFADD__(v50, v51))
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
      JUMPOUT(0x252460904);
    }
    char v53 = v48;
    if (v10[3] >= v52)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v48) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_252462DFC();
        id v10 = (void *)v119[0];
        if (v53) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      uint64_t v54 = v117[52];
      sub_252461E6C(v52, isUniquelyReferenced_nonNull_native);
      id v10 = (void *)v119[0];
      unint64_t v55 = sub_252460DBC(v54);
      if ((v53 & 1) != (v56 & 1))
      {
        return sub_25247B2C0();
      }
      unint64_t v49 = v55;
      if (v53)
      {
LABEL_4:
        sub_2524630B4((uint64_t)v116, v10[7] + (v49 << 6));
        goto LABEL_5;
      }
    }
    uint64_t v57 = v117[52];
    uint64_t v58 = v117[50];
    v10[(v49 >> 6) + 8] |= 1 << v49;
    v44(v10[6] + *(void *)(v112 + 72) * v49, v57, v58);
    uint64_t v59 = (_OWORD *)(v10[7] + (v49 << 6));
    long long v60 = *v116;
    long long v61 = v116[1];
    long long v62 = v116[3];
    void v59[2] = v116[2];
    v59[3] = v62;
    *uint64_t v59 = v60;
    v59[1] = v61;
    uint64_t v63 = v10[2];
    BOOL v64 = __OFADD__(v63, 1);
    uint64_t v65 = v63 + 1;
    if (v64) {
      goto LABEL_67;
    }
    v10[2] = v65;
LABEL_5:
    uint64_t v11 = v117[54];
    uint64_t v12 = v117[52];
    uint64_t v13 = v117[50];
    swift_bridgeObjectRelease();
    uint64_t v14 = *v107;
    (*v107)(v12, v13);
    sub_2524081EC(v39, v40);
    uint64_t v1 = v111;
    sub_2523D6FB8(v111, &qword_269C06030);
    v14(v11, v13);
    uint64_t v9 = (void (**)(unint64_t, uint64_t, uint64_t))v106;
    int64_t v5 = v114;
    unint64_t v8 = v115;
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v95 = (uint64_t (*)(void *))v16[1];
  return v95(v10);
}

void sub_252460920(void *a1, uint64_t a2)
{
  v4[4] = sub_2524635E8;
  v4[5] = a2;
  v4[0] = MEMORY[0x263EF8330];
  v4[1] = 1107296256;
  v4[2] = sub_252460C60;
  v4[3] = &block_descriptor_19;
  uint64_t v3 = _Block_copy(v4);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_hmvutilDumpLocalDatabaseWithReply_, v3);
  _Block_release(v3);
}

void sub_2524609E8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04A30);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a2;
    uint64_t v10 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = 0;
    v11[3] = 0;
    v11[4] = a3;
    v11[5] = sub_252463AB8;
    void v11[6] = v9;
    id v12 = a2;
    id v13 = a2;
    swift_retain();
    swift_retain();
    sub_25240BCB0((uint64_t)v8, (uint64_t)&unk_269C06060, (uint64_t)v11);
    swift_release();
    swift_release();
  }
  else if (a1)
  {
    uint64_t v14 = sub_252463608(a1);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v14;
    uint64_t v16 = sub_25247AB70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = 0;
    v17[3] = 0;
    void v17[4] = a3;
    uint64_t v17[5] = sub_252463A74;
    v17[6] = v15;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_25240BCB0((uint64_t)v8, (uint64_t)&unk_269C045D0, (uint64_t)v17);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_252460C60(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  int64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_25247A540();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C06058);
    sub_2524635A0((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
    uint64_t v4 = sub_25247A770();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

unint64_t sub_252460D44(uint64_t a1, uint64_t a2)
{
  sub_25247B350();
  sub_25247A8D0();
  uint64_t v4 = sub_25247B390();

  return sub_252460E54(a1, a2, v4);
}

unint64_t sub_252460DBC(uint64_t a1)
{
  sub_25247A540();
  sub_2524635A0((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  uint64_t v2 = sub_25247A7F0();

  return sub_252460F38(a1, v2);
}

unint64_t sub_252460E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_25247B260() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        id v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_25247B260() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_252460F38(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    id v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    BOOL v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_2524635A0(&qword_269C04AE0, MEMORY[0x263F07508]);
      char v15 = sub_25247A820();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_2524610F8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C06078);
  char v42 = a2;
  uint64_t v6 = sub_25247B0E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    unint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_25247B350();
    sub_25247A8D0();
    uint64_t result = sub_25247B390();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    void *v19 = v34;
    v19[1] = v33;
    uint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *uint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_252461420(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_25247A540();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C06048);
  int v46 = a2;
  uint64_t v10 = sub_25247B0E0();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  char v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    unint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_2524635A0((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
    uint64_t result = sub_25247A7F0();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  unint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_252461844(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C05698);
  char v37 = a2;
  uint64_t v6 = sub_25247B0E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v35) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v36 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v35) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v36 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    unint64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    unint64_t v25 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
    if (v37)
    {
      sub_2523DFC24(v25, (uint64_t)v38);
    }
    else
    {
      sub_2523D918C((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_25247B350();
    sub_25247A8D0();
    uint64_t result = sub_25247B390();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *uint64_t v15 = v24;
    v15[1] = v23;
    uint64_t result = sub_2523DFC24(v38, *(void *)(v7 + 56) + 40 * v14);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v19 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v19 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_252461B6C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C06070);
  uint64_t v6 = sub_25247B0E0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_25242E180(v24, v35);
      }
      else
      {
        sub_252415E78((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_25247B350();
      sub_25247A8D0();
      uint64_t result = sub_25247B390();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *uint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_25242E180(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_252461E6C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v53 = sub_25247A540();
  uint64_t v5 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C06050);
  int v54 = a2;
  uint64_t v9 = sub_25247B0E0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  unint64_t v49 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v47 = v2;
  int64_t v48 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v50 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  unint64_t v55 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  uint64_t v51 = v8;
  uint64_t v52 = v7;
  while (1)
  {
    if (v14)
    {
      unint64_t v23 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v24 = v23 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v48) {
      break;
    }
    unint64_t v26 = v49;
    unint64_t v27 = v49[v25];
    ++v17;
    if (!v27)
    {
      int64_t v17 = v25 + 1;
      if (v25 + 1 >= v48) {
        goto LABEL_34;
      }
      unint64_t v27 = v49[v17];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v48)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v47;
          if ((v54 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v49[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v17 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v48) {
              goto LABEL_34;
            }
            unint64_t v27 = v49[v17];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v28;
      }
    }
LABEL_21:
    unint64_t v14 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v17 << 6);
LABEL_22:
    uint64_t v29 = v5;
    uint64_t v30 = *(void *)(v5 + 72);
    unint64_t v31 = *(void *)(v8 + 48) + v30 * v24;
    uint64_t v32 = v52;
    uint64_t v33 = v53;
    if (v54)
    {
      (*v55)(v52, v31, v53);
      char v34 = (long long *)(*(void *)(v8 + 56) + (v24 << 6));
      long long v36 = *v34;
      long long v35 = v34[1];
      long long v37 = v34[3];
      long long v58 = v34[2];
      long long v59 = v37;
      long long v56 = v36;
      long long v57 = v35;
    }
    else
    {
      (*v50)(v52, v31, v53);
      sub_2523D6F54(*(void *)(v8 + 56) + (v24 << 6), (uint64_t)&v56, &qword_269C06038);
    }
    sub_2524635A0((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
    uint64_t result = sub_25247A7F0();
    uint64_t v38 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v39 = result & ~v38;
    unint64_t v40 = v39 >> 6;
    if (((-1 << v39) & ~*(void *)(v15 + 8 * (v39 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v39) & ~*(void *)(v15 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v41 = 0;
      unint64_t v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v43 = v40 == v42;
        if (v40 == v42) {
          unint64_t v40 = 0;
        }
        v41 |= v43;
        uint64_t v44 = *(void *)(v15 + 8 * v40);
      }
      while (v44 == -1);
      unint64_t v18 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v55)(*(void *)(v10 + 48) + v30 * v18, v32, v33);
    unint64_t v19 = (_OWORD *)(*(void *)(v10 + 56) + (v18 << 6));
    long long v21 = v58;
    long long v20 = v59;
    long long v22 = v57;
    _OWORD *v19 = v56;
    v19[1] = v22;
    void v19[2] = v21;
    uint64_t v19[3] = v20;
    ++*(void *)(v10 + 16);
    uint64_t v5 = v29;
    uint64_t v8 = v51;
  }
  swift_release();
  uint64_t v3 = v47;
  unint64_t v26 = v49;
  if ((v54 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v45 = 1 << *(unsigned char *)(v8 + 32);
  if (v45 >= 64) {
    bzero(v26, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v26 = -1 << v45;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_2524622C4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C06040);
  char v38 = a2;
  uint64_t v6 = sub_25247B0E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    long long v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_25247B350();
    sub_25247A8D0();
    uint64_t result = sub_25247B390();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  long long v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *long long v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_2524625D4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C06078);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25247B0D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_252462790()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C06048);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_25247B0D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void **)(*(void *)(v5 + 56) + v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_252462A28()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C05698);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25247B0D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    sub_2523D918C(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    sub_2523DFC24(v26, *(void *)(v4 + 56) + v20);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_252462C14()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C06070);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25247B0D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_252415E78(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    sub_25242E180(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_252462DFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25247A540();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C06050);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_25247B0D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v26 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  uint64_t v27 = v6 + 64;
  int64_t v28 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v29 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v28) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v23);
    ++v11;
    if (!v24)
    {
      int64_t v11 = v23 + 1;
      if (v23 + 1 >= v28) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v11);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    unint64_t v18 = v16 << 6;
    sub_2523D6F54(*(void *)(v6 + 56) + v18, (uint64_t)v30, &qword_269C06038);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    uint64_t v19 = (_OWORD *)(*(void *)(v8 + 56) + v18);
    long long v21 = v30[2];
    long long v20 = v30[3];
    long long v22 = v30[1];
    _OWORD *v19 = v30[0];
    v19[1] = v22;
    void v19[2] = v21;
    uint64_t v19[3] = v20;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v26;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24)
  {
    int64_t v11 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v11 >= v28) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v11);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2524630B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_25246311C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_252463184(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2524631E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t _s13UnpackedEventVwxx(uint64_t a1)
{
  return sub_2524081EC(*(void *)(a1 + 8), *(void *)(a1 + 16));
}

void *_s13UnpackedEventVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  unint64_t v4 = a2[2];
  sub_252408194(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

void *_s13UnpackedEventVwca(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  unint64_t v4 = a2[2];
  sub_252408194(v3, v4);
  uint64_t v5 = a1[1];
  unint64_t v6 = a1[2];
  a1[1] = v3;
  a1[2] = v4;
  sub_2524081EC(v5, v6);
  return a1;
}

uint64_t _s13UnpackedEventVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  sub_2524081EC(v4, v5);
  return a1;
}

uint64_t _s13UnpackedEventVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 16) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s13UnpackedEventVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)id result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HMVCommands.UnpackedEvent()
{
  return &type metadata for HMVCommands.UnpackedEvent;
}

id sub_2524633EC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C06040);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25247B0D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    long long v20 = *(void **)(*(void *)(v2 + 56) + v19);
    long long v21 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2524635A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2524635E8(uint64_t a1, void *a2)
{
  sub_2524609E8(a1, a2, v2);
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t sub_252463608(uint64_t a1)
{
  uint64_t v46 = sub_25247A540();
  uint64_t v2 = *(void *)(v46 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v46);
  uint64_t v45 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v3);
  unint64_t v40 = &v33[-v5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C06068);
  uint64_t result = sub_25247B0D0();
  unint64_t v7 = (void *)result;
  int64_t v8 = 0;
  uint64_t v42 = a1;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v34 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v35 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v39 = v2 + 16;
  uint64_t v41 = v2;
  uint64_t v44 = v2 + 32;
  uint64_t v36 = result + 64;
  uint64_t v37 = (void *)result;
  uint64_t v38 = MEMORY[0x263F8EE58] + 8;
  if ((v11 & v9) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  int64_t v43 = v8;
  for (unint64_t i = v13 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v17 << 6))
  {
    uint64_t v20 = v41;
    uint64_t v19 = v42;
    unint64_t v21 = *(void *)(v41 + 72) * i;
    int64_t v22 = v40;
    uint64_t v23 = v46;
    (*(void (**)(unsigned char *, unint64_t, uint64_t))(v41 + 16))(v40, *(void *)(v42 + 48) + v21, v46);
    uint64_t v24 = *(void *)(*(void *)(v19 + 56) + 8 * i);
    int64_t v25 = *(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 32);
    uint64_t result = v25(v45, v22, v23);
    if (!*(void *)(v24 + 16))
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    sub_252415E78(v24 + 32, (uint64_t)v50);
    swift_bridgeObjectRetain();
    uint64_t result = swift_dynamicCast();
    if (*(void *)(v24 + 16) < 2uLL) {
      goto LABEL_26;
    }
    uint64_t v26 = v51;
    sub_252415E78(v24 + 64, (uint64_t)v49);
    swift_dynamicCast();
    uint64_t v28 = v47;
    uint64_t v27 = v48;
    swift_bridgeObjectRelease();
    unint64_t v7 = v37;
    *(void *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t result = v25((unsigned char *)(v7[6] + v21), v45, v46);
    uint64_t v29 = (void *)(v7[7] + 24 * i);
    *uint64_t v29 = v26;
    v29[1] = v28;
    v29[2] = v27;
    uint64_t v30 = v7[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_27;
    }
    v7[2] = v32;
    int64_t v8 = v43;
    if (v12) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v15 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_28;
    }
    if (v15 >= v35) {
      return (uint64_t)v7;
    }
    unint64_t v16 = *(void *)(v34 + 8 * v15);
    int64_t v17 = v8 + 1;
    if (!v16)
    {
      int64_t v17 = v8 + 2;
      if (v8 + 2 >= v35) {
        return (uint64_t)v7;
      }
      unint64_t v16 = *(void *)(v34 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v8 + 3;
        if (v8 + 3 >= v35) {
          return (uint64_t)v7;
        }
        unint64_t v16 = *(void *)(v34 + 8 * v17);
        if (!v16) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v12 = (v16 - 1) & v16;
    int64_t v43 = v17;
  }
  uint64_t v18 = v8 + 4;
  if (v8 + 4 >= v35) {
    return (uint64_t)v7;
  }
  unint64_t v16 = *(void *)(v34 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v8 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v35) {
      return (uint64_t)v7;
    }
    unint64_t v16 = *(void *)(v34 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_18;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2524639F0()
{
  return sub_25247AAD0();
}

uint64_t sub_252463A3C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_252463A74()
{
  return sub_2524639F0();
}

uint64_t sub_252463A80()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_252463AB8(uint64_t a1)
{
  return sub_2523D6B98(a1, (id *)(v1 + 16));
}

void EncryptionKeyRecord.init(from:)(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_25247A4B0();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25247A540();
  uint64_t v50 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_25247AE60() == 0x6974707972636E45 && v13 == 0xED000079654B6E6FLL)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = sub_25247B260();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
      unint64_t v23 = type metadata accessor for EncryptionKeyRecord();
      *(void *)&v49[0] = 0;
      *((void *)&v49[0] + 1) = 0xE000000000000000;
      sub_25247AF40();
      swift_bridgeObjectRelease();
      *(void *)&v49[0] = 0xD00000000000001FLL;
      *((void *)&v49[0] + 1) = 0x800000025247CF30;
      sub_25247AE60();
      sub_25247A920();
      swift_bridgeObjectRelease();
      unint64_t v22 = *((void *)&v49[0] + 1);
      unint64_t v21 = *(void *)&v49[0];
      goto LABEL_10;
    }
  }
  uint64_t v42 = a2;
  uint64_t v45 = v12;
  id v15 = objc_msgSend(a1, sel_recordID);
  id v16 = objc_msgSend(v15, sel_recordName);

  sub_25247A840();
  sub_25247A4C0();
  swift_bridgeObjectRelease();
  uint64_t v17 = v50;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v9, 1, v10) == 1)
  {
    sub_2523D6FB8((uint64_t)v9, (uint64_t *)&unk_269C047F0);
    uint64_t v18 = type metadata accessor for EncryptionKeyRecord();
    *(void *)&v49[0] = 0;
    *((void *)&v49[0] + 1) = 0xE000000000000000;
    sub_25247AF40();
    swift_bridgeObjectRelease();
    *(void *)&v49[0] = 0xD00000000000002FLL;
    *((void *)&v49[0] + 1) = 0x800000025247CF50;
    id v19 = objc_msgSend(a1, sel_recordID);
    id v20 = objc_msgSend(v19, sel_recordName);

    sub_25247A840();
    sub_25247A920();
    swift_bridgeObjectRelease();
    unint64_t v22 = *((void *)&v49[0] + 1);
    unint64_t v21 = *(void *)&v49[0];
    unint64_t v23 = v18 | 0x8000000000000000;
LABEL_10:
    sub_25243D91C();
    swift_allocError();
    *uint64_t v29 = v23;
    v29[1] = v21;
    v29[2] = v22;
    swift_willThrow();

    return;
  }
  uint64_t v41 = v6;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  int64_t v25 = v45;
  v24(v45, v9, v10);
  id v26 = objc_msgSend(a1, sel_encryptedValues);
  uint64_t v27 = v46;
  uint64_t v28 = sub_252464320(1, v26);
  if (v27)
  {
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v17 + 8))(v25, v10);
  }
  else
  {
    uint64_t v30 = v28;
    uint64_t v31 = (uint64_t)v41;
    if (v28 == 1)
    {
      swift_unknownObjectRetain();
      sub_25246458C(v26, v49);
      swift_unknownObjectRelease();
      long long v35 = v49[0];
      sub_2524654F4(*(uint64_t *)&v49[0], *((unint64_t *)&v49[0] + 1), (uint64_t)&v47);
      if (v48)
      {
        sub_2523DFC24(&v47, (uint64_t)v49);
        swift_unknownObjectRetain();
        sub_252464804(v26, v31);

        sub_2524081EC(v35, *((unint64_t *)&v35 + 1));
        swift_unknownObjectRelease_n();
        uint64_t v39 = v42;
        v24(v42, v45, v10);
        uint64_t v40 = type metadata accessor for EncryptionKeyRecord();
        sub_2523DFC24(v49, (uint64_t)&v39[*(int *)(v40 + 20)]);
        (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(&v39[*(int *)(v40 + 24)], v31, v44);
      }
      else
      {
        sub_2523D6FB8((uint64_t)&v47, &qword_269C06080);
        uint64_t v36 = type metadata accessor for EncryptionKeyRecord();
        *(void *)&v49[0] = 0;
        *((void *)&v49[0] + 1) = 0xE000000000000000;
        sub_25247AF40();
        sub_25247A920();
        LOBYTE(v47) = 0;
        sub_25247B080();
        sub_25247A920();
        long long v37 = v49[0];
        sub_25243D91C();
        swift_allocError();
        *(void *)uint64_t v38 = v36 | 0x8000000000000000;
        *(_OWORD *)(v38 + 8) = v37;
        swift_willThrow();
        sub_2524081EC(v35, *((unint64_t *)&v35 + 1));
        swift_unknownObjectRelease();

        (*(void (**)(char *, uint64_t))(v50 + 8))(v45, v10);
      }
    }
    else
    {
      uint64_t v32 = type metadata accessor for EncryptionKeyRecord();
      *(void *)&v49[0] = 0;
      *((void *)&v49[0] + 1) = 0xE000000000000000;
      sub_25247AF40();
      sub_25247A920();
      LOBYTE(v47) = 1;
      sub_25247B080();
      sub_25247A920();
      *(void *)&long long v47 = v30;
      sub_25247B200();
      sub_25247A920();
      swift_bridgeObjectRelease();
      long long v33 = v49[0];
      sub_25243D91C();
      swift_allocError();
      *(void *)uint64_t v34 = v32 | 0x2000000000000000;
      *(_OWORD *)(v34 + 8) = v33;
      swift_willThrow();
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v50 + 8))(v45, v10);
    }
  }
}

uint64_t type metadata accessor for EncryptionKeyRecord()
{
  uint64_t result = qword_269C060A8;
  if (!qword_269C060A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_252464320(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)sub_25247A830();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(a2, sel_objectForKeyedSubscript_, v3);

  if (v4)
  {
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C05680);
    if (swift_dynamicCast())
    {
      swift_unknownObjectRelease();
      return v10;
    }
    else
    {
      sub_25247AF40();
      sub_25247A920();
      uint64_t v8 = type metadata accessor for EncryptionKeyRecord();
      sub_25247A920();
      swift_bridgeObjectRelease();
      sub_25247A920();
      swift_getObjectType();
      sub_25247B240();
      sub_25243D91C();
      swift_allocError();
      *uint64_t v9 = v8 | 0x6000000000000000;
      v9[1] = 0;
      v9[2] = 0xE000000000000000;
      swift_willThrow();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_25247AF40();
    swift_bridgeObjectRelease();
    uint64_t v6 = type metadata accessor for EncryptionKeyRecord();
    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_25247A920();
    sub_25243D91C();
    swift_allocError();
    *uint64_t v7 = v6 | 0x4000000000000000;
    v7[1] = 0xD000000000000014;
    v7[2] = 0x800000025247D4E0;
    return swift_willThrow();
  }
}

uint64_t sub_25246458C@<X0>(void *a1@<X1>, _OWORD *a2@<X8>)
{
  id v4 = (void *)sub_25247A830();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(a1, sel_objectForKeyedSubscript_, v4);

  if (v5)
  {
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C05680);
    if (swift_dynamicCast())
    {
      uint64_t result = swift_unknownObjectRelease();
      *a2 = v11;
    }
    else
    {
      *(void *)&long long v13 = 0;
      *((void *)&v13 + 1) = 0xE000000000000000;
      sub_25247AF40();
      sub_25247A920();
      uint64_t v9 = type metadata accessor for EncryptionKeyRecord();
      sub_25247A920();
      swift_bridgeObjectRelease();
      sub_25247A920();
      swift_getObjectType();
      sub_25247B240();
      sub_25243D91C();
      swift_allocError();
      *(void *)uint64_t v10 = v9 | 0x6000000000000000;
      *(_OWORD *)(v10 + 8) = v13;
      swift_willThrow();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_25247AF40();
    swift_bridgeObjectRelease();
    *(void *)&long long v12 = 0xD000000000000014;
    *((void *)&v12 + 1) = 0x800000025247D4E0;
    uint64_t v7 = type metadata accessor for EncryptionKeyRecord();
    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_25247A920();
    sub_25243D91C();
    swift_allocError();
    *(void *)uint64_t v8 = v7 | 0x4000000000000000;
    *(_OWORD *)(v8 + 8) = v12;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_252464804@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C04AC8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)sub_25247A830();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(a1, sel_objectForKeyedSubscript_, v7);

  if (v8)
  {
    unint64_t v23 = (unint64_t)v8;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C05680);
    uint64_t v9 = sub_25247A4B0();
    char v10 = swift_dynamicCast();
    long long v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    if (v10)
    {
      uint64_t v12 = *(void *)(v9 - 8);
      v11(v6, 0, 1, v9);
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a2, v6, v9);
    }
    else
    {
      v11(v6, 1, 1, v9);
      sub_2523D6FB8((uint64_t)v6, &qword_269C04AC8);
      unint64_t v23 = 0;
      unint64_t v24 = 0xE000000000000000;
      sub_25247AF40();
      sub_25247A920();
      uint64_t v18 = type metadata accessor for EncryptionKeyRecord();
      sub_25247A920();
      swift_bridgeObjectRelease();
      sub_25247A920();
      swift_getObjectType();
      v22[1] = v8;
      sub_25247B240();
      unint64_t v19 = v23;
      unint64_t v20 = v24;
      sub_25243D91C();
      swift_allocError();
      *unint64_t v21 = v18 | 0x6000000000000000;
      v21[1] = v19;
      void v21[2] = v20;
      swift_willThrow();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    unint64_t v23 = 0;
    unint64_t v24 = 0xE000000000000000;
    sub_25247AF40();
    swift_bridgeObjectRelease();
    unint64_t v23 = 0xD000000000000014;
    unint64_t v24 = 0x800000025247D4E0;
    uint64_t v14 = type metadata accessor for EncryptionKeyRecord();
    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_25247A920();
    unint64_t v15 = v23;
    unint64_t v16 = v24;
    sub_25243D91C();
    swift_allocError();
    *uint64_t v17 = v14 | 0x4000000000000000;
    v17[1] = v15;
    v17[2] = v16;
    return swift_willThrow();
  }
}

uint64_t sub_252464B4C(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)sub_25247A830();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(a2, sel_objectForKeyedSubscript_, v3);

  if (v4)
  {
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C05680);
    if (swift_dynamicCast())
    {
      swift_unknownObjectRelease();
      return v10;
    }
    else
    {
      sub_25247AF40();
      sub_25247A920();
      uint64_t v8 = type metadata accessor for EventRecord(0);
      sub_25247A920();
      swift_bridgeObjectRelease();
      sub_25247A920();
      swift_getObjectType();
      sub_25247B240();
      sub_25243D91C();
      swift_allocError();
      *uint64_t v9 = v8 | 0x6000000000000000;
      v9[1] = 0;
      v9[2] = 0xE000000000000000;
      swift_willThrow();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_25247AF40();
    swift_bridgeObjectRelease();
    uint64_t v6 = type metadata accessor for EventRecord(0);
    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_25247A920();
    sub_25243D91C();
    swift_allocError();
    *uint64_t v7 = v6 | 0x4000000000000000;
    v7[1] = 0xD000000000000014;
    v7[2] = 0x800000025247D4E0;
    return swift_willThrow();
  }
}

uint64_t sub_252464DB8@<X0>(void *a1@<X1>, _OWORD *a2@<X8>)
{
  id v4 = (void *)sub_25247A830();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(a1, sel_objectForKeyedSubscript_, v4);

  if (v5)
  {
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C05680);
    if (swift_dynamicCast())
    {
      uint64_t result = swift_unknownObjectRelease();
      *a2 = v11;
    }
    else
    {
      *(void *)&long long v13 = 0;
      *((void *)&v13 + 1) = 0xE000000000000000;
      sub_25247AF40();
      sub_25247A920();
      uint64_t v9 = type metadata accessor for EventRecord(0);
      sub_25247A920();
      swift_bridgeObjectRelease();
      sub_25247A920();
      swift_getObjectType();
      sub_25247B240();
      sub_25243D91C();
      swift_allocError();
      *(void *)uint64_t v10 = v9 | 0x6000000000000000;
      *(_OWORD *)(v10 + 8) = v13;
      swift_willThrow();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_25247AF40();
    swift_bridgeObjectRelease();
    *(void *)&long long v12 = 0xD000000000000014;
    *((void *)&v12 + 1) = 0x800000025247D4E0;
    uint64_t v7 = type metadata accessor for EventRecord(0);
    sub_25247A920();
    swift_bridgeObjectRelease();
    sub_25247A920();
    sub_25243D91C();
    swift_allocError();
    *(void *)uint64_t v8 = v7 | 0x4000000000000000;
    *(_OWORD *)(v8 + 8) = v12;
    return swift_willThrow();
  }
  return result;
}

uint64_t EncryptionKeyRecord.KeyType.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 1;
  return result;
}

uint64_t EncryptionKeyRecord.KeyType.rawValue.getter()
{
  return 1;
}

uint64_t sub_252465048()
{
  return sub_25247B390();
}

uint64_t sub_25246508C()
{
  return sub_25247B380();
}

uint64_t sub_2524650B4()
{
  return sub_25247B390();
}

void *sub_2524650F4@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 1;
  return result;
}

void sub_252465108(void *a1@<X8>)
{
  *a1 = 1;
}

uint64_t EncryptionKeyRecord.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25247A540();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t EncryptionKeyRecord.key.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EncryptionKeyRecord() + 20);

  return sub_2523D918C(v3, a1);
}

uint64_t EncryptionKeyRecord.effectiveDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EncryptionKeyRecord() + 24);
  uint64_t v4 = sub_25247A4B0();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EncryptionKeyRecord.init(identifier:key:effectiveDate:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t v9 = type metadata accessor for EncryptionKeyRecord();
  sub_2523DFC24(a2, a4 + *(int *)(v9 + 20));
  uint64_t v10 = a4 + *(int *)(v9 + 24);
  uint64_t v11 = sub_25247A4B0();
  long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);

  return v12(v10, a3, v11);
}

uint64_t EncryptionKeyRecord.keyType.getter()
{
  uint64_t v1 = type metadata accessor for EncryptionKeyRecord();
  sub_2523D918C(v0 + *(int *)(v1 + 20), (uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v3 = v5[4];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(DynamicType, v3);
}

uint64_t sub_2524653A8(char *a1, char *a2)
{
  return sub_2523D2CF4(*a1, *a2);
}

uint64_t sub_2524653B4()
{
  return sub_25247B390();
}

uint64_t sub_252465410()
{
  sub_25247A8D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_252465450()
{
  return sub_25247B390();
}

uint64_t sub_2524654A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252466748();
  *a1 = result;
  return result;
}

void sub_2524654D8(void *a1@<X8>)
{
  *a1 = *(void *)&aData_5[8 * *v1];
  a1[1] = 0xE400000000000000;
}

double sub_2524654F4@<D0>(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x252465608);
      }
      uint64_t v6 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (qword_269C04330 != -1) {
        swift_once();
      }
      if (v6 == qword_269C06478)
      {
        *(void *)(a3 + 24) = type metadata accessor for LubyRackoffEncryptionKey();
        *(void *)(a3 + 32) = sub_252448850();
        __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
        sub_252408194(a1, a2);
        LubyRackoffEncryptionKey.init(data:)(a1, a2);
      }
      else
      {
        *(void *)(a3 + 32) = 0;
        double result = 0.0;
        *(_OWORD *)a3 = 0u;
        *(_OWORD *)(a3 + 16) = 0u;
      }
      return result;
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      uint64_t v6 = v7 - v8;
      if (!__OFSUB__(v7, v8)) {
        goto LABEL_6;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v6 = BYTE6(a2);
      goto LABEL_6;
  }
}

void static EncryptionKeyRecord.recordType.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void *static EncryptionKeyRecord.desiredKeysForQuery.getter()
{
  return &unk_270299978;
}

CKRecord __swiftcall EncryptionKeyRecord.toCKRecord(zoneID:)(CKRecordZoneID zoneID)
{
  uint64_t v2 = v1;
  sub_2523E1254(0, (unint64_t *)&unk_269C06088);
  sub_25247A4D0();
  uint64_t v4 = zoneID.super.isa;
  id v5 = (void *)sub_25247ACF0();
  sub_2523E1254(0, &qword_269C047E0);
  id v6 = v5;
  uint64_t v7 = (void *)sub_25247AE50();
  objc_msgSend(v7, sel_encryptedValues);
  swift_getObjectType();
  uint64_t v8 = type metadata accessor for EncryptionKeyRecord();
  uint64_t v9 = (void *)(v2 + *(int *)(v8 + 20));
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  uint64_t v17 = MEMORY[0x263F06F78];
  uint64_t v18 = MEMORY[0x263EFD240];
  sub_25247A090();
  sub_25247AE30();
  sub_2523D918C((uint64_t)v9, (uint64_t)v16);
  __swift_project_boxed_opaque_existential_1(v16, v17);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v11 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  (*(void (**)(uint64_t, uint64_t))(v11 + 32))(DynamicType, v11);
  uint64_t v17 = MEMORY[0x263F8E5C0];
  uint64_t v18 = MEMORY[0x263EFD470];
  v16[0] = 1;
  sub_25247AE30();
  uint64_t v12 = v2 + *(int *)(v8 + 24);
  uint64_t v13 = sub_25247A4B0();
  uint64_t v17 = v13;
  uint64_t v18 = MEMORY[0x263EFD248];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(boxed_opaque_existential_1, v12, v13);
  sub_25247AE30();

  swift_unknownObjectRelease();
  return (CKRecord)v7;
}

uint64_t sub_2524658C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v14[3] = MEMORY[0x263F8D3E8];
  v14[4] = MEMORY[0x263F07B80];
  v14[0] = a1;
  v14[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v14, MEMORY[0x263F8D3E8]);
  id v5 = (unsigned char *)*v4;
  if (*v4 && (id v6 = (unsigned char *)v4[1], v7 = v6 - v5, v6 != v5))
  {
    if (v7 <= 14)
    {
      uint64_t v8 = sub_252466584(v5, v6);
      unint64_t v9 = v12 & 0xFFFFFFFFFFFFFFLL;
    }
    else if ((unint64_t)v7 >= 0x7FFFFFFF)
    {
      uint64_t v8 = sub_252466648((uint64_t)v5, (uint64_t)v6);
      unint64_t v9 = v13 | 0x8000000000000000;
    }
    else
    {
      uint64_t v8 = sub_2524666C4((uint64_t)v5, (uint64_t)v6);
      unint64_t v9 = v11 | 0x4000000000000000;
    }
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v9 = 0xC000000000000000;
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  *a3 = v8;
  a3[1] = v9;
  return result;
}

unint64_t sub_252465998()
{
  unint64_t result = qword_269C06098;
  if (!qword_269C06098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06098);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for EncryptionKeyRecord(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25247A540();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    long long v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_25247A4B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return a1;
}

uint64_t destroy for EncryptionKeyRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 20));
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_25247A4B0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for EncryptionKeyRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  long long v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

uint64_t assignWithCopy for EncryptionKeyRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + *(int *)(a3 + 20)), (uint64_t *)(a2 + *(int *)(a3 + 20)));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for EncryptionKeyRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  uint64_t v14 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for EncryptionKeyRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  __swift_destroy_boxed_opaque_existential_1(a1 + v7);
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for EncryptionKeyRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252465F98);
}

uint64_t sub_252465F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25247A540();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_25247A4B0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for EncryptionKeyRecord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2524660DC);
}

uint64_t sub_2524660DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_25247A540();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_25247A4B0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_25246620C()
{
  uint64_t result = sub_25247A540();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25247A4B0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EncryptionKeyRecord.KeyType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x252466378);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EncryptionKeyRecord.KeyType()
{
  return &type metadata for EncryptionKeyRecord.KeyType;
}

unsigned char *storeEnumTagSinglePayload for EncryptionKeyRecord.Field(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25246647CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EncryptionKeyRecord.Field()
{
  return &type metadata for EncryptionKeyRecord.Field;
}

unint64_t sub_2524664B8()
{
  unint64_t result = qword_269C060B8;
  if (!qword_269C060B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C060B8);
  }
  return result;
}

unsigned char *sub_25246650C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    unint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    unint64_t result = (unsigned char *)sub_252466584(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    unint64_t result = (unsigned char *)sub_252466648((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    unint64_t result = (unsigned char *)sub_2524666C4((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_252466584(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_252466648(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_25247A080();
  swift_allocObject();
  uint64_t result = sub_25247A040();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_25247A170();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_2524666C4(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_25247A080();
  swift_allocObject();
  uint64_t result = sub_25247A040();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_252466748()
{
  unint64_t v0 = sub_25247B130();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t type metadata accessor for AccessoryEventBase(uint64_t a1)
{
  return sub_2523FC8A8(a1, (uint64_t *)&unk_269C060E0);
}

uint64_t sub_2524667B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2524667C8);
}

uint64_t sub_2524667C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccessoryEventBase(0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_252466834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252466848);
}

uint64_t sub_252466848(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccessoryEventBase(0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AccessoryEventBaseLegacy(uint64_t a1)
{
  return sub_2523FC8A8(a1, (uint64_t *)&unk_269C060D0);
}

uint64_t sub_2524668D8()
{
  uint64_t result = type metadata accessor for AccessoryEventBase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_252466964(void *a1, void *a2, int *a3)
{
  return sub_25246A940(a1, a2, a3, type metadata accessor for EventBase);
}

uint64_t sub_25246697C(uint64_t a1, int *a2)
{
  return sub_25246ABB4(a1, a2, type metadata accessor for EventBase);
}

uint64_t sub_252466994(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_25246AD70(a1, a2, a3, type metadata accessor for EventBase);
}

uint64_t sub_2524669AC(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_25246AF94(a1, a2, a3, type metadata accessor for EventBase);
}

uint64_t sub_2524669C4(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_25246B240(a1, a2, a3, type metadata accessor for EventBase);
}

uint64_t sub_2524669DC(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_25246B444(a1, a2, a3, type metadata accessor for EventBase);
}

uint64_t sub_2524669F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252466A08);
}

uint64_t sub_252466A08(uint64_t a1, uint64_t a2, int *a3)
{
  return __swift_get_extra_inhabitant_index_2Tm(a1, a2, a3, type metadata accessor for EventBase);
}

uint64_t sub_252466A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252466A34);
}

uint64_t sub_252466A34(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  return __swift_store_extra_inhabitant_index_3Tm(a1, a2, a3, a4, type metadata accessor for EventBase);
}

void sub_252466A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_252466A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v54 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_25247A540();
  uint64_t v49 = *(void *)(v47 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v47);
  uint64_t v53 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v52 = (char *)&v42 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v51 = (char *)&v42 - v10;
  uint64_t v50 = sub_25247A4B0();
  uint64_t v11 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for AccessoryEventBase(0);
  MEMORY[0x270FA5388](v48);
  unint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06130);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v19 = (int *)type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout(0);
  uint64_t v20 = *((void *)v19 - 1);
  MEMORY[0x270FA5388](v19);
  unint64_t v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2523D918C(a1, (uint64_t)v55);
  sub_2524698B4(v55, (uint64_t)v18);
  if (v2)
  {
    uint64_t v23 = v56;

    (*(void (**)(char *, uint64_t, uint64_t, int *))(v20 + 56))(v18, 1, 1, v19);
    sub_2523D6FB8((uint64_t)v18, &qword_269C06130);
    sub_2523D918C(a1, (uint64_t)v55);
    sub_2524689D0((uint64_t)v55, (uint64_t)v15);
    __swift_destroy_boxed_opaque_existential_1(a1);
    return sub_25246A318((uint64_t)v15, v23, type metadata accessor for AccessoryEventBase);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v18, 0, 1, v19);
    __swift_destroy_boxed_opaque_existential_1(a1);
    sub_25246A318((uint64_t)v18, (uint64_t)v22, type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout);
    int64_t v25 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v46 = v13;
    v25(v13, v22, v50);
    uint64_t v26 = type metadata accessor for EventBaseLegacy(0);
    uint64_t v27 = v49;
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
    uint64_t v29 = v47;
    v28(v51, &v22[*(int *)(v26 + 20)], v47);
    int v45 = v22[*(int *)(v26 + 24)];
    v28(v52, &v22[v19[5]], v29);
    uint64_t v30 = v19[7];
    uint64_t v31 = &v22[v19[6]];
    uint64_t v32 = *((void *)v31 + 1);
    uint64_t v44 = *(void *)v31;
    v28(v53, &v22[v30], v29);
    uint64_t v33 = v19[9];
    uint64_t v34 = &v22[v19[8]];
    uint64_t v35 = *((void *)v34 + 1);
    uint64_t v43 = *(void *)v34;
    sub_2523E1C2C((uint64_t)&v22[v33], v54);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25246A264((uint64_t)v22, type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout);
    uint64_t v36 = v56;
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v56, v46, v50);
    uint64_t v37 = type metadata accessor for EventBase(0);
    uint64_t v38 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 32);
    v38(v36 + *(int *)(v37 + 20), v51, v29);
    *(unsigned char *)(v36 + *(int *)(v37 + 24)) = v45;
    uint64_t v39 = (int *)v48;
    v38(v36 + *(int *)(v48 + 20), v52, v29);
    uint64_t v40 = (void *)(v36 + v39[6]);
    *uint64_t v40 = v44;
    v40[1] = v32;
    v38(v36 + v39[7], v53, v29);
    uint64_t v41 = (void *)(v36 + v39[8]);
    *uint64_t v41 = v43;
    v41[1] = v35;
    return sub_2523E28C4(v54, v36 + v39[9]);
  }
}

uint64_t sub_252467000(void *a1)
{
  uint64_t v35 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v34 = (uint64_t)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AccessoryEventBase(0);
  uint64_t v5 = (int *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout(0);
  uint64_t v9 = (int *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v33 = (uint64_t)&v30 - v13;
  sub_25246A1FC(v1, (uint64_t)v7, type metadata accessor for AccessoryEventBase);
  uint64_t v14 = sub_25247A4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v7, v14);
  uint64_t v15 = type metadata accessor for EventBase(0);
  uint64_t v32 = &v7[*(int *)(v15 + 20)];
  uint64_t v16 = type metadata accessor for EventBaseLegacy(0);
  uint64_t v31 = &v12[*(int *)(v16 + 20)];
  uint64_t v17 = sub_25247A540();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
  v18(v31, v32, v17);
  v12[*(int *)(v16 + 24)] = v7[*(int *)(v15 + 24)];
  v18(&v12[v9[7]], &v7[v5[7]], v17);
  unint64_t v19 = &v7[v5[8]];
  uint64_t v20 = *(void *)v19;
  uint64_t v21 = *((void *)v19 + 1);
  unint64_t v22 = &v12[v9[8]];
  *(void *)unint64_t v22 = v20;
  *((void *)v22 + 1) = v21;
  v18(&v12[v9[9]], &v7[v5[9]], v17);
  uint64_t v23 = &v7[v5[10]];
  uint64_t v24 = *(void *)v23;
  uint64_t v25 = *((void *)v23 + 1);
  uint64_t v26 = &v12[v9[10]];
  *(void *)uint64_t v26 = v24;
  *((void *)v26 + 1) = v25;
  uint64_t v27 = v34;
  sub_2523E1C2C((uint64_t)&v7[v5[11]], v34);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25246A264((uint64_t)v7, type metadata accessor for AccessoryEventBase);
  sub_2523E28C4(v27, (uint64_t)&v12[v9[11]]);
  uint64_t v28 = v33;
  sub_25246A318((uint64_t)v12, v33, type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout);
  sub_2524695E0(v35);
  return sub_25246A264(v28, type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout);
}

uint64_t sub_252467340()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247B350();
  sub_25247A4B0();
  sub_252467C68(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_252467C68((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_25247B390();
}

uint64_t sub_252467624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A4B0();
  sub_252467C68(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_252467C68((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v2 + *(int *)(a2 + 36), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
    return sub_25247B370();
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  sub_25247B370();
  sub_25247A800();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2524678F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247B350();
  sub_25247A4B0();
  sub_252467C68(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_252467C68((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v2 + *(int *)(a2 + 36), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return sub_25247B390();
}

uint64_t sub_252467BD8()
{
  return sub_252467C68(&qword_269C060F0, (void (*)(uint64_t))type metadata accessor for AccessoryEventBase);
}

uint64_t sub_252467C20()
{
  return sub_252467C68(&qword_269C060F8, (void (*)(uint64_t))type metadata accessor for AccessoryEventBaseLegacy);
}

uint64_t sub_252467C68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_252467CB0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06110);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25246A188();
  sub_25247B3B0();
  v11[31] = 0;
  sub_25247A4B0();
  sub_252467C68(&qword_269C05B18, MEMORY[0x263F07490]);
  sub_25247B1D0();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for AccessoryEventBase.DocumentLayout(0);
    v11[30] = 1;
    sub_25247A540();
    sub_252467C68(&qword_269C05B20, MEMORY[0x263F07508]);
    sub_25247B1D0();
    v11[29] = *(unsigned char *)(v3 + *(int *)(v9 + 24));
    v11[28] = 2;
    sub_25244761C();
    sub_25247B1D0();
    v11[27] = 3;
    sub_25247B1D0();
    v11[26] = 4;
    sub_25247B1C0();
    v11[25] = 5;
    sub_25247B1D0();
    v11[24] = 6;
    sub_25247B1C0();
    v11[15] = 7;
    sub_25247B1B0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_252468000@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v38 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_25247A540();
  uint64_t v42 = *(void *)(v45 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v45);
  uint64_t v39 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v40 = (char *)v35 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v35 - v9;
  uint64_t v11 = sub_25247A4B0();
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v43 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06100);
  uint64_t v44 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AccessoryEventBase.DocumentLayout(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25246A188();
  uint64_t v46 = v14;
  uint64_t v18 = v48;
  sub_25247B3A0();
  if (v18) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v36 = (int *)v15;
  uint64_t v48 = v17;
  uint64_t v19 = (uint64_t)a1;
  uint64_t v20 = v42;
  uint64_t v21 = v45;
  char v57 = 0;
  sub_252467C68(&qword_269C05AF8, MEMORY[0x263F07490]);
  unint64_t v22 = v43;
  sub_25247B180();
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v48, v22, v11);
  char v56 = 1;
  sub_252467C68(&qword_269C05B00, MEMORY[0x263F07508]);
  sub_25247B180();
  v35[1] = v11;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v23(&v48[v36[5]], v10, v21);
  char v54 = 2;
  sub_2524475C8();
  uint64_t v43 = 0;
  sub_25247B180();
  v35[0] = v23;
  v48[v36[6]] = v55;
  char v53 = 3;
  uint64_t v24 = v40;
  sub_25247B180();
  ((void (*)(char *, char *, uint64_t))v35[0])(&v48[v36[7]], v24, v21);
  char v52 = 4;
  uint64_t v25 = sub_25247B170();
  uint64_t v26 = (uint64_t *)&v48[v36[8]];
  *uint64_t v26 = v25;
  v26[1] = v27;
  char v51 = 5;
  uint64_t v28 = v39;
  sub_25247B180();
  ((void (*)(char *, char *, uint64_t))v35[0])(&v48[v36[9]], v28, v21);
  char v50 = 6;
  uint64_t v29 = sub_25247B170();
  uint64_t v30 = (uint64_t)v48;
  uint64_t v31 = (uint64_t *)&v48[v36[10]];
  uint64_t *v31 = v29;
  v31[1] = v32;
  char v49 = 7;
  uint64_t v33 = (uint64_t)v38;
  sub_25247B160();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v47);
  sub_2523E28C4(v33, v30 + v36[11]);
  sub_25246A1FC(v30, v37, type metadata accessor for AccessoryEventBase.DocumentLayout);
  __swift_destroy_boxed_opaque_existential_1(v19);
  return sub_25246A264(v30, type metadata accessor for AccessoryEventBase.DocumentLayout);
}

uint64_t sub_252468868(char *a1, char *a2)
{
  return sub_2523D2D5C(*a1, *a2);
}

uint64_t sub_252468874()
{
  return sub_25246F198();
}

uint64_t sub_252468880()
{
  return sub_25246F158();
}

uint64_t sub_252468888()
{
  return sub_25246F198();
}

uint64_t sub_252468890@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25246CF38();
  *a1 = result;
  return result;
}

void sub_2524688C0(void *a1@<X8>)
{
  *a1 = qword_252482820[*v1];
  a1[1] = 0xE100000000000000;
}

uint64_t sub_2524688DC()
{
  return qword_252482820[*v0];
}

uint64_t sub_2524688F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25246CF38();
  *a1 = result;
  return result;
}

void sub_25246891C(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_252468928(uint64_t a1)
{
  unint64_t v2 = sub_25246A188();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252468964(uint64_t a1)
{
  unint64_t v2 = sub_25246A188();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2524689A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_252468000(a1, a2);
}

uint64_t sub_2524689B8(void *a1)
{
  return sub_252467CB0(a1);
}

uint64_t sub_2524689D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25247A540();
  uint64_t v48 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  char v53 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  char v51 = (char *)&v41 - v11;
  MEMORY[0x270FA5388](v10);
  char v50 = (char *)&v41 - v12;
  uint64_t v13 = sub_25247A4B0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (int *)type metadata accessor for AccessoryEventBase.DocumentLayout(0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2523D918C(a1, (uint64_t)v52);
  sub_252468000(v52, (uint64_t)v19);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
  if (!v2)
  {
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    uint64_t v43 = v13;
    v21(v16, v19, v13);
    unint64_t v22 = &v19[v17[5]];
    uint64_t v47 = 0;
    uint64_t v23 = v48;
    uint64_t v42 = v6;
    uint64_t v24 = v49;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
    v25(v50, v22, v7);
    uint64_t v26 = v17[7];
    int v44 = v19[v17[6]];
    v25(v51, &v19[v26], v7);
    uint64_t v27 = v17[9];
    uint64_t v28 = &v19[v17[8]];
    uint64_t v30 = *(void *)v28;
    uint64_t v29 = *((void *)v28 + 1);
    uint64_t v46 = v30;
    uint64_t v41 = v29;
    v25(v53, &v19[v27], v7);
    uint64_t v31 = v17[11];
    uint64_t v32 = &v19[v17[10]];
    uint64_t v33 = *((void *)v32 + 1);
    uint64_t v45 = *(void *)v32;
    uint64_t v34 = (uint64_t)v42;
    sub_2523E1C2C((uint64_t)&v19[v31], (uint64_t)v42);
    uint64_t v35 = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25246A264((uint64_t)v19, type metadata accessor for AccessoryEventBase.DocumentLayout);
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v24, v16, v43);
    uint64_t v36 = type metadata accessor for EventBase(0);
    uint64_t v37 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 32);
    v37(v24 + *(int *)(v36 + 20), v50, v7);
    *(unsigned char *)(v24 + *(int *)(v36 + 24)) = v44;
    uint64_t v38 = (int *)type metadata accessor for AccessoryEventBase(0);
    v37(v24 + v38[5], v51, v7);
    uint64_t v39 = (void *)(v24 + v38[6]);
    *uint64_t v39 = v46;
    v39[1] = v35;
    v37(v24 + v38[7], v53, v7);
    uint64_t v40 = (void *)(v24 + v38[8]);
    *uint64_t v40 = v45;
    v40[1] = v33;
    return sub_2523E28C4(v34, v24 + v38[9]);
  }
  return result;
}

uint64_t sub_252468DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2524689D0(a1, a2);
}

uint64_t sub_252468DF8(void *a1)
{
  uint64_t v24 = a1;
  uint64_t v2 = type metadata accessor for AccessoryEventBase.DocumentLayout(0);
  uint64_t v3 = (int *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25247A4B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v5, v1, v6);
  uint64_t v7 = type metadata accessor for EventBase(0);
  uint64_t v8 = v1 + *(int *)(v7 + 20);
  uint64_t v9 = &v5[v3[7]];
  uint64_t v10 = sub_25247A540();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v9, v8, v10);
  HIDWORD(v23) = *(unsigned __int8 *)(v1 + *(int *)(v7 + 24));
  uint64_t v12 = (int *)type metadata accessor for AccessoryEventBase(0);
  v11(&v5[v3[9]], v1 + v12[5], v10);
  uint64_t v13 = (uint64_t *)(v1 + v12[6]);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  v11(&v5[v3[11]], v1 + v12[7], v10);
  uint64_t v16 = v12[9];
  uint64_t v17 = (uint64_t *)(v1 + v12[8]);
  uint64_t v18 = *v17;
  uint64_t v19 = v17[1];
  sub_2523E1C2C(v1 + v16, (uint64_t)&v5[v3[13]]);
  v5[v3[8]] = BYTE4(v23);
  uint64_t v20 = &v5[v3[10]];
  *(void *)uint64_t v20 = v15;
  *((void *)v20 + 1) = v14;
  uint64_t v21 = &v5[v3[12]];
  *(void *)uint64_t v21 = v18;
  *((void *)v21 + 1) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_252467CB0(v24);
  return sub_25246A264((uint64_t)v5, type metadata accessor for AccessoryEventBase.DocumentLayout);
}

uint64_t sub_25246900C(void *a1)
{
  return sub_252468DF8(a1);
}

uint64_t sub_252469024()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247A4B0();
  sub_252467C68(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_252467C68((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1) {
    return sub_25247B370();
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_25247B370();
  sub_25247A800();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_2524692F8()
{
  uint64_t v1 = sub_25247A540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25247B350();
  sub_25247A4B0();
  sub_252467C68(&qword_269C04800, MEMORY[0x263F07490]);
  sub_25247A800();
  type metadata accessor for EventBase(0);
  sub_252467C68((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
  sub_25247A800();
  sub_25247B360();
  uint64_t v8 = type metadata accessor for AccessoryEventBase(0);
  sub_25247A800();
  sub_25247A8D0();
  sub_25247A800();
  sub_25247A8D0();
  sub_2523E1C2C(v0 + *(int *)(v8 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_25247B370();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_25247B370();
    sub_25247A800();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_25247B390();
}

uint64_t sub_2524695E0(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06118);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25246A2C4();
  sub_25247B3B0();
  char v14 = 0;
  type metadata accessor for EventBaseLegacy(0);
  sub_252467C68(&qword_269C06128, (void (*)(uint64_t))type metadata accessor for EventBaseLegacy);
  sub_25247B1D0();
  if (!v1)
  {
    type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout(0);
    char v13 = 1;
    sub_25247A540();
    sub_252467C68(&qword_269C05B20, MEMORY[0x263F07508]);
    sub_25247B1D0();
    char v12 = 2;
    sub_25247B1C0();
    char v11 = 3;
    sub_25247B1D0();
    char v10 = 4;
    sub_25247B1C0();
    char v9 = 5;
    sub_25247B1B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2524698B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v43 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25247A540();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  char v10 = (char *)v41 - v9;
  uint64_t v11 = type metadata accessor for EventBaseLegacy(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v48 = (uint64_t)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06138);
  uint64_t v44 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  char v14 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  char v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_25246A2C4();
  uint64_t v49 = v14;
  uint64_t v19 = v51;
  sub_25247B3A0();
  if (v19) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  }
  char v51 = v8;
  uint64_t v20 = (uint64_t)v17;
  uint64_t v22 = v45;
  uint64_t v21 = v46;
  char v57 = 0;
  sub_252467C68(&qword_269C06140, (void (*)(uint64_t))type metadata accessor for EventBaseLegacy);
  sub_25247B180();
  uint64_t v23 = v20;
  sub_25246A318(v48, v20, type metadata accessor for EventBaseLegacy);
  char v56 = 1;
  uint64_t v24 = v10;
  uint64_t v25 = v21;
  uint64_t v26 = sub_252467C68(&qword_269C05B00, MEMORY[0x263F07508]);
  sub_25247B180();
  v41[1] = v26;
  uint64_t v28 = v23 + *(int *)(v15 + 20);
  uint64_t v48 = v23;
  uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v22 + 32);
  v29(v28, v24, v25);
  char v55 = 2;
  uint64_t v30 = sub_25247B170();
  uint64_t v31 = v44;
  v41[0] = v15;
  uint64_t v32 = (uint64_t *)(v48 + *(int *)(v15 + 24));
  *uint64_t v32 = v30;
  v32[1] = v33;
  char v54 = 3;
  uint64_t v34 = v51;
  sub_25247B180();
  v29(v48 + *(int *)(v41[0] + 28), v34, v25);
  char v53 = 4;
  uint64_t v35 = sub_25247B170();
  uint64_t v36 = v41[0];
  uint64_t v37 = v48;
  uint64_t v38 = (uint64_t *)(v48 + *(int *)(v41[0] + 32));
  uint64_t *v38 = v35;
  v38[1] = v39;
  char v52 = 5;
  uint64_t v40 = (uint64_t)v43;
  sub_25247B160();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v49, v47);
  sub_2523E28C4(v40, v37 + *(int *)(v36 + 36));
  sub_25246A1FC(v37, v42, type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  return sub_25246A264(v37, type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout);
}

uint64_t sub_252469F8C()
{
  uint64_t result = 1702060386;
  switch(*v0)
  {
    case 1:
      unsigned int v2 = 1836019570;
      goto LABEL_7;
    case 2:
      uint64_t result = 0x656D614E6D6F6F72;
      break;
    case 3:
      uint64_t result = 0xD000000000000013;
      break;
    case 4:
      uint64_t result = 0x726F737365636361;
      break;
    case 5:
      unsigned int v2 = 1919251317;
LABEL_7:
      uint64_t result = v2 | 0x6E65644900000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25246A05C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25246CF84(a1, a2);
  *a3 = result;
  return result;
}

void sub_25246A084(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_25246A090(uint64_t a1)
{
  unint64_t v2 = sub_25246A2C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25246A0CC(uint64_t a1)
{
  unint64_t v2 = sub_25246A2C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25246A108@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2524698B4(a1, a2);
}

uint64_t sub_25246A120(void *a1)
{
  return sub_2524695E0(a1);
}

uint64_t sub_25246A138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_252466A64(a1, a2);
}

uint64_t sub_25246A150(void *a1)
{
  return sub_252467000(a1);
}

uint64_t type metadata accessor for AccessoryEventBase.DocumentLayout(uint64_t a1)
{
  return sub_2523FC8A8(a1, (uint64_t *)&unk_269C06160);
}

unint64_t sub_25246A188()
{
  unint64_t result = qword_269C06108;
  if (!qword_269C06108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06108);
  }
  return result;
}

uint64_t type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout(uint64_t a1)
{
  return sub_2523FC8A8(a1, (uint64_t *)&unk_269C06150);
}

uint64_t sub_25246A1FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25246A264(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_25246A2C4()
{
  unint64_t result = qword_269C06120;
  if (!qword_269C06120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06120);
  }
  return result;
}

uint64_t sub_25246A318(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL _s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25247A540();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06148);
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  char v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v38 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v38 - v18;
  if ((sub_25247A480() & 1) == 0) {
    return 0;
  }
  uint64_t v39 = v5;
  uint64_t v20 = type metadata accessor for EventBase(0);
  if ((sub_25247A4F0() & 1) == 0) {
    return 0;
  }
  if (qword_252482860[*(char *)(a1 + *(int *)(v20 + 24))] != qword_252482860[*(char *)(a2 + *(int *)(v20 + 24))]) {
    return 0;
  }
  uint64_t v21 = (int *)type metadata accessor for AccessoryEventBase(0);
  if ((sub_25247A4F0() & 1) == 0) {
    return 0;
  }
  uint64_t v22 = v21[6];
  uint64_t v23 = *(void *)(a1 + v22);
  uint64_t v24 = *(void *)(a1 + v22 + 8);
  uint64_t v25 = (void *)(a2 + v22);
  if (v23 == *v25 && v24 == v25[1] || (v26 = sub_25247B260(), BOOL result = 0, (v26 & 1) != 0))
  {
    if ((sub_25247A4F0() & 1) == 0) {
      return 0;
    }
    uint64_t v28 = v21[8];
    uint64_t v29 = *(void *)(a1 + v28);
    uint64_t v30 = *(void *)(a1 + v28 + 8);
    uint64_t v31 = (void *)(a2 + v28);
    if (v29 == *v31 && v30 == v31[1] || (v32 = sub_25247B260(), BOOL result = 0, (v32 & 1) != 0))
    {
      sub_2523E1C2C(a1 + v21[9], (uint64_t)v19);
      sub_2523E1C2C(a2 + v21[9], (uint64_t)v17);
      uint64_t v33 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_2523E1C2C((uint64_t)v19, (uint64_t)v10);
      sub_2523E1C2C((uint64_t)v17, v33);
      uint64_t v34 = v39;
      uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
      if (v35((uint64_t)v10, 1, v4) == 1)
      {
        sub_2523D6FB8((uint64_t)v17, (uint64_t *)&unk_269C047F0);
        sub_2523D6FB8((uint64_t)v19, (uint64_t *)&unk_269C047F0);
        if (v35(v33, 1, v4) == 1)
        {
          sub_2523D6FB8((uint64_t)v10, (uint64_t *)&unk_269C047F0);
          return 1;
        }
      }
      else
      {
        sub_2523E1C2C((uint64_t)v10, (uint64_t)v14);
        if (v35(v33, 1, v4) != 1)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v7, v33, v4);
          sub_252467C68(&qword_269C04AE0, MEMORY[0x263F07508]);
          char v36 = sub_25247A820();
          uint64_t v37 = *(void (**)(char *, uint64_t))(v34 + 8);
          v37(v7, v4);
          sub_2523D6FB8((uint64_t)v17, (uint64_t *)&unk_269C047F0);
          sub_2523D6FB8((uint64_t)v19, (uint64_t *)&unk_269C047F0);
          v37(v14, v4);
          sub_2523D6FB8((uint64_t)v10, (uint64_t *)&unk_269C047F0);
          return (v36 & 1) != 0;
        }
        sub_2523D6FB8((uint64_t)v17, (uint64_t *)&unk_269C047F0);
        sub_2523D6FB8((uint64_t)v19, (uint64_t *)&unk_269C047F0);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v4);
      }
      sub_2523D6FB8((uint64_t)v10, &qword_269C06148);
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AccessoryEventBaseLegacy.LegacyLayout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *BOOL result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25246A8F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *BOOL result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryEventBaseLegacy.LegacyLayout.CodingKeys()
{
  return &type metadata for AccessoryEventBaseLegacy.LegacyLayout.CodingKeys;
}

void *sub_25246A928(void *a1, void *a2, int *a3)
{
  return sub_25246A940(a1, a2, a3, type metadata accessor for EventBaseLegacy);
}

void *sub_25246A940(void *a1, void *a2, int *a3, uint64_t (*a4)(void))
{
  int v6 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *a1 = *a2;
    a1 = (void *)(v33 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    uint64_t v9 = sub_25247A4B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = a4(0);
    uint64_t v11 = *(int *)(v10 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_25247A540();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    v16(v12, v13, v14);
    *((unsigned char *)a1 + *(int *)(v10 + 24)) = *((unsigned char *)a2 + *(int *)(v10 + 24));
    v16((char *)a1 + a3[5], (char *)a2 + a3[5], v14);
    uint64_t v17 = a3[6];
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)((char *)a1 + v17);
    uint64_t v20 = (void *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    void *v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = (char *)a1 + v18;
    uint64_t v23 = (char *)a2 + v18;
    swift_bridgeObjectRetain();
    v16(v22, v23, v14);
    uint64_t v24 = a3[8];
    uint64_t v25 = a3[9];
    char v26 = (void *)((char *)a1 + v24);
    uint64_t v27 = (void *)((char *)a2 + v24);
    uint64_t v28 = v27[1];
    *char v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = (char *)a1 + v25;
    uint64_t v30 = (char *)a2 + v25;
    uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    if (v31(v30, 1, v14))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
      memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      v16(v29, v30, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v29, 0, 1, v14);
    }
  }
  return a1;
}

uint64_t sub_25246AB9C(uint64_t a1, int *a2)
{
  return sub_25246ABB4(a1, a2, type metadata accessor for EventBaseLegacy);
}

uint64_t sub_25246ABB4(uint64_t a1, int *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  uint64_t v7 = a1 + *(int *)(a3(0) + 20);
  uint64_t v8 = sub_25247A540();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v12(v7, v8);
  v12(a1 + a2[5], v8);
  swift_bridgeObjectRelease();
  v12(a1 + a2[7], v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[9];
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v10, v8);
  }
  return result;
}

uint64_t sub_25246AD58(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_25246AD70(a1, a2, a3, type metadata accessor for EventBaseLegacy);
}

uint64_t sub_25246AD70(uint64_t a1, uint64_t a2, int *a3, uint64_t (*a4)(void))
{
  uint64_t v8 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  uint64_t v9 = a4(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_25247A540();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 16);
  v15(v11, v12, v13);
  *(unsigned char *)(a1 + *(int *)(v9 + 24)) = *(unsigned char *)(a2 + *(int *)(v9 + 24));
  v15((void *)(a1 + a3[5]), (const void *)(a2 + a3[5]), v13);
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = (void *)(a1 + v17);
  uint64_t v22 = (const void *)(a2 + v17);
  swift_bridgeObjectRetain();
  v15(v21, v22, v13);
  uint64_t v23 = a3[8];
  uint64_t v24 = a3[9];
  uint64_t v25 = (void *)(a1 + v23);
  char v26 = (void *)(a2 + v23);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = (void *)(a1 + v24);
  uint64_t v29 = (const void *)(a2 + v24);
  uint64_t v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  if (v30(v29, 1, v13))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v15(v28, v29, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v28, 0, 1, v13);
  }
  return a1;
}

uint64_t sub_25246AF7C(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_25246AF94(a1, a2, a3, type metadata accessor for EventBaseLegacy);
}

uint64_t sub_25246AF94(uint64_t a1, uint64_t a2, int *a3, uint64_t (*a4)(void))
{
  uint64_t v8 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(a1, a2, v8);
  uint64_t v9 = a4(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_25247A540();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 24);
  v15(v11, v12, v13);
  *(unsigned char *)(a1 + *(int *)(v9 + 24)) = *(unsigned char *)(a2 + *(int *)(v9 + 24));
  v15((void *)(a1 + a3[5]), (const void *)(a2 + a3[5]), v13);
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v13);
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  uint64_t v25 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v9) = v25((const void *)(a1 + v22), 1, v13);
  int v26 = v25(v24, 1, v13);
  if (!v9)
  {
    if (!v26)
    {
      v15(v23, v24, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v23, v13);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v23, v24, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v23, 0, 1, v13);
  return a1;
}

uint64_t sub_25246B228(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_25246B240(a1, a2, a3, type metadata accessor for EventBaseLegacy);
}

uint64_t sub_25246B240(uint64_t a1, uint64_t a2, int *a3, uint64_t (*a4)(void))
{
  uint64_t v8 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
  uint64_t v9 = a4(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_25247A540();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 32);
  v15(v11, v12, v13);
  *(unsigned char *)(a1 + *(int *)(v9 + 24)) = *(unsigned char *)(a2 + *(int *)(v9 + 24));
  v15((void *)(a1 + a3[5]), (const void *)(a2 + a3[5]), v13);
  uint64_t v16 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v15((void *)(a1 + v16), (const void *)(a2 + v16), v13);
  uint64_t v17 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    v15(v18, v19, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  return a1;
}

uint64_t sub_25246B42C(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_25246B444(a1, a2, a3, type metadata accessor for EventBaseLegacy);
}

uint64_t sub_25246B444(uint64_t a1, uint64_t a2, int *a3, uint64_t (*a4)(void))
{
  uint64_t v8 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40))(a1, a2, v8);
  uint64_t v9 = a4(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_25247A540();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 40);
  v15(v11, v12, v13);
  *(unsigned char *)(a1 + *(int *)(v9 + 24)) = *(unsigned char *)(a2 + *(int *)(v9 + 24));
  v15((void *)(a1 + a3[5]), (const void *)(a2 + a3[5]), v13);
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v15((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v13);
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (const void *)(a2 + v26);
  uint64_t v29 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v9) = v29((const void *)(a1 + v26), 1, v13);
  int v30 = v29(v28, 1, v13);
  if (!v9)
  {
    if (!v30)
    {
      v15(v27, v28, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v27, v13);
    goto LABEL_6;
  }
  if (v30)
  {
LABEL_6:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v27, v28, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
  return a1;
}

uint64_t sub_25246B6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25246B6CC);
}

uint64_t sub_25246B6CC(uint64_t a1, uint64_t a2, int *a3)
{
  return __swift_get_extra_inhabitant_index_2Tm(a1, a2, a3, type metadata accessor for EventBaseLegacy);
}

uint64_t __swift_get_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2, int *a3, uint64_t (*a4)(void))
{
  uint64_t v7 = a4(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = v7;
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    uint64_t v11 = a1;
LABEL_5:
    return v10(v11, a2, v9);
  }
  uint64_t v12 = sub_25247A540();
  uint64_t v13 = *(void *)(v12 - 8);
  if (*(_DWORD *)(v13 + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v11 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v15 = *(void *)(a1 + a3[6] + 8);
    if (v15 >= 0xFFFFFFFF) {
      LODWORD(v15) = -1;
    }
    return (v15 + 1);
  }
  else
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a3[9];
    return v17(v19, a2, v18);
  }
}

uint64_t sub_25246B870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25246B884);
}

uint64_t sub_25246B884(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  return __swift_store_extra_inhabitant_index_3Tm(a1, a2, a3, a4, type metadata accessor for EventBaseLegacy);
}

uint64_t __swift_store_extra_inhabitant_index_3Tm(uint64_t a1, uint64_t a2, int a3, int *a4, uint64_t (*a5)(void))
{
  uint64_t v9 = a5(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    uint64_t v11 = v9;
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    uint64_t v13 = a1;
LABEL_5:
    return v12(v13, a2, a2, v11);
  }
  uint64_t result = sub_25247A540();
  uint64_t v15 = *(void *)(result - 8);
  if (*(_DWORD *)(v15 + 84) == a3)
  {
    uint64_t v11 = result;
    uint64_t v13 = a1 + a4[5];
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a4[9];
    return v17(v19, a2, a2, v18);
  }
  return result;
}

void sub_25246BA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_25246BA40(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  a4(319);
  if (v4 <= 0x3F)
  {
    sub_25247A540();
    if (v5 <= 0x3F)
    {
      sub_2523FDE2C();
      if (v6 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

unsigned char *storeEnumTagSinglePayload for AccessoryEventBase.DocumentLayout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25246BC20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryEventBase.DocumentLayout.CodingKeys()
{
  return &type metadata for AccessoryEventBase.DocumentLayout.CodingKeys;
}

void *sub_25246BC58(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    a1 = (void *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25247A4B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_25247A540();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v13(v9, v10, v11);
    uint64_t v14 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    v13((char *)a1 + v14, (char *)a2 + v14, v11);
    uint64_t v15 = a3[8];
    uint64_t v16 = a3[9];
    uint64_t v17 = (void *)((char *)a1 + v15);
    uint64_t v18 = (void *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = (char *)a1 + v16;
    uint64_t v21 = (char *)a2 + v16;
    swift_bridgeObjectRetain();
    v13(v20, v21, v11);
    uint64_t v22 = a3[10];
    uint64_t v23 = a3[11];
    uint64_t v24 = (void *)((char *)a1 + v22);
    uint64_t v25 = (void *)((char *)a2 + v22);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = (char *)a1 + v23;
    uint64_t v28 = (char *)a2 + v23;
    uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v29(v28, 1, v11))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
      memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      v13(v27, v28, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_25246BE9C(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_25247A540();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v10(v5, v6);
  v10(a1 + a2[7], v6);
  swift_bridgeObjectRelease();
  v10(a1 + a2[9], v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[11];
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v6);
  }
  return result;
}

uint64_t sub_25246C030(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_25247A540();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  v12(v8, v9, v10);
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  v12((void *)(a1 + v13), (const void *)(a2 + v13), v10);
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)(a1 + v14);
  uint64_t v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)(a1 + v15);
  uint64_t v20 = (const void *)(a2 + v15);
  swift_bridgeObjectRetain();
  v12(v19, v20, v10);
  uint64_t v21 = a3[10];
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v21);
  uint64_t v24 = (void *)(a2 + v21);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = (void *)(a1 + v22);
  uint64_t v27 = (const void *)(a2 + v22);
  uint64_t v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v28(v27, 1, v10))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    v12(v26, v27, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v26, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_25246C224(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_25247A540();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  v12((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v10);
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12((void *)(a1 + a3[9]), (const void *)(a2 + a3[9]), v10);
  uint64_t v16 = a3[10];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[11];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  uint64_t v22 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v8) = v22((const void *)(a1 + v19), 1, v10);
  int v23 = v22(v21, 1, v10);
  if (!v8)
  {
    if (!v23)
    {
      v12(v20, v21, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v20, v10);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v20, v21, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
  return a1;
}

uint64_t sub_25246C4A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_25247A540();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  v12((void *)(a1 + v13), (const void *)(a2 + v13), v10);
  uint64_t v14 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v12((void *)(a1 + v14), (const void *)(a2 + v14), v10);
  uint64_t v15 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v17, 1, v10))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v12(v16, v17, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_25246C678(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25247A4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_25247A540();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  v12((void *)(a1 + v13), (const void *)(a2 + v13), v10);
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  v12((void *)(a1 + a3[9]), (const void *)(a2 + a3[9]), v10);
  uint64_t v19 = a3[10];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[11];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  uint64_t v27 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v8) = v27((const void *)(a1 + v24), 1, v10);
  int v28 = v27(v26, 1, v10);
  if (!v8)
  {
    if (!v28)
    {
      v12(v25, v26, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v25, v10);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v25, v26, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v25, 0, 1, v10);
  return a1;
}

uint64_t sub_25246C8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25246C8E8);
}

uint64_t sub_25246C8E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25247A4B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_25247A540();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[8] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[11];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_25246CA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25246CA84);
}

uint64_t sub_25246CA84(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_25247A4B0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_25247A540();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[8] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[11];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_25246CC0C()
{
  sub_25247A4B0();
  if (v0 <= 0x3F)
  {
    sub_25247A540();
    if (v1 <= 0x3F)
    {
      sub_2523FDE2C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

unint64_t sub_25246CD2C()
{
  unint64_t result = qword_269C06170;
  if (!qword_269C06170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06170);
  }
  return result;
}

unint64_t sub_25246CD84()
{
  unint64_t result = qword_269C06178;
  if (!qword_269C06178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06178);
  }
  return result;
}

unint64_t sub_25246CDDC()
{
  unint64_t result = qword_269C06180;
  if (!qword_269C06180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06180);
  }
  return result;
}

unint64_t sub_25246CE34()
{
  unint64_t result = qword_269C06188;
  if (!qword_269C06188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06188);
  }
  return result;
}

unint64_t sub_25246CE8C()
{
  unint64_t result = qword_269C06190;
  if (!qword_269C06190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06190);
  }
  return result;
}

unint64_t sub_25246CEE4()
{
  unint64_t result = qword_269C06198;
  if (!qword_269C06198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06198);
  }
  return result;
}

uint64_t sub_25246CF38()
{
  unint64_t v0 = sub_25247B130();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_25246CF84(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702060386 && a2 == 0xE400000000000000;
  if (v2 || (sub_25247B260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6564496D6F6F72 && a2 == 0xEE00726569666974 || (sub_25247B260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_25247B260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000025247D540 || (sub_25247B260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xED0000656D614E79 || (sub_25247B260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E65644972657375 && a2 == 0xEE00726569666974)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_25247B260();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

void *sub_25246D254@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_25246D3B0()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v0 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numFetchedCKRecords));
  uint64_t v3 = MEMORY[0x263F8EE80];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v2, 0xD000000000000013, 0x800000025247D9E0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_totalCKRecordSize) / 1000);
  char v6 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v5, 0x6365524B436D7573, 0xEF657A695364726FLL, v6);
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numCKQueries));
  char v8 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v7, 0x6575514B436D756ELL, 0xEC00000073656972, v8);
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numCKQueriesSucceeded));
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v9, 0xD000000000000015, 0x800000025247D610, v10);
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryCancelled));
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v11, 0xD000000000000010, 0x800000025247D630, v12);
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryDroppedEvents));
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v13, 0xD000000000000015, 0x800000025247DA00, v14);
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryReachedLimit));
  char v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v15, 0xD00000000000001ALL, 0x800000025247DA20, v16);
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryTerminatedStream));
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v17, 0xD00000000000001ELL, 0x800000025247DA40, v18);
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryResultNotHandled));
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v19, 0xD00000000000001ELL, 0x800000025247DA60, v20);
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(unsigned __int8 *)(v1+ OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryResultProcessingEncounteredError));
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v21, 0xD00000000000002ELL, 0x800000025247DA80, v22);
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryEncounteredError));
  char v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v23, 0xD000000000000013, 0x800000025247DAB0, v24);
  uint64_t result = swift_bridgeObjectRelease();
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryExecutionStartTime + 8) & 1) == 0
    && (*(unsigned char *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryExecutionEndTime + 8) & 1) == 0)
  {
    double v26 = (*(double *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryExecutionEndTime)
         - *(double *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryExecutionStartTime))
        * 1000.0;
    if ((~*(void *)&v26 & 0x7FF0000000000000) != 0)
    {
      if (v26 > -9.22337204e18)
      {
        if (v26 < 9.22337204e18)
        {
          id v27 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, (uint64_t)v26);
          char v28 = swift_isUniquelyReferenced_nonNull_native();
          sub_25246EC40((uint64_t)v27, 0xD000000000000018, 0x800000025247DBD0, v28);
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
LABEL_15:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
LABEL_7:
  id v29 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_queryType));
  char v30 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v29, 0x7079547972657571, 0xE900000000000065, v30);
  swift_bridgeObjectRelease();
  id v31 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_limit));
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v31, 0x74696D696CLL, 0xE500000000000000, v32);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_scope)) {
    uint64_t v33 = 2;
  }
  else {
    uint64_t v33 = 1;
  }
  id v34 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v33);
  char v35 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v34, 0x65706F6373, 0xE500000000000000, v35);
  swift_bridgeObjectRelease();
  id v36 = objc_msgSend(self, sel_processInfo);
  id v37 = objc_msgSend(v36, sel_name);

  if (v37)
  {
    sub_25247A840();
  }
  id v38 = objc_allocWithZone(NSString);
  uint64_t v39 = (void *)sub_25247A830();
  swift_bridgeObjectRelease();
  id v40 = objc_msgSend(v38, sel_initWithString_, v39);

  char v41 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v40, 0x4E737365636F7270, 0xEB00000000656D61, v41);
  swift_bridgeObjectRelease();
  sub_25247A470();
  id v43 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v42 / -86400.0);
  char v44 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v43, 0xD000000000000010, 0x800000025247DAD0, v44);
  swift_bridgeObjectRelease();
  sub_25247A400();
  id v46 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v45 / 86400.0);
  char v47 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v46, 0xD000000000000011, 0x800000025247DAF0, v47);
  swift_bridgeObjectRelease();
  id v48 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numProcessedEvents));
  char v49 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v48, 0xD000000000000012, 0x800000025247DB10, v49);
  swift_bridgeObjectRelease();
  id v50 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numEventsSavedToCache));
  char v51 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v50, 0xD000000000000015, 0x800000025247D810, v51);
  swift_bridgeObjectRelease();
  id v52 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredExpiredRecords));
  char v53 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v52, 0xD000000000000018, 0x800000025247D7B0, v53);
  swift_bridgeObjectRelease();
  id v54 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredNonUUIDNameRecords));
  char v55 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v54, 0xD00000000000001CLL, 0x800000025247D7F0, v55);
  swift_bridgeObjectRelease();
  id v56 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredNoCreationDateRecords));
  char v57 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v56, 0xD00000000000001FLL, 0x800000025247D7D0, v57);
  swift_bridgeObjectRelease();
  id v58 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numEmittedEvents));
  char v59 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v58, 0xD000000000000010, 0x800000025247D830, v59);
  swift_bridgeObjectRelease();
  id v60 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingDroppedEvents));
  char v61 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v60, 0xD00000000000001CLL, 0x800000025247DB30, v61);
  swift_bridgeObjectRelease();
  id v62 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingReachedLimit));
  char v63 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v62, 0xD00000000000001BLL, 0x800000025247DB50, v63);
  swift_bridgeObjectRelease();
  id v64 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingTerminatedStream));
  char v65 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v64, 0xD00000000000001FLL, 0x800000025247DB70, v65);
  swift_bridgeObjectRelease();
  id v66 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingResultNotHandled));
  char v67 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v66, 0xD00000000000001FLL, 0x800000025247DB90, v67);
  swift_bridgeObjectRelease();
  id v68 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingEncounteredError));
  char v69 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v68, 0xD00000000000001FLL, 0x800000025247DBB0, v69);
  swift_bridgeObjectRelease();
  id v70 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_cancelled));
  char v71 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v70, 0x6E61437972657571, 0xEE0064656C6C6563, v71);
  swift_bridgeObjectRelease();
  id v72 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_succeeded));
  char v73 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v72, 0x6375537972657571, 0xEE00646564656563, v73);
  swift_bridgeObjectRelease();
  id v74 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_subqueriesEnabled));
  char v75 = swift_isUniquelyReferenced_nonNull_native();
  sub_25246EC40((uint64_t)v74, 0xD000000000000011, 0x800000025247D5A0, v75);
  swift_bridgeObjectRelease();
  return v3;
}

id sub_25246E1FC(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6)
{
  char v25 = a2 & 1;
  char v26 = *a6;
  char v10 = &v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_queryStartTime];
  *(void *)char v10 = 0;
  v10[8] = 1;
  *(void *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numFetchedCKRecords] = 0;
  *(void *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_totalCKRecordSize] = 0;
  *(void *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numCKQueries] = 0;
  *(void *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numCKQueriesSucceeded] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryCancelled] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryDroppedEvents] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryReachedLimit] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryTerminatedStream] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryResultNotHandled] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryResultProcessingEncounteredError] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryEncounteredError] = 0;
  id v11 = &v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryExecutionStartTime];
  *(void *)id v11 = 0;
  v11[8] = 1;
  char v12 = &v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_ckQueryExecutionEndTime];
  *(void *)char v12 = 0;
  v12[8] = 1;
  *(void *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numProcessedEvents] = 0;
  *(void *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredExpiredRecords] = 0;
  *(void *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredNoCreationDateRecords] = 0;
  *(void *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numIgnoredNonUUIDNameRecords] = 0;
  *(void *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numEventsSavedToCache] = 0;
  *(void *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_numEmittedEvents] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingDroppedEvents] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingReachedLimit] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingTerminatedStream] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingResultNotHandled] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_processingEncounteredError] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_cancelled] = 0;
  v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_succeeded] = 0;
  id v13 = &v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_coreAnalyticsEventName];
  void *v13 = 0xD000000000000027;
  v13[1] = 0x800000025247DC10;
  *(void *)&v6[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_coreAnalyticsEventOptions] = 0;
  uint64_t v15 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  char v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 16);
  id v17 = v6;
  v17[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_subqueriesEnabled] = v16(v15, v14) & 1;
  char v18 = &v17[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_queryStartDate];
  uint64_t v19 = sub_25247A4B0();
  uint64_t v20 = *(void *)(v19 - 8);
  id v21 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v21(v18, a3, v19);
  v21(&v17[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_queryEndDate], a4, v19);
  *(void *)&v17[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_limit] = a5;
  v17[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_queryType] = v25;
  v17[OBJC_IVAR____TtC13HomeKitEvents13QueryLogEvent_scope] = v26;

  v28.receiver = v17;
  v28.super_class = (Class)type metadata accessor for QueryLogEvent();
  id v22 = objc_msgSendSuper2(&v28, sel_init);
  id v23 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v23(a4, v19);
  v23(a3, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v22;
}

id sub_25246E5A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QueryLogEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25246E694()
{
  return type metadata accessor for QueryLogEvent();
}

uint64_t type metadata accessor for QueryLogEvent()
{
  uint64_t result = qword_269C06280;
  if (!qword_269C06280) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25246E6E8()
{
  uint64_t result = sub_25247A4B0();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for QueryLogEvent.QueryType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25246E8B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QueryLogEvent.QueryType()
{
  return &type metadata for QueryLogEvent.QueryType;
}

unint64_t sub_25246E8EC()
{
  unint64_t result = qword_269C06290;
  if (!qword_269C06290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06290);
  }
  return result;
}

void sub_25246E940(uint64_t a1, uint64_t a2, char a3)
{
  unsigned int v4 = (void **)v3;
  uint64_t v8 = sub_25247A540();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = (void *)*v3;
  unint64_t v14 = sub_252460DBC(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_252462790();
    goto LABEL_7;
  }
  sub_252461420(v17, a3 & 1);
  unint64_t v22 = sub_252460DBC(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_25247B2C0();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_25246EDB0(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_25246EAE8(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_252460D44(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_252462A28();
      goto LABEL_7;
    }
    sub_252461844(v15, a4 & 1);
    unint64_t v21 = sub_252460D44(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_25247B2C0();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 40 * v12;
    __swift_destroy_boxed_opaque_existential_1(v19);
    return sub_2523DFC24(a1, v19);
  }
LABEL_13:
  sub_25246EE68(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

void sub_25246EC40(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_252460D44(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2524633EC();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_2524622C4(v15, a4 & 1);
  unint64_t v20 = sub_252460D44(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_25247B2C0();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v22 = (uint64_t *)(v18[6] + 16 * v12);
  *char v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;

  swift_bridgeObjectRetain();
}

uint64_t sub_25246EDB0(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_25247A540();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_25246EE68(unint64_t a1, uint64_t a2, uint64_t a3, long long *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unsigned int v6 = (void *)(a5[6] + 16 * a1);
  *unsigned int v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_2523DFC24(a4, a5[7] + 40 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_25246EED8()
{
  unint64_t result = qword_269C06298;
  if (!qword_269C06298)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269C06298);
  }
  return result;
}

uint64_t sub_25246EF18()
{
  return sub_25247B390();
}

uint64_t sub_25246EFA0()
{
  sub_25247A8D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25246F158()
{
  sub_25247A8D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25246F198()
{
  return sub_25247B390();
}

uint64_t sub_25246F1F4()
{
  return sub_25247B390();
}

unint64_t Constants.rawValue.getter()
{
  if (*v0) {
    return 0xD00000000000001BLL;
  }
  else {
    return 0xD000000000000032;
  }
}

uint64_t static Constants.maxCloudKitRecordsPerOperation.getter()
{
  return 400;
}

HomeKitEvents::Constants_optional __swiftcall Constants.init(rawValue:)(Swift::String rawValue)
{
  objc_super v2 = v1;
  uint64_t v3 = sub_25247B130();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *objc_super v2 = v5;
  return result;
}

uint64_t sub_25246F324(char *a1, char *a2)
{
  return sub_2523D28F8(*a1, *a2);
}

uint64_t sub_25246F330()
{
  return sub_25246EF18();
}

uint64_t sub_25246F338()
{
  sub_25247A8D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25246F3AC()
{
  return sub_25246F1F4();
}

HomeKitEvents::Constants_optional sub_25246F3B4(Swift::String *a1)
{
  return Constants.init(rawValue:)(*a1);
}

void sub_25246F3C0(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD00000000000001BLL;
  }
  else {
    unint64_t v2 = 0xD000000000000032;
  }
  unint64_t v3 = 0x800000025247BDD0;
  if (*v1) {
    unint64_t v3 = 0x800000025247BE10;
  }
  *a1 = v2;
  a1[1] = v3;
}

HomeKitEvents::CKOperationGroupName_optional __swiftcall CKOperationGroupName.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_25247B130();
  result.value = swift_bridgeObjectRelease();
  char v5 = 11;
  if (v3 < 0xB) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t CKOperationGroupName.rawValue.getter()
{
  unint64_t result = 0x536C616974696E49;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x446C616974696E49;
      break;
    case 2:
      unint64_t result = 0x556C616974696E49;
      break;
    case 3:
      unint64_t result = 0x6369646F69726550;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x74726174736552;
      break;
    case 6:
      unint64_t result = 0x6769725468737550;
      break;
    case 7:
      unint64_t result = 0x6E79537465736552;
      break;
    case 8:
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    case 0xA:
      unint64_t result = 0x53676E6972616853;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25246F5E4()
{
  unint64_t result = qword_269C062A0;
  if (!qword_269C062A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C062A0);
  }
  return result;
}

uint64_t sub_25246F638(unsigned __int8 *a1, char *a2)
{
  return sub_2523D29A4(*a1, *a2);
}

unint64_t sub_25246F648()
{
  unint64_t result = qword_269C062A8;
  if (!qword_269C062A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C062A8);
  }
  return result;
}

uint64_t sub_25246F69C()
{
  return sub_25247B390();
}

uint64_t sub_25246F6E4()
{
  return sub_25246EFA0();
}

uint64_t sub_25246F6EC()
{
  return sub_25247B390();
}

HomeKitEvents::CKOperationGroupName_optional sub_25246F730(Swift::String *a1)
{
  return CKOperationGroupName.init(rawValue:)(*a1);
}

unint64_t sub_25246F73C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = CKOperationGroupName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unsigned char *storeEnumTagSinglePayload for Constants(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25246F830);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Constants()
{
  return &type metadata for Constants;
}

uint64_t getEnumTagSinglePayload for CKOperationGroupName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CKOperationGroupName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25246F9C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CKOperationGroupName()
{
  return &type metadata for CKOperationGroupName;
}

uint64_t sub_25246F9FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252474470(v2, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      a1[3] = type metadata accessor for DoorEvent();
      uint64_t v7 = sub_252474824(&qword_269C04B50, (void (*)(uint64_t))type metadata accessor for DoorEvent);
      int v8 = type metadata accessor for DoorEvent;
      break;
    case 2u:
      a1[3] = type metadata accessor for GarageDoorEvent();
      uint64_t v7 = sub_252474824(&qword_269C04B48, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
      int v8 = type metadata accessor for GarageDoorEvent;
      break;
    case 3u:
      a1[3] = type metadata accessor for LockEvent();
      uint64_t v7 = sub_252474824(&qword_269C04B40, (void (*)(uint64_t))type metadata accessor for LockEvent);
      int v8 = type metadata accessor for LockEvent;
      break;
    case 4u:
      a1[3] = type metadata accessor for SecuritySystemEvent();
      uint64_t v7 = sub_252474824(&qword_269C04B38, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
      int v8 = type metadata accessor for SecuritySystemEvent;
      break;
    case 5u:
      a1[3] = type metadata accessor for SmokeDetectorEvent();
      uint64_t v7 = sub_252474824(&qword_269C04B30, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
      int v8 = type metadata accessor for SmokeDetectorEvent;
      break;
    case 6u:
      a1[3] = type metadata accessor for WindowEvent();
      uint64_t v7 = sub_252474824(&qword_269C04B28, (void (*)(uint64_t))type metadata accessor for WindowEvent);
      int v8 = type metadata accessor for WindowEvent;
      break;
    default:
      a1[3] = type metadata accessor for ContactSensorEvent();
      uint64_t v7 = sub_252474824(&qword_269C04B58, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
      int v8 = type metadata accessor for ContactSensorEvent;
      break;
  }
  BOOL v9 = v8;
  a1[4] = v7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_252474774((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v9);
}

uint64_t SomeAccessoryEvent.init<A>(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a3;
  uint64_t v38 = type metadata accessor for WindowEvent();
  MEMORY[0x270FA5388](v38);
  uint64_t v39 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for SmokeDetectorEvent();
  MEMORY[0x270FA5388](v40);
  char v41 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for SecuritySystemEvent();
  MEMORY[0x270FA5388](v42);
  id v43 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for LockEvent();
  MEMORY[0x270FA5388](v44);
  double v45 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for GarageDoorEvent();
  MEMORY[0x270FA5388](v46);
  char v47 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DoorEvent();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ContactSensorEvent();
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  char v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a2 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v14);
  id v37 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  char v21 = (char *)&v36 - v20;
  char v22 = a1;
  id v36 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v36((char *)&v36 - v20, a1, a2);
  uint64_t v23 = a2;
  if (swift_dynamicCast())
  {
    BOOL v24 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
    uint64_t v25 = v22;
    uint64_t v26 = v23;
    v24(v25, v23);
    sub_252474774((uint64_t)v16, v48, (uint64_t (*)(void))type metadata accessor for ContactSensorEvent);
LABEL_15:
    type metadata accessor for SomeAccessoryEvent();
    swift_storeEnumTagMultiPayload();
    return v24(v21, v26);
  }
  id v27 = v22;
  uint64_t v28 = v48;
  if (swift_dynamicCast())
  {
    BOOL v24 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
    id v29 = v22;
    uint64_t v26 = v23;
    v24(v29, v23);
    sub_252474774((uint64_t)v12, v28, (uint64_t (*)(void))type metadata accessor for DoorEvent);
    goto LABEL_15;
  }
  uint64_t v30 = (uint64_t)v47;
  uint64_t v26 = a2;
  if (swift_dynamicCast())
  {
    BOOL v24 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
    v24(v27, v23);
    sub_252474774(v30, v28, (uint64_t (*)(void))type metadata accessor for GarageDoorEvent);
    goto LABEL_15;
  }
  uint64_t v31 = (uint64_t)v45;
  if (swift_dynamicCast())
  {
    BOOL v24 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
    v24(v27, v26);
    sub_252474774(v31, v28, (uint64_t (*)(void))type metadata accessor for LockEvent);
    goto LABEL_15;
  }
  uint64_t v32 = (uint64_t)v43;
  if (swift_dynamicCast())
  {
    BOOL v24 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
    v24(v27, v26);
    sub_252474774(v32, v28, (uint64_t (*)(void))type metadata accessor for SecuritySystemEvent);
    goto LABEL_15;
  }
  uint64_t v33 = (uint64_t)v41;
  if (swift_dynamicCast())
  {
    BOOL v24 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
    v24(v27, v26);
    sub_252474774(v33, v28, (uint64_t (*)(void))type metadata accessor for SmokeDetectorEvent);
    goto LABEL_15;
  }
  uint64_t v34 = (uint64_t)v39;
  if (swift_dynamicCast())
  {
    BOOL v24 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
    v24(v27, v26);
    sub_252474774(v34, v28, (uint64_t (*)(void))type metadata accessor for WindowEvent);
    goto LABEL_15;
  }
  v36(v37, v27, a2);
  uint64_t v50 = 0;
  unint64_t v51 = 0xE000000000000000;
  sub_25247AF40();
  sub_25247A920();
  uint64_t v49 = type metadata accessor for SomeAccessoryEvent();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269C062B0);
  sub_25247A890();
  sub_25247A920();
  swift_bridgeObjectRelease();
  sub_25247A920();
  sub_25247B240();
  uint64_t result = sub_25247B0B0();
  __break(1u);
  return result;
}

uint64_t SomeAccessoryEvent.anyAccessoryEvent.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v17[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252474470(v2, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v18 = type metadata accessor for DoorEvent();
      uint64_t v7 = sub_252474824(&qword_269C04B50, (void (*)(uint64_t))type metadata accessor for DoorEvent);
      uint64_t v8 = type metadata accessor for DoorEvent;
      break;
    case 2u:
      uint64_t v18 = type metadata accessor for GarageDoorEvent();
      uint64_t v7 = sub_252474824(&qword_269C04B48, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
      uint64_t v8 = type metadata accessor for GarageDoorEvent;
      break;
    case 3u:
      uint64_t v18 = type metadata accessor for LockEvent();
      uint64_t v7 = sub_252474824(&qword_269C04B40, (void (*)(uint64_t))type metadata accessor for LockEvent);
      uint64_t v8 = type metadata accessor for LockEvent;
      break;
    case 4u:
      uint64_t v18 = type metadata accessor for SecuritySystemEvent();
      uint64_t v7 = sub_252474824(&qword_269C04B38, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
      uint64_t v8 = type metadata accessor for SecuritySystemEvent;
      break;
    case 5u:
      uint64_t v18 = type metadata accessor for SmokeDetectorEvent();
      uint64_t v7 = sub_252474824(&qword_269C04B30, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
      uint64_t v8 = type metadata accessor for SmokeDetectorEvent;
      break;
    case 6u:
      uint64_t v18 = type metadata accessor for WindowEvent();
      uint64_t v7 = sub_252474824(&qword_269C04B28, (void (*)(uint64_t))type metadata accessor for WindowEvent);
      uint64_t v8 = type metadata accessor for WindowEvent;
      break;
    default:
      uint64_t v18 = type metadata accessor for ContactSensorEvent();
      uint64_t v7 = sub_252474824(&qword_269C04B58, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
      uint64_t v8 = type metadata accessor for ContactSensorEvent;
      break;
  }
  uint64_t v9 = v8;
  uint64_t v19 = v7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  sub_252474774((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v9);
  uint64_t v11 = v18;
  uint64_t v12 = v19;
  uint64_t v13 = __swift_project_boxed_opaque_existential_1(v17, v18);
  a1[3] = v11;
  a1[4] = *(void *)(v12 + 8);
  uint64_t v14 = __swift_allocate_boxed_opaque_existential_1(a1);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v14, v13, v11);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

uint64_t SomeAccessoryEvent.hash(into:)(uint64_t a1)
{
  uint64_t v64 = a1;
  uint64_t v59 = type metadata accessor for WindowEvent();
  MEMORY[0x270FA5388](v59);
  id v58 = (char *)&v53 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for SmokeDetectorEvent();
  MEMORY[0x270FA5388](v57);
  id v56 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SecuritySystemEvent();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LockEvent();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for GarageDoorEvent();
  MEMORY[0x270FA5388](v55);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DoorEvent();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25247A540();
  uint64_t v61 = *(void *)(v14 - 8);
  uint64_t v62 = v14;
  MEMORY[0x270FA5388](v14);
  id v60 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v54 = (uint64_t)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  char v21 = (char *)&v53 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  BOOL v24 = (char *)&v53 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v53 - v25;
  uint64_t v53 = type metadata accessor for ContactSensorEvent();
  MEMORY[0x270FA5388](v53);
  uint64_t v28 = (char *)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v53 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252474470(v63, (uint64_t)v31);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252474774((uint64_t)v31, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for DoorEvent);
      sub_25247B360();
      DoorEvent.hash(into:)();
      uint64_t v35 = (uint64_t)v13;
      id v36 = type metadata accessor for DoorEvent;
      return sub_252477524(v35, (uint64_t (*)(void))v36);
    case 2u:
      sub_252474774((uint64_t)v31, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for GarageDoorEvent);
      sub_25247B360();
      sub_25247A4B0();
      sub_252474824(&qword_269C04800, MEMORY[0x263F07490]);
      sub_25247A800();
      type metadata accessor for EventBase(0);
      sub_252474824((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
      uint64_t v37 = v62;
      sub_25247A800();
      sub_25247B360();
      uint64_t v38 = type metadata accessor for AccessoryEventBase(0);
      sub_25247A800();
      sub_25247A8D0();
      sub_25247A800();
      sub_25247A8D0();
      sub_2523E1C2C((uint64_t)&v10[*(int *)(v38 + 36)], (uint64_t)v24);
      uint64_t v39 = v61;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v24, 1, v37) == 1)
      {
        sub_25247B370();
      }
      else
      {
        uint64_t v49 = v60;
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v60, v24, v37);
        sub_25247B370();
        sub_25247A800();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v49, v37);
      }
      sub_25247B360();
      id v36 = type metadata accessor for GarageDoorEvent;
      uint64_t v35 = (uint64_t)v10;
      return sub_252477524(v35, (uint64_t (*)(void))v36);
    case 3u:
      sub_252474774((uint64_t)v31, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for LockEvent);
      sub_25247B360();
      LockEvent.hash(into:)();
      uint64_t v35 = (uint64_t)v8;
      id v36 = type metadata accessor for LockEvent;
      return sub_252477524(v35, (uint64_t (*)(void))v36);
    case 4u:
      sub_252474774((uint64_t)v31, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SecuritySystemEvent);
      sub_25247B360();
      SecuritySystemEvent.hash(into:)();
      uint64_t v35 = (uint64_t)v5;
      id v36 = type metadata accessor for SecuritySystemEvent;
      return sub_252477524(v35, (uint64_t (*)(void))v36);
    case 5u:
      uint64_t v28 = v56;
      sub_252474774((uint64_t)v31, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for SmokeDetectorEvent);
      sub_25247B360();
      sub_25247A4B0();
      sub_252474824(&qword_269C04800, MEMORY[0x263F07490]);
      sub_25247A800();
      type metadata accessor for EventBase(0);
      sub_252474824((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
      uint64_t v40 = v62;
      sub_25247A800();
      sub_25247B360();
      uint64_t v41 = type metadata accessor for AccessoryEventBase(0);
      sub_25247A800();
      sub_25247A8D0();
      sub_25247A800();
      sub_25247A8D0();
      sub_2523E1C2C((uint64_t)&v28[*(int *)(v41 + 36)], (uint64_t)v21);
      uint64_t v42 = v61;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v21, 1, v40) == 1)
      {
        sub_25247B370();
      }
      else
      {
        uint64_t v50 = v60;
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v60, v21, v40);
        sub_25247B370();
        sub_25247A800();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v50, v40);
      }
      sub_25247B360();
      uint64_t v48 = type metadata accessor for SmokeDetectorEvent;
      goto LABEL_21;
    case 6u:
      uint64_t v28 = v58;
      sub_252474774((uint64_t)v31, (uint64_t)v58, (uint64_t (*)(void))type metadata accessor for WindowEvent);
      sub_25247B360();
      sub_25247A4B0();
      sub_252474824(&qword_269C04800, MEMORY[0x263F07490]);
      sub_25247A800();
      type metadata accessor for EventBase(0);
      sub_252474824((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
      uint64_t v43 = v62;
      sub_25247A800();
      sub_25247B360();
      uint64_t v44 = type metadata accessor for AccessoryEventBase(0);
      sub_25247A800();
      sub_25247A8D0();
      sub_25247A800();
      sub_25247A8D0();
      uint64_t v45 = v54;
      sub_2523E1C2C((uint64_t)&v28[*(int *)(v44 + 36)], v54);
      uint64_t v46 = v61;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v45, 1, v43) == 1)
      {
        sub_25247B370();
      }
      else
      {
        unint64_t v51 = v60;
        (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v60, v45, v43);
        sub_25247B370();
        sub_25247A800();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v51, v43);
      }
      sub_25247B360();
      uint64_t v48 = type metadata accessor for WindowEvent;
      goto LABEL_21;
    default:
      sub_252474774((uint64_t)v31, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for ContactSensorEvent);
      sub_25247B360();
      sub_25247A4B0();
      sub_252474824(&qword_269C04800, MEMORY[0x263F07490]);
      sub_25247A800();
      type metadata accessor for EventBase(0);
      sub_252474824((unint64_t *)&qword_269C04808, MEMORY[0x263F07508]);
      uint64_t v32 = v62;
      sub_25247A800();
      sub_25247B360();
      uint64_t v33 = type metadata accessor for AccessoryEventBase(0);
      sub_25247A800();
      sub_25247A8D0();
      sub_25247A800();
      sub_25247A8D0();
      sub_2523E1C2C((uint64_t)&v28[*(int *)(v33 + 36)], (uint64_t)v26);
      uint64_t v34 = v61;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v26, 1, v32) == 1)
      {
        sub_25247B370();
      }
      else
      {
        char v47 = v60;
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v60, v26, v32);
        sub_25247B370();
        sub_25247A800();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v47, v32);
      }
      sub_25247B360();
      uint64_t v48 = type metadata accessor for ContactSensorEvent;
LABEL_21:
      id v36 = v48;
      uint64_t v35 = (uint64_t)v28;
      return sub_252477524(v35, (uint64_t (*)(void))v36);
  }
}

uint64_t sub_2524715D4()
{
  uint64_t result = 0x53746361746E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1919905636;
      break;
    case 2:
      uint64_t result = 0x6F44656761726167;
      break;
    case 3:
      uint64_t result = 1801678700;
      break;
    case 4:
      uint64_t result = 0x7974697275636573;
      break;
    case 5:
      uint64_t result = 0x746544656B6F6D73;
      break;
    case 6:
      uint64_t result = 0x776F646E6977;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2524716CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252479BBC(a1, a2);
  *a3 = result;
  return result;
}

void sub_2524716F4(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_252471700(uint64_t a1)
{
  unint64_t v2 = sub_2524744D4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25247173C(uint64_t a1)
{
  unint64_t v2 = sub_2524744D4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25247177C(uint64_t a1)
{
  unint64_t v2 = sub_252474720();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2524717B8(uint64_t a1)
{
  unint64_t v2 = sub_252474720();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2524717F4(uint64_t a1)
{
  unint64_t v2 = sub_2524746CC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252471830(uint64_t a1)
{
  unint64_t v2 = sub_2524746CC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25247186C(uint64_t a1)
{
  unint64_t v2 = sub_252474678();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2524718A8(uint64_t a1)
{
  unint64_t v2 = sub_252474678();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2524718E4(uint64_t a1)
{
  unint64_t v2 = sub_252474624();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252471920(uint64_t a1)
{
  unint64_t v2 = sub_252474624();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25247195C(uint64_t a1)
{
  unint64_t v2 = sub_2524745D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252471998(uint64_t a1)
{
  unint64_t v2 = sub_2524745D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2524719D4(uint64_t a1)
{
  unint64_t v2 = sub_25247457C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252471A10(uint64_t a1)
{
  unint64_t v2 = sub_25247457C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252471A4C(uint64_t a1)
{
  unint64_t v2 = sub_252474528();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252471A88(uint64_t a1)
{
  unint64_t v2 = sub_252474528();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SomeAccessoryEvent.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C062B8);
  uint64_t v83 = *(void *)(v2 - 8);
  uint64_t v84 = v2;
  MEMORY[0x270FA5388](v2);
  unint64_t v82 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for WindowEvent();
  MEMORY[0x270FA5388](v79);
  uint64_t v81 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C062C0);
  uint64_t v78 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v77 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for SmokeDetectorEvent();
  MEMORY[0x270FA5388](v74);
  uint64_t v76 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C062C8);
  uint64_t v73 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  id v72 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for SecuritySystemEvent();
  MEMORY[0x270FA5388](v69);
  uint64_t v71 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C062D0);
  uint64_t v68 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  char v67 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for LockEvent();
  MEMORY[0x270FA5388](v65);
  uint64_t v66 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C062D8);
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v62 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for GarageDoorEvent();
  MEMORY[0x270FA5388](v60);
  uint64_t v61 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C062E0);
  uint64_t v58 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v57 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for DoorEvent();
  MEMORY[0x270FA5388](v55);
  uint64_t v56 = (uint64_t)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C062E8);
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ContactSensorEvent();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for SomeAccessoryEvent();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C062F0);
  uint64_t v86 = *(void *)(v23 - 8);
  uint64_t v87 = v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2524744D4();
  uint64_t v85 = v25;
  sub_25247B3B0();
  sub_252474470(v88, (uint64_t)v22);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v30 = type metadata accessor for DoorEvent;
      uint64_t v31 = v56;
      sub_252474774((uint64_t)v22, v56, (uint64_t (*)(void))type metadata accessor for DoorEvent);
      v89[18] = 1;
      sub_2524746CC();
      uint64_t v32 = v57;
      uint64_t v33 = v87;
      uint64_t v34 = v85;
      sub_25247B1A0();
      sub_252474824(&qword_269C05E00, (void (*)(uint64_t))type metadata accessor for DoorEvent);
      uint64_t v35 = v59;
      sub_25247B1D0();
      id v36 = (uint64_t *)v89;
      goto LABEL_5;
    case 2u:
      uint64_t v30 = type metadata accessor for GarageDoorEvent;
      uint64_t v31 = v61;
      sub_252474774((uint64_t)v22, v61, (uint64_t (*)(void))type metadata accessor for GarageDoorEvent);
      v89[19] = 2;
      sub_252474678();
      uint64_t v32 = v62;
      uint64_t v33 = v87;
      uint64_t v34 = v85;
      sub_25247B1A0();
      sub_252474824(&qword_269C05C60, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
      uint64_t v35 = v64;
      sub_25247B1D0();
      id v36 = &v90;
LABEL_5:
      (*(void (**)(char *, uint64_t))(*(v36 - 32) + 8))(v32, v35);
      sub_252477524(v31, (uint64_t (*)(void))v30);
      return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v34, v33);
    case 3u:
      uint64_t v37 = (uint64_t)v22;
      uint64_t v38 = v66;
      sub_252474774(v37, v66, (uint64_t (*)(void))type metadata accessor for LockEvent);
      v89[20] = 3;
      sub_252474624();
      uint64_t v39 = v67;
      uint64_t v40 = v87;
      uint64_t v41 = v85;
      sub_25247B1A0();
      sub_252474824(&qword_269C04850, (void (*)(uint64_t))type metadata accessor for LockEvent);
      uint64_t v42 = v70;
      sub_25247B1D0();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v42);
      uint64_t v43 = type metadata accessor for LockEvent;
      goto LABEL_10;
    case 4u:
      uint64_t v44 = (uint64_t)v22;
      uint64_t v38 = v71;
      sub_252474774(v44, v71, (uint64_t (*)(void))type metadata accessor for SecuritySystemEvent);
      v89[21] = 4;
      sub_2524745D0();
      uint64_t v45 = v72;
      uint64_t v40 = v87;
      uint64_t v41 = v85;
      sub_25247B1A0();
      sub_252474824(&qword_269C051B0, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
      uint64_t v46 = v75;
      sub_25247B1D0();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v45, v46);
      uint64_t v43 = type metadata accessor for SecuritySystemEvent;
      goto LABEL_10;
    case 5u:
      uint64_t v47 = (uint64_t)v22;
      uint64_t v38 = v76;
      sub_252474774(v47, v76, (uint64_t (*)(void))type metadata accessor for SmokeDetectorEvent);
      v89[22] = 5;
      sub_25247457C();
      uint64_t v48 = v77;
      uint64_t v40 = v87;
      uint64_t v41 = v85;
      sub_25247B1A0();
      sub_252474824(&qword_269C054A0, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
      uint64_t v49 = v80;
      sub_25247B1D0();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v48, v49);
      uint64_t v43 = type metadata accessor for SmokeDetectorEvent;
      goto LABEL_10;
    case 6u:
      uint64_t v50 = (uint64_t)v22;
      uint64_t v38 = v81;
      sub_252474774(v50, v81, (uint64_t (*)(void))type metadata accessor for WindowEvent);
      v89[23] = 6;
      sub_252474528();
      unint64_t v51 = v82;
      uint64_t v40 = v87;
      uint64_t v41 = v85;
      sub_25247B1A0();
      sub_252474824(&qword_269C059A0, (void (*)(uint64_t))type metadata accessor for WindowEvent);
      uint64_t v52 = v84;
      sub_25247B1D0();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v51, v52);
      uint64_t v43 = type metadata accessor for WindowEvent;
LABEL_10:
      sub_252477524(v38, (uint64_t (*)(void))v43);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v41, v40);
      break;
    default:
      sub_252474774((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ContactSensorEvent);
      v89[17] = 0;
      sub_252474720();
      uint64_t v26 = v87;
      uint64_t v27 = v85;
      sub_25247B1A0();
      sub_252474824(&qword_269C05E88, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
      uint64_t v28 = v54;
      sub_25247B1D0();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v16, v28);
      sub_252477524((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ContactSensorEvent);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v27, v26);
      break;
  }
  return result;
}

uint64_t SomeAccessoryEvent.hashValue.getter()
{
  sub_25247B350();
  SomeAccessoryEvent.hash(into:)((uint64_t)v1);
  return sub_25247B390();
}

uint64_t SomeAccessoryEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v96 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06338);
  uint64_t v93 = *(void *)(v3 - 8);
  uint64_t v94 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v99 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06340);
  uint64_t v91 = *(void *)(v5 - 8);
  uint64_t v92 = v5;
  MEMORY[0x270FA5388](v5);
  os_log_type_t v98 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06348);
  uint64_t v89 = *(void *)(v7 - 8);
  uint64_t v90 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v97 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06350);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v87 = v9;
  uint64_t v88 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v95 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06358);
  uint64_t v86 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  int64_t v103 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06360);
  uint64_t v84 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  unint64_t v102 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06368);
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v101 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06370);
  uint64_t v100 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for SomeAccessoryEvent();
  uint64_t v17 = MEMORY[0x270FA5388](v104);
  uint64_t v80 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v79 = (char *)&v73 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v78 = (char *)&v73 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v73 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v73 - v27;
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v31 = (char *)&v73 - v30;
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  uint64_t v34 = (char *)&v73 - v33;
  MEMORY[0x270FA5388](v32);
  id v36 = (char *)&v73 - v35;
  uint64_t v37 = a1[3];
  uint64_t v106 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v37);
  sub_2524744D4();
  uint64_t v38 = v107;
  sub_25247B3A0();
  if (v38) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
  }
  uint64_t v74 = v31;
  uint64_t v75 = v28;
  uint64_t v76 = v25;
  uint64_t v107 = v34;
  uint64_t v39 = v101;
  uint64_t v40 = v102;
  uint64_t v41 = v103;
  uint64_t v77 = v36;
  uint64_t v42 = v105;
  uint64_t v43 = sub_25247B190();
  if (*(void *)(v43 + 16) != 1)
  {
    uint64_t v48 = sub_25247AFA0();
    swift_allocError();
    uint64_t v50 = v49;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269C058E0);
    *uint64_t v50 = v104;
    sub_25247B150();
    sub_25247AF90();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v48 - 8) + 104))(v50, *MEMORY[0x263F8DCB0], v48);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v16, v42);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
  }
  switch(*(unsigned char *)(v43 + 32))
  {
    case 1:
      char v109 = 1;
      sub_2524746CC();
      uint64_t v52 = v40;
      sub_25247B140();
      type metadata accessor for DoorEvent();
      uint64_t v53 = v42;
      sub_252474824(&qword_269C05A40, (void (*)(uint64_t))type metadata accessor for DoorEvent);
      uint64_t v54 = (uint64_t)v74;
      uint64_t v55 = v83;
      sub_25247B180();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v16, v53);
      uint64_t v46 = (uint64_t)v106;
      unint64_t v102 = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v47 = v54;
      break;
    case 2:
      char v110 = 2;
      sub_252474678();
      sub_25247B140();
      type metadata accessor for GarageDoorEvent();
      sub_252474824(&qword_269C05A38, (void (*)(uint64_t))type metadata accessor for GarageDoorEvent);
      uint64_t v56 = (uint64_t)v75;
      uint64_t v57 = v85;
      sub_25247B180();
      uint64_t v58 = v100;
      unint64_t v102 = 0;
      (*(void (**)(char *, uint64_t))(v86 + 8))(v41, v57);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v16, v105);
      swift_storeEnumTagMultiPayload();
      uint64_t v47 = v56;
      goto LABEL_14;
    case 3:
      char v111 = 3;
      sub_252474624();
      uint64_t v59 = v95;
      sub_25247B140();
      type metadata accessor for LockEvent();
      sub_252474824(&qword_269C04848, (void (*)(uint64_t))type metadata accessor for LockEvent);
      uint64_t v60 = (uint64_t)v76;
      uint64_t v61 = v87;
      sub_25247B180();
      uint64_t v62 = v100;
      unint64_t v102 = 0;
      (*(void (**)(char *, uint64_t))(v88 + 8))(v59, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v16, v105);
      swift_storeEnumTagMultiPayload();
      uint64_t v47 = v60;
      goto LABEL_14;
    case 4:
      char v112 = 4;
      sub_2524745D0();
      uint64_t v63 = v97;
      sub_25247B140();
      type metadata accessor for SecuritySystemEvent();
      sub_252474824(&qword_269C051A8, (void (*)(uint64_t))type metadata accessor for SecuritySystemEvent);
      uint64_t v64 = v78;
      uint64_t v65 = v90;
      sub_25247B180();
      uint64_t v66 = v100;
      unint64_t v102 = 0;
      (*(void (**)(char *, uint64_t))(v89 + 8))(v63, v65);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v16, v105);
      goto LABEL_13;
    case 5:
      char v113 = 5;
      sub_25247457C();
      char v67 = v98;
      sub_25247B140();
      type metadata accessor for SmokeDetectorEvent();
      sub_252474824(&qword_269C05498, (void (*)(uint64_t))type metadata accessor for SmokeDetectorEvent);
      uint64_t v64 = v79;
      uint64_t v68 = v92;
      sub_25247B180();
      unint64_t v102 = 0;
      (*(void (**)(char *, uint64_t))(v91 + 8))(v67, v68);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v16, v42);
      goto LABEL_13;
    case 6:
      char v114 = 6;
      sub_252474528();
      uint64_t v69 = v99;
      sub_25247B140();
      type metadata accessor for WindowEvent();
      sub_252474824(&qword_269C05998, (void (*)(uint64_t))type metadata accessor for WindowEvent);
      uint64_t v64 = v80;
      uint64_t v70 = v94;
      sub_25247B180();
      uint64_t v71 = v100;
      unint64_t v102 = 0;
      (*(void (**)(char *, uint64_t))(v93 + 8))(v69, v70);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v16, v105);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      uint64_t v47 = (uint64_t)v64;
LABEL_14:
      uint64_t v46 = (uint64_t)v106;
      break;
    default:
      char v108 = 0;
      sub_252474720();
      sub_25247B140();
      type metadata accessor for ContactSensorEvent();
      sub_252474824(qword_269C05A48, (void (*)(uint64_t))type metadata accessor for ContactSensorEvent);
      uint64_t v44 = (uint64_t)v107;
      uint64_t v45 = v82;
      sub_25247B180();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v39, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v16, v105);
      uint64_t v46 = (uint64_t)v106;
      unint64_t v102 = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v47 = v44;
      break;
  }
  uint64_t v72 = (uint64_t)v77;
  sub_252474774(v47, (uint64_t)v77, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
  sub_252474774(v72, v96, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
  return __swift_destroy_boxed_opaque_existential_1(v46);
}

uint64_t sub_252473904@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SomeAccessoryEvent.init(from:)(a1, a2);
}

uint64_t sub_25247391C(void *a1)
{
  return SomeAccessoryEvent.encode(to:)(a1);
}

uint64_t sub_252473934()
{
  sub_25247B350();
  SomeAccessoryEvent.hash(into:)((uint64_t)v1);
  return sub_25247B390();
}

uint64_t sub_252473978()
{
  sub_25247B350();
  SomeAccessoryEvent.hash(into:)((uint64_t)v1);
  return sub_25247B390();
}

uint64_t _s13HomeKitEvents18SomeAccessoryEventO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v74 = a1;
  uint64_t v65 = type metadata accessor for WindowEvent();
  MEMORY[0x270FA5388](v65);
  uint64_t v72 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for SmokeDetectorEvent();
  MEMORY[0x270FA5388](v64);
  uint64_t v71 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for SecuritySystemEvent();
  MEMORY[0x270FA5388](v63);
  uint64_t v70 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for LockEvent();
  MEMORY[0x270FA5388](v62);
  uint64_t v69 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for GarageDoorEvent();
  MEMORY[0x270FA5388](v61);
  uint64_t v68 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for DoorEvent();
  MEMORY[0x270FA5388](v60);
  uint64_t v67 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for ContactSensorEvent();
  MEMORY[0x270FA5388](v59);
  uint64_t v66 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SomeAccessoryEvent();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v73 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v59 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v59 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v59 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v59 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v59 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v59 - v28;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06450);
  uint64_t v31 = MEMORY[0x270FA5388](v30 - 8);
  uint64_t v33 = (char *)&v59 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = (uint64_t)&v33[*(int *)(v31 + 56)];
  sub_252474470(v74, (uint64_t)v33);
  sub_252474470(a2, v34);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252474470((uint64_t)v33, (uint64_t)v27);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        uint64_t v53 = type metadata accessor for DoorEvent;
        goto LABEL_37;
      }
      uint64_t v37 = v34;
      uint64_t v38 = v67;
      sub_252474774(v37, v67, (uint64_t (*)(void))type metadata accessor for DoorEvent);
      if ((j___s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(v27, v38) & 1) != 0
        && v27[*(int *)(v60 + 20)] == *(unsigned char *)(v38 + *(int *)(v60 + 20)))
      {
        uint64_t v39 = type metadata accessor for DoorEvent;
        goto LABEL_28;
      }
      uint64_t v57 = type metadata accessor for DoorEvent;
      goto LABEL_48;
    case 2u:
      sub_252474470((uint64_t)v33, (uint64_t)v24);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        uint64_t v35 = type metadata accessor for GarageDoorEvent;
        uint64_t v36 = (uint64_t)v24;
        goto LABEL_38;
      }
      uint64_t v40 = v34;
      uint64_t v41 = v68;
      sub_252474774(v40, v68, (uint64_t (*)(void))type metadata accessor for GarageDoorEvent);
      if ((j___s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(v24, v41) & 1) != 0
        && v24[*(int *)(v61 + 20)] == *(unsigned char *)(v41 + *(int *)(v61 + 20)))
      {
        uint64_t v42 = type metadata accessor for GarageDoorEvent;
        sub_252477524(v41, (uint64_t (*)(void))type metadata accessor for GarageDoorEvent);
        uint64_t v43 = (uint64_t)v24;
        goto LABEL_29;
      }
      uint64_t v54 = type metadata accessor for GarageDoorEvent;
      sub_252477524(v41, (uint64_t (*)(void))type metadata accessor for GarageDoorEvent);
      uint64_t v55 = (uint64_t)v24;
      goto LABEL_49;
    case 3u:
      sub_252474470((uint64_t)v33, (uint64_t)v21);
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        uint64_t v35 = type metadata accessor for LockEvent;
        uint64_t v36 = (uint64_t)v21;
        goto LABEL_38;
      }
      uint64_t v44 = v34;
      uint64_t v45 = v69;
      sub_252474774(v44, v69, (uint64_t (*)(void))type metadata accessor for LockEvent);
      if ((j___s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(v21, v45) & 1) != 0
        && v21[*(int *)(v62 + 20)] == *(unsigned char *)(v45 + *(int *)(v62 + 20)))
      {
        uint64_t v42 = type metadata accessor for LockEvent;
        sub_252477524(v45, (uint64_t (*)(void))type metadata accessor for LockEvent);
        uint64_t v43 = (uint64_t)v21;
        goto LABEL_29;
      }
      uint64_t v54 = type metadata accessor for LockEvent;
      sub_252477524(v45, (uint64_t (*)(void))type metadata accessor for LockEvent);
      uint64_t v55 = (uint64_t)v21;
      goto LABEL_49;
    case 4u:
      sub_252474470((uint64_t)v33, (uint64_t)v18);
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        uint64_t v35 = type metadata accessor for SecuritySystemEvent;
        uint64_t v36 = (uint64_t)v18;
        goto LABEL_38;
      }
      uint64_t v46 = v34;
      uint64_t v47 = v70;
      sub_252474774(v46, v70, (uint64_t (*)(void))type metadata accessor for SecuritySystemEvent);
      if ((j___s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(v18, v47) & 1) != 0
        && qword_2524835A8[v18[*(int *)(v63 + 20)]] == qword_2524835A8[*(char *)(v47 + *(int *)(v63 + 20))])
      {
        uint64_t v42 = type metadata accessor for SecuritySystemEvent;
        sub_252477524(v47, (uint64_t (*)(void))type metadata accessor for SecuritySystemEvent);
        uint64_t v43 = (uint64_t)v18;
        goto LABEL_29;
      }
      uint64_t v54 = type metadata accessor for SecuritySystemEvent;
      sub_252477524(v47, (uint64_t (*)(void))type metadata accessor for SecuritySystemEvent);
      uint64_t v55 = (uint64_t)v18;
      goto LABEL_49;
    case 5u:
      sub_252474470((uint64_t)v33, (uint64_t)v15);
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        uint64_t v35 = type metadata accessor for SmokeDetectorEvent;
        uint64_t v36 = (uint64_t)v15;
        goto LABEL_38;
      }
      uint64_t v48 = v34;
      uint64_t v49 = v71;
      sub_252474774(v48, v71, (uint64_t (*)(void))type metadata accessor for SmokeDetectorEvent);
      if ((j___s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(v15, v49) & 1) != 0
        && v15[*(int *)(v64 + 20)] == *(unsigned char *)(v49 + *(int *)(v64 + 20)))
      {
        uint64_t v42 = type metadata accessor for SmokeDetectorEvent;
        sub_252477524(v49, (uint64_t (*)(void))type metadata accessor for SmokeDetectorEvent);
        uint64_t v43 = (uint64_t)v15;
        goto LABEL_29;
      }
      uint64_t v54 = type metadata accessor for SmokeDetectorEvent;
      sub_252477524(v49, (uint64_t (*)(void))type metadata accessor for SmokeDetectorEvent);
      uint64_t v55 = (uint64_t)v15;
      goto LABEL_49;
    case 6u:
      uint64_t v27 = v73;
      sub_252474470((uint64_t)v33, (uint64_t)v73);
      if (swift_getEnumCaseMultiPayload() != 6)
      {
        uint64_t v53 = type metadata accessor for WindowEvent;
LABEL_37:
        uint64_t v35 = v53;
        uint64_t v36 = (uint64_t)v27;
        goto LABEL_38;
      }
      uint64_t v50 = v34;
      uint64_t v38 = v72;
      sub_252474774(v50, v72, (uint64_t (*)(void))type metadata accessor for WindowEvent);
      if ((j___s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(v27, v38) & 1) != 0
        && v27[*(int *)(v65 + 20)] == *(unsigned char *)(v38 + *(int *)(v65 + 20)))
      {
        uint64_t v39 = type metadata accessor for WindowEvent;
LABEL_28:
        uint64_t v42 = v39;
        sub_252477524(v38, (uint64_t (*)(void))v39);
        uint64_t v43 = (uint64_t)v27;
LABEL_29:
        unint64_t v51 = v42;
        goto LABEL_30;
      }
      uint64_t v57 = type metadata accessor for WindowEvent;
LABEL_48:
      uint64_t v54 = v57;
      sub_252477524(v38, (uint64_t (*)(void))v57);
      uint64_t v55 = (uint64_t)v27;
LABEL_49:
      uint64_t v58 = v54;
      goto LABEL_50;
    default:
      sub_252474470((uint64_t)v33, (uint64_t)v29);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v35 = type metadata accessor for ContactSensorEvent;
        uint64_t v36 = (uint64_t)v29;
LABEL_38:
        sub_252477524(v36, (uint64_t (*)(void))v35);
        sub_252479EF4((uint64_t)v33);
        return 0;
      }
      uint64_t v56 = v66;
      sub_252474774(v34, v66, (uint64_t (*)(void))type metadata accessor for ContactSensorEvent);
      if ((j___s13HomeKitEvents9FakeEventV2eeoiySbAC_ACtFZ_0(v29, v56) & 1) == 0
        || v29[*(int *)(v59 + 20)] != *(unsigned char *)(v56 + *(int *)(v59 + 20)))
      {
        sub_252477524(v56, (uint64_t (*)(void))type metadata accessor for ContactSensorEvent);
        uint64_t v55 = (uint64_t)v29;
        uint64_t v58 = type metadata accessor for ContactSensorEvent;
LABEL_50:
        sub_252477524(v55, (uint64_t (*)(void))v58);
        sub_252477524((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
        return 0;
      }
      sub_252477524(v56, (uint64_t (*)(void))type metadata accessor for ContactSensorEvent);
      uint64_t v43 = (uint64_t)v29;
      unint64_t v51 = type metadata accessor for ContactSensorEvent;
LABEL_30:
      sub_252477524(v43, (uint64_t (*)(void))v51);
      sub_252477524((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
      return 1;
  }
}

uint64_t type metadata accessor for SomeAccessoryEvent()
{
  uint64_t result = qword_269C06380;
  if (!qword_269C06380) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_252474470(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SomeAccessoryEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2524744D4()
{
  unint64_t result = qword_269C062F8;
  if (!qword_269C062F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C062F8);
  }
  return result;
}

unint64_t sub_252474528()
{
  unint64_t result = qword_269C06300;
  if (!qword_269C06300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06300);
  }
  return result;
}

unint64_t sub_25247457C()
{
  unint64_t result = qword_269C06308;
  if (!qword_269C06308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06308);
  }
  return result;
}

unint64_t sub_2524745D0()
{
  unint64_t result = qword_269C06310;
  if (!qword_269C06310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06310);
  }
  return result;
}

unint64_t sub_252474624()
{
  unint64_t result = qword_269C06318;
  if (!qword_269C06318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06318);
  }
  return result;
}

unint64_t sub_252474678()
{
  unint64_t result = qword_269C06320;
  if (!qword_269C06320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06320);
  }
  return result;
}

unint64_t sub_2524746CC()
{
  unint64_t result = qword_269C06328;
  if (!qword_269C06328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06328);
  }
  return result;
}

unint64_t sub_252474720()
{
  unint64_t result = qword_269C06330;
  if (!qword_269C06330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06330);
  }
  return result;
}

uint64_t sub_252474774(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2524747DC()
{
  return sub_252474824(&qword_269C06378, (void (*)(uint64_t))type metadata accessor for SomeAccessoryEvent);
}

uint64_t sub_252474824(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SomeAccessoryEvent(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    a1 = (void *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v31 = sub_25247A4B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(a1, a2, v31);
        uint64_t v32 = type metadata accessor for EventBase(0);
        uint64_t v33 = *(int *)(v32 + 20);
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = sub_25247A540();
        uint64_t v37 = *(void *)(v36 - 8);
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
        v38(v34, v35, v36);
        *((unsigned char *)a1 + *(int *)(v32 + 24)) = *((unsigned char *)a2 + *(int *)(v32 + 24));
        uint64_t v39 = (int *)type metadata accessor for AccessoryEventBase(0);
        v38((char *)a1 + v39[5], (char *)a2 + v39[5], v36);
        uint64_t v40 = v39[6];
        uint64_t v41 = (void *)((char *)a1 + v40);
        uint64_t v42 = (void *)((char *)a2 + v40);
        uint64_t v43 = v42[1];
        *uint64_t v41 = *v42;
        v41[1] = v43;
        uint64_t v44 = v39[7];
        uint64_t v45 = (char *)a1 + v44;
        uint64_t v46 = (char *)a2 + v44;
        swift_bridgeObjectRetain();
        v38(v45, v46, v36);
        uint64_t v47 = v39[8];
        uint64_t v48 = (void *)((char *)a1 + v47);
        uint64_t v49 = (void *)((char *)a2 + v47);
        uint64_t v50 = v49[1];
        void *v48 = *v49;
        v48[1] = v50;
        uint64_t v51 = v39[9];
        __dsta = (char *)a1 + v51;
        uint64_t v52 = (char *)a2 + v51;
        uint64_t v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
        swift_bridgeObjectRetain();
        if (v53(v52, 1, v36))
        {
          uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(__dsta, v52, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          v38(__dsta, v52, v36);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(__dsta, 0, 1, v36);
        }
        uint64_t v176 = type metadata accessor for DoorEvent();
        *((unsigned char *)a1 + *(int *)(v176 + 20)) = *((unsigned char *)a2 + *(int *)(v176 + 20));
        break;
      case 2u:
        uint64_t v55 = sub_25247A4B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
        uint64_t v56 = type metadata accessor for EventBase(0);
        uint64_t v57 = *(int *)(v56 + 20);
        uint64_t v58 = (char *)a1 + v57;
        uint64_t v59 = (char *)a2 + v57;
        uint64_t v60 = sub_25247A540();
        uint64_t v61 = *(void *)(v60 - 8);
        uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
        v62(v58, v59, v60);
        *((unsigned char *)a1 + *(int *)(v56 + 24)) = *((unsigned char *)a2 + *(int *)(v56 + 24));
        uint64_t v63 = (int *)type metadata accessor for AccessoryEventBase(0);
        v62((char *)a1 + v63[5], (char *)a2 + v63[5], v60);
        uint64_t v64 = v63[6];
        uint64_t v65 = (void *)((char *)a1 + v64);
        uint64_t v66 = (void *)((char *)a2 + v64);
        uint64_t v67 = v66[1];
        *uint64_t v65 = *v66;
        v65[1] = v67;
        uint64_t v68 = v63[7];
        uint64_t v69 = (char *)a1 + v68;
        uint64_t v70 = (char *)a2 + v68;
        swift_bridgeObjectRetain();
        v62(v69, v70, v60);
        uint64_t v71 = v63[8];
        uint64_t v72 = (void *)((char *)a1 + v71);
        uint64_t v73 = (void *)((char *)a2 + v71);
        uint64_t v74 = v73[1];
        *uint64_t v72 = *v73;
        v72[1] = v74;
        uint64_t v75 = v63[9];
        __dstb = (char *)a1 + v75;
        uint64_t v76 = (char *)a2 + v75;
        uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
        swift_bridgeObjectRetain();
        if (v77(v76, 1, v60))
        {
          uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(__dstb, v76, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          v62(__dstb, v76, v60);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(__dstb, 0, 1, v60);
        }
        uint64_t v177 = type metadata accessor for GarageDoorEvent();
        *((unsigned char *)a1 + *(int *)(v177 + 20)) = *((unsigned char *)a2 + *(int *)(v177 + 20));
        break;
      case 3u:
        uint64_t v79 = sub_25247A4B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v79 - 8) + 16))(a1, a2, v79);
        uint64_t v80 = type metadata accessor for EventBase(0);
        uint64_t v81 = *(int *)(v80 + 20);
        uint64_t v82 = (char *)a1 + v81;
        uint64_t v83 = (char *)a2 + v81;
        uint64_t v84 = sub_25247A540();
        uint64_t v85 = *(void *)(v84 - 8);
        uint64_t v86 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
        v86(v82, v83, v84);
        *((unsigned char *)a1 + *(int *)(v80 + 24)) = *((unsigned char *)a2 + *(int *)(v80 + 24));
        uint64_t v87 = (int *)type metadata accessor for AccessoryEventBase(0);
        v86((char *)a1 + v87[5], (char *)a2 + v87[5], v84);
        uint64_t v88 = v87[6];
        uint64_t v89 = (void *)((char *)a1 + v88);
        uint64_t v90 = (void *)((char *)a2 + v88);
        uint64_t v91 = v90[1];
        *uint64_t v89 = *v90;
        v89[1] = v91;
        uint64_t v92 = v87[7];
        uint64_t v93 = (char *)a1 + v92;
        uint64_t v94 = (char *)a2 + v92;
        swift_bridgeObjectRetain();
        v86(v93, v94, v84);
        uint64_t v95 = v87[8];
        uint64_t v96 = (void *)((char *)a1 + v95);
        uint64_t v97 = (void *)((char *)a2 + v95);
        uint64_t v98 = v97[1];
        *uint64_t v96 = *v97;
        v96[1] = v98;
        uint64_t v99 = v87[9];
        __dstc = (char *)a1 + v99;
        uint64_t v100 = (char *)a2 + v99;
        uint64_t v101 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48);
        swift_bridgeObjectRetain();
        if (v101(v100, 1, v84))
        {
          uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(__dstc, v100, *(void *)(*(void *)(v102 - 8) + 64));
        }
        else
        {
          v86(__dstc, v100, v84);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(__dstc, 0, 1, v84);
        }
        uint64_t v178 = type metadata accessor for LockEvent();
        *((unsigned char *)a1 + *(int *)(v178 + 20)) = *((unsigned char *)a2 + *(int *)(v178 + 20));
        break;
      case 4u:
        uint64_t v103 = sub_25247A4B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v103 - 8) + 16))(a1, a2, v103);
        uint64_t v104 = type metadata accessor for EventBase(0);
        uint64_t v105 = *(int *)(v104 + 20);
        uint64_t v106 = (char *)a1 + v105;
        uint64_t v107 = (char *)a2 + v105;
        uint64_t v108 = sub_25247A540();
        uint64_t v109 = *(void *)(v108 - 8);
        char v110 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
        v110(v106, v107, v108);
        *((unsigned char *)a1 + *(int *)(v104 + 24)) = *((unsigned char *)a2 + *(int *)(v104 + 24));
        char v111 = (int *)type metadata accessor for AccessoryEventBase(0);
        v110((char *)a1 + v111[5], (char *)a2 + v111[5], v108);
        uint64_t v112 = v111[6];
        char v113 = (void *)((char *)a1 + v112);
        char v114 = (void *)((char *)a2 + v112);
        uint64_t v115 = v114[1];
        *char v113 = *v114;
        v113[1] = v115;
        uint64_t v116 = v111[7];
        uint64_t v117 = (char *)a1 + v116;
        uint64_t v118 = (char *)a2 + v116;
        swift_bridgeObjectRetain();
        v110(v117, v118, v108);
        uint64_t v119 = v111[8];
        uint64_t v120 = (void *)((char *)a1 + v119);
        uint64_t v121 = (void *)((char *)a2 + v119);
        uint64_t v122 = v121[1];
        *uint64_t v120 = *v121;
        v120[1] = v122;
        uint64_t v123 = v111[9];
        __dstd = (char *)a1 + v123;
        os_log_type_t v124 = (char *)a2 + v123;
        uint64_t v125 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48);
        swift_bridgeObjectRetain();
        if (v125(v124, 1, v108))
        {
          uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(__dstd, v124, *(void *)(*(void *)(v126 - 8) + 64));
        }
        else
        {
          v110(__dstd, v124, v108);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(__dstd, 0, 1, v108);
        }
        uint64_t v179 = type metadata accessor for SecuritySystemEvent();
        *((unsigned char *)a1 + *(int *)(v179 + 20)) = *((unsigned char *)a2 + *(int *)(v179 + 20));
        break;
      case 5u:
        uint64_t v127 = sub_25247A4B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v127 - 8) + 16))(a1, a2, v127);
        uint64_t v128 = type metadata accessor for EventBase(0);
        uint64_t v129 = *(int *)(v128 + 20);
        uint64_t v130 = (char *)a1 + v129;
        uint64_t v131 = (char *)a2 + v129;
        uint64_t v132 = sub_25247A540();
        uint64_t v133 = *(void *)(v132 - 8);
        os_log_type_t v134 = *(void (**)(char *, char *, uint64_t))(v133 + 16);
        v134(v130, v131, v132);
        *((unsigned char *)a1 + *(int *)(v128 + 24)) = *((unsigned char *)a2 + *(int *)(v128 + 24));
        BOOL v135 = (int *)type metadata accessor for AccessoryEventBase(0);
        v134((char *)a1 + v135[5], (char *)a2 + v135[5], v132);
        uint64_t v136 = v135[6];
        uint64_t v137 = (void *)((char *)a1 + v136);
        uint64_t v138 = (void *)((char *)a2 + v136);
        uint64_t v139 = v138[1];
        *uint64_t v137 = *v138;
        v137[1] = v139;
        uint64_t v140 = v135[7];
        BOOL v141 = (char *)a1 + v140;
        uint64_t v142 = (char *)a2 + v140;
        swift_bridgeObjectRetain();
        v134(v141, v142, v132);
        uint64_t v143 = v135[8];
        uint64_t v144 = (void *)((char *)a1 + v143);
        uint64_t v145 = (void *)((char *)a2 + v143);
        uint64_t v146 = v145[1];
        *uint64_t v144 = *v145;
        v144[1] = v146;
        uint64_t v147 = v135[9];
        __dste = (char *)a1 + v147;
        uint64_t v148 = (char *)a2 + v147;
        uint64_t v149 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48);
        swift_bridgeObjectRetain();
        if (v149(v148, 1, v132))
        {
          uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(__dste, v148, *(void *)(*(void *)(v150 - 8) + 64));
        }
        else
        {
          v134(__dste, v148, v132);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(__dste, 0, 1, v132);
        }
        uint64_t v180 = type metadata accessor for SmokeDetectorEvent();
        *((unsigned char *)a1 + *(int *)(v180 + 20)) = *((unsigned char *)a2 + *(int *)(v180 + 20));
        break;
      case 6u:
        uint64_t v151 = sub_25247A4B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v151 - 8) + 16))(a1, a2, v151);
        uint64_t v152 = type metadata accessor for EventBase(0);
        uint64_t v153 = *(int *)(v152 + 20);
        uint64_t v154 = (char *)a1 + v153;
        uint64_t v155 = (char *)a2 + v153;
        uint64_t v156 = sub_25247A540();
        uint64_t v157 = *(void *)(v156 - 8);
        uint64_t v158 = *(void (**)(char *, char *, uint64_t))(v157 + 16);
        v158(v154, v155, v156);
        *((unsigned char *)a1 + *(int *)(v152 + 24)) = *((unsigned char *)a2 + *(int *)(v152 + 24));
        uint64_t v159 = (int *)type metadata accessor for AccessoryEventBase(0);
        v158((char *)a1 + v159[5], (char *)a2 + v159[5], v156);
        uint64_t v160 = v159[6];
        uint64_t v161 = (void *)((char *)a1 + v160);
        uint64_t v162 = (void *)((char *)a2 + v160);
        uint64_t v163 = v162[1];
        *uint64_t v161 = *v162;
        v161[1] = v163;
        uint64_t v164 = v159[7];
        uint64_t v165 = (char *)a1 + v164;
        uint64_t v166 = (char *)a2 + v164;
        swift_bridgeObjectRetain();
        v158(v165, v166, v156);
        uint64_t v167 = v159[8];
        uint64_t v168 = (void *)((char *)a1 + v167);
        uint64_t v169 = (void *)((char *)a2 + v167);
        uint64_t v170 = v169[1];
        *uint64_t v168 = *v169;
        v168[1] = v170;
        uint64_t v171 = v159[9];
        __dstf = (char *)a1 + v171;
        uint64_t v172 = (char *)a2 + v171;
        uint64_t v173 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48);
        swift_bridgeObjectRetain();
        if (v173(v172, 1, v156))
        {
          uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(__dstf, v172, *(void *)(*(void *)(v174 - 8) + 64));
        }
        else
        {
          v158(__dstf, v172, v156);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(__dstf, 0, 1, v156);
        }
        uint64_t v181 = type metadata accessor for WindowEvent();
        *((unsigned char *)a1 + *(int *)(v181 + 20)) = *((unsigned char *)a2 + *(int *)(v181 + 20));
        break;
      default:
        uint64_t v6 = sub_25247A4B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = type metadata accessor for EventBase(0);
        uint64_t v8 = *(int *)(v7 + 20);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_25247A540();
        uint64_t v12 = *(void *)(v11 - 8);
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
        v13(v9, v10, v11);
        *((unsigned char *)a1 + *(int *)(v7 + 24)) = *((unsigned char *)a2 + *(int *)(v7 + 24));
        uint64_t v14 = (int *)type metadata accessor for AccessoryEventBase(0);
        v13((char *)a1 + v14[5], (char *)a2 + v14[5], v11);
        uint64_t v15 = v14[6];
        uint64_t v16 = (void *)((char *)a1 + v15);
        uint64_t v17 = (void *)((char *)a2 + v15);
        uint64_t v18 = v17[1];
        *uint64_t v16 = *v17;
        v16[1] = v18;
        uint64_t v19 = v14[7];
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        swift_bridgeObjectRetain();
        v13(v20, v21, v11);
        uint64_t v22 = v14[8];
        uint64_t v23 = (void *)((char *)a1 + v22);
        uint64_t v24 = (void *)((char *)a2 + v22);
        uint64_t v25 = v24[1];
        *uint64_t v23 = *v24;
        v23[1] = v25;
        uint64_t v26 = v14[9];
        __dst = (char *)a1 + v26;
        uint64_t v27 = (char *)a2 + v26;
        uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
        swift_bridgeObjectRetain();
        if (v28(v27, 1, v11))
        {
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(__dst, v27, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          v13(__dst, v27, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
        }
        uint64_t v175 = type metadata accessor for ContactSensorEvent();
        *((unsigned char *)a1 + *(int *)(v175 + 20)) = *((unsigned char *)a2 + *(int *)(v175 + 20));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SomeAccessoryEvent(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      uint64_t v3 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      uint64_t v4 = a1 + *(int *)(type metadata accessor for EventBase(0) + 20);
      uint64_t v5 = sub_25247A540();
      uint64_t v6 = *(void *)(v5 - 8);
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v9(v4, v5);
      uint64_t v7 = (int *)type metadata accessor for AccessoryEventBase(0);
      v9(a1 + v7[5], v5);
      swift_bridgeObjectRelease();
      v9(a1 + v7[7], v5);
      swift_bridgeObjectRelease();
      uint64_t v8 = a1 + v7[9];
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5);
      if (!result)
      {
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v5);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for SomeAccessoryEvent(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v29 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
      uint64_t v30 = type metadata accessor for EventBase(0);
      uint64_t v31 = *(int *)(v30 + 20);
      uint64_t v32 = (void *)(a1 + v31);
      uint64_t v33 = (const void *)(a2 + v31);
      uint64_t v34 = sub_25247A540();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = *(void (**)(void *, const void *, uint64_t))(v35 + 16);
      v36(v32, v33, v34);
      *(unsigned char *)(a1 + *(int *)(v30 + 24)) = *(unsigned char *)(a2 + *(int *)(v30 + 24));
      uint64_t v37 = (int *)type metadata accessor for AccessoryEventBase(0);
      v36((void *)(a1 + v37[5]), (const void *)(a2 + v37[5]), v34);
      uint64_t v38 = v37[6];
      uint64_t v39 = (void *)(a1 + v38);
      uint64_t v40 = (void *)(a2 + v38);
      uint64_t v41 = v40[1];
      *uint64_t v39 = *v40;
      v39[1] = v41;
      uint64_t v42 = v37[7];
      uint64_t v43 = (void *)(a1 + v42);
      uint64_t v44 = (const void *)(a2 + v42);
      swift_bridgeObjectRetain();
      v36(v43, v44, v34);
      uint64_t v45 = v37[8];
      uint64_t v46 = (void *)(a1 + v45);
      uint64_t v47 = (void *)(a2 + v45);
      uint64_t v48 = v47[1];
      void *v46 = *v47;
      v46[1] = v48;
      uint64_t v49 = v37[9];
      uint64_t v50 = (void *)(a1 + v49);
      uint64_t v51 = (const void *)(a2 + v49);
      uint64_t v52 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48);
      swift_bridgeObjectRetain();
      if (v52(v51, 1, v34))
      {
        uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        v36(v50, v51, v34);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v50, 0, 1, v34);
      }
      uint64_t v179 = type metadata accessor for DoorEvent();
      break;
    case 2u:
      uint64_t v54 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(a1, a2, v54);
      uint64_t v55 = type metadata accessor for EventBase(0);
      uint64_t v56 = *(int *)(v55 + 20);
      uint64_t v57 = (void *)(a1 + v56);
      uint64_t v58 = (const void *)(a2 + v56);
      uint64_t v59 = sub_25247A540();
      uint64_t v60 = *(void *)(v59 - 8);
      uint64_t v61 = *(void (**)(void *, const void *, uint64_t))(v60 + 16);
      v61(v57, v58, v59);
      *(unsigned char *)(a1 + *(int *)(v55 + 24)) = *(unsigned char *)(a2 + *(int *)(v55 + 24));
      uint64_t v62 = (int *)type metadata accessor for AccessoryEventBase(0);
      v61((void *)(a1 + v62[5]), (const void *)(a2 + v62[5]), v59);
      uint64_t v63 = v62[6];
      uint64_t v64 = (void *)(a1 + v63);
      uint64_t v65 = (void *)(a2 + v63);
      uint64_t v66 = v65[1];
      *uint64_t v64 = *v65;
      v64[1] = v66;
      uint64_t v67 = v62[7];
      uint64_t v68 = (void *)(a1 + v67);
      uint64_t v69 = (const void *)(a2 + v67);
      swift_bridgeObjectRetain();
      v61(v68, v69, v59);
      uint64_t v70 = v62[8];
      uint64_t v71 = (void *)(a1 + v70);
      uint64_t v72 = (void *)(a2 + v70);
      uint64_t v73 = v72[1];
      *uint64_t v71 = *v72;
      v71[1] = v73;
      uint64_t v74 = v62[9];
      uint64_t v75 = (void *)(a1 + v74);
      uint64_t v76 = (const void *)(a2 + v74);
      uint64_t v77 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v60 + 48);
      swift_bridgeObjectRetain();
      if (v77(v76, 1, v59))
      {
        uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        v61(v75, v76, v59);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v75, 0, 1, v59);
      }
      uint64_t v179 = type metadata accessor for GarageDoorEvent();
      break;
    case 3u:
      uint64_t v79 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 16))(a1, a2, v79);
      uint64_t v80 = type metadata accessor for EventBase(0);
      uint64_t v81 = *(int *)(v80 + 20);
      uint64_t v82 = (void *)(a1 + v81);
      uint64_t v83 = (const void *)(a2 + v81);
      uint64_t v84 = sub_25247A540();
      uint64_t v85 = *(void *)(v84 - 8);
      uint64_t v86 = *(void (**)(void *, const void *, uint64_t))(v85 + 16);
      v86(v82, v83, v84);
      *(unsigned char *)(a1 + *(int *)(v80 + 24)) = *(unsigned char *)(a2 + *(int *)(v80 + 24));
      uint64_t v87 = (int *)type metadata accessor for AccessoryEventBase(0);
      v86((void *)(a1 + v87[5]), (const void *)(a2 + v87[5]), v84);
      uint64_t v88 = v87[6];
      uint64_t v89 = (void *)(a1 + v88);
      uint64_t v90 = (void *)(a2 + v88);
      uint64_t v91 = v90[1];
      *uint64_t v89 = *v90;
      v89[1] = v91;
      uint64_t v92 = v87[7];
      uint64_t v93 = (void *)(a1 + v92);
      uint64_t v94 = (const void *)(a2 + v92);
      swift_bridgeObjectRetain();
      v86(v93, v94, v84);
      uint64_t v95 = v87[8];
      uint64_t v96 = (void *)(a1 + v95);
      uint64_t v97 = (void *)(a2 + v95);
      uint64_t v98 = v97[1];
      *uint64_t v96 = *v97;
      v96[1] = v98;
      uint64_t v99 = v87[9];
      uint64_t v100 = (void *)(a1 + v99);
      uint64_t v101 = (const void *)(a2 + v99);
      uint64_t v102 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v85 + 48);
      swift_bridgeObjectRetain();
      if (v102(v101, 1, v84))
      {
        uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v100, v101, *(void *)(*(void *)(v103 - 8) + 64));
      }
      else
      {
        v86(v100, v101, v84);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v85 + 56))(v100, 0, 1, v84);
      }
      uint64_t v179 = type metadata accessor for LockEvent();
      break;
    case 4u:
      uint64_t v104 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 16))(a1, a2, v104);
      uint64_t v105 = type metadata accessor for EventBase(0);
      uint64_t v106 = *(int *)(v105 + 20);
      uint64_t v107 = (void *)(a1 + v106);
      uint64_t v108 = (const void *)(a2 + v106);
      uint64_t v109 = sub_25247A540();
      uint64_t v110 = *(void *)(v109 - 8);
      char v111 = *(void (**)(void *, const void *, uint64_t))(v110 + 16);
      v111(v107, v108, v109);
      *(unsigned char *)(a1 + *(int *)(v105 + 24)) = *(unsigned char *)(a2 + *(int *)(v105 + 24));
      uint64_t v112 = (int *)type metadata accessor for AccessoryEventBase(0);
      v111((void *)(a1 + v112[5]), (const void *)(a2 + v112[5]), v109);
      uint64_t v113 = v112[6];
      char v114 = (void *)(a1 + v113);
      uint64_t v115 = (void *)(a2 + v113);
      uint64_t v116 = v115[1];
      *char v114 = *v115;
      v114[1] = v116;
      uint64_t v117 = v112[7];
      uint64_t v118 = (void *)(a1 + v117);
      uint64_t v119 = (const void *)(a2 + v117);
      swift_bridgeObjectRetain();
      v111(v118, v119, v109);
      uint64_t v120 = v112[8];
      uint64_t v121 = (void *)(a1 + v120);
      uint64_t v122 = (void *)(a2 + v120);
      uint64_t v123 = v122[1];
      void *v121 = *v122;
      v121[1] = v123;
      uint64_t v124 = v112[9];
      uint64_t v125 = (void *)(a1 + v124);
      uint64_t v126 = (const void *)(a2 + v124);
      uint64_t v127 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v110 + 48);
      swift_bridgeObjectRetain();
      if (v127(v126, 1, v109))
      {
        uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v125, v126, *(void *)(*(void *)(v128 - 8) + 64));
      }
      else
      {
        v111(v125, v126, v109);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v110 + 56))(v125, 0, 1, v109);
      }
      uint64_t v179 = type metadata accessor for SecuritySystemEvent();
      break;
    case 5u:
      uint64_t v129 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 16))(a1, a2, v129);
      uint64_t v130 = type metadata accessor for EventBase(0);
      uint64_t v131 = *(int *)(v130 + 20);
      uint64_t v132 = (void *)(a1 + v131);
      uint64_t v133 = (const void *)(a2 + v131);
      uint64_t v134 = sub_25247A540();
      uint64_t v135 = *(void *)(v134 - 8);
      uint64_t v136 = *(void (**)(void *, const void *, uint64_t))(v135 + 16);
      v136(v132, v133, v134);
      *(unsigned char *)(a1 + *(int *)(v130 + 24)) = *(unsigned char *)(a2 + *(int *)(v130 + 24));
      uint64_t v137 = (int *)type metadata accessor for AccessoryEventBase(0);
      v136((void *)(a1 + v137[5]), (const void *)(a2 + v137[5]), v134);
      uint64_t v138 = v137[6];
      uint64_t v139 = (void *)(a1 + v138);
      uint64_t v140 = (void *)(a2 + v138);
      uint64_t v141 = v140[1];
      *uint64_t v139 = *v140;
      v139[1] = v141;
      uint64_t v142 = v137[7];
      uint64_t v143 = (void *)(a1 + v142);
      uint64_t v144 = (const void *)(a2 + v142);
      swift_bridgeObjectRetain();
      v136(v143, v144, v134);
      uint64_t v145 = v137[8];
      uint64_t v146 = (void *)(a1 + v145);
      uint64_t v147 = (void *)(a2 + v145);
      uint64_t v148 = v147[1];
      *uint64_t v146 = *v147;
      v146[1] = v148;
      uint64_t v149 = v137[9];
      uint64_t v150 = (void *)(a1 + v149);
      uint64_t v151 = (const void *)(a2 + v149);
      uint64_t v152 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v135 + 48);
      swift_bridgeObjectRetain();
      if (v152(v151, 1, v134))
      {
        uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v150, v151, *(void *)(*(void *)(v153 - 8) + 64));
      }
      else
      {
        v136(v150, v151, v134);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v135 + 56))(v150, 0, 1, v134);
      }
      uint64_t v179 = type metadata accessor for SmokeDetectorEvent();
      break;
    case 6u:
      uint64_t v154 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 16))(a1, a2, v154);
      uint64_t v155 = type metadata accessor for EventBase(0);
      uint64_t v156 = *(int *)(v155 + 20);
      uint64_t v157 = (void *)(a1 + v156);
      uint64_t v158 = (const void *)(a2 + v156);
      uint64_t v159 = sub_25247A540();
      uint64_t v160 = *(void *)(v159 - 8);
      uint64_t v161 = *(void (**)(void *, const void *, uint64_t))(v160 + 16);
      v161(v157, v158, v159);
      *(unsigned char *)(a1 + *(int *)(v155 + 24)) = *(unsigned char *)(a2 + *(int *)(v155 + 24));
      uint64_t v162 = (int *)type metadata accessor for AccessoryEventBase(0);
      v161((void *)(a1 + v162[5]), (const void *)(a2 + v162[5]), v159);
      uint64_t v163 = v162[6];
      uint64_t v164 = (void *)(a1 + v163);
      uint64_t v165 = (void *)(a2 + v163);
      uint64_t v166 = v165[1];
      void *v164 = *v165;
      v164[1] = v166;
      uint64_t v167 = v162[7];
      uint64_t v168 = (void *)(a1 + v167);
      uint64_t v169 = (const void *)(a2 + v167);
      swift_bridgeObjectRetain();
      v161(v168, v169, v159);
      uint64_t v170 = v162[8];
      uint64_t v171 = (void *)(a1 + v170);
      uint64_t v172 = (void *)(a2 + v170);
      uint64_t v173 = v172[1];
      *uint64_t v171 = *v172;
      v171[1] = v173;
      uint64_t v174 = v162[9];
      uint64_t v175 = (void *)(a1 + v174);
      uint64_t v176 = (const void *)(a2 + v174);
      uint64_t v177 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v160 + 48);
      swift_bridgeObjectRetain();
      if (v177(v176, 1, v159))
      {
        uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v175, v176, *(void *)(*(void *)(v178 - 8) + 64));
      }
      else
      {
        v161(v175, v176, v159);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v160 + 56))(v175, 0, 1, v159);
      }
      uint64_t v179 = type metadata accessor for WindowEvent();
      break;
    default:
      uint64_t v4 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = type metadata accessor for EventBase(0);
      uint64_t v6 = *(int *)(v5 + 20);
      uint64_t v7 = (void *)(a1 + v6);
      uint64_t v8 = (const void *)(a2 + v6);
      uint64_t v9 = sub_25247A540();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 16);
      v11(v7, v8, v9);
      *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
      uint64_t v12 = (int *)type metadata accessor for AccessoryEventBase(0);
      v11((void *)(a1 + v12[5]), (const void *)(a2 + v12[5]), v9);
      uint64_t v13 = v12[6];
      uint64_t v14 = (void *)(a1 + v13);
      uint64_t v15 = (void *)(a2 + v13);
      uint64_t v16 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v16;
      uint64_t v17 = v12[7];
      uint64_t v18 = (void *)(a1 + v17);
      uint64_t v19 = (const void *)(a2 + v17);
      swift_bridgeObjectRetain();
      v11(v18, v19, v9);
      uint64_t v20 = v12[8];
      uint64_t v21 = (void *)(a1 + v20);
      uint64_t v22 = (void *)(a2 + v20);
      uint64_t v23 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v23;
      uint64_t v24 = v12[9];
      uint64_t v25 = (void *)(a1 + v24);
      uint64_t v26 = (const void *)(a2 + v24);
      uint64_t v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
      swift_bridgeObjectRetain();
      if (v27(v26, 1, v9))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        v11(v25, v26, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
      }
      uint64_t v179 = type metadata accessor for ContactSensorEvent();
      break;
  }
  *(unsigned char *)(a1 + *(int *)(v179 + 20)) = *(unsigned char *)(a2 + *(int *)(v179 + 20));
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for SomeAccessoryEvent(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_252477524(a1, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v27 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
        uint64_t v28 = type metadata accessor for EventBase(0);
        uint64_t v29 = *(int *)(v28 + 20);
        uint64_t v30 = a1 + v29;
        uint64_t v31 = a2 + v29;
        uint64_t v32 = sub_25247A540();
        uint64_t v33 = *(void *)(v32 - 8);
        uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
        v34(v30, v31, v32);
        *(unsigned char *)(a1 + *(int *)(v28 + 24)) = *(unsigned char *)(a2 + *(int *)(v28 + 24));
        uint64_t v35 = (int *)type metadata accessor for AccessoryEventBase(0);
        v34(a1 + v35[5], a2 + v35[5], v32);
        uint64_t v36 = v35[6];
        uint64_t v37 = (void *)(a1 + v36);
        uint64_t v38 = (void *)(a2 + v36);
        *uint64_t v37 = *v38;
        v37[1] = v38[1];
        uint64_t v39 = v35[7];
        uint64_t v40 = a1 + v39;
        uint64_t v41 = a2 + v39;
        swift_bridgeObjectRetain();
        v34(v40, v41, v32);
        uint64_t v42 = v35[8];
        uint64_t v43 = (void *)(a1 + v42);
        uint64_t v44 = (void *)(a2 + v42);
        *uint64_t v43 = *v44;
        v43[1] = v44[1];
        uint64_t v45 = v35[9];
        uint64_t v46 = (void *)(a1 + v45);
        uint64_t v47 = (const void *)(a2 + v45);
        uint64_t v48 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48);
        swift_bridgeObjectRetain();
        if (v48(v47, 1, v32))
        {
          uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          v34((uint64_t)v46, (uint64_t)v47, v32);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v46, 0, 1, v32);
        }
        uint64_t v165 = type metadata accessor for DoorEvent();
        break;
      case 2u:
        uint64_t v50 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(a1, a2, v50);
        uint64_t v51 = type metadata accessor for EventBase(0);
        uint64_t v52 = *(int *)(v51 + 20);
        uint64_t v53 = a1 + v52;
        uint64_t v54 = a2 + v52;
        uint64_t v55 = sub_25247A540();
        uint64_t v56 = *(void *)(v55 - 8);
        uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
        v57(v53, v54, v55);
        *(unsigned char *)(a1 + *(int *)(v51 + 24)) = *(unsigned char *)(a2 + *(int *)(v51 + 24));
        uint64_t v58 = (int *)type metadata accessor for AccessoryEventBase(0);
        v57(a1 + v58[5], a2 + v58[5], v55);
        uint64_t v59 = v58[6];
        uint64_t v60 = (void *)(a1 + v59);
        uint64_t v61 = (void *)(a2 + v59);
        *uint64_t v60 = *v61;
        v60[1] = v61[1];
        uint64_t v62 = v58[7];
        uint64_t v63 = a1 + v62;
        uint64_t v64 = a2 + v62;
        swift_bridgeObjectRetain();
        v57(v63, v64, v55);
        uint64_t v65 = v58[8];
        uint64_t v66 = (void *)(a1 + v65);
        uint64_t v67 = (void *)(a2 + v65);
        *uint64_t v66 = *v67;
        v66[1] = v67[1];
        uint64_t v68 = v58[9];
        uint64_t v69 = (void *)(a1 + v68);
        uint64_t v70 = (const void *)(a2 + v68);
        uint64_t v71 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48);
        swift_bridgeObjectRetain();
        if (v71(v70, 1, v55))
        {
          uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          v57((uint64_t)v69, (uint64_t)v70, v55);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v69, 0, 1, v55);
        }
        uint64_t v165 = type metadata accessor for GarageDoorEvent();
        break;
      case 3u:
        uint64_t v73 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 16))(a1, a2, v73);
        uint64_t v74 = type metadata accessor for EventBase(0);
        uint64_t v75 = *(int *)(v74 + 20);
        uint64_t v76 = a1 + v75;
        uint64_t v77 = a2 + v75;
        uint64_t v78 = sub_25247A540();
        uint64_t v79 = *(void *)(v78 - 8);
        uint64_t v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16);
        v80(v76, v77, v78);
        *(unsigned char *)(a1 + *(int *)(v74 + 24)) = *(unsigned char *)(a2 + *(int *)(v74 + 24));
        uint64_t v81 = (int *)type metadata accessor for AccessoryEventBase(0);
        v80(a1 + v81[5], a2 + v81[5], v78);
        uint64_t v82 = v81[6];
        uint64_t v83 = (void *)(a1 + v82);
        uint64_t v84 = (void *)(a2 + v82);
        void *v83 = *v84;
        v83[1] = v84[1];
        uint64_t v85 = v81[7];
        uint64_t v86 = a1 + v85;
        uint64_t v87 = a2 + v85;
        swift_bridgeObjectRetain();
        v80(v86, v87, v78);
        uint64_t v88 = v81[8];
        uint64_t v89 = (void *)(a1 + v88);
        uint64_t v90 = (void *)(a2 + v88);
        *uint64_t v89 = *v90;
        v89[1] = v90[1];
        uint64_t v91 = v81[9];
        uint64_t v92 = (void *)(a1 + v91);
        uint64_t v93 = (const void *)(a2 + v91);
        uint64_t v94 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v79 + 48);
        swift_bridgeObjectRetain();
        if (v94(v93, 1, v78))
        {
          uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v92, v93, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          v80((uint64_t)v92, (uint64_t)v93, v78);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v79 + 56))(v92, 0, 1, v78);
        }
        uint64_t v165 = type metadata accessor for LockEvent();
        break;
      case 4u:
        uint64_t v96 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16))(a1, a2, v96);
        uint64_t v97 = type metadata accessor for EventBase(0);
        uint64_t v98 = *(int *)(v97 + 20);
        uint64_t v99 = a1 + v98;
        uint64_t v100 = a2 + v98;
        uint64_t v101 = sub_25247A540();
        uint64_t v102 = *(void *)(v101 - 8);
        uint64_t v103 = *(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 16);
        v103(v99, v100, v101);
        *(unsigned char *)(a1 + *(int *)(v97 + 24)) = *(unsigned char *)(a2 + *(int *)(v97 + 24));
        uint64_t v104 = (int *)type metadata accessor for AccessoryEventBase(0);
        v103(a1 + v104[5], a2 + v104[5], v101);
        uint64_t v105 = v104[6];
        uint64_t v106 = (void *)(a1 + v105);
        uint64_t v107 = (void *)(a2 + v105);
        *uint64_t v106 = *v107;
        v106[1] = v107[1];
        uint64_t v108 = v104[7];
        uint64_t v109 = a1 + v108;
        uint64_t v110 = a2 + v108;
        swift_bridgeObjectRetain();
        v103(v109, v110, v101);
        uint64_t v111 = v104[8];
        uint64_t v112 = (void *)(a1 + v111);
        uint64_t v113 = (void *)(a2 + v111);
        *uint64_t v112 = *v113;
        v112[1] = v113[1];
        uint64_t v114 = v104[9];
        uint64_t v115 = (void *)(a1 + v114);
        uint64_t v116 = (const void *)(a2 + v114);
        uint64_t v117 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v102 + 48);
        swift_bridgeObjectRetain();
        if (v117(v116, 1, v101))
        {
          uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v115, v116, *(void *)(*(void *)(v118 - 8) + 64));
        }
        else
        {
          v103((uint64_t)v115, (uint64_t)v116, v101);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v102 + 56))(v115, 0, 1, v101);
        }
        uint64_t v165 = type metadata accessor for SecuritySystemEvent();
        break;
      case 5u:
        uint64_t v119 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 16))(a1, a2, v119);
        uint64_t v120 = type metadata accessor for EventBase(0);
        uint64_t v121 = *(int *)(v120 + 20);
        uint64_t v122 = a1 + v121;
        uint64_t v123 = a2 + v121;
        uint64_t v124 = sub_25247A540();
        uint64_t v125 = *(void *)(v124 - 8);
        uint64_t v126 = *(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 16);
        v126(v122, v123, v124);
        *(unsigned char *)(a1 + *(int *)(v120 + 24)) = *(unsigned char *)(a2 + *(int *)(v120 + 24));
        uint64_t v127 = (int *)type metadata accessor for AccessoryEventBase(0);
        v126(a1 + v127[5], a2 + v127[5], v124);
        uint64_t v128 = v127[6];
        uint64_t v129 = (void *)(a1 + v128);
        uint64_t v130 = (void *)(a2 + v128);
        *uint64_t v129 = *v130;
        v129[1] = v130[1];
        uint64_t v131 = v127[7];
        uint64_t v132 = a1 + v131;
        uint64_t v133 = a2 + v131;
        swift_bridgeObjectRetain();
        v126(v132, v133, v124);
        uint64_t v134 = v127[8];
        uint64_t v135 = (void *)(a1 + v134);
        uint64_t v136 = (void *)(a2 + v134);
        *uint64_t v135 = *v136;
        v135[1] = v136[1];
        uint64_t v137 = v127[9];
        uint64_t v138 = (void *)(a1 + v137);
        uint64_t v139 = (const void *)(a2 + v137);
        uint64_t v140 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v125 + 48);
        swift_bridgeObjectRetain();
        if (v140(v139, 1, v124))
        {
          uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v138, v139, *(void *)(*(void *)(v141 - 8) + 64));
        }
        else
        {
          v126((uint64_t)v138, (uint64_t)v139, v124);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v125 + 56))(v138, 0, 1, v124);
        }
        uint64_t v165 = type metadata accessor for SmokeDetectorEvent();
        break;
      case 6u:
        uint64_t v142 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v142 - 8) + 16))(a1, a2, v142);
        uint64_t v143 = type metadata accessor for EventBase(0);
        uint64_t v144 = *(int *)(v143 + 20);
        uint64_t v145 = a1 + v144;
        uint64_t v146 = a2 + v144;
        uint64_t v147 = sub_25247A540();
        uint64_t v148 = *(void *)(v147 - 8);
        uint64_t v149 = *(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 16);
        v149(v145, v146, v147);
        *(unsigned char *)(a1 + *(int *)(v143 + 24)) = *(unsigned char *)(a2 + *(int *)(v143 + 24));
        uint64_t v150 = (int *)type metadata accessor for AccessoryEventBase(0);
        v149(a1 + v150[5], a2 + v150[5], v147);
        uint64_t v151 = v150[6];
        uint64_t v152 = (void *)(a1 + v151);
        uint64_t v153 = (void *)(a2 + v151);
        *uint64_t v152 = *v153;
        v152[1] = v153[1];
        uint64_t v154 = v150[7];
        uint64_t v155 = a1 + v154;
        uint64_t v156 = a2 + v154;
        swift_bridgeObjectRetain();
        v149(v155, v156, v147);
        uint64_t v157 = v150[8];
        uint64_t v158 = (void *)(a1 + v157);
        uint64_t v159 = (void *)(a2 + v157);
        *uint64_t v158 = *v159;
        v158[1] = v159[1];
        uint64_t v160 = v150[9];
        uint64_t v161 = (void *)(a1 + v160);
        uint64_t v162 = (const void *)(a2 + v160);
        uint64_t v163 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v148 + 48);
        swift_bridgeObjectRetain();
        if (v163(v162, 1, v147))
        {
          uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v161, v162, *(void *)(*(void *)(v164 - 8) + 64));
        }
        else
        {
          v149((uint64_t)v161, (uint64_t)v162, v147);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v148 + 56))(v161, 0, 1, v147);
        }
        uint64_t v165 = type metadata accessor for WindowEvent();
        break;
      default:
        uint64_t v4 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        uint64_t v5 = type metadata accessor for EventBase(0);
        uint64_t v6 = *(int *)(v5 + 20);
        uint64_t v7 = a1 + v6;
        uint64_t v8 = a2 + v6;
        uint64_t v9 = sub_25247A540();
        uint64_t v10 = *(void *)(v9 - 8);
        uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
        v11(v7, v8, v9);
        *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
        uint64_t v12 = (int *)type metadata accessor for AccessoryEventBase(0);
        v11(a1 + v12[5], a2 + v12[5], v9);
        uint64_t v13 = v12[6];
        uint64_t v14 = (void *)(a1 + v13);
        uint64_t v15 = (void *)(a2 + v13);
        *uint64_t v14 = *v15;
        v14[1] = v15[1];
        uint64_t v16 = v12[7];
        uint64_t v17 = a1 + v16;
        uint64_t v18 = a2 + v16;
        swift_bridgeObjectRetain();
        v11(v17, v18, v9);
        uint64_t v19 = v12[8];
        uint64_t v20 = (void *)(a1 + v19);
        uint64_t v21 = (void *)(a2 + v19);
        *uint64_t v20 = *v21;
        v20[1] = v21[1];
        uint64_t v22 = v12[9];
        uint64_t v23 = (void *)(a1 + v22);
        uint64_t v24 = (const void *)(a2 + v22);
        uint64_t v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
        swift_bridgeObjectRetain();
        if (v25(v24, 1, v9))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          v11((uint64_t)v23, (uint64_t)v24, v9);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
        }
        uint64_t v165 = type metadata accessor for ContactSensorEvent();
        break;
    }
    *(unsigned char *)(a1 + *(int *)(v165 + 20)) = *(unsigned char *)(a2 + *(int *)(v165 + 20));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_252477524(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for SomeAccessoryEvent(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v17 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
      uint64_t v18 = type metadata accessor for EventBase(0);
      uint64_t v19 = *(int *)(v18 + 20);
      uint64_t v20 = (void *)(a1 + v19);
      uint64_t v21 = (const void *)(a2 + v19);
      uint64_t v22 = sub_25247A540();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = *(void (**)(void *, const void *, uint64_t))(v23 + 32);
      v24(v20, v21, v22);
      *(unsigned char *)(a1 + *(int *)(v18 + 24)) = *(unsigned char *)(a2 + *(int *)(v18 + 24));
      uint64_t v25 = (int *)type metadata accessor for AccessoryEventBase(0);
      v24((void *)(a1 + v25[5]), (const void *)(a2 + v25[5]), v22);
      *(_OWORD *)(a1 + v25[6]) = *(_OWORD *)(a2 + v25[6]);
      v24((void *)(a1 + v25[7]), (const void *)(a2 + v25[7]), v22);
      *(_OWORD *)(a1 + v25[8]) = *(_OWORD *)(a2 + v25[8]);
      uint64_t v26 = v25[9];
      uint64_t v27 = (void *)(a1 + v26);
      uint64_t v28 = (const void *)(a2 + v26);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(a2 + v26, 1, v22))
      {
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        v24(v27, v28, v22);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v22);
      }
      uint64_t v95 = type metadata accessor for DoorEvent();
      break;
    case 2u:
      uint64_t v30 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
      uint64_t v31 = type metadata accessor for EventBase(0);
      uint64_t v32 = *(int *)(v31 + 20);
      uint64_t v33 = (void *)(a1 + v32);
      uint64_t v34 = (const void *)(a2 + v32);
      uint64_t v35 = sub_25247A540();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = *(void (**)(void *, const void *, uint64_t))(v36 + 32);
      v37(v33, v34, v35);
      *(unsigned char *)(a1 + *(int *)(v31 + 24)) = *(unsigned char *)(a2 + *(int *)(v31 + 24));
      uint64_t v38 = (int *)type metadata accessor for AccessoryEventBase(0);
      v37((void *)(a1 + v38[5]), (const void *)(a2 + v38[5]), v35);
      *(_OWORD *)(a1 + v38[6]) = *(_OWORD *)(a2 + v38[6]);
      v37((void *)(a1 + v38[7]), (const void *)(a2 + v38[7]), v35);
      *(_OWORD *)(a1 + v38[8]) = *(_OWORD *)(a2 + v38[8]);
      uint64_t v39 = v38[9];
      uint64_t v40 = (void *)(a1 + v39);
      uint64_t v41 = (const void *)(a2 + v39);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(a2 + v39, 1, v35))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        v37(v40, v41, v35);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v40, 0, 1, v35);
      }
      uint64_t v95 = type metadata accessor for GarageDoorEvent();
      break;
    case 3u:
      uint64_t v43 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(a1, a2, v43);
      uint64_t v44 = type metadata accessor for EventBase(0);
      uint64_t v45 = *(int *)(v44 + 20);
      uint64_t v46 = (void *)(a1 + v45);
      uint64_t v47 = (const void *)(a2 + v45);
      uint64_t v48 = sub_25247A540();
      uint64_t v49 = *(void *)(v48 - 8);
      uint64_t v50 = *(void (**)(void *, const void *, uint64_t))(v49 + 32);
      v50(v46, v47, v48);
      *(unsigned char *)(a1 + *(int *)(v44 + 24)) = *(unsigned char *)(a2 + *(int *)(v44 + 24));
      uint64_t v51 = (int *)type metadata accessor for AccessoryEventBase(0);
      v50((void *)(a1 + v51[5]), (const void *)(a2 + v51[5]), v48);
      *(_OWORD *)(a1 + v51[6]) = *(_OWORD *)(a2 + v51[6]);
      v50((void *)(a1 + v51[7]), (const void *)(a2 + v51[7]), v48);
      *(_OWORD *)(a1 + v51[8]) = *(_OWORD *)(a2 + v51[8]);
      uint64_t v52 = v51[9];
      uint64_t v53 = (void *)(a1 + v52);
      uint64_t v54 = (const void *)(a2 + v52);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(a2 + v52, 1, v48))
      {
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        v50(v53, v54, v48);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v53, 0, 1, v48);
      }
      uint64_t v95 = type metadata accessor for LockEvent();
      break;
    case 4u:
      uint64_t v56 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 32))(a1, a2, v56);
      uint64_t v57 = type metadata accessor for EventBase(0);
      uint64_t v58 = *(int *)(v57 + 20);
      uint64_t v59 = (void *)(a1 + v58);
      uint64_t v60 = (const void *)(a2 + v58);
      uint64_t v61 = sub_25247A540();
      uint64_t v62 = *(void *)(v61 - 8);
      uint64_t v63 = *(void (**)(void *, const void *, uint64_t))(v62 + 32);
      v63(v59, v60, v61);
      *(unsigned char *)(a1 + *(int *)(v57 + 24)) = *(unsigned char *)(a2 + *(int *)(v57 + 24));
      uint64_t v64 = (int *)type metadata accessor for AccessoryEventBase(0);
      v63((void *)(a1 + v64[5]), (const void *)(a2 + v64[5]), v61);
      *(_OWORD *)(a1 + v64[6]) = *(_OWORD *)(a2 + v64[6]);
      v63((void *)(a1 + v64[7]), (const void *)(a2 + v64[7]), v61);
      *(_OWORD *)(a1 + v64[8]) = *(_OWORD *)(a2 + v64[8]);
      uint64_t v65 = v64[9];
      uint64_t v66 = (void *)(a1 + v65);
      uint64_t v67 = (const void *)(a2 + v65);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(a2 + v65, 1, v61))
      {
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        v63(v66, v67, v61);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(v66, 0, 1, v61);
      }
      uint64_t v95 = type metadata accessor for SecuritySystemEvent();
      break;
    case 5u:
      uint64_t v69 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 32))(a1, a2, v69);
      uint64_t v70 = type metadata accessor for EventBase(0);
      uint64_t v71 = *(int *)(v70 + 20);
      uint64_t v72 = (void *)(a1 + v71);
      uint64_t v73 = (const void *)(a2 + v71);
      uint64_t v74 = sub_25247A540();
      uint64_t v75 = *(void *)(v74 - 8);
      uint64_t v76 = *(void (**)(void *, const void *, uint64_t))(v75 + 32);
      v76(v72, v73, v74);
      *(unsigned char *)(a1 + *(int *)(v70 + 24)) = *(unsigned char *)(a2 + *(int *)(v70 + 24));
      uint64_t v77 = (int *)type metadata accessor for AccessoryEventBase(0);
      v76((void *)(a1 + v77[5]), (const void *)(a2 + v77[5]), v74);
      *(_OWORD *)(a1 + v77[6]) = *(_OWORD *)(a2 + v77[6]);
      v76((void *)(a1 + v77[7]), (const void *)(a2 + v77[7]), v74);
      *(_OWORD *)(a1 + v77[8]) = *(_OWORD *)(a2 + v77[8]);
      uint64_t v78 = v77[9];
      uint64_t v79 = (void *)(a1 + v78);
      uint64_t v80 = (const void *)(a2 + v78);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(a2 + v78, 1, v74))
      {
        uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        v76(v79, v80, v74);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v79, 0, 1, v74);
      }
      uint64_t v95 = type metadata accessor for SmokeDetectorEvent();
      break;
    case 6u:
      uint64_t v82 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 32))(a1, a2, v82);
      uint64_t v83 = type metadata accessor for EventBase(0);
      uint64_t v84 = *(int *)(v83 + 20);
      uint64_t v85 = (void *)(a1 + v84);
      uint64_t v86 = (const void *)(a2 + v84);
      uint64_t v87 = sub_25247A540();
      uint64_t v88 = *(void *)(v87 - 8);
      uint64_t v89 = *(void (**)(void *, const void *, uint64_t))(v88 + 32);
      v89(v85, v86, v87);
      *(unsigned char *)(a1 + *(int *)(v83 + 24)) = *(unsigned char *)(a2 + *(int *)(v83 + 24));
      uint64_t v90 = (int *)type metadata accessor for AccessoryEventBase(0);
      v89((void *)(a1 + v90[5]), (const void *)(a2 + v90[5]), v87);
      *(_OWORD *)(a1 + v90[6]) = *(_OWORD *)(a2 + v90[6]);
      v89((void *)(a1 + v90[7]), (const void *)(a2 + v90[7]), v87);
      *(_OWORD *)(a1 + v90[8]) = *(_OWORD *)(a2 + v90[8]);
      uint64_t v91 = v90[9];
      uint64_t v92 = (void *)(a1 + v91);
      uint64_t v93 = (const void *)(a2 + v91);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(a2 + v91, 1, v87))
      {
        uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        v89(v92, v93, v87);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v88 + 56))(v92, 0, 1, v87);
      }
      uint64_t v95 = type metadata accessor for WindowEvent();
      break;
    default:
      uint64_t v4 = sub_25247A4B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      uint64_t v5 = type metadata accessor for EventBase(0);
      uint64_t v6 = *(int *)(v5 + 20);
      uint64_t v7 = (void *)(a1 + v6);
      uint64_t v8 = (const void *)(a2 + v6);
      uint64_t v9 = sub_25247A540();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
      v11(v7, v8, v9);
      *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
      uint64_t v12 = (int *)type metadata accessor for AccessoryEventBase(0);
      v11((void *)(a1 + v12[5]), (const void *)(a2 + v12[5]), v9);
      *(_OWORD *)(a1 + v12[6]) = *(_OWORD *)(a2 + v12[6]);
      v11((void *)(a1 + v12[7]), (const void *)(a2 + v12[7]), v9);
      *(_OWORD *)(a1 + v12[8]) = *(_OWORD *)(a2 + v12[8]);
      uint64_t v13 = v12[9];
      uint64_t v14 = (void *)(a1 + v13);
      uint64_t v15 = (const void *)(a2 + v13);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a2 + v13, 1, v9))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        v11(v14, v15, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
      }
      uint64_t v95 = type metadata accessor for ContactSensorEvent();
      break;
  }
  *(unsigned char *)(a1 + *(int *)(v95 + 20)) = *(unsigned char *)(a2 + *(int *)(v95 + 20));
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for SomeAccessoryEvent(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_252477524(a1, (uint64_t (*)(void))type metadata accessor for SomeAccessoryEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v17 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
        uint64_t v18 = type metadata accessor for EventBase(0);
        uint64_t v19 = *(int *)(v18 + 20);
        uint64_t v20 = a1 + v19;
        uint64_t v21 = a2 + v19;
        uint64_t v22 = sub_25247A540();
        uint64_t v23 = *(void *)(v22 - 8);
        uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32);
        v24(v20, v21, v22);
        *(unsigned char *)(a1 + *(int *)(v18 + 24)) = *(unsigned char *)(a2 + *(int *)(v18 + 24));
        uint64_t v25 = (int *)type metadata accessor for AccessoryEventBase(0);
        v24(a1 + v25[5], a2 + v25[5], v22);
        *(_OWORD *)(a1 + v25[6]) = *(_OWORD *)(a2 + v25[6]);
        v24(a1 + v25[7], a2 + v25[7], v22);
        *(_OWORD *)(a1 + v25[8]) = *(_OWORD *)(a2 + v25[8]);
        uint64_t v26 = v25[9];
        uint64_t v27 = (void *)(a1 + v26);
        uint64_t v28 = (const void *)(a2 + v26);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(a2 + v26, 1, v22))
        {
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          v24((uint64_t)v27, (uint64_t)v28, v22);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v22);
        }
        uint64_t v95 = type metadata accessor for DoorEvent();
        break;
      case 2u:
        uint64_t v30 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
        uint64_t v31 = type metadata accessor for EventBase(0);
        uint64_t v32 = *(int *)(v31 + 20);
        uint64_t v33 = a1 + v32;
        uint64_t v34 = a2 + v32;
        uint64_t v35 = sub_25247A540();
        uint64_t v36 = *(void *)(v35 - 8);
        uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
        v37(v33, v34, v35);
        *(unsigned char *)(a1 + *(int *)(v31 + 24)) = *(unsigned char *)(a2 + *(int *)(v31 + 24));
        uint64_t v38 = (int *)type metadata accessor for AccessoryEventBase(0);
        v37(a1 + v38[5], a2 + v38[5], v35);
        *(_OWORD *)(a1 + v38[6]) = *(_OWORD *)(a2 + v38[6]);
        v37(a1 + v38[7], a2 + v38[7], v35);
        *(_OWORD *)(a1 + v38[8]) = *(_OWORD *)(a2 + v38[8]);
        uint64_t v39 = v38[9];
        uint64_t v40 = (void *)(a1 + v39);
        uint64_t v41 = (const void *)(a2 + v39);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(a2 + v39, 1, v35))
        {
          uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          v37((uint64_t)v40, (uint64_t)v41, v35);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v40, 0, 1, v35);
        }
        uint64_t v95 = type metadata accessor for GarageDoorEvent();
        break;
      case 3u:
        uint64_t v43 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(a1, a2, v43);
        uint64_t v44 = type metadata accessor for EventBase(0);
        uint64_t v45 = *(int *)(v44 + 20);
        uint64_t v46 = a1 + v45;
        uint64_t v47 = a2 + v45;
        uint64_t v48 = sub_25247A540();
        uint64_t v49 = *(void *)(v48 - 8);
        uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32);
        v50(v46, v47, v48);
        *(unsigned char *)(a1 + *(int *)(v44 + 24)) = *(unsigned char *)(a2 + *(int *)(v44 + 24));
        uint64_t v51 = (int *)type metadata accessor for AccessoryEventBase(0);
        v50(a1 + v51[5], a2 + v51[5], v48);
        *(_OWORD *)(a1 + v51[6]) = *(_OWORD *)(a2 + v51[6]);
        v50(a1 + v51[7], a2 + v51[7], v48);
        *(_OWORD *)(a1 + v51[8]) = *(_OWORD *)(a2 + v51[8]);
        uint64_t v52 = v51[9];
        uint64_t v53 = (void *)(a1 + v52);
        uint64_t v54 = (const void *)(a2 + v52);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(a2 + v52, 1, v48))
        {
          uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          v50((uint64_t)v53, (uint64_t)v54, v48);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v53, 0, 1, v48);
        }
        uint64_t v95 = type metadata accessor for LockEvent();
        break;
      case 4u:
        uint64_t v56 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 32))(a1, a2, v56);
        uint64_t v57 = type metadata accessor for EventBase(0);
        uint64_t v58 = *(int *)(v57 + 20);
        uint64_t v59 = a1 + v58;
        uint64_t v60 = a2 + v58;
        uint64_t v61 = sub_25247A540();
        uint64_t v62 = *(void *)(v61 - 8);
        uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32);
        v63(v59, v60, v61);
        *(unsigned char *)(a1 + *(int *)(v57 + 24)) = *(unsigned char *)(a2 + *(int *)(v57 + 24));
        uint64_t v64 = (int *)type metadata accessor for AccessoryEventBase(0);
        v63(a1 + v64[5], a2 + v64[5], v61);
        *(_OWORD *)(a1 + v64[6]) = *(_OWORD *)(a2 + v64[6]);
        v63(a1 + v64[7], a2 + v64[7], v61);
        *(_OWORD *)(a1 + v64[8]) = *(_OWORD *)(a2 + v64[8]);
        uint64_t v65 = v64[9];
        uint64_t v66 = (void *)(a1 + v65);
        uint64_t v67 = (const void *)(a2 + v65);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(a2 + v65, 1, v61))
        {
          uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          v63((uint64_t)v66, (uint64_t)v67, v61);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(v66, 0, 1, v61);
        }
        uint64_t v95 = type metadata accessor for SecuritySystemEvent();
        break;
      case 5u:
        uint64_t v69 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 32))(a1, a2, v69);
        uint64_t v70 = type metadata accessor for EventBase(0);
        uint64_t v71 = *(int *)(v70 + 20);
        uint64_t v72 = a1 + v71;
        uint64_t v73 = a2 + v71;
        uint64_t v74 = sub_25247A540();
        uint64_t v75 = *(void *)(v74 - 8);
        uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32);
        v76(v72, v73, v74);
        *(unsigned char *)(a1 + *(int *)(v70 + 24)) = *(unsigned char *)(a2 + *(int *)(v70 + 24));
        uint64_t v77 = (int *)type metadata accessor for AccessoryEventBase(0);
        v76(a1 + v77[5], a2 + v77[5], v74);
        *(_OWORD *)(a1 + v77[6]) = *(_OWORD *)(a2 + v77[6]);
        v76(a1 + v77[7], a2 + v77[7], v74);
        *(_OWORD *)(a1 + v77[8]) = *(_OWORD *)(a2 + v77[8]);
        uint64_t v78 = v77[9];
        uint64_t v79 = (void *)(a1 + v78);
        uint64_t v80 = (const void *)(a2 + v78);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(a2 + v78, 1, v74))
        {
          uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          v76((uint64_t)v79, (uint64_t)v80, v74);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v79, 0, 1, v74);
        }
        uint64_t v95 = type metadata accessor for SmokeDetectorEvent();
        break;
      case 6u:
        uint64_t v82 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 32))(a1, a2, v82);
        uint64_t v83 = type metadata accessor for EventBase(0);
        uint64_t v84 = *(int *)(v83 + 20);
        uint64_t v85 = a1 + v84;
        uint64_t v86 = a2 + v84;
        uint64_t v87 = sub_25247A540();
        uint64_t v88 = *(void *)(v87 - 8);
        uint64_t v89 = *(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32);
        v89(v85, v86, v87);
        *(unsigned char *)(a1 + *(int *)(v83 + 24)) = *(unsigned char *)(a2 + *(int *)(v83 + 24));
        uint64_t v90 = (int *)type metadata accessor for AccessoryEventBase(0);
        v89(a1 + v90[5], a2 + v90[5], v87);
        *(_OWORD *)(a1 + v90[6]) = *(_OWORD *)(a2 + v90[6]);
        v89(a1 + v90[7], a2 + v90[7], v87);
        *(_OWORD *)(a1 + v90[8]) = *(_OWORD *)(a2 + v90[8]);
        uint64_t v91 = v90[9];
        uint64_t v92 = (void *)(a1 + v91);
        uint64_t v93 = (const void *)(a2 + v91);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(a2 + v91, 1, v87))
        {
          uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          v89((uint64_t)v92, (uint64_t)v93, v87);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v88 + 56))(v92, 0, 1, v87);
        }
        uint64_t v95 = type metadata accessor for WindowEvent();
        break;
      default:
        uint64_t v4 = sub_25247A4B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
        uint64_t v5 = type metadata accessor for EventBase(0);
        uint64_t v6 = *(int *)(v5 + 20);
        uint64_t v7 = a1 + v6;
        uint64_t v8 = a2 + v6;
        uint64_t v9 = sub_25247A540();
        uint64_t v10 = *(void *)(v9 - 8);
        uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
        v11(v7, v8, v9);
        *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
        uint64_t v12 = (int *)type metadata accessor for AccessoryEventBase(0);
        v11(a1 + v12[5], a2 + v12[5], v9);
        *(_OWORD *)(a1 + v12[6]) = *(_OWORD *)(a2 + v12[6]);
        v11(a1 + v12[7], a2 + v12[7], v9);
        *(_OWORD *)(a1 + v12[8]) = *(_OWORD *)(a2 + v12[8]);
        uint64_t v13 = v12[9];
        uint64_t v14 = (void *)(a1 + v13);
        uint64_t v15 = (const void *)(a2 + v13);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a2 + v13, 1, v9))
        {
          uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269C047F0);
          memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          v11((uint64_t)v14, (uint64_t)v15, v9);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
        }
        uint64_t v95 = type metadata accessor for ContactSensorEvent();
        break;
    }
    *(unsigned char *)(a1 + *(int *)(v95 + 20)) = *(unsigned char *)(a2 + *(int *)(v95 + 20));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_252478F50()
{
  uint64_t result = type metadata accessor for ContactSensorEvent();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DoorEvent();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for GarageDoorEvent();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for LockEvent();
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for SecuritySystemEvent();
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for SmokeDetectorEvent();
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for WindowEvent();
              if (v7 <= 0x3F)
              {
                swift_initEnumMetadataMultiPayload();
                return 0;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SomeAccessoryEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25247920CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SomeAccessoryEvent.CodingKeys()
{
  return &type metadata for SomeAccessoryEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for SomeAccessoryEvent.ContactSensorCodingKeys()
{
  return &type metadata for SomeAccessoryEvent.ContactSensorCodingKeys;
}

ValueMetadata *type metadata accessor for SomeAccessoryEvent.DoorCodingKeys()
{
  return &type metadata for SomeAccessoryEvent.DoorCodingKeys;
}

ValueMetadata *type metadata accessor for SomeAccessoryEvent.GarageDoorCodingKeys()
{
  return &type metadata for SomeAccessoryEvent.GarageDoorCodingKeys;
}

ValueMetadata *type metadata accessor for SomeAccessoryEvent.LockCodingKeys()
{
  return &type metadata for SomeAccessoryEvent.LockCodingKeys;
}

ValueMetadata *type metadata accessor for SomeAccessoryEvent.SecuritySystemCodingKeys()
{
  return &type metadata for SomeAccessoryEvent.SecuritySystemCodingKeys;
}

ValueMetadata *type metadata accessor for SomeAccessoryEvent.SmokeDetectorCodingKeys()
{
  return &type metadata for SomeAccessoryEvent.SmokeDetectorCodingKeys;
}

unsigned char *_s13HomeKitEvents18SomeAccessoryEventO23ContactSensorCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x252479344);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SomeAccessoryEvent.WindowCodingKeys()
{
  return &type metadata for SomeAccessoryEvent.WindowCodingKeys;
}

unint64_t sub_252479380()
{
  unint64_t result = qword_269C06390;
  if (!qword_269C06390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06390);
  }
  return result;
}

unint64_t sub_2524793D8()
{
  unint64_t result = qword_269C06398;
  if (!qword_269C06398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06398);
  }
  return result;
}

unint64_t sub_252479430()
{
  unint64_t result = qword_269C063A0;
  if (!qword_269C063A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C063A0);
  }
  return result;
}

unint64_t sub_252479488()
{
  unint64_t result = qword_269C063A8;
  if (!qword_269C063A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C063A8);
  }
  return result;
}

unint64_t sub_2524794E0()
{
  unint64_t result = qword_269C063B0;
  if (!qword_269C063B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C063B0);
  }
  return result;
}

unint64_t sub_252479538()
{
  unint64_t result = qword_269C063B8;
  if (!qword_269C063B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C063B8);
  }
  return result;
}

unint64_t sub_252479590()
{
  unint64_t result = qword_269C063C0;
  if (!qword_269C063C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C063C0);
  }
  return result;
}

unint64_t sub_2524795E8()
{
  unint64_t result = qword_269C063C8;
  if (!qword_269C063C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C063C8);
  }
  return result;
}

unint64_t sub_252479640()
{
  unint64_t result = qword_269C063D0;
  if (!qword_269C063D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C063D0);
  }
  return result;
}

unint64_t sub_252479698()
{
  unint64_t result = qword_269C063D8;
  if (!qword_269C063D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C063D8);
  }
  return result;
}

unint64_t sub_2524796F0()
{
  unint64_t result = qword_269C063E0;
  if (!qword_269C063E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C063E0);
  }
  return result;
}

unint64_t sub_252479748()
{
  unint64_t result = qword_269C063E8;
  if (!qword_269C063E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C063E8);
  }
  return result;
}

unint64_t sub_2524797A0()
{
  unint64_t result = qword_269C063F0;
  if (!qword_269C063F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C063F0);
  }
  return result;
}

unint64_t sub_2524797F8()
{
  unint64_t result = qword_269C063F8;
  if (!qword_269C063F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C063F8);
  }
  return result;
}

unint64_t sub_252479850()
{
  unint64_t result = qword_269C06400;
  if (!qword_269C06400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06400);
  }
  return result;
}

unint64_t sub_2524798A8()
{
  unint64_t result = qword_269C06408;
  if (!qword_269C06408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06408);
  }
  return result;
}

unint64_t sub_252479900()
{
  unint64_t result = qword_269C06410;
  if (!qword_269C06410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06410);
  }
  return result;
}

unint64_t sub_252479958()
{
  unint64_t result = qword_269C06418;
  if (!qword_269C06418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06418);
  }
  return result;
}

unint64_t sub_2524799B0()
{
  unint64_t result = qword_269C06420;
  if (!qword_269C06420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06420);
  }
  return result;
}

unint64_t sub_252479A08()
{
  unint64_t result = qword_269C06428;
  if (!qword_269C06428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06428);
  }
  return result;
}

unint64_t sub_252479A60()
{
  unint64_t result = qword_269C06430;
  if (!qword_269C06430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06430);
  }
  return result;
}

unint64_t sub_252479AB8()
{
  unint64_t result = qword_269C06438;
  if (!qword_269C06438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06438);
  }
  return result;
}

unint64_t sub_252479B10()
{
  unint64_t result = qword_269C06440;
  if (!qword_269C06440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06440);
  }
  return result;
}

unint64_t sub_252479B68()
{
  unint64_t result = qword_269C06448;
  if (!qword_269C06448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C06448);
  }
  return result;
}

uint64_t sub_252479BBC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x53746361746E6F63 && a2 == 0xED0000726F736E65;
  if (v2 || (sub_25247B260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1919905636 && a2 == 0xE400000000000000 || (sub_25247B260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F44656761726167 && a2 == 0xEA0000000000726FLL || (sub_25247B260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1801678700 && a2 == 0xE400000000000000 || (sub_25247B260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7974697275636573 && a2 == 0xEE006D6574737953 || (sub_25247B260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746544656B6F6D73 && a2 == 0xED0000726F746365 || (sub_25247B260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x776F646E6977 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_25247B260();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_252479EF4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269C06450);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

CKContainerID *HMVConfigurationCloudKitContainerID()
{
  return +[Configuration containerID];
}

id HMVConfigurationZoneUUIDForHomeIdentifier(uint64_t a1)
{
  return +[Configuration zoneUUIDForHomeIdentifier:a1];
}

id HMVConfigurationZoneNameForZoneUUID(uint64_t a1)
{
  return +[Configuration zoneNameForZoneUUID:a1];
}

uint64_t HMVConfigurationResetWithCompletion(uint64_t a1)
{
  return +[Configuration resetWithCompletion:a1];
}

uint64_t sub_252479F90()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_252479FA0()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_252479FB0()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_252479FC0()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_252479FD0()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_252479FE0()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_252479FF0()
{
  return MEMORY[0x270EEE2F0]();
}

uint64_t sub_25247A000()
{
  return MEMORY[0x270EEE2F8]();
}

uint64_t sub_25247A010()
{
  return MEMORY[0x270EEE308]();
}

uint64_t sub_25247A020()
{
  return MEMORY[0x270EEE328]();
}

uint64_t sub_25247A030()
{
  return MEMORY[0x270EEE338]();
}

uint64_t sub_25247A040()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_25247A050()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_25247A060()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_25247A070()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_25247A080()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_25247A090()
{
  return MEMORY[0x270EEEA60]();
}

uint64_t sub_25247A0E0()
{
  return MEMORY[0x270EEF7C8]();
}

uint64_t sub_25247A110()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_25247A120()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_25247A130()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_25247A140()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_25247A150()
{
  return MEMORY[0x270EF0020]();
}

uint64_t sub_25247A160()
{
  return MEMORY[0x270EF0048]();
}

uint64_t sub_25247A170()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_25247A180()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_25247A190()
{
  return MEMORY[0x270EF0130]();
}

uint64_t sub_25247A1A0()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_25247A1B0()
{
  return MEMORY[0x270EF0238]();
}

uint64_t sub_25247A1C0()
{
  return MEMORY[0x270EF02B0]();
}

uint64_t sub_25247A1D0()
{
  return MEMORY[0x270EF02C8]();
}

uint64_t sub_25247A1E0()
{
  return MEMORY[0x270EF0450]();
}

uint64_t sub_25247A1F0()
{
  return MEMORY[0x270EF0458]();
}

uint64_t sub_25247A200()
{
  return MEMORY[0x270EF0460]();
}

uint64_t sub_25247A210()
{
  return MEMORY[0x270EF0468]();
}

uint64_t sub_25247A220()
{
  return MEMORY[0x270EF0470]();
}

uint64_t sub_25247A230()
{
  return MEMORY[0x270EF0478]();
}

uint64_t sub_25247A240()
{
  return MEMORY[0x270EF0480]();
}

uint64_t sub_25247A250()
{
  return MEMORY[0x270EF0490]();
}

uint64_t sub_25247A260()
{
  return MEMORY[0x270EF0498]();
}

uint64_t sub_25247A270()
{
  return MEMORY[0x270EF04B0]();
}

uint64_t sub_25247A280()
{
  return MEMORY[0x270EF0560]();
}

uint64_t sub_25247A290()
{
  return MEMORY[0x270EF0568]();
}

uint64_t sub_25247A2A0()
{
  return MEMORY[0x270EF0578]();
}

uint64_t sub_25247A2B0()
{
  return MEMORY[0x270EF0598]();
}

uint64_t sub_25247A2C0()
{
  return MEMORY[0x270EF05B0]();
}

uint64_t sub_25247A2D0()
{
  return MEMORY[0x270EF05B8]();
}

uint64_t sub_25247A2E0()
{
  return MEMORY[0x270EF05D0]();
}

uint64_t sub_25247A2F0()
{
  return MEMORY[0x270EF05D8]();
}

uint64_t sub_25247A300()
{
  return MEMORY[0x270EF0638]();
}

uint64_t sub_25247A310()
{
  return MEMORY[0x270EF0640]();
}

uint64_t sub_25247A320()
{
  return MEMORY[0x270EF0650]();
}

uint64_t sub_25247A330()
{
  return MEMORY[0x270EF0710]();
}

uint64_t sub_25247A340()
{
  return MEMORY[0x270EF0718]();
}

uint64_t sub_25247A350()
{
  return MEMORY[0x270EF0720]();
}

uint64_t sub_25247A360()
{
  return MEMORY[0x270EF0728]();
}

uint64_t sub_25247A370()
{
  return MEMORY[0x270EF0730]();
}

uint64_t sub_25247A380()
{
  return MEMORY[0x270EF0738]();
}

uint64_t sub_25247A390()
{
  return MEMORY[0x270EF0740]();
}

uint64_t sub_25247A3A0()
{
  return MEMORY[0x270EF0748]();
}

uint64_t sub_25247A3B0()
{
  return MEMORY[0x270EF0750]();
}

uint64_t sub_25247A3C0()
{
  return MEMORY[0x270EF0758]();
}

uint64_t sub_25247A3D0()
{
  return MEMORY[0x270EF0760]();
}

uint64_t sub_25247A3E0()
{
  return MEMORY[0x270EF0768]();
}

uint64_t sub_25247A3F0()
{
  return MEMORY[0x270EF0770]();
}

uint64_t sub_25247A400()
{
  return MEMORY[0x270EF07E0]();
}

uint64_t sub_25247A410()
{
  return MEMORY[0x270EF0958]();
}

uint64_t sub_25247A420()
{
  return MEMORY[0x270EF0960]();
}

uint64_t sub_25247A430()
{
  return MEMORY[0x270EF0988]();
}

uint64_t sub_25247A440()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_25247A450()
{
  return MEMORY[0x270EF09A8]();
}

uint64_t sub_25247A460()
{
  return MEMORY[0x270EF09B8]();
}

uint64_t sub_25247A470()
{
  return MEMORY[0x270EF09E0]();
}

uint64_t sub_25247A480()
{
  return MEMORY[0x270EF0B88]();
}

uint64_t sub_25247A490()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_25247A4A0()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_25247A4B0()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_25247A4C0()
{
  return MEMORY[0x270EF0C58]();
}

uint64_t sub_25247A4D0()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_25247A4E0()
{
  return MEMORY[0x270EF0C88]();
}

uint64_t sub_25247A4F0()
{
  return MEMORY[0x270EF0CB0]();
}