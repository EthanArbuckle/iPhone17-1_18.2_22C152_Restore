uint64_t sub_1A8C8172C()
{
  sub_1A8C817AC();
  sub_1A8C81854();
  sub_1A8C81800();
  return sub_1A8D5A410();
}

uint64_t sub_1A8C8177C()
{
  return sub_1A8D5A430();
}

unint64_t sub_1A8C817AC()
{
  unint64_t result = qword_1EB5E9330;
  if (!qword_1EB5E9330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9330);
  }
  return result;
}

unint64_t sub_1A8C81800()
{
  unint64_t result = qword_1EB5E9360;
  if (!qword_1EB5E9360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9360);
  }
  return result;
}

unint64_t sub_1A8C81854()
{
  unint64_t result = qword_1EB5E9338;
  if (!qword_1EB5E9338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9338);
  }
  return result;
}

uint64_t sub_1A8C818A8()
{
  return sub_1A8D59BF0();
}

uint64_t sub_1A8C818CC()
{
  return *v0;
}

unint64_t sub_1A8C818D8()
{
  return sub_1A8C8B7D4();
}

uint64_t sub_1A8C818E4()
{
  return sub_1A8C818F4(*v0);
}

uint64_t sub_1A8C818F4(char a1)
{
  uint64_t result = 0x65756C6176;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6974617269707865;
      break;
    case 2:
      uint64_t result = 0x64656863746566;
      break;
    case 3:
      uint64_t result = 0x496E6F6973736573;
      break;
    case 4:
      uint64_t result = 0x44495344746C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A8C81994()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A8C81A8C(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t type metadata accessor for CloudFeature()
{
  uint64_t result = qword_1EB5EAC88;
  if (!qword_1EB5EAC88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t type metadata accessor for CacheBox()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_1A8C81B48(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

const char *sub_1A8C81C14()
{
  uint64_t result = "cache";
  switch(*v0)
  {
    case 1:
      uint64_t result = "rsvp";
      break;
    case 2:
      uint64_t result = "rsvpDataDetectors";
      break;
    case 3:
      uint64_t result = "rsvpSubscriber";
      break;
    case 4:
      uint64_t result = "imageGenerationBypass";
      break;
    default:
      return result;
  }
  return result;
}

const char *sub_1A8C81C94()
{
  return "CloudSubscriptionFeatures";
}

uint64_t sub_1A8C81CA8()
{
  uint64_t result = 0x4B65727574616566;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C69546568636163;
      break;
    case 2:
      uint64_t result = 0x6573556E6163;
      break;
    case 3:
      uint64_t result = 0x74696D696CLL;
      break;
    case 4:
      uint64_t result = 0x6F54737365636361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t objectdestroy_49Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x1F4186498](v1, v6, v7);
}

uint64_t sub_1A8C81E54()
{
  uint64_t v2 = v0[29];
  unint64_t v1 = v0[30];
  swift_release();
  sub_1A8C91500(v2, v1);
  uint64_t v3 = v0[26];
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

void sub_1A8C81EE8(id a1, char a2, void (*a3)(void, id))
{
  if (a2)
  {
    id v5 = a1;
    a3(0, a1);
    sub_1A8C92920(a1, 1);
  }
  else
  {
    a3(a1 & 1, 0);
  }
}

uint64_t sub_1A8C81F6C(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 176) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    id v5 = sub_1A8C86480;
  }
  else
  {
    *(unsigned char *)(v4 + 184) = a1 & 1;
    id v5 = sub_1A8CC4D5C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1A8C820BC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  *(void *)(*v3 + 448) = v2;
  swift_task_dealloc();
  if (v2)
  {
    v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 616) = a2;
    *(void *)(v6 + 624) = a1;
    return MEMORY[0x1F4188298](sub_1A8CE86E0, 0, 0);
  }
}

uint64_t sub_1A8C82220()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8C82290(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

uint64_t sub_1A8C823A0()
{
  type metadata accessor for TaskLimiter();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  *(void *)(v0 + 112) = MEMORY[0x1E4FBC868];
  qword_1EB5EAD30 = v0;
  return result;
}

uint64_t sub_1A8C823EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAD18);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_1A8C8B170(a3, a4, a5, (void (*)(void, void))sub_1A8C92BB8, v14);
  return swift_release();
}

uint64_t sub_1A8C8254C()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8D142D0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A8C92A80;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t type metadata accessor for XPCCaller()
{
  return self;
}

uint64_t sub_1A8C8268C(void *a1, char a2)
{
  if (a2)
  {
    id v4 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAD18);
    return sub_1A8D59DD0();
  }
  else
  {
    id v2 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAD18);
    return sub_1A8D59DE0();
  }
}

uint64_t sub_1A8C826FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8D596F0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  return __swift_destroy_boxed_opaque_existential_0(v6);
}

uint64_t sub_1A8C827C8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1A8D14214;
  }
  else
  {
    swift_release();
    *(void *)(v4 + 128) = a1;
    uint64_t v5 = sub_1A8C83D98;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1A8C82960()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A8C82A58(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A8C81994;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E979E6B0 + dword_1E979E6B0);
  return v6(a1, v4);
}

uint64_t sub_1A8C82B10(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A8C81A88;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E979E6B0 + dword_1E979E6B0);
  return v6(a1, v4);
}

unint64_t sub_1A8C82BC8()
{
  unint64_t result = qword_1EB5EACA0;
  if (!qword_1EB5EACA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB5EACA0);
  }
  return result;
}

uint64_t sub_1A8C82C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A8D59E10();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1A8D59E00();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1A8D4F134(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A8D59DC0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1A8C82D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1A8C82290;
  v10[23] = a4;
  v10[24] = v4;
  v10[21] = a2;
  v10[22] = a3;
  v10[20] = a1;
  return MEMORY[0x1F4188298](sub_1A8C8BF34, 0, 0);
}

uint64_t sub_1A8C82E54()
{
  uint64_t v2 = v0[28];
  unint64_t v1 = v0[29];
  swift_release();
  sub_1A8C91500(v2, v1);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3(0);
}

void sub_1A8C82EE4()
{
  if (!qword_1EB5EACF8)
  {
    sub_1A8D596F0();
    unint64_t v0 = sub_1A8D59FD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB5EACF8);
    }
  }
}

void sub_1A8C82F3C(id a1, char a2, void (*a3)(id, id))
{
  if (a2)
  {
    id v5 = a1;
    a3(0, a1);
  }
  else
  {
    id v6 = a1;
    id v7 = CloudFeature.cloudFeatureObject.getter();
    a3(v7, 0);
  }
  sub_1A8C9292C(a1);
}

__CFString *sub_1A8C82FD8()
{
  type metadata accessor for NotificationObservation();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = @"com.apple.CloudSubscriptionFeature.Changed";
  *(void *)(v0 + 24) = @"com.apple.CloudSubscriptionFeatures.Ticket.Changed";
  *(_WORD *)(v0 + 32) = 0;
  qword_1EB5ECD10 = v0;
  uint64_t v1 = @"com.apple.CloudSubscriptionFeature.Changed";
  return @"com.apple.CloudSubscriptionFeatures.Ticket.Changed";
}

void sub_1A8C83048(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_1A8C830C0()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_1A8C82EE4();
    if (v1 <= 0x3F)
    {
      sub_1A8D596F0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void *sub_1A8C831D4()
{
  id v1 = objc_msgSend(*v0, sel_aa_primaryAppleAccount);
  unint64_t v2 = v1;
  if (v1)
  {
    id v3 = objc_msgSend(v1, sel_aa_altDSID);

    if (v3)
    {
      unint64_t v2 = (void *)sub_1A8D59BF0();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

void sub_1A8C83264()
{
  if (qword_1EB5E9448 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB5E9598;
  v0[5] = &type metadata for GatewayRequest;
  v0[6] = &off_1EFF547D0;
  v0[7] = v1;
  uint64_t v2 = swift_allocObject();
  v0[2] = v2;
  *(void *)(v2 + 16) = 2;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(unsigned char *)(v2 + 48) = 4;
  id v5 = (char *)&dword_1E979E800 + dword_1E979E800;
  swift_retain();
  id v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  *id v3 = v0;
  v3[1] = sub_1A8C931B8;
  __asm { BR              X8 }
}

uint64_t sub_1A8C833D8(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAD58);
  char v37 = a2;
  uint64_t v6 = sub_1A8D5A1E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35) {
      break;
    }
    v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v35) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v36 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          id v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v35) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v36 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    v25 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
    if (v37)
    {
      sub_1A8C91C90(v25, (uint64_t)v38);
    }
    else
    {
      sub_1A8C91CA8((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_1A8D5A4A0();
    sub_1A8D59C80();
    uint64_t result = sub_1A8D5A4D0();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    void *v15 = v24;
    v15[1] = v23;
    uint64_t result = sub_1A8C91C90(v38, *(void *)(v7 + 56) + 40 * v14);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v34;
  v19 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v19 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_1A8C83700()
{
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 88);
  id v3 = __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 72), *(void *)(*(void *)(v0 + 72) + 24));
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  *(void *)(v0 + 48) = sub_1A8C937E4();
  *(unsigned char *)(v0 + 16) = 0;
  char v4 = sub_1A8D597C0();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 96) = v6;
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(unsigned char *)(v6 + 40) = (v4 & 1) == 0;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v7;
  uint64_t v8 = type metadata accessor for CloudFeature();
  *uint64_t v7 = v0;
  v7[1] = sub_1A8C8254C;
  return MEMORY[0x1F4188160](v0 + 56, 0, 0, 0xD00000000000001FLL, 0x80000001A8D64940, sub_1A8C92C3C, v6, v8);
}

uint64_t sub_1A8C8385C(uint64_t a1)
{
  long long v9 = *(_OWORD *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 40) = v4;
  *(void *)(v6 + 48) = v5;
  *(_OWORD *)(v6 + 24) = v9;
  *(void *)(v6 + 8) = sub_1A8C81994;
  *(void *)(v6 + 16) = a1;
  uint64_t v10 = (uint64_t (__cdecl *)())((char *)&dword_1E979E7F8 + dword_1E979E7F8);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v6 + 56) = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1A8C92FAC;
  return v10();
}

uint64_t sub_1A8C8396C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v7 = sub_1A8D59E10();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 1, v7) != 1)
  {
    sub_1A8D59E00();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1A8D4F134(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A8D59DC0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  a4(0);
  return swift_task_create();
}

uint64_t sub_1A8C83AF0(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A8C82960;
  return v6(a1);
}

uint64_t sub_1A8C83BCC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A8C83C30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_43Tm()
{
  swift_bridgeObjectRelease();

  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A8C83D98()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = (void (*)(void *, void))v0[11];
  id v3 = v1;
  v2(v1, 0);

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1A8C83E20(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + 112);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 112);
  if (!*(void *)(v6 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_1A8C90B9C(a1, a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_endAccess();
    type metadata accessor for TaskLimiter();
    uint64_t v9 = swift_allocObject();
    swift_defaultActor_initialize();
    *(void *)(v9 + 112) = MEMORY[0x1E4FBC868];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    sub_1A8D3E32C(v9, a1, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v5 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    return v9;
  }
  uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1A8C83FB8()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v4 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v5 = (void *)swift_allocObject();
  v0[20] = v5;
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E979F9A8 + dword_1E979F9A8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[21] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1A8C81F6C;
  uint64_t v8 = v0[12];
  uint64_t v7 = v0[13];
  return v10(v8, v7, (uint64_t)&unk_1E979EC30, (uint64_t)v5);
}

uint64_t sub_1A8C840CC()
{
  if (qword_1EB5EAD40 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  sub_1A8C91CA8(*(void *)(v0 + 80), v0 + 16);
  uint64_t v4 = (void *)swift_allocObject();
  *(void *)(v0 + 104) = v4;
  sub_1A8C91C90((long long *)(v0 + 16), (uint64_t)(v4 + 2));
  v4[7] = v2;
  v4[8] = v1;
  v4[9] = v3;
  uint64_t v9 = (char *)&dword_1E979F9F0 + dword_1E979F9F0;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1A8C827C8;
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 72);
  return ((uint64_t (*)(uint64_t, uint64_t, void *, void *))v9)(v7, v6, &unk_1E979F5A8, v4);
}

uint64_t sub_1A8C84228()
{
  sub_1A8C8DE74(v0 + 16, &qword_1EB5EAD60);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 72, 7);
}

uint64_t sub_1A8C84270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 384) = v13;
  *(void *)(v8 + 392) = v14;
  *(unsigned char *)(v8 + 492) = v12;
  *(_OWORD *)(v8 + 368) = v11;
  *(void *)(v8 + 352) = a7;
  *(void *)(v8 + 360) = a8;
  *(void *)(v8 + 336) = a5;
  *(void *)(v8 + 344) = a6;
  *(void *)(v8 + 328) = a4;
  *(void *)(v8 + 400) = type metadata accessor for InternalError();
  *(void *)(v8 + 408) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8C8EBC8, 0, 0);
}

uint64_t sub_1A8C845CC()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  sub_1A8C8DE74(v0 + 72, &qword_1EB5E9DA8);
  return MEMORY[0x1F4186488](v0, 112, 7);
}

uint64_t sub_1A8C84714()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v1 = (void *)sub_1A8D59BC0();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    *((void *)&v18 + 1) = sub_1A8C82BC8();
    v19 = &off_1EFF56B50;
    *(void *)&long long v17 = v2;
  }
  else
  {
    v19 = 0;
    long long v17 = 0u;
    long long v18 = 0u;
  }
  uint64_t v3 = type metadata accessor for SystemProperties();
  v16[3] = v3;
  v16[4] = &off_1EFF55B18;
  v16[0] = swift_initStaticObject();
  type metadata accessor for FeatureCache();
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v3);
  MEMORY[0x1F4188790](v5, v5);
  uint64_t v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v8 + 16))(v7);
  uint64_t v9 = *v7;
  uint64_t v14 = v3;
  v15 = &off_1EFF55B18;
  *(void *)&long long v13 = v9;
  type metadata accessor for UnfairLock();
  uint64_t v10 = swift_allocObject();
  long long v11 = (_DWORD *)swift_slowAlloc();
  *(void *)(v10 + 16) = v11;
  *long long v11 = 0;
  *(void *)(v4 + 56) = v10;
  sub_1A8C83BCC((uint64_t)&v17, v4 + 16, &qword_1EB5EAD60);
  sub_1A8C91C90(&v13, v4 + 64);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  qword_1EB5EAB28 = v4;
  return result;
}

uint64_t destroy for GatewayService(uint64_t a1)
{
  if (*(void *)(a1 + 144)) {
    __swift_destroy_boxed_opaque_existential_0(a1 + 120);
  }
  if (*(void *)(a1 + 184)) {
    __swift_destroy_boxed_opaque_existential_0(a1 + 160);
  }
  return __swift_destroy_boxed_opaque_existential_0(a1 + 200);
}

uint64_t sub_1A8C84960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8D59E10();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A8D59E00();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1A8C8DE74(a1, &qword_1EB5EAEA0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A8D59DC0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

id CloudFeature.cloudFeatureObject.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___CloudFeature_featureID);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___CloudFeature_featureID + 8);
  uint64_t v3 = (unsigned __int8 *)(v0 + OBJC_IVAR___CloudFeature_canUse);
  swift_beginAccess();
  int v4 = *v3;
  uint64_t v5 = (uint64_t *)(v0 + OBJC_IVAR___CloudFeature_limit);
  swift_beginAccess();
  int v6 = *((unsigned __int8 *)v5 + 8);
  if (v4 != 1 || v6 == 0)
  {
    if (v4) {
      uint64_t v8 = 0;
    }
    else {
      uint64_t v8 = 2;
    }
    if ((v6 & 1) == 0)
    {
LABEL_15:
      uint64_t v16 = *v5;
      uint64_t v17 = *v3;
      uint64_t v18 = v0 + OBJC_IVAR___CloudFeature_accessToken;
      swift_beginAccess();
      uint64_t v19 = *(void *)(v18 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v12 = (void *)sub_1A8D59BC0();
      swift_bridgeObjectRelease();
      if (v19)
      {
        long long v13 = (void *)sub_1A8D59BC0();
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v13 = 0;
      }
      id v20 = objc_msgSend(objc_allocWithZone((Class)CloudFeatureObject), sel_initWithFeatureID_status_canUse_intValue_accessToken_, v12, v8, v17, v16, v13);
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v14 = qword_1EB5EAB80;
    swift_bridgeObjectRetain();
    if (v14 != -1) {
      swift_once();
    }
    char v15 = sub_1A8CB871C(v1, v2, qword_1EB5EAB90);
    swift_bridgeObjectRelease();
    uint64_t v8 = v15 & 1;
    if ((v5[1] & 1) == 0) {
      goto LABEL_15;
    }
  }
  uint64_t v9 = *v3;
  uint64_t v10 = v0 + OBJC_IVAR___CloudFeature_accessToken;
  swift_beginAccess();
  uint64_t v11 = *(void *)(v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v12 = (void *)sub_1A8D59BC0();
  swift_bridgeObjectRelease();
  if (v11)
  {
    long long v13 = (void *)sub_1A8D59BC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v13 = 0;
  }
  id v20 = objc_msgSend(objc_allocWithZone((Class)CloudFeatureObject), sel_initWithFeatureID_status_canUse_accessToken_, v12, v8, v9, v13);
LABEL_21:
  id v21 = v20;

  return v21;
}

id NotificationObservation.addObserver(change:)(uint64_t a1, uint64_t a2)
{
  id v5 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  v13[4] = sub_1A8D56BEC;
  v13[5] = v7;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1A8D56C10;
  v13[3] = &block_descriptor_15;
  uint64_t v8 = _Block_copy(v13);
  swift_retain();
  swift_release();
  id v9 = objc_msgSend(v5, sel_addObserverForName_object_queue_usingBlock_, v6, 0, 0, v8);
  _Block_release(v8);

  if ((*(unsigned char *)(v2 + 32) & 1) == 0)
  {
    uint64_t v10 = sub_1A8D59BF0();
    sub_1A8C866E4(v10, v11);
    swift_bridgeObjectRelease();
    *(unsigned char *)(v2 + 32) = 1;
  }
  return v9;
}

uint64_t sub_1A8C84ED4@<X0>(void *a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a4;
  uint64_t v42 = *((void *)a2 - 1);
  MEMORY[0x1F4188790](a1, a2);
  v44 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CacheBox.CodingKeys();
  swift_getWitnessTable();
  uint64_t v46 = sub_1A8D5A2D0();
  uint64_t v41 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46, v8);
  uint64_t v10 = (char *)&v38 - v9;
  v43 = a3;
  unint64_t v11 = (int *)type metadata accessor for CacheBox();
  uint64_t v39 = *((void *)v11 - 1);
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (char *)&v38 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v45 = v10;
  uint64_t v15 = (uint64_t)v47;
  sub_1A8D5A4F0();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v16 = v42;
  v47 = a1;
  char v52 = 0;
  uint64_t v17 = v44;
  sub_1A8D5A2B0();
  uint64_t v18 = *(void (**)(char *, char *))(v16 + 32);
  v44 = a2;
  v18(v14, v17);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  MEMORY[0x1F4188790](v19 - 8, v20);
  v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1A8D596F0();
  char v51 = 1;
  sub_1A8C93C40(&qword_1EB5EA168);
  sub_1A8D5A280();
  uint64_t v24 = sub_1A8C921A0((uint64_t)v22, (uint64_t)&v14[v11[11]]);
  v43 = &v38;
  uint64_t v25 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v24, v26);
  unint64_t v28 = (char *)&v38 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v50 = 2;
  uint64_t v38 = 0;
  sub_1A8D5A2B0();
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v14[v11[12]], v28, v23);
  char v49 = 3;
  uint64_t v29 = sub_1A8D5A250();
  unint64_t v30 = (uint64_t *)&v14[v11[13]];
  *unint64_t v30 = v29;
  v30[1] = v31;
  char v48 = 4;
  uint64_t v32 = sub_1A8D5A250();
  uint64_t v34 = v33;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v45, v46);
  int64_t v35 = (uint64_t *)&v14[v11[14]];
  *int64_t v35 = v32;
  v35[1] = v34;
  uint64_t v36 = v39;
  (*(void (**)(uint64_t, char *, int *))(v39 + 16))(v40, v14, v11);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
  return (*(uint64_t (**)(char *, int *))(v36 + 8))(v14, v11);
}

id sub_1A8C85514()
{
  ObjectType = (objc_class *)swift_getObjectType();
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5EAEE0);
  id v3 = v0;
  int v4 = sub_1A8D59A60();
  os_log_type_t v5 = sub_1A8D59ED0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    id v10 = sub_1A8C8B110();
    sub_1A8D59FE0();
    *uint64_t v7 = v10;

    _os_log_impl(&dword_1A8C7F000, v4, v5, "Invalidating XPCConnection %@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
    MEMORY[0x1AD0E6EB0](v6, -1, -1);
  }
  else
  {
  }
  id v8 = sub_1A8C8B110();
  objc_msgSend(v8, sel_invalidate);

  v11.receiver = v3;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, sel_dealloc);
}

uint64_t sub_1A8C856E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v36 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  MEMORY[0x1F4188790](v14 - 8, v15);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB5EAD00 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1A8D59A80();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EB5EAC50);
  uint64_t v19 = sub_1A8D59A60();
  os_log_type_t v20 = sub_1A8D59F00();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    int64_t v35 = v7;
    uint64_t v22 = a2;
    uint64_t v23 = a4;
    uint64_t v24 = a6;
    uint64_t v25 = ObjectType;
    uint64_t v26 = a3;
    uint64_t v27 = a5;
    unint64_t v28 = v21;
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_1A8C7F000, v19, v20, "Getting feature eligibility", v21, 2u);
    uint64_t v29 = v28;
    a5 = v27;
    a3 = v26;
    uint64_t ObjectType = v25;
    a6 = v24;
    a4 = v23;
    a2 = v22;
    uint64_t v7 = v35;
    MEMORY[0x1AD0E6EB0](v29, -1, -1);
  }

  uint64_t v30 = sub_1A8D59E10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v17, 1, 1, v30);
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = 0;
  v31[3] = 0;
  uint64_t v32 = v36;
  v31[4] = v7;
  v31[5] = v32;
  v31[6] = a2;
  v31[7] = a3;
  v31[8] = a4;
  v31[9] = a5;
  v31[10] = a6;
  v31[11] = ObjectType;
  id v33 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A8C84960((uint64_t)v17, (uint64_t)&unk_1E979EC20, (uint64_t)v31);
  return swift_release();
}

void sub_1A8C85930(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, void *aBlock)
{
  _Block_copy(aBlock);
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1A8D59A80();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB5EAEE0);
  objc_super v11 = sub_1A8D59A60();
  os_log_type_t v12 = sub_1A8D59F00();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    sub_1A8C90120(0xD00000000000003CLL, 0x80000001A8D66A70, &v15);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v11, v12, "%s [objc]", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v14, -1, -1);
    MEMORY[0x1AD0E6EB0](v13, -1, -1);
  }

  _Block_copy(aBlock);
  sub_1A8C8728C(a1, a2, a3, a4, aBlock);
  _Block_release(aBlock);
  _Block_release(aBlock);
}

uint64_t sub_1A8C85B20(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1A8D59A80();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1A8D59A70();
}

id CloudFeature.init(from:)(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EA198);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  uint64_t v46 = v4;
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = &v1[OBJC_IVAR___CloudFeature_limit];
  *(void *)id v8 = 0;
  v8[8] = 1;
  uint64_t v9 = &v1[OBJC_IVAR___CloudFeature_accessToken];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  char v48 = (uint64_t *)v9;
  uint64_t v10 = &v1[OBJC_IVAR___CloudFeature_ttl];
  uint64_t v11 = sub_1A8D596F0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
  uint64_t v14 = v12 + 56;
  uint64_t v51 = (uint64_t)v10;
  v44 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v16 = a1[3];
  id v15 = (id)a1[4];
  char v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1A8C93B10();
  char v52 = v1;
  v47 = v7;
  uint64_t v17 = v53;
  sub_1A8D5A4F0();
  if (v17)
  {
    uint64_t v21 = v51;
    uint64_t v22 = v52;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
    swift_bridgeObjectRelease();
    sub_1A8C8DE74(v21, &qword_1EB5EACF0);

    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v53 = v14;
    uint64_t v19 = v44;
    uint64_t v18 = v45;
    v43 = v8;
    char v56 = 0;
    uint64_t v20 = sub_1A8D5A290();
    uint64_t v24 = v52;
    uint64_t v25 = (uint64_t *)&v52[OBJC_IVAR___CloudFeature_featureID];
    uint64_t *v25 = v20;
    v25[1] = v26;
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    v42[1] = v42;
    MEMORY[0x1F4188790](v27 - 8, v28);
    uint64_t v30 = (char *)v42 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    char v56 = 1;
    sub_1A8C93BF8(&qword_1EB5EA168, MEMORY[0x1F418BA40]);
    sub_1A8D5A2B0();
    v42[0] = v25;
    v19(v30, 0, 1, v11);
    uint64_t v31 = v51;
    swift_beginAccess();
    sub_1A8C83C30((uint64_t)v30, v31);
    swift_endAccess();
    char v56 = 4;
    uint64_t v32 = sub_1A8D5A250();
    uint64_t v34 = v33;
    int64_t v35 = v48;
    swift_beginAccess();
    *int64_t v35 = v32;
    v35[1] = v34;
    swift_bridgeObjectRelease();
    char v55 = 3;
    uint64_t v36 = sub_1A8D5A270();
    LOBYTE(v34) = v37;
    uint64_t v38 = v43;
    swift_beginAccess();
    *(void *)uint64_t v38 = v36;
    v38[8] = v34 & 1;
    char v57 = 2;
    uint64_t v39 = v47;
    LOBYTE(v38) = sub_1A8D5A2A0();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v39, v18);
    uint64_t v41 = (uint64_t)v49;
    uint64_t v40 = (objc_class *)ObjectType;
    v24[OBJC_IVAR___CloudFeature_canUse] = v38 & 1;

    v54.receiver = v24;
    v54.super_class = v40;
    id v15 = objc_msgSendSuper2(&v54, sel_init, v42[0]);
    __swift_destroy_boxed_opaque_existential_0(v41);
  }
  return v15;
}

Swift::Void __swiftcall CloudFeature.encode(with:)(NSCoder with)
{
  uint64_t v3 = (void *)sub_1A8D59BC0();
  uint64_t v4 = (void *)sub_1A8D59BC0();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];

  swift_beginAccess();
  uint64_t v5 = (void *)sub_1A8D59DB0();
  uint64_t v6 = (void *)sub_1A8D59BC0();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];

  uint64_t v7 = v1 + OBJC_IVAR___CloudFeature_limit;
  swift_beginAccess();
  if ((*(unsigned char *)(v7 + 8) & 1) == 0)
  {
    id v8 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)v7);
    uint64_t v9 = (void *)sub_1A8D59BC0();
    [(objc_class *)with.super.isa encodeObject:v8 forKey:v9];
  }
  uint64_t v10 = v1 + OBJC_IVAR___CloudFeature_accessToken;
  swift_beginAccess();
  if (*(void *)(v10 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = (void *)sub_1A8D59BC0();
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)sub_1A8D59BC0();
    [(objc_class *)with.super.isa encodeObject:v11 forKey:v12];
  }
  uint64_t v13 = sub_1A8D596F0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v16 = &v22[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = v1 + OBJC_IVAR___CloudFeature_ttl;
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  MEMORY[0x1F4188790]();
  uint64_t v19 = &v22[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A8CB249C(v17, (uint64_t)v19, &qword_1EB5EACF0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13) == 1)
  {
    sub_1A8C8DE74((uint64_t)v19, &qword_1EB5EACF0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 32))(v16, v19, v13);
    uint64_t v20 = (void *)sub_1A8D59640();
    uint64_t v21 = (void *)sub_1A8D59BC0();
    [(objc_class *)with.super.isa encodeObject:v20 forKey:v21];

    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t sub_1A8C86480()
{
  uint64_t v19 = v0;
  swift_release();
  if (qword_1EB5EAD00 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5EAC50);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59EE0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  id v8 = (void *)v0[22];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v18 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_getErrorValue();
    uint64_t v11 = sub_1A8D5A440();
    v0[10] = sub_1A8C90120(v11, v12, &v18);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, v5, v6, "Received error from server: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = (void *)v0[22];
  uint64_t v14 = (void (*)(void, id))v0[16];
  swift_getErrorValue();
  id v15 = sub_1A8C90F38(v0[3], v0[4]);
  v14(0, v15);

  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

void sub_1A8C866E4(uint64_t a1, unint64_t a2)
{
  id v3 = v2;
  if (qword_1EB5EAB40 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1A8D59A80();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB5EAB60);
  swift_bridgeObjectRetain_n();
  BOOL v7 = sub_1A8D59A60();
  os_log_type_t v8 = sub_1A8D59F00();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v13 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A8C90120(a1, a2, &v13);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v7, v8, "registering darwin observer for name: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v11 = CFNotificationCenterGetDarwinNotifyCenter();
  unint64_t v12 = (__CFString *)sub_1A8D59BC0();
  CFNotificationCenterAddObserver(v11, v3, (CFNotificationCallback)sub_1A8D567AC, v12, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
}

void sub_1A8C868E8(void *a1, void *a2, void (*a3)(void, void))
{
  if (a2)
  {
    uint64_t v5 = qword_1EB5EAEF8;
    id v6 = a2;
    if (v5 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1A8D59A80();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB5EAEE0);
    id v8 = v6;
    uint64_t v9 = sub_1A8D59A60();
    os_log_type_t v10 = sub_1A8D59EE0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v42 = a3;
      uint64_t v11 = swift_slowAlloc();
      uint64_t v40 = (void *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v44 = v41;
      *(_DWORD *)uint64_t v11 = 138543618;
      log = v9;
      id v12 = v8;
      sub_1A8D59FE0();
      *uint64_t v40 = a2;

      *(_WORD *)(v11 + 12) = 2082;
      id v13 = objc_msgSend(v12, sel_userInfo);
      sub_1A8D59B30();

      uint64_t v14 = sub_1A8D59B40();
      unint64_t v16 = v15;
      swift_bridgeObjectRelease();
      sub_1A8C90120(v14, v16, &v44);
      sub_1A8D59FE0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A8C7F000, log, v10, "Received error from daemon:%{public}@, %{public}s", (uint8_t *)v11, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v40, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v41, -1, -1);
      uint64_t v17 = v11;
      a3 = v42;
      MEMORY[0x1AD0E6EB0](v17, -1, -1);
    }
    else
    {
    }
    id v29 = v8;
    uint64_t v30 = a2;
    uint64_t v31 = 1;
LABEL_22:
    a3(v30, v31);

    return;
  }
  if (a1)
  {
    uint64_t v19 = qword_1EB5EAEF8;
    id v20 = a1;
    if (v19 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1A8D59A80();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB5EAEE0);
    id v22 = v20;
    uint64_t v23 = sub_1A8D59A60();
    os_log_type_t v24 = sub_1A8D59F00();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      v43 = a3;
      uint64_t v26 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 138543362;
      uint64_t v44 = (uint64_t)v22;
      id v27 = v22;
      sub_1A8D59FE0();
      *uint64_t v26 = a1;

      _os_log_impl(&dword_1A8C7F000, v23, v24, "Successfully retrieved feature from daemon. %{public}@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      uint64_t v28 = v26;
      a3 = v43;
      MEMORY[0x1AD0E6EB0](v28, -1, -1);
      MEMORY[0x1AD0E6EB0](v25, -1, -1);
    }
    else
    {
    }
    id v29 = v22;
    uint64_t v30 = a1;
    uint64_t v31 = 0;
    goto LABEL_22;
  }
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1A8D59A80();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EB5EAEE0);
  uint64_t v33 = sub_1A8D59A60();
  os_log_type_t v34 = sub_1A8D59F00();
  if (os_log_type_enabled(v33, v34))
  {
    int64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v35 = 0;
    _os_log_impl(&dword_1A8C7F000, v33, v34, "Incomplete response from daemon. It contains no feature and no error.", v35, 2u);
    MEMORY[0x1AD0E6EB0](v35, -1, -1);
  }

  sub_1A8C8C7B0();
  uint64_t v36 = (void *)swift_allocError();
  *char v37 = 2;
  id v38 = v36;
  a3(v36, 1);
}

id CloudFeature.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = &v2[OBJC_IVAR___CloudFeature_limit];
  *(void *)uint64_t v5 = 0;
  v5[8] = 1;
  id v6 = (uint64_t *)&v2[OBJC_IVAR___CloudFeature_accessToken];
  *id v6 = 0;
  v6[1] = 0;
  uint64_t v7 = (uint64_t)&v2[OBJC_IVAR___CloudFeature_ttl];
  uint64_t v8 = sub_1A8D596F0();
  uint64_t v9 = *(void *)(v8 - 8);
  os_log_type_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v38 = v9 + 56;
  v10(v7, 1, 1, v8);
  sub_1A8C8EB1C(0, (unint64_t *)&qword_1EB5EACB0);
  uint64_t v11 = v2;
  uint64_t v12 = sub_1A8D59F80();
  if (v12)
  {
    id v13 = (void *)v12;
    uint64_t v36 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v10;
    char v37 = (objc_class *)ObjectType;
    uint64_t v14 = sub_1A8D59BF0();
    uint64_t v16 = v15;

    uint64_t v17 = (uint64_t *)&v11[OBJC_IVAR___CloudFeature_featureID];
    *uint64_t v17 = v14;
    v17[1] = v16;
    sub_1A8C8EB1C(0, &qword_1EB5EACA8);
    uint64_t v18 = (void *)sub_1A8D59F80();
    if (v18)
    {
      uint64_t v40 = 0;
      char v41 = 1;
      sub_1A8D59EA0();

      uint64_t v18 = 0;
    }
    swift_beginAccess();
    *(void *)uint64_t v5 = v18;
    v5[8] = 1;
    uint64_t v19 = sub_1A8D59F80();
    if (v19)
    {
      id v20 = (void *)v19;
      uint64_t v21 = sub_1A8D59BF0();
      uint64_t v23 = v22;
    }
    else
    {
      uint64_t v21 = 0;
      uint64_t v23 = 0;
    }
    uint64_t v25 = 1;
    swift_beginAccess();
    *id v6 = v21;
    v6[1] = v23;
    swift_bridgeObjectRelease();
    sub_1A8C8EB1C(0, &qword_1EB5EAD50);
    uint64_t v26 = (void *)sub_1A8D59F80();
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    MEMORY[0x1F4188790](v27 - 8, v28);
    uint64_t v30 = (char *)&v36 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v26)
    {
      sub_1A8D596C0();

      uint64_t v25 = 0;
    }
    v36(v30, v25, 1, v8);
    swift_beginAccess();
    sub_1A8C83C30((uint64_t)v30, v7);
    swift_endAccess();
    uint64_t v31 = (void *)sub_1A8D59F80();
    if (v31)
    {
      uint64_t v32 = v31;
      unsigned __int8 v33 = objc_msgSend(v31, sel_BOOLValue);
    }
    else
    {
      unsigned __int8 v33 = 0;
    }
    os_log_type_t v34 = v37;
    v11[OBJC_IVAR___CloudFeature_canUse] = v33;

    v39.receiver = v11;
    v39.super_class = v34;
    id v24 = objc_msgSendSuper2(&v39, sel_init);
  }
  else
  {

    swift_bridgeObjectRelease();
    sub_1A8C8DE74(v7, &qword_1EB5EACF0);

    swift_deallocPartialClassInstance();
    return 0;
  }
  return v24;
}

void sub_1A8C8728C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, void *aBlock)
{
  _Block_copy(aBlock);
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1A8D59A80();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB5EAEE0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_1A8D59A60();
  os_log_type_t v12 = sub_1A8D59F00();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v16 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A8C90120(a1, a2, &v16);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A8C90120(a3, a4, &v16);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v11, v12, "Checking feature eligibility with feature id: %s, bundle id: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v14, -1, -1);
    MEMORY[0x1AD0E6EB0](v13, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  id v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  _Block_copy(aBlock);
  sub_1A8C8AB1C(a1, a2, a3, a4, v15, (void (**)(void, void, void))aBlock);
  _Block_release(aBlock);

  _Block_release(aBlock);
}

void sub_1A8C8750C(char a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, void (*a6)(void *, uint64_t))
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1A8D59A80();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EB5EAEE0);
  id v12 = a2;
  swift_bridgeObjectRetain_n();
  id v13 = v12;
  uint64_t v14 = sub_1A8D59A60();
  os_log_type_t v15 = sub_1A8D59F00();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v26 = a6;
    uint64_t v23 = a2;
    char v16 = a1;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v22;
    *(_DWORD *)uint64_t v17 = 136315650;
    swift_bridgeObjectRetain();
    uint64_t v25 = a3;
    sub_1A8C90120(a3, a4, &v27);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 1024;
    char v24 = v16;
    a2 = v23;
    sub_1A8D59FE0();
    *(_WORD *)(v17 + 18) = 2080;
    if (v23)
    {
      id v18 = objc_msgSend(v13, sel_localizedDescription);
      uint64_t v19 = sub_1A8D59BF0();
      unint64_t v21 = v20;
    }
    else
    {
      unint64_t v21 = 0xE300000000000000;
      uint64_t v19 = 7104878;
    }
    sub_1A8C90120(v19, v21, &v27);
    sub_1A8D59FE0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A8C7F000, v14, v15, "received feature eligibility response, feature: %s, isEligible: %{BOOL}d, error: %s", (uint8_t *)v17, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v22, -1, -1);
    MEMORY[0x1AD0E6EB0](v17, -1, -1);

    a6 = v26;
    a3 = v25;
    a1 = v24;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1A8C898E8(a3, a4, a1 & 1, a2, a6);
}

uint64_t sub_1A8C877CC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_1A8C87810(uint64_t (*a1)(void), const char *a2)
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A8D59A80();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EAEE0);
  oslog = sub_1A8D59A60();
  os_log_type_t v5 = a1();
  if (os_log_type_enabled(oslog, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v9 = v7;
    *(_DWORD *)id v6 = 136315138;
    sub_1A8C90120(6581865, 0xE300000000000000, &v9);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, oslog, v5, a2, v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
    MEMORY[0x1AD0E6EB0](v6, -1, -1);
  }
  else
  {
  }
}

void sub_1A8C879B0()
{
}

uint64_t sub_1A8C879D0()
{
  uint64_t v60 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 96);
  uint64_t v57 = *(void *)(v0 + 264) + 112;
  swift_beginAccess();
  uint64_t v2 = *(void *)v57;
  if (!*(void *)(*(void *)v57 + 16))
  {
    *(void *)(v0 + 128) = 0;
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
LABEL_12:
    sub_1A8C8DE74(v0 + 96, &qword_1EB5EAD10);
    goto LABEL_14;
  }
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1A8C90B9C(v3, v4);
  if (v6)
  {
    sub_1A8C91CA8(*(void *)(v2 + 56) + 40 * v5, v0 + 96);
  }
  else
  {
    *(void *)(v0 + 128) = 0;
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 120)) {
    goto LABEL_12;
  }
  sub_1A8C91C90((long long *)(v0 + 96), v0 + 56);
  sub_1A8C91CA8(v0 + 56, v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EA280);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAD28);
  if (swift_dynamicCast())
  {
    uint64_t v7 = *(void *)(v0 + 216);
    *(void *)(v0 + 280) = v7;
    if (qword_1EB5EAD00 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1A8D59A80();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EB5EAC50);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = sub_1A8D59A60();
    os_log_type_t v10 = sub_1A8D59F00();
    BOOL v11 = os_log_type_enabled(v9, v10);
    unint64_t v12 = *(void *)(v0 + 240);
    if (v11)
    {
      uint64_t v56 = *(void *)(v0 + 232);
      uint64_t v58 = v7;
      id v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      v59[0] = v14;
      *(_DWORD *)id v13 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 224) = sub_1A8C90120(v56, v12, v59);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v9, v10, "TaskLimiter: reusing existing task for identifier %{public}s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v14, -1, -1);
      os_log_type_t v15 = v13;
      uint64_t v7 = v58;
      MEMORY[0x1AD0E6EB0](v15, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    objc_super v54 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v54;
    uint64_t v49 = type metadata accessor for CloudFeature();
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
    *objc_super v54 = v0;
    v54[1] = sub_1A8D365AC;
    uint64_t v51 = MEMORY[0x1E4FBC0F0];
    uint64_t v52 = v0 + 208;
    uint64_t v53 = v7;
    goto LABEL_26;
  }
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
LABEL_14:
  if (qword_1EB5EAD00 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1A8D59A80();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EB5EAC50);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_1A8D59A60();
  os_log_type_t v18 = sub_1A8D59ED0();
  BOOL v19 = os_log_type_enabled(v17, v18);
  unint64_t v20 = *(void *)(v0 + 240);
  if (v19)
  {
    uint64_t v21 = *(void *)(v0 + 232);
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    v59[0] = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 200) = sub_1A8C90120(v21, v20, v59);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v17, v18, "TaskLimiter: creating new task for identifier %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v23, -1, -1);
    MEMORY[0x1AD0E6EB0](v22, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v24 = *(void *)(v0 + 272);
  uint64_t v26 = *(void *)(v0 + 248);
  uint64_t v25 = *(void *)(v0 + 256);
  uint64_t v27 = sub_1A8D59E10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v24, 1, 1, v27);
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = v26;
  v28[5] = v25;
  swift_retain();
  uint64_t v29 = sub_1A8D4BCF8(v24, (uint64_t)&unk_1E979FA00, (uint64_t)v28);
  *(void *)(v0 + 304) = v29;
  swift_bridgeObjectRetain_n();
  uint64_t v30 = sub_1A8D59A60();
  os_log_type_t v31 = sub_1A8D59ED0();
  BOOL v32 = os_log_type_enabled(v30, v31);
  unint64_t v33 = *(void *)(v0 + 240);
  if (v32)
  {
    uint64_t v34 = *(void *)(v0 + 232);
    int64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    v59[0] = v36;
    *(_DWORD *)int64_t v35 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 192) = sub_1A8C90120(v34, v33, v59);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v30, v31, "TaskLimiter: storing task for identifier %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v36, -1, -1);
    MEMORY[0x1AD0E6EB0](v35, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v38 = *(void *)(v0 + 232);
  uint64_t v37 = *(void *)(v0 + 240);
  v59[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAD28);
  v59[4] = (uint64_t)&off_1EFF55138;
  v59[0] = v29;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A8C916F8((uint64_t)v59, v38, v37);
  swift_endAccess();
  swift_bridgeObjectRetain_n();
  objc_super v39 = sub_1A8D59A60();
  os_log_type_t v40 = sub_1A8D59ED0();
  BOOL v41 = os_log_type_enabled(v39, v40);
  unint64_t v42 = *(void *)(v0 + 240);
  if (v41)
  {
    uint64_t v43 = v29;
    uint64_t v44 = *(void *)(v0 + 232);
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    v59[0] = v46;
    *(_DWORD *)uint64_t v45 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v47 = v44;
    uint64_t v29 = v43;
    *(void *)(v0 + 184) = sub_1A8C90120(v47, v42, v59);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v39, v40, "TaskLimiter: performing task operation for identifier %s", v45, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v46, -1, -1);
    MEMORY[0x1AD0E6EB0](v45, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  char v48 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v48;
  uint64_t v49 = type metadata accessor for CloudFeature();
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
  *char v48 = v0;
  v48[1] = sub_1A8C9361C;
  uint64_t v51 = MEMORY[0x1E4FBC0F0];
  uint64_t v52 = v0 + 208;
  uint64_t v53 = v29;
LABEL_26:
  return MEMORY[0x1F4187D90](v52, v53, v49, v50, v51);
}

uint64_t sub_1A8C882B0()
{
  uint64_t v57 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 96);
  uint64_t v2 = v0 + 320;
  uint64_t v3 = *(void *)(v0 + 256) + 112;
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  if (!*(void *)(*(void *)v3 + 16))
  {
    *(void *)(v0 + 128) = 0;
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
LABEL_12:
    sub_1A8C8DE74(v0 + 96, &qword_1EB5EAD10);
    goto LABEL_14;
  }
  uint64_t v6 = *(void *)(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_1A8C90B9C(v6, v5);
  if (v8)
  {
    sub_1A8C91CA8(*(void *)(v4 + 56) + 40 * v7, v0 + 96);
  }
  else
  {
    *(void *)(v0 + 128) = 0;
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 120)) {
    goto LABEL_12;
  }
  sub_1A8C91C90((long long *)(v0 + 96), v0 + 56);
  sub_1A8C91CA8(v0 + 56, v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EA280);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9660);
  if (swift_dynamicCast())
  {
    uint64_t v9 = *(void *)(v0 + 216);
    *(void *)(v0 + 272) = v9;
    if (qword_1EB5EAD00 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1A8D59A80();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB5EAC50);
    swift_bridgeObjectRetain_n();
    BOOL v11 = sub_1A8D59A60();
    os_log_type_t v12 = sub_1A8D59F00();
    BOOL v13 = os_log_type_enabled(v11, v12);
    unint64_t v14 = *(void *)(v0 + 232);
    if (v13)
    {
      uint64_t v15 = *(void *)(v0 + 224);
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v56[0] = v17;
      *(_DWORD *)uint64_t v16 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 184) = sub_1A8C90120(v15, v14, v56);
      uint64_t v2 = v0 + 320;
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v11, v12, "TaskLimiter: reusing existing task for identifier %{public}s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v17, -1, -1);
      MEMORY[0x1AD0E6EB0](v16, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    objc_super v54 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v54;
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
    *objc_super v54 = v0;
    v54[1] = sub_1A8D3467C;
    uint64_t v50 = MEMORY[0x1E4FBB390];
    uint64_t v51 = MEMORY[0x1E4FBC0F0];
    uint64_t v52 = v2;
    uint64_t v53 = v9;
    goto LABEL_26;
  }
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
LABEL_14:
  if (qword_1EB5EAD00 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1A8D59A80();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EB5EAC50);
  swift_bridgeObjectRetain_n();
  BOOL v19 = sub_1A8D59A60();
  os_log_type_t v20 = sub_1A8D59ED0();
  BOOL v21 = os_log_type_enabled(v19, v20);
  unint64_t v22 = *(void *)(v0 + 232);
  if (v21)
  {
    uint64_t v23 = *(void *)(v0 + 224);
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v56[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 200) = sub_1A8C90120(v23, v22, v56);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v19, v20, "TaskLimiter: creating new task for identifier %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v25, -1, -1);
    MEMORY[0x1AD0E6EB0](v24, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v26 = *(void *)(v0 + 264);
  uint64_t v28 = *(void *)(v0 + 240);
  uint64_t v27 = *(void *)(v0 + 248);
  uint64_t v29 = sub_1A8D59E10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v26, 1, 1, v29);
  uint64_t v30 = (void *)swift_allocObject();
  v30[2] = 0;
  v30[3] = 0;
  v30[4] = v28;
  v30[5] = v27;
  swift_retain();
  uint64_t v31 = sub_1A8D4BCA4(v26, (uint64_t)&unk_1E979F9B8, (uint64_t)v30);
  *(void *)(v0 + 296) = v31;
  swift_bridgeObjectRetain_n();
  BOOL v32 = sub_1A8D59A60();
  os_log_type_t v33 = sub_1A8D59ED0();
  BOOL v34 = os_log_type_enabled(v32, v33);
  unint64_t v35 = *(void *)(v0 + 232);
  if (v34)
  {
    uint64_t v36 = *(void *)(v0 + 224);
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    v56[0] = v38;
    *(_DWORD *)uint64_t v37 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 192) = sub_1A8C90120(v36, v35, v56);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v32, v33, "TaskLimiter: storing task for identifier %s", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v38, -1, -1);
    MEMORY[0x1AD0E6EB0](v37, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v40 = *(void *)(v0 + 224);
  uint64_t v39 = *(void *)(v0 + 232);
  v56[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9660);
  v56[4] = (uint64_t)&off_1EFF55138;
  v56[0] = v31;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A8C916F8((uint64_t)v56, v40, v39);
  swift_endAccess();
  swift_bridgeObjectRetain_n();
  BOOL v41 = sub_1A8D59A60();
  os_log_type_t v42 = sub_1A8D59ED0();
  BOOL v43 = os_log_type_enabled(v41, v42);
  unint64_t v44 = *(void *)(v0 + 232);
  if (v43)
  {
    uint64_t v45 = *(void *)(v0 + 224);
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    v56[0] = v47;
    *(_DWORD *)uint64_t v46 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 208) = sub_1A8C90120(v45, v44, v56);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v41, v42, "TaskLimiter: performing task operation for identifier %s", v46, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v47, -1, -1);
    MEMORY[0x1AD0E6EB0](v46, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  char v48 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v48;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
  *char v48 = v0;
  v48[1] = sub_1A8C93454;
  uint64_t v50 = MEMORY[0x1E4FBB390];
  uint64_t v51 = MEMORY[0x1E4FBC0F0];
  uint64_t v52 = v0 + 320;
  uint64_t v53 = v31;
LABEL_26:
  return MEMORY[0x1F4187D90](v52, v53, v50, v49, v51);
}

id sub_1A8C88B94(void *a1, void *a2, uint64_t a3, void (*a4)(void, void), uint64_t a5, void *a6)
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1A8D59A80();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB5EAEE0);
  id v11 = a2;
  id v12 = a1;
  id v13 = v11;
  unint64_t v14 = (char *)v12;
  uint64_t v15 = sub_1A8D59A60();
  os_log_type_t v16 = sub_1A8D59F00();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v29 = a2;
    uint64_t v25 = a4;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v30 = v27;
    *(_DWORD *)uint64_t v17 = 136446466;
    uint64_t v28 = a6;
    if (a1)
    {
      uint64_t v18 = *(void *)&v14[OBJC_IVAR___CloudFeature_featureID];
      unint64_t v19 = *(void *)&v14[OBJC_IVAR___CloudFeature_featureID + 8];
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v19 = 0xE300000000000000;
      uint64_t v18 = 7104878;
    }
    uint64_t v26 = a1;
    sub_1A8C90120(v18, v19, &v30);
    sub_1A8D59FE0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    if (v29)
    {
      id v20 = objc_msgSend(v13, sel_localizedDescription);
      uint64_t v21 = sub_1A8D59BF0();
      unint64_t v23 = v22;

      a4 = v25;
    }
    else
    {
      unint64_t v23 = 0xE300000000000000;
      a4 = v25;
      uint64_t v21 = 7104878;
    }
    sub_1A8C90120(v21, v23, &v30);
    sub_1A8D59FE0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A8C7F000, v15, v16, "received feature request response, feature: %{public}s, error: %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v27, -1, -1);
    MEMORY[0x1AD0E6EB0](v17, -1, -1);

    a6 = v28;
    a2 = v29;
    a1 = v26;
  }
  else
  {
  }
  swift_retain();
  sub_1A8C868E8(a1, a2, a4);
  swift_release();
  return objc_msgSend(a6, sel_invalidate);
}

void sub_1A8C88E70(uint64_t a1, unint64_t a2, uint64_t a3, void (**a4)(void, void, void))
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  MEMORY[0x1F4188790](v8 - 8, v9);
  id v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a4;
  _Block_copy(a4);
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1A8D59A80();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EB5EAEE0);
  swift_bridgeObjectRetain_n();
  unint64_t v14 = sub_1A8D59A60();
  os_log_type_t v15 = sub_1A8D59F00();
  if (os_log_type_enabled(v14, v15))
  {
    os_log_type_t v33 = a4;
    os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v34 = a1;
    uint64_t v18 = v17;
    v36[0] = v17;
    *(_DWORD *)os_log_type_t v16 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)&v35[0] = sub_1A8C90120(v34, a2, v36);
    a4 = v33;
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v14, v15, "Checking feature with id: %s [objc]", v16, 0xCu);
    swift_arrayDestroy();
    uint64_t v19 = v18;
    a1 = v34;
    MEMORY[0x1AD0E6EB0](v19, -1, -1);
    MEMORY[0x1AD0E6EB0](v16, -1, -1);

    if ((sub_1A8D328AC() & 1) == 0) {
      goto LABEL_10;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if ((sub_1A8D328AC() & 1) == 0) {
      goto LABEL_10;
    }
  }
  uint64_t v20 = sub_1A8D32CAC(a1, a2);
  if (v20)
  {
    uint64_t v21 = (void *)v20;
    unint64_t v22 = (void *)sub_1A8D59540();
    ((void (**)(void, void, void *))a4)[2](a4, 0, v22);

    goto LABEL_13;
  }
  id v23 = sub_1A8D33150(a1, a2);
  if (v23)
  {
LABEL_11:
    uint64_t v24 = v23;
    id v25 = CloudFeature.cloudFeatureObject.getter();
    ((void (**)(void, id, void))a4)[2](a4, v25, 0);
    swift_release();

    return;
  }
LABEL_10:
  id v23 = sub_1A8D18DB0(a1, a2);
  if (v23) {
    goto LABEL_11;
  }
  uint64_t v37 = &type metadata for FeatureFlag;
  uint64_t v38 = (_UNKNOWN **)sub_1A8C937E4();
  LOBYTE(v36[0]) = 0;
  sub_1A8D597C0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1A8C92938;
  *(void *)(v26 + 24) = v12;
  uint64_t v27 = (objc_class *)type metadata accessor for XPCCaller();
  id v28 = objc_allocWithZone(v27);
  swift_retain();
  id v29 = objc_msgSend(v28, sel_init);
  uint64_t v37 = (ValueMetadata *)v27;
  uint64_t v38 = &off_1EFF55120;
  v36[0] = (uint64_t)v29;
  uint64_t v30 = sub_1A8D59E10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
  sub_1A8C91CA8((uint64_t)v36, (uint64_t)v35);
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = 0;
  v31[3] = 0;
  v31[4] = a3;
  v31[5] = a1;
  v31[6] = a2;
  sub_1A8C91C90(v35, (uint64_t)(v31 + 7));
  v31[12] = sub_1A8C92B6C;
  v31[13] = v26;
  swift_bridgeObjectRetain();
  id v32 = v29;
  swift_retain();
  sub_1A8C84960((uint64_t)v11, (uint64_t)&unk_1E979F588, (uint64_t)v31);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  swift_release();

LABEL_13:
  swift_release();
}

void sub_1A8C892E8(uint64_t a1, unint64_t a2, int a3, uint64_t a4, void (*a5)(void, void), uint64_t a6)
{
  uint64_t v68 = a6;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  MEMORY[0x1F4188790](v13 - 8, v14);
  os_log_type_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4 <= 3)
  {
    uint64_t v63 = a1;
    uint64_t v64 = ObjectType;
    int v65 = a3;
    v66 = v6;
    v67 = a5;
    uint64_t v23 = sub_1A8D59720();
    uint64_t v24 = *(void *)(v23 - 8);
    MEMORY[0x1F4188790](v23, v25);
    uint64_t v27 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A8D59710();
    uint64_t v28 = sub_1A8D59700();
    unint64_t v30 = v29;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
    uint64_t v32 = sub_1A8C91D0C(8, v28, v30, v31);
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    swift_bridgeObjectRelease();
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_1A8D59A80();
    __swift_project_value_buffer(v39, (uint64_t)qword_1EB5E9318);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v40 = sub_1A8D59A60();
    os_log_type_t v41 = sub_1A8D59F00();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v62 = v32;
      uint64_t v43 = v42;
      uint64_t v60 = swift_slowAlloc();
      uint64_t v70 = v60;
      *(_DWORD *)uint64_t v43 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v61 = v16;
      uint64_t v44 = v36;
      uint64_t v45 = MEMORY[0x1AD0E5BA0](v62, v34, v36, v38);
      uint64_t v59 = v34;
      unint64_t v47 = v46;
      swift_bridgeObjectRelease();
      uint64_t v69 = sub_1A8C90120(v45, v47, &v70);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v43 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v48 = v63;
      uint64_t v69 = sub_1A8C90120(v63, a2, &v70);
      uint64_t v36 = v44;
      os_log_type_t v16 = v61;
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      os_log_type_t v49 = v41;
      uint64_t v50 = v59;
      _os_log_impl(&dword_1A8C7F000, v40, v49, "[%{public}s] Fetching feature %{public}s", (uint8_t *)v43, 0x16u);
      uint64_t v51 = v60;
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v51, -1, -1);
      uint64_t v52 = v43;
      uint64_t v32 = v62;
      MEMORY[0x1AD0E6EB0](v52, -1, -1);

      uint64_t v53 = v67;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      uint64_t v53 = v67;
      uint64_t v50 = v34;
      uint64_t v48 = v63;
    }
    uint64_t v54 = v64;
    uint64_t v55 = sub_1A8D59E10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v16, 1, 1, v55);
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = 0;
    *(void *)(v56 + 24) = 0;
    *(void *)(v56 + 32) = v32;
    *(void *)(v56 + 40) = v50;
    *(void *)(v56 + 48) = v36;
    *(void *)(v56 + 56) = v38;
    *(void *)(v56 + 64) = v48;
    *(void *)(v56 + 72) = a2;
    uint64_t v57 = v66;
    *(void *)(v56 + 80) = v66;
    *(unsigned char *)(v56 + 88) = v65 & 1;
    *(void *)(v56 + 96) = v53;
    *(void *)(v56 + 104) = v68;
    *(void *)(v56 + 112) = v54;
    swift_bridgeObjectRetain();
    id v58 = v57;
    swift_retain();
    sub_1A8C84960((uint64_t)v16, (uint64_t)&unk_1E979EC40, v56);
    swift_release();
  }
  else
  {
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1A8D59A80();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EB5E9318);
    uint64_t v18 = sub_1A8D59A60();
    os_log_type_t v19 = sub_1A8D59EE0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v69 = a4;
      uint64_t v70 = v21;
      *(_DWORD *)uint64_t v20 = 134218242;
      sub_1A8D59FE0();
      *(_WORD *)(v20 + 12) = 2080;
      uint64_t v69 = sub_1A8C90120(0xD000000000000038, 0x80000001A8D64400, &v70);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v18, v19, "We have attempted %ld times already, bailing out of %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v21, -1, -1);
      MEMORY[0x1AD0E6EB0](v20, -1, -1);
    }

    id v22 = sub_1A8CA6B90(16);
    a5(0, v22);
  }
}

void sub_1A8C898E8(uint64_t a1, unint64_t a2, char a3, void *a4, void (*a5)(void *, uint64_t))
{
  if (a4)
  {
    uint64_t v7 = qword_1EB5EAEF8;
    id v8 = a4;
    if (v7 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1A8D59A80();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB5EAEE0);
    id v10 = v8;
    id v11 = sub_1A8D59A60();
    os_log_type_t v12 = sub_1A8D59EE0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      unint64_t v29 = (void *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = v30;
      *(_DWORD *)uint64_t v13 = 138412546;
      log = v11;
      id v14 = v10;
      sub_1A8D59FE0();
      *unint64_t v29 = a4;

      *(_WORD *)(v13 + 12) = 2080;
      id v15 = objc_msgSend(v14, sel_userInfo);
      sub_1A8D59B30();

      uint64_t v16 = sub_1A8D59B40();
      unint64_t v18 = v17;
      swift_bridgeObjectRelease();
      sub_1A8C90120(v16, v18, &v31);
      sub_1A8D59FE0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A8C7F000, log, v12, "Received error from daemon: %@, %s", (uint8_t *)v13, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v29, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v30, -1, -1);
      MEMORY[0x1AD0E6EB0](v13, -1, -1);
    }
    else
    {
    }
    id v27 = v10;
    a5(a4, 1);
  }
  else
  {
    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1A8D59A80();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EB5EAEE0);
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_1A8D59A60();
    os_log_type_t v24 = sub_1A8D59F00();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v31 = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_bridgeObjectRetain();
      sub_1A8C90120(a1, a2, &v31);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 1024;
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v23, v24, "Successfully retrieved feature eligibility from daemon. Feature ID: %s, isEligible: %{BOOL}d", (uint8_t *)v25, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v26, -1, -1);
      MEMORY[0x1AD0E6EB0](v25, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a5((void *)(a3 & 1), 0);
  }
}

id FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(uint64_t a1, unint64_t a2, uint64_t *a3, unint64_t a4, int a5, char a6)
{
  int v35 = a5;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAC48);
  MEMORY[0x1F4188790](v12 - 8, v13);
  id v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAC40);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16, v18);
  uint64_t v20 = (id *)((char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((sub_1A8D59CC0() & 1) == 0)
  {
    uint64_t v33 = a3;
    unint64_t v34 = a4;
    uint64_t v22 = v6[7];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v22 + 16));
    sub_1A8C8A610(a1, a2, (uint64_t)v15);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 16));
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      sub_1A8C8DE74((uint64_t)v15, &qword_1EB5EAC48);
      if (qword_1EB5EAB38 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_1A8D59A80();
      __swift_project_value_buffer(v23, (uint64_t)qword_1EB5EAB48);
      swift_bridgeObjectRetain_n();
      os_log_type_t v24 = sub_1A8D59A60();
      os_log_type_t v25 = sub_1A8D59F00();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        uint64_t v37 = v27;
        *(_DWORD *)uint64_t v26 = 136446210;
        swift_bridgeObjectRetain();
        uint64_t v36 = sub_1A8C90120(a1, a2, &v37);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A8C7F000, v24, v25, "no cache for featureID: %{public}s", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v27, -1, -1);
        MEMORY[0x1AD0E6EB0](v26, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      sub_1A8C83BCC((uint64_t)v15, (uint64_t)v20, &qword_1EB5EAC40);
      if (v35)
      {
        uint64_t v28 = 0;
        uint64_t v29 = 0;
      }
      else
      {
        __swift_project_boxed_opaque_existential_1(v6 + 8, v6[11]);
        uint64_t v28 = sub_1A8C8E620();
        uint64_t v29 = v30;
      }
      char v31 = sub_1A8CEAB88((uint64_t)v28, v29, v33, v34, a6 & 1, &qword_1EB5EAC40, (void (*)(void))type metadata accessor for CloudFeature, &qword_1EB5E9FC0);
      swift_bridgeObjectRelease();
      if (v31)
      {
        id v32 = *v20;
        sub_1A8C8DE74((uint64_t)v20, &qword_1EB5EAC40);
        return v32;
      }
      sub_1A8C8DE74((uint64_t)v20, &qword_1EB5EAC40);
    }
    return 0;
  }
  if (qword_1EB5E9F90 != -1) {
    swift_once();
  }
  return sub_1A8D11248(a6 & 1);
}

uint64_t sub_1A8C8A33C(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = sub_1A8D596F0();
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  unsigned int v11 = v10 - 1;
  if (!v10) {
    unsigned int v11 = 0;
  }
  if (v11 <= v7) {
    unsigned int v12 = v7;
  }
  else {
    unsigned int v12 = v11;
  }
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = *(void *)(*(void *)(v8 - 8) + 64);
  if (v10 <= v12) {
    unsigned int v15 = v12;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v9 + 84);
  }
  if (v15 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  if (v10) {
    uint64_t v16 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  else {
    uint64_t v16 = v14 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v17 = *(void *)(v6 + 64) + v13;
  uint64_t v18 = v16 + v13;
  uint64_t v19 = v14 + 7;
  if (v15 >= a2)
  {
LABEL_34:
    if (v7 == v15)
    {
      uint64_t v29 = *(uint64_t (**)(int *, uint64_t, uint64_t))(v6 + 48);
      return v29(a1, v7, v5);
    }
    uint64_t v30 = ~v13;
    unint64_t v31 = ((unint64_t)a1 + v17) & v30;
    if (v11 != v15)
    {
      unint64_t v32 = (v18 + v31) & v30;
      if (v10 == v15)
      {
        uint64_t v33 = *(uint64_t (**)(unint64_t))(v9 + 48);
        return v33(v32);
      }
      else
      {
        unint64_t v35 = *(void *)(((v19 + v32) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v35 >= 0xFFFFFFFF) {
          LODWORD(v35) = -1;
        }
        if ((v35 + 1) >= 2) {
          return v35;
        }
        else {
          return 0;
        }
      }
    }
    if (v10 >= 2)
    {
      unsigned int v34 = (*(uint64_t (**)(unint64_t))(v9 + 48))(v31);
      if (v34 >= 2) {
        return v34 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  unint64_t v20 = ((((v19 + ((v18 + (v17 & ~v13)) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v21 = v20 & 0xFFFFFFF8;
  if ((v20 & 0xFFFFFFF8) != 0) {
    unsigned int v22 = 2;
  }
  else {
    unsigned int v22 = a2 - v15 + 1;
  }
  uint64_t result = 4;
  if (v22 >= 0x10000) {
    unsigned int v24 = 4;
  }
  else {
    unsigned int v24 = 2;
  }
  if (v22 < 0x100) {
    unsigned int v24 = 1;
  }
  if (v22 >= 2) {
    uint64_t v25 = v24;
  }
  else {
    uint64_t v25 = 0;
  }
  switch(v25)
  {
    case 1:
      int v26 = *((unsigned __int8 *)a1 + v20);
      if (!v26) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 2:
      int v26 = *(unsigned __int16 *)((char *)a1 + v20);
      if (!v26) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 3:
      __break(1u);
      return result;
    case 4:
      int v26 = *(int *)((char *)a1 + v20);
      if (!v26) {
        goto LABEL_34;
      }
LABEL_31:
      int v27 = v26 - 1;
      if (v21)
      {
        int v27 = 0;
        int v28 = *a1;
      }
      else
      {
        int v28 = 0;
      }
      uint64_t result = v15 + (v28 | v27) + 1;
      break;
    default:
      goto LABEL_34;
  }
  return result;
}

uint64_t sub_1A8C8A610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A8CB249C(v3 + 16, (uint64_t)v16, &qword_1EB5EAD60);
  uint64_t v8 = v17;
  if (!v17)
  {
    sub_1A8C8DE74((uint64_t)v16, &qword_1EB5EAD60);
    goto LABEL_6;
  }
  uint64_t v9 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 32))(a1, a2, v8, v9);
  unint64_t v12 = v11;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  if (v12 >> 60 == 15)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAC40);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
  sub_1A8D59500();
  swift_allocObject();
  sub_1A8D594F0();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAC40);
  sub_1A8C92C7C((unint64_t *)&qword_1EB5EA2C8, &qword_1EB5EAC40);
  sub_1A8D594E0();
  if (v4)
  {
    swift_release();
    return sub_1A8C93C84(v10, v12);
  }
  else
  {
    sub_1A8C93C84(v10, v12);
    swift_release();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a3, 0, 1, v13);
  }
}

void sub_1A8C8A800(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v34 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  int v10 = 0;
  uint64_t v11 = *(void *)(sub_1A8D596F0() - 8);
  uint64_t v12 = v11;
  unsigned int v13 = *(_DWORD *)(v11 + 84);
  unsigned int v14 = v13 - 1;
  if (!v13) {
    unsigned int v14 = 0;
  }
  if (v14 <= v9) {
    unsigned int v15 = v9;
  }
  else {
    unsigned int v15 = v14;
  }
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v17 = *(void *)(v11 + 64);
  if (v13 <= v15) {
    unsigned int v18 = v15;
  }
  else {
    unsigned int v18 = *(_DWORD *)(v11 + 84);
  }
  if (v18 <= 0x7FFFFFFE) {
    unsigned int v18 = 2147483646;
  }
  uint64_t v19 = *(void *)(v8 + 64) + v16;
  if (v13) {
    uint64_t v20 = v17;
  }
  else {
    uint64_t v20 = v17 + 1;
  }
  uint64_t v21 = v20 + v16;
  uint64_t v22 = v17 + 7;
  unint64_t v23 = ((((v22 + ((v21 + (v19 & ~v16)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v18 < a3)
  {
    if (((((v22 + ((v21 + (v19 & ~v16)) & ~v16)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v24 = a3 - v18 + 1;
    }
    else {
      unsigned int v24 = 2;
    }
    if (v24 >= 0x10000) {
      int v25 = 4;
    }
    else {
      int v25 = 2;
    }
    if (v24 < 0x100) {
      int v25 = 1;
    }
    if (v24 >= 2) {
      int v10 = v25;
    }
    else {
      int v10 = 0;
    }
  }
  if (a2 <= v18)
  {
    uint64_t v28 = ~v16;
    switch(v10)
    {
      case 1:
        *((unsigned char *)a1 + v23) = 0;
        if (a2) {
          goto LABEL_41;
        }
        return;
      case 2:
        *(_WORD *)((char *)a1 + v23) = 0;
        if (a2) {
          goto LABEL_41;
        }
        return;
      case 3:
LABEL_58:
        __break(1u);
        return;
      case 4:
        *(_DWORD *)((char *)a1 + v23) = 0;
        goto LABEL_40;
      default:
LABEL_40:
        if (!a2) {
          return;
        }
LABEL_41:
        if (v9 == v18)
        {
          uint64_t v29 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v34 + 56);
          v29(a1, a2, v9, v7);
        }
        else
        {
          unint64_t v30 = ((unint64_t)a1 + v19) & v28;
          if (v14 == v18)
          {
            uint64_t v31 = (a2 + 1);
            unint64_t v32 = *(void (**)(unint64_t, uint64_t))(v12 + 56);
          }
          else
          {
            unint64_t v30 = (v21 + v30) & v28;
            if (v13 != v18)
            {
              uint64_t v33 = (void *)((v22 + v30) & 0xFFFFFFFFFFFFFFF8);
              if (a2 > 0x7FFFFFFE)
              {
                *uint64_t v33 = 0;
                v33[1] = 0;
                *(_DWORD *)uint64_t v33 = a2 - 0x7FFFFFFF;
              }
              else
              {
                v33[1] = a2;
              }
              return;
            }
            unint64_t v32 = *(void (**)(unint64_t, uint64_t))(v12 + 56);
            uint64_t v31 = a2;
          }
          v32(v30, v31);
        }
        break;
    }
  }
  else
  {
    if (((((v22 + ((v21 + (v19 & ~v16)) & ~v16)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v26 = a2 - v18;
    }
    else {
      int v26 = 1;
    }
    if (((((v22 + ((v21 + (v19 & ~v16)) & ~v16)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v27 = ~v18 + a2;
      bzero(a1, ((((v22 + ((v21 + (v19 & ~v16)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v27;
    }
    switch(v10)
    {
      case 1:
        *((unsigned char *)a1 + v23) = v26;
        break;
      case 2:
        *(_WORD *)((char *)a1 + v23) = v26;
        break;
      case 3:
        goto LABEL_58;
      case 4:
        *(_DWORD *)((char *)a1 + v23) = v26;
        break;
      default:
        return;
    }
  }
}

void sub_1A8C8AB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (**a6)(void, void, void))
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a6;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1A8C93B64;
  *(void *)(v11 + 24) = v10;
  _Block_copy(a6);
  swift_retain();
  id v12 = sub_1A8C8B110();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1A8C92B60;
  *(void *)(v13 + 24) = v11;
  uint64_t v42 = (void (*)())sub_1A8D11244;
  uint64_t v43 = (void *)v13;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v39 = 1107296256;
  uint64_t v40 = sub_1A8D08E98;
  os_log_type_t v41 = &block_descriptor_35;
  unsigned int v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v15 = objc_msgSend(v12, sel_remoteObjectProxyWithErrorHandler_, v14);
  _Block_release(v14);

  sub_1A8D5A010();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA8);
  if (swift_dynamicCast())
  {
    id v16 = sub_1A8C8B110();
    uint64_t v42 = sub_1A8D0EF44;
    uint64_t v43 = 0;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v39 = 1107296256;
    uint64_t v40 = sub_1A8C877CC;
    os_log_type_t v41 = &block_descriptor_38;
    uint64_t v17 = _Block_copy(&aBlock);
    objc_msgSend(v16, sel_setInterruptionHandler_, v17);
    _Block_release(v17);

    id v18 = sub_1A8C8B110();
    uint64_t v42 = sub_1A8C879B0;
    uint64_t v43 = 0;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v39 = 1107296256;
    uint64_t v40 = sub_1A8C877CC;
    os_log_type_t v41 = &block_descriptor_41;
    uint64_t v19 = _Block_copy(&aBlock);
    objc_msgSend(v18, sel_setInvalidationHandler_, v19);
    _Block_release(v19);

    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A8D59A80();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EB5EAEE0);
    uint64_t v21 = sub_1A8D59A60();
    os_log_type_t v22 = sub_1A8D59F00();
    if (os_log_type_enabled(v21, v22))
    {
      unint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v23 = 0;
      _os_log_impl(&dword_1A8C7F000, v21, v22, "sending eligibility request ...", v23, 2u);
      MEMORY[0x1AD0E6EB0](v23, -1, -1);
    }

    unsigned int v24 = (void *)sub_1A8D59BC0();
    int v25 = (void *)sub_1A8D59BC0();
    int v26 = (void *)swift_allocObject();
    v26[2] = a1;
    v26[3] = a2;
    v26[4] = a5;
    v26[5] = sub_1A8C92B60;
    v26[6] = v11;
    uint64_t v42 = (void (*)())sub_1A8C92BB4;
    uint64_t v43 = v26;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v39 = 1107296256;
    uint64_t v40 = sub_1A8C83048;
    os_log_type_t v41 = &block_descriptor_47;
    int v27 = _Block_copy(&aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    id v28 = a5;
    swift_release();
    objc_msgSend(v37, sel_getFeatureEligibilityFor_bundleID_completion_, v24, v25, v27);
    _Block_release(v27);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1A8D59A80();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EB5EAEE0);
    unint64_t v30 = sub_1A8D59A60();
    os_log_type_t v31 = sub_1A8D59EE0();
    if (os_log_type_enabled(v30, v31))
    {
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v32 = 0;
      _os_log_impl(&dword_1A8C7F000, v30, v31, "Proxy object has the wrong type", v32, 2u);
      MEMORY[0x1AD0E6EB0](v32, -1, -1);
    }

    sub_1A8C8C7B0();
    uint64_t v33 = (void *)swift_allocError();
    unsigned char *v34 = 1;
    _Block_copy(a6);
    id v35 = v33;
    uint64_t v36 = (void *)sub_1A8D59540();
    ((void (**)(void, void, void *))a6)[2](a6, 0, v36);

    _Block_release(a6);
    swift_release();
    swift_release();
  }
}

id sub_1A8C8B110()
{
  uint64_t v1 = OBJC_IVAR____TtC25CloudSubscriptionFeatures9XPCCaller____lazy_storage___connection;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures9XPCCaller____lazy_storage___connection);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures9XPCCaller____lazy_storage___connection);
  }
  else
  {
    id v4 = sub_1A8C8CD2C();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1A8C8B170(uint64_t a1, uint64_t a2, char a3, void (*a4)(void, void), uint64_t a5)
{
  id v8 = sub_1A8C8CD2C();
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1A8D59A80();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB5EAEE0);
  uint64_t v10 = sub_1A8D59A60();
  os_log_type_t v11 = sub_1A8D59F00();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v37 = a4;
    char v12 = a3;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t aBlock = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_1A8C90120(6581865, 0xE300000000000000, &aBlock);
    sub_1A8D59FE0();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v39 = (void *)sub_1A8C90120(0xD00000000000001BLL, 0x80000001A8D666E0, &aBlock);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v10, v11, "Resuming connection to %s with endpoint %s...", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v14, -1, -1);
    uint64_t v15 = v13;
    a3 = v12;
    a4 = v37;
    MEMORY[0x1AD0E6EB0](v15, -1, -1);
  }

  uint64_t v44 = sub_1A8D08E78;
  uint64_t v45 = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v41 = 1107296256;
  uint64_t v42 = (uint64_t (*)())sub_1A8C877CC;
  uint64_t v43 = &block_descriptor_198;
  id v16 = _Block_copy(&aBlock);
  objc_msgSend(v8, sel_setInterruptionHandler_, v16);
  _Block_release(v16);
  uint64_t v44 = sub_1A8C879B0;
  uint64_t v45 = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v41 = 1107296256;
  uint64_t v42 = (uint64_t (*)())sub_1A8C877CC;
  uint64_t v43 = &block_descriptor_201;
  uint64_t v17 = _Block_copy(&aBlock);
  objc_msgSend(v8, sel_setInvalidationHandler_, v17);
  _Block_release(v17);
  id v18 = sub_1A8D59A60();
  os_log_type_t v19 = sub_1A8D59F00();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_1A8C7F000, v18, v19, "Connection was resumed, connecting to proxy object.", v20, 2u);
    MEMORY[0x1AD0E6EB0](v20, -1, -1);
  }

  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a4;
  *(void *)(v21 + 24) = a5;
  uint64_t v44 = sub_1A8D10FD8;
  uint64_t v45 = (void *)v21;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v41 = 1107296256;
  uint64_t v42 = (uint64_t (*)())sub_1A8D08E98;
  uint64_t v43 = &block_descriptor_207;
  os_log_type_t v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v23 = objc_msgSend(v8, sel_remoteObjectProxyWithErrorHandler_, v22);
  _Block_release(v22);
  sub_1A8D5A010();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA8);
  if (swift_dynamicCast())
  {
    unsigned int v24 = sub_1A8D59A60();
    os_log_type_t v25 = sub_1A8D59F00();
    if (os_log_type_enabled(v24, v25))
    {
      int v26 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)int v26 = 67109120;
      LODWORD(aBlock) = a3 & 1;
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v24, v25, "sending feature request ... ignore cache? %{BOOL}d", v26, 8u);
      MEMORY[0x1AD0E6EB0](v26, -1, -1);
    }

    uint64_t v27 = sub_1A8D59BC0();
    id v28 = (void *)swift_allocObject();
    v28[2] = v38;
    v28[3] = a4;
    v28[4] = a5;
    v28[5] = v8;
    uint64_t v44 = sub_1A8C92C4C;
    uint64_t v45 = v28;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v41 = 1107296256;
    uint64_t v42 = sub_1A8C93908;
    uint64_t v43 = &block_descriptor_213;
    uint64_t v29 = _Block_copy(&aBlock);
    swift_retain();
    id v30 = v38;
    id v31 = v8;
    swift_release();
    objc_msgSend(v39, sel_requestFeatureWithId_ignoreCache_completion_, v27, a3 & 1, v29);
    _Block_release(v29);

    swift_unknownObjectRelease();
    id v8 = (id)v27;
  }
  else
  {
    unint64_t v32 = sub_1A8D59A60();
    os_log_type_t v33 = sub_1A8D59EE0();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_1A8C7F000, v32, v33, "Proxy object has the wrong type", v34, 2u);
      MEMORY[0x1AD0E6EB0](v34, -1, -1);
    }

    sub_1A8C8C7B0();
    id v35 = (void *)swift_allocError();
    *uint64_t v36 = 1;
    a4(v35, 1);
  }
}

unint64_t sub_1A8C8B7D4()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9418);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A8D5F520;
  *(void *)(inited + 32) = sub_1A8D59BF0();
  *(void *)(inited + 40) = v1;
  unint64_t v2 = sub_1A8C8B9A8();
  uint64_t v3 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v4;
  *(void *)(inited + 80) = sub_1A8D59BF0();
  *(void *)(inited + 88) = v5;
  unint64_t v6 = sub_1A8C8BAF8();
  *(void *)(inited + 120) = v3;
  *(void *)(inited + 96) = v6;
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 128) = sub_1A8D59BF0();
  *(void *)(inited + 136) = v8;
  unint64_t v9 = sub_1A8C8B89C();
  *(void *)(inited + 168) = v3;
  *(void *)(inited + 144) = v9;
  *(void *)(inited + 152) = v10;
  return sub_1A8C90A64(inited);
}

unint64_t sub_1A8C8B89C()
{
  unint64_t result = 0xD00000000000009DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000043;
      break;
    case 2:
      unint64_t result = 0xD000000000000021;
      break;
    case 3:
    case 6:
    case 0xD:
      unint64_t result = 0xD000000000000038;
      break;
    case 4:
      unint64_t result = 0xD00000000000003BLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000003BLL;
      break;
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xB:
      unint64_t result = 0xD000000000000014;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000042;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000037;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000026;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A8C8B9A8()
{
  unint64_t result = 0xD00000000000002ALL;
  switch(*v0)
  {
    case 1:
    case 4:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 2:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000032;
      break;
    case 6:
      unint64_t result = 0xD00000000000003DLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000021;
      break;
    case 8:
      unint64_t result = 0xD000000000000023;
      break;
    case 9:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 0xA:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000031;
      break;
    case 0xC:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000046;
      break;
    case 0xE:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 0xF:
      unint64_t result = 0xD00000000000004BLL;
      break;
    case 0x10:
      unint64_t result = 0xD00000000000002CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A8C8BAF8()
{
  unint64_t result = 0xD00000000000002ALL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000051;
      break;
    case 2:
      unint64_t result = 0xD000000000000033;
      break;
    case 3:
      unint64_t result = 0xD000000000000038;
      break;
    case 4:
      unint64_t result = 0xD000000000000025;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0xD000000000000031;
      break;
    case 9:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 0xA:
    case 0x10:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xC:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000040;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000046;
      break;
    case 0xF:
      unint64_t result = 0xD00000000000002ELL;
      break;
    default:
      return result;
  }
  return result;
}

Swift::Bool __swiftcall DaemonController.listener(_:shouldAcceptNewConnection:)(NSXPCListener _, NSXPCConnection shouldAcceptNewConnection)
{
  uint64_t v3 = v2;
  sub_1A8C8EB1C(0, (unint64_t *)&unk_1EB5EA8F0);
  char v6 = sub_1A8D59FA0();
  if (v6)
  {
    uint64_t v7 = (void *)sub_1A8C8E68C();
    [(objc_class *)shouldAcceptNewConnection.super.isa setExportedInterface:v7];

    [(objc_class *)shouldAcceptNewConnection.super.isa setExportedObject:*(void *)(v3 + OBJC_IVAR___DaemonController_requestHandler)];
    [(objc_class *)shouldAcceptNewConnection.super.isa resume];
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1A8D59A80();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EB5E9318);
    unint64_t v9 = _.super.isa;
    uint64_t v10 = shouldAcceptNewConnection.super.isa;
    os_log_type_t v11 = v9;
    char v12 = v10;
    uint64_t v13 = sub_1A8D59A60();
    os_log_type_t v14 = sub_1A8D59F00();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      id v16 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 138412546;
      char v20 = v6;
      uint64_t v17 = v11;
      sub_1A8D59FE0();
      *id v16 = v11;

      *(_WORD *)(v15 + 12) = 2112;
      id v18 = v12;
      char v6 = v20;
      sub_1A8D59FE0();
      v16[1] = v12;

      _os_log_impl(&dword_1A8C7F000, v13, v14, "%@: New connection established %@", (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v16, -1, -1);
      MEMORY[0x1AD0E6EB0](v15, -1, -1);
    }
    else
    {
    }
  }
  return v6 & 1;
}

uint64_t sub_1A8C8BF34()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[23];
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 80);
  v0[25] = v5;
  v0[26] = (v4 + 80) & 0xFFFFFFFFFFFFLL | 0xF8F0000000000000;
  uint64_t v6 = v5(v1, v2, v3);
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  return v7(v6);
}

uint64_t sub_1A8C8C35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_1A8C8C398(a1, a2, a3, MEMORY[0x1E4FBB1A0], a4, (uint64_t)&v6);
  if (!v4) {
    return v6;
  }
  return result;
}

uint64_t sub_1A8C8C398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v34 = a6;
  uint64_t v39 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A8D59FD0();
  uint64_t v33 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v12);
  os_log_type_t v14 = (char *)&v33 - v13;
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 32))(a3, a5);
  if (!v15) {
    goto LABEL_17;
  }
  id v16 = (void *)v15;
  uint64_t v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a5 + 64))(a3, a5);
  id v18 = objc_msgSend(v16, sel_propertiesForDataclass_, v17);

  if (!v18) {
    goto LABEL_17;
  }
  uint64_t v19 = sub_1A8D59B30();

  unint64_t v20 = sub_1A8CA2A30(v19);
  swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_17;
  }
  if (*(void *)(v20 + 16))
  {
    uint64_t v21 = v36;
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_1A8C90B9C(v35, v21);
    if (v23)
    {
      sub_1A8C901F4(*(void *)(v20 + 56) + 32 * v22, (uint64_t)&v37);
    }
    else
    {
      long long v37 = 0u;
      long long v38 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v37 = 0u;
    long long v38 = 0u;
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = v39;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EA170);
  char v25 = swift_dynamicCast();
  int v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  if ((v25 & 1) == 0)
  {
    v26(v14, 1, 1, a4);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v11);
LABEL_17:
    sub_1A8C8C7B0();
    swift_allocError();
    *unint64_t v32 = 9;
    return swift_willThrow();
  }
  v26(v14, 0, 1, a4);
  uint64_t v27 = v34;
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v34, v14, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v10, v27, a4);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    long long v29 = v37;
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v30 = HIBYTE(*((void *)&v29 + 1)) & 0xFLL;
    if ((*((void *)&v29 + 1) & 0x2000000000000000) == 0) {
      uint64_t v30 = v29 & 0xFFFFFFFFFFFFLL;
    }
    if (!v30)
    {
      sub_1A8C8C7B0();
      swift_allocError();
      *id v31 = 9;
      swift_willThrow();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v27, a4);
    }
  }
  return result;
}

id sub_1A8C8C778()
{
  id v1 = objc_msgSend(*v0, sel_aa_primaryAppleAccount);
  return v1;
}

unint64_t sub_1A8C8C7B0()
{
  unint64_t result = qword_1EB5E9340;
  if (!qword_1EB5E9340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9340);
  }
  return result;
}

uint64_t CloudFeature.description.getter()
{
  id v1 = v0;
  v28.receiver = v0;
  v28.super_class = (Class)swift_getObjectType();
  id v2 = objc_msgSendSuper2(&v28, sel_description);
  sub_1A8D59BF0();

  uint64_t v3 = (uint64_t *)&v1[OBJC_IVAR___CloudFeature_accessToken];
  swift_beginAccess();
  if (v3[1])
  {
    uint64_t v4 = *v3;
    unint64_t v5 = v3[1];
  }
  else
  {
    unint64_t v5 = 0xE300000000000000;
    uint64_t v4 = 6369134;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1A8C8CC70(8uLL, v4, v5, v6);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  os_log_type_t v14 = (uint64_t *)&v1[OBJC_IVAR___CloudFeature_limit];
  swift_beginAccess();
  if ((v14[1] & 1) == 0)
  {
    uint64_t v24 = *v14;
    sub_1A8D5A360();
  }
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_1A8D5A0C0();
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  sub_1A8D59CA0();
  swift_bridgeObjectRetain();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  sub_1A8D59CA0();
  swift_beginAccess();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  sub_1A8D59CA0();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  sub_1A8D59CA0();
  MEMORY[0x1AD0E5BA0](v7, v9, v11, v13);
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A8D59CA0();
  uint64_t v15 = &v1[OBJC_IVAR___CloudFeature_ttl];
  swift_beginAccess();
  uint64_t v16 = sub_1A8D596F0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (!v18)
  {
    MEMORY[0x1F4188790](v18, v19);
    uint64_t v21 = &v23[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(unsigned char *, char *, uint64_t))(v17 + 16))(v21, v15, v16);
    sub_1A8D596A0();
    (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v21, v16);
  }
  sub_1A8D59E50();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1A8C8CC70(unint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return MEMORY[0x1F4183BA0](a1, a2, a3, a4);
  }
  unint64_t v4 = a3;
  uint64_t v5 = a2;
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v7 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v7 = 11;
  }
  uint64_t v8 = v7 | (v6 << 16);
  a1 = sub_1A8D59C90();
  if (a2) {
    a1 = 15;
  }
  if (4 * v6 < a1 >> 14) {
    goto LABEL_14;
  }
  a2 = v8;
  a3 = v5;
  a4 = v4;
  return MEMORY[0x1F4183BA0](a1, a2, a3, a4);
}

id sub_1A8C8CD2C()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F29260]);
  id v1 = (void *)sub_1A8D59BC0();
  id v2 = objc_msgSend(v0, sel_initWithMachServiceName_options_, v1, 0);

  id v3 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_1EFF5F570);
  objc_msgSend(v2, sel_setRemoteObjectInterface_, v3);

  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A8D59A80();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EAEE0);
  id v5 = v2;
  uint64_t v6 = sub_1A8D59A60();
  os_log_type_t v7 = sub_1A8D59F00();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v14 = v10;
    *(_DWORD *)uint64_t v8 = 138412546;
    id v11 = v5;
    sub_1A8D59FE0();
    *uint64_t v9 = v5;

    *(_WORD *)(v8 + 12) = 2080;
    uint64_t v13 = sub_1A8C90120(6581865, 0xE300000000000000, &v14);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v6, v7, "Resuming connection %@ to %s...", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
  }
  else
  {
  }
  objc_msgSend(v5, sel_resume, v13, v14);
  return v5;
}

uint64_t type metadata accessor for BAARequestSigner()
{
  uint64_t result = qword_1EB5E95B0;
  if (!qword_1EB5E95B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A8C8D028(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8C8D090()
{
  uint64_t v2 = *(void *)(v0 + 416);
  id v1 = *(void **)(v0 + 424);
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  char v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  sub_1A8C8D974(v2, v0 + 16);
  uint64_t v6 = *(void *)(v0 + 16);
  *(void *)(v0 + 432) = v6;
  switch(*(unsigned char *)(v0 + 48))
  {
    case 1:
      uint64_t v9 = v1[3];
      uint64_t v8 = v1[4];
      __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 424), v9);
      uint64_t v39 = (uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v8 + 88)
                                                                                         + **(int **)(v8 + 88));
      uint64_t v13 = (void *)swift_task_alloc();
      *(void *)(v0 + 632) = v13;
      *uint64_t v13 = v0;
      v13[1] = sub_1A8CE8764;
      unint64_t v11 = 0xD000000000000019;
      uint64_t v12 = "geoClassificationInfoPath";
      goto LABEL_20;
    case 2:
      *(void *)(v0 + 664) = *(void *)(v0 + 24);
      uint64_t v14 = *(void **)(v0 + 424);
      if (v5)
      {
        uint64_t v9 = v1[3];
        uint64_t v8 = v1[4];
        __swift_project_boxed_opaque_existential_1(v14, v9);
        uint64_t v39 = (uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v8 + 88)
                                                                                           + **(int **)(v8 + 88));
        uint64_t v15 = (void *)swift_task_alloc();
        *(void *)(v0 + 672) = v15;
        void *v15 = v0;
        v15[1] = sub_1A8CE894C;
        unint64_t v11 = 0xD00000000000002DLL;
        uint64_t v12 = "acseGatewayV1DeviceAndAccountFeatureStatusKey";
        goto LABEL_20;
      }
      uint64_t v21 = v14[6];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v40 = (uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v21 + 24)
                                                                                         + **(int **)(v21 + 24));
      uint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 704) = v26;
      *uint64_t v26 = v0;
      v26[1] = sub_1A8CE8CB0;
      unint64_t v27 = "acseGatewayV1DeviceFeatureStatusKey";
      goto LABEL_16;
    case 3:
      *(void *)(v0 + 736) = *(void *)(v0 + 24);
      uint64_t v16 = *(void **)(v0 + 424);
      if (v5)
      {
        uint64_t v9 = v1[3];
        uint64_t v8 = v1[4];
        __swift_project_boxed_opaque_existential_1(v16, v9);
        uint64_t v39 = (uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v8 + 88)
                                                                                           + **(int **)(v8 + 88));
        uint64_t v17 = (void *)swift_task_alloc();
        *(void *)(v0 + 744) = v17;
        *uint64_t v17 = v0;
        v17[1] = sub_1A8CE9014;
        unint64_t v11 = 0xD00000000000002DLL;
        uint64_t v12 = "acseGatewayV1DeviceAndAccountFeatureSignupKey";
        goto LABEL_20;
      }
      uint64_t v21 = v16[6];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v40 = (uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v21 + 24)
                                                                                         + **(int **)(v21 + 24));
      objc_super v28 = (void *)swift_task_alloc();
      *(void *)(v0 + 776) = v28;
      *objc_super v28 = v0;
      v28[1] = sub_1A8CE9378;
      unint64_t v27 = "acseGatewayV1DeviceFeatureSignupKey";
LABEL_16:
      unint64_t v29 = (unint64_t)(v27 - 32) | 0x8000000000000000;
      unint64_t v30 = 0xD000000000000023;
      goto LABEL_25;
    case 4:
      uint64_t v18 = *(void *)(v0 + 24) | *(void *)(v0 + 32) | *(void *)(v0 + 40);
      if (v18 | v6)
      {
        uint64_t v19 = *(void **)(v0 + 424);
        if (v6 != 1 || v18)
        {
          uint64_t v9 = v1[3];
          uint64_t v8 = v1[4];
          __swift_project_boxed_opaque_existential_1(v19, v9);
          uint64_t v39 = (uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v8 + 88)
                                                                                             + **(int **)(v8 + 88));
          uint64_t v33 = (void *)swift_task_alloc();
          *(void *)(v0 + 440) = v33;
          *uint64_t v33 = v0;
          v33[1] = sub_1A8C820BC;
          unint64_t v11 = 0xD000000000000012;
          uint64_t v12 = "displaySectionPath";
        }
        else
        {
          uint64_t v9 = v1[3];
          uint64_t v8 = v1[4];
          __swift_project_boxed_opaque_existential_1(v19, v9);
          uint64_t v39 = (uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v8 + 88)
                                                                                             + **(int **)(v8 + 88));
          uint64_t v20 = (void *)swift_task_alloc();
          *(void *)(v0 + 584) = v20;
          *uint64_t v20 = v0;
          v20[1] = sub_1A8CE84F8;
          unint64_t v11 = 0xD000000000000016;
          uint64_t v12 = "subscriptionStatusPath";
        }
        goto LABEL_20;
      }
      id v31 = *(void **)(v0 + 424);
      if (v5)
      {
        uint64_t v9 = v1[3];
        uint64_t v8 = v1[4];
        __swift_project_boxed_opaque_existential_1(v31, v9);
        uint64_t v39 = (uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v8 + 88)
                                                                                           + **(int **)(v8 + 88));
        unint64_t v32 = (void *)swift_task_alloc();
        *(void *)(v0 + 520) = v32;
        *unint64_t v32 = v0;
        v32[1] = sub_1A8CE7F58;
        unint64_t v11 = 0xD000000000000028;
        uint64_t v12 = "acseGatewayV3DeviceAndAccountAllFeatures";
        goto LABEL_20;
      }
      uint64_t v21 = v31[6];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v40 = (uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v21 + 24)
                                                                                         + **(int **)(v21 + 24));
      long long v37 = (void *)swift_task_alloc();
      *(void *)(v0 + 552) = v37;
      *long long v37 = v0;
      v37[1] = sub_1A8CE8228;
      unint64_t v24 = 0xD00000000000001ELL;
      unint64_t v25 = "acseGatewayV3DeviceAllFeatures";
      goto LABEL_24;
    default:
      *(_OWORD *)(v0 + 56) = *(_OWORD *)(v0 + 16);
      os_log_type_t v7 = *(void **)(v0 + 424);
      if (v5)
      {
        uint64_t v9 = v1[3];
        uint64_t v8 = v1[4];
        __swift_project_boxed_opaque_existential_1(v7, v9);
        uint64_t v39 = (uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v8 + 88)
                                                                                           + **(int **)(v8 + 88));
        uint64_t v10 = (void *)swift_task_alloc();
        *(void *)(v0 + 456) = v10;
        *uint64_t v10 = v0;
        v10[1] = sub_1A8CE7890;
        unint64_t v11 = 0xD000000000000024;
        uint64_t v12 = "acseGatewayV3DeviceAndAccountFeature";
LABEL_20:
        unint64_t v29 = (unint64_t)(v12 - 32) | 0x8000000000000000;
        unint64_t v30 = v11;
        uint64_t v34 = v9;
        uint64_t v35 = v8;
        uint64_t v36 = v39;
      }
      else
      {
        uint64_t v21 = v7[6];
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v40 = (uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v21 + 24)
                                                                                           + **(int **)(v21 + 24));
        char v23 = (void *)swift_task_alloc();
        *(void *)(v0 + 488) = v23;
        *char v23 = v0;
        v23[1] = sub_1A8CE7BE4;
        unint64_t v24 = 0xD00000000000001ALL;
        unint64_t v25 = "acseGatewayV3DeviceFeature";
LABEL_24:
        unint64_t v29 = (unint64_t)(v25 - 32) | 0x8000000000000000;
        unint64_t v30 = v24;
LABEL_25:
        uint64_t v34 = ObjectType;
        uint64_t v35 = v21;
        uint64_t v36 = v40;
      }
      return v36(v30, v29, v34, v35);
  }
}

uint64_t sub_1A8C8D974(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL sub_1A8C8D9D0()
{
  id v1 = objc_msgSend(*v0, sel_aa_primaryAppleAccount);
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

uint64_t sub_1A8C8DA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t RefreshCacheBox = type metadata accessor for NextRefreshCacheBox();
  uint64_t v8 = *(void *)(RefreshCacheBox - 8);
  MEMORY[0x1F4188790](RefreshCacheBox, v9);
  unint64_t v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9610);
  uint64_t v14 = MEMORY[0x1F4188790](v12 - 8, v13);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v14, v17);
  uint64_t v20 = (char *)v38 - v19;
  MEMORY[0x1F4188790](v18, v21);
  char v23 = (char *)v38 - v22;
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v42 = v3;
  sub_1A8C8E08C(a1, a2, (uint64_t)v38 - v22);
  sub_1A8CB249C((uint64_t)v23, (uint64_t)v20, &qword_1EB5E9610);
  unint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v24(v20, 1, RefreshCacheBox) == 1)
  {
    sub_1A8C8DE74((uint64_t)v20, &qword_1EB5E9610);
  }
  else
  {
    uint64_t v39 = a3;
    sub_1A8D22BCC((uint64_t)v20, (uint64_t)v11);
    uint64_t v25 = sub_1A8D596F0();
    v38[1] = v38;
    uint64_t v26 = *(void *)(v25 - 8);
    MEMORY[0x1F4188790](v25, v27);
    unint64_t v29 = (char *)v38 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A8D596D0();
    char v30 = sub_1A8D59660();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v25);
    if (v30)
    {
      sub_1A8CB249C(v42 + 16, (uint64_t)v43, &qword_1EB5EAD60);
      uint64_t v31 = v44;
      if (v44)
      {
        uint64_t v32 = v45;
        __swift_project_boxed_opaque_existential_1(v43, v44);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 16))(v40, v41, v31, v32);
        sub_1A8D22B70((uint64_t)v11);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
      }
      else
      {
        sub_1A8D22B70((uint64_t)v11);
        sub_1A8C8DE74((uint64_t)v43, &qword_1EB5EAD60);
      }
    }
    else
    {
      sub_1A8D22B70((uint64_t)v11);
    }
    a3 = v39;
  }
  sub_1A8C8E024((uint64_t)v23, (uint64_t)v16);
  if (v24(v16, 1, RefreshCacheBox) == 1)
  {
    sub_1A8C8DE74((uint64_t)v16, &qword_1EB5E9610);
    uint64_t v33 = sub_1A8D596F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a3, 1, 1, v33);
  }
  else
  {
    uint64_t v35 = a3;
    uint64_t v36 = sub_1A8D596F0();
    uint64_t v37 = *(void *)(v36 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(v35, v16, v36);
    sub_1A8D22B70((uint64_t)v16);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v35, 0, 1, v36);
  }
}

uint64_t sub_1A8C8DE74(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A8C8DED0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = sub_1A8D596F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v4 + a1 + v7;
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8 & ~v7, 1, v5);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v9) {
    v10(v8 & ~v7, v5);
  }
  uint64_t v11 = (v8 | v7) + *(void *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v11;
  }
  v10(v11 & ~v7, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A8C8E024(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8C8E08C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A8CB249C(v3 + 16, (uint64_t)v16, &qword_1EB5EAD60);
  uint64_t v8 = v17;
  if (!v17)
  {
    sub_1A8C8DE74((uint64_t)v16, &qword_1EB5EAD60);
    goto LABEL_6;
  }
  uint64_t v9 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 32))(a1, a2, v8, v9);
  unint64_t v12 = v11;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  if (v12 >> 60 == 15)
  {
LABEL_6:
    uint64_t RefreshCacheBox = type metadata accessor for NextRefreshCacheBox();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(RefreshCacheBox - 8) + 56))(a3, 1, 1, RefreshCacheBox);
  }
  sub_1A8D59500();
  swift_allocObject();
  sub_1A8D594F0();
  uint64_t v13 = type metadata accessor for NextRefreshCacheBox();
  sub_1A8D22C30(&qword_1E979F6C8);
  sub_1A8D594E0();
  if (v4)
  {
    swift_release();
    return sub_1A8C93C84(v10, v12);
  }
  else
  {
    sub_1A8C93C84(v10, v12);
    swift_release();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a3, 0, 1, v13);
  }
}

uint64_t sub_1A8C8E26C()
{
  id v1 = *v0;
  id v2 = (void *)sub_1A8D59BC0();
  id v3 = objc_msgSend(v1, sel_dataForKey_, v2);

  if (!v3) {
    return 0;
  }
  uint64_t v4 = sub_1A8D595D0();

  return v4;
}

uint64_t type metadata accessor for NextRefreshCacheBox()
{
  uint64_t result = qword_1EB5E9600;
  if (!qword_1EB5E9600) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_1A8C8E338()
{
  id result = objc_msgSend(self, sel_defaultStore);
  if (!result)
  {
    if (qword_1EB5EAD00 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1A8D59A80();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EB5EAC50);
    id v2 = sub_1A8D59A60();
    os_log_type_t v3 = sub_1A8D59EE0();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1A8C7F000, v2, v3, "failed to get default account store, creating a new one", v4, 2u);
      MEMORY[0x1AD0E6EB0](v4, -1, -1);
    }

    id v5 = objc_allocWithZone(MEMORY[0x1E4F179D0]);
    return objc_msgSend(v5, sel_init);
  }
  return result;
}

uint64_t type metadata accessor for Config()
{
  return self;
}

uint64_t sub_1A8C8E488()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v1 = (void *)sub_1A8D59BC0();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    *((void *)&v9 + 1) = sub_1A8C8EB1C(0, (unint64_t *)&qword_1EB5EACA0);
    uint64_t v10 = &off_1EFF56B50;
    *(void *)&long long v8 = v2;
  }
  else
  {
    uint64_t v10 = 0;
    long long v8 = 0u;
    long long v9 = 0u;
  }
  type metadata accessor for SystemProperties();
  swift_initStaticObject();
  os_log_type_t v3 = sub_1A8C8E620();
  uint64_t v5 = v4;
  type metadata accessor for ConfigCache();
  uint64_t v6 = swift_allocObject();
  sub_1A8C8E5B8((uint64_t)&v8, v6 + 16);
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v5;
  return v6;
}

uint64_t type metadata accessor for SystemProperties()
{
  return self;
}

uint64_t sub_1A8C8E5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAD60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_1A8C8E620()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(char **)(v0 + 16);
  }
  else
  {
    uint64_t v1 = sub_1A8C9A758();
    *(void *)(v0 + 16) = v1;
    *(void *)(v0 + 24) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A8C8E68C()
{
  objc_msgSend(self, sel_interfaceWithProtocol_, &unk_1EFF5F570);
  sub_1A8C8EB1C(0, (unint64_t *)&qword_1EB5EACB0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E93F0);
  uint64_t v0 = sub_1A8D5A3E0();
  id v1 = objc_msgSend(self, sel_setWithObject_, v0);
  swift_unknownObjectRelease();
  sub_1A8D59E70();

  uint64_t result = sub_1A8D5A1B0();
  __break(1u);
  return result;
}

uint64_t sub_1A8C8EB1C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for GeoClassificationInfo()
{
  uint64_t result = qword_1EB5EA148;
  if (!qword_1EB5EA148) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for ConfigCache()
{
  return self;
}

uint64_t sub_1A8C8EBC8()
{
  uint64_t v170 = v0;
  v169[1] = *MEMORY[0x1E4F143B8];
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  id v1 = (void **)(v0 + 280);
  uint64_t v2 = sub_1A8D59A80();
  *(void *)(v0 + 416) = __swift_project_value_buffer(v2, (uint64_t)qword_1EB5E9318);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v3 = sub_1A8D59A60();
  os_log_type_t v4 = sub_1A8D59F00();
  BOOL v5 = os_log_type_enabled(v3, v4);
  unint64_t v6 = *(void *)(v0 + 368);
  if (v5)
  {
    uint64_t v149 = *(void *)(v0 + 360);
    os_log_type_t type = v4;
    uint64_t v7 = *(void *)(v0 + 352);
    uint64_t v146 = *(void *)(v0 + 344);
    uint64_t v8 = *(void *)(v0 + 328);
    uint64_t v9 = *(void *)(v0 + 336);
    uint64_t v10 = swift_slowAlloc();
    os_log_t log = (os_log_t)swift_slowAlloc();
    v169[0] = (uint64_t)log;
    *(_DWORD *)uint64_t v10 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v11 = v9;
    id v1 = (void **)(v0 + 280);
    uint64_t v12 = MEMORY[0x1AD0E5BA0](v8, v11, v146, v7);
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 320) = sub_1A8C90120(v12, v14, v169);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 272) = sub_1A8C90120(v149, v6, v169);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v3, type, "[%{public}s] starting fetch for %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](log, -1, -1);
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  char v15 = *(unsigned char *)(v0 + 492);
  uint64_t v16 = (void *)(*(void *)(v0 + 376)
                 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore);
  uint64_t v17 = v16[3];
  uint64_t v18 = v16[4];
  __swift_project_boxed_opaque_existential_1(v16, v17);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
  unint64_t v21 = v20;
  *(void *)(v0 + 424) = v19;
  *(void *)(v0 + 432) = v20;
  if ((v15 & 1) == 0)
  {
    uint64_t v22 = (uint64_t *)v19;
    if (qword_1EB5EAB78 != -1) {
      swift_once();
    }
    id v23 = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(*(void *)(v0 + 360), *(void *)(v0 + 368), v22, v21, 0, 0);
    if (v23)
    {
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      id v25 = v24;
      uint64_t v26 = sub_1A8D59A60();
      os_log_type_t v27 = sub_1A8D59F00();
      BOOL v28 = os_log_type_enabled(v26, v27);
      uint64_t v29 = *(void *)(v0 + 352);
      if (v28)
      {
        uint64_t v30 = *(void *)(v0 + 336);
        uint64_t v150 = *(void *)(v0 + 344);
        uint64_t v31 = *(void *)(v0 + 328);
        uint64_t v32 = swift_slowAlloc();
        os_log_t loga = (os_log_t)swift_slowAlloc();
        uint64_t typea = swift_slowAlloc();
        v169[0] = typea;
        *(_DWORD *)uint64_t v32 = 136446466;
        swift_bridgeObjectRetain();
        uint64_t v33 = MEMORY[0x1AD0E5BA0](v31, v30, v150, v29);
        unint64_t v35 = v34;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 304) = sub_1A8C90120(v33, v35, v169);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 12) = 2114;
        *(void *)(v0 + 312) = v25;
        id v36 = v25;
        sub_1A8D59FE0();
        loga->isa = (Class)v24;

        _os_log_impl(&dword_1A8C7F000, v26, v27, "[%{public}s] Returning cached feature: %{public}@", (uint8_t *)v32, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](loga, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](typea, -1, -1);
        MEMORY[0x1AD0E6EB0](v32, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v73 = *(void (**)(void *, void))(v0 + 384);
      id v74 = v25;
      v73(v24, 0);

      goto LABEL_29;
    }
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v37 = sub_1A8D59A60();
  os_log_type_t v38 = sub_1A8D59F00();
  BOOL v39 = os_log_type_enabled(v37, v38);
  unint64_t v40 = *(void *)(v0 + 368);
  if (v39)
  {
    uint64_t v41 = *(void *)(v0 + 352);
    uint64_t v151 = *(void *)(v0 + 360);
    uint64_t v43 = *(void *)(v0 + 336);
    uint64_t v42 = *(void *)(v0 + 344);
    uint64_t v44 = *(void *)(v0 + 328);
    v166 = v1;
    uint64_t v45 = swift_slowAlloc();
    os_log_t logb = (os_log_t)swift_slowAlloc();
    v169[0] = (uint64_t)logb;
    *(_DWORD *)uint64_t v45 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v46 = MEMORY[0x1AD0E5BA0](v44, v43, v42, v41);
    unint64_t v48 = v47;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 288) = sub_1A8C90120(v46, v48, v169);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 296) = sub_1A8C90120(v151, v40, v169);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v37, v38, "[%{public}s] No valid cache value for %{public}s", (uint8_t *)v45, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](logb, -1, -1);
    uint64_t v49 = v45;
    id v1 = v166;
    MEMORY[0x1AD0E6EB0](v49, -1, -1);

    if (MKBDeviceUnlockedSinceBoot()) {
      goto LABEL_14;
    }
LABEL_21:
    sub_1A8C8C7B0();
    uint64_t v57 = (void *)swift_allocError();
    *id v58 = 15;
    swift_willThrow();
    *(void *)(v0 + 264) = v57;
    id v59 = v57;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
    if (swift_dynamicCast())
    {
      uint64_t v60 = *(void *)(v0 + 408);
      if (swift_getEnumCaseMultiPayload() == 2)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v61 = sub_1A8D59A60();
        os_log_type_t v62 = sub_1A8D59F00();
        BOOL v63 = os_log_type_enabled(v61, v62);
        unint64_t v64 = *(void *)(v0 + 368);
        if (v63)
        {
          uint64_t v65 = *(void *)(v0 + 352);
          uint64_t typeb = *(void *)(v0 + 360);
          uint64_t v66 = *(void *)(v0 + 336);
          uint64_t v67 = *(void *)(v0 + 344);
          uint64_t v68 = *(void *)(v0 + 328);
          uint64_t v69 = swift_slowAlloc();
          uint64_t v163 = swift_slowAlloc();
          v169[0] = v163;
          *(_DWORD *)uint64_t v69 = 136446466;
          swift_bridgeObjectRetain();
          uint64_t v70 = MEMORY[0x1AD0E5BA0](v68, v66, v67, v65);
          unint64_t v72 = v71;
          swift_bridgeObjectRelease();
          *(void *)(v0 + 216) = sub_1A8C90120(v70, v72, v169);
          sub_1A8D59FE0();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v69 + 12) = 2082;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 224) = sub_1A8C90120(typeb, v64, v169);
          sub_1A8D59FE0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1A8C7F000, v61, v62, "[%{public}s] Feature %{public}s received 204 network response", (uint8_t *)v69, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1AD0E6EB0](v163, -1, -1);
          MEMORY[0x1AD0E6EB0](v69, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        v129 = *(void (**)(id, void))(v0 + 384);
        uint64_t v131 = *(void *)(v0 + 360);
        uint64_t v130 = *(void *)(v0 + 368);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
        uint64_t v132 = swift_task_alloc();
        uint64_t v133 = sub_1A8D596F0();
        uint64_t v134 = *(void *)(v133 - 8);
        uint64_t v135 = swift_task_alloc();
        sub_1A8D596E0();
        sub_1A8D59630();
        (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v135, v133);
        swift_task_dealloc();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v134 + 56))(v132, 0, 1, v133);
        uint64_t v136 = swift_task_alloc();
        sub_1A8C8D028(v132, v136);
        id v137 = objc_allocWithZone((Class)type metadata accessor for CloudFeature());
        swift_bridgeObjectRetain();
        id v138 = sub_1A8CB79B4(v131, v130, 0, 0, 1, 0, 0, v136);
        swift_task_dealloc();
        sub_1A8C8DE74(v132, &qword_1EB5EACF0);
        swift_task_dealloc();
        v129(v138, 0);

        v139 = *(void **)(v0 + 264);
        goto LABEL_57;
      }
      sub_1A8CCF62C(v60);
    }

    sub_1A8C8EB1C(0, (unint64_t *)&unk_1EB5EA8F0);
    swift_getErrorValue();
    uint64_t v78 = *(void *)(v0 + 72);
    uint64_t v79 = *(void *)(v0 + 80);
    id v80 = v57;
    id v81 = sub_1A8C90F38(v78, v79);
    id v82 = sub_1A8CA6B90(13);
    char v83 = sub_1A8D59FA0();

    if (v83)
    {
      if (qword_1EB5EAB78 != -1) {
        swift_once();
      }
      id v84 = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(*(void *)(v0 + 360), *(void *)(v0 + 368), *(uint64_t **)(v0 + 424), *(void *)(v0 + 432), 1, 1);
      swift_bridgeObjectRelease();
      if (v84)
      {
        swift_bridgeObjectRetain_n();
        id v85 = v84;
        v86 = sub_1A8D59A60();
        os_log_type_t v87 = sub_1A8D59EE0();
        BOOL v88 = os_log_type_enabled(v86, v87);
        uint64_t v89 = *(void *)(v0 + 352);
        if (v88)
        {
          uint64_t v167 = *(void *)(v0 + 344);
          uint64_t v90 = *(void *)(v0 + 328);
          uint64_t v147 = *(void *)(v0 + 336);
          os_log_type_t typec = v87;
          uint64_t v91 = swift_slowAlloc();
          v152 = (void *)swift_slowAlloc();
          uint64_t v164 = swift_slowAlloc();
          v169[0] = v164;
          *(_DWORD *)uint64_t v91 = 136446466;
          swift_bridgeObjectRetain();
          uint64_t v92 = MEMORY[0x1AD0E5BA0](v90, v147, v167, v89);
          unint64_t v94 = v93;
          swift_bridgeObjectRelease();
          *(void *)(v0 + 200) = sub_1A8C90120(v92, v94, v169);
          sub_1A8D59FE0();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v91 + 12) = 2114;
          *(void *)(v0 + 208) = v85;
          id v95 = v85;
          sub_1A8D59FE0();
          void *v152 = v84;

          _os_log_impl(&dword_1A8C7F000, v86, typec, "[%{public}s] FeatureRequest failed because we're missing auth header, falling back to cached feature %{public}@", (uint8_t *)v91, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
          swift_arrayDestroy();
          MEMORY[0x1AD0E6EB0](v152, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x1AD0E6EB0](v164, -1, -1);
          MEMORY[0x1AD0E6EB0](v91, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v140 = *(void (**)(id, void))(v0 + 384);
        id v141 = v85;
        v140(v84, 0);

        goto LABEL_58;
      }
      v125 = *(void (**)(void, id))(v0 + 384);
      swift_getErrorValue();
      uint64_t v126 = *(void *)(v0 + 48);
      uint64_t v127 = *(void *)(v0 + 56);
    }
    else
    {
      v96 = (unsigned char *)(v0 + 492);
      swift_bridgeObjectRetain();
      id v97 = v57;
      swift_bridgeObjectRetain();
      id v98 = v57;
      v99 = sub_1A8D59A60();
      os_log_type_t v100 = sub_1A8D59EE0();
      BOOL v101 = os_log_type_enabled(v99, v100);
      uint64_t v102 = *(void *)(v0 + 352);
      if (v101)
      {
        os_log_type_t typed = v100;
        uint64_t v104 = *(void *)(v0 + 336);
        uint64_t v103 = *(void *)(v0 + 344);
        uint64_t v105 = *(void *)(v0 + 328);
        uint64_t v106 = swift_slowAlloc();
        os_log_t logc = (os_log_t)swift_slowAlloc();
        v169[0] = (uint64_t)logc;
        *(_DWORD *)uint64_t v106 = 136446466;
        swift_bridgeObjectRetain();
        uint64_t v107 = MEMORY[0x1AD0E5BA0](v105, v104, v103, v102);
        unint64_t v109 = v108;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 152) = sub_1A8C90120(v107, v109, v169);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        v96 = (unsigned char *)(v0 + 492);
        swift_bridgeObjectRelease();
        *(_WORD *)(v106 + 12) = 2082;
        swift_getErrorValue();
        uint64_t v110 = sub_1A8D5A440();
        *(void *)(v0 + 176) = sub_1A8C90120(v110, v111, v169);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1A8C7F000, v99, typed, "[%{public}s] FeatureRequest failed with error: %{public}s", (uint8_t *)v106, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](logc, -1, -1);
        MEMORY[0x1AD0E6EB0](v106, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      if (*v96)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1EB5EAB78 != -1) {
          swift_once();
        }
        id v112 = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(*(void *)(v0 + 360), *(void *)(v0 + 368), *(uint64_t **)(v0 + 424), *(void *)(v0 + 432), 1, 1);
        swift_bridgeObjectRelease();
        if (v112)
        {
          swift_bridgeObjectRetain_n();
          id v113 = v112;
          v114 = sub_1A8D59A60();
          os_log_type_t v115 = sub_1A8D59F00();
          BOOL v116 = os_log_type_enabled(v114, v115);
          uint64_t v117 = *(void *)(v0 + 352);
          if (v116)
          {
            uint64_t v118 = *(void *)(v0 + 344);
            uint64_t v148 = *(void *)(v0 + 336);
            uint64_t v119 = *(void *)(v0 + 328);
            os_log_type_t v165 = v115;
            uint64_t v120 = swift_slowAlloc();
            v153 = (void *)swift_slowAlloc();
            uint64_t v168 = swift_slowAlloc();
            v169[0] = v168;
            *(_DWORD *)uint64_t v120 = 136446466;
            swift_bridgeObjectRetain();
            uint64_t v121 = MEMORY[0x1AD0E5BA0](v119, v148, v118, v117);
            unint64_t v123 = v122;
            swift_bridgeObjectRelease();
            *(void *)(v0 + 136) = sub_1A8C90120(v121, v123, v169);
            sub_1A8D59FE0();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v120 + 12) = 2114;
            *(void *)(v0 + 144) = v113;
            id v124 = v113;
            sub_1A8D59FE0();
            void *v153 = v112;

            _os_log_impl(&dword_1A8C7F000, v114, v165, "[%{public}s] Falling back to cached feature: %{public}@", (uint8_t *)v120, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
            swift_arrayDestroy();
            MEMORY[0x1AD0E6EB0](v153, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x1AD0E6EB0](v168, -1, -1);
            MEMORY[0x1AD0E6EB0](v120, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          v142 = *(void (**)(id, void))(v0 + 384);
          id v143 = v113;
          v142(v112, 0);

          goto LABEL_56;
        }
      }
      v125 = *(void (**)(void, id))(v0 + 384);
      swift_getErrorValue();
      uint64_t v126 = *(void *)(v0 + 120);
      uint64_t v127 = *(void *)(v0 + 128);
    }
    id v128 = sub_1A8C90F38(v126, v127);
    v125(0, v128);

LABEL_56:
    v139 = v57;
LABEL_57:

    goto LABEL_58;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (!MKBDeviceUnlockedSinceBoot()) {
    goto LABEL_21;
  }
LABEL_14:
  if (sub_1A8D59CC0())
  {
    sub_1A8C8EB1C(0, (unint64_t *)&qword_1EB5E93A0);
    uint64_t v50 = (void *)sub_1A8D59F30();
    id v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F23A80]), sel_initWithQueue_, v50);

    *id v1 = 0;
    id v52 = objc_msgSend(v51, sel_getStewieSupport_, v1);

    uint64_t v53 = *v1;
    if (v52)
    {
      id v54 = v53;
      unsigned __int8 v55 = objc_msgSend(v52, sel_hwSupport);

      if (v55) {
        goto LABEL_17;
      }
    }
    else
    {
      id v75 = v53;
      v76 = (void *)sub_1A8D59550();

      swift_willThrow();
    }
    v77 = *(void (**)(void, id))(v0 + 384);
    swift_bridgeObjectRelease();
    id v74 = sub_1A8CA6B90(12);
    v77(0, v74);
LABEL_29:

LABEL_58:
    swift_task_dealloc();
    v144 = *(uint64_t (**)(void))(v0 + 8);
    return v144();
  }
LABEL_17:
  uint64_t v56 = *(void *)(*(void *)(v0 + 376)
                  + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_taskLimiters);
  *(void *)(v0 + 440) = v56;
  return MEMORY[0x1F4188298](sub_1A8CC21E8, v56, 0);
}

uint64_t sub_1A8C90120(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1A8C90250(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1A8C901F4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1A8C901F4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1A8C901F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1A8C90250(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1A8D59FF0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1A8C9040C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1A8D5A130();
  if (!v8)
  {
    sub_1A8D5A1A0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1A8D5A200();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1A8C9040C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1A8C904A4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A8C9B0AC(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1A8C9B0AC(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1A8C904A4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1A8C9061C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1A8D5A0D0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1A8D5A1A0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1A8D59CB0();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1A8D5A200();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1A8D5A1A0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_1A8C9061C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1A8C90684(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NetworkRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8C906E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NetworkRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for NetworkRequest()
{
  uint64_t result = qword_1EB5E95A0;
  if (!qword_1EB5E95A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A8C90790(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  __swift_destroy_boxed_opaque_existential_0(a1 + 56);
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1A8D596F0();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_1A8C90870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 16;
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  v10(a1 + 16, v7, v9);
  long long v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 56, a2 + 56);
  uint64_t v12 = *(int *)(a3 + 28);
  unint64_t v13 = (void *)(a1 + v12);
  unint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_1A8D596F0();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for AvailabilityModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

unint64_t sub_1A8C90A64(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9408);
  uint64_t v2 = sub_1A8D5A1F0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A8CB249C(v6, (uint64_t)&v15, (uint64_t *)&unk_1EB5E9370);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1A8C90B9C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v11 = (uint64_t *)(v3[6] + 16 * result);
    *long long v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1A8C90CF8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A8C90B9C(uint64_t a1, uint64_t a2)
{
  sub_1A8D5A4A0();
  sub_1A8D59C80();
  uint64_t v4 = sub_1A8D5A4D0();
  return sub_1A8C90C14(a1, a2, v4);
}

unint64_t sub_1A8C90C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1A8D5A390() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        BOOL v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1A8D5A390() & 1) == 0);
    }
  }
  return v6;
}

_OWORD *sub_1A8C90CF8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

id sub_1A8C90F38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, a1);
  uint64_t v7 = sub_1A8D5A370();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, a1);
  }
  else
  {
    uint64_t v8 = (void *)swift_allocError();
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v3 + 32))(v9, v5, a1);
  }
  char v10 = (void *)sub_1A8D59540();

  id v11 = objc_msgSend(v10, sel_domain);
  sub_1A8D59BF0();

  id v12 = objc_msgSend(v10, sel_code);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9418);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A8D5C9F0;
  *(void *)(inited + 32) = sub_1A8D59BF0();
  *(void *)(inited + 40) = v14;
  id v15 = objc_msgSend(v10, sel_localizedDescription);
  uint64_t v16 = sub_1A8D59BF0();
  uint64_t v18 = v17;

  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v16;
  *(void *)(inited + 56) = v18;
  sub_1A8C90A64(inited);
  id v19 = objc_allocWithZone(MEMORY[0x1E4F28C50]);
  unint64_t v20 = (void *)sub_1A8D59BC0();
  swift_bridgeObjectRelease();
  unint64_t v21 = (void *)sub_1A8D59B20();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v19, sel_initWithDomain_code_userInfo_, v20, v12, v21);

  return v22;
}

uint64_t sub_1A8C911CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = sub_1A8D596F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v27 = ~v9;
  uint64_t v28 = a1;
  uint64_t v26 = v6 + v9 + a1;
  char v10 = (void *)(v26 & ~v9);
  uint64_t v11 = v6 + v9 + a2;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v11 & ~v9, 1, v7))
  {
    int v12 = *(_DWORD *)(v8 + 84);
    uint64_t v13 = *(void *)(v8 + 64);
    if (v12) {
      size_t v14 = *(void *)(v8 + 64);
    }
    else {
      size_t v14 = v13 + 1;
    }
    memcpy(v10, (const void *)(v11 & ~v9), v14);
    id v15 = *(void (**)(void *, uint64_t, uint64_t))(v8 + 16);
  }
  else
  {
    id v15 = *(void (**)(void *, uint64_t, uint64_t))(v8 + 16);
    v15(v10, v11 & ~v9, v7);
    uint64_t v17 = *(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v16 = v8 + 56;
    v17(v10, 0, 1, v7);
    int v12 = *(_DWORD *)(v16 + 28);
    uint64_t v13 = *(void *)(v16 + 8);
  }
  if (v12) {
    uint64_t v18 = v13;
  }
  else {
    uint64_t v18 = v13 + 1;
  }
  id v19 = (void *)(((v26 | v9) + v18) & v27);
  uint64_t v20 = ((v11 | v9) + v18) & v27;
  v15(v19, v20, v7);
  unint64_t v21 = (void *)(((unint64_t)v19 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  id v22 = (void *)((v13 + 7 + v20) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v21 = *v22;
  v21[1] = v22[1];
  id v23 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v24 = (void *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  *id v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v28;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1A8C91500(uint64_t a1, unint64_t a2)
{
  if (qword_1EB5EAD00 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A8D59A80();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EAC50);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59ED0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(void *)&v10[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A8C90120(a1, a2, (uint64_t *)v10);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v5, v6, "TaskLimiter: cleaning up task for identifier %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v11 = 0;
  memset(v10, 0, sizeof(v10));
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1A8C916F8((uint64_t)v10, a1, a2);
  return swift_endAccess();
}

uint64_t sub_1A8C916F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_1A8C91C90((long long *)a1, (uint64_t)v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1A8C917D0(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A8C8DE74(a1, &qword_1EB5EAD10);
    sub_1A8C91998(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_1A8C8DE74((uint64_t)v9, &qword_1EB5EAD10);
  }
}

uint64_t sub_1A8C917D0(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v12 = sub_1A8C90B9C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1A8CF2990();
      goto LABEL_7;
    }
    sub_1A8C833D8(v15, a4 & 1);
    unint64_t v21 = sub_1A8C90B9C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1A8D5A400();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 40 * v12;
    __swift_destroy_boxed_opaque_existential_0(v19);
    return sub_1A8C91C90(a1, v19);
  }
LABEL_13:
  sub_1A8C91928(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A8C91928(unint64_t a1, uint64_t a2, uint64_t a3, long long *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  os_log_type_t v6 = (void *)(a5[6] + 16 * a1);
  *os_log_type_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1A8C91C90(a4, a5[7] + 40 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

double sub_1A8C91998@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1A8C90B9C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A8CF2990();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1A8C91C90((long long *)(*(void *)(v11 + 56) + 40 * v8), a3);
    sub_1A8C91AA4(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

unint64_t sub_1A8C91AA4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1A8D5A040();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1A8D5A4A0();
        swift_bridgeObjectRetain();
        sub_1A8D59C80();
        uint64_t v11 = sub_1A8D5A4D0();
        double result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          BOOL v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *BOOL v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = v16 + 40 * v3;
          uint64_t v18 = (long long *)(v16 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            long long v9 = *v18;
            long long v10 = v18[1];
            *(void *)(v17 + 32) = *((void *)v18 + 4);
            *(_OWORD *)unint64_t v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1A8C91C90(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1A8C91CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1A8C91D0C(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v4 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v6 = a2;
    }
    uint64_t v7 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v7 = 11;
    }
    uint64_t v8 = v7 | (v6 << 16);
    uint64_t v9 = sub_1A8D59C90();
    if (v10) {
      a2 = v8;
    }
    else {
      a2 = v9;
    }
    a1 = 15;
    a3 = v5;
    a4 = v4;
  }
  return MEMORY[0x1F4183BA0](a1, a2, a3, a4);
}

uint64_t sub_1A8C91DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a2;
  uint64_t v6 = sub_1A8D596F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6, v9);
  unint64_t v10 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  BOOL v23 = (char *)&v23 - v10;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  MEMORY[0x1F4188790](v12 - 8, v13);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8))(a1, v24, ObjectType, a4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1) {
    return sub_1A8C8DE74((uint64_t)v15, &qword_1EB5EACF0);
  }
  unint64_t v17 = v23;
  uint64_t v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v23, v15, v6);
  MEMORY[0x1F4188790](v18, v19);
  sub_1A8D596D0();
  char v20 = sub_1A8D59650();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  v21((char *)&v23 - v10, v6);
  if (v20)
  {
    sub_1A8CB25F8();
    swift_allocError();
    unsigned char *v22 = 5;
    swift_willThrow();
  }
  return ((uint64_t (*)(char *, uint64_t))v21)(v17, v6);
}

uint64_t sub_1A8C92018(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(a1, a2, ObjectType, v5);
}

uint64_t sub_1A8C9208C(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void))(a2 + 8))();
  if ((result & 1) == 0)
  {
    if (qword_1EB5E92F0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1A8D59A80();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB5E92D8);
    unint64_t v4 = sub_1A8D59A60();
    os_log_type_t v5 = sub_1A8D59EE0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1A8C7F000, v4, v5, "not authorized", v6, 2u);
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
    }

    sub_1A8CA6B90(3);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1A8C92198()
{
  return 1;
}

uint64_t sub_1A8C921A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_4Tm()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t objectdestroyTm()
{
  _Block_release(*(const void **)(v0 + 24));
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t objectdestroy_22Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t objectdestroyTm_0()
{
  _Block_release(*(const void **)(v0 + 16));
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t objectdestroyTm_1()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  swift_release();
  return MEMORY[0x1F4186498](v0, 112, 7);
}

uint64_t sub_1A8C923AC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (!v0) {
    **(unsigned char **)(v2 + 16) = *(unsigned char *)(v2 + 32);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t sub_1A8C924BC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1A8C81A88;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1E979F9B0 + dword_1E979F9B0);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1A8C92588(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1A8C923AC;
  return v7(v4 + 32);
}

uint64_t sub_1A8C92668()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (!v0) {
    **(void **)(v2 + 24) = *(void *)(v2 + 16);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t sub_1A8C92774(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1A8C81A88;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1E979F9F8 + dword_1E979F9F8);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1A8C92840(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 24) = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 32) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1A8C92668;
  return v7(v4 + 16);
}

void sub_1A8C92920(id a1, char a2)
{
  if (a2) {
}
  }

void sub_1A8C9292C(id a1)
{
}

void sub_1A8C92938(uint64_t a1, uint64_t a2)
{
  sub_1A8C92940(a1, a2, *(void *)(v2 + 16));
}

void sub_1A8C92940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1A8D59540();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

uint64_t sub_1A8C929B0()
{
  long long v6 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 96);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1A8C81A88;
  *(_OWORD *)(v3 + 88) = v4;
  *(void *)(v3 + 72) = v2;
  *(void *)(v3 + 80) = v0 + 56;
  *(_OWORD *)(v3 + 56) = v6;
  return MEMORY[0x1F4188298](sub_1A8C840CC, 0, 0);
}

uint64_t sub_1A8C92A80()
{
  **(void **)(v0 + 64) = *(void *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A8C92AA0(uint64_t a1)
{
  uint64_t v4 = v1 + 16;
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1A8C81994;
  v7[10] = v6;
  v7[11] = v5;
  v7[8] = a1;
  v7[9] = v4;
  return MEMORY[0x1F4188298](sub_1A8C83700, 0, 0);
}

void sub_1A8C92B60(void *a1, char a2)
{
  sub_1A8C81EE8(a1, a2 & 1, *(void (**)(void, id))(v2 + 16));
}

void sub_1A8C92B70(void *a1, char a2)
{
  sub_1A8C82F3C(a1, a2 & 1, *(void (**)(id, id))(v2 + 16));
}

void sub_1A8C92BA4(char a1, void *a2)
{
  sub_1A8C8750C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void (**)(void *, uint64_t))(v2 + 40));
}

uint64_t sub_1A8C92BB8(void *a1, char a2)
{
  char v3 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAD18);
  return sub_1A8C8268C(a1, v3);
}

uint64_t sub_1A8C92C3C(uint64_t a1)
{
  return sub_1A8C823EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

id sub_1A8C92C4C(void *a1, void *a2)
{
  return sub_1A8C88B94(a1, a2, *(void *)(v2 + 16), *(void (**)(void, void))(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1A8C92C58@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A8C84ED4(a1, *(char **)(a2 + 16), *(uint64_t **)(a2 + 24), a3);
}

uint64_t sub_1A8C92C7C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A8C92CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 48);
}

uint64_t type metadata accessor for CacheBox.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for NotificationObservation()
{
  return self;
}

uint64_t sub_1A8C92D04(uint64_t a1)
{
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v4 = v1[5];
  uint64_t v10 = v1[4];
  uint64_t v5 = v1[6];
  uint64_t v6 = v1[7];
  uint64_t v7 = v1[8];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1A8C81A88;
  return sub_1A8C84270(a1, v12, v11, v10, v4, v5, v6, v7);
}

uint64_t sub_1A8C92E1C()
{
  *(void *)(v0 + 152) = sub_1A8C83E20(0x6C69626967696C65, 0xEB00000000797469);
  return MEMORY[0x1F4188298](sub_1A8C83FB8, 0, 0);
}

uint64_t sub_1A8C92EA4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 88) + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_taskLimiters);
  *(void *)(v0 + 144) = v1;
  return MEMORY[0x1F4188298](sub_1A8C92E1C, v1, 0);
}

uint64_t sub_1A8C92ED0()
{
  long long v8 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v0 + 64);
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_1A8C81994;
  *(void *)(v5 + 136) = v4;
  *(_OWORD *)(v5 + 120) = v6;
  *(void *)(v5 + 104) = v2;
  *(void *)(v5 + 112) = v3;
  *(_OWORD *)(v5 + 88) = v8;
  return MEMORY[0x1F4188298](sub_1A8C92EA4, 0, 0);
}

uint64_t sub_1A8C92FAC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    long long v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    return MEMORY[0x1F4188298](sub_1A8CC4E80, 0, 0);
  }
}

uint64_t getEnumTagSinglePayload for AvailabilityModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t sub_1A8C93188(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A8C931B8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1A8C82220, 0, 0);
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_0(v4 + 16);
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1A8C93318()
{
  return MEMORY[0x1F4188298](sub_1A8C83264, 0, 0);
}

uint64_t sub_1A8C93334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 >= 2u && a5 != 3)
  {
    if (a5 != 2) {
      return result;
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for InternalError()
{
  uint64_t result = qword_1EB5E9588;
  if (!qword_1EB5E9588) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FeatureCache()
{
  return self;
}

uint64_t sub_1A8C9340C(uint64_t a1, uint64_t a2)
{
  v3[52] = a2;
  v3[53] = v2;
  v3[51] = a1;
  return MEMORY[0x1F4188298](sub_1A8C8D090, 0, 0);
}

uint64_t type metadata accessor for TaskLimiter()
{
  return self;
}

uint64_t sub_1A8C93454()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 256);
  if (v0) {
    uint64_t v4 = sub_1A8C82E54;
  }
  else {
    uint64_t v4 = sub_1A8D348A4;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1A8C93580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[31] = a4;
  v5[32] = v4;
  v5[29] = a2;
  v5[30] = a3;
  v5[28] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  v5[33] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8C882B0, v4, 0);
}

uint64_t sub_1A8C9361C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 320) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 264);
  if (v0) {
    uint64_t v4 = sub_1A8D367D0;
  }
  else {
    uint64_t v4 = sub_1A8C81E54;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1A8C93748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[32] = a4;
  v5[33] = v4;
  v5[30] = a2;
  v5[31] = a3;
  v5[29] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  v5[34] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8C879D0, v4, 0);
}

unint64_t sub_1A8C937E4()
{
  unint64_t result = qword_1EB5EAC98;
  if (!qword_1EB5EAC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5EAC98);
  }
  return result;
}

uint64_t type metadata accessor for UnfairLock()
{
  return self;
}

uint64_t sub_1A8C9385C(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1EB5EAEE0);
}

uint64_t sub_1A8C93878(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1EB5EAC50);
}

uint64_t sub_1A8C9389C(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1EB5EAB60);
}

uint64_t sub_1A8C938C8(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1EB5EAB48);
}

uint64_t sub_1A8C938F0()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

id sub_1A8C9390C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  id result = CloudFeature.init(from:)(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

void sub_1A8C9395C()
{
  sub_1A8C82EE4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unsigned char *storeEnumTagSinglePayload for CloudFeature.APICodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *id result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 4;
        break;
    }
  }
  return result;
}

unint64_t sub_1A8C93B10()
{
  unint64_t result = qword_1EB5EA190;
  if (!qword_1EB5EA190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5EA190);
  }
  return result;
}

void sub_1A8C93B64(char a1, uint64_t a2)
{
  sub_1A8C93B6C(a1, a2, *(void *)(v2 + 16));
}

void sub_1A8C93B6C(char a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1A8D59540();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, void))(a3 + 16))(a3, a1 & 1);
}

uint64_t sub_1A8C93BDC(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void, uint64_t))(*(void *)(v2 + 16) + 16))(*(void *)(v2 + 16), a1 & 1, a2);
}

uint64_t sub_1A8C93BF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A8C93C40(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A8D596F0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A8C93C84(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1A8C93C98(a1, a2);
  }
  return a1;
}

uint64_t sub_1A8C93C98(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

void sub_1A8C94378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A8C948DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A8C94E58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

id _CSFGetLogSystem()
{
  if (_CSFGetLogSystem_onceToken != -1) {
    dispatch_once(&_CSFGetLogSystem_onceToken, &__block_literal_global_1);
  }
  unint64_t v0 = (void *)_CSFGetLogSystem_log;
  return v0;
}

__CFString *CSFGeoClassificationStatusDescription(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"Unknown";
  }
  else {
    return off_1E5D5E758[a1 - 1];
  }
}

id getINDaemonConnectionClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  unint64_t v0 = (void *)getINDaemonConnectionClass_softClass;
  uint64_t v7 = getINDaemonConnectionClass_softClass;
  if (!getINDaemonConnectionClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getINDaemonConnectionClass_block_invoke;
    v3[3] = &unk_1E5D5E840;
    v3[4] = &v4;
    __getINDaemonConnectionClass_block_invoke((uint64_t)v3);
    unint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1A8C97374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getMSDKDemoStateClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  unint64_t v0 = (void *)getMSDKDemoStateClass_softClass;
  uint64_t v7 = getMSDKDemoStateClass_softClass;
  if (!getMSDKDemoStateClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getMSDKDemoStateClass_block_invoke;
    v3[3] = &unk_1E5D5E840;
    v3[4] = &v4;
    __getMSDKDemoStateClass_block_invoke((uint64_t)v3);
    unint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1A8C977F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getINDaemonConnectionClass_block_invoke(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!iCloudNotificationLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __iCloudNotificationLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E5D5E860;
    uint64_t v5 = 0;
    iCloudNotificationLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!iCloudNotificationLibraryCore_frameworkLibrary)
    {
      abort_report_np();
LABEL_8:
      __getINDaemonConnectionClass_block_invoke_cold_1();
    }
    if (v3[0]) {
      free(v3[0]);
    }
  }
  Class result = objc_getClass("INDaemonConnection");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    goto LABEL_8;
  }
  getINDaemonConnectionClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __iCloudNotificationLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  iCloudNotificationLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getMSDKDemoStateClass_block_invoke(uint64_t a1)
{
  if (!MobileStoreDemoKitLibraryCore_frameworkLibrary) {
    MobileStoreDemoKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  Class result = objc_getClass("MSDKDemoState");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getMSDKDemoStateClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __MobileStoreDemoKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  MobileStoreDemoKitLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t sub_1A8C97B38()
{
  id v0 = objc_allocWithZone(NSString);
  id v1 = (void *)sub_1A8D59BC0();
  id v2 = objc_msgSend(v0, sel_initWithString_, v1);

  sub_1A8D59BF0();
  uint64_t v3 = sub_1A8D59BC0();

  uint64_t result = swift_bridgeObjectRelease();
  qword_1EB5ECCD8 = v3;
  return result;
}

uint64_t sub_1A8C97BD0(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  return MEMORY[0x1F4188298](sub_1A8C97BF4, 0, 0);
}

uint64_t sub_1A8C97BF4()
{
  id v1 = (void *)v0[18];
  uint64_t v2 = v0[16];
  sub_1A8C97F34(v0[17]);
  uint64_t v3 = sub_1A8D59B20();
  v0[19] = v3;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1A8C97D48;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A8C982FC;
  v0[13] = &block_descriptor_55;
  v0[14] = v4;
  objc_msgSend(v1, sel_renewCredentialsForAccount_options_completion_, v2, v3, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A8C97D48()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_1A8C97EC4;
  }
  else {
    uint64_t v2 = sub_1A8C97E58;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8C97E58()
{
  uint64_t v1 = *(void *)(v0 + 120);

  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1A8C97EC4()
{
  uint64_t v1 = *(void **)(v0 + 152);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1A8C97F34(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E96A8);
    uint64_t v2 = sub_1A8D5A1F0();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    unint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1A8C901F4(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1A8C90CF8(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1A8C90CF8(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1A8C90CF8(v36, v37);
    sub_1A8C90CF8(v37, &v33);
    uint64_t result = sub_1A8D5A050();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1A8C90CF8(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1A8C9A664();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1A8C982FC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    **(void **)(*(void *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

void sub_1A8C983B0(int a1)
{
  os_log_t v2 = v1;
  LODWORD(v3) = a1;
  uint64_t v4 = sub_1A8D59A80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  int64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [v2 aa_primaryAppleAccount];
  if (v9)
  {
    uint64_t v10 = v9;
    if (qword_1EB5EAD00 != -1) {
      swift_once();
    }
    uint64_t v11 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EAC50);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v11, v4);
    id v12 = v10;
    int64_t v13 = sub_1A8D59A60();
    int v14 = sub_1A8D59ED0();
    if (!os_log_type_enabled(v13, (os_log_type_t)v14))
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      goto LABEL_15;
    }
    int v29 = v14;
    os_log_t v31 = v2;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    aBlock[0] = v28;
    *(_DWORD *)uint64_t v15 = 67109378;
    int v30 = v3;
    LODWORD(v32) = v3 & 1;
    sub_1A8D59FE0();
    *(_WORD *)(v15 + 8) = 2080;
    id v16 = objc_msgSend(v12, sel_aa_altDSID);
    if (v16)
    {
      unint64_t v17 = v16;
      uint64_t v18 = sub_1A8D59BF0();
      unint64_t v20 = v19;

      uint64_t v32 = sub_1A8C90120(v18, v20, aBlock);
      sub_1A8D59FE0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A8C7F000, v13, (os_log_type_t)v29, "Storing subscriber status %{BOOL}d on account %s", (uint8_t *)v15, 0x12u);
      uint64_t v3 = v28;
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v3, -1, -1);
      MEMORY[0x1AD0E6EB0](v15, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      os_log_t v2 = v31;
      LOBYTE(v3) = v30;
LABEL_15:
      uint64_t v24 = v3 & 1;
      objc_msgSend(v12, sel_aa_setIsCloudSubscriber_, v24);
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v12;
      *(unsigned char *)(v25 + 24) = v24;
      aBlock[4] = (uint64_t)sub_1A8C9A658;
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1A8C98CD4;
      aBlock[3] = (uint64_t)&block_descriptor_8;
      uint64_t v26 = _Block_copy(aBlock);
      id v27 = v12;
      swift_release();
      [v2 saveAccount:v27 withCompletionHandler:v26];
      _Block_release(v26);

      return;
    }

    __break(1u);
  }
  else
  {
    if (qword_1EB5EAD00 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EAC50);
    os_log_t v31 = (os_log_t)sub_1A8D59A60();
    os_log_type_t v21 = sub_1A8D59EE0();
    if (os_log_type_enabled(v31, v21))
    {
      unint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v22 = 0;
      _os_log_impl(&dword_1A8C7F000, v31, v21, "Unable to update subscriber status because there is no primary apple account", v22, 2u);
      MEMORY[0x1AD0E6EB0](v22, -1, -1);
    }
    os_log_t v23 = v31;
  }
}

void sub_1A8C9885C(char a1, void *a2, void *a3, int a4)
{
  uint64_t v8 = sub_1A8D59A80();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  id v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (qword_1EB5EAD00 != -1) {
      swift_once();
    }
    uint64_t v13 = __swift_project_value_buffer(v8, (uint64_t)qword_1EB5EAC50);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v13, v8);
    id v14 = a3;
    uint64_t v15 = sub_1A8D59A60();
    int v16 = sub_1A8D59ED0();
    if (!os_log_type_enabled(v15, (os_log_type_t)v16))
    {

      goto LABEL_13;
    }
    int v35 = v16;
    LODWORD(v36) = a4;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v38 = v34;
    *(_DWORD *)uint64_t v17 = 136315394;
    id v18 = objc_msgSend(v14, sel_aa_altDSID);
    if (v18)
    {
      unint64_t v19 = v18;
      uint64_t v20 = sub_1A8D59BF0();
      unint64_t v22 = v21;

      uint64_t v37 = sub_1A8C90120(v20, v22, &v38);
      sub_1A8D59FE0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 1024;
      LODWORD(v37) = v36 & 1;
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v15, (os_log_type_t)v35, "Saved account %s with subscriber status %{BOOL}d", (uint8_t *)v17, 0x12u);
      uint64_t v23 = v34;
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v23, -1, -1);
      MEMORY[0x1AD0E6EB0](v17, -1, -1);

LABEL_13:
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      return;
    }

    __break(1u);
  }
  else
  {
    if (qword_1EB5EAD00 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v8, (uint64_t)qword_1EB5EAC50);
    id v24 = a2;
    id v25 = a2;
    id v36 = sub_1A8D59A60();
    os_log_type_t v26 = sub_1A8D59EE0();
    if (os_log_type_enabled(v36, v26))
    {
      id v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v38 = v28;
      *(_DWORD *)id v27 = 136315138;
      if (a2)
      {
        swift_getErrorValue();
        uint64_t v29 = sub_1A8D5A440();
        unint64_t v31 = v30;
      }
      else
      {
        uint64_t v29 = 0;
        unint64_t v31 = 0xE000000000000000;
      }
      uint64_t v37 = sub_1A8C90120(v29, v31, &v38);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A8C7F000, v36, v26, "Failed to save account with Error: %s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v28, -1, -1);
      MEMORY[0x1AD0E6EB0](v27, -1, -1);
    }
    else
    {

      uint64_t v32 = v36;
    }
  }
}

void sub_1A8C98CD4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

id sub_1A8C98D4C()
{
  if (qword_1EB5E9680 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB5ECCD8;
  return v0;
}

uint64_t sub_1A8C98DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A8C98E68;
  v7[17] = a2;
  v7[18] = v6;
  v7[16] = a1;
  return MEMORY[0x1F4188298](sub_1A8C97BF4, 0, 0);
}

uint64_t sub_1A8C98E68(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_1A8C98F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[23] = a4;
  v5[24] = v4;
  v5[21] = a2;
  v5[22] = a3;
  v5[20] = a1;
  return MEMORY[0x1F4188298](sub_1A8C8BF34, 0, 0);
}

uint64_t sub_1A8C98F90(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 248) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1A8C993A0;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 256) = a1;
    uint64_t v5 = sub_1A8C990C0;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1A8C990C0()
{
  uint64_t v23 = v0;
  if (*(void *)(v0 + 256))
  {
    uint64_t v1 = sub_1A8D59A60();
    os_log_type_t v2 = sub_1A8D59EE0();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl(&dword_1A8C7F000, v1, v2, "Bag refresh failed", v3, 2u);
      MEMORY[0x1AD0E6EB0](v3, -1, -1);
    }
    uint64_t v4 = *(void **)(v0 + 224);

    sub_1A8C8C7B0();
    swift_allocError();
    *uint64_t v5 = 9;
    swift_willThrow();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(v0 + 248);
  uint64_t v7 = (*(uint64_t (**)(void, void, void, void))(v0 + 200))(*(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184));
  if (v6)
  {
    uint64_t v4 = *(void **)(v0 + 224);
LABEL_7:

    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  uint64_t v11 = v7;
  uint64_t v12 = v8;
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1A8D59A60();
  uint64_t v14 = sub_1A8D59F00();
  BOOL v15 = os_log_type_enabled(v13, (os_log_type_t)v14);
  int v16 = *(void **)(v0 + 224);
  unint64_t v17 = *(void *)(v0 + 168);
  if (v15)
  {
    uint64_t v21 = *(void *)(v0 + 160);
    id v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v22 = v19;
    *(_DWORD *)id v18 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 144) = sub_1A8C90120(v21, v17, &v22);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v13, (os_log_type_t)v14, "Bag refresh was successful and now contains a path for %{public}s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v19, -1, -1);
    MEMORY[0x1AD0E6EB0](v18, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v20(v11, v12);
}

uint64_t sub_1A8C993A0()
{
  uint64_t v1 = *(void **)(v0 + 224);
  swift_bridgeObjectRelease();

  os_log_type_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id sub_1A8C99408()
{
  uint64_t v1 = *v0;
  os_log_type_t v2 = (void *)sub_1A8D59BC0();
  id v3 = objc_msgSend(v1, sel_aa_appleAccountWithAltDSID_, v2);

  return v3;
}

uint64_t sub_1A8C9945C()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 104));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1A8C994D4()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 104));
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t sub_1A8C9955C()
{
  return v0;
}

uint64_t sub_1A8C99568()
{
  return sub_1A8C9955C();
}

uint64_t sub_1A8C99584@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1A8C995DC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A8C995F0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1A8C99604(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1A8C99618(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1A8C9962C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1A8C99640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1A8C99654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_1A8C99668(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_1A8C9967C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 72) + **(int **)(a4 + 72));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1A8C99788;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1A8C99788(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1A8C99884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t sub_1A8C998AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 88) + **(int **)(a4 + 88));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1A8C999B8;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1A8C999B8(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t sub_1A8C99AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t sub_1A8C99AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t sub_1A8C99AF0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AccountStore()
{
  return __swift_instantiateGenericMetadata();
}

void type metadata accessor for Name(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for CSFGeoClassificationStatus(uint64_t a1)
{
}

void type metadata accessor for FeatureStatus(uint64_t a1)
{
}

void type metadata accessor for UnavailabilityReasons(uint64_t a1)
{
}

void sub_1A8C99C0C(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1A8C99C14@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1A8C99C28@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1A8C99C3C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1A8C99C50(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_1A8C99C80@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1A8C99CAC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1A8C99CD0(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1A8C99CE4(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_1A8C99CF8(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1A8C99D0C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1A8C99D20(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1A8C99D34(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1A8C99D48(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1A8C99D5C()
{
  return *v0 == 0;
}

uint64_t sub_1A8C99D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void *sub_1A8C99D84(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_1A8C99D98@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1A8C99DA8(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_1A8C99DB4(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A8C99DC8(uint64_t a1, uint64_t a2)
{
  return sub_1A8C9A29C(a1, a2, MEMORY[0x1F418C118]);
}

uint64_t sub_1A8C99DD4(uint64_t a1, id *a2)
{
  uint64_t result = sub_1A8D59BD0();
  *a2 = 0;
  return result;
}

uint64_t sub_1A8C99E4C(uint64_t a1, id *a2)
{
  char v3 = sub_1A8D59BE0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1A8C99ECC@<X0>(uint64_t *a1@<X8>)
{
  sub_1A8D59BF0();
  uint64_t v2 = sub_1A8D59BC0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A8C99F10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1A8C9A5E8(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1A8C99F50()
{
  return sub_1A8C99FE0(&qword_1E979E4D0, type metadata accessor for UnavailabilityReasons);
}

uint64_t sub_1A8C99F98()
{
  return sub_1A8C99FE0(&qword_1E979E4D8, type metadata accessor for UnavailabilityReasons);
}

uint64_t sub_1A8C99FE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A8C9A028()
{
  return sub_1A8C99FE0(&qword_1E979E4E0, type metadata accessor for UnavailabilityReasons);
}

uint64_t sub_1A8C9A070()
{
  return sub_1A8C99FE0(&qword_1E979E4E8, type metadata accessor for UnavailabilityReasons);
}

void *sub_1A8C9A0B8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A8C9A0C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1A8D59BC0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A8C9A10C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A8D59BF0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A8C9A138(uint64_t a1)
{
  uint64_t v2 = sub_1A8C99FE0(&qword_1E979E508, type metadata accessor for Name);
  uint64_t v3 = sub_1A8C99FE0(&qword_1E979E510, type metadata accessor for Name);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A8C9A1F4()
{
  return sub_1A8C99FE0(&qword_1E979E4F0, type metadata accessor for Name);
}

uint64_t sub_1A8C9A23C()
{
  return sub_1A8C99FE0(&qword_1E979E4F8, type metadata accessor for Name);
}

uint64_t sub_1A8C9A284(uint64_t a1, uint64_t a2)
{
  return sub_1A8C9A29C(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1A8C9A29C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1A8D59BF0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A8C9A2E0()
{
  sub_1A8D59BF0();
  sub_1A8D59C80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A8C9A334()
{
  sub_1A8D59BF0();
  sub_1A8D5A4A0();
  sub_1A8D59C80();
  uint64_t v0 = sub_1A8D5A4D0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A8C9A3A8()
{
  uint64_t v0 = sub_1A8D59BF0();
  uint64_t v2 = v1;
  if (v0 == sub_1A8D59BF0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1A8D5A390();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1A8C9A434()
{
  return sub_1A8C99FE0(&qword_1E979E500, type metadata accessor for Name);
}

uint64_t sub_1A8C9A47C()
{
  char v0 = sub_1A8D12DD4();
  if (v0 == 2)
  {
    sub_1A8D59310();
    if (v1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    else
    {
      return 1;
    }
  }
  else
  {
    uint64_t v2 = v0 & 1;
    if (qword_1EB5EAD00 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1A8D59A80();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB5EAC50);
    uint64_t v4 = sub_1A8D59A60();
    os_log_type_t v5 = sub_1A8D59F00();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 67109120;
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v4, v5, "User has mocked auth issue via CSFCTL. Returning value %{BOOL}d.", v6, 8u);
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
    }
  }
  return v2;
}

uint64_t sub_1A8C9A5E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1A8C9A620()
{
  return MEMORY[0x1F4186498](v0, 25, 7);
}

void sub_1A8C9A658(char a1, void *a2)
{
  sub_1A8C9885C(a1, a2, *(void **)(v2 + 16), *(unsigned __int8 *)(v2 + 24));
}

uint64_t sub_1A8C9A664()
{
  return swift_release();
}

void type metadata accessor for CFError(uint64_t a1)
{
}

void type metadata accessor for SecCertificate(uint64_t a1)
{
}

void type metadata accessor for ACAccountCredentialRenewResult(uint64_t a1)
{
}

void type metadata accessor for os_eligibility_answer_t(uint64_t a1)
{
}

void sub_1A8C9A6BC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t static SystemProperties.shared.getter()
{
  type metadata accessor for SystemProperties();
  return swift_initStaticObject();
}

char *sub_1A8C9A758()
{
  v22[1] = *MEMORY[0x1E4F143B8];
  size_t v21 = 37;
  uint64_t v0 = sub_1A8D59D90();
  *(void *)(v0 + 16) = 37;
  *(_OWORD *)(v0 + 48) = 0u;
  *(void *)(v0 + 61) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  if (!sysctlbyname("kern.bootsessionuuid", (void *)(v0 + 32), &v21, 0, 0))
  {
    uint64_t v14 = sub_1A8C9B4CC(v0, v1);
    swift_bridgeObjectRelease();
    return (char *)v14;
  }
  int v2 = MEMORY[0x1AD0E5A20]();
  uint64_t result = strerror(v2);
  if (result)
  {
    uint64_t v4 = sub_1A8D59BB0();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    if (v6) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 0x6E776F6E6B6E55;
    }
    if (v6) {
      unint64_t v8 = v6;
    }
    else {
      unint64_t v8 = 0xE700000000000000;
    }
    if (qword_1EB5EAB38 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1A8D59A80();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB5EAB48);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1A8D59A60();
    os_log_type_t v11 = sub_1A8D59EF0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      v22[0] = v13;
      *(_DWORD *)uint64_t v12 = 67109378;
      sub_1A8D59FE0();
      *(_WORD *)(v12 + 8) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1A8C90120(v7, v8, v22);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v10, v11, "failed to get current boot session UUID with error: %d -> %s", (uint8_t *)v12, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v13, -1, -1);
      MEMORY[0x1AD0E6EB0](v12, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v15 = sub_1A8D59720();
    uint64_t v16 = *(void *)(v15 - 8);
    MEMORY[0x1F4188790](v15, v17);
    uint64_t v19 = (char *)&v20 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A8D59710();
    uint64_t v14 = sub_1A8D59700();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    return (char *)v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A8C9AAA4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A8C9AAB4(char **a1))(void *a1)
{
  a1[2] = v1;
  *a1 = sub_1A8C8E620();
  a1[1] = v3;
  return sub_1A8C9AAFC;
}

uint64_t sub_1A8C9AAFC(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v1 = a1[2];
  *(void *)(v1 + 16) = *a1;
  *(void *)(v1 + 24) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A8C9AB10()
{
  uint64_t result = sub_1A8C9AE64();
  if (!v1)
  {
    sub_1A8C8C7B0();
    swift_allocError();
    *uint64_t v2 = 11;
    return swift_willThrow();
  }
  return result;
}

id sub_1A8C9AB6C()
{
  v13[1] = *(id *)MEMORY[0x1E4F143B8];
  v13[0] = 0;
  id result = objc_msgSend(self, sel_isDeviceEnrolledWithDeKOTA_, v13);
  if (v13[0])
  {
    id v1 = v13[0];
    swift_willThrow();
    if (qword_1EB5E94B0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1A8D59A80();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EB5E9430);
    id v3 = v1;
    uint64_t v4 = sub_1A8D59A60();
    os_log_type_t v5 = sub_1A8D59EE0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v7 = (void *)swift_slowAlloc();
      unint64_t v8 = (void *)swift_slowAlloc();
      v13[0] = v8;
      *(_DWORD *)uint64_t v6 = 136446722;
      uint64_t v9 = sub_1A8D5A540();
      sub_1A8C90120(v9, v10, (uint64_t *)v13);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v6 + 12) = 2082;
      sub_1A8C90120(0x6C69617465527369, 0xEE00656369766544, (uint64_t *)v13);
      sub_1A8D59FE0();
      *(_WORD *)(v6 + 22) = 2112;
      id v11 = v3;
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      sub_1A8D59FE0();
      *uint64_t v7 = v12;

      _os_log_impl(&dword_1A8C7F000, v4, v5, "%{public}s %{public}s failed to check isRetailDevice: %@", (uint8_t *)v6, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v7, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v8, -1, -1);
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  return result;
}

uint64_t sub_1A8C9AE64()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = v1;
  if (v2 == 1)
  {
    uint64_t v3 = sub_1A8C9B514();
    uint64_t v4 = *(void *)(v0 + 32);
    uint64_t v5 = *(void *)(v0 + 40);
    *(void *)(v0 + 32) = v3;
    *(void *)(v0 + 40) = v6;
    swift_bridgeObjectRetain();
    sub_1A8C9B2F0(v4, v5);
  }
  sub_1A8C9B5B8(v1, v2);
  return v3;
}

uint64_t SystemProperties.deinit()
{
  swift_bridgeObjectRelease();
  sub_1A8C9B2F0(*(void *)(v0 + 32), *(void *)(v0 + 40));
  return v0;
}

uint64_t SystemProperties.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1A8C9B2F0(*(void *)(v0 + 32), *(void *)(v0 + 40));
  return MEMORY[0x1F4186488](v0, 48, 7);
}

uint64_t sub_1A8C9AF50(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1A8C9AF60(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1A8C9AF9C(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_1A8C9AFD4(uint64_t (*a1)(void))
{
  return a1();
}

unsigned char **sub_1A8C9AFFC(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *id result = v4 + 1;
  return result;
}

uint64_t sub_1A8C9B00C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1A8C9B034(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1A8C90120(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_1A8D59FE0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1A8C9B0AC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED8);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A8D5A200();
  __break(1u);
  return result;
}

uint64_t sub_1A8C9B1FC(void (*a1)(void))
{
  a1();
  return sub_1A8D5A540();
}

void sub_1A8C9B238(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_1A8D59FE0();
  *a1 = v7;
  int64_t v8 = *a2;
  if (*a2)
  {
    *int64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_1A8C9B2F0(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_1A8C9B304@<X0>(char **a1@<X8>)
{
  uint64_t result = sub_1A8C8E620();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A8C9B330(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A8C9B374(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A8C9B388(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1A8C9B3B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1A8C9B3C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1A8C9B3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t method lookup function for SystemProperties(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SystemProperties);
}

uint64_t dispatch thunk of SystemProperties.bootSessionUUID.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of SystemProperties.bootSessionUUID.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of SystemProperties.bootSessionUUID.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of SystemProperties.deviceID.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of SystemProperties.isRetailDevice.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_1A8C9B4CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
LABEL_9:
    __break(1u);
    return MEMORY[0x1F4183950](a1, a2);
  }
  uint64_t v3 = a1;
  int v4 = *(unsigned __int8 *)(a1 + 32);
  a1 += 32;
  if (v4)
  {
    a2 = 0;
    uint64_t v5 = v2 - 1;
    uint64_t v6 = v3 + 33;
    while (v5 != a2)
    {
      if (!*(unsigned __int8 *)(v6 + a2++)) {
        return MEMORY[0x1F4183950](a1, a2);
      }
    }
    __break(1u);
    goto LABEL_9;
  }
  a2 = 0;
  return MEMORY[0x1F4183950](a1, a2);
}

uint64_t sub_1A8C9B514()
{
  uint64_t v0 = (void *)sub_1A8D59BC0();
  uint64_t v1 = MGCopyAnswer();

  if (!v1) {
    return 0;
  }
  if (swift_dynamicCast()) {
    return v3;
  }
  return 0;
}

uint64_t sub_1A8C9B5B8(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t CSFUnavailabilityReasons.description.getter(__int16 a1)
{
  if ((a1 & 1) == 0)
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
    if ((a1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  uint64_t v2 = sub_1A8C9D544(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1A8C9D544((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  uint64_t v5 = &v2[2 * v4];
  v5[4] = 0xD000000000000010;
  v5[5] = 0x80000001A8D63560;
  if ((a1 & 2) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_1A8C9D544(0, v2[2] + 1, 1, v2);
    }
    unint64_t v7 = v2[2];
    unint64_t v6 = v2[3];
    if (v7 >= v6 >> 1) {
      uint64_t v2 = sub_1A8C9D544((void *)(v6 > 1), v7 + 1, 1, v2);
    }
    v2[2] = v7 + 1;
    int64_t v8 = &v2[2 * v7];
    v8[4] = 0xD00000000000001ALL;
    v8[5] = 0x80000001A8D63540;
  }
LABEL_12:
  if ((a1 & 4) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_1A8C9D544(0, v2[2] + 1, 1, v2);
    }
    unint64_t v10 = v2[2];
    unint64_t v9 = v2[3];
    if (v10 >= v9 >> 1) {
      uint64_t v2 = sub_1A8C9D544((void *)(v9 > 1), v10 + 1, 1, v2);
    }
    v2[2] = v10 + 1;
    size_t v11 = &v2[2 * v10];
    v11[4] = 0xD000000000000010;
    v11[5] = 0x80000001A8D63520;
    if ((a1 & 0x10) == 0)
    {
LABEL_14:
      if ((a1 & 0x20) == 0) {
        goto LABEL_15;
      }
      goto LABEL_30;
    }
  }
  else if ((a1 & 0x10) == 0)
  {
    goto LABEL_14;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A8C9D544(0, v2[2] + 1, 1, v2);
  }
  unint64_t v13 = v2[2];
  unint64_t v12 = v2[3];
  if (v13 >= v12 >> 1) {
    uint64_t v2 = sub_1A8C9D544((void *)(v12 > 1), v13 + 1, 1, v2);
  }
  v2[2] = v13 + 1;
  uint64_t v14 = &v2[2 * v13];
  v14[4] = 0xD000000000000010;
  v14[5] = 0x80000001A8D63500;
  if ((a1 & 0x20) == 0)
  {
LABEL_15:
    if ((a1 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_30:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A8C9D544(0, v2[2] + 1, 1, v2);
  }
  unint64_t v16 = v2[2];
  unint64_t v15 = v2[3];
  if (v16 >= v15 >> 1) {
    uint64_t v2 = sub_1A8C9D544((void *)(v15 > 1), v16 + 1, 1, v2);
  }
  v2[2] = v16 + 1;
  uint64_t v17 = &v2[2 * v16];
  v17[4] = 0x4E73497465737361;
  v17[5] = 0xEF7964616552746FLL;
  if ((a1 & 0x40) == 0)
  {
LABEL_16:
    if ((a1 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_40;
  }
LABEL_35:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A8C9D544(0, v2[2] + 1, 1, v2);
  }
  unint64_t v19 = v2[2];
  unint64_t v18 = v2[3];
  if (v19 >= v18 >> 1) {
    uint64_t v2 = sub_1A8C9D544((void *)(v18 > 1), v19 + 1, 1, v2);
  }
  v2[2] = v19 + 1;
  uint64_t v20 = (char *)&v2[2 * v19];
  strcpy(v20 + 32, "shortOfStorage");
  v20[47] = -18;
  if ((a1 & 0x80) == 0)
  {
LABEL_17:
    if ((a1 & 0x100) == 0) {
      goto LABEL_18;
    }
    goto LABEL_45;
  }
LABEL_40:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A8C9D544(0, v2[2] + 1, 1, v2);
  }
  unint64_t v22 = v2[2];
  unint64_t v21 = v2[3];
  if (v22 >= v21 >> 1) {
    uint64_t v2 = sub_1A8C9D544((void *)(v21 > 1), v22 + 1, 1, v2);
  }
  v2[2] = v22 + 1;
  uint64_t v23 = &v2[2 * v22];
  v23[4] = 0x646574704F746F6ELL;
  v23[5] = 0xEA00000000006E49;
  if ((a1 & 0x100) == 0)
  {
LABEL_18:
    if ((a1 & 0x200) == 0) {
      goto LABEL_55;
    }
    goto LABEL_50;
  }
LABEL_45:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A8C9D544(0, v2[2] + 1, 1, v2);
  }
  unint64_t v25 = v2[2];
  unint64_t v24 = v2[3];
  if (v25 >= v24 >> 1) {
    uint64_t v2 = sub_1A8C9D544((void *)(v24 > 1), v25 + 1, 1, v2);
  }
  v2[2] = v25 + 1;
  os_log_type_t v26 = &v2[2 * v25];
  v26[4] = 0xD000000000000019;
  v26[5] = 0x80000001A8D634E0;
  if ((a1 & 0x200) != 0)
  {
LABEL_50:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_1A8C9D544(0, v2[2] + 1, 1, v2);
    }
    unint64_t v28 = v2[2];
    unint64_t v27 = v2[3];
    if (v28 >= v27 >> 1) {
      uint64_t v2 = sub_1A8C9D544((void *)(v27 > 1), v28 + 1, 1, v2);
    }
    v2[2] = v28 + 1;
    uint64_t v29 = &v2[2 * v28];
    v29[4] = 0x6E776F6E6B6E75;
    v29[5] = 0xE700000000000000;
  }
LABEL_55:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9DB0);
  sub_1A8C9D3A4();
  sub_1A8D59B70();
  swift_bridgeObjectRelease();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  sub_1A8D59CA0();
  return 91;
}

uint64_t sub_1A8C9BB30()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8C9BB78()
{
  return sub_1A8D5A4B0();
}

uint64_t sub_1A8C9BBA4()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8C9BBE8()
{
  return sub_1A8D59D20();
}

uint64_t sub_1A8C9BC64()
{
  return sub_1A8D59D00();
}

uint64_t sub_1A8C9BCD0()
{
  return CSFUnavailabilityReasons.description.getter(*v0);
}

uint64_t AvailabilityModel.deviceMeetsPreconditions.getter()
{
  return *v0;
}

uint64_t AvailabilityModel.unableToFetchAvailability.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t AvailabilityModel.deviceHasEnoughStorage.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

void AvailabilityModel.status.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)(v1 + 8);
  *(unsigned char *)(a1 + 8) = v2;
}

BOOL AvailabilityModel.deviceIsOptedIn.getter()
{
  unint64_t v1 = *(void *)(v0 + 32);
  BOOL v2 = (*(unsigned char *)(v0 + 16) & 1) != 0 || (*(unsigned char *)(v0 + 8) & 0x80) == 0;
  uint64_t v3 = *(void *)(v0 + 24);
  if (qword_1E979E470 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A8D59A80();
  __swift_project_value_buffer(v4, (uint64_t)qword_1E979F060);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59F00();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v10 = v8;
    *(_DWORD *)uint64_t v7 = 136446466;
    swift_bridgeObjectRetain();
    sub_1A8C90120(v3, v1, &v10);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 1026;
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v5, v6, "[%{public}s] Returning deviceIsOptedIn value: %{BOOL,public}d", (uint8_t *)v7, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v2;
}

uint64_t AvailabilityModel.serverGrantedAccess.getter()
{
  uint64_t v2 = *(void *)(v0 + 24);
  unint64_t v1 = *(void *)(v0 + 32);
  if ((*(void *)(v0 + 8) & 0x110) != 0) {
    uint64_t v3 = *(unsigned __int8 *)(v0 + 16);
  }
  else {
    uint64_t v3 = 1;
  }
  if (qword_1E979E470 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A8D59A80();
  __swift_project_value_buffer(v4, (uint64_t)qword_1E979F060);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59F00();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v12 = v8;
    *(_DWORD *)uint64_t v7 = 136446722;
    swift_bridgeObjectRetain();
    sub_1A8C90120(v2, v1, &v12);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 1026;
    sub_1A8D59FE0();
    *(_WORD *)(v7 + 18) = 2082;
    uint64_t v9 = AvailabilityStatus.description.getter();
    sub_1A8C90120(v9, v10, &v12);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A8C7F000, v5, v6, "[%{public}s] Returning serverGrantedAccess value: %{BOOL,public}d, from status %{public}s", (uint8_t *)v7, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v3;
}

void sub_1A8C9C118(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)a2;
  char v6 = *(unsigned char *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 9);
  uint64_t v8 = sub_1A8D59720();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8D59710();
  uint64_t v13 = sub_1A8D59700();
  unint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  uint64_t v17 = sub_1A8C91D0C(8, v13, v15, v16);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = MEMORY[0x1AD0E5BA0](v17, v19, v21, v23);
  unint64_t v26 = v25;
  swift_bridgeObjectRelease();
  if (v7)
  {
    swift_bridgeObjectRetain();
    id v27 = objc_msgSend(a1, sel_status);
    uint64_t v28 = (uint64_t)v27;
    if (!v27)
    {
LABEL_5:
      int v29 = 1;
      goto LABEL_9;
    }
    if (v27 == (id)2)
    {
      uint64_t v28 = (uint64_t)objc_msgSend(a1, sel_unavailabiltyReasons);
      int v29 = 0;
    }
    else
    {
      if (v27 == (id)1) {
        goto LABEL_5;
      }
      int v29 = 0;
      uint64_t v28 = 512;
    }
  }
  else
  {
    int v29 = v6 & 1;
    swift_bridgeObjectRetain();
    uint64_t v28 = v5;
  }
LABEL_9:
  char v63 = v29;
  unsigned __int8 v66 = objc_msgSend(a1, sel_shouldShowGM);
  unsigned __int8 v64 = objc_msgSend(a1, sel_deviceHasEnoughStorage);
  unsigned __int8 v65 = objc_msgSend(a1, sel_unableToFetchAvailability);
  if (v7)
  {
    unint64_t v30 = 0xE300000000000000;
    uint64_t v31 = 7104878;
  }
  else
  {
    uint64_t v31 = sub_1A8C9C634(v5, v6 & 1);
    unint64_t v30 = v32;
  }
  int v58 = v29;
  if (qword_1E979E470 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_1A8D59A80();
  __swift_project_value_buffer(v33, (uint64_t)qword_1E979F060);
  id v34 = a1;
  swift_bridgeObjectRetain();
  id v35 = v34;
  swift_bridgeObjectRetain();
  id v36 = sub_1A8D59A60();
  os_log_type_t v37 = sub_1A8D59F00();
  int v38 = v37;
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v59 = v28;
    uint64_t v40 = v39;
    uint64_t v41 = swift_slowAlloc();
    os_log_t v55 = v36;
    uint64_t v42 = (void *)v41;
    uint64_t v56 = swift_slowAlloc();
    uint64_t v62 = v56;
    *(_DWORD *)uint64_t v40 = 136446978;
    int v54 = v38;
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_1A8C90120(v24, v26, &v62);
    uint64_t v53 = v31;
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v40 + 12) = 2114;
    uint64_t v57 = v24;
    uint64_t v60 = (uint64_t)v35;
    id v43 = v35;
    sub_1A8D59FE0();
    *uint64_t v42 = v35;
    uint64_t v44 = v42;

    *(_WORD *)(v40 + 22) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_1A8C90120(v53, v30, &v62);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v40 + 32) = 2082;
    uint64_t v60 = v59;
    char v61 = v58;
    uint64_t v45 = AvailabilityStatus.description.getter();
    uint64_t v60 = sub_1A8C90120(v45, v46, &v62);
    uint64_t v24 = v57;
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    os_log_t v47 = v55;
    _os_log_impl(&dword_1A8C7F000, v55, (os_log_type_t)v54, "[%{public}s] Initialized AvailabilityModel using csfAvailability %{public}@, and status %{public}s. Resulting status: %{public}s", (uint8_t *)v40, 0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v44, -1, -1);
    uint64_t v48 = v56;
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v48, -1, -1);
    uint64_t v49 = v40;
    uint64_t v28 = v59;
    MEMORY[0x1AD0E6EB0](v49, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  unsigned __int8 v50 = v65;
  unsigned __int8 v51 = v64;
  char v52 = v63;
  *(unsigned char *)a3 = v66;
  *(unsigned char *)(a3 + 1) = v50;
  *(unsigned char *)(a3 + 2) = v51;
  *(void *)(a3 + 8) = v28;
  *(unsigned char *)(a3 + 16) = v52;
  *(void *)(a3 + 24) = v24;
  *(void *)(a3 + 32) = v26;
}

uint64_t sub_1A8C9C634(uint64_t a1, char a2)
{
  __int16 v2 = a1;
  if (a2)
  {
    if (a1) {
      return 0x646574696D696CLL;
    }
    else {
      return 0x6C62616C69617661;
    }
  }
  else
  {
    sub_1A8D5A0C0();
    swift_bridgeObjectRelease();
    CSFUnavailabilityReasons.description.getter(v2);
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    return 0xD000000000000016;
  }
}

uint64_t AvailabilityModel.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  int v2 = *(unsigned __int8 *)(v0 + 16);
  sub_1A8D5A0C0();
  sub_1A8D59CA0();
  swift_bridgeObjectRetain();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  sub_1A8D59CA0();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  sub_1A8D59CA0();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  sub_1A8D59CA0();
  if (v2 != 1)
  {
    sub_1A8D5A0C0();
    swift_bridgeObjectRelease();
    CSFUnavailabilityReasons.description.getter(v1);
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
  }
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t AvailabilityModel.hash(into:)()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1A8D5A4C0();
  sub_1A8D5A4C0();
  sub_1A8D5A4C0();
  if (v1 != 1) {
    sub_1A8D5A4B0();
  }
  sub_1A8D5A4B0();
  swift_bridgeObjectRetain();
  sub_1A8D59C80();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A8C9C9D0(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0x737574617473;
      break;
    case 4:
      unint64_t result = 25705;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1A8C9CA7C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A8C9CA90()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8C9CAD8()
{
  return sub_1A8D5A4B0();
}

uint64_t sub_1A8C9CB04()
{
  return sub_1A8D5A4D0();
}

unint64_t sub_1A8C9CB48()
{
  return sub_1A8C9C9D0(*v0);
}

uint64_t sub_1A8C9CB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A8C9E408(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A8C9CB78()
{
  return 0;
}

void sub_1A8C9CB84(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1A8C9CB90(uint64_t a1)
{
  unint64_t v2 = sub_1A8C9DC54();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8C9CBCC(uint64_t a1)
{
  unint64_t v2 = sub_1A8C9DC54();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AvailabilityModel.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979E610);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *(unsigned __int8 *)(v1 + 1);
  int v17 = *(unsigned __int8 *)(v1 + 2);
  int v18 = v9;
  uint64_t v16 = *(void *)(v1 + 8);
  int v15 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  v14[1] = *(void *)(v1 + 32);
  v14[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8C9DC54();
  sub_1A8D5A510();
  char v25 = 0;
  sub_1A8D5A330();
  if (!v2)
  {
    char v11 = v15;
    uint64_t v12 = v16;
    char v24 = 1;
    sub_1A8D5A330();
    char v23 = 2;
    sub_1A8D5A330();
    uint64_t v19 = v12;
    char v20 = v11;
    char v22 = 3;
    sub_1A8C9DCA8();
    sub_1A8D5A340();
    char v21 = 4;
    sub_1A8D5A320();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t AvailabilityModel.hashValue.getter()
{
  return sub_1A8D5A4D0();
}

uint64_t AvailabilityModel.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  os_log_type_t v37 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979E628);
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A8D59720();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8D59710();
  uint64_t v13 = sub_1A8D59700();
  unint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  uint64_t v17 = sub_1A8C91D0C(8, v13, v15, v16);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  MEMORY[0x1AD0E5BA0](v17, v19, v21, v23);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8C9DC54();
  sub_1A8D5A4F0();
  if (!v2)
  {
    uint64_t v24 = v38;
    char v45 = 0;
    char v25 = sub_1A8D5A2A0();
    char v44 = 1;
    int v36 = sub_1A8D5A2A0();
    char v43 = 2;
    int v35 = sub_1A8D5A2A0();
    char v42 = 3;
    sub_1A8C9DED8();
    sub_1A8D5A2B0();
    uint64_t v27 = v39;
    int v34 = v40;
    char v41 = 4;
    uint64_t v28 = sub_1A8D5A290();
    uint64_t v30 = v29;
    int v33 = v25 & 1;
    v35 &= 1u;
    v36 &= 1u;
    uint64_t v31 = v28;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v32 = v37;
    *os_log_type_t v37 = v33;
    v32[1] = v36;
    _OWORD v32[2] = v35;
    *((void *)v32 + 1) = v27;
    v32[16] = v34;
    *((void *)v32 + 3) = v31;
    *((void *)v32 + 4) = v30;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A8C9D260()
{
  return *(unsigned __int8 *)(v0 + 2);
}

void sub_1A8C9D270(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)(v1 + 8);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t sub_1A8C9D284()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8C9D2FC()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8C9D36C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AvailabilityModel.init(from:)(a1, a2);
}

uint64_t sub_1A8C9D384(void *a1)
{
  return AvailabilityModel.encode(to:)(a1);
}

unint64_t sub_1A8C9D3A4()
{
  unint64_t result = qword_1EB5E9D80;
  if (!qword_1EB5E9D80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB5E9DB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9D80);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

char *sub_1A8C9D448(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1E979E678);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A8C9DCFC(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A8C9D544(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEB0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A8C9DDE4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A8C9D654(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A8C9D7CC(a1, a2, a3, a4, &qword_1E979E660, MEMORY[0x1F418AEB0], MEMORY[0x1F418AE98]);
}

void *sub_1A8C9D670(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E979E668);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A8C9E638(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A8C9D798(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A8C9D7CC(a1, a2, a3, a4, (uint64_t *)&unk_1E979E8F0, (uint64_t (*)(void))type metadata accessor for WaitlistCacheBox, (uint64_t (*)(void))type metadata accessor for WaitlistCacheBox);
}

uint64_t sub_1A8C9D7CC(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1A8D5A1A0();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1A8C9E748(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_1A8C9DA4C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A8C9D7CC(a1, a2, a3, a4, &qword_1E979E658, (uint64_t (*)(void))type metadata accessor for DefaultsMigrator.Migration, (uint64_t (*)(void))type metadata accessor for DefaultsMigrator.Migration);
}

uint64_t sub_1A8C9DA80(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1A8C9DAAC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1A8C9DAD4@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

void *sub_1A8C9DB04(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_1A8D5A200();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t _s25CloudSubscriptionFeatures17AvailabilityModelV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t result = 0;
  if (*a1 == *a2 && ((a1[1] ^ a2[1]) & 1) == 0 && ((a1[2] ^ a2[2]) & 1) == 0)
  {
    uint64_t v5 = *((void *)a1 + 1);
    uint64_t v6 = *((void *)a1 + 3);
    uint64_t v7 = *((void *)a1 + 4);
    uint64_t v8 = *((void *)a2 + 1);
    if (a1[16] == 1)
    {
      if (v5)
      {
        if (v8) {
          unsigned __int8 v9 = a2[16];
        }
        else {
          unsigned __int8 v9 = 0;
        }
        if ((v9 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (v8) {
          unsigned __int8 v11 = 0;
        }
        else {
          unsigned __int8 v11 = a2[16];
        }
        if ((v11 & 1) == 0) {
          return 0;
        }
      }
    }
    else
    {
      if (v5 == v8) {
        char v10 = a2[16];
      }
      else {
        char v10 = 1;
      }
      if (v10) {
        return 0;
      }
    }
    if (v6 == *((void *)a2 + 3) && v7 == *((void *)a2 + 4)) {
      return 1;
    }
    else {
      return sub_1A8D5A390();
    }
  }
  return result;
}

unint64_t sub_1A8C9DC54()
{
  unint64_t result = qword_1E979E618;
  if (!qword_1E979E618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E618);
  }
  return result;
}

unint64_t sub_1A8C9DCA8()
{
  unint64_t result = qword_1E979E620;
  if (!qword_1E979E620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E620);
  }
  return result;
}

char *sub_1A8C9DCFC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + a1 + 32);
    uint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  unint64_t result = (char *)sub_1A8D5A200();
  __break(1u);
  return result;
}

uint64_t sub_1A8C9DDE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A8D5A200();
  __break(1u);
  return result;
}

unint64_t sub_1A8C9DED8()
{
  unint64_t result = qword_1E979E630;
  if (!qword_1E979E630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E630);
  }
  return result;
}

uint64_t sub_1A8C9DF2C()
{
  return sub_1A8C9E5F4(&qword_1E979E4D0);
}

unint64_t sub_1A8C9DF64()
{
  unint64_t result = qword_1E979E638;
  if (!qword_1E979E638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E638);
  }
  return result;
}

uint64_t dispatch thunk of AvailabilityModelProtocol.deviceMeetsPreconditions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AvailabilityModelProtocol.deviceHasEnoughStorage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AvailabilityModelProtocol.deviceIsOptedIn.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AvailabilityModelProtocol.serverGrantedAccess.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AvailabilityModelProtocol.status.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t destroy for AvailabilityModel()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AvailabilityModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AvailabilityModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v3 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AvailabilityModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AvailabilityModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AvailabilityModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AvailabilityModel()
{
  return &type metadata for AvailabilityModel;
}

unsigned char *storeEnumTagSinglePayload for AvailabilityModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8C9E2BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

unsigned char *sub_1A8C9E2E8(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AvailabilityModel.CodingKeys()
{
  return &type metadata for AvailabilityModel.CodingKeys;
}

unint64_t sub_1A8C9E304()
{
  unint64_t result = qword_1E979E640;
  if (!qword_1E979E640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E640);
  }
  return result;
}

unint64_t sub_1A8C9E35C()
{
  unint64_t result = qword_1E979E648;
  if (!qword_1E979E648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E648);
  }
  return result;
}

unint64_t sub_1A8C9E3B4()
{
  unint64_t result = qword_1E979E650;
  if (!qword_1E979E650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E650);
  }
  return result;
}

uint64_t sub_1A8C9E408(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000001A8D63600 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001A8D634E0 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A8D63620 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A8C9E5F4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for UnavailabilityReasons(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A8C9E638(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E979E670);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A8D5A200();
  __break(1u);
  return result;
}

uint64_t sub_1A8C9E748(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1A8D5A200();
  __break(1u);
  return result;
}

uint64_t Device.appleIntelligenceCapable.getter()
{
  return *v0;
}

CloudSubscriptionFeatures::Device __swiftcall Device.init()()
{
  uint64_t v1 = v0;
  id v2 = (id)MobileGestalt_get_current_device();
  if (v2)
  {
    int v3 = v2;
    char deviceSupportsGenerativeModelSystems = MobileGestalt_get_deviceSupportsGenerativeModelSystems();

    *uint64_t v1 = deviceSupportsGenerativeModelSystems;
  }
  else
  {
    __break(1u);
  }
  return (CloudSubscriptionFeatures::Device)v2;
}

uint64_t dispatch thunk of DeviceCapabilities.appleIntelligenceCapable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t getEnumTagSinglePayload for Device(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Device(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8C9EA7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Device()
{
  return &type metadata for Device;
}

uint64_t sub_1A8C9EAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *BOOL v7 = v3;
  v7[1] = sub_1A8C9EBB8;
  return v9(a1, a2, a3);
}

uint64_t sub_1A8C9EBB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *v3;
  swift_task_dealloc();
  BOOL v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  return v7(a1, a2, a3);
}

uint64_t sub_1A8C9ECCC(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  long long v13 = *a2;
  uint64_t v8 = *((void *)a2 + 2);
  uint64_t v9 = *((void *)a2 + 3);
  char v10 = *((unsigned char *)a2 + 32);
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v4 + 56) = v11;
  *(_OWORD *)(v4 + 16) = v13;
  *(void *)(v4 + 32) = v8;
  *(void *)(v4 + 40) = v9;
  *(unsigned char *)(v4 + 48) = v10;
  *uint64_t v11 = v4;
  v11[1] = sub_1A8C9EE00;
  return v14(a1, v4 + 16, a3, a4);
}

uint64_t sub_1A8C9EE00()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A8C9EEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1A8C9EF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1A8C81994;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1A8C9F018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1A8C9F040(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v24 = MEMORY[0x1E4FBC860];
  sub_1A8CB6294(0, v1, 0);
  uint64_t v2 = v24;
  uint64_t result = sub_1A8CA1860(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v20 = v1;
  int v21 = v5;
  uint64_t v22 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v23 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    sub_1A8D59CA0();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v12 = *(void *)(v24 + 16);
    unint64_t v13 = *(void *)(v24 + 24);
    if (v12 >= v13 >> 1) {
      uint64_t result = sub_1A8CB6294(v13 > 1, v12 + 1, 1);
    }
    *(void *)(v24 + 16) = v12 + 1;
    uint64_t v14 = v24 + 16 * v12;
    *(void *)(v14 + 32) = 8237;
    *(void *)(v14 + 40) = 0xE200000000000000;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v15 = *(void *)(v22 + 8 * v11);
    if ((v15 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v21;
    if (*(_DWORD *)(a1 + 36) != v21) {
      goto LABEL_27;
    }
    unint64_t v16 = v15 & (-2 << (v6 & 0x3F));
    if (v16)
    {
      int64_t v9 = __clz(__rbit64(v16)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v20;
    }
    else
    {
      unint64_t v17 = v11 + 1;
      unint64_t v18 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v20;
      if (v11 + 1 < v18)
      {
        unint64_t v19 = *(void *)(v22 + 8 * v17);
        if (v19)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v19)) + (v17 << 6);
        }
        else
        {
          while (v18 - 2 != v11)
          {
            unint64_t v19 = *(void *)(a1 + 80 + 8 * v11++);
            if (v19)
            {
              unint64_t v17 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v23 + 1;
    uint64_t v6 = v9;
    if (v23 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A8C9F2C0(uint64_t a1, unint64_t a2)
{
  uint64_t result = 0x3E7974706D653CLL;
  switch(a2 >> 62)
  {
    case 1uLL:
      if ((int)a1 != a1 >> 32) {
        goto LABEL_7;
      }
      break;
    case 2uLL:
      if (*(void *)(a1 + 16) != *(void *)(a1 + 24)) {
        goto LABEL_7;
      }
      break;
    case 3uLL:
      return result;
    default:
      if ((a2 & 0xFF000000000000) != 0)
      {
LABEL_7:
        uint64_t v4 = sub_1A8D59C30();
        MEMORY[0x1F4188790](v4 - 8, v5);
        sub_1A8D59C20();
        uint64_t result = sub_1A8D59C10();
        if (!v6) {
          uint64_t result = 0xD000000000000017;
        }
      }
      break;
  }
  return result;
}

unint64_t sub_1A8C9F3E4()
{
  return 0xD000000000000010;
}

uint64_t sub_1A8C9F484(uint64_t a1)
{
  v2[29] = a1;
  v2[30] = v1;
  v2[31] = type metadata accessor for NetworkRequest();
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8C9F570, 0, 0);
}

uint64_t sub_1A8C9F570()
{
  char v25 = v0;
  uint64_t v1 = sub_1A8D596F0();
  v0[40] = v1;
  v0[41] = *(void *)(v1 - 8);
  v0[42] = swift_task_alloc();
  sub_1A8D596E0();
  if (qword_1EB5E92F0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[30];
  uint64_t v4 = sub_1A8D59A80();
  v0[43] = __swift_project_value_buffer(v4, (uint64_t)qword_1EB5E92D8);
  sub_1A8C90684(v3, v2);
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59F00();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = v0[39];
  if (v7)
  {
    uint64_t v9 = v0[38];
    int64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    v24[0] = v23;
    *(_DWORD *)int64_t v10 = 136446210;
    sub_1A8C90684(v8, v9);
    sub_1A8D5A0C0();
    swift_bridgeObjectRelease();
    v24[1] = 0xD000000000000010;
    v24[2] = 0x80000001A8D63760;
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    sub_1A8D59CA0();
    sub_1A8C906E8(v9);
    v0[28] = sub_1A8C90120(0xD000000000000010, 0x80000001A8D63760, v24);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    sub_1A8C906E8(v8);
    _os_log_impl(&dword_1A8C7F000, v5, v6, "%{public}s Creating network request.", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v23, -1, -1);
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
  }
  else
  {
    sub_1A8C906E8(v0[39]);
  }

  uint64_t v12 = v0[30];
  uint64_t v11 = v0[31];
  uint64_t v13 = sub_1A8D59350();
  v0[44] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v0[45] = v14;
  v0[46] = *(void *)(v14 + 64);
  v0[47] = swift_task_alloc();
  uint64_t v15 = __swift_project_boxed_opaque_existential_1((void *)(v12 + 56), *(void *)(v12 + 80));
  uint64_t v16 = swift_task_alloc();
  v0[48] = v16;
  uint64_t v17 = v12 + *(int *)(v11 + 28);
  uint64_t v18 = type metadata accessor for BAARequestSigner();
  v0[5] = v18;
  v0[6] = (uint64_t)&off_1EFF54930;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_1A8C8D028(v17, (uint64_t)boxed_opaque_existential_1);
  int64_t v20 = (char *)boxed_opaque_existential_1 + *(int *)(v18 + 20);
  *((void *)v20 + 3) = &type metadata for DeviceIdentityCertificateFetcher;
  *((void *)v20 + 4) = &off_1EFF55098;
  sub_1A8C8D974((uint64_t)v15, (uint64_t)(v0 + 7));
  int v21 = (void *)swift_task_alloc();
  v0[49] = (uint64_t)v21;
  *int v21 = v0;
  v21[1] = sub_1A8C9F97C;
  return sub_1A8CA51AC(v16, (uint64_t)(v0 + 2));
}

uint64_t sub_1A8C9F97C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 400) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1A8CA02F8;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v2 + 16);
    uint64_t v3 = sub_1A8C9FA98;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A8C9FA98()
{
  id v74 = v0;
  (*(void (**)(void, void, void))(v0[45] + 32))(v0[47], v0[48], v0[44]);
  swift_task_dealloc();
  uint64_t v1 = sub_1A8D592E0();
  if (v1)
  {
    uint64_t v2 = v1;
    if (*(void *)(v1 + 16) && (unint64_t v3 = sub_1A8C90B9C(0xD00000000000001FLL, 0x80000001A8D63780), (v4 & 1) != 0))
    {
      uint64_t v5 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v3);
      uint64_t v7 = *v5;
      uint64_t v6 = v5[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v6 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  v0[51] = v7;
  v0[52] = v6;
  uint64_t v8 = sub_1A8D592E0();
  if (v8)
  {
    uint64_t v9 = v8;
    if (*(void *)(v8 + 16) && (unint64_t v10 = sub_1A8C90B9C(0xD00000000000001DLL, 0x80000001A8D637A0), (v11 & 1) != 0))
    {
      uint64_t v12 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v10);
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v13 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v13 = 0;
  }
  v0[53] = v14;
  v0[54] = v13;
  uint64_t v15 = v0[47];
  uint64_t v16 = v0[44];
  uint64_t v17 = v0[45];
  sub_1A8C90684(v0[30], v0[36]);
  uint64_t v18 = swift_task_alloc();
  unint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  uint64_t v70 = v18;
  v19(v18, v15, v16);
  uint64_t v20 = swift_task_alloc();
  v19(v20, v15, v16);
  uint64_t v21 = swift_task_alloc();
  v19(v21, v15, v16);
  uint64_t v22 = sub_1A8D59A60();
  os_log_type_t v23 = sub_1A8D59F00();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v25 = v0[44];
  uint64_t v26 = v0[45];
  if (v24)
  {
    os_log_type_t v65 = v23;
    os_log_t log = v22;
    uint64_t v67 = v21;
    uint64_t v27 = v0[38];
    uint64_t v28 = v0[36];
    uint64_t v29 = swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    uint64_t v71 = v64;
    *(_DWORD *)uint64_t v29 = 136446978;
    sub_1A8C90684(v28, v27);
    sub_1A8D5A0C0();
    swift_bridgeObjectRelease();
    unint64_t v72 = 0xD000000000000010;
    unint64_t v73 = 0x80000001A8D63760;
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    sub_1A8D59CA0();
    sub_1A8C906E8(v27);
    v0[22] = sub_1A8C90120(0xD000000000000010, 0x80000001A8D63760, &v71);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    sub_1A8C906E8(v28);
    *(_WORD *)(v29 + 12) = 2082;
    sub_1A8CA1814();
    uint64_t v30 = sub_1A8D5A360();
    v0[23] = sub_1A8C90120(v30, v31, &v71);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    unint64_t v32 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v32(v70, v25);
    *(_WORD *)(v29 + 22) = 2080;
    uint64_t v33 = sub_1A8D592E0();
    if (v33)
    {
      uint64_t v34 = sub_1A8C9F040(v33);
      swift_bridgeObjectRelease();
      v0[27] = v34;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9DB0);
      sub_1A8C9D3A4();
      uint64_t v35 = sub_1A8D59B70();
      unint64_t v37 = v36;
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v37 = 0xE500000000000000;
      uint64_t v35 = 0x3E6C696E3CLL;
    }
    uint64_t v38 = v0[44];
    v0[24] = sub_1A8C90120(v35, v37, &v71);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    v32(v20, v38);
    *(_WORD *)(v29 + 32) = 2080;
    uint64_t v39 = sub_1A8D59330();
    if (v40 >> 60 == 15)
    {
      unint64_t v41 = 0xE500000000000000;
      uint64_t v42 = 0x3E6C696E3CLL;
    }
    else
    {
      uint64_t v43 = v39;
      unint64_t v44 = v40;
      uint64_t v45 = sub_1A8C9F2C0(v39, v40);
      unint64_t v41 = v46;
      sub_1A8C93C84(v43, v44);
      uint64_t v42 = v45;
    }
    uint64_t v47 = v0[44];
    v0[25] = sub_1A8C90120(v42, v41, &v71);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    v32(v67, v47);
    _os_log_impl(&dword_1A8C7F000, log, v65, "%{public}s Created network request: \"%{public}s\" with headers\n%s\nwith body: %s", (uint8_t *)v29, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v64, -1, -1);
    MEMORY[0x1AD0E6EB0](v29, -1, -1);
  }
  else
  {
    sub_1A8C906E8(v0[36]);
    unint64_t v32 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v32(v70, v25);
    v32(v20, v25);
    v32(v21, v25);
  }
  v0[55] = v32;
  uint64_t v48 = v0[35];
  uint64_t v49 = v0[30];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1A8C90684(v49, v48);
  unsigned __int8 v50 = sub_1A8D59A60();
  os_log_type_t v51 = sub_1A8D59F00();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = v0[38];
    uint64_t v53 = v0[35];
    uint64_t v68 = v53;
    int v54 = (uint8_t *)swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    uint64_t v71 = v55;
    *(_DWORD *)int v54 = 136446210;
    sub_1A8C90684(v53, v52);
    unint64_t v72 = 0;
    unint64_t v73 = 0xE000000000000000;
    sub_1A8D5A0C0();
    swift_bridgeObjectRelease();
    unint64_t v72 = 0xD000000000000010;
    unint64_t v73 = 0x80000001A8D63760;
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    sub_1A8D59CA0();
    uint64_t v56 = v72;
    unint64_t v57 = v73;
    sub_1A8C906E8(v52);
    v0[21] = sub_1A8C90120(v56, v57, &v71);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    sub_1A8C906E8(v68);
    _os_log_impl(&dword_1A8C7F000, v50, v51, "%{public}s Sending network request.", v54, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v55, -1, -1);
    MEMORY[0x1AD0E6EB0](v54, -1, -1);
  }
  else
  {
    sub_1A8C906E8(v0[35]);
  }

  int v58 = (void *)v0[30];
  uint64_t v59 = v58[5];
  uint64_t v60 = v58[6];
  __swift_project_boxed_opaque_existential_1(v58 + 2, v59);
  uint64_t v69 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 + 8) + **(int **)(v60 + 8));
  char v61 = (void *)swift_task_alloc();
  v0[56] = v61;
  *char v61 = v0;
  v61[1] = sub_1A8CA0684;
  uint64_t v62 = v0[47];
  return v69(v62, v59, v60);
}

uint64_t sub_1A8CA02F8()
{
  BOOL v24 = v0;
  uint64_t v1 = (void *)v0[50];
  uint64_t v2 = v0[37];
  uint64_t v3 = v0[30];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  sub_1A8C90684(v3, v2);
  id v4 = v1;
  id v5 = v1;
  uint64_t v6 = sub_1A8D59A60();
  os_log_type_t v7 = sub_1A8D59EE0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (void *)v0[50];
    uint64_t v9 = v0[37];
    uint64_t v10 = v0[38];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v23[0] = v22;
    *(_DWORD *)uint64_t v11 = 136446466;
    sub_1A8C90684(v9, v10);
    sub_1A8D5A0C0();
    swift_bridgeObjectRelease();
    v23[1] = 0xD000000000000010;
    v23[2] = 0x80000001A8D63760;
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    sub_1A8D59CA0();
    sub_1A8C906E8(v10);
    v0[12] = sub_1A8C90120(0xD000000000000010, 0x80000001A8D63760, v23);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    sub_1A8C906E8(v9);
    *(_WORD *)(v11 + 12) = 2114;
    id v13 = v8;
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    v0[13] = v14;
    sub_1A8D59FE0();
    *uint64_t v12 = v14;

    _os_log_impl(&dword_1A8C7F000, v6, v7, "%{public}s Error creating request with error: %{public}@", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v22, -1, -1);
    MEMORY[0x1AD0E6EB0](v11, -1, -1);
  }
  else
  {
    uint64_t v15 = (void *)v0[50];
    sub_1A8C906E8(v0[37]);
  }
  swift_willThrow();
  uint64_t v17 = v0[41];
  uint64_t v16 = v0[42];
  uint64_t v18 = v0[40];
  uint64_t v19 = v0[30];
  swift_task_dealloc();
  sub_1A8CA13B8(v16, v19);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1A8CA0684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = (void *)*v4;
  v5[57] = a1;
  v5[58] = a2;
  v5[59] = a3;
  v5[60] = v3;
  swift_task_dealloc();
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1A8CA1020;
  }
  else
  {
    uint64_t v6 = sub_1A8CA07B0;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1A8CA07B0()
{
  unint64_t v73 = v0;
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  unint64_t v2 = v0[58];
  uint64_t v3 = (void *)v0[59];
  uint64_t v4 = v0[57];
  if (v1)
  {
    uint64_t v68 = (void *)v1;
    sub_1A8C90684(v0[30], v0[34]);
    sub_1A8CA17BC(v4, v2);
    id v5 = v3;
    sub_1A8CA17BC(v4, v2);
    id v6 = v5;
    sub_1A8CA17BC(v4, v2);
    os_log_type_t v7 = sub_1A8D59A60();
    os_log_type_t v8 = sub_1A8D59F00();
    BOOL v9 = os_log_type_enabled(v7, v8);
    unint64_t v11 = v0[58];
    uint64_t v10 = (void *)v0[59];
    uint64_t v12 = v0[57];
    if (v9)
    {
      uint64_t v13 = v0[38];
      uint64_t v14 = v0[34];
      uint64_t v15 = swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      uint64_t v70 = v65;
      *(_DWORD *)uint64_t v15 = 136446722;
      sub_1A8C90684(v14, v13);
      sub_1A8D5A0C0();
      swift_bridgeObjectRelease();
      unint64_t v71 = 0xD000000000000010;
      unint64_t v72 = 0x80000001A8D63760;
      swift_bridgeObjectRetain();
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      sub_1A8D59CA0();
      sub_1A8C906E8(v13);
      v0[18] = sub_1A8C90120(0xD000000000000010, 0x80000001A8D63760, &v70);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      sub_1A8C906E8(v14);
      *(_WORD *)(v15 + 12) = 2050;
      id v16 = objc_msgSend(v68, sel_statusCode);

      v0[19] = v16;
      sub_1A8D59FE0();

      *(_WORD *)(v15 + 22) = 2080;
      uint64_t v17 = sub_1A8C9F2C0(v12, v11);
      v0[20] = sub_1A8C90120(v17, v18, &v70);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      sub_1A8C93C98(v12, v11);
      sub_1A8C93C98(v12, v11);
      _os_log_impl(&dword_1A8C7F000, v7, v8, "%{public}s Request completed with HTTP status %{public}ld\nwith data: %s", (uint8_t *)v15, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v65, -1, -1);
      MEMORY[0x1AD0E6EB0](v15, -1, -1);

      uint64_t v19 = 0x1E5D5F000;
    }
    else
    {
      uint64_t v33 = v0[34];

      sub_1A8C906E8(v33);
      sub_1A8C93C98(v12, v11);
      sub_1A8C93C98(v12, v11);

      uint64_t v19 = 0x1F62CB000uLL;
    }
    unint64_t v34 = v0[58];
    uint64_t v35 = v0[57];
    uint64_t v60 = (void (*)(uint64_t, uint64_t))v0[55];
    uint64_t v37 = v0[53];
    unint64_t v36 = v0[54];
    uint64_t v39 = v0[51];
    unint64_t v38 = v0[52];
    uint64_t v40 = v0[47];
    uint64_t v41 = v0[44];
    uint64_t v42 = v0[41];
    uint64_t v43 = v0[42];
    uint64_t v61 = v0[40];
    if (!v38) {
      uint64_t v39 = 0x756F6620746F4E3CLL;
    }
    uint64_t v67 = v39;
    if (!v38) {
      unint64_t v38 = 0xEB000000003E646ELL;
    }
    uint64_t v45 = v0[29];
    uint64_t v44 = v0[30];
    if (!v36) {
      uint64_t v37 = 0x756F6620746F4E3CLL;
    }
    *(void *)os_log_type_t type = v37;
    unint64_t v66 = v38;
    if (!v36) {
      unint64_t v36 = 0xEB000000003E646ELL;
    }
    unint64_t v63 = v36;
    id v62 = objc_msgSend(v68, *(SEL *)(v19 + 352), v0[59]);

    sub_1A8C93C98(v35, v34);
    v60(v40, v41);
    swift_task_dealloc();
    sub_1A8CA13B8(v43, v44);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v61);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    *(void *)uint64_t v45 = v35;
    *(void *)(v45 + 8) = v34;
    *(void *)(v45 + 16) = v68;
    *(void *)(v45 + 24) = v67;
    *(void *)(v45 + 32) = v66;
    *(void *)(v45 + 40) = *(void *)type;
    *(void *)(v45 + 48) = v63;
    *(void *)(v45 + 56) = v62;
    *(unsigned char *)(v45 + 64) = 0;
    unint64_t v46 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    uint64_t v20 = v0[33];
    uint64_t v21 = v0[30];
    id v22 = v3;
    sub_1A8CA17BC(v4, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A8C93C98(v4, v2);
    sub_1A8C90684(v21, v20);
    id v23 = v22;
    BOOL v24 = sub_1A8D59A60();
    os_log_type_t v25 = sub_1A8D59EE0();
    BOOL v26 = os_log_type_enabled(v24, v25);
    uint64_t v27 = (void *)v0[59];
    if (v26)
    {
      uint64_t v28 = v0[38];
      uint64_t v29 = v0[33];
      uint64_t v30 = swift_slowAlloc();
      unint64_t v31 = (void *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      uint64_t v70 = v69;
      *(_DWORD *)uint64_t v30 = 136446466;
      sub_1A8C90684(v29, v28);
      sub_1A8D5A0C0();
      swift_bridgeObjectRelease();
      unint64_t v71 = 0xD000000000000010;
      unint64_t v72 = 0x80000001A8D63760;
      swift_bridgeObjectRetain();
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      sub_1A8D59CA0();
      sub_1A8C906E8(v28);
      v0[16] = sub_1A8C90120(0xD000000000000010, 0x80000001A8D63760, &v70);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      sub_1A8C906E8(v29);
      *(_WORD *)(v30 + 12) = 2112;
      v0[17] = v27;
      id v32 = v27;
      sub_1A8D59FE0();
      *unint64_t v31 = v27;

      _os_log_impl(&dword_1A8C7F000, v24, v25, "%{public}s Invalid response type: %@", (uint8_t *)v30, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v31, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v69, -1, -1);
      MEMORY[0x1AD0E6EB0](v30, -1, -1);
    }
    else
    {
      sub_1A8C906E8(v0[33]);
    }
    unint64_t v47 = v0[58];
    uint64_t v48 = (void *)v0[59];
    uint64_t v49 = v0[57];
    unsigned __int8 v50 = (void (*)(uint64_t, uint64_t))v0[55];
    uint64_t v51 = v0[47];
    uint64_t v52 = v0[44];
    sub_1A8C8C7B0();
    swift_allocError();
    *uint64_t v53 = 2;
    swift_willThrow();

    sub_1A8C93C98(v49, v47);
    v50(v51, v52);
    uint64_t v55 = v0[41];
    uint64_t v54 = v0[42];
    uint64_t v56 = v0[40];
    uint64_t v57 = v0[30];
    swift_task_dealloc();
    sub_1A8CA13B8(v54, v57);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v46 = (uint64_t (*)(void))v0[1];
  }
  return v46();
}

uint64_t sub_1A8CA1020()
{
  os_log_type_t v25 = v0;
  uint64_t v1 = (void *)v0[60];
  sub_1A8C90684(v0[30], v0[32]);
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1A8D59A60();
  os_log_type_t v5 = sub_1A8D59EE0();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (void *)v0[60];
    uint64_t v7 = v0[38];
    uint64_t v8 = v0[32];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    v24[0] = v23;
    *(_DWORD *)uint64_t v9 = 136446466;
    sub_1A8C90684(v8, v7);
    sub_1A8D5A0C0();
    swift_bridgeObjectRelease();
    v24[1] = 0xD000000000000010;
    v24[2] = 0x80000001A8D63760;
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    sub_1A8D59CA0();
    sub_1A8C906E8(v7);
    v0[14] = sub_1A8C90120(0xD000000000000010, 0x80000001A8D63760, v24);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    sub_1A8C906E8(v8);
    *(_WORD *)(v9 + 12) = 2114;
    id v11 = v6;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[15] = v12;
    sub_1A8D59FE0();
    *uint64_t v10 = v12;

    _os_log_impl(&dword_1A8C7F000, v4, v5, "%{public}s Error making network request: %{public}@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v23, -1, -1);
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
  }
  else
  {
    uint64_t v13 = (void *)v0[60];
    sub_1A8C906E8(v0[32]);
  }
  uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[55];
  uint64_t v15 = v0[47];
  uint64_t v16 = v0[44];
  swift_willThrow();
  v14(v15, v16);
  uint64_t v18 = v0[41];
  uint64_t v17 = v0[42];
  uint64_t v19 = v0[40];
  uint64_t v20 = v0[30];
  swift_task_dealloc();
  sub_1A8CA13B8(v17, v20);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

void sub_1A8CA13B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for NetworkRequest();
  uint64_t v5 = MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = sub_1A8D596F0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8D596D0();
  sub_1A8D59620();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  if (qword_1EB5E92F0 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1A8D59A80();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EB5E92D8);
  sub_1A8C90684(a2, (uint64_t)v10);
  uint64_t v19 = sub_1A8D59A60();
  os_log_type_t v20 = sub_1A8D59F00();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v28 = v22;
    *(_DWORD *)uint64_t v21 = 136446466;
    sub_1A8C90684((uint64_t)v10, (uint64_t)v7);
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_1A8D5A0C0();
    swift_bridgeObjectRelease();
    uint64_t v26 = 0xD000000000000010;
    unint64_t v27 = 0x80000001A8D63760;
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    sub_1A8D59CA0();
    uint64_t v23 = v26;
    unint64_t v24 = v27;
    sub_1A8C906E8((uint64_t)v7);
    uint64_t v26 = sub_1A8C90120(v23, v24, &v28);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    sub_1A8C906E8((uint64_t)v10);
    *(_WORD *)(v21 + 12) = 2048;
    uint64_t v26 = v17;
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v19, v20, "%{public}s Request completed in %f seconds.", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v22, -1, -1);
    MEMORY[0x1AD0E6EB0](v21, -1, -1);
  }
  else
  {
    sub_1A8C906E8((uint64_t)v10);
  }
}

uint64_t sub_1A8CA170C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1A8CA1734(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  uint64_t v5 = *a1 + 8;
  uint64_t result = sub_1A8D59FE0();
  *a1 = v5;
  return result;
}

uint64_t sub_1A8CA178C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1A8CA17BC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_1A8CA1814()
{
  unint64_t result = qword_1EB5E9470;
  if (!qword_1EB5E9470)
  {
    sub_1A8D59350();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9470);
  }
  return result;
}

uint64_t sub_1A8CA1860(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1A8CA18E8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    long long v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    uint64_t v9 = v8;
    unint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    swift_bridgeObjectRetain();
    v10(a1 + 16, (uint64_t)(a2 + 2), v9);
    long long v11 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 80) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 56, (uint64_t)(a2 + 7));
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1A8D596F0();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return a1;
}

void *sub_1A8CA1AF8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  __swift_assign_boxed_opaque_existential_1(a1 + 7, a2 + 7);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A8D596F0();
  uint64_t v10 = *(void *)(v9 - 8);
  long long v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        long long v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_1A8CA1ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (const void *)(a2 + v5);
  uint64_t v7 = (void *)(a1 + v5);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v8 = sub_1A8D596F0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    memcpy(v7, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v7, v6, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1A8CA2014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_0(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1A8D596F0();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_1A8CA21D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A8CA21E8);
}

uint64_t sub_1A8CA21E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1A8CA229C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A8CA22B0);
}

uint64_t sub_1A8CA22B0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1A8CA235C()
{
  sub_1A8C82EE4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_1A8CA2400()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  unint64_t v1 = (void *)sub_1A8D59BC0();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  type metadata accessor for DataDetectorsCache();
  unint64_t result = (void *)swift_allocObject();
  result[3] = 0xD00000000000001BLL;
  result[4] = 0x80000001A8D63870;
  if (v2)
  {
    result[2] = v2;
    qword_1E97A8B20 = (uint64_t)result;
  }
  else
  {
    unint64_t result = (void *)sub_1A8D5A1B0();
    __break(1u);
  }
  return result;
}

void sub_1A8CA24F8()
{
  uint64_t v1 = v0;
  if (qword_1EB5EAD00 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5EAC50);
  uint64_t v3 = sub_1A8D59A60();
  os_log_type_t v4 = sub_1A8D59F00();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67240192;
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v3, v4, "Updating DataDetectors cache with new shouldShowRSVPDataDetectors value %{BOOL,public}d", v5, 8u);
    MEMORY[0x1AD0E6EB0](v5, -1, -1);
  }

  uint64_t v6 = *(void **)(v1 + 16);
  uint64_t v7 = (void *)sub_1A8D59DB0();
  uint64_t v8 = (void *)sub_1A8D59BC0();
  objc_msgSend(v6, sel_setObject_forKey_inDomain_, v7, v8, *MEMORY[0x1E4F283E0]);
}

uint64_t sub_1A8CA265C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = (void *)sub_1A8D59BC0();
  id v3 = objc_msgSend(v1, sel_objectForKey_inDomain_, v2, *MEMORY[0x1E4F283E0]);

  if (v3)
  {
    sub_1A8D5A010();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1A8CA2798((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    uint64_t result = swift_dynamicCast();
    if (result) {
      return v5;
    }
  }
  else
  {
    sub_1A8CA2800((uint64_t)v7);
    return 0;
  }
  return result;
}

uint64_t sub_1A8CA2734()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 40, 7);
}

uint64_t type metadata accessor for DataDetectorsCache()
{
  return self;
}

uint64_t sub_1A8CA2798(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EA170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8CA2800(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EA170);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A8CA2860(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  id v6 = objc_msgSend(v3, sel_aa_primaryAppleAccount);
  if (!v6) {
    goto LABEL_14;
  }
  uint64_t v7 = v6;
  if (qword_1EB5E9680 != -1) {
    swift_once();
  }
  id v8 = objc_msgSend(v7, sel_propertiesForDataclass_, qword_1EB5ECCD8);

  if (!v8) {
    goto LABEL_14;
  }
  uint64_t v9 = sub_1A8D59B30();

  unint64_t v10 = sub_1A8CA2A30(v9);
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_14;
  }
  if (*(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_1A8C90B9C(a1, a2);
    if (v12)
    {
      sub_1A8C901F4(*(void *)(v10 + 56) + 32 * v11, (uint64_t)&v17);
    }
    else
    {
      long long v17 = 0u;
      long long v18 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EA170);
  if (swift_dynamicCast())
  {
    char v13 = v16 & 1;
  }
  else
  {
LABEL_14:
    sub_1A8C8C7B0();
    swift_allocError();
    *int v14 = 9;
    swift_willThrow();
  }
  return v13 & 1;
}

unint64_t sub_1A8CA2A30(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9408);
    uint64_t v2 = (void *)sub_1A8D5A1F0();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v23 = a1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(63 - v4) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v7 << 6);
      int64_t v12 = v7;
    }
    else
    {
      int64_t v13 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_37;
      }
      if (v13 >= v22)
      {
LABEL_33:
        sub_1A8C9A664();
        return (unint64_t)v2;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v13);
      int64_t v12 = v7 + 1;
      if (!v14)
      {
        int64_t v12 = v7 + 2;
        if (v7 + 2 >= v22) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v23 + 8 * v12);
        if (!v14)
        {
          int64_t v12 = v7 + 3;
          if (v7 + 3 >= v22) {
            goto LABEL_33;
          }
          unint64_t v14 = *(void *)(v23 + 8 * v12);
          if (!v14)
          {
            int64_t v12 = v7 + 4;
            if (v7 + 4 >= v22) {
              goto LABEL_33;
            }
            unint64_t v14 = *(void *)(v23 + 8 * v12);
            if (!v14)
            {
              int64_t v15 = v7 + 5;
              if (v7 + 5 >= v22) {
                goto LABEL_33;
              }
              unint64_t v14 = *(void *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v12 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_38;
                  }
                  if (v12 >= v22) {
                    goto LABEL_33;
                  }
                  unint64_t v14 = *(void *)(v23 + 8 * v12);
                  ++v15;
                  if (v14) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v10 = (v14 - 1) & v14;
      unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_1A8CA5098(*(void *)(a1 + 48) + 40 * v11, (uint64_t)v33);
    sub_1A8C901F4(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    uint64_t v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_1A8CA5098((uint64_t)v30, (uint64_t)v25);
    if (!swift_dynamicCast())
    {
      sub_1A8C8DE74((uint64_t)v30, &qword_1EB5E93F8);
      swift_bridgeObjectRelease();
      sub_1A8C9A664();
      swift_release();
      return 0;
    }
    sub_1A8C901F4((uint64_t)v31 + 8, (uint64_t)v25);
    sub_1A8C8DE74((uint64_t)v30, &qword_1EB5E93F8);
    sub_1A8C90CF8(v25, v26);
    long long v27 = v24;
    sub_1A8C90CF8(v26, v28);
    long long v16 = v27;
    sub_1A8C90CF8(v28, v29);
    sub_1A8C90CF8(v29, &v27);
    unint64_t result = sub_1A8C90B9C(v16, *((uint64_t *)&v16 + 1));
    unint64_t v17 = result;
    if (v18)
    {
      id v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *id v8 = v16;
      uint64_t v9 = (_OWORD *)(v2[7] + 32 * v17);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
      unint64_t result = (unint64_t)sub_1A8C90CF8(&v27, v9);
      goto LABEL_8;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    unint64_t result = (unint64_t)sub_1A8C90CF8(&v27, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v19 = v2[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_36;
    }
    v2[2] = v21;
LABEL_8:
    int64_t v7 = v12;
    unint64_t v5 = v10;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1A8CA2E04()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  MEMORY[0x1F4188790](v1 - 8, v2);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A8D59E10();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  int64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v0;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  id v9 = v0;
  if (v8 == 1)
  {
    sub_1A8C8DE74((uint64_t)v4, &qword_1EB5EAEA0);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    sub_1A8D59E00();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = sub_1A8D59DC0();
      uint64_t v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &unk_1E979E6A8;
  *(void *)(v13 + 24) = v7;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1A8CA3044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x1F4188298](sub_1A8CA3064, 0, 0);
}

uint64_t sub_1A8CA3064()
{
  if (sub_1A8CBE0E4(0) || sub_1A8CBE0E4(1) || sub_1A8CBE0E4(2) || sub_1A8CBE0E4(3))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 24) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_1A8CA3154;
    v1[20] = *(void *)(v0 + 16);
    uint64_t v2 = sub_1A8CA355C;
  }
  else
  {
    *(unsigned char *)(v0 + 40) = 0;
    uint64_t v2 = sub_1A8CA33BC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CA3154(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  if (a1)
  {
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v3 + 32) = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_1A8CA32B8;
    v5[10] = *(void *)(v3 + 16);
    uint64_t v6 = sub_1A8CA3BC8;
  }
  else
  {
    *(unsigned char *)(v3 + 40) = 0;
    uint64_t v6 = sub_1A8CA33BC;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1A8CA32B8(char a1)
{
  uint64_t v3 = *v1;
  swift_task_dealloc();
  *(unsigned char *)(v3 + 40) = a1;
  return MEMORY[0x1F4188298](sub_1A8CA33BC, 0, 0);
}

uint64_t sub_1A8CA33BC()
{
  if (qword_1E979E428 != -1) {
    swift_once();
  }
  sub_1A8CA24F8();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CA3454()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A8CA3494()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A8C81994;
  v3[2] = v2;
  return MEMORY[0x1F4188298](sub_1A8CA3064, 0, 0);
}

uint64_t sub_1A8CA353C()
{
  *(void *)(v1 + 160) = v0;
  return MEMORY[0x1F4188298](sub_1A8CA355C, 0, 0);
}

uint64_t sub_1A8CA355C()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  unint64_t v1 = sub_1A8C937E4();
  *(unsigned char *)(v0 + 16) = 1;
  *(void *)(v0 + 48) = v1;
  char v2 = sub_1A8D597C0();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if ((v2 & 1) != 0
    && (*(void *)(v0 + 40) = &type metadata for FeatureFlag,
        *(void *)(v0 + 48) = v1,
        *(unsigned char *)(v0 + 16) = 2,
        char v3 = sub_1A8D597C0(),
        __swift_destroy_boxed_opaque_existential_0(v0 + 16),
        (v3 & 1) != 0))
  {
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1A8D59A80();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EB5E9318);
    uint64_t v5 = sub_1A8D59A60();
    os_log_type_t v6 = sub_1A8D59F00();
    if (os_log_type_enabled(v5, v6))
    {
      int64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64_t v7 = 0;
      _os_log_impl(&dword_1A8C7F000, v5, v6, "Both runtime feature flags for rsvp are enabled, overriding setup bag values", v7, 2u);
      MEMORY[0x1AD0E6EB0](v7, -1, -1);
    }

    uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v8(1);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 160);
    *(_WORD *)(v0 + 184) = 0;
    uint64_t v11 = *(void *)(v10 + OBJC_IVAR___DaemonController_accountStore);
    *(void *)(v0 + 168) = v11;
    return MEMORY[0x1F4188298](sub_1A8CA3728, v11, 0);
  }
}

uint64_t sub_1A8CA3728()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_beginAccess();
  char v2 = *(void **)(v1 + 112);
  *(void *)(v0 + 176) = v2;
  id v3 = v2;
  return MEMORY[0x1F4188298](sub_1A8CA37B0, 0, 0);
}

uint64_t sub_1A8CA37B0()
{
  *(unsigned char *)(v0 + 184) = sub_1A8CA2860(0x62616E4570767372, 0xEB0000000064656CLL) & 1;
  char v1 = sub_1A8CA2860(0xD000000000000018, 0x80000001A8D63950);

  *(unsigned char *)(v0 + 185) = v1 & 1;
  char v2 = (unsigned char *)(v0 + 184);
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A8D59A80();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB5E9318);
  int v4 = *v2;
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59F00();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67240448;
    *(_DWORD *)(v0 + 16) = v4;
    sub_1A8D59FE0();
    *(_WORD *)(v7 + 8) = 1026;
    swift_beginAccess();
    *(_DWORD *)(v0 + 80) = *(unsigned __int8 *)(v0 + 185);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v5, v6, "setup bag results: rsvpEnabled=%{BOOL,public}d, rsvpDataDetectorsEnabled=%{BOOL,public}d", (uint8_t *)v7, 0xEu);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }

  swift_beginAccess();
  if (*v2 == 1)
  {
    swift_beginAccess();
    uint64_t v8 = *(unsigned __int8 *)(v0 + 185);
  }
  else
  {
    uint64_t v8 = 0;
  }
  id v9 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v9(v8);
}

uint64_t sub_1A8CA3BA8()
{
  *(void *)(v1 + 80) = v0;
  return MEMORY[0x1F4188298](sub_1A8CA3BC8, 0, 0);
}

uint64_t sub_1A8CA3BC8()
{
  *(void *)(v0 + 40) = &type metadata for FeatureFlag;
  unint64_t v1 = sub_1A8C937E4();
  *(unsigned char *)(v0 + 16) = 3;
  *(void *)(v0 + 48) = v1;
  char v2 = sub_1A8D597C0();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v2)
  {
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1A8D59A80();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB5E9318);
    int v4 = sub_1A8D59A60();
    os_log_type_t v5 = sub_1A8D59F00();
    if (os_log_type_enabled(v4, v5))
    {
      os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v6 = 0;
      _os_log_impl(&dword_1A8C7F000, v4, v5, "Runtime flag rsvpSubscriber is enabled, overriding feature check as true", v6, 2u);
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
    }

    uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v7(1);
  }
  else
  {
    if (qword_1EB5EAB78 != -1) {
      swift_once();
    }
    uint64_t v9 = *(void *)(v0 + 80);
    *(void *)(v0 + 88) = qword_1EB5EAB28;
    uint64_t v10 = *(void *)(v9 + OBJC_IVAR___DaemonController_accountStore);
    *(void *)(v0 + 96) = v10;
    return MEMORY[0x1F4188298](sub_1A8CA3DA4, v10, 0);
  }
}

uint64_t sub_1A8CA3DA4()
{
  uint64_t v1 = v0[12];
  swift_beginAccess();
  id v2 = *(id *)(v1 + 112);
  id v3 = objc_msgSend(v2, sel_aa_primaryAppleAccount);
  int v4 = v3;
  if (v3)
  {
    id v5 = objc_msgSend(v3, sel_aa_altDSID);

    if (v5)
    {
      int v4 = (void *)sub_1A8D59BF0();
      uint64_t v7 = v6;

      goto LABEL_7;
    }

    int v4 = 0;
  }
  else
  {
  }
  uint64_t v7 = 0;
LABEL_7:
  v0[13] = v4;
  v0[14] = v7;
  return MEMORY[0x1F4188298](sub_1A8CA3EA4, 0, 0);
}

uint64_t sub_1A8CA3EA4()
{
  uint64_t v15 = v0;
  id v1 = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(0xD000000000000016, 0x80000001A8D63910, *(uint64_t **)(v0 + 104), *(void *)(v0 + 112), 0, 0);
  swift_bridgeObjectRelease();
  if (v1)
  {
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1A8D59A80();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EB5E9318);
    id v3 = (char *)v1;
    int v4 = sub_1A8D59A60();
    os_log_type_t v5 = sub_1A8D59F00();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = v13;
      *(_DWORD *)uint64_t v6 = 136315394;
      *(void *)(v0 + 56) = sub_1A8C90120(0xD000000000000018, 0x80000001A8D63930, &v14);
      sub_1A8D59FE0();
      *(_WORD *)(v6 + 12) = 2112;
      *(void *)(v0 + 56) = v3;
      uint64_t v7 = v3;
      sub_1A8D59FE0();
      *uint64_t v12 = v1;

      _os_log_impl(&dword_1A8C7F000, v4, v5, "%s feature: %@", (uint8_t *)v6, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v12, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v13, -1, -1);
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
    }
    else
    {
    }
    uint64_t v9 = &v3[OBJC_IVAR___CloudFeature_canUse];
    swift_beginAccess();
    uint64_t v8 = *v9;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v10(v8);
}

uint64_t _sSo17CSFFeatureManagerC25CloudSubscriptionFeaturesE23urlForRSVPDataDetectors7context10Foundation3URLVSDySSypG_tFZ_0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  unint64_t v99 = a2;
  uint64_t v4 = sub_1A8D595A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v104 = v7;
  uint64_t v8 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E92A0);
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v100 = v11;
  uint64_t v12 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8D59590();
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v98 = v5 + 48;
  id v97 = v13;
  if (v13(v12, 1, v4) == 1)
  {
    sub_1A8C8DE74((uint64_t)v12, (uint64_t *)&unk_1EB5E92A0);
    uint64_t result = sub_1A8D5A1B0();
    __break(1u);
    return result;
  }
  uint64_t v103 = v5;
  uint64_t v14 = *(void (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v106 = v8;
  uint64_t v105 = v4;
  uint64_t v102 = v5 + 32;
  BOOL v101 = v14;
  v14((unint64_t)v8, v12, v4);
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v107 = a1 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  uint64_t v110 = (uint8_t *)v118;
  id v113 = (int64_t *)&v121;
  int64_t v109 = (unint64_t)(v16 + 63) >> 6;
  int64_t v96 = v109 - 1;
  uint64_t v111 = a1;
  swift_bridgeObjectRetain();
  uint64_t v19 = 0;
  unint64_t v20 = MEMORY[0x1E4FBC860];
  id v112 = (int64_t *)(MEMORY[0x1E4FBC840] + 8);
  unint64_t v108 = 0x80000001A8D639F0;
  if (!v18) {
    goto LABEL_7;
  }
LABEL_5:
  unint64_t v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  unint64_t v22 = v21 | (v19 << 6);
LABEL_6:
  uint64_t v23 = *(void *)(v111 + 56);
  long long v24 = (void *)(*(void *)(v111 + 48) + 16 * v22);
  uint64_t v25 = v24[1];
  *(void *)&long long v117 = *v24;
  *((void *)&v117 + 1) = v25;
  sub_1A8C901F4(v23 + 32 * v22, (uint64_t)v110);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1A8CA50F4((uint64_t)&v117, (uint64_t)&v119);
    if (!v120)
    {
      swift_release();
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979E6D0);
      MEMORY[0x1F4188790](v48 - 8, v49);
      uint64_t v2 = (char *)&v96 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1A8D594A0();
      uint64_t v51 = sub_1A8D594C0();
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
      int v54 = v53(v2, 1, v51);
      id v113 = &v96;
      if (v54) {
        uint64_t v55 = swift_bridgeObjectRelease();
      }
      else {
        uint64_t v55 = sub_1A8D59490();
      }
      uint64_t v57 = MEMORY[0x1F4188790](v55, v56);
      unint64_t v18 = (unint64_t)&v96 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x1F4188790](v57, v59);
      uint64_t v61 = (char *)&v96 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v62 = v53(v2, 1, v51);
      if (v62)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v103 + 56))(v61, 1, 1, v105);
      }
      else
      {
        MEMORY[0x1F4188790](v62, v63);
        uint64_t v65 = (char *)&v96 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v65, v2, v51);
        sub_1A8D594B0();
        (*(void (**)(char *, uint64_t))(v52 + 8))(v65, v51);
        if (v97(v61, 1, v105) != 1)
        {
          uint64_t v19 = v105;
          v101(v18, v61, v105);
          if (qword_1EB5EAEF8 != -1) {
            goto LABEL_57;
          }
          goto LABEL_50;
        }
      }
      sub_1A8C8DE74((uint64_t)v61, (uint64_t *)&unk_1EB5E92A0);
      if (qword_1EB5EAEF8 != -1) {
        goto LABEL_55;
      }
      goto LABEL_44;
    }
    uint64_t v115 = v119;
    uint64_t v116 = v120;
    sub_1A8C90CF8(v113, &v117);
    uint64_t v29 = sub_1A8D596F0();
    uint64_t v30 = *(void *)(v29 - 8);
    MEMORY[0x1F4188790](v29, v31);
    uint64_t v33 = (char *)&v96 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A8C901F4((uint64_t)&v117, (uint64_t)v114);
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    MEMORY[0x1F4188790](v34 - 8, v35);
    uint64_t v37 = (char *)&v96 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    int v38 = swift_dynamicCast();
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
    if (v38)
    {
      v39(v37, 0, 1, v29);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v37, 1, v29) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v33, v37, v29);
        sub_1A8D59CA0();
        sub_1A8D595F0();
        sub_1A8D59E50();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v29);
        goto LABEL_31;
      }
    }
    else
    {
      v39(v37, 1, 1, v29);
    }
    sub_1A8C8DE74((uint64_t)v37, &qword_1EB5EACF0);
    sub_1A8C901F4((uint64_t)&v117, (uint64_t)v114);
    sub_1A8D59C40();
LABEL_31:
    uint64_t v40 = sub_1A8D59460();
    uint64_t v41 = *(void *)(v40 - 8);
    MEMORY[0x1F4188790](v40, v42);
    uint64_t v44 = (char *)&v96 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A8D59450();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v20 = sub_1A8C9D654(0, *(void *)(v20 + 16) + 1, 1, v20);
    }
    unint64_t v46 = *(void *)(v20 + 16);
    unint64_t v45 = *(void *)(v20 + 24);
    if (v46 >= v45 >> 1) {
      unint64_t v20 = sub_1A8C9D654(v45 > 1, v46 + 1, 1, v20);
    }
    *(void *)(v20 + 16) = v46 + 1;
    unint64_t v47 = *(void (**)(unint64_t, char *, uint64_t))(v41 + 32);
    uint64_t v2 = (char *)(v41 + 32);
    v47(v20 + ((v2[48] + 32) & ~(unint64_t)v2[48]) + *((void *)v2 + 5) * v46, v44, v40);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v117);
    if (v18) {
      goto LABEL_5;
    }
LABEL_7:
    int64_t v26 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v26 < v109)
    {
      unint64_t v27 = *(void *)(v107 + 8 * v26);
      if (v27) {
        goto LABEL_10;
      }
      int64_t v28 = v19 + 2;
      ++v19;
      if (v26 + 1 < v109)
      {
        unint64_t v27 = *(void *)(v107 + 8 * v28);
        if (v27) {
          goto LABEL_13;
        }
        uint64_t v19 = v26 + 1;
        if (v26 + 2 < v109)
        {
          unint64_t v27 = *(void *)(v107 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_10;
          }
          int64_t v28 = v26 + 3;
          uint64_t v19 = v26 + 2;
          if (v26 + 3 < v109)
          {
            unint64_t v27 = *(void *)(v107 + 8 * v28);
            if (v27)
            {
LABEL_13:
              int64_t v26 = v28;
LABEL_10:
              unint64_t v18 = (v27 - 1) & v27;
              unint64_t v22 = __clz(__rbit64(v27)) + (v26 << 6);
              uint64_t v19 = v26;
              goto LABEL_6;
            }
            while (1)
            {
              int64_t v26 = v28 + 1;
              if (__OFADD__(v28, 1)) {
                break;
              }
              if (v26 >= v109)
              {
                uint64_t v19 = v96;
                goto LABEL_24;
              }
              unint64_t v27 = *(void *)(v107 + 8 * v26);
              ++v28;
              if (v27) {
                goto LABEL_10;
              }
            }
            __break(1u);
LABEL_57:
            swift_once();
LABEL_50:
            uint64_t v81 = sub_1A8D59A80();
            uint64_t v82 = __swift_project_value_buffer(v81, (uint64_t)qword_1EB5EAEE0);
            MEMORY[0x1F4188790](v82, v83);
            id v85 = (char *)&v96 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v86 = v103;
            (*(void (**)(char *, unint64_t, uint64_t))(v103 + 16))(v85, v18, v19);
            os_log_type_t v87 = sub_1A8D59A60();
            os_log_type_t v88 = sub_1A8D59F00();
            if (os_log_type_enabled(v87, v88))
            {
              uint64_t v89 = (uint8_t *)swift_slowAlloc();
              uint64_t v111 = swift_slowAlloc();
              uint64_t v119 = v111;
              id v112 = &v96;
              uint64_t v110 = v89;
              *(_DWORD *)uint64_t v89 = 136315138;
              int64_t v109 = (int64_t)(v89 + 4);
              uint64_t v90 = sub_1A8D59560();
              *(void *)&long long v117 = sub_1A8C90120(v90, v91, &v119);
              sub_1A8D59FE0();
              swift_bridgeObjectRelease();
              uint64_t v92 = *(void (**)(char *, uint64_t))(v86 + 8);
              v92(v85, v19);
              unint64_t v93 = v110;
              _os_log_impl(&dword_1A8C7F000, v87, v88, "Returning URL %s", v110, 0xCu);
              uint64_t v94 = v111;
              swift_arrayDestroy();
              MEMORY[0x1AD0E6EB0](v94, -1, -1);
              MEMORY[0x1AD0E6EB0](v93, -1, -1);

              v92(v106, v19);
            }
            else
            {

              id v95 = *(void (**)(char *, uint64_t))(v86 + 8);
              v95(v85, v19);
              v95(v106, v19);
            }
            v101(v99, (char *)v18, v19);
            return sub_1A8C8DE74((uint64_t)v2, &qword_1E979E6D0);
          }
        }
      }
    }
LABEL_24:
    unint64_t v18 = 0;
    memset(v118, 0, sizeof(v118));
    long long v117 = 0u;
  }
  __break(1u);
LABEL_55:
  swift_once();
LABEL_44:
  uint64_t v66 = sub_1A8D59A80();
  uint64_t v67 = __swift_project_value_buffer(v66, (uint64_t)qword_1EB5EAEE0);
  MEMORY[0x1F4188790](v67, v68);
  uint64_t v70 = (char *)&v96 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = v103;
  uint64_t v72 = v105;
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v70, v106, v105);
  unint64_t v73 = sub_1A8D59A60();
  os_log_type_t v74 = sub_1A8D59EE0();
  if (os_log_type_enabled(v73, v74))
  {
    uint64_t v75 = swift_slowAlloc();
    id v112 = &v96;
    v76 = (uint8_t *)v75;
    uint64_t v77 = swift_slowAlloc();
    uint64_t v119 = v77;
    *(_DWORD *)v76 = 136315138;
    uint64_t v78 = sub_1A8D59560();
    *(void *)&long long v117 = sub_1A8C90120(v78, v79, &v119);
    uint64_t v72 = v105;
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v72);
    _os_log_impl(&dword_1A8C7F000, v73, v74, "Unable to append context to URL, returning base URL %s", v76, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v77, -1, -1);
    MEMORY[0x1AD0E6EB0](v76, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v72);
  }

  v101(v99, v106, v72);
  return sub_1A8C8DE74((uint64_t)v2, &qword_1E979E6D0);
}

uint64_t sub_1A8CA5060()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A8CA5098(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A8CA50F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979E6C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8CA515C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1A8CA5184(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A8CA51AC(uint64_t a1, uint64_t a2)
{
  v3[23] = a2;
  v3[24] = v2;
  v3[22] = a1;
  return MEMORY[0x1F4188298](sub_1A8CA51D0, 0, 0);
}

uint64_t sub_1A8CA51D0()
{
  id v1 = sub_1A8C8E338();
  uint64_t v2 = sub_1A8C8EB1C(0, &qword_1EB5E9390);
  *(void *)(v0 + 40) = v2;
  *(void *)(v0 + 48) = &off_1EFF551B0;
  *(void *)(v0 + 16) = v1;
  id v3 = sub_1A8C8E338();
  *(void *)(v0 + 80) = &type metadata for URLResolver;
  *(void *)(v0 + 88) = &off_1EFF54628;
  uint64_t v4 = (void *)swift_allocObject();
  *(void *)(v0 + 56) = v4;
  v4[5] = v2;
  v4[6] = &off_1EFF551B0;
  v4[2] = v3;
  id v5 = objc_msgSend(self, sel_sharedServerWithNoUrlCache);
  *(void *)(v0 + 120) = sub_1A8C8EB1C(0, (unint64_t *)&qword_1EB5E9DC0);
  *(void *)(v0 + 128) = &off_1EFF551A0;
  *(void *)(v0 + 96) = v5;
  uint64_t v6 = sub_1A8C8E488();
  uint64_t v8 = v7;
  type metadata accessor for Config();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 72) = 0u;
  *(_OWORD *)(v9 + 88) = 0u;
  *(void *)(v9 + 104) = 0;
  sub_1A8C91C90((long long *)(v0 + 96), v9 + 32);
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v8;
  uint64_t v10 = type metadata accessor for SystemProperties();
  uint64_t inited = swift_initStaticObject();
  v4[12] = v10;
  v4[13] = &off_1EFF55B18;
  v4[9] = inited;
  v4[7] = v9;
  v4[8] = &off_1EFF550C8;
  sub_1A8CA55C4((void *)(v0 + 136));
  uint64_t v12 = swift_task_alloc();
  *(void *)(v0 + 200) = v12;
  *(void *)uint64_t v12 = v0;
  *(void *)(v12 + 8) = sub_1A8CA53F0;
  uint64_t v13 = *(void *)(v0 + 176);
  *(_OWORD *)(v12 + 248) = *(_OWORD *)(v0 + 184);
  *(void *)(v12 + 232) = v0 + 56;
  *(void *)(v12 + 240) = v0 + 136;
  *(void *)(v12 + 216) = v13;
  *(void *)(v12 + 224) = v0 + 16;
  return MEMORY[0x1F4188298](sub_1A8CA56E8, 0, 0);
}

uint64_t sub_1A8CA53F0()
{
  uint64_t v2 = *v1 + 136;
  uint64_t v3 = *v1;
  *(void *)(v3 + 208) = v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0(v2);
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A8CA5554, 0, 0);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v3 + 56);
    __swift_destroy_boxed_opaque_existential_0(v3 + 16);
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
}

uint64_t sub_1A8CA5554()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_1A8CA55C4@<X0>(void *a1@<X8>)
{
  uint64_t v12 = &type metadata for SiriAssistantLocale;
  uint64_t v13 = &protocol witness table for SiriAssistantLocale;
  uint64_t v9 = &type metadata for Device;
  uint64_t v10 = &protocol witness table for Device;
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v3 = result;
    char deviceSupportsGenerativeModelSystems = MobileGestalt_get_deviceSupportsGenerativeModelSystems();

    LOBYTE(v8) = deviceSupportsGenerativeModelSystems;
    uint64_t v5 = type metadata accessor for SystemProperties();
    uint64_t inited = swift_initStaticObject();
    a1[3] = &type metadata for GatewayRequestFactory;
    a1[4] = &off_1EFF53718;
    uint64_t v7 = (void *)swift_allocObject();
    *a1 = v7;
    v7[16] = v5;
    v7[17] = &off_1EFF55B18;
    v7[13] = inited;
    v7[2] = 0x403E000000000000;
    sub_1A8C91C90(&v11, (uint64_t)(v7 + 3));
    return (id)sub_1A8C91C90(&v8, (uint64_t)(v7 + 8));
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A8CA56C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[31] = a5;
  v6[32] = v5;
  v6[29] = a3;
  v6[30] = a4;
  v6[27] = a1;
  v6[28] = a2;
  return MEMORY[0x1F4188298](sub_1A8CA56E8, 0, 0);
}

uint64_t sub_1A8CA56E8()
{
  id v1 = (void *)v0[29];
  uint64_t v2 = sub_1A8D595A0();
  v0[33] = v2;
  v0[34] = *(void *)(v2 - 8);
  uint64_t v3 = swift_task_alloc();
  v0[35] = v3;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[36] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1A8CA57F4;
  uint64_t v5 = v0[32];
  return sub_1A8C9340C(v3, v5);
}

uint64_t sub_1A8CA57F4()
{
  *(void *)(*(void *)v1 + 296) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A8CA60FC;
  }
  else {
    uint64_t v2 = sub_1A8CA5908;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CA5908()
{
  sub_1A8C8D974(*(void *)(v0 + 256), v0 + 16);
  uint64_t v1 = *(void *)(v0 + 16);
  switch(*(unsigned char *)(v0 + 48))
  {
    case 1:
      uint64_t v6 = *(void **)(v0 + 224);
      uint64_t v7 = *(void *)(v0 + 24);
      uint64_t v8 = v6[3];
      uint64_t v9 = v6[4];
      __swift_project_boxed_opaque_existential_1(v6, v8);
      uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 96))(v1, v7, v8, v9);
      if (!v5) {
        goto LABEL_13;
      }
      goto LABEL_4;
    case 4:
      if (!(*(void *)(v0 + 24) | v1 | *(void *)(v0 + 32) | *(void *)(v0 + 40))) {
        goto LABEL_2;
      }
      uint64_t v30 = *(void **)(v0 + 224);
      uint64_t v31 = v30[3];
      uint64_t v32 = v30[4];
      __swift_project_boxed_opaque_existential_1(v30, v31);
      uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 32))(v31, v32);
      if (v5) {
        goto LABEL_4;
      }
LABEL_13:
      uint64_t v34 = *(void *)(v0 + 272);
      uint64_t v33 = *(void *)(v0 + 280);
      uint64_t v35 = *(void *)(v0 + 264);
      sub_1A8CA6B90(3);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
      swift_task_dealloc();
      uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
      return v36();
    default:
LABEL_2:
      uint64_t v2 = *(void **)(v0 + 224);
      uint64_t v3 = v2[3];
      uint64_t v4 = v2[4];
      __swift_project_boxed_opaque_existential_1(v2, v3);
      uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
LABEL_4:
      *(void *)(v0 + 304) = v5;
      uint64_t v10 = *(void *)(v0 + 256);
      long long v11 = *(void **)(v0 + 240);
      uint64_t v12 = sub_1A8D59350();
      *(void *)(v0 + 312) = v12;
      uint64_t v13 = *(void *)(v12 - 8);
      *(void *)(v0 + 320) = v13;
      *(void *)(v0 + 328) = *(void *)(v13 + 64);
      uint64_t v14 = swift_task_alloc();
      *(void *)(v0 + 336) = v14;
      __swift_project_boxed_opaque_existential_1(v11, v11[3]);
      sub_1A8CD0644(v5, v14);
      sub_1A8C8D974(v10, v0 + 56);
      sub_1A8D592D0();
      sub_1A8C8D974(v10, v0 + 96);
      if (*(unsigned char *)(v0 + 128) != 2) {
        goto LABEL_17;
      }
      uint64_t v15 = *(void *)(v0 + 120);
      if (!v15) {
        goto LABEL_17;
      }
      int v54 = *(void **)(v0 + 296);
      uint64_t v16 = *(void *)(v0 + 112);
      sub_1A8D59420();
      swift_allocObject();
      swift_bridgeObjectRetain();
      sub_1A8D59410();
      uint64_t v17 = *(void *)(sub_1A8D593E0() - 8);
      swift_task_alloc();
      (*(void (**)(void))(v17 + 104))();
      sub_1A8D593F0();
      swift_task_dealloc();
      *(void *)(v0 + 184) = v16;
      *(void *)(v0 + 192) = v15;
      sub_1A8CB27B0();
      unint64_t v18 = v54;
      uint64_t v19 = sub_1A8D59400();
      unint64_t v21 = v20;
      swift_release();
      swift_bridgeObjectRelease();
      if (v54)
      {
        if (qword_1EB5E9298 != -1) {
          swift_once();
        }
        uint64_t v22 = sub_1A8D59A80();
        __swift_project_value_buffer(v22, (uint64_t)qword_1EB5E9318);
        id v23 = v54;
        id v24 = v54;
        uint64_t v25 = sub_1A8D59A60();
        os_log_type_t v26 = sub_1A8D59EE0();
        if (os_log_type_enabled(v25, v26))
        {
          unint64_t v27 = (uint8_t *)swift_slowAlloc();
          uint64_t v55 = (void *)swift_slowAlloc();
          *(_DWORD *)unint64_t v27 = 138412290;
          id v28 = v18;
          uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v0 + 208) = v29;
          sub_1A8D59FE0();
          *uint64_t v55 = v29;

          _os_log_impl(&dword_1A8C7F000, v25, v26, "Unable to encode ticket request object. Request will still be made: %@", v27, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
          swift_arrayDestroy();
          MEMORY[0x1AD0E6EB0](v55, -1, -1);
          MEMORY[0x1AD0E6EB0](v27, -1, -1);
        }
        else
        {
        }
LABEL_17:
        uint64_t v19 = 0;
        unint64_t v21 = 0xF000000000000000;
      }
      *(void *)(v0 + 344) = v19;
      *(void *)(v0 + 352) = v21;
      int v38 = *(void **)(v0 + 224);
      sub_1A8CB279C(v19, v21);
      sub_1A8D59340();
      uint64_t v39 = v38[3];
      uint64_t v40 = v38[4];
      __swift_project_boxed_opaque_existential_1(v38, v39);
      if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 104))(v14, v39, v40) & 1) != 0 && v5)
      {
        uint64_t v41 = qword_1EB5E9310;
        id v42 = v5;
        if (v41 != -1) {
          swift_once();
        }
        uint64_t v43 = sub_1A8D59A80();
        __swift_project_value_buffer(v43, (uint64_t)qword_1EB5E92F8);
        uint64_t v44 = sub_1A8D59A60();
        os_log_type_t v45 = sub_1A8D59F00();
        if (os_log_type_enabled(v44, v45))
        {
          unint64_t v46 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v46 = 0;
          _os_log_impl(&dword_1A8C7F000, v44, v45, "Auth header is missing, will attempt to renew credentials", v46, 2u);
          MEMORY[0x1AD0E6EB0](v46, -1, -1);
        }

        uint64_t v56 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E979E740 + dword_1E979E740);
        unint64_t v47 = (void *)swift_task_alloc();
        *(void *)(v0 + 360) = v47;
        void *v47 = v0;
        v47[1] = sub_1A8CA6160;
        uint64_t v48 = *(void *)(v0 + 224);
        return v56((uint64_t)v42, v48);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9288);
        uint64_t v49 = swift_task_alloc();
        *(void *)(v0 + 376) = v49;
        uint64_t v50 = (void *)swift_task_alloc();
        *(void *)(v0 + 384) = v50;
        *uint64_t v50 = v0;
        v50[1] = sub_1A8CA64E4;
        uint64_t v51 = *(void *)(v0 + 336);
        uint64_t v52 = *(void *)(v0 + 304);
        uint64_t v53 = *(void *)(v0 + 248);
        v50[11] = *(void *)(v0 + 224);
        v50[12] = v53;
        v50[9] = v51;
        v50[10] = v52;
        v50[8] = v49;
        return MEMORY[0x1F4188298](sub_1A8CA7044, 0, 0);
      }
  }
}

uint64_t sub_1A8CA60FC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CA6160()
{
  *(void *)(*(void *)v1 + 368) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A8CA63FC;
  }
  else {
    uint64_t v2 = sub_1A8CA6274;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CA6274()
{
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 320);
  uint64_t v4 = *(void **)(v0 + 304);
  __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 240), *(void *)(*(void *)(v0 + 240) + 24));
  uint64_t v5 = swift_task_alloc();
  id v6 = v4;
  sub_1A8CD0644(v4, v5);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v1, v5, v2);
  swift_task_dealloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9288);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 376) = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 384) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1A8CA64E4;
  uint64_t v9 = *(void *)(v0 + 336);
  uint64_t v10 = *(void *)(v0 + 304);
  uint64_t v11 = *(void *)(v0 + 248);
  v8[11] = *(void *)(v0 + 224);
  v8[12] = v11;
  v8[9] = v9;
  v8[10] = v10;
  v8[8] = v7;
  return MEMORY[0x1F4188298](sub_1A8CA7044, 0, 0);
}

uint64_t sub_1A8CA63FC()
{
  uint64_t v1 = v0[43];
  unint64_t v2 = v0[44];
  uint64_t v3 = v0[42];
  uint64_t v4 = v0[39];
  uint64_t v5 = v0[40];
  id v6 = (void *)v0[38];
  uint64_t v8 = v0[34];
  uint64_t v7 = v0[35];
  uint64_t v9 = v0[33];

  sub_1A8C93C84(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1A8CA64E4()
{
  *(void *)(*(void *)v1 + 392) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_1A8CA6AA0;
  }
  else {
    unint64_t v2 = sub_1A8CA65F8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CA65F8()
{
  os_log_type_t v45 = v0;
  uint64_t v1 = v0[47];
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[40];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1A8C8DE74(v1, (uint64_t *)&unk_1EB5E9288);
    swift_task_dealloc();
    if (qword_1EB5E9310 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1A8D59A80();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EB5E92F8);
    uint64_t v5 = sub_1A8D59A60();
    os_log_type_t v6 = sub_1A8D59F00();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v44 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      swift_beginAccess();
      uint64_t v9 = sub_1A8D592E0();
      swift_endAccess();
      if (!v9) {
        sub_1A8CB95F4(MEMORY[0x1E4FBC860]);
      }
      uint64_t v10 = sub_1A8D59B40();
      unint64_t v12 = v11;
      swift_bridgeObjectRelease();
      v0[25] = sub_1A8C90120(v10, v12, &v44);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A8C7F000, v5, v6, "Unable to sign request. Sending with headers: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v8, -1, -1);
      MEMORY[0x1AD0E6EB0](v7, -1, -1);
    }

    if (v0[38])
    {
      uint64_t v13 = v0[42];
      uint64_t v14 = (void *)v0[28];
      uint64_t v15 = v14[3];
      uint64_t v16 = v14[4];
      __swift_project_boxed_opaque_existential_1(v14, v15);
      swift_beginAccess();
      char v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 104))(v13, v15, v16);
      uint64_t v19 = v0[43];
      unint64_t v18 = v0[44];
      uint64_t v20 = v0[42];
      uint64_t v21 = v0[39];
      uint64_t v22 = v0[40];
      id v23 = (void *)v0[38];
      uint64_t v24 = v0[34];
      uint64_t v42 = v0[35];
      uint64_t v25 = v0[33];
      if (v17)
      {
        sub_1A8CA6B90(13);
        swift_willThrow();

        sub_1A8C93C84(v19, v18);
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v42, v25);
      }
      else
      {
        uint64_t v39 = v0[27];
        sub_1A8C93C84(v19, v18);

        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v42, v25);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v39, v20, v21);
      }
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    }
    else
    {
      uint64_t v33 = v0[43];
      unint64_t v32 = v0[44];
      uint64_t v34 = v0[42];
      uint64_t v35 = v0[40];
      uint64_t v43 = v0[39];
      uint64_t v36 = v0[34];
      uint64_t v37 = v0[35];
      uint64_t v38 = v0[33];
      sub_1A8CA6B90(3);
      swift_willThrow();
      sub_1A8C93C84(v33, v32);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v38);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v43);
    }
  }
  else
  {
    uint64_t v26 = v0[42];
    unint64_t v27 = (void *)v0[38];
    uint64_t v29 = v0[34];
    uint64_t v28 = v0[35];
    uint64_t v30 = v0[33];
    uint64_t v31 = v0[27];
    sub_1A8C93C84(v0[43], v0[44]);

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v31, v1, v2);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v26, v2);
    swift_task_dealloc();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = (uint64_t (*)(void))v0[1];
  return v40();
}

uint64_t sub_1A8CA6AA0()
{
  uint64_t v2 = *(void *)(v0 + 344);
  unint64_t v1 = *(void *)(v0 + 352);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 312);
  uint64_t v5 = *(void *)(v0 + 320);
  uint64_t v7 = *(void *)(v0 + 272);
  uint64_t v6 = *(void *)(v0 + 280);
  uint64_t v8 = *(void *)(v0 + 264);

  sub_1A8C93C84(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

id sub_1A8CA6B90(char a1)
{
  sub_1A8C8C7B0();
  uint64_t v1 = sub_1A8D5A370();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
  }
  else
  {
    uint64_t v2 = (void *)swift_allocError();
    *uint64_t v3 = a1;
  }
  uint64_t v4 = (void *)sub_1A8D59540();

  id v5 = objc_msgSend(v4, sel_domain);
  sub_1A8D59BF0();

  id v6 = objc_msgSend(v4, sel_code);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9418);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A8D5C9F0;
  *(void *)(inited + 32) = sub_1A8D59BF0();
  *(void *)(inited + 40) = v8;
  id v9 = objc_msgSend(v4, sel_localizedDescription);
  uint64_t v10 = sub_1A8D59BF0();
  uint64_t v12 = v11;

  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = v12;
  sub_1A8C90A64(inited);
  id v13 = objc_allocWithZone(MEMORY[0x1E4F28C50]);
  uint64_t v14 = (void *)sub_1A8D59BC0();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)sub_1A8D59B20();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v13, sel_initWithDomain_code_userInfo_, v14, v6, v15);

  return v16;
}

id sub_1A8CA6D74()
{
  uint64_t v1 = type metadata accessor for InternalError();
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A8CB3F74(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for InternalError);
  sub_1A8CB4044(&qword_1E979E720, (void (*)(uint64_t))type metadata accessor for InternalError);
  uint64_t v5 = sub_1A8D5A370();
  if (v5)
  {
    id v6 = (void *)v5;
    sub_1A8CB243C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for InternalError);
  }
  else
  {
    id v6 = (void *)swift_allocError();
    sub_1A8CB3FDC((uint64_t)v4, v7, (uint64_t (*)(void))type metadata accessor for InternalError);
  }
  uint64_t v8 = (void *)sub_1A8D59540();

  id v9 = objc_msgSend(v8, sel_domain);
  sub_1A8D59BF0();

  id v10 = objc_msgSend(v8, sel_code);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9418);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A8D5C9F0;
  *(void *)(inited + 32) = sub_1A8D59BF0();
  *(void *)(inited + 40) = v12;
  id v13 = objc_msgSend(v8, sel_localizedDescription);
  uint64_t v14 = sub_1A8D59BF0();
  uint64_t v16 = v15;

  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v14;
  *(void *)(inited + 56) = v16;
  sub_1A8C90A64(inited);
  id v17 = objc_allocWithZone(MEMORY[0x1E4F28C50]);
  unint64_t v18 = (void *)sub_1A8D59BC0();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)sub_1A8D59B20();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, v10, v19);

  return v20;
}

uint64_t sub_1A8CA701C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  return MEMORY[0x1F4188298](sub_1A8CA7044, 0, 0);
}

uint64_t sub_1A8CA7044()
{
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = sub_1A8D59350();
  v0[13] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[14] = v3;
  v0[15] = *(void *)(v3 + 64);
  v0[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9288);
  uint64_t v4 = swift_task_alloc();
  v0[17] = v4;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v0[5] = &type metadata for BAASigningEnvironment;
  v0[6] = &off_1EFF583B0;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[18] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1A8CA71B0;
  uint64_t v6 = v0[9];
  return sub_1A8D48600(v4, v6);
}

uint64_t sub_1A8CA71B0()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v3 = sub_1A8CA7768;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v2 + 16);
    uint64_t v3 = sub_1A8CA72D0;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A8CA72D0()
{
  uint64_t v40 = v0;
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v4(v1, 0, 1, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v5 = v0[13];
    uint64_t v6 = v0[8];
    sub_1A8C8DE74(v0[17], (uint64_t *)&unk_1EB5E9288);
    swift_task_dealloc();
    swift_task_dealloc();
    v4(v6, 1, 1, v5);
LABEL_16:
    uint64_t v31 = (uint64_t (*)(void))v0[1];
    goto LABEL_17;
  }
  uint64_t v38 = *(void (**)(uint64_t, void, uint64_t))(v0[14] + 32);
  v38(v0[16], v0[17], v0[13]);
  swift_task_dealloc();
  if (qword_1EB5E9310 != -1) {
    swift_once();
  }
  uint64_t v7 = v0[16];
  uint64_t v9 = v0[13];
  uint64_t v8 = v0[14];
  uint64_t v10 = sub_1A8D59A80();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB5E92F8);
  uint64_t v11 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v7, v9);
  uint64_t v12 = sub_1A8D59A60();
  os_log_type_t v13 = sub_1A8D59F00();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v39 = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v36 = v15;
    uint64_t v37 = v4;
    if (!sub_1A8D592E0()) {
      sub_1A8CB95F4(MEMORY[0x1E4FBC860]);
    }
    uint64_t v16 = v0[14];
    uint64_t v35 = v0[13];
    uint64_t v17 = sub_1A8D59B40();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    v0[7] = sub_1A8C90120(v17, v19, &v39);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    id v20 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v20(v11, v35);
    _os_log_impl(&dword_1A8C7F000, v12, v13, "Signed request headers: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v36, -1, -1);
    MEMORY[0x1AD0E6EB0](v14, -1, -1);

    uint64_t v4 = v37;
  }
  else
  {
    id v20 = *(void (**)(uint64_t, uint64_t))(v0[14] + 8);
    v20(v11, v0[13]);
  }
  uint64_t v21 = v0[16];
  uint64_t v23 = v0[10];
  uint64_t v22 = (void *)v0[11];
  swift_task_dealloc();
  uint64_t v24 = v22[3];
  uint64_t v25 = v22[4];
  __swift_project_boxed_opaque_existential_1(v22, v24);
  if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 104))(v21, v24, v25) & 1) == 0 || !v23)
  {
    uint64_t v32 = v0[13];
    uint64_t v33 = v0[8];
    v38(v33, v0[16], v32);
    v4(v33, 0, 1, v32);
    swift_task_dealloc();
    goto LABEL_16;
  }
  uint64_t v26 = sub_1A8D59A60();
  os_log_type_t v27 = sub_1A8D59F00();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl(&dword_1A8C7F000, v26, v27, "Missing Authorization header. Unable to proceed with request", v28, 2u);
    MEMORY[0x1AD0E6EB0](v28, -1, -1);
  }
  uint64_t v29 = v0[16];
  uint64_t v30 = v0[13];

  sub_1A8CA6B90(13);
  swift_willThrow();
  v20(v29, v30);
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
LABEL_17:
  return v31();
}

uint64_t sub_1A8CA7768()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v4(v1, 1, 1, v2);
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[8];
  sub_1A8C8DE74(v0[17], (uint64_t *)&unk_1EB5E9288);
  swift_task_dealloc();
  swift_task_dealloc();
  v4(v6, 1, 1, v5);
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

unint64_t sub_1A8CA784C()
{
  sub_1A8C8D974(v0, (uint64_t)&v4);
  unint64_t result = 0xD000000000000011;
  switch(v5)
  {
    case 1:
      return result;
    case 2:
      uint64_t v2 = 0x745374656B636954;
      goto LABEL_5;
    case 3:
      uint64_t v2 = 0x656B636954746547;
LABEL_5:
      unint64_t v3 = v2;
      goto LABEL_6;
    case 4:
      return 0xD000000000000012;
    default:
      sub_1A8D5A0C0();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000015;
      sub_1A8D59CA0();
LABEL_6:
      sub_1A8D59CA0();
      return v3;
  }
}

unint64_t sub_1A8CA79EC()
{
  sub_1A8C8D974(v0, (uint64_t)v2);
  return sub_1A8CA784C();
}

id sub_1A8CA7A24()
{
  id result = sub_1A8D481A4();
  qword_1E979E6D8 = (uint64_t)result;
  return result;
}

uint64_t sub_1A8CA7A44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v52 = a2;
  uint64_t v53 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  MEMORY[0x1F4188790](v8 - 8, v9);
  uint64_t v51 = v10;
  uint64_t v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A8D596F0();
  uint64_t v13 = *(void *)(v12 - 8);
  int v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v55 = v13 + 56;
  v54(v11, 1, 1, v12);
  uint64_t v14 = (void *)sub_1A8D59BC0();
  id v15 = objc_msgSend(a1, sel_valueForHTTPHeaderField_, v14);

  if (!v15) {
    goto LABEL_24;
  }
  uint64_t v47 = sub_1A8D59BF0();
  uint64_t v48 = v16;
  uint64_t v46 = v44;
  uint64_t v17 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v47, v16);
  os_log_type_t v45 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E979E430 != -1) {
    swift_once();
  }
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  id v18 = objc_msgSend((id)qword_1E979E6D8, sel_dateFromString_, v15);

  uint64_t v21 = MEMORY[0x1F4188790](v19, v20);
  uint64_t v24 = (char *)v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v18)
  {
    v54((char *)v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v12);
    uint64_t v27 = v48;
    goto LABEL_8;
  }
  v44[1] = v44;
  MEMORY[0x1F4188790](v21, v22);
  sub_1A8D596C0();

  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v25(v24, (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v54(v24, 0, 1, v12);
  int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v24, 1, v12);
  uint64_t v27 = v48;
  if (v26 == 1)
  {
LABEL_8:
    uint64_t v29 = sub_1A8C8DE74((uint64_t)v24, &qword_1EB5EACF0);
    goto LABEL_9;
  }
  sub_1A8C8DE74((uint64_t)v11, &qword_1EB5EACF0);
  uint64_t v28 = v45;
  v25(v45, v24, v12);
  v25(v11, v28, v12);
  uint64_t v29 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v54)(v11, 0, 1, v12);
LABEL_9:
  uint64_t v59 = 0;
  uint64_t v31 = MEMORY[0x1F4188790](v29, v30);
  v44[-2] = &v59;
  a5 = v50;
  if ((v27 & 0x1000000000000000) != 0 || !(v27 & 0x2000000000000000 | v47 & 0x1000000000000000))
  {
    sub_1A8D5A0B0();
  }
  else
  {
    MEMORY[0x1F4188790](v31, &v44[-4]);
    v44[-2] = sub_1A8CB264C;
    v44[-1] = v33;
    if ((v27 & 0x2000000000000000) != 0)
    {
      uint64_t v56 = v32;
      uint64_t v57 = v27 & 0xFFFFFFFFFFFFFFLL;
      BOOL v39 = (v32 > 0x20u || ((0x100003E01uLL >> v32) & 1) == 0)
         && (uint64_t v38 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
         && *v38 == 0;
      char v58 = v39;
      uint64_t v36 = swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    if ((v32 & 0x1000000000000000) != 0)
    {
      uint64_t v34 = (v27 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v35 = v32 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v34 = sub_1A8D5A130();
    }
    char v58 = sub_1A8CB0AA8(v34, v35, (void (*)(uint64_t *__return_ptr))sub_1A8CB26BC) & 1;
  }
  uint64_t v36 = swift_bridgeObjectRelease();
LABEL_22:
  if (v58)
  {
    MEMORY[0x1F4188790](v36, v37);
    uint64_t v41 = (char *)v44 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A8D59680();
    sub_1A8C8DE74((uint64_t)v11, &qword_1EB5EACF0);
    v54(v41, 0, 1, v12);
    sub_1A8C921A0((uint64_t)v41, (uint64_t)v11);
  }
LABEL_24:
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 16))(v11, v52, v53, ObjectType, a5);
  return sub_1A8C8DE74((uint64_t)v11, &qword_1EB5EACF0);
}

uint64_t sub_1A8CA8008()
{
  id v0 = objc_msgSend(self, sel_sharedServerWithNoUrlCache);
  uint64_t v7 = sub_1A8C8EB1C(0, (unint64_t *)&qword_1EB5E9DC0);
  uint64_t v8 = &off_1EFF551A0;
  *(void *)&long long v6 = v0;
  uint64_t v1 = sub_1A8C8E488();
  uint64_t v3 = v2;
  type metadata accessor for Config();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(void *)(v4 + 104) = 0;
  uint64_t result = sub_1A8C91C90(&v6, v4 + 32);
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v3;
  qword_1EB5E9598 = v4;
  return result;
}

uint64_t sub_1A8CA80CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[24] = a3;
  v4[25] = v3;
  v4[22] = a1;
  v4[23] = a2;
  v4[26] = type metadata accessor for InternalError();
  v4[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CA8164, 0, 0);
}

void sub_1A8CA8164()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    uint64_t v3 = swift_task_alloc();
    v0[28] = v3;
    uint64_t v4 = sub_1A8D596F0();
    v0[29] = v4;
    uint64_t v5 = *(void *)(v4 - 8);
    v0[30] = v5;
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v0[31] = v6;
    v0[32] = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v6(v3, 1, 1, v4);
    if (v2 < 1)
    {
      sub_1A8CA6B90(8);
      swift_willThrow();
      sub_1A8C8DE74(v3, &qword_1EB5EACF0);
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v9 = (void (*)(void))v0[1];
      v9();
    }
    else
    {
      v0[33] = @"CloudFeaturesServerErrorDomain";
      v0[34] = @"CloudFeaturesLocalErrorDomain";
      v0[35] = 0;
      v0[36] = v2;
      uint64_t v10 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E708 + dword_1E979E708);
      uint64_t v7 = (void *)swift_task_alloc();
      v0[37] = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_1A8CA8374;
      uint64_t v8 = v0[28];
      v10((uint64_t)(v0 + 2), (uint64_t)(v0 + 21), v8);
    }
  }
}

uint64_t sub_1A8CA8374()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[38] = v0;
  v3[39] = v2[2];
  v3[40] = v2[3];
  *(_OWORD *)(v3 + 41) = *((_OWORD *)v3 + 2);
  v3[43] = v2[6];
  *((unsigned char *)v3 + 57) = *((unsigned char *)v3 + 56);
  swift_task_dealloc();
  if (v0) {
    uint64_t v4 = sub_1A8CA84E4;
  }
  else {
    uint64_t v4 = sub_1A8CB4F7C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1A8CA84E4()
{
  uint64_t v1 = *(void **)(v0 + 304);
  *(void *)(v0 + 152) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 216);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = *(void **)(v0 + 304);
      uint64_t v5 = *(void **)(v0 + 280);
      uint64_t v6 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 248);
      uint64_t v7 = *(void *)(v0 + 232);
      uint64_t v8 = *(void *)(v0 + 240);
      uint64_t v9 = *(void *)(v0 + 224);
      sub_1A8C8DE74(v9, &qword_1EB5EACF0);

      uint64_t v10 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10, v3, v7);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v10, v7);
      v6(v9, 0, 1, v7);
      id v11 = sub_1A8CA6B90(8);

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
      swift_task_dealloc();

      goto LABEL_16;
    }
    sub_1A8CB243C(v3, (uint64_t (*)(void))type metadata accessor for InternalError);
  }
  uint64_t v12 = *(void **)(v0 + 304);

  swift_getErrorValue();
  uint64_t v13 = *(void *)(v0 + 72);
  uint64_t v14 = *(void *)(v0 + 80);
  id v15 = v12;
  id v16 = sub_1A8C90F38(v13, v14);
  id v17 = objc_msgSend(v16, sel_domain);

  uint64_t v18 = sub_1A8D59BF0();
  uint64_t v20 = v19;

  if (v18 == sub_1A8D59BF0() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v22 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      swift_getErrorValue();
      id v28 = sub_1A8C90F38(*(void *)(v0 + 96), *(void *)(v0 + 104));
      id v29 = objc_msgSend(v28, sel_domain);

      uint64_t v30 = sub_1A8D59BF0();
      uint64_t v32 = v31;

      uint64_t v33 = sub_1A8D59BF0();
      uint64_t v35 = *(void **)(v0 + 304);
      uint64_t v36 = *(void **)(v0 + 280);
      uint64_t v37 = *(void *)(v0 + 224);
      if (v30 == v33 && v32 == v34)
      {
        swift_bridgeObjectRelease_n();

        sub_1A8C8DE74(v37, &qword_1EB5EACF0);
      }
      else
      {
        char v38 = sub_1A8D5A390();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_1A8C8DE74(v37, &qword_1EB5EACF0);
        if ((v38 & 1) == 0) {
          goto LABEL_21;
        }
      }
      (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 248))(*(void *)(v0 + 224), 1, 1, *(void *)(v0 + 232));
      id v11 = *(id *)(v0 + 304);
      goto LABEL_16;
    }
  }
  uint64_t v23 = *(void **)(v0 + 280);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v26 = *(void *)(v0 + 224);
  uint64_t v25 = *(void *)(v0 + 232);

  swift_getErrorValue();
  BOOL v27 = sub_1A8CF64F4(*(void *)(v0 + 120), *(void *)(v0 + 128));

  sub_1A8C8DE74(v26, &qword_1EB5EACF0);
  v24(v26, 1, 1, v25);
  id v11 = *(id *)(v0 + 304);
  if (v27)
  {
LABEL_16:
    uint64_t v39 = *(void *)(v0 + 288) - 1;
    if (*(void *)(v0 + 288) != 1)
    {
      *(void *)(v0 + 280) = v11;
      *(void *)(v0 + 288) = v39;
      os_log_type_t v45 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E708 + dword_1E979E708);
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 296) = v40;
      *uint64_t v40 = v0;
      v40[1] = sub_1A8CA8374;
      uint64_t v41 = *(void *)(v0 + 224);
      return v45(v0 + 16, v0 + 168, v41);
    }
  }
  uint64_t v43 = *(void *)(v0 + 224);
  swift_willThrow();
  sub_1A8C8DE74(v43, &qword_1EB5EACF0);
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_1A8CA89DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[23] = a3;
  v4[24] = v3;
  v4[21] = a1;
  v4[22] = a2;
  v4[25] = type metadata accessor for InternalError();
  v4[26] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CA8A74, 0, 0);
}

void sub_1A8CA8A74()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    uint64_t v3 = swift_task_alloc();
    v0[27] = v3;
    uint64_t v4 = sub_1A8D596F0();
    v0[28] = v4;
    uint64_t v5 = *(void *)(v4 - 8);
    v0[29] = v5;
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v0[30] = v6;
    v0[31] = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v6(v3, 1, 1, v4);
    if (v2 < 1)
    {
      sub_1A8CA6B90(8);
      swift_willThrow();
      sub_1A8C8DE74(v3, &qword_1EB5EACF0);
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v9 = (void (*)(void))v0[1];
      v9();
    }
    else
    {
      v0[32] = @"CloudFeaturesServerErrorDomain";
      v0[33] = @"CloudFeaturesLocalErrorDomain";
      v0[34] = 0;
      v0[35] = v2;
      uint64_t v10 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E768 + dword_1E979E768);
      uint64_t v7 = (void *)swift_task_alloc();
      v0[36] = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_1A8CA8C84;
      uint64_t v8 = v0[27];
      v10((uint64_t)(v0 + 2), (uint64_t)v0 + 57, v8);
    }
  }
}

uint64_t sub_1A8CA8C84()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[37] = v0;
  v3[38] = v2[2];
  v3[39] = v2[3];
  *((_OWORD *)v3 + 20) = *((_OWORD *)v3 + 2);
  v3[42] = v2[6];
  *((unsigned char *)v3 + 58) = *((unsigned char *)v3 + 56);
  swift_task_dealloc();
  if (v0) {
    uint64_t v4 = sub_1A8CA8EC4;
  }
  else {
    uint64_t v4 = sub_1A8CA8DF0;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1A8CA8DF0()
{
  char v1 = *(unsigned char *)(v0 + 58);
  uint64_t v2 = *(void *)(v0 + 336);
  long long v8 = *(_OWORD *)(v0 + 304);
  long long v9 = *(_OWORD *)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v4 = *(unsigned char **)(v0 + 176);

  sub_1A8C8DE74(v3, &qword_1EB5EACF0);
  *uint64_t v4 = *(unsigned char *)(v0 + 57);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v5 = v8;
  *(_OWORD *)(v5 + 16) = v9;
  *(void *)(v5 + 32) = v2;
  *(unsigned char *)(v5 + 40) = v1;
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1A8CA8EC4()
{
  char v1 = *(void **)(v0 + 296);
  *(void *)(v0 + 152) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 208);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = *(void **)(v0 + 296);
      uint64_t v5 = *(void **)(v0 + 272);
      uint64_t v6 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 240);
      uint64_t v7 = *(void *)(v0 + 224);
      uint64_t v8 = *(void *)(v0 + 232);
      uint64_t v9 = *(void *)(v0 + 216);
      sub_1A8C8DE74(v9, &qword_1EB5EACF0);

      uint64_t v10 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10, v3, v7);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v10, v7);
      v6(v9, 0, 1, v7);
      id v11 = sub_1A8CA6B90(8);

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
      swift_task_dealloc();

      goto LABEL_16;
    }
    sub_1A8CB243C(v3, (uint64_t (*)(void))type metadata accessor for InternalError);
  }
  uint64_t v12 = *(void **)(v0 + 296);

  swift_getErrorValue();
  uint64_t v13 = *(void *)(v0 + 72);
  uint64_t v14 = *(void *)(v0 + 80);
  id v15 = v12;
  id v16 = sub_1A8C90F38(v13, v14);
  id v17 = objc_msgSend(v16, sel_domain);

  uint64_t v18 = sub_1A8D59BF0();
  uint64_t v20 = v19;

  if (v18 == sub_1A8D59BF0() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v22 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      swift_getErrorValue();
      id v28 = sub_1A8C90F38(*(void *)(v0 + 96), *(void *)(v0 + 104));
      id v29 = objc_msgSend(v28, sel_domain);

      uint64_t v30 = sub_1A8D59BF0();
      uint64_t v32 = v31;

      uint64_t v33 = sub_1A8D59BF0();
      uint64_t v35 = *(void **)(v0 + 296);
      uint64_t v36 = *(void **)(v0 + 272);
      uint64_t v37 = *(void *)(v0 + 216);
      if (v30 == v33 && v32 == v34)
      {
        swift_bridgeObjectRelease_n();

        sub_1A8C8DE74(v37, &qword_1EB5EACF0);
      }
      else
      {
        char v38 = sub_1A8D5A390();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_1A8C8DE74(v37, &qword_1EB5EACF0);
        if ((v38 & 1) == 0) {
          goto LABEL_21;
        }
      }
      (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 240))(*(void *)(v0 + 216), 1, 1, *(void *)(v0 + 224));
      id v11 = *(id *)(v0 + 296);
      goto LABEL_16;
    }
  }
  uint64_t v23 = *(void **)(v0 + 272);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 240);
  uint64_t v26 = *(void *)(v0 + 216);
  uint64_t v25 = *(void *)(v0 + 224);

  swift_getErrorValue();
  BOOL v27 = sub_1A8CF64F4(*(void *)(v0 + 120), *(void *)(v0 + 128));

  sub_1A8C8DE74(v26, &qword_1EB5EACF0);
  v24(v26, 1, 1, v25);
  id v11 = *(id *)(v0 + 296);
  if (v27)
  {
LABEL_16:
    uint64_t v39 = *(void *)(v0 + 280) - 1;
    if (*(void *)(v0 + 280) != 1)
    {
      *(void *)(v0 + 272) = v11;
      *(void *)(v0 + 280) = v39;
      os_log_type_t v45 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E768 + dword_1E979E768);
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 288) = v40;
      *uint64_t v40 = v0;
      v40[1] = sub_1A8CA8C84;
      uint64_t v41 = *(void *)(v0 + 216);
      return v45(v0 + 16, v0 + 57, v41);
    }
  }
  uint64_t v43 = *(void *)(v0 + 216);
  swift_willThrow();
  sub_1A8C8DE74(v43, &qword_1EB5EACF0);
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_1A8CA93BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[24] = a3;
  v4[25] = v3;
  v4[22] = a1;
  v4[23] = a2;
  v4[26] = type metadata accessor for InternalError();
  v4[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CA9454, 0, 0);
}

void sub_1A8CA9454()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    uint64_t v3 = swift_task_alloc();
    v0[28] = v3;
    uint64_t v4 = sub_1A8D596F0();
    v0[29] = v4;
    uint64_t v5 = *(void *)(v4 - 8);
    v0[30] = v5;
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v0[31] = v6;
    v0[32] = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v6(v3, 1, 1, v4);
    if (v2 < 1)
    {
      sub_1A8CA6B90(8);
      swift_willThrow();
      sub_1A8C8DE74(v3, &qword_1EB5EACF0);
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v9 = (void (*)(void))v0[1];
      v9();
    }
    else
    {
      v0[33] = @"CloudFeaturesServerErrorDomain";
      v0[34] = @"CloudFeaturesLocalErrorDomain";
      v0[35] = 0;
      v0[36] = v2;
      uint64_t v10 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E810 + dword_1E979E810);
      uint64_t v7 = (void *)swift_task_alloc();
      v0[37] = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_1A8CA9664;
      uint64_t v8 = v0[28];
      v10((uint64_t)(v0 + 2), (uint64_t)(v0 + 21), v8);
    }
  }
}

uint64_t sub_1A8CA9664()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[38] = v0;
  v3[39] = v2[2];
  v3[40] = v2[3];
  *(_OWORD *)(v3 + 41) = *((_OWORD *)v3 + 2);
  v3[43] = v2[6];
  *((unsigned char *)v3 + 57) = *((unsigned char *)v3 + 56);
  swift_task_dealloc();
  if (v0) {
    uint64_t v4 = sub_1A8CA97D4;
  }
  else {
    uint64_t v4 = sub_1A8CB4F7C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1A8CA97D4()
{
  uint64_t v1 = *(void **)(v0 + 304);
  *(void *)(v0 + 152) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 216);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = *(void **)(v0 + 304);
      uint64_t v5 = *(void **)(v0 + 280);
      uint64_t v6 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 248);
      uint64_t v7 = *(void *)(v0 + 232);
      uint64_t v8 = *(void *)(v0 + 240);
      uint64_t v9 = *(void *)(v0 + 224);
      sub_1A8C8DE74(v9, &qword_1EB5EACF0);

      uint64_t v10 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10, v3, v7);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v10, v7);
      v6(v9, 0, 1, v7);
      id v11 = sub_1A8CA6B90(8);

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
      swift_task_dealloc();

      goto LABEL_16;
    }
    sub_1A8CB243C(v3, (uint64_t (*)(void))type metadata accessor for InternalError);
  }
  uint64_t v12 = *(void **)(v0 + 304);

  swift_getErrorValue();
  uint64_t v13 = *(void *)(v0 + 72);
  uint64_t v14 = *(void *)(v0 + 80);
  id v15 = v12;
  id v16 = sub_1A8C90F38(v13, v14);
  id v17 = objc_msgSend(v16, sel_domain);

  uint64_t v18 = sub_1A8D59BF0();
  uint64_t v20 = v19;

  if (v18 == sub_1A8D59BF0() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v22 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      swift_getErrorValue();
      id v28 = sub_1A8C90F38(*(void *)(v0 + 96), *(void *)(v0 + 104));
      id v29 = objc_msgSend(v28, sel_domain);

      uint64_t v30 = sub_1A8D59BF0();
      uint64_t v32 = v31;

      uint64_t v33 = sub_1A8D59BF0();
      uint64_t v35 = *(void **)(v0 + 304);
      uint64_t v36 = *(void **)(v0 + 280);
      uint64_t v37 = *(void *)(v0 + 224);
      if (v30 == v33 && v32 == v34)
      {
        swift_bridgeObjectRelease_n();

        sub_1A8C8DE74(v37, &qword_1EB5EACF0);
      }
      else
      {
        char v38 = sub_1A8D5A390();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_1A8C8DE74(v37, &qword_1EB5EACF0);
        if ((v38 & 1) == 0) {
          goto LABEL_21;
        }
      }
      (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 248))(*(void *)(v0 + 224), 1, 1, *(void *)(v0 + 232));
      id v11 = *(id *)(v0 + 304);
      goto LABEL_16;
    }
  }
  uint64_t v23 = *(void **)(v0 + 280);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v26 = *(void *)(v0 + 224);
  uint64_t v25 = *(void *)(v0 + 232);

  swift_getErrorValue();
  BOOL v27 = sub_1A8CF64F4(*(void *)(v0 + 120), *(void *)(v0 + 128));

  sub_1A8C8DE74(v26, &qword_1EB5EACF0);
  v24(v26, 1, 1, v25);
  id v11 = *(id *)(v0 + 304);
  if (v27)
  {
LABEL_16:
    uint64_t v39 = *(void *)(v0 + 288) - 1;
    if (*(void *)(v0 + 288) != 1)
    {
      *(void *)(v0 + 280) = v11;
      *(void *)(v0 + 288) = v39;
      os_log_type_t v45 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E810 + dword_1E979E810);
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 296) = v40;
      *uint64_t v40 = v0;
      v40[1] = sub_1A8CA9664;
      uint64_t v41 = *(void *)(v0 + 224);
      return v45(v0 + 16, v0 + 168, v41);
    }
  }
  uint64_t v43 = *(void *)(v0 + 224);
  swift_willThrow();
  sub_1A8C8DE74(v43, &qword_1EB5EACF0);
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_1A8CA9CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[34] = a3;
  v4[35] = v3;
  v4[32] = a1;
  v4[33] = a2;
  v4[36] = type metadata accessor for InternalError();
  v4[37] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CA9D64, 0, 0);
}

void sub_1A8CA9D64()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    uint64_t v3 = swift_task_alloc();
    v0[38] = v3;
    uint64_t v4 = sub_1A8D596F0();
    v0[39] = v4;
    uint64_t v5 = *(void *)(v4 - 8);
    v0[40] = v5;
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v0[41] = v6;
    v0[42] = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v6(v3, 1, 1, v4);
    if (v2 < 1)
    {
      sub_1A8CA6B90(8);
      swift_willThrow();
      sub_1A8C8DE74(v3, &qword_1EB5EACF0);
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v9 = (void (*)(void))v0[1];
      v9();
    }
    else
    {
      v0[43] = @"CloudFeaturesServerErrorDomain";
      v0[44] = @"CloudFeaturesLocalErrorDomain";
      v0[45] = 0;
      v0[46] = v2;
      uint64_t v10 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E7E8 + dword_1E979E7E8);
      uint64_t v7 = (void *)swift_task_alloc();
      v0[47] = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_1A8CA9F74;
      uint64_t v8 = v0[38];
      v10((uint64_t)(v0 + 13), (uint64_t)(v0 + 2), v8);
    }
  }
}

uint64_t sub_1A8CA9F74()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[48] = v0;
  v3[49] = v2[13];
  v3[50] = v2[14];
  *(_OWORD *)(v3 + 51) = *(_OWORD *)(v3 + 15);
  v3[53] = v2[17];
  *((unsigned char *)v3 + 97) = *((unsigned char *)v3 + 144);
  swift_task_dealloc();
  if (v0) {
    uint64_t v4 = sub_1A8CAA1D0;
  }
  else {
    uint64_t v4 = sub_1A8CAA0E4;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1A8CAA0E4()
{
  char v1 = *(unsigned char *)(v0 + 97);
  uint64_t v2 = *(void *)(v0 + 424);
  long long v10 = *(_OWORD *)(v0 + 392);
  long long v11 = *(_OWORD *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 264);

  sub_1A8C8DE74(v3, &qword_1EB5EACF0);
  uint64_t v6 = *(void *)(v0 + 32);
  long long v7 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)(v0 + 16);
  *(void *)(v4 + 16) = v6;
  *(_OWORD *)(v4 + 24) = v7;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v5 = v10;
  *(_OWORD *)(v5 + 16) = v11;
  *(void *)(v5 + 32) = v2;
  *(unsigned char *)(v5 + 40) = v1;
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1A8CAA1D0()
{
  char v1 = *(void **)(v0 + 384);
  *(void *)(v0 + 232) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 296);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = *(void **)(v0 + 384);
      uint64_t v5 = *(void **)(v0 + 360);
      uint64_t v6 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 328);
      uint64_t v7 = *(void *)(v0 + 312);
      uint64_t v8 = *(void *)(v0 + 320);
      uint64_t v9 = *(void *)(v0 + 304);
      sub_1A8C8DE74(v9, &qword_1EB5EACF0);

      uint64_t v10 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10, v3, v7);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v10, v7);
      v6(v9, 0, 1, v7);
      id v11 = sub_1A8CA6B90(8);

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
      swift_task_dealloc();

      goto LABEL_16;
    }
    sub_1A8CB243C(v3, (uint64_t (*)(void))type metadata accessor for InternalError);
  }
  uint64_t v12 = *(void **)(v0 + 384);

  swift_getErrorValue();
  uint64_t v13 = *(void *)(v0 + 160);
  uint64_t v14 = *(void *)(v0 + 168);
  id v15 = v12;
  id v16 = sub_1A8C90F38(v13, v14);
  id v17 = objc_msgSend(v16, sel_domain);

  uint64_t v18 = sub_1A8D59BF0();
  uint64_t v20 = v19;

  if (v18 == sub_1A8D59BF0() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v22 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      swift_getErrorValue();
      id v28 = sub_1A8C90F38(*(void *)(v0 + 184), *(void *)(v0 + 192));
      id v29 = objc_msgSend(v28, sel_domain);

      uint64_t v30 = sub_1A8D59BF0();
      uint64_t v32 = v31;

      uint64_t v33 = sub_1A8D59BF0();
      uint64_t v35 = *(void **)(v0 + 384);
      uint64_t v36 = *(void **)(v0 + 360);
      uint64_t v37 = *(void *)(v0 + 304);
      if (v30 == v33 && v32 == v34)
      {
        swift_bridgeObjectRelease_n();

        sub_1A8C8DE74(v37, &qword_1EB5EACF0);
      }
      else
      {
        char v38 = sub_1A8D5A390();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_1A8C8DE74(v37, &qword_1EB5EACF0);
        if ((v38 & 1) == 0) {
          goto LABEL_21;
        }
      }
      (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 328))(*(void *)(v0 + 304), 1, 1, *(void *)(v0 + 312));
      id v11 = *(id *)(v0 + 384);
      goto LABEL_16;
    }
  }
  uint64_t v23 = *(void **)(v0 + 360);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 328);
  uint64_t v26 = *(void *)(v0 + 304);
  uint64_t v25 = *(void *)(v0 + 312);

  swift_getErrorValue();
  BOOL v27 = sub_1A8CF64F4(*(void *)(v0 + 208), *(void *)(v0 + 216));

  sub_1A8C8DE74(v26, &qword_1EB5EACF0);
  v24(v26, 1, 1, v25);
  id v11 = *(id *)(v0 + 384);
  if (v27)
  {
LABEL_16:
    uint64_t v39 = *(void *)(v0 + 368) - 1;
    if (*(void *)(v0 + 368) != 1)
    {
      *(void *)(v0 + 360) = v11;
      *(void *)(v0 + 368) = v39;
      os_log_type_t v45 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E7E8 + dword_1E979E7E8);
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 376) = v40;
      *uint64_t v40 = v0;
      v40[1] = sub_1A8CA9F74;
      uint64_t v41 = *(void *)(v0 + 304);
      return v45(v0 + 104, v0 + 16, v41);
    }
  }
  uint64_t v43 = *(void *)(v0 + 304);
  swift_willThrow();
  sub_1A8C8DE74(v43, &qword_1EB5EACF0);
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_1A8CAA6C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[24] = a3;
  v4[25] = v3;
  v4[22] = a1;
  v4[23] = a2;
  v4[26] = type metadata accessor for InternalError();
  v4[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CAA760, 0, 0);
}

void sub_1A8CAA760()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    uint64_t v3 = swift_task_alloc();
    v0[28] = v3;
    uint64_t v4 = sub_1A8D596F0();
    v0[29] = v4;
    uint64_t v5 = *(void *)(v4 - 8);
    v0[30] = v5;
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v0[31] = v6;
    v0[32] = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v6(v3, 1, 1, v4);
    if (v2 < 1)
    {
      sub_1A8CA6B90(8);
      swift_willThrow();
      sub_1A8C8DE74(v3, &qword_1EB5EACF0);
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v9 = (void (*)(void))v0[1];
      v9();
    }
    else
    {
      v0[33] = @"CloudFeaturesServerErrorDomain";
      v0[34] = @"CloudFeaturesLocalErrorDomain";
      v0[35] = 0;
      v0[36] = v2;
      uint64_t v10 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E7B8 + dword_1E979E7B8);
      uint64_t v7 = (void *)swift_task_alloc();
      v0[37] = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_1A8CAA970;
      uint64_t v8 = v0[28];
      v10((uint64_t)(v0 + 2), (uint64_t)(v0 + 21), v8);
    }
  }
}

uint64_t sub_1A8CAA970()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[38] = v0;
  v3[39] = v2[2];
  v3[40] = v2[3];
  *(_OWORD *)(v3 + 41) = *((_OWORD *)v3 + 2);
  v3[43] = v2[6];
  *((unsigned char *)v3 + 57) = *((unsigned char *)v3 + 56);
  swift_task_dealloc();
  if (v0) {
    uint64_t v4 = sub_1A8CAABBC;
  }
  else {
    uint64_t v4 = sub_1A8CAAAE0;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1A8CAAAE0()
{
  char v1 = *(unsigned char *)(v0 + 57);
  uint64_t v2 = *(void *)(v0 + 344);
  long long v8 = *(_OWORD *)(v0 + 312);
  long long v9 = *(_OWORD *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v4 = *(void **)(v0 + 184);

  sub_1A8C8DE74(v3, &qword_1EB5EACF0);
  *uint64_t v4 = *(void *)(v0 + 168);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v5 = v8;
  *(_OWORD *)(v5 + 16) = v9;
  *(void *)(v5 + 32) = v2;
  *(unsigned char *)(v5 + 40) = v1;
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1A8CAABBC()
{
  char v1 = *(void **)(v0 + 304);
  *(void *)(v0 + 152) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 216);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = *(void **)(v0 + 304);
      uint64_t v5 = *(void **)(v0 + 280);
      uint64_t v6 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 248);
      uint64_t v7 = *(void *)(v0 + 232);
      uint64_t v8 = *(void *)(v0 + 240);
      uint64_t v9 = *(void *)(v0 + 224);
      sub_1A8C8DE74(v9, &qword_1EB5EACF0);

      uint64_t v10 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10, v3, v7);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v10, v7);
      v6(v9, 0, 1, v7);
      id v11 = sub_1A8CA6B90(8);

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
      swift_task_dealloc();

      goto LABEL_16;
    }
    sub_1A8CB243C(v3, (uint64_t (*)(void))type metadata accessor for InternalError);
  }
  uint64_t v12 = *(void **)(v0 + 304);

  swift_getErrorValue();
  uint64_t v13 = *(void *)(v0 + 72);
  uint64_t v14 = *(void *)(v0 + 80);
  id v15 = v12;
  id v16 = sub_1A8C90F38(v13, v14);
  id v17 = objc_msgSend(v16, sel_domain);

  uint64_t v18 = sub_1A8D59BF0();
  uint64_t v20 = v19;

  if (v18 == sub_1A8D59BF0() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v22 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      swift_getErrorValue();
      id v28 = sub_1A8C90F38(*(void *)(v0 + 96), *(void *)(v0 + 104));
      id v29 = objc_msgSend(v28, sel_domain);

      uint64_t v30 = sub_1A8D59BF0();
      uint64_t v32 = v31;

      uint64_t v33 = sub_1A8D59BF0();
      uint64_t v35 = *(void **)(v0 + 304);
      uint64_t v36 = *(void **)(v0 + 280);
      uint64_t v37 = *(void *)(v0 + 224);
      if (v30 == v33 && v32 == v34)
      {
        swift_bridgeObjectRelease_n();

        sub_1A8C8DE74(v37, &qword_1EB5EACF0);
      }
      else
      {
        char v38 = sub_1A8D5A390();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_1A8C8DE74(v37, &qword_1EB5EACF0);
        if ((v38 & 1) == 0) {
          goto LABEL_21;
        }
      }
      (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 248))(*(void *)(v0 + 224), 1, 1, *(void *)(v0 + 232));
      id v11 = *(id *)(v0 + 304);
      goto LABEL_16;
    }
  }
  uint64_t v23 = *(void **)(v0 + 280);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v26 = *(void *)(v0 + 224);
  uint64_t v25 = *(void *)(v0 + 232);

  swift_getErrorValue();
  BOOL v27 = sub_1A8CF64F4(*(void *)(v0 + 120), *(void *)(v0 + 128));

  sub_1A8C8DE74(v26, &qword_1EB5EACF0);
  v24(v26, 1, 1, v25);
  id v11 = *(id *)(v0 + 304);
  if (v27)
  {
LABEL_16:
    uint64_t v39 = *(void *)(v0 + 288) - 1;
    if (*(void *)(v0 + 288) != 1)
    {
      *(void *)(v0 + 280) = v11;
      *(void *)(v0 + 288) = v39;
      os_log_type_t v45 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E7B8 + dword_1E979E7B8);
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 296) = v40;
      *uint64_t v40 = v0;
      v40[1] = sub_1A8CAA970;
      uint64_t v41 = *(void *)(v0 + 224);
      return v45(v0 + 16, v0 + 168, v41);
    }
  }
  uint64_t v43 = *(void *)(v0 + 224);
  swift_willThrow();
  sub_1A8C8DE74(v43, &qword_1EB5EACF0);
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_1A8CAB0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[33] = a3;
  v4[34] = v3;
  v4[31] = a1;
  v4[32] = a2;
  v4[35] = type metadata accessor for InternalError();
  v4[36] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CAB14C, 0, 0);
}

void sub_1A8CAB14C()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    uint64_t v3 = swift_task_alloc();
    v0[37] = v3;
    uint64_t v4 = sub_1A8D596F0();
    v0[38] = v4;
    uint64_t v5 = *(void *)(v4 - 8);
    v0[39] = v5;
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v0[40] = v6;
    v0[41] = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v6(v3, 1, 1, v4);
    if (v2 < 1)
    {
      sub_1A8CA6B90(8);
      swift_willThrow();
      sub_1A8C8DE74(v3, &qword_1EB5EACF0);
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v9 = (void (*)(void))v0[1];
      v9();
    }
    else
    {
      v0[42] = @"CloudFeaturesServerErrorDomain";
      v0[43] = @"CloudFeaturesLocalErrorDomain";
      v0[44] = 0;
      v0[45] = v2;
      uint64_t v10 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E788 + dword_1E979E788);
      uint64_t v7 = (void *)swift_task_alloc();
      v0[46] = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_1A8CAB35C;
      uint64_t v8 = v0[37];
      v10((uint64_t)(v0 + 12), (uint64_t)(v0 + 2), v8);
    }
  }
}

uint64_t sub_1A8CAB35C()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[47] = v0;
  v3[48] = v2[12];
  v3[49] = v2[13];
  *((_OWORD *)v3 + 25) = *((_OWORD *)v3 + 7);
  v3[52] = v2[16];
  *((unsigned char *)v3 + 89) = *((unsigned char *)v3 + 136);
  swift_task_dealloc();
  if (v0) {
    uint64_t v4 = sub_1A8CAB59C;
  }
  else {
    uint64_t v4 = sub_1A8CAB4C8;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1A8CAB4C8()
{
  char v1 = *(unsigned char *)(v0 + 89);
  uint64_t v2 = *(void *)(v0 + 416);
  long long v9 = *(_OWORD *)(v0 + 384);
  long long v10 = *(_OWORD *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v5 = *(void *)(v0 + 248);
  uint64_t v4 = *(_OWORD **)(v0 + 256);

  sub_1A8C8DE74(v3, &qword_1EB5EACF0);
  long long v6 = *(_OWORD *)(v0 + 32);
  *uint64_t v4 = *(_OWORD *)(v0 + 16);
  v4[1] = v6;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v5 = v9;
  *(_OWORD *)(v5 + 16) = v10;
  *(void *)(v5 + 32) = v2;
  *(unsigned char *)(v5 + 40) = v1;
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1A8CAB59C()
{
  char v1 = *(void **)(v0 + 376);
  *(void *)(v0 + 224) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 288);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = *(void **)(v0 + 376);
      uint64_t v5 = *(void **)(v0 + 352);
      long long v6 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 320);
      uint64_t v7 = *(void *)(v0 + 304);
      uint64_t v8 = *(void *)(v0 + 312);
      uint64_t v9 = *(void *)(v0 + 296);
      sub_1A8C8DE74(v9, &qword_1EB5EACF0);

      uint64_t v10 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10, v3, v7);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v10, v7);
      v6(v9, 0, 1, v7);
      id v11 = sub_1A8CA6B90(8);

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
      swift_task_dealloc();

      goto LABEL_16;
    }
    sub_1A8CB243C(v3, (uint64_t (*)(void))type metadata accessor for InternalError);
  }
  uint64_t v12 = *(void **)(v0 + 376);

  swift_getErrorValue();
  uint64_t v13 = *(void *)(v0 + 152);
  uint64_t v14 = *(void *)(v0 + 160);
  id v15 = v12;
  id v16 = sub_1A8C90F38(v13, v14);
  id v17 = objc_msgSend(v16, sel_domain);

  uint64_t v18 = sub_1A8D59BF0();
  uint64_t v20 = v19;

  if (v18 == sub_1A8D59BF0() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v22 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      swift_getErrorValue();
      id v28 = sub_1A8C90F38(*(void *)(v0 + 176), *(void *)(v0 + 184));
      id v29 = objc_msgSend(v28, sel_domain);

      uint64_t v30 = sub_1A8D59BF0();
      uint64_t v32 = v31;

      uint64_t v33 = sub_1A8D59BF0();
      uint64_t v35 = *(void **)(v0 + 376);
      uint64_t v36 = *(void **)(v0 + 352);
      uint64_t v37 = *(void *)(v0 + 296);
      if (v30 == v33 && v32 == v34)
      {
        swift_bridgeObjectRelease_n();

        sub_1A8C8DE74(v37, &qword_1EB5EACF0);
      }
      else
      {
        char v38 = sub_1A8D5A390();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_1A8C8DE74(v37, &qword_1EB5EACF0);
        if ((v38 & 1) == 0) {
          goto LABEL_21;
        }
      }
      (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 320))(*(void *)(v0 + 296), 1, 1, *(void *)(v0 + 304));
      id v11 = *(id *)(v0 + 376);
      goto LABEL_16;
    }
  }
  uint64_t v23 = *(void **)(v0 + 352);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 320);
  uint64_t v26 = *(void *)(v0 + 296);
  uint64_t v25 = *(void *)(v0 + 304);

  swift_getErrorValue();
  BOOL v27 = sub_1A8CF64F4(*(void *)(v0 + 200), *(void *)(v0 + 208));

  sub_1A8C8DE74(v26, &qword_1EB5EACF0);
  v24(v26, 1, 1, v25);
  id v11 = *(id *)(v0 + 376);
  if (v27)
  {
LABEL_16:
    uint64_t v39 = *(void *)(v0 + 360) - 1;
    if (*(void *)(v0 + 360) != 1)
    {
      *(void *)(v0 + 352) = v11;
      *(void *)(v0 + 360) = v39;
      os_log_type_t v45 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E788 + dword_1E979E788);
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 368) = v40;
      *uint64_t v40 = v0;
      v40[1] = sub_1A8CAB35C;
      uint64_t v41 = *(void *)(v0 + 296);
      return v45(v0 + 96, v0 + 16, v41);
    }
  }
  uint64_t v43 = *(void *)(v0 + 296);
  swift_willThrow();
  sub_1A8C8DE74(v43, &qword_1EB5EACF0);
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_1A8CABA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[34] = a3;
  v4[35] = v3;
  v4[32] = a1;
  v4[33] = a2;
  v4[36] = type metadata accessor for NetworkRequest();
  v4[37] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CABB2C, 0, 0);
}

uint64_t sub_1A8CABB2C()
{
  sub_1A8CB249C(*(void *)(v0 + 280) + 120, v0 + 88, &qword_1EB5E9618);
  uint64_t v1 = *(void *)(v0 + 112);
  if (v1)
  {
    id v2 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 88), v1);
    sub_1A8C91DA8(*v2, v2[1], v2[2], v2[3]);
    __swift_destroy_boxed_opaque_existential_0(v0 + 88);
  }
  else
  {
    sub_1A8C8DE74(v0 + 88, &qword_1EB5E9618);
  }
  uint64_t v3 = *(void **)(v0 + 280);
  uint64_t v5 = v3[13];
  uint64_t v4 = v3[14];
  __swift_project_boxed_opaque_existential_1(v3 + 10, v5);
  sub_1A8C9208C(v5, v4);
  uint64_t v6 = *(uint64_t **)(v0 + 296);
  uint64_t v29 = *(void *)(v0 + 288);
  uint64_t v8 = *(void *)(v0 + 272);
  uint64_t v7 = *(void *)(v0 + 280);
  sub_1A8C91CA8(v7 + 40, v0 + 128);
  sub_1A8C91CA8(v7, v0 + 168);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  uint64_t v9 = swift_task_alloc();
  sub_1A8CB249C(v8, v9, &qword_1EB5EACF0);
  uint64_t v10 = sub_1A8D59720();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = swift_task_alloc();
  sub_1A8D59710();
  uint64_t v13 = sub_1A8D59700();
  unint64_t v15 = v14;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
  uint64_t v17 = sub_1A8C91D0C(8, v13, v15, v16);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = MEMORY[0x1AD0E5BA0](v17, v19, v21, v23);
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  *uint64_t v6 = v24;
  v6[1] = v26;
  sub_1A8C91C90((long long *)(v0 + 128), (uint64_t)(v6 + 2));
  sub_1A8C91C90((long long *)(v0 + 168), (uint64_t)(v6 + 7));
  sub_1A8C921A0(v9, (uint64_t)v6 + *(int *)(v29 + 28));
  swift_task_dealloc();
  BOOL v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v27;
  *BOOL v27 = v0;
  v27[1] = sub_1A8CABE50;
  return sub_1A8C9F484(v0 + 16);
}

uint64_t sub_1A8CABE50()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_1A8CB4F74;
  }
  else {
    id v2 = sub_1A8CABF64;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CABF64()
{
  sub_1A8CB249C(*(void *)(v0 + 280) + 160, v0 + 208, &qword_1EB5E9620);
  uint64_t v1 = *(void *)(v0 + 232);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 312);
    uint64_t v3 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 208), v1);
    sub_1A8CA7A44(*(void **)(v0 + 32), *v3, v3[1], v3[2], v3[3]);
    if (v2)
    {
      uint64_t v4 = *(void *)(v0 + 296);
      sub_1A8CB2500((uint64_t *)(v0 + 16));
      sub_1A8CB243C(v4, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
      __swift_destroy_boxed_opaque_existential_0(v0 + 208);
      goto LABEL_9;
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 208);
  }
  else
  {
    sub_1A8C8DE74(v0 + 208, &qword_1EB5E9620);
    uint64_t v2 = *(void *)(v0 + 312);
  }
  sub_1A8CB154C(*(void **)(v0 + 32));
  if (!v2)
  {
    sub_1A8D593A0();
    swift_allocObject();
    sub_1A8D59390();
    uint64_t v6 = *(void *)(sub_1A8D59360() - 8);
    swift_task_alloc();
    (*(void (**)(void))(v6 + 104))();
    sub_1A8D59370();
    swift_task_dealloc();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9630);
    sub_1A8CB2554();
    sub_1A8D59380();
    uint64_t v7 = *(void *)(v0 + 296);
    uint64_t v10 = *(void *)(v0 + 256);
    uint64_t v9 = *(void **)(v0 + 264);
    swift_release();
    sub_1A8CB243C(v7, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
    *uint64_t v9 = *(void *)(v0 + 248);
    uint64_t v12 = *(void *)(v0 + 40);
    uint64_t v11 = *(void *)(v0 + 48);
    uint64_t v14 = *(void *)(v0 + 56);
    uint64_t v13 = *(void *)(v0 + 64);
    uint64_t v15 = *(void *)(v0 + 72);
    char v16 = *(unsigned char *)(v0 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A8CB2500((uint64_t *)(v0 + 16));
    swift_task_dealloc();
    *(void *)uint64_t v10 = v12;
    *(void *)(v10 + 8) = v11;
    *(void *)(v10 + 16) = v14;
    *(void *)(v10 + 24) = v13;
    *(void *)(v10 + 32) = v15;
    *(unsigned char *)(v10 + 40) = v16;
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_10;
  }
  uint64_t v5 = *(void *)(v0 + 296);
  sub_1A8CB2500((uint64_t *)(v0 + 16));
  sub_1A8CB243C(v5, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
LABEL_9:
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
LABEL_10:
  return v17();
}

uint64_t sub_1A8CAC25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[33] = a3;
  v4[34] = v3;
  v4[31] = a1;
  v4[32] = a2;
  v4[35] = type metadata accessor for NetworkRequest();
  v4[36] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CAC2F4, 0, 0);
}

uint64_t sub_1A8CAC2F4()
{
  sub_1A8CB249C(*(void *)(v0 + 272) + 120, v0 + 88, &qword_1EB5E9618);
  uint64_t v1 = *(void *)(v0 + 112);
  if (v1)
  {
    uint64_t v2 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 88), v1);
    sub_1A8C91DA8(*v2, v2[1], v2[2], v2[3]);
    __swift_destroy_boxed_opaque_existential_0(v0 + 88);
  }
  else
  {
    sub_1A8C8DE74(v0 + 88, &qword_1EB5E9618);
  }
  uint64_t v3 = *(void **)(v0 + 272);
  uint64_t v5 = v3[13];
  uint64_t v4 = v3[14];
  __swift_project_boxed_opaque_existential_1(v3 + 10, v5);
  sub_1A8C9208C(v5, v4);
  uint64_t v6 = *(uint64_t **)(v0 + 288);
  uint64_t v29 = *(void *)(v0 + 280);
  uint64_t v8 = *(void *)(v0 + 264);
  uint64_t v7 = *(void *)(v0 + 272);
  sub_1A8C91CA8(v7 + 40, v0 + 128);
  sub_1A8C91CA8(v7, v0 + 168);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  uint64_t v9 = swift_task_alloc();
  sub_1A8CB249C(v8, v9, &qword_1EB5EACF0);
  uint64_t v10 = sub_1A8D59720();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = swift_task_alloc();
  sub_1A8D59710();
  uint64_t v13 = sub_1A8D59700();
  unint64_t v15 = v14;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
  uint64_t v17 = sub_1A8C91D0C(8, v13, v15, v16);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = MEMORY[0x1AD0E5BA0](v17, v19, v21, v23);
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  *uint64_t v6 = v24;
  v6[1] = v26;
  sub_1A8C91C90((long long *)(v0 + 128), (uint64_t)(v6 + 2));
  sub_1A8C91C90((long long *)(v0 + 168), (uint64_t)(v6 + 7));
  sub_1A8C921A0(v9, (uint64_t)v6 + *(int *)(v29 + 28));
  swift_task_dealloc();
  BOOL v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v27;
  *BOOL v27 = v0;
  v27[1] = sub_1A8CAC618;
  return sub_1A8C9F484(v0 + 16);
}

uint64_t sub_1A8CAC618()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A8CACA18;
  }
  else {
    uint64_t v2 = sub_1A8CAC72C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CAC72C()
{
  sub_1A8CB249C(*(void *)(v0 + 272) + 160, v0 + 208, &qword_1EB5E9620);
  uint64_t v1 = *(void *)(v0 + 232);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 304);
    uint64_t v3 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 208), v1);
    sub_1A8CA7A44(*(void **)(v0 + 32), *v3, v3[1], v3[2], v3[3]);
    if (v2)
    {
      uint64_t v4 = *(void *)(v0 + 288);
      sub_1A8CB2500((uint64_t *)(v0 + 16));
      sub_1A8CB243C(v4, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
      __swift_destroy_boxed_opaque_existential_0(v0 + 208);
      goto LABEL_9;
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 208);
  }
  else
  {
    sub_1A8C8DE74(v0 + 208, &qword_1EB5E9620);
    uint64_t v2 = *(void *)(v0 + 304);
  }
  sub_1A8CB154C(*(void **)(v0 + 32));
  if (!v2)
  {
    sub_1A8D593A0();
    swift_allocObject();
    sub_1A8D59390();
    uint64_t v6 = *(void *)(sub_1A8D59360() - 8);
    swift_task_alloc();
    (*(void (**)(void))(v6 + 104))();
    sub_1A8D59370();
    swift_task_dealloc();
    sub_1A8CB2BB0();
    sub_1A8D59380();
    uint64_t v7 = *(void *)(v0 + 288);
    uint64_t v10 = *(void *)(v0 + 248);
    uint64_t v9 = *(unsigned char **)(v0 + 256);
    swift_release();
    sub_1A8CB243C(v7, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
    *uint64_t v9 = *(unsigned char *)(v0 + 81);
    uint64_t v12 = *(void *)(v0 + 40);
    uint64_t v11 = *(void *)(v0 + 48);
    uint64_t v14 = *(void *)(v0 + 56);
    uint64_t v13 = *(void *)(v0 + 64);
    uint64_t v15 = *(void *)(v0 + 72);
    char v16 = *(unsigned char *)(v0 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A8CB2500((uint64_t *)(v0 + 16));
    swift_task_dealloc();
    *(void *)uint64_t v10 = v12;
    *(void *)(v10 + 8) = v11;
    *(void *)(v10 + 16) = v14;
    *(void *)(v10 + 24) = v13;
    *(void *)(v10 + 32) = v15;
    *(unsigned char *)(v10 + 40) = v16;
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_10;
  }
  uint64_t v5 = *(void *)(v0 + 288);
  sub_1A8CB2500((uint64_t *)(v0 + 16));
  sub_1A8CB243C(v5, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
LABEL_9:
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
LABEL_10:
  return v17();
}

uint64_t sub_1A8CACA18()
{
  sub_1A8CB243C(*(void *)(v0 + 288), (uint64_t (*)(void))type metadata accessor for NetworkRequest);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CACA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[34] = a3;
  v4[35] = v3;
  v4[32] = a1;
  v4[33] = a2;
  v4[36] = type metadata accessor for NetworkRequest();
  v4[37] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CACB30, 0, 0);
}

uint64_t sub_1A8CACB30()
{
  sub_1A8CB249C(*(void *)(v0 + 280) + 120, v0 + 88, &qword_1EB5E9618);
  uint64_t v1 = *(void *)(v0 + 112);
  if (v1)
  {
    uint64_t v2 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 88), v1);
    sub_1A8C91DA8(*v2, v2[1], v2[2], v2[3]);
    __swift_destroy_boxed_opaque_existential_0(v0 + 88);
  }
  else
  {
    sub_1A8C8DE74(v0 + 88, &qword_1EB5E9618);
  }
  uint64_t v3 = *(void **)(v0 + 280);
  uint64_t v5 = v3[13];
  uint64_t v4 = v3[14];
  __swift_project_boxed_opaque_existential_1(v3 + 10, v5);
  sub_1A8C9208C(v5, v4);
  uint64_t v6 = *(uint64_t **)(v0 + 296);
  uint64_t v29 = *(void *)(v0 + 288);
  uint64_t v8 = *(void *)(v0 + 272);
  uint64_t v7 = *(void *)(v0 + 280);
  sub_1A8C91CA8(v7 + 40, v0 + 128);
  sub_1A8C91CA8(v7, v0 + 168);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  uint64_t v9 = swift_task_alloc();
  sub_1A8CB249C(v8, v9, &qword_1EB5EACF0);
  uint64_t v10 = sub_1A8D59720();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = swift_task_alloc();
  sub_1A8D59710();
  uint64_t v13 = sub_1A8D59700();
  unint64_t v15 = v14;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
  uint64_t v17 = sub_1A8C91D0C(8, v13, v15, v16);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = MEMORY[0x1AD0E5BA0](v17, v19, v21, v23);
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  *uint64_t v6 = v24;
  v6[1] = v26;
  sub_1A8C91C90((long long *)(v0 + 128), (uint64_t)(v6 + 2));
  sub_1A8C91C90((long long *)(v0 + 168), (uint64_t)(v6 + 7));
  sub_1A8C921A0(v9, (uint64_t)v6 + *(int *)(v29 + 28));
  swift_task_dealloc();
  BOOL v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v27;
  *BOOL v27 = v0;
  v27[1] = sub_1A8CACE54;
  return sub_1A8C9F484(v0 + 16);
}

uint64_t sub_1A8CACE54()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A8CB4F74;
  }
  else {
    uint64_t v2 = sub_1A8CACF68;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CACF68()
{
  sub_1A8CB249C(*(void *)(v0 + 280) + 160, v0 + 208, &qword_1EB5E9620);
  uint64_t v1 = *(void *)(v0 + 232);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 312);
    uint64_t v3 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 208), v1);
    sub_1A8CA7A44(*(void **)(v0 + 32), *v3, v3[1], v3[2], v3[3]);
    if (v2)
    {
      uint64_t v4 = *(void *)(v0 + 296);
      sub_1A8CB2500((uint64_t *)(v0 + 16));
      sub_1A8CB243C(v4, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
      __swift_destroy_boxed_opaque_existential_0(v0 + 208);
      goto LABEL_9;
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 208);
  }
  else
  {
    sub_1A8C8DE74(v0 + 208, &qword_1EB5E9620);
    uint64_t v2 = *(void *)(v0 + 312);
  }
  sub_1A8CB154C(*(void **)(v0 + 32));
  if (!v2)
  {
    sub_1A8D593A0();
    swift_allocObject();
    sub_1A8D59390();
    uint64_t v6 = *(void *)(sub_1A8D59360() - 8);
    swift_task_alloc();
    (*(void (**)(void))(v6 + 104))();
    sub_1A8D59370();
    swift_task_dealloc();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9450);
    sub_1A8CB40E0();
    sub_1A8D59380();
    uint64_t v7 = *(void *)(v0 + 296);
    uint64_t v10 = *(void *)(v0 + 256);
    uint64_t v9 = *(void **)(v0 + 264);
    swift_release();
    sub_1A8CB243C(v7, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
    *uint64_t v9 = *(void *)(v0 + 248);
    uint64_t v12 = *(void *)(v0 + 40);
    uint64_t v11 = *(void *)(v0 + 48);
    uint64_t v14 = *(void *)(v0 + 56);
    uint64_t v13 = *(void *)(v0 + 64);
    uint64_t v15 = *(void *)(v0 + 72);
    char v16 = *(unsigned char *)(v0 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A8CB2500((uint64_t *)(v0 + 16));
    swift_task_dealloc();
    *(void *)uint64_t v10 = v12;
    *(void *)(v10 + 8) = v11;
    *(void *)(v10 + 16) = v14;
    *(void *)(v10 + 24) = v13;
    *(void *)(v10 + 32) = v15;
    *(unsigned char *)(v10 + 40) = v16;
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_10;
  }
  uint64_t v5 = *(void *)(v0 + 296);
  sub_1A8CB2500((uint64_t *)(v0 + 16));
  sub_1A8CB243C(v5, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
LABEL_9:
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
LABEL_10:
  return v17();
}

uint64_t sub_1A8CAD260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[38] = a3;
  v4[39] = v3;
  v4[36] = a1;
  v4[37] = a2;
  v4[40] = type metadata accessor for NetworkRequest();
  v4[41] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CAD2F8, 0, 0);
}

uint64_t sub_1A8CAD2F8()
{
  sub_1A8CB249C(*(void *)(v0 + 312) + 120, v0 + 88, &qword_1EB5E9618);
  uint64_t v1 = *(void *)(v0 + 112);
  if (v1)
  {
    uint64_t v2 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 88), v1);
    sub_1A8C91DA8(*v2, v2[1], v2[2], v2[3]);
    __swift_destroy_boxed_opaque_existential_0(v0 + 88);
  }
  else
  {
    sub_1A8C8DE74(v0 + 88, &qword_1EB5E9618);
  }
  uint64_t v3 = *(void **)(v0 + 312);
  uint64_t v5 = v3[13];
  uint64_t v4 = v3[14];
  __swift_project_boxed_opaque_existential_1(v3 + 10, v5);
  sub_1A8C9208C(v5, v4);
  uint64_t v6 = *(uint64_t **)(v0 + 328);
  uint64_t v29 = *(void *)(v0 + 320);
  uint64_t v8 = *(void *)(v0 + 304);
  uint64_t v7 = *(void *)(v0 + 312);
  sub_1A8C91CA8(v7 + 40, v0 + 128);
  sub_1A8C91CA8(v7, v0 + 168);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  uint64_t v9 = swift_task_alloc();
  sub_1A8CB249C(v8, v9, &qword_1EB5EACF0);
  uint64_t v10 = sub_1A8D59720();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = swift_task_alloc();
  sub_1A8D59710();
  uint64_t v13 = sub_1A8D59700();
  unint64_t v15 = v14;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
  uint64_t v17 = sub_1A8C91D0C(8, v13, v15, v16);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = MEMORY[0x1AD0E5BA0](v17, v19, v21, v23);
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  *uint64_t v6 = v24;
  v6[1] = v26;
  sub_1A8C91C90((long long *)(v0 + 128), (uint64_t)(v6 + 2));
  sub_1A8C91C90((long long *)(v0 + 168), (uint64_t)(v6 + 7));
  sub_1A8C921A0(v9, (uint64_t)v6 + *(int *)(v29 + 28));
  swift_task_dealloc();
  BOOL v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v27;
  *BOOL v27 = v0;
  v27[1] = sub_1A8CAD61C;
  return sub_1A8C9F484(v0 + 16);
}

uint64_t sub_1A8CAD61C()
{
  *(void *)(*(void *)v1 + 344) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A8CADA2C;
  }
  else {
    uint64_t v2 = sub_1A8CAD730;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CAD730()
{
  sub_1A8CB249C(*(void *)(v0 + 312) + 160, v0 + 208, &qword_1EB5E9620);
  uint64_t v1 = *(void *)(v0 + 232);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 344);
    uint64_t v3 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 208), v1);
    sub_1A8CA7A44(*(void **)(v0 + 32), *v3, v3[1], v3[2], v3[3]);
    if (v2)
    {
      uint64_t v4 = *(void *)(v0 + 328);
      sub_1A8CB2500((uint64_t *)(v0 + 16));
      sub_1A8CB243C(v4, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
      __swift_destroy_boxed_opaque_existential_0(v0 + 208);
      goto LABEL_9;
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 208);
  }
  else
  {
    sub_1A8C8DE74(v0 + 208, &qword_1EB5E9620);
    uint64_t v2 = *(void *)(v0 + 344);
  }
  sub_1A8CB154C(*(void **)(v0 + 32));
  if (!v2)
  {
    sub_1A8D593A0();
    swift_allocObject();
    sub_1A8D59390();
    uint64_t v6 = *(void *)(sub_1A8D59360() - 8);
    swift_task_alloc();
    (*(void (**)(void))(v6 + 104))();
    sub_1A8D59370();
    swift_task_dealloc();
    sub_1A8CB408C();
    sub_1A8D59380();
    uint64_t v7 = *(void *)(v0 + 328);
    uint64_t v10 = *(void *)(v0 + 288);
    uint64_t v9 = *(void *)(v0 + 296);
    swift_release();
    sub_1A8CB243C(v7, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
    uint64_t v11 = *(void *)(v0 + 264);
    long long v12 = *(_OWORD *)(v0 + 272);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)(v0 + 248);
    *(void *)(v9 + 16) = v11;
    *(_OWORD *)(v9 + 24) = v12;
    uint64_t v14 = *(void *)(v0 + 40);
    uint64_t v13 = *(void *)(v0 + 48);
    uint64_t v16 = *(void *)(v0 + 56);
    uint64_t v15 = *(void *)(v0 + 64);
    uint64_t v17 = *(void *)(v0 + 72);
    char v18 = *(unsigned char *)(v0 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A8CB2500((uint64_t *)(v0 + 16));
    swift_task_dealloc();
    *(void *)uint64_t v10 = v14;
    *(void *)(v10 + 8) = v13;
    *(void *)(v10 + 16) = v16;
    *(void *)(v10 + 24) = v15;
    *(void *)(v10 + 32) = v17;
    *(unsigned char *)(v10 + 40) = v18;
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_10;
  }
  uint64_t v5 = *(void *)(v0 + 328);
  sub_1A8CB2500((uint64_t *)(v0 + 16));
  sub_1A8CB243C(v5, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
LABEL_9:
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
LABEL_10:
  return v19();
}

uint64_t sub_1A8CADA2C()
{
  sub_1A8CB243C(*(void *)(v0 + 328), (uint64_t (*)(void))type metadata accessor for NetworkRequest);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CADAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[34] = a3;
  v4[35] = v3;
  v4[32] = a1;
  v4[33] = a2;
  v4[36] = type metadata accessor for NetworkRequest();
  v4[37] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CADB44, 0, 0);
}

uint64_t sub_1A8CADB44()
{
  sub_1A8CB249C(*(void *)(v0 + 280) + 120, v0 + 88, &qword_1EB5E9618);
  uint64_t v1 = *(void *)(v0 + 112);
  if (v1)
  {
    uint64_t v2 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 88), v1);
    sub_1A8C91DA8(*v2, v2[1], v2[2], v2[3]);
    __swift_destroy_boxed_opaque_existential_0(v0 + 88);
  }
  else
  {
    sub_1A8C8DE74(v0 + 88, &qword_1EB5E9618);
  }
  uint64_t v3 = *(void **)(v0 + 280);
  uint64_t v5 = v3[13];
  uint64_t v4 = v3[14];
  __swift_project_boxed_opaque_existential_1(v3 + 10, v5);
  sub_1A8C9208C(v5, v4);
  uint64_t v6 = *(uint64_t **)(v0 + 296);
  uint64_t v29 = *(void *)(v0 + 288);
  uint64_t v8 = *(void *)(v0 + 272);
  uint64_t v7 = *(void *)(v0 + 280);
  sub_1A8C91CA8(v7 + 40, v0 + 128);
  sub_1A8C91CA8(v7, v0 + 168);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  uint64_t v9 = swift_task_alloc();
  sub_1A8CB249C(v8, v9, &qword_1EB5EACF0);
  uint64_t v10 = sub_1A8D59720();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = swift_task_alloc();
  sub_1A8D59710();
  uint64_t v13 = sub_1A8D59700();
  unint64_t v15 = v14;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
  uint64_t v17 = sub_1A8C91D0C(8, v13, v15, v16);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = MEMORY[0x1AD0E5BA0](v17, v19, v21, v23);
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  *uint64_t v6 = v24;
  v6[1] = v26;
  sub_1A8C91C90((long long *)(v0 + 128), (uint64_t)(v6 + 2));
  sub_1A8C91C90((long long *)(v0 + 168), (uint64_t)(v6 + 7));
  sub_1A8C921A0(v9, (uint64_t)v6 + *(int *)(v29 + 28));
  swift_task_dealloc();
  BOOL v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v27;
  *BOOL v27 = v0;
  v27[1] = sub_1A8CADE68;
  return sub_1A8C9F484(v0 + 16);
}

uint64_t sub_1A8CADE68()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A8CAE2A0;
  }
  else {
    uint64_t v2 = sub_1A8CADF7C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CADF7C()
{
  sub_1A8CB249C(*(void *)(v0 + 280) + 160, v0 + 208, &qword_1EB5E9620);
  uint64_t v1 = *(void *)(v0 + 232);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 312);
    uint64_t v3 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 208), v1);
    sub_1A8CA7A44(*(void **)(v0 + 32), *v3, v3[1], v3[2], v3[3]);
    if (v2)
    {
      uint64_t v4 = *(void *)(v0 + 296);
      sub_1A8CB2500((uint64_t *)(v0 + 16));
      sub_1A8CB243C(v4, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
      __swift_destroy_boxed_opaque_existential_0(v0 + 208);
      goto LABEL_9;
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 208);
  }
  else
  {
    sub_1A8C8DE74(v0 + 208, &qword_1EB5E9620);
    uint64_t v2 = *(void *)(v0 + 312);
  }
  sub_1A8CB154C(*(void **)(v0 + 32));
  if (!v2)
  {
    sub_1A8D593A0();
    swift_allocObject();
    sub_1A8D59390();
    uint64_t v6 = *(void *)(sub_1A8D59360() - 8);
    swift_task_alloc();
    (*(void (**)(void))(v6 + 104))();
    sub_1A8D59370();
    swift_task_dealloc();
    type metadata accessor for Ticket();
    sub_1A8CB4044(&qword_1E979E7C0, (void (*)(uint64_t))type metadata accessor for Ticket);
    sub_1A8D59380();
    uint64_t v7 = *(void *)(v0 + 296);
    uint64_t v10 = *(void *)(v0 + 256);
    uint64_t v9 = *(void **)(v0 + 264);
    swift_release();
    sub_1A8CB243C(v7, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
    *uint64_t v9 = *(void *)(v0 + 248);
    uint64_t v12 = *(void *)(v0 + 40);
    uint64_t v11 = *(void *)(v0 + 48);
    uint64_t v14 = *(void *)(v0 + 56);
    uint64_t v13 = *(void *)(v0 + 64);
    uint64_t v15 = *(void *)(v0 + 72);
    char v16 = *(unsigned char *)(v0 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A8CB2500((uint64_t *)(v0 + 16));
    swift_task_dealloc();
    *(void *)uint64_t v10 = v12;
    *(void *)(v10 + 8) = v11;
    *(void *)(v10 + 16) = v14;
    *(void *)(v10 + 24) = v13;
    *(void *)(v10 + 32) = v15;
    *(unsigned char *)(v10 + 40) = v16;
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_10;
  }
  uint64_t v5 = *(void *)(v0 + 296);
  sub_1A8CB2500((uint64_t *)(v0 + 16));
  sub_1A8CB243C(v5, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
LABEL_9:
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
LABEL_10:
  return v17();
}

uint64_t sub_1A8CAE2A0()
{
  sub_1A8CB243C(*(void *)(v0 + 296), (uint64_t (*)(void))type metadata accessor for NetworkRequest);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CAE320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[37] = a3;
  v4[38] = v3;
  v4[35] = a1;
  v4[36] = a2;
  v4[39] = type metadata accessor for NetworkRequest();
  v4[40] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CAE3B8, 0, 0);
}

uint64_t sub_1A8CAE3B8()
{
  sub_1A8CB249C(*(void *)(v0 + 304) + 120, v0 + 88, &qword_1EB5E9618);
  uint64_t v1 = *(void *)(v0 + 112);
  if (v1)
  {
    uint64_t v2 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 88), v1);
    sub_1A8C91DA8(*v2, v2[1], v2[2], v2[3]);
    __swift_destroy_boxed_opaque_existential_0(v0 + 88);
  }
  else
  {
    sub_1A8C8DE74(v0 + 88, &qword_1EB5E9618);
  }
  uint64_t v3 = *(void **)(v0 + 304);
  uint64_t v5 = v3[13];
  uint64_t v4 = v3[14];
  __swift_project_boxed_opaque_existential_1(v3 + 10, v5);
  sub_1A8C9208C(v5, v4);
  uint64_t v6 = *(uint64_t **)(v0 + 320);
  uint64_t v29 = *(void *)(v0 + 312);
  uint64_t v8 = *(void *)(v0 + 296);
  uint64_t v7 = *(void *)(v0 + 304);
  sub_1A8C91CA8(v7 + 40, v0 + 128);
  sub_1A8C91CA8(v7, v0 + 168);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  uint64_t v9 = swift_task_alloc();
  sub_1A8CB249C(v8, v9, &qword_1EB5EACF0);
  uint64_t v10 = sub_1A8D59720();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = swift_task_alloc();
  sub_1A8D59710();
  uint64_t v13 = sub_1A8D59700();
  unint64_t v15 = v14;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
  uint64_t v17 = sub_1A8C91D0C(8, v13, v15, v16);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = MEMORY[0x1AD0E5BA0](v17, v19, v21, v23);
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  *uint64_t v6 = v24;
  v6[1] = v26;
  sub_1A8C91C90((long long *)(v0 + 128), (uint64_t)(v6 + 2));
  sub_1A8C91C90((long long *)(v0 + 168), (uint64_t)(v6 + 7));
  sub_1A8C921A0(v9, (uint64_t)v6 + *(int *)(v29 + 28));
  swift_task_dealloc();
  BOOL v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v27;
  *BOOL v27 = v0;
  v27[1] = sub_1A8CAE6DC;
  return sub_1A8C9F484(v0 + 16);
}

uint64_t sub_1A8CAE6DC()
{
  *(void *)(*(void *)v1 + 336) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A8CAEAE4;
  }
  else {
    uint64_t v2 = sub_1A8CAE7F0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CAE7F0()
{
  sub_1A8CB249C(*(void *)(v0 + 304) + 160, v0 + 208, &qword_1EB5E9620);
  uint64_t v1 = *(void *)(v0 + 232);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 336);
    uint64_t v3 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 208), v1);
    sub_1A8CA7A44(*(void **)(v0 + 32), *v3, v3[1], v3[2], v3[3]);
    if (v2)
    {
      uint64_t v4 = *(void *)(v0 + 320);
      sub_1A8CB2500((uint64_t *)(v0 + 16));
      sub_1A8CB243C(v4, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
      __swift_destroy_boxed_opaque_existential_0(v0 + 208);
      goto LABEL_9;
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 208);
  }
  else
  {
    sub_1A8C8DE74(v0 + 208, &qword_1EB5E9620);
    uint64_t v2 = *(void *)(v0 + 336);
  }
  sub_1A8CB154C(*(void **)(v0 + 32));
  if (!v2)
  {
    sub_1A8D593A0();
    swift_allocObject();
    sub_1A8D59390();
    uint64_t v6 = *(void *)(sub_1A8D59360() - 8);
    swift_task_alloc();
    (*(void (**)(void))(v6 + 104))();
    sub_1A8D59370();
    swift_task_dealloc();
    sub_1A8CB3F20();
    sub_1A8D59380();
    uint64_t v7 = *(void *)(v0 + 320);
    uint64_t v10 = *(void *)(v0 + 280);
    uint64_t v9 = *(_OWORD **)(v0 + 288);
    swift_release();
    sub_1A8CB243C(v7, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
    long long v11 = *(_OWORD *)(v0 + 264);
    *uint64_t v9 = *(_OWORD *)(v0 + 248);
    v9[1] = v11;
    uint64_t v13 = *(void *)(v0 + 40);
    uint64_t v12 = *(void *)(v0 + 48);
    uint64_t v15 = *(void *)(v0 + 56);
    uint64_t v14 = *(void *)(v0 + 64);
    uint64_t v16 = *(void *)(v0 + 72);
    char v17 = *(unsigned char *)(v0 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A8CB2500((uint64_t *)(v0 + 16));
    swift_task_dealloc();
    *(void *)uint64_t v10 = v13;
    *(void *)(v10 + 8) = v12;
    *(void *)(v10 + 16) = v15;
    *(void *)(v10 + 24) = v14;
    *(void *)(v10 + 32) = v16;
    *(unsigned char *)(v10 + 40) = v17;
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_10;
  }
  uint64_t v5 = *(void *)(v0 + 320);
  sub_1A8CB2500((uint64_t *)(v0 + 16));
  sub_1A8CB243C(v5, (uint64_t (*)(void))type metadata accessor for NetworkRequest);
LABEL_9:
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
LABEL_10:
  return v18();
}

uint64_t sub_1A8CAEAE4()
{
  sub_1A8CB243C(*(void *)(v0 + 320), (uint64_t (*)(void))type metadata accessor for NetworkRequest);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CAEB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[45] = a8;
  v8[46] = v10;
  v8[43] = a6;
  v8[44] = a7;
  v8[41] = a4;
  v8[42] = a5;
  v8[39] = a2;
  v8[40] = a3;
  v8[38] = a1;
  return MEMORY[0x1F4188298](sub_1A8CAEB9C, 0, 0);
}

uint64_t sub_1A8CAEB9C()
{
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 320);
  long long v12 = *(_OWORD *)(v0 + 328);
  long long v13 = *(_OWORD *)(v0 + 360);
  sub_1A8C91CA8(*(void *)(v0 + 304), v0 + 16);
  *(void *)(v0 + 160) = &type metadata for RetryAfterPreProcessor;
  *(void *)(v0 + 168) = &off_1EFF54F28;
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 136) = v5;
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *(_OWORD *)(v5 + 32) = v12;
  *(void *)(v0 + 200) = &type metadata for RetryAfterPostProcessor;
  *(void *)(v0 + 208) = &off_1EFF54FD8;
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 176) = v6;
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v1;
  *(_OWORD *)(v6 + 32) = v13;
  uint64_t v7 = self;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v7, sel_sharedSessionWithNoUrlCache);
  id v9 = objc_msgSend(v8, sel_urlSession);

  *(void *)(v0 + 80) = sub_1A8C8EB1C(0, &qword_1EB5E9678);
  *(void *)(v0 + 88) = &off_1EFF55170;
  *(void *)(v0 + 56) = v9;
  *(void *)(v0 + 120) = &type metadata for AlwaysAuthorized;
  *(void *)(v0 + 128) = &off_1EFF54900;
  *(void *)(v0 + 240) = &type metadata for DefaultGatewayResponseValidator;
  *(void *)(v0 + 248) = &off_1EFF55068;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E760 + dword_1E979E760);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1A8CAEDC8;
  return v14(v0 + 256, v0 + 297, 2);
}

uint64_t sub_1A8CAEDC8()
{
  *(void *)(*(void *)v1 + 384) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8CAEF84;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1A8CAEF1C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CAEF1C()
{
  sub_1A8C93188(v0 + 16);
  uint64_t v1 = *(unsigned __int8 *)(v0 + 297);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1A8CAEF84()
{
  sub_1A8C93188(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1A8CAEFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[46] = a8;
  v8[47] = v10;
  v8[44] = a6;
  v8[45] = a7;
  v8[42] = a4;
  v8[43] = a5;
  v8[40] = a2;
  v8[41] = a3;
  v8[39] = a1;
  return MEMORY[0x1F4188298](sub_1A8CAF024, 0, 0);
}

uint64_t sub_1A8CAF024()
{
  uint64_t v2 = *(void *)(v0 + 352);
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v4 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 328);
  long long v12 = *(_OWORD *)(v0 + 336);
  long long v13 = *(_OWORD *)(v0 + 368);
  sub_1A8C91CA8(*(void *)(v0 + 312), v0 + 16);
  *(void *)(v0 + 160) = &type metadata for RetryAfterPreProcessor;
  *(void *)(v0 + 168) = &off_1EFF54F28;
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 136) = v5;
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *(_OWORD *)(v5 + 32) = v12;
  *(void *)(v0 + 200) = &type metadata for RetryAfterPostProcessor;
  *(void *)(v0 + 208) = &off_1EFF54FD8;
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 176) = v6;
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v1;
  *(_OWORD *)(v6 + 32) = v13;
  uint64_t v7 = self;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v7, sel_sharedSessionWithNoUrlCache);
  id v9 = objc_msgSend(v8, sel_urlSession);

  *(void *)(v0 + 80) = sub_1A8C8EB1C(0, &qword_1EB5E9678);
  *(void *)(v0 + 88) = &off_1EFF55170;
  *(void *)(v0 + 56) = v9;
  *(void *)(v0 + 120) = &type metadata for AlwaysAuthorized;
  *(void *)(v0 + 128) = &off_1EFF54900;
  *(void *)(v0 + 240) = &type metadata for DefaultGatewayResponseValidator;
  *(void *)(v0 + 248) = &off_1EFF55068;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E808 + dword_1E979E808);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 384) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1A8CAF24C;
  return v14(v0 + 256, v0 + 304, 2);
}

uint64_t sub_1A8CAF24C()
{
  *(void *)(*(void *)v1 + 392) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8CB4F78;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1A8CB4F84;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CAF3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[51] = v10;
  v8[52] = v11;
  v8[49] = a7;
  v8[50] = a8;
  v8[47] = a5;
  v8[48] = a6;
  v8[45] = a3;
  v8[46] = a4;
  v8[43] = a1;
  v8[44] = a2;
  return MEMORY[0x1F4188298](sub_1A8CAF3D8, 0, 0);
}

uint64_t sub_1A8CAF3D8()
{
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v1 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 368);
  long long v12 = *(_OWORD *)(v0 + 376);
  long long v13 = *(_OWORD *)(v0 + 408);
  sub_1A8C91CA8(*(void *)(v0 + 352), v0 + 16);
  *(void *)(v0 + 160) = &type metadata for RetryAfterPreProcessor;
  *(void *)(v0 + 168) = &off_1EFF54F28;
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 136) = v5;
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *(_OWORD *)(v5 + 32) = v12;
  *(void *)(v0 + 200) = &type metadata for RetryAfterPostProcessor;
  *(void *)(v0 + 208) = &off_1EFF54FD8;
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 176) = v6;
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v1;
  *(_OWORD *)(v6 + 32) = v13;
  uint64_t v7 = self;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v7, sel_sharedSessionWithNoUrlCache);
  id v9 = objc_msgSend(v8, sel_urlSession);

  *(void *)(v0 + 80) = sub_1A8C8EB1C(0, &qword_1EB5E9678);
  *(void *)(v0 + 88) = &off_1EFF55170;
  *(void *)(v0 + 56) = v9;
  *(void *)(v0 + 120) = &type metadata for AlwaysAuthorized;
  *(void *)(v0 + 128) = &off_1EFF54900;
  *(void *)(v0 + 240) = &type metadata for DefaultGatewayResponseValidator;
  *(void *)(v0 + 248) = &off_1EFF55068;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E7E0 + dword_1E979E7E0);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1A8CAF604;
  return v14(v0 + 256, v0 + 304, 2);
}

uint64_t sub_1A8CAF604()
{
  *(void *)(*(void *)v1 + 432) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8CAF7DC;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1A8CAF758;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CAF758()
{
  uint64_t v1 = *(void *)(v0 + 344);
  sub_1A8C93188(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 320);
  long long v3 = *(_OWORD *)(v0 + 328);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 304);
  *(void *)(v1 + 16) = v2;
  *(_OWORD *)(v1 + 24) = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1A8CAF7DC()
{
  sub_1A8C93188(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CAF840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[46] = a8;
  v8[47] = v10;
  v8[44] = a6;
  v8[45] = a7;
  v8[42] = a4;
  v8[43] = a5;
  v8[40] = a2;
  v8[41] = a3;
  v8[39] = a1;
  return MEMORY[0x1F4188298](sub_1A8CAF878, 0, 0);
}

uint64_t sub_1A8CAF878()
{
  uint64_t v2 = *(void *)(v0 + 352);
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v4 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 328);
  long long v12 = *(_OWORD *)(v0 + 336);
  long long v13 = *(_OWORD *)(v0 + 368);
  sub_1A8C91CA8(*(void *)(v0 + 312), v0 + 16);
  *(void *)(v0 + 160) = &type metadata for RetryAfterPreProcessor;
  *(void *)(v0 + 168) = &off_1EFF54F28;
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 136) = v5;
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *(_OWORD *)(v5 + 32) = v12;
  *(void *)(v0 + 200) = &type metadata for RetryAfterPostProcessor;
  *(void *)(v0 + 208) = &off_1EFF54FD8;
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 176) = v6;
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v1;
  *(_OWORD *)(v6 + 32) = v13;
  uint64_t v7 = self;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v7, sel_sharedSessionWithNoUrlCache);
  id v9 = objc_msgSend(v8, sel_urlSession);

  *(void *)(v0 + 80) = sub_1A8C8EB1C(0, &qword_1EB5E9678);
  *(void *)(v0 + 88) = &off_1EFF55170;
  *(void *)(v0 + 56) = v9;
  *(void *)(v0 + 120) = &type metadata for AlwaysAuthorized;
  *(void *)(v0 + 128) = &off_1EFF54900;
  *(void *)(v0 + 240) = &type metadata for DefaultGatewayResponseValidator;
  *(void *)(v0 + 248) = &off_1EFF55068;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E7B0 + dword_1E979E7B0);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 384) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1A8CAFAA0;
  return v14(v0 + 256, v0 + 304, 2);
}

uint64_t sub_1A8CAFAA0()
{
  *(void *)(*(void *)v1 + 392) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8CAFC5C;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1A8CAFBF4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CAFBF4()
{
  sub_1A8C93188(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1A8CAFC5C()
{
  sub_1A8C93188(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CAFCC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[49] = a8;
  v8[50] = v10;
  v8[47] = a6;
  v8[48] = a7;
  v8[45] = a4;
  v8[46] = a5;
  v8[43] = a2;
  v8[44] = a3;
  v8[42] = a1;
  return MEMORY[0x1F4188298](sub_1A8CAFCF8, 0, 0);
}

uint64_t sub_1A8CAFCF8()
{
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v4 = *(void *)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 352);
  long long v12 = *(_OWORD *)(v0 + 360);
  long long v13 = *(_OWORD *)(v0 + 392);
  sub_1A8C91CA8(*(void *)(v0 + 336), v0 + 16);
  *(void *)(v0 + 160) = &type metadata for RetryAfterPreProcessor;
  *(void *)(v0 + 168) = &off_1EFF54F28;
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 136) = v5;
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *(_OWORD *)(v5 + 32) = v12;
  *(void *)(v0 + 200) = &type metadata for RetryAfterPostProcessor;
  *(void *)(v0 + 208) = &off_1EFF54FD8;
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 176) = v6;
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v1;
  *(_OWORD *)(v6 + 32) = v13;
  uint64_t v7 = self;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v7, sel_sharedSessionWithNoUrlCache);
  id v9 = objc_msgSend(v8, sel_urlSession);

  *(void *)(v0 + 80) = sub_1A8C8EB1C(0, &qword_1EB5E9678);
  *(void *)(v0 + 88) = &off_1EFF55170;
  *(void *)(v0 + 56) = v9;
  *(void *)(v0 + 120) = &type metadata for AlwaysAuthorized;
  *(void *)(v0 + 128) = &off_1EFF54900;
  *(void *)(v0 + 240) = &type metadata for DefaultGatewayResponseValidator;
  *(void *)(v0 + 248) = &off_1EFF55068;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E780 + dword_1E979E780);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 408) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1A8CAFF24;
  return v14(v0 + 256, v0 + 304, 2);
}

uint64_t sub_1A8CAFF24()
{
  *(void *)(*(void *)v1 + 416) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8CB00E4;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1A8CB0078;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CB0078()
{
  sub_1A8C93188((uint64_t)(v0 + 2));
  uint64_t v1 = v0[38];
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[41];
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[1];
  return v5(v1, v2, v3, v4);
}

uint64_t sub_1A8CB00E4()
{
  sub_1A8C93188(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CB0148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 384) = v11;
  *(_OWORD *)(v8 + 368) = v10;
  *(void *)(v8 + 352) = a7;
  *(void *)(v8 + 360) = a8;
  *(void *)(v8 + 336) = a5;
  *(void *)(v8 + 344) = a6;
  *(void *)(v8 + 320) = a3;
  *(void *)(v8 + 328) = a4;
  *(void *)(v8 + 304) = a1;
  *(void *)(v8 + 312) = a2;
  return MEMORY[0x1F4188298](sub_1A8CB0188, 0, 0);
}

uint64_t sub_1A8CB0188()
{
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 336);
  long long v13 = *(_OWORD *)(v0 + 344);
  long long v14 = *(_OWORD *)(v0 + 376);
  sub_1A8C91CA8(*(void *)(v0 + 320), v0 + 16);
  *(void *)(v0 + 160) = &type metadata for RetryAfterPreProcessor;
  *(void *)(v0 + 168) = &off_1EFF54F28;
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 136) = v5;
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *(_OWORD *)(v5 + 32) = v13;
  *(void *)(v0 + 200) = &type metadata for RetryAfterPostProcessor;
  *(void *)(v0 + 208) = &off_1EFF54FD8;
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 176) = v6;
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v1;
  *(_OWORD *)(v6 + 32) = v14;
  uint64_t v7 = self;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v7, sel_sharedSessionWithNoUrlCache);
  id v9 = objc_msgSend(v8, sel_urlSession);

  *(void *)(v0 + 80) = sub_1A8C8EB1C(0, &qword_1EB5E9678);
  *(void *)(v0 + 88) = &off_1EFF55170;
  *(void *)(v0 + 56) = v9;
  *(void *)(v0 + 120) = &type metadata for AlwaysAuthorized;
  *(void *)(v0 + 128) = &off_1EFF54900;
  *(void *)(v0 + 240) = &type metadata for DefaultGatewayResponseValidator;
  *(void *)(v0 + 248) = &off_1EFF55068;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E700 + dword_1E979E700);
  long long v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v10;
  *long long v10 = v0;
  v10[1] = sub_1A8CB03B0;
  uint64_t v11 = *(void *)(v0 + 312);
  return v15(v0 + 256, v11, 2);
}

uint64_t sub_1A8CB03B0()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[50] = v0;
  v3[51] = v2[32];
  v3[52] = v2[33];
  *(_OWORD *)(v3 + 53) = *((_OWORD *)v3 + 17);
  v3[55] = v2[36];
  *((unsigned char *)v3 + 297) = *((unsigned char *)v3 + 296);
  swift_task_dealloc();
  if (v0) {
    uint64_t v4 = sub_1A8CB05C0;
  }
  else {
    uint64_t v4 = sub_1A8CB0520;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1A8CB0520()
{
  char v1 = *(unsigned char *)(v0 + 297);
  uint64_t v2 = *(void *)(v0 + 440);
  long long v6 = *(_OWORD *)(v0 + 408);
  long long v7 = *(_OWORD *)(v0 + 424);
  uint64_t v3 = *(void *)(v0 + 304);
  sub_1A8C93188(v0 + 16);
  *(_OWORD *)uint64_t v3 = v6;
  *(_OWORD *)(v3 + 16) = v7;
  *(void *)(v3 + 32) = v2;
  *(unsigned char *)(v3 + 40) = v1;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1A8CB05C0()
{
  sub_1A8C93188(v0 + 16);
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CB0624()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8CB0668()
{
  return sub_1A8D5A4B0();
}

uint64_t sub_1A8CB0690()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8CB06D0()
{
  return 0x74656B636974;
}

uint64_t sub_1A8CB06E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x74656B636974 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A8D5A390();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_1A8CB0774(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1A8CB0780(uint64_t a1)
{
  unint64_t v2 = sub_1A8CB4CE8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8CB07BC(uint64_t a1)
{
  unint64_t v2 = sub_1A8CB4CE8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A8CB07F8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979E828);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  id v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8CB4CE8();
  sub_1A8D5A4F0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v10 = sub_1A8D5A290();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v10;
  a2[1] = v12;
  return result;
}

uint64_t sub_1A8CB0970(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979E818);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8CB4CE8();
  sub_1A8D5A510();
  sub_1A8D5A320();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_1A8CB0AA8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

uint64_t sub_1A8CB0B08(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 200) = a1;
  *(void *)(v2 + 208) = a2;
  return MEMORY[0x1F4188298](sub_1A8CB0B28, 0, 0);
}

uint64_t sub_1A8CB0B28()
{
  if (sub_1A8D12DD4())
  {
    if (qword_1EB5EAD00 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1A8D59A80();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB5EAC50);
    long long v13 = sub_1A8D59A60();
    os_log_type_t v14 = sub_1A8D59F00();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_1A8C7F000, v13, v14, "User has mocked auth issue via CSFCTL, skipping renewCredentials.", v15, 2u);
      MEMORY[0x1AD0E6EB0](v15, -1, -1);
    }

    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
  else
  {
    char v1 = (void *)v0[26];
    uint64_t v2 = v1[3];
    uint64_t v3 = v1[4];
    __swift_project_boxed_opaque_existential_1(v1, v2);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9418);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A8D5BE30;
    *(void *)(inited + 32) = sub_1A8D59BF0();
    *(void *)(inited + 40) = v5;
    uint64_t v6 = MEMORY[0x1E4FBB390];
    *(void *)(inited + 72) = MEMORY[0x1E4FBB390];
    *(unsigned char *)(inited + 48) = 1;
    *(void *)(inited + 80) = sub_1A8D59BF0();
    *(void *)(inited + 88) = v7;
    *(void *)(inited + 120) = v6;
    *(unsigned char *)(inited + 96) = 0;
    unint64_t v8 = sub_1A8C90A64(inited);
    v0[27] = v8;
    char v17 = (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v3 + 72)
                                                                              + **(int **)(v3 + 72));
    id v9 = (void *)swift_task_alloc();
    v0[28] = v9;
    *id v9 = v0;
    v9[1] = sub_1A8CB0DB0;
    uint64_t v10 = v0[25];
    return v17(v10, v8, v2, v3);
  }
}

uint64_t sub_1A8CB0DB0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 232) = a1;
  *(void *)(v3 + 240) = v1;
  swift_task_dealloc();
  if (v1)
  {
    char v4 = sub_1A8CB131C;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v4 = sub_1A8CB0ECC;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1A8CB0ECC()
{
  uint64_t v25 = v0;
  if (v0[29])
  {
    if (qword_1EB5E9310 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1A8D59A80();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E92F8);
    uint64_t v2 = sub_1A8D59A60();
    os_log_type_t v3 = sub_1A8D59EE0();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = v0[29];
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      v24[0] = v6;
      *(_DWORD *)uint64_t v5 = 136315138;
      v0[23] = v4;
      type metadata accessor for ACAccountCredentialRenewResult(0);
      uint64_t v7 = sub_1A8D59C40();
      v0[24] = sub_1A8C90120(v7, v8, v24);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A8C7F000, v2, v3, "Renew credentials failed with result %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
      MEMORY[0x1AD0E6EB0](v5, -1, -1);
    }

    id v9 = sub_1A8CA6B90(13);
    swift_willThrow();
    if (qword_1EB5E9310 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E92F8);
    id v10 = v9;
    id v11 = v9;
    uint64_t v12 = sub_1A8D59A60();
    os_log_type_t v13 = sub_1A8D59EE0();
    if (os_log_type_enabled(v12, v13))
    {
      os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v24[0] = v15;
      *(_DWORD *)os_log_type_t v14 = 136315138;
      swift_getErrorValue();
      uint64_t v16 = sub_1A8D5A440();
      v0[22] = sub_1A8C90120(v16, v17, v24);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A8C7F000, v12, v13, "Renew credentials failed with error %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v15, -1, -1);
      MEMORY[0x1AD0E6EB0](v14, -1, -1);
    }
    else
    {
    }
    sub_1A8CA6B90(13);
    swift_willThrow();

    uint64_t v22 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    if (qword_1EB5E9310 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1A8D59A80();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EB5E92F8);
    uint64_t v19 = sub_1A8D59A60();
    os_log_type_t v20 = sub_1A8D59F00();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_1A8C7F000, v19, v20, "Renew credentials succeeded!", v21, 2u);
      MEMORY[0x1AD0E6EB0](v21, -1, -1);
    }

    uint64_t v22 = (uint64_t (*)(void))v0[1];
  }
  return v22();
}

uint64_t sub_1A8CB131C()
{
  os_log_type_t v14 = v0;
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)v0[30];
  if (qword_1EB5E9310 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5E92F8);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59EE0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = sub_1A8D5A440();
    v0[22] = sub_1A8C90120(v9, v10, &v13);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, v5, v6, "Renew credentials failed with error %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }
  else
  {
  }
  sub_1A8CA6B90(13);
  swift_willThrow();

  id v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

char *sub_1A8CB154C(void *a1)
{
  uint64_t result = (char *)objc_msgSend(a1, sel_statusCode);
  if ((unint64_t)(result - 204) < 0xFFFFFFFFFFFFFFFCLL)
  {
    if (result == (char *)460)
    {
      id v3 = (void *)sub_1A8D59BC0();
      id v4 = objc_msgSend(a1, sel_valueForHTTPHeaderField_, v3);

      if (v4)
      {
        uint64_t v5 = sub_1A8D596F0();
        uint64_t v6 = *(void *)(v5 - 8);
        uint64_t v7 = *(void *)(v6 + 64);
        MEMORY[0x1F4188790](v5, v8);
        if (qword_1E979E480 != -1) {
          swift_once();
        }
        id v9 = objc_msgSend((id)qword_1E97A8B30, sel_dateFromString_, v4);

        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
        uint64_t v12 = MEMORY[0x1F4188790](v10 - 8, v11);
        uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
        if (v9)
        {
          uint64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
          MEMORY[0x1F4188790](v12, v13);
          sub_1A8D596C0();

          uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
          v16(v15, (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5) != 1)
          {
            unint64_t v17 = v23;
            v16(v23, v15, v5);
            type metadata accessor for InternalError();
            sub_1A8CB4044(&qword_1E979E720, (void (*)(uint64_t))type metadata accessor for InternalError);
            swift_allocError();
            (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v18, v17, v5);
            swift_storeEnumTagMultiPayload();
            swift_willThrow();
            return (char *)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v17, v5);
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v15, 1, 1, v5);
        }
        sub_1A8C8DE74((uint64_t)v15, &qword_1EB5EACF0);
      }
      sub_1A8CA6B90(8);
    }
    else if (result == (char *)204)
    {
      type metadata accessor for InternalError();
      sub_1A8CB4044(&qword_1E979E720, (void (*)(uint64_t))type metadata accessor for InternalError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      ServerError.init(rawValue:)((Swift::Int)objc_msgSend(a1, sel_statusCode));
      if (v24 == 7)
      {
        id v19 = objc_msgSend(a1, sel_statusCode);
        sub_1A8CB2700();
        swift_allocError();
        *os_log_type_t v20 = v19;
      }
      else
      {
        sub_1A8CB25F8();
        swift_allocError();
        *uint64_t v21 = v24;
      }
    }
    return (char *)swift_willThrow();
  }
  return result;
}

uint64_t sub_1A8CB1A00()
{
  uint64_t v1 = type metadata accessor for FeatureRequestDiagnostic.FeatureDiagnostic(0);
  v0[26] = v1;
  v0[27] = *(void *)(v1 - 8);
  v0[28] = swift_task_alloc();
  v0[29] = type metadata accessor for FeatureRequestDiagnostic(0);
  v0[30] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CB1AEC, 0, 0);
}

void sub_1A8CB1AEC()
{
  uint64_t v1 = sub_1A8D596F0();
  v0[31] = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  v0[32] = v2;
  v0[33] = *(void *)(v2 + 64);
  v0[34] = swift_task_alloc();
  sub_1A8D596E0();
  if (qword_1EB5E9448 != -1) {
    swift_once();
  }
  v0[35] = qword_1EB5E9598;
  v0[17] = &type metadata for GatewayRequest;
  v0[18] = &off_1EFF547D0;
  uint64_t v3 = swift_allocObject();
  v0[14] = v3;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(unsigned char *)(v3 + 48) = 4;
  uint64_t v6 = (char *)&dword_1E979E6E8 + dword_1E979E6E8;
  swift_retain();
  id v4 = (void *)swift_task_alloc();
  v0[36] = v4;
  *id v4 = v0;
  v4[1] = sub_1A8CB1D00;
  __asm { BR              X8 }
}

uint64_t sub_1A8CB1D00()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[37] = v0;
  v3[38] = v2[8];
  v3[39] = v2[9];
  *((_OWORD *)v3 + 20) = *((_OWORD *)v3 + 5);
  v3[42] = v2[12];
  *((unsigned char *)v3 + 105) = *((unsigned char *)v3 + 104);
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    id v4 = sub_1A8CB2348;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v3 + 14));
    id v4 = sub_1A8CB1E90;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1A8CB1E90()
{
  uint64_t v49 = v0;
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 256);
  unint64_t v4 = *(void *)(v0 + 200);
  uint64_t v39 = swift_task_alloc();
  sub_1A8D596E0();
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6(v5, v1, v2);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1A8D5A1C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v47 = v4;
  uint64_t v38 = v5;
  uint64_t v37 = v6;
  if (v7)
  {
    uint64_t v48 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1A8CB65A0(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v10 = 0;
    uint64_t v11 = *(void *)(v0 + 216);
    uint64_t v42 = *(void *)(v0 + 224);
    uint64_t v8 = v48;
    unint64_t v40 = v4 & 0xC000000000000001;
    uint64_t v41 = *(void *)(v0 + 208);
    uint64_t v45 = v7;
    do
    {
      if (v40) {
        uint64_t v12 = (char *)MEMORY[0x1AD0E6030](v10, v4);
      }
      else {
        uint64_t v12 = (char *)*(id *)(v4 + 8 * v10 + 32);
      }
      uint64_t v13 = v12;
      uint64_t v14 = *(void **)(v0 + 224);
      uint64_t v16 = *(void *)&v12[OBJC_IVAR___CloudFeature_featureID];
      uint64_t v15 = *(void *)&v12[OBJC_IVAR___CloudFeature_featureID + 8];
      unint64_t v17 = &v12[OBJC_IVAR___CloudFeature_canUse];
      swift_beginAccess();
      char v18 = *v17;
      uint64_t v19 = (uint64_t)v13 + OBJC_IVAR___CloudFeature_ttl;
      swift_beginAccess();
      sub_1A8CB249C(v19, (uint64_t)v14 + *(int *)(v41 + 24), &qword_1EB5EACF0);
      swift_bridgeObjectRetain();

      *uint64_t v14 = v16;
      *(void *)(v42 + 8) = v15;
      *(unsigned char *)(v42 + 16) = v18;
      uint64_t v48 = v8;
      unint64_t v21 = *(void *)(v8 + 16);
      unint64_t v20 = *(void *)(v8 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1A8CB65A0(v20 > 1, v21 + 1, 1);
        uint64_t v8 = v48;
      }
      uint64_t v22 = *(void *)(v0 + 224);
      ++v10;
      *(void *)(v8 + 16) = v21 + 1;
      sub_1A8CB3FDC(v22, v8+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v21, type metadata accessor for FeatureRequestDiagnostic.FeatureDiagnostic);
      unint64_t v4 = v47;
    }
    while (v45 != v10);
  }
  char v23 = *(unsigned char *)(v0 + 105);
  uint64_t v24 = *(void *)(v0 + 336);
  long long v43 = *(_OWORD *)(v0 + 304);
  long long v44 = *(_OWORD *)(v0 + 320);
  uint64_t v46 = *(void **)(v0 + 296);
  uint64_t v25 = *(void *)(v0 + 248);
  uint64_t v26 = *(void *)(v0 + 256);
  id v28 = *(int **)(v0 + 232);
  uint64_t v27 = *(void *)(v0 + 240);
  v37(v27 + v28[7], v39, v25);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v27, v38, v25);
  uint64_t v29 = v27 + v28[5];
  *(_OWORD *)uint64_t v29 = v43;
  *(_OWORD *)(v29 + 16) = v44;
  *(void *)(v29 + 32) = v24;
  *(unsigned char *)(v29 + 40) = v23;
  *(void *)(v27 + v28[6]) = v8;
  swift_task_dealloc();
  LOBYTE(v48) = 0;
  *(void *)(v0 + 40) = v28;
  *(void *)(v0 + 48) = sub_1A8CB4044(&qword_1E979E6F0, (void (*)(uint64_t))type metadata accessor for FeatureRequestDiagnostic);
  *(void *)(v0 + 56) = sub_1A8CB4044(&qword_1E979E6F8, (void (*)(uint64_t))type metadata accessor for FeatureRequestDiagnostic);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
  sub_1A8CB3F74(v27, (uint64_t)boxed_opaque_existential_1, type metadata accessor for FeatureRequestDiagnostic);
  sub_1A8D50F64((unsigned __int8 *)&v48, (void *)(v0 + 16));
  if (v46) {

  }
  uint64_t v31 = *(void *)(v0 + 272);
  uint64_t v33 = *(void *)(v0 + 248);
  uint64_t v32 = *(void *)(v0 + 256);
  uint64_t v34 = *(void *)(v0 + 240);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  sub_1A8CB243C(v34, type metadata accessor for FeatureRequestDiagnostic);
  uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
  v35(v39, v33);
  v35(v31, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v36(v47);
}

uint64_t sub_1A8CB2348()
{
  (*(void (**)(void, void))(v0[32] + 8))(v0[34], v0[31]);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 14));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1A8CB23F4()
{
  sub_1A8C93334(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t sub_1A8CB243C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A8CB249C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *sub_1A8CB2500(uint64_t *a1)
{
  uint64_t v2 = (void *)a1[2];
  sub_1A8C93C98(*a1, a1[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

unint64_t sub_1A8CB2554()
{
  unint64_t result = qword_1EB5E9638;
  if (!qword_1EB5E9638)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB5E9630);
    sub_1A8CB4044((unint64_t *)&unk_1EB5E9D68, (void (*)(uint64_t))type metadata accessor for CloudFeature);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9638);
  }
  return result;
}

unint64_t sub_1A8CB25F8()
{
  unint64_t result = qword_1E979E710;
  if (!qword_1E979E710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E710);
  }
  return result;
}

unsigned char *sub_1A8CB264C@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (unint64_t result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_1A8CB26BC@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

unint64_t sub_1A8CB2700()
{
  unint64_t result = qword_1E979E718;
  if (!qword_1E979E718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E718);
  }
  return result;
}

uint64_t sub_1A8CB2754()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 72);
  return MEMORY[0x1F4186498](v0, 112, 7);
}

uint64_t sub_1A8CB279C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1A8CA17BC(a1, a2);
  }
  return a1;
}

unint64_t sub_1A8CB27B0()
{
  unint64_t result = qword_1E979E748;
  if (!qword_1E979E748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E748);
  }
  return result;
}

uint64_t sub_1A8CB2804()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  __swift_destroy_boxed_opaque_existential_0(v0 + 104);
  return MEMORY[0x1F4186498](v0, 144, 7);
}

uint64_t sub_1A8CB284C()
{
  return MEMORY[0x1F4188298](sub_1A8CB2868, 0, 0);
}

void sub_1A8CB2868()
{
  if (qword_1EB5E9448 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB5E9598;
  v0[5] = &type metadata for GatewayRequest;
  v0[6] = &off_1EFF547D0;
  v0[7] = v1;
  uint64_t v2 = swift_allocObject();
  v0[2] = v2;
  *(void *)(v2 + 16) = 1;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(unsigned char *)(v2 + 48) = 4;
  uint64_t v5 = (char *)&dword_1E979E758 + dword_1E979E758;
  swift_retain();
  unsigned int v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  *unsigned int v3 = v0;
  v3[1] = sub_1A8CB29DC;
  __asm { BR              X8 }
}

uint64_t sub_1A8CB29DC(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1A8CB2B3C, 0, 0);
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_0(v4 + 16);
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5(a1 & 1);
  }
}

uint64_t sub_1A8CB2B3C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

unint64_t sub_1A8CB2BB0()
{
  unint64_t result = qword_1EB5E95D8;
  if (!qword_1EB5E95D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E95D8);
  }
  return result;
}

uint64_t sub_1A8CB2C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return MEMORY[0x1F4188298](sub_1A8CB2C28, 0, 0);
}

void sub_1A8CB2C28()
{
  uint64_t v1 = v0[14];
  if (qword_1EB5E9448 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[13];
  v0[15] = qword_1EB5E9598;
  v0[10] = &type metadata for GatewayRequest;
  v0[11] = &off_1EFF547D0;
  uint64_t v3 = swift_allocObject();
  v0[7] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(unsigned char *)(v3 + 48) = 1;
  uint64_t v5 = (char *)&dword_1E979E7D8 + dword_1E979E7D8;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[16] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1A8CB2DC4;
  __asm { BR              X8 }
}

uint64_t sub_1A8CB2DC4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A8CB2F30, 0, 0);
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 96);
    swift_release();
    __swift_destroy_boxed_opaque_existential_0(v2 + 56);
    long long v4 = *(_OWORD *)(v2 + 16);
    long long v5 = *(_OWORD *)(v2 + 32);
    *(void *)(v3 + 32) = *(void *)(v2 + 48);
    *(_OWORD *)uint64_t v3 = v4;
    *(_OWORD *)(v3 + 16) = v5;
    uint64_t v6 = *(uint64_t (**)(void))(v2 + 8);
    return v6();
  }
}

uint64_t sub_1A8CB2F30()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CB2FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  return MEMORY[0x1F4188298](sub_1A8CB2FC4, 0, 0);
}

void sub_1A8CB2FC4()
{
  uint64_t v1 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A8D59CA0();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  v0[11] = 0xEB000000002E7265;
  if (qword_1EB5E9448 != -1) {
    swift_once();
  }
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[7];
  v0[12] = qword_1EB5E9598;
  v0[5] = &type metadata for GatewayRequest;
  v0[6] = &off_1EFF547D0;
  uint64_t v5 = swift_allocObject();
  v0[2] = v5;
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v1;
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v2;
  *(unsigned char *)(v5 + 48) = 2;
  uint64_t v7 = (char *)&dword_1E979E7A8 + dword_1E979E7A8;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[13] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1A8CB31D0;
  __asm { BR              X8; sub_1A8CAF840 }
}

uint64_t sub_1A8CB31D0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 112) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1A8CB333C, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release();
    __swift_destroy_boxed_opaque_existential_0(v4 + 16);
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1A8CB333C()
{
  swift_bridgeObjectRelease_n();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CB33B8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return MEMORY[0x1F4188298](sub_1A8CB33D8, 0, 0);
}

void sub_1A8CB33D8()
{
  uint64_t v1 = v0[8];
  sub_1A8D59CA0();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  v0[9] = 0xEB000000002E7265;
  if (qword_1EB5E9448 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[7];
  v0[10] = qword_1EB5E9598;
  v0[5] = &type metadata for GatewayRequest;
  v0[6] = &off_1EFF547D0;
  uint64_t v3 = swift_allocObject();
  v0[2] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(unsigned char *)(v3 + 48) = 3;
  uint64_t v6 = (char *)&dword_1E979E7A8 + dword_1E979E7A8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[11] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1A8CB35C4;
  __asm { BR              X8 }
}

uint64_t sub_1A8CB35C4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1A8CB3730, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release();
    __swift_destroy_boxed_opaque_existential_0(v4 + 16);
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1A8CB3730()
{
  swift_bridgeObjectRelease_n();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CB37AC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return MEMORY[0x1F4188298](sub_1A8CB37CC, 0, 0);
}

void sub_1A8CB37CC()
{
  uint64_t v1 = v0[8];
  sub_1A8D59CA0();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  v0[9] = 0xEB000000002E7265;
  if (qword_1EB5E9448 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[7];
  v0[10] = qword_1EB5E9598;
  v0[5] = &type metadata for GatewayRequest;
  v0[6] = &off_1EFF547D0;
  uint64_t v3 = swift_allocObject();
  v0[2] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(unsigned char *)(v3 + 48) = 3;
  uint64_t v6 = (char *)&dword_1E979E778 + dword_1E979E778;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[11] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1A8CB39B8;
  __asm { BR              X8 }
}

uint64_t sub_1A8CB39B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *v5;
  *(void *)(v10 + 96) = v4;
  swift_task_dealloc();
  if (v4)
  {
    return MEMORY[0x1F4188298](sub_1A8CB3730, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release();
    __swift_destroy_boxed_opaque_existential_0(v10 + 16);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8);
    return v11(a1, a2, a3, a4);
  }
}

uint64_t sub_1A8CB3B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  return MEMORY[0x1F4188298](sub_1A8CB3B78, 0, 0);
}

void sub_1A8CB3B78()
{
  uint64_t v1 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A8D59CA0();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  v0[11] = 0xEB000000002E7265;
  if (qword_1EB5E9448 != -1) {
    swift_once();
  }
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[7];
  v0[12] = qword_1EB5E9598;
  v0[5] = &type metadata for GatewayRequest;
  v0[6] = &off_1EFF547D0;
  uint64_t v5 = swift_allocObject();
  v0[2] = v5;
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v1;
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v2;
  *(unsigned char *)(v5 + 48) = 2;
  uint64_t v7 = (char *)&dword_1E979E778 + dword_1E979E778;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[13] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1A8CB3D84;
  __asm { BR              X8; sub_1A8CAFCC0 }
}

uint64_t sub_1A8CB3D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *v5;
  *(void *)(v10 + 112) = v4;
  swift_task_dealloc();
  if (v4)
  {
    return MEMORY[0x1F4188298](sub_1A8CB333C, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release();
    __swift_destroy_boxed_opaque_existential_0(v10 + 16);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8);
    return v11(a1, a2, a3, a4);
  }
}

unint64_t sub_1A8CB3F20()
{
  unint64_t result = qword_1E979E790;
  if (!qword_1E979E790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E790);
  }
  return result;
}

uint64_t sub_1A8CB3F74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A8CB3FDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A8CB4044(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A8CB408C()
{
  unint64_t result = qword_1E979E7F0;
  if (!qword_1E979E7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E7F0);
  }
  return result;
}

unint64_t sub_1A8CB40E0()
{
  unint64_t result = qword_1EB5E9628;
  if (!qword_1EB5E9628)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB5E9450);
    sub_1A8CB415C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9628);
  }
  return result;
}

unint64_t sub_1A8CB415C()
{
  unint64_t result = qword_1EB5E94D0[0];
  if (!qword_1EB5E94D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB5E94D0);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for GatewayRequest.TicketRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for GatewayRequest.TicketRequest()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for GatewayRequest.TicketRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for GatewayRequest.TicketRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GatewayRequest.TicketRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GatewayRequest.TicketRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GatewayRequest.TicketRequest()
{
  return &type metadata for GatewayRequest.TicketRequest;
}

uint64_t initializeWithCopy for GatewayService(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  uint64_t v7 = (_OWORD *)(a1 + 120);
  uint64_t v8 = (_OWORD *)(a2 + 120);
  uint64_t v9 = *(void *)(a2 + 144);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = v9;
    *(void *)(a1 + 152) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 136);
    *uint64_t v7 = *v8;
    *(_OWORD *)(a1 + 136) = v11;
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
  }
  uint64_t v12 = (_OWORD *)(a1 + 160);
  uint64_t v13 = (_OWORD *)(a2 + 160);
  uint64_t v14 = *(void *)(a2 + 184);
  if (v14)
  {
    uint64_t v15 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = v14;
    *(void *)(a1 + 192) = v15;
    (**(void (***)(_OWORD *, _OWORD *))(v14 - 8))(v12, v13);
  }
  else
  {
    long long v16 = *(_OWORD *)(a2 + 176);
    *uint64_t v12 = *v13;
    *(_OWORD *)(a1 + 176) = v16;
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
  }
  long long v17 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v17;
  (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 200, a2 + 200);
  return a1;
}

uint64_t assignWithCopy for GatewayService(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  uint64_t v4 = *(void *)(a2 + 144);
  if (*(void *)(a1 + 144))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 120), (uint64_t *)(a2 + 120));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_0(a1 + 120);
  }
  else if (v4)
  {
    *(void *)(a1 + 144) = v4;
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 120, a2 + 120);
    goto LABEL_8;
  }
  long long v5 = *(_OWORD *)(a2 + 120);
  long long v6 = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_OWORD *)(a1 + 120) = v5;
  *(_OWORD *)(a1 + 136) = v6;
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 184);
  if (!*(void *)(a1 + 184))
  {
    if (v7)
    {
      *(void *)(a1 + 184) = v7;
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 160, a2 + 160);
      goto LABEL_15;
    }
LABEL_14:
    long long v8 = *(_OWORD *)(a2 + 160);
    long long v9 = *(_OWORD *)(a2 + 176);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(_OWORD *)(a1 + 160) = v8;
    *(_OWORD *)(a1 + 176) = v9;
    goto LABEL_15;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_0(a1 + 160);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 160), (uint64_t *)(a2 + 160));
LABEL_15:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 200), (uint64_t *)(a2 + 200));
  return a1;
}

__n128 __swift_memcpy240_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v12;
  *(__n128 *)(a1 + 176) = result;
  *(_OWORD *)(a1 + 192) = v11;
  return result;
}

uint64_t assignWithTake for GatewayService(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_0(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  if (*(void *)(a1 + 144)) {
    __swift_destroy_boxed_opaque_existential_0(a1 + 120);
  }
  long long v6 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v6;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  if (*(void *)(a1 + 184)) {
    __swift_destroy_boxed_opaque_existential_0(a1 + 160);
  }
  long long v7 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v7;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  __swift_destroy_boxed_opaque_existential_0(a1 + 200);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  return a1;
}

uint64_t getEnumTagSinglePayload for GatewayService(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 240)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GatewayService(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 240) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 240) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GatewayService()
{
  return &type metadata for GatewayService;
}

ValueMetadata *type metadata accessor for DefaultGatewayResponseValidator()
{
  return &type metadata for DefaultGatewayResponseValidator;
}

ValueMetadata *type metadata accessor for AlwaysAuthorized()
{
  return &type metadata for AlwaysAuthorized;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for RetryAfterPostProcessor()
{
  return &type metadata for RetryAfterPostProcessor;
}

uint64_t _s25CloudSubscriptionFeatures23RetryAfterPostProcessorVwxx_0()
{
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t _s25CloudSubscriptionFeatures23RetryAfterPostProcessorVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *_s25CloudSubscriptionFeatures23RetryAfterPostProcessorVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = v4;
  return a1;
}

uint64_t _s25CloudSubscriptionFeatures23RetryAfterPostProcessorVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  *(void *)(a1 + 24) = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for URLCacheBox(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLCacheBox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RetryAfterPreProcessor()
{
  return &type metadata for RetryAfterPreProcessor;
}

uint64_t sub_1A8CB4A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 >= 2u && a5 != 3)
  {
    if (a5 != 2) {
      return result;
    }
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for GatewayRequest(uint64_t a1)
{
  return sub_1A8C93334(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for GatewayRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1A8CB4A7C(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for GatewayRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1A8CB4A7C(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1A8C93334(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for GatewayRequest(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1A8C93334(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for GatewayRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GatewayRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A8CB4CA4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 3u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1A8CB4CBC(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for GatewayRequest()
{
  return &type metadata for GatewayRequest;
}

unint64_t sub_1A8CB4CE8()
{
  unint64_t result = qword_1E979E820;
  if (!qword_1E979E820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E820);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for GatewayRequest.TicketRequest.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for GatewayRequest.TicketRequest.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A8CB4E2CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A8CB4E54()
{
  return 0;
}

ValueMetadata *type metadata accessor for GatewayRequest.TicketRequest.CodingKeys()
{
  return &type metadata for GatewayRequest.TicketRequest.CodingKeys;
}

unint64_t sub_1A8CB4E70()
{
  unint64_t result = qword_1E979E830;
  if (!qword_1E979E830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E830);
  }
  return result;
}

unint64_t sub_1A8CB4EC8()
{
  unint64_t result = qword_1E979E838;
  if (!qword_1E979E838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E838);
  }
  return result;
}

unint64_t sub_1A8CB4F20()
{
  unint64_t result = qword_1E979E840;
  if (!qword_1E979E840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E840);
  }
  return result;
}

uint64_t sub_1A8CB4F8C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a5;
  uint64_t v16 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979E910);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8CB749C();
  sub_1A8D5A510();
  LOBYTE(v18) = 0;
  sub_1A8D5A2F0();
  if (!v5)
  {
    uint64_t v12 = v15;
    uint64_t v18 = v16;
    char v17 = 1;
    type metadata accessor for TicketStatus();
    sub_1A8CB6308((unint64_t *)&unk_1E979E880);
    sub_1A8D5A340();
    uint64_t v18 = v12;
    char v17 = 2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9DB0);
    sub_1A8CB634C(&qword_1E979E890);
    sub_1A8D5A340();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1A8CB51B0()
{
  unint64_t v1 = 0x737574617473;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x74656B636974;
  }
}

uint64_t sub_1A8CB5208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A8CB6D18(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A8CB5230(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1A8CB523C(uint64_t a1)
{
  unint64_t v2 = sub_1A8CB749C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8CB5278(uint64_t a1)
{
  unint64_t v2 = sub_1A8CB749C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A8CB52B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1A8CB6E5C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1A8CB52E4(void *a1)
{
  return sub_1A8CB4F8C(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t static WaitlistResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t WaitlistResult.ticket.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_ticket);
  swift_bridgeObjectRetain();
  return v1;
}

id WaitlistResult.status.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status);
}

uint64_t WaitlistResult.featureIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WaitlistResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return WaitlistResult.init(coder:)(a1);
}

uint64_t WaitlistResult.init(coder:)(void *a1)
{
  type metadata accessor for TicketStatus();
  id v3 = v1;
  uint64_t v4 = sub_1A8D59F80();
  if (!v4) {
    goto LABEL_6;
  }
  uint64_t v5 = (void *)v4;
  sub_1A8CB585C();
  uint64_t v6 = sub_1A8D59F90();
  if (!v6)
  {

LABEL_6:
    type metadata accessor for WaitlistResult();
    swift_deallocPartialClassInstance();
    return 0;
  }
  unint64_t v7 = v6;
  uint64_t v8 = sub_1A8D59F80();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = sub_1A8D59BF0();
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  uint64_t v14 = (uint64_t *)&v3[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_ticket];
  *uint64_t v14 = v10;
  v14[1] = v12;
  *(void *)&v3[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status] = v5;
  if (!(v7 >> 62))
  {
    uint64_t v15 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v16 = v5;
    if (v15) {
      goto LABEL_10;
    }
LABEL_23:
    swift_bridgeObjectRelease();

    uint64_t v18 = MEMORY[0x1E4FBC860];
LABEL_24:
    *(void *)&v3[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_featureIDs] = v18;

    v36.receiver = v3;
    v36.super_class = (Class)type metadata accessor for WaitlistResult();
    id v13 = objc_msgSendSuper2(&v36, sel_init);

    return (uint64_t)v13;
  }
  id v33 = v5;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1A8D5A1C0();
  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_23;
  }
LABEL_10:
  uint64_t v37 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1A8CB6294(0, v15 & ~(v15 >> 63), 0);
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v34 = v5;
    uint64_t v35 = a1;
    uint64_t v18 = v37;
    if ((v7 & 0xC000000000000001) != 0)
    {
      uint64_t v19 = 0;
      do
      {
        MEMORY[0x1AD0E6030](v19, v7);
        uint64_t v20 = sub_1A8D59BF0();
        uint64_t v22 = v21;
        swift_unknownObjectRelease();
        uint64_t v37 = v18;
        unint64_t v24 = *(void *)(v18 + 16);
        unint64_t v23 = *(void *)(v18 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_1A8CB6294(v23 > 1, v24 + 1, 1);
          uint64_t v18 = v37;
        }
        ++v19;
        *(void *)(v18 + 16) = v24 + 1;
        uint64_t v25 = v18 + 16 * v24;
        *(void *)(v25 + 32) = v20;
        *(void *)(v25 + 40) = v22;
      }
      while (v15 != v19);
    }
    else
    {
      unint64_t v26 = v7 + 32;
      do
      {
        uint64_t v27 = sub_1A8D59BF0();
        uint64_t v29 = v28;
        uint64_t v37 = v18;
        unint64_t v31 = *(void *)(v18 + 16);
        unint64_t v30 = *(void *)(v18 + 24);
        if (v31 >= v30 >> 1)
        {
          sub_1A8CB6294(v30 > 1, v31 + 1, 1);
          uint64_t v18 = v37;
        }
        *(void *)(v18 + 16) = v31 + 1;
        uint64_t v32 = v18 + 16 * v31;
        *(void *)(v32 + 32) = v27;
        *(void *)(v32 + 40) = v29;
        v26 += 8;
        --v15;
      }
      while (v15);
    }
    swift_bridgeObjectRelease();

    a1 = v35;
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for WaitlistResult()
{
  return self;
}

unint64_t sub_1A8CB585C()
{
  unint64_t result = qword_1EB5EACB0;
  if (!qword_1EB5EACB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB5EACB0);
  }
  return result;
}

void sub_1A8CB58C4(void *a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_ticket + 8)) {
    uint64_t v3 = sub_1A8D59BC0();
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = (void *)sub_1A8D59BC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);
  swift_unknownObjectRelease();

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status);
  uint64_t v6 = (void *)sub_1A8D59BC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  unint64_t v7 = (void *)sub_1A8D59D40();
  id v8 = (id)sub_1A8D59BC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);
}

id WaitlistResult.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void WaitlistResult.init()()
{
}

uint64_t sub_1A8CB5B00()
{
  uint64_t v1 = 0x737574617473;
  if (*v0 != 1) {
    uint64_t v1 = 0x4965727574616566;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x74656B636974;
  }
}

uint64_t sub_1A8CB5B58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A8CB714C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A8CB5B80(uint64_t a1)
{
  unint64_t v2 = sub_1A8CB62B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8CB5BBC(uint64_t a1)
{
  unint64_t v2 = sub_1A8CB62B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

id WaitlistResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WaitlistResult();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A8CB5C8C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979E870);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8CB62B4();
  sub_1A8D5A510();
  LOBYTE(v12) = 0;
  sub_1A8D5A2F0();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status);
    HIBYTE(v11) = 1;
    type metadata accessor for TicketStatus();
    sub_1A8CB6308((unint64_t *)&unk_1E979E880);
    sub_1A8D5A340();
    uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_featureIDs);
    HIBYTE(v11) = 2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9DB0);
    sub_1A8CB634C(&qword_1E979E890);
    sub_1A8D5A340();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

char *WaitlistResult.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return WaitlistResult.init(from:)(a1);
}

char *WaitlistResult.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E979E898);
  uint64_t v17 = *(void *)(v4 - 8);
  uint64_t v18 = v4;
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  uint64_t v19 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1A8CB62B4();
  uint64_t v9 = v1;
  sub_1A8D5A4F0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);

    type metadata accessor for WaitlistResult();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = v17;
    uint64_t v10 = v18;
    LOBYTE(v22) = 0;
    uint64_t v12 = sub_1A8D5A250();
    uint64_t v14 = (uint64_t *)&v9[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_ticket];
    *uint64_t v14 = v12;
    v14[1] = v15;
    type metadata accessor for TicketStatus();
    char v21 = 1;
    sub_1A8CB6308(&qword_1EB5E9750);
    sub_1A8D5A2B0();
    *(void *)&v9[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status] = v22;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9DB0);
    char v21 = 2;
    sub_1A8CB634C((unint64_t *)&unk_1E979E8A8);
    sub_1A8D5A2B0();
    *(void *)&v9[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_featureIDs] = v22;

    id v16 = (objc_class *)type metadata accessor for WaitlistResult();
    v20.receiver = v9;
    v20.super_class = v16;
    uint64_t v9 = (char *)objc_msgSendSuper2(&v20, sel_init);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  }
  return v9;
}

char *sub_1A8CB621C@<X0>(void *a1@<X0>, char **a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for WaitlistResult());
  uint64_t result = WaitlistResult.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1A8CB6270(void *a1)
{
  return sub_1A8CB5C8C(a1);
}

uint64_t sub_1A8CB6294(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A8CB6658(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

unint64_t sub_1A8CB62B4()
{
  unint64_t result = qword_1E979E878;
  if (!qword_1E979E878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E878);
  }
  return result;
}

uint64_t sub_1A8CB6308(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TicketStatus();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A8CB634C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB5E9DB0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for WaitlistResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WaitlistResult);
}

uint64_t dispatch thunk of WaitlistResult.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of WaitlistResult.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of WaitlistResult.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of WaitlistResult.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

ValueMetadata *type metadata accessor for WaitlistResult.CodingKeys()
{
  return &type metadata for WaitlistResult.CodingKeys;
}

unint64_t sub_1A8CB649C()
{
  unint64_t result = qword_1E979E8B8;
  if (!qword_1E979E8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E8B8);
  }
  return result;
}

unint64_t sub_1A8CB64F4()
{
  unint64_t result = qword_1E979E8C0;
  if (!qword_1E979E8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E8C0);
  }
  return result;
}

unint64_t sub_1A8CB654C()
{
  unint64_t result = qword_1E979E8C8;
  if (!qword_1E979E8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E8C8);
  }
  return result;
}

uint64_t sub_1A8CB65A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A8CB6AD0(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1E979E8D0, type metadata accessor for FeatureRequestDiagnostic.FeatureDiagnostic);
  *id v3 = result;
  return result;
}

uint64_t sub_1A8CB65DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A8CB67C4(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_1A8CB65FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A8CB6960(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1A8CB661C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A8CB6AD0(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1E979E8F0, (uint64_t (*)(void))type metadata accessor for WaitlistCacheBox);
  *id v3 = result;
  return result;
}

uint64_t sub_1A8CB6658(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEB0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  id v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A8D5A200();
  __break(1u);
  return result;
}

uint64_t sub_1A8CB67C4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E979E8E0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 4;
  id v13 = a4 + 4;
  size_t v14 = 3 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E979E8E8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A8D5A200();
  __break(1u);
  return result;
}

uint64_t sub_1A8CB6960(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9428);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  id v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A8D5A200();
  __break(1u);
  return result;
}

uint64_t sub_1A8CB6AD0(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    id v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  id v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  void v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  char v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  unint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1A8D5A200();
  __break(1u);
  return result;
}

uint64_t sub_1A8CB6D18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74656B636974 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A8D63C50)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A8CB6E5C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979E900);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  int64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8CB749C();
  sub_1A8D5A4F0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    LOBYTE(v14) = 0;
    uint64_t v8 = sub_1A8D5A250();
    type metadata accessor for TicketStatus();
    char v13 = 1;
    sub_1A8CB6308(&qword_1EB5E9750);
    swift_bridgeObjectRetain();
    sub_1A8D5A2B0();
    int64_t v10 = v14;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9DB0);
    char v13 = 2;
    uint64_t v12 = sub_1A8CB634C((unint64_t *)&unk_1E979E8A8);
    id v11 = v10;
    uint64_t v12 = 0;
    sub_1A8D5A2B0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1A8CB714C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74656B636974 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4965727574616566 && a2 == 0xEA00000000007344)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t destroy for WaitlistResponse(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for WaitlistResponse(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  id v6 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WaitlistResponse(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[2];
  uint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WaitlistResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WaitlistResponse(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WaitlistResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WaitlistResponse()
{
  return &type metadata for WaitlistResponse;
}

unint64_t sub_1A8CB749C()
{
  unint64_t result = qword_1E979E908;
  if (!qword_1E979E908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E908);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Availability.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s25CloudSubscriptionFeatures14WaitlistResultC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8CB764CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WaitlistResponse.CodingKeys()
{
  return &type metadata for WaitlistResponse.CodingKeys;
}

unint64_t sub_1A8CB7688()
{
  unint64_t result = qword_1E979E918;
  if (!qword_1E979E918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E918);
  }
  return result;
}

unint64_t sub_1A8CB76E0()
{
  unint64_t result = qword_1E979E920;
  if (!qword_1E979E920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E920);
  }
  return result;
}

unint64_t sub_1A8CB7738()
{
  unint64_t result = qword_1E979E928;
  if (!qword_1E979E928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E928);
  }
  return result;
}

uint64_t CloudFeature.featureID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___CloudFeature_featureID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CloudFeature.canUse.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___CloudFeature_canUse);
  swift_beginAccess();
  return *v1;
}

uint64_t CloudFeature.accessToken.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___CloudFeature_accessToken);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CloudFeature.ttl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___CloudFeature_ttl;
  swift_beginAccess();
  return sub_1A8CB249C(v3, a1, &qword_1EB5EACF0);
}

id sub_1A8CB79B4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v9 = v8;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v16 = &v9[OBJC_IVAR___CloudFeature_limit];
  *(void *)id v16 = 0;
  v16[8] = 1;
  size_t v17 = &v9[OBJC_IVAR___CloudFeature_accessToken];
  *size_t v17 = 0;
  v17[1] = 0;
  uint64_t v18 = (uint64_t)&v9[OBJC_IVAR___CloudFeature_ttl];
  uint64_t v19 = sub_1A8D596F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v9[OBJC_IVAR___CloudFeature_canUse] = a3;
  unint64_t v20 = &v9[OBJC_IVAR___CloudFeature_featureID];
  *unint64_t v20 = a1;
  v20[1] = a2;
  swift_beginAccess();
  *(void *)id v16 = a4;
  v16[8] = a5 & 1;
  swift_beginAccess();
  *size_t v17 = a6;
  v17[1] = a7;
  char v21 = v9;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1A8CB958C(a8, v18);
  swift_endAccess();

  v27.receiver = v21;
  v27.super_class = ObjectType;
  id v22 = objc_msgSendSuper2(&v27, sel_init);
  sub_1A8C8DE74(a8, &qword_1EB5EACF0);
  return v22;
}

uint64_t static CloudFeature.supportsSecureCoding.getter()
{
  return 1;
}

id CloudFeature.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return CloudFeature.init(coder:)(a1);
}

uint64_t sub_1A8CB7BA0(unsigned __int8 *a1, char *a2)
{
  return sub_1A8CF7BF8(*a1, *a2);
}

uint64_t sub_1A8CB7BAC()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8CB7CAC()
{
  sub_1A8D59C80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A8CB7D94()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8CB7E90@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A8CB934C();
  *a1 = result;
  return result;
}

void sub_1A8CB7EC0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000007965;
  uint64_t v3 = 0x4B65727574616566;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE90000000000006CLL;
      uint64_t v3 = 0x6C69546568636163;
      goto LABEL_3;
    case 2:
      *a1 = 0x6573556E6163;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x74696D696CLL;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0x6F54737365636361;
      a1[1] = 0xEB000000006E656BLL;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1A8CB7F98@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A8CB934C();
  *a1 = result;
  return result;
}

uint64_t sub_1A8CB7FC0(uint64_t a1)
{
  unint64_t v2 = sub_1A8C93B10();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8CB7FFC(uint64_t a1)
{
  unint64_t v2 = sub_1A8C93B10();
  return MEMORY[0x1F41862B0](a1, v2);
}

id CloudFeature.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return CloudFeature.init(from:)(a1);
}

uint64_t CloudFeature.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E96D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  unint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8C93B10();
  sub_1A8D5A510();
  char v20 = 0;
  sub_1A8D5A320();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  swift_beginAccess();
  char v19 = 2;
  sub_1A8D5A330();
  uint64_t v10 = v3 + OBJC_IVAR___CloudFeature_ttl;
  swift_beginAccess();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  v16[1] = v16;
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8CB249C(v10, (uint64_t)v14, &qword_1EB5EACF0);
  char v18 = 1;
  sub_1A8CB8854();
  sub_1A8D5A340();
  sub_1A8C8DE74((uint64_t)v14, &qword_1EB5EACF0);
  swift_beginAccess();
  char v17 = 3;
  sub_1A8D5A300();
  swift_beginAccess();
  char v21 = 4;
  swift_bridgeObjectRetain();
  sub_1A8D5A2F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return swift_bridgeObjectRelease();
}

uint64_t CloudFeature.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1A8CB249C(a1, (uint64_t)v7, (uint64_t *)&unk_1EB5EA170);
  if (!v8)
  {
    sub_1A8C8DE74((uint64_t)v7, (uint64_t *)&unk_1EB5EA170);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    char v4 = 0;
    return v4 & 1;
  }
  if (*(void *)(v1 + OBJC_IVAR___CloudFeature_featureID) == *(void *)&v6[OBJC_IVAR___CloudFeature_featureID]
    && *(void *)(v1 + OBJC_IVAR___CloudFeature_featureID + 8) == *(void *)&v6[OBJC_IVAR___CloudFeature_featureID + 8])
  {

    char v4 = 1;
  }
  else
  {
    char v4 = sub_1A8D5A390();
  }
  return v4 & 1;
}

id CloudFeature.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A8CB8564(void *a1)
{
  return CloudFeature.encode(to:)(a1);
}

uint64_t CloudFeature.status.getter()
{
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___CloudFeature_featureID);
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___CloudFeature_featureID + 8);
  uint64_t v3 = (unsigned __int8 *)(v0 + OBJC_IVAR___CloudFeature_canUse);
  swift_beginAccess();
  int v4 = *v3;
  uint64_t v5 = v0 + OBJC_IVAR___CloudFeature_limit;
  swift_beginAccess();
  if (v4) {
    uint64_t result = 0;
  }
  else {
    uint64_t result = 2;
  }
  if (v4) {
    BOOL v7 = *(unsigned char *)(v5 + 8) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
    uint64_t v8 = qword_1EB5EAB80;
    swift_bridgeObjectRetain();
    if (v8 != -1) {
      swift_once();
    }
    char v9 = sub_1A8CB871C(v2, v1, qword_1EB5EAB90);
    swift_bridgeObjectRelease();
    return v9 & 1;
  }
  return result;
}

uint64_t _s25CloudSubscriptionFeatures0A7FeatureC5limitSiSgvg_0()
{
  uint64_t v1 = v0 + OBJC_IVAR___CloudFeature_limit;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1A8CB86D0()
{
  uint64_t v0 = sub_1A8D589E0((uint64_t)&unk_1EFF53A08);
  uint64_t result = swift_arrayDestroy();
  qword_1EB5EAB90 = v0;
  return result;
}

uint64_t sub_1A8CB871C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1A8D5A4A0();
    sub_1A8D59C80();
    uint64_t v6 = sub_1A8D5A4D0();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1A8D5A390() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          id v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1A8D5A390() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

unint64_t sub_1A8CB8854()
{
  unint64_t result = qword_1EB5E9498;
  if (!qword_1EB5E9498)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB5EACF0);
    sub_1A8C93BF8((unint64_t *)&unk_1EB5E92B0, MEMORY[0x1F418BA40]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9498);
  }
  return result;
}

uint64_t sub_1A8CB88E0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && (uint64_t v4 = sub_1A8D59820(),
        sub_1A8C93BF8(&qword_1E979E9D0, MEMORY[0x1F41975A8]),
        uint64_t v5 = sub_1A8D59B60(),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v5 & ~v7,
        uint64_t v18 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    uint64_t v17 = a1;
    uint64_t v15 = ~v7;
    uint64_t v9 = *(void **)(v4 - 8);
    id v16 = (void (*)(char *, unint64_t, uint64_t))v9[2];
    uint64_t v10 = v9[8];
    uint64_t v11 = v9[9];
    BOOL v12 = (uint64_t (**)(char *, uint64_t))(v9 + 1);
    do
    {
      MEMORY[0x1F4188790](v5, v6);
      v16((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(a2 + 48) + v11 * v8, v4);
      sub_1A8C93BF8(&qword_1E979E9D8, MEMORY[0x1F41975A8]);
      char v13 = sub_1A8D59BA0();
      uint64_t v5 = (*v12)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
      if (v13) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v15;
    }
    while (((*(void *)(v18 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1A8CB8AA8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && (uint64_t v4 = sub_1A8D59850(),
        sub_1A8C93BF8(&qword_1EB5E9910, MEMORY[0x1F41975C0]),
        uint64_t v5 = sub_1A8D59B60(),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v5 & ~v7,
        uint64_t v18 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    uint64_t v17 = a1;
    uint64_t v15 = ~v7;
    uint64_t v9 = *(void **)(v4 - 8);
    id v16 = (void (*)(char *, unint64_t, uint64_t))v9[2];
    uint64_t v10 = v9[8];
    uint64_t v11 = v9[9];
    BOOL v12 = (uint64_t (**)(char *, uint64_t))(v9 + 1);
    do
    {
      MEMORY[0x1F4188790](v5, v6);
      v16((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(a2 + 48) + v11 * v8, v4);
      sub_1A8C93BF8(&qword_1EB5E9918, MEMORY[0x1F41975C0]);
      char v13 = sub_1A8D59BA0();
      uint64_t v5 = (*v12)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
      if (v13) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v15;
    }
    while (((*(void *)(v18 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t FeatureStatus.description.getter()
{
  return 0x6E776F6E6B6E55;
}

uint64_t sub_1A8CB8D50()
{
  return sub_1A8D59D20();
}

uint64_t sub_1A8CB8DB0()
{
  return sub_1A8D59D00();
}

unint64_t sub_1A8CB8E00()
{
  unint64_t result = 0x6C62616C69617641;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x6574696D696C6E55;
      break;
    case 2:
      unint64_t result = 0x616C696176616E55;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0x656E696665646E55;
      break;
    default:
      unint64_t result = 0x6E776F6E6B6E55;
      break;
  }
  return result;
}

void sub_1A8CB8EE0(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1A8D5A1C0();
  if (!v2) {
    goto LABEL_12;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v3 = (char *)MEMORY[0x1AD0E6030](0, a1);
  }
  else {
    uint64_t v3 = (char *)*(id *)(a1 + 32);
  }
  uint64_t v4 = v3;
  BOOL v5 = *(void *)&v3[OBJC_IVAR___CloudFeature_featureID] == 0x6C6C2E64756F6C63
    && *(void *)&v3[OBJC_IVAR___CloudFeature_featureID + 8] == 0xE90000000000006DLL;
  if (v5 || (sub_1A8D5A390() & 1) != 0)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_beginAccess();

    return;
  }

  if (v2 == 1) {
    goto LABEL_12;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v6 = 1;
    while (1)
    {
      uint64_t v7 = MEMORY[0x1AD0E6030](v6, a1);
      uint64_t v8 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        break;
      }
      uint64_t v4 = (char *)v7;
      BOOL v9 = *(void *)(v7 + OBJC_IVAR___CloudFeature_featureID) == 0x6C6C2E64756F6C63
        && *(void *)(v7 + OBJC_IVAR___CloudFeature_featureID + 8) == 0xE90000000000006DLL;
      if (v9 || (sub_1A8D5A390() & 1) != 0) {
        goto LABEL_10;
      }
      swift_unknownObjectRelease();
      ++v6;
      if (v8 == v2) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v10 = 5;
    while (1)
    {
      uint64_t v11 = v10 - 3;
      if (__OFADD__(v10 - 4, 1)) {
        break;
      }
      BOOL v12 = *(char **)(a1 + 8 * v10);
      BOOL v13 = *(void *)&v12[OBJC_IVAR___CloudFeature_featureID] == 0x6C6C2E64756F6C63
         && *(void *)&v12[OBJC_IVAR___CloudFeature_featureID + 8] == 0xE90000000000006DLL;
      if (v13 || (sub_1A8D5A390() & 1) != 0)
      {
        uint64_t v4 = v12;
        goto LABEL_10;
      }
      ++v10;
      if (v11 == v2) {
        goto LABEL_12;
      }
    }
  }
  __break(1u);
}

void sub_1A8CB9118(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1A8D5A1C0();
  if (!v2) {
    goto LABEL_10;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v3 = (char *)MEMORY[0x1AD0E6030](0, a1);
  }
  else {
    uint64_t v3 = (char *)*(id *)(a1 + 32);
  }
  uint64_t v4 = v3;
  if (*(void *)&v3[OBJC_IVAR___CloudFeature_featureID] == 0xD000000000000018
    && *(void *)&v3[OBJC_IVAR___CloudFeature_featureID + 8] == 0x80000001A8D62950
    || (sub_1A8D5A390() & 1) != 0)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    swift_beginAccess();

    return;
  }

  if (v2 == 1) {
    goto LABEL_10;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = 1;
    while (1)
    {
      uint64_t v6 = MEMORY[0x1AD0E6030](v5, a1);
      uint64_t v7 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        break;
      }
      uint64_t v4 = (char *)v6;
      if (*(void *)(v6 + OBJC_IVAR___CloudFeature_featureID) == 0xD000000000000018
        && *(void *)(v6 + OBJC_IVAR___CloudFeature_featureID + 8) == 0x80000001A8D62950
        || (sub_1A8D5A390() & 1) != 0)
      {
        goto LABEL_8;
      }
      swift_unknownObjectRelease();
      ++v5;
      if (v7 == v2) {
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = 5;
    while (1)
    {
      uint64_t v9 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      uint64_t v10 = *(char **)(a1 + 8 * v8);
      if (*(void *)&v10[OBJC_IVAR___CloudFeature_featureID] == 0xD000000000000018
        && *(void *)&v10[OBJC_IVAR___CloudFeature_featureID + 8] == 0x80000001A8D62950
        || (sub_1A8D5A390() & 1) != 0)
      {
        uint64_t v4 = v10;
        goto LABEL_8;
      }
      ++v8;
      if (v9 == v2) {
        goto LABEL_10;
      }
    }
  }
  __break(1u);
}

uint64_t sub_1A8CB934C()
{
  unint64_t v0 = sub_1A8D5A220();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A8CB9398()
{
  return type metadata accessor for CloudFeature();
}

uint64_t method lookup function for CloudFeature(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CloudFeature);
}

uint64_t dispatch thunk of CloudFeature.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of CloudFeature.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

ValueMetadata *type metadata accessor for CloudFeature.APICodingKeys()
{
  return &type metadata for CloudFeature.APICodingKeys;
}

unint64_t sub_1A8CB9430()
{
  unint64_t result = qword_1E979E9C0;
  if (!qword_1E979E9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979E9C0);
  }
  return result;
}

unint64_t sub_1A8CB9488()
{
  unint64_t result = qword_1EB5EA188;
  if (!qword_1EB5EA188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5EA188);
  }
  return result;
}

unint64_t sub_1A8CB94E0()
{
  unint64_t result = qword_1EB5EA180;
  if (!qword_1EB5EA180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5EA180);
  }
  return result;
}

unint64_t sub_1A8CB9534()
{
  unint64_t result = qword_1EB5E9D78;
  if (!qword_1EB5E9D78)
  {
    type metadata accessor for FeatureStatus(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9D78);
  }
  return result;
}

uint64_t sub_1A8CB958C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A8CB95F4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9400);
  uint64_t v2 = (void *)sub_1A8D5A1F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A8C90B9C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    BOOL v12 = (void *)(v2[7] + 16 * result);
    *BOOL v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A8CB9718(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EA08);
  uint64_t v2 = (void *)sub_1A8D5A1F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1A8C90B9C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A8CB9834(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E96A8);
  uint64_t v2 = sub_1A8D5A1F0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A8CB249C(v6, (uint64_t)v15, &qword_1EB5E9690);
    unint64_t result = sub_1A8CF1490((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1A8C90CF8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A8CB9978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8D59E10();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A8D59E00();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1A8C8DE74(a1, &qword_1EB5EAEA0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A8D59DC0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E98D8);
  return swift_task_create();
}

uint64_t sub_1A8CB9B30()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_userDefaults);
  uint64_t v2 = (void *)sub_1A8D59BC0();
  id v3 = objc_msgSend(v1, sel_persistentDomainForName_, v2);

  if (!v3) {
    return 0;
  }
  uint64_t v4 = sub_1A8D59B30();

  return v4;
}

id sub_1A8CB9C0C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_globalUserDefaults);
  uint64_t v2 = (void *)sub_1A8D59BC0();
  id v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  if (qword_1EB5EA1F8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A8D59A80();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EA288);
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59F00();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109120;
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v5, v6, "Fetched value for opt-in status (deprecated global domain): %{BOOL}d", v7, 8u);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }

  return v3;
}

uint64_t sub_1A8CB9D9C()
{
  if ((sub_1A8D419C0() & 1) == 0) {
    goto LABEL_10;
  }
  if (qword_1EB5EA2D8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB5EA2D0;
  uint64_t v2 = (void *)sub_1A8D59BC0();
  LOBYTE(v1) = objc_msgSend((id)v1, sel_BOOLForKey_, v2);

  if (v1)
  {
    if (qword_1EB5EA1F8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1A8D59A80();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB5EA288);
    uint64_t v4 = sub_1A8D59A60();
    os_log_type_t v5 = sub_1A8D59F00();
    if (os_log_type_enabled((os_log_t)v4, v5))
    {
      os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v6 = 0;
      _os_log_impl(&dword_1A8C7F000, (os_log_t)v4, v5, "GMBypass is enabled for opt-in, returning true", v6, 2u);
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
    }

    LOBYTE(v4) = 1;
  }
  else
  {
LABEL_10:
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_userDefaults);
    sub_1A8CBB770();
    uint64_t v7 = (void *)sub_1A8D59BC0();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend((id)v4, sel_valueForKey_, v7);

    if (v8)
    {
      sub_1A8D5A010();
      swift_unknownObjectRelease();
      sub_1A8C8DE74((uint64_t)v15, (uint64_t *)&unk_1EB5EA170);
      sub_1A8CBB770();
      uint64_t v9 = (void *)sub_1A8D59BC0();
      swift_bridgeObjectRelease();
      LODWORD(v4) = objc_msgSend((id)v4, sel_BOOLForKey_, v9);

      if (qword_1EB5EA1F8 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1A8D59A80();
      __swift_project_value_buffer(v10, (uint64_t)qword_1EB5EA288);
      long long v11 = sub_1A8D59A60();
      os_log_type_t v12 = sub_1A8D59F00();
      if (os_log_type_enabled(v11, v12))
      {
        BOOL v13 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)BOOL v13 = 67109120;
        LODWORD(v15[0]) = v4;
        sub_1A8D59FE0();
        _os_log_impl(&dword_1A8C7F000, v11, v12, "Fetched value for opt-in status: %{BOOL}d", v13, 8u);
        MEMORY[0x1AD0E6EB0](v13, -1, -1);
      }
    }
    else
    {
      memset(v15, 0, sizeof(v15));
      sub_1A8C8DE74((uint64_t)v15, (uint64_t *)&unk_1EB5EA170);
      LOBYTE(v4) = sub_1A8CBA6D0();
    }
  }
  return v4 & 1;
}

void sub_1A8CBA100(char a1)
{
  uint64_t v2 = v1;
  int v4 = a1 & 1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  MEMORY[0x1F4188790](v5 - 8, v6);
  id v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1A8CB9D9C() & 1) == v4)
  {
    if (qword_1EB5EA1F8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1A8D59A80();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EB5EA288);
    uint64_t v23 = sub_1A8D59A60();
    os_log_type_t v20 = sub_1A8D59F00();
    if (os_log_type_enabled(v23, v20))
    {
      char v21 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v21 = 67109120;
      int v24 = a1 & 1;
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v23, v20, "Attempted to set GMOptIn.isOptedIn to %{BOOL}d but it already has that value. Early returning.", v21, 8u);
      MEMORY[0x1AD0E6EB0](v21, -1, -1);
    }
    else
    {
      id v22 = v23;
    }
  }
  else
  {
    uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_userDefaults];
    uint64_t v10 = (void *)sub_1A8D59DB0();
    sub_1A8CBB770();
    long long v11 = (void *)sub_1A8D59BC0();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setValue_forKey_, v10, v11);

    type metadata accessor for Assets();
    sub_1A8CF7E54(0x6E4974704F4D47, 0xE700000000000000);
    if (qword_1EB5EA1F8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1A8D59A80();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB5EA288);
    BOOL v13 = sub_1A8D59A60();
    os_log_type_t v14 = sub_1A8D59F00();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 67109120;
      int v25 = a1 & 1;
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v13, v14, "Set new value for opt-in toggle %{BOOL}d, sending darwin notification.", v15, 8u);
      MEMORY[0x1AD0E6EB0](v15, -1, -1);
    }

    sub_1A8CEA9D8();
    uint64_t v16 = sub_1A8D59E10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = 0;
    *(void *)(v17 + 24) = 0;
    *(void *)(v17 + 32) = v2;
    *(unsigned char *)(v17 + 40) = a1 & 1;
    id v18 = v2;
    sub_1A8C84960((uint64_t)v8, (uint64_t)&unk_1E979E9F8, v17);
    swift_release();
  }
}

uint64_t sub_1A8CBA4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 32) = a5;
  *(void *)(v5 + 16) = a4;
  return MEMORY[0x1F4188298](sub_1A8CBA4C4, 0, 0);
}

uint64_t sub_1A8CBA4C4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A8CBA568;
  char v2 = *(unsigned char *)(v0 + 32);
  return sub_1A8CE4D90(v2);
}

uint64_t sub_1A8CBA568()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void (*sub_1A8CBA65C(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = sub_1A8CB9D9C() & 1;
  return sub_1A8CBA6A8;
}

void sub_1A8CBA6A8(uint64_t a1)
{
}

uint64_t sub_1A8CBA6D0()
{
  uint64_t v1 = v0;
  id v2 = sub_1A8C8E338();
  id v3 = objc_msgSend(v2, sel_aa_primaryAppleAccount);

  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_aa_personID);

    if (v4)
    {

      if (qword_1EB5EA1F8 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_1A8D59A80();
      __swift_project_value_buffer(v5, (uint64_t)qword_1EB5EA288);
      id v6 = v1;
      uint64_t v7 = sub_1A8D59A60();
      os_log_type_t v8 = sub_1A8D59F00();
      if (!os_log_type_enabled(v7, v8))
      {

        return 0;
      }
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v24 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      uint64_t v11 = sub_1A8CBB770();
      sub_1A8C90120(v11, v12, &v24);
      sub_1A8D59FE0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A8C7F000, v7, v8, "No value for user opt-in key %s. Returning false.", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v10, -1, -1);
      BOOL v13 = v9;
      goto LABEL_17;
    }
  }
  if (qword_1EB5EA1F8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1A8D59A80();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EB5EA288);
  uint64_t v15 = sub_1A8D59A60();
  os_log_type_t v16 = sub_1A8D59F00();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl(&dword_1A8C7F000, v15, v16, "Device has no DSID, checking if previous user has toggle enabled.", v17, 2u);
    MEMORY[0x1AD0E6EB0](v17, -1, -1);
  }

  char v18 = sub_1A8CBAA44();
  uint64_t v7 = sub_1A8D59A60();
  os_log_type_t v19 = sub_1A8D59F00();
  BOOL v20 = os_log_type_enabled(v7, v19);
  if ((v18 & 1) == 0)
  {
    if (!v20)
    {
LABEL_18:

      return 0;
    }
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl(&dword_1A8C7F000, v7, v19, "No previous user has opted-in. Returning false.", v23, 2u);
    BOOL v13 = v23;
LABEL_17:
    MEMORY[0x1AD0E6EB0](v13, -1, -1);
    goto LABEL_18;
  }
  if (v20)
  {
    char v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v21 = 0;
    _os_log_impl(&dword_1A8C7F000, v7, v19, "Previous user has opted-in. Returning true.", v21, 2u);
    MEMORY[0x1AD0E6EB0](v21, -1, -1);
  }

  return 1;
}

uint64_t sub_1A8CBAA44()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_userDefaults);
  id v2 = (void *)sub_1A8D59BC0();
  id v3 = objc_msgSend(v1, sel_persistentDomainForName_, v2);

  if (v3)
  {
    uint64_t v4 = sub_1A8D59B30();

    char v5 = sub_1A8CBADB4(v4);
    swift_bridgeObjectRelease();
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1A8D59A80();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EB5E97D0);
    uint64_t v7 = sub_1A8D59A60();
    os_log_type_t v8 = sub_1A8D59F00();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v17 = v10;
      *(_DWORD *)uint64_t v9 = 136315394;
      sub_1A8C90120(0x4F72657355796E61, 0xEE006E4964657470, &v17);
      sub_1A8D59FE0();
      *(_WORD *)(v9 + 12) = 1024;
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v7, v8, "%s returning %{BOOL}d", (uint8_t *)v9, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v10, -1, -1);
      MEMORY[0x1AD0E6EB0](v9, -1, -1);
    }
  }
  else
  {
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1A8D59A80();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB5E97D0);
    unint64_t v12 = sub_1A8D59A60();
    os_log_type_t v13 = sub_1A8D59F00();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v17 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      sub_1A8C90120(0xD000000000000029, 0x80000001A8D63D50, &v17);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v12, v13, "No persistent domain for suite %s, no users have toggled toggle off or on.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v15, -1, -1);
      MEMORY[0x1AD0E6EB0](v14, -1, -1);
    }

    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1A8CBADB4(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v25 = v2;
  uint64_t v26 = result;
  while (v5)
  {
    unint64_t v8 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v9 = v8 | (v7 << 6);
LABEL_22:
    os_log_type_t v13 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    sub_1A8C901F4(*(void *)(v1 + 56) + 32 * v9, (uint64_t)v32);
    *(void *)&long long v31 = v14;
    *((void *)&v31 + 1) = v15;
    long long v29 = v31;
    v30[0] = v32[0];
    v30[1] = v32[1];
    long long v16 = v31;
    sub_1A8C901F4((uint64_t)v30, (uint64_t)v28);
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      int v17 = v33;
      if (qword_1EB5E97F0 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_1A8D59A80();
      __swift_project_value_buffer(v18, (uint64_t)qword_1EB5E97D0);
      swift_bridgeObjectRetain_n();
      os_log_type_t v19 = sub_1A8D59A60();
      os_log_type_t v20 = sub_1A8D59F00();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        v28[0] = v22;
        *(_DWORD *)uint64_t v21 = 136315394;
        swift_bridgeObjectRetain();
        *(void *)(v21 + 4) = sub_1A8C90120(v16, *((unint64_t *)&v16 + 1), v28);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v21 + 12) = 1024;
        *(_DWORD *)(v21 + 14) = v17;
        _os_log_impl(&dword_1A8C7F000, v19, v20, "Previous key %s has value %{BOOL}d", (uint8_t *)v21, 0x12u);
        swift_arrayDestroy();
        uint64_t v23 = v22;
        uint64_t v1 = v26;
        MEMORY[0x1AD0E6EB0](v23, -1, -1);
        uint64_t v24 = v21;
        uint64_t v2 = v25;
        MEMORY[0x1AD0E6EB0](v24, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t result = sub_1A8C8DE74((uint64_t)&v29, &qword_1EB5E9368);
      if (v17)
      {
        swift_release();
        return 1;
      }
    }
    else
    {
      uint64_t result = sub_1A8C8DE74((uint64_t)&v29, &qword_1EB5E9368);
    }
  }
  int64_t v10 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v10 >= v27) {
    goto LABEL_30;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v10);
  ++v7;
  if (v11) {
    goto LABEL_21;
  }
  int64_t v7 = v10 + 1;
  if (v10 + 1 >= v27) {
    goto LABEL_30;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v7);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v7 = v10 + 2;
  if (v10 + 2 >= v27) {
    goto LABEL_30;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v7);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v7 = v10 + 3;
  if (v10 + 3 >= v27) {
    goto LABEL_30;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v7);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v27)
  {
LABEL_30:
    swift_release();
    return 0;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v12);
  int64_t v7 = v12;
  if (v11)
  {
LABEL_21:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v27) {
      goto LABEL_30;
    }
    unint64_t v11 = *(void *)(v2 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_21;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void sub_1A8CBB18C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_userDefaults);
  sub_1A8C90A64(MEMORY[0x1E4FBC860]);
  uint64_t v2 = (void *)sub_1A8D59B20();
  swift_bridgeObjectRelease();
  id v3 = (id)sub_1A8D59BC0();
  objc_msgSend(v1, sel_setPersistentDomain_forName_, v2, v3);
}

id GMOptIn.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void GMOptIn.init()()
{
}

id GMOptIn.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GMOptIn();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A8CBB374(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  unint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *id v3 = v2;
  v3[1] = sub_1A8CBB454;
  return v5(v2 + 32);
}

uint64_t sub_1A8CBB454()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  id v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

id sub_1A8CBB568()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v1 = (void *)sub_1A8D59BC0();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2) {
    return v2;
  }
  if (qword_1EB5EA1F8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A8D59A80();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EA288);
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59EE0();
  if (os_log_type_enabled(v5, v6))
  {
    int64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v10 = v8;
    *(_DWORD *)int64_t v7 = 136315138;
    sub_1A8C90120(0xD000000000000029, 0x80000001A8D63D50, &v10);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v5, v6, "Could not create UserDefaults with suiteName, will use .standard: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }

  id v9 = objc_msgSend(self, sel_standardUserDefaults);
  return v9;
}

uint64_t sub_1A8CBB770()
{
  id v0 = sub_1A8C8E338();
  id v1 = objc_msgSend(v0, sel_aa_primaryAppleAccount);

  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_aa_personID);
    if (v2)
    {
      id v3 = v2;
      uint64_t v4 = sub_1A8D59BF0();

      if (qword_1EB5EA1F8 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_1A8D59A80();
      __swift_project_value_buffer(v5, (uint64_t)qword_1EB5EA288);
      os_log_type_t v6 = sub_1A8D59A60();
      os_log_type_t v7 = sub_1A8D59F00();
      if (!os_log_type_enabled(v6, v7)) {
        goto LABEL_13;
      }
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      id v9 = "Device has primary DSID, using to key opt-in status.";
    }
    else
    {
      if (qword_1EB5EA1F8 != -1) {
        swift_once();
      }
      uint64_t v4 = 0x695F656369766564;
      uint64_t v10 = sub_1A8D59A80();
      __swift_project_value_buffer(v10, (uint64_t)qword_1EB5EA288);
      os_log_type_t v6 = sub_1A8D59A60();
      os_log_type_t v7 = sub_1A8D59F00();
      if (!os_log_type_enabled(v6, v7)) {
        goto LABEL_13;
      }
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      id v9 = "Device has primary account without DSID. Will fallback to device setting.";
    }
    _os_log_impl(&dword_1A8C7F000, v6, v7, v9, v8, 2u);
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
LABEL_13:

    return v4;
  }
  return 0x656369766564;
}

uint64_t sub_1A8CBB970()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1A8CBB9B0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(unsigned char *)(v4 + 32) = v3;
  *(void *)(v4 + 8) = sub_1A8C81994;
  *(void *)(v4 + 16) = v2;
  return MEMORY[0x1F4188298](sub_1A8CBA4C4, 0, 0);
}

id _s25CloudSubscriptionFeatures7GMOptInC7currentACSgvgZ_0()
{
  id v0 = sub_1A8CBB568();
  if (qword_1EB5EA450 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB5ECD08;
  uint64_t v2 = (objc_class *)type metadata accessor for GMOptIn();
  char v3 = (char *)objc_allocWithZone(v2);
  uint64_t v4 = OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_globalUserDefaults;
  uint64_t v5 = self;
  swift_retain();
  uint64_t v6 = v3;
  *(void *)&v3[v4] = objc_msgSend(v5, sel_standardUserDefaults);
  *(void *)&v6[OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_userDefaults] = v0;
  *(void *)&v6[OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_availabilityClient] = v1;
  swift_retain();
  id v7 = v0;

  v10.receiver = v6;
  v10.super_class = v2;
  id v8 = objc_msgSendSuper2(&v10, sel_init);

  swift_release();
  return v8;
}

uint64_t type metadata accessor for GMOptIn()
{
  return self;
}

uint64_t sub_1A8CBBBA8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A8CB9D9C();
  *a1 = result & 1;
  return result;
}

void sub_1A8CBBBD8(char *a1)
{
}

uint64_t method lookup function for GMOptIn(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GMOptIn);
}

uint64_t dispatch thunk of GMOptIn.userDefaultsKey.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of GMOptIn.allData.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of GMOptIn.isOptedInGlobalDomain.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of GMOptIn.isOptedIn.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of GMOptIn.isOptedIn.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of GMOptIn.isOptedIn.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of GMOptIn.reset()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t sub_1A8CBBD84()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A8CBBDBC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A8C81994;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E979EA10 + dword_1E979EA10);
  return v6(a1, v4);
}

uint64_t sub_1A8CBBE90(char *a1, char *a2)
{
  return sub_1A8CF7DD4(*a1, *a2);
}

uint64_t sub_1A8CBBE9C()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8CBBF14()
{
  sub_1A8D59C80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A8CBBF70()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8CBBFE4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1A8D5A220();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1A8CBC044(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x64756F6C434C4D49;
  if (*v1) {
    uint64_t v2 = 0x7465656B61726170;
  }
  *a1 = v2;
  a1[1] = 0xE800000000000000;
}

const char *sub_1A8CBC07C()
{
  return "CoreTelephony";
}

const char *sub_1A8CBC090()
{
  if (*v0) {
    return "ParakeetCloud";
  }
  else {
    return "IMLCloud";
  }
}

const char *GMFeatureFlags.domain.getter()
{
  uint64_t result = "SiriUI";
  switch(*v0)
  {
    case 1:
      uint64_t result = "WritingTools";
      break;
    case 2:
    case 3:
      uint64_t result = "Notes";
      break;
    case 4:
    case 5:
    case 6:
      uint64_t result = "PencilAndPaper";
      break;
    case 7:
      uint64_t result = "Photos";
      break;
    case 8:
      uint64_t result = "GenerativePlayground";
      break;
    case 9:
      uint64_t result = "UserNotifications";
      break;
    default:
      return result;
  }
  return result;
}

const char *GMFeatureFlags.feature.getter()
{
  uint64_t result = "sae";
  switch(*v0)
  {
    case 1:
      uint64_t result = "Panel_iOS";
      break;
    case 2:
      uint64_t result = "GreyParrot";
      break;
    case 3:
    case 6:
      uint64_t result = "GenerationTool";
      break;
    case 4:
      uint64_t result = "MathPaper";
      break;
    case 5:
      uint64_t result = "AutoRefine";
      break;
    case 7:
      uint64_t result = "MemoryCreation";
      break;
    case 8:
      uint64_t result = "App";
      break;
    case 9:
      uint64_t result = "GreymatterCU";
      break;
    default:
      return result;
  }
  return result;
}

uint64_t GMFeatureFlags.isEnabled.getter()
{
  char v1 = *v0;
  uint64_t v5 = &type metadata for GMFeatureFlags;
  unint64_t v6 = sub_1A8CBC2C8();
  v4[0] = v1;
  char v2 = sub_1A8D597C0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
  return v2 & 1;
}

unint64_t sub_1A8CBC2C8()
{
  unint64_t result = qword_1EB5E9E98[0];
  if (!qword_1EB5E9E98[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB5E9E98);
  }
  return result;
}

void *static GMFeatureFlags.allCases.getter()
{
  return &unk_1EFF531F0;
}

CloudSubscriptionFeatures::GMFeatureFlags_optional __swiftcall GMFeatureFlags.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  unint64_t v3 = sub_1A8D5A220();
  result.value = swift_bridgeObjectRelease();
  char v5 = 10;
  if (v3 < 0xA) {
    char v5 = v3;
  }
  *char v2 = v5;
  return result;
}

unint64_t GMFeatureFlags.rawValue.getter()
{
  unint64_t result = 6644083;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x534F696C656E6170;
      break;
    case 2:
      unint64_t result = 0x7272615079657267;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x657061506874616DLL;
      break;
    case 5:
      unint64_t result = 0x696665526F747561;
      break;
    case 6:
      unint64_t result = 0x69746172656E6567;
      break;
    case 7:
      unint64_t result = 0x724379726F6D656DLL;
      break;
    case 8:
      unint64_t result = 0x7070417067;
      break;
    case 9:
      unint64_t result = 1430482279;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A8CBC4D4(unsigned __int8 *a1, char *a2)
{
  return sub_1A8CF7634(*a1, *a2);
}

uint64_t sub_1A8CBC4E0()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8CBC528()
{
  return sub_1A8D24BF4();
}

uint64_t sub_1A8CBC530()
{
  return sub_1A8D5A4D0();
}

CloudSubscriptionFeatures::GMFeatureFlags_optional sub_1A8CBC574(Swift::String *a1)
{
  return GMFeatureFlags.init(rawValue:)(*a1);
}

unint64_t sub_1A8CBC580@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = GMFeatureFlags.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

const char *sub_1A8CBC5A8()
{
  unint64_t result = "SiriUI";
  switch(*v0)
  {
    case 1:
      unint64_t result = "WritingTools";
      break;
    case 2:
    case 3:
      unint64_t result = "Notes";
      break;
    case 4:
    case 5:
    case 6:
      unint64_t result = "PencilAndPaper";
      break;
    case 7:
      unint64_t result = "Photos";
      break;
    case 8:
      unint64_t result = "GenerativePlayground";
      break;
    case 9:
      unint64_t result = "UserNotifications";
      break;
    default:
      return result;
  }
  return result;
}

const char *sub_1A8CBC678()
{
  return GMFeatureFlags.feature.getter();
}

void sub_1A8CBC694(void *a1@<X8>)
{
  *a1 = &unk_1EFF531F0;
}

uint64_t static CSFGMFeatureFlags.anyFeatureEnabled.getter()
{
  uint64_t v0 = qword_1EFF53200;
  if (qword_1EFF53200)
  {
    char v1 = 0;
    char v2 = &byte_1EFF53210;
    do
    {
      if (v1)
      {
        char v1 = 1;
      }
      else
      {
        char v3 = *v2;
        unint64_t v6 = &type metadata for GMFeatureFlags;
        unint64_t v7 = sub_1A8CBC2C8();
        v5[0] = v3;
        char v1 = sub_1A8D597C0();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
      }
      ++v2;
      --v0;
    }
    while (v0);
  }
  else
  {
    char v1 = 0;
  }
  return v1 & 1;
}

id CSFGMFeatureFlags.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id CSFGMFeatureFlags.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CSFGMFeatureFlags();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for CSFGMFeatureFlags()
{
  return self;
}

id CSFGMFeatureFlags.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CSFGMFeatureFlags();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1A8CBC85C()
{
  unint64_t result = qword_1E979EA20;
  if (!qword_1E979EA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EA20);
  }
  return result;
}

unint64_t sub_1A8CBC8B4()
{
  unint64_t result = qword_1E979EA28;
  if (!qword_1E979EA28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E979EA30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EA28);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for GMFeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GMFeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8CBCA6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GMFeatureFlags()
{
  return &type metadata for GMFeatureFlags;
}

unsigned char *storeEnumTagSinglePayload for FeatureFlag(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8CBCB70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlag()
{
  return &type metadata for FeatureFlag;
}

unint64_t sub_1A8CBCBAC()
{
  unint64_t result = qword_1E979EA38;
  if (!qword_1E979EA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EA38);
  }
  return result;
}

uint64_t sub_1A8CBCC00()
{
  uint64_t v0 = qword_1EFF53200;
  if (qword_1EFF53200)
  {
    char v1 = 0;
    int v2 = &byte_1EFF53210;
    do
    {
      if (v1)
      {
        char v1 = 1;
      }
      else
      {
        char v3 = *v2;
        unsigned int v6 = &type metadata for GMFeatureFlags;
        unint64_t v7 = sub_1A8CBC2C8();
        v5[0] = v3;
        char v1 = sub_1A8D597C0();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
      }
      ++v2;
      --v0;
    }
    while (v0);
  }
  else
  {
    char v1 = 0;
  }
  return v1 & 1;
}

uint64_t getEnumTagSinglePayload for CoreTelephonyFeatures(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CoreTelephonyFeatures(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8CBCDF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1A8CBCE1C(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CoreTelephonyFeatures()
{
  return &type metadata for CoreTelephonyFeatures;
}

unint64_t sub_1A8CBCE3C()
{
  unint64_t result = qword_1E979EA40;
  if (!qword_1E979EA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EA40);
  }
  return result;
}

uint64_t sub_1A8CBCE94(void *a1, void *a2)
{
  if (a2)
  {
    id v2 = a2;
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EA48);
    return sub_1A8D59DD0();
  }
  if (!a1)
  {
    sub_1A8C8C7B0();
    swift_allocError();
    *uint64_t v5 = 4;
    goto LABEL_3;
  }
  id v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EA48);
  return sub_1A8D59DE0();
}

uint64_t *sub_1A8CBCF34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_1A8D596F0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = *(void *)(v9 + 64);
  if (*(_DWORD *)(v9 + 84)) {
    size_t v13 = *(void *)(v9 + 64);
  }
  else {
    size_t v13 = v12 + 1;
  }
  uint64_t v14 = v12 + 7;
  unint64_t v15 = ((((v12 + 7 + ((v13 + v10 + (v11 & ~v10)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unsigned int v16 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v16 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v15 > 0x18)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    uint64_t v20 = v19 + (((v16 | 7) + 16) & ~(unint64_t)(v16 | 7));
    swift_retain();
  }
  else
  {
    uint64_t v21 = v8;
    uint64_t v34 = v14;
    uint64_t v22 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v35 = a1;
    unint64_t v23 = (unint64_t)a1 + v11;
    unint64_t v33 = (unint64_t)a2 + v11;
    uint64_t v24 = (const void *)(((unint64_t)a2 + v11) & ~v10);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v24, 1, v21))
    {
      memcpy((void *)(v23 & v22), v24, v13);
      uint64_t v25 = *(void (**)(unint64_t, const void *, uint64_t))(v9 + 16);
    }
    else
    {
      uint64_t v25 = *(void (**)(unint64_t, const void *, uint64_t))(v9 + 16);
      v25(v23 & v22, v24, v21);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v9 + 56))(v23 & v22, 0, 1, v21);
    }
    size_t v26 = ((v23 | v10) + v13) & v22;
    size_t v27 = ((v33 | v10) + v13) & v22;
    v25(v26, (const void *)v27, v21);
    uint64_t v28 = (void *)((v34 + v26) & 0xFFFFFFFFFFFFFFF8);
    long long v29 = (void *)((v34 + v27) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v28 = *v29;
    v28[1] = v29[1];
    unint64_t v30 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
    long long v31 = (void *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v30 = *v31;
    v30[1] = v31[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v35;
  }
  return (uint64_t *)v20;
}

uint64_t sub_1A8CBD1E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = sub_1A8D596F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9 + a1;
  uint64_t v30 = ~v9;
  uint64_t v31 = a1;
  uint64_t v11 = v6 + v9 + a2;
  uint64_t v12 = (const void *)(v11 & ~v9);
  size_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  LODWORD(a1) = v13(v10 & ~v9, 1, v7);
  int v14 = v13((uint64_t)v12, 1, v7);
  if (a1)
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v8 + 16))(v10 & ~v9, v12, v7);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v10 & ~v9, 0, 1, v7);
      goto LABEL_12;
    }
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v8 + 24))(v10 & ~v9, v12, v7);
      goto LABEL_12;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10 & ~v9, v7);
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  if (v15) {
    size_t v17 = v16;
  }
  else {
    size_t v17 = v16 + 1;
  }
  memcpy((void *)(v10 & ~v9), v12, v17);
LABEL_12:
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  uint64_t v19 = v8 + 24;
  uint64_t v18 = v20;
  uint64_t v21 = *(void *)(v19 + 40);
  if (*(_DWORD *)(v19 + 60)) {
    uint64_t v22 = *(void *)(v19 + 40);
  }
  else {
    uint64_t v22 = v21 + 1;
  }
  uint64_t v23 = ((v10 | v9) + v22) & v30;
  uint64_t v24 = ((v11 | v9) + v22) & v30;
  v18(v23, v24, v7);
  uint64_t v25 = (void *)((v21 + 7 + v23) & 0xFFFFFFFFFFFFFFF8);
  size_t v26 = (void *)((v21 + 7 + v24) & 0xFFFFFFFFFFFFFFF8);
  void *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  size_t v27 = (void *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (void *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  *size_t v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1A8CBD460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = sub_1A8D596F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v25 = ~v9;
  uint64_t v26 = a1;
  uint64_t v24 = v6 + v9 + a1;
  uint64_t v10 = (void *)(v24 & ~v9);
  uint64_t v11 = v6 + v9 + a2;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v11 & ~v9, 1, v7))
  {
    int v12 = *(_DWORD *)(v8 + 84);
    uint64_t v13 = *(void *)(v8 + 64);
    if (v12) {
      size_t v14 = *(void *)(v8 + 64);
    }
    else {
      size_t v14 = v13 + 1;
    }
    memcpy(v10, (const void *)(v11 & ~v9), v14);
    int v15 = *(void (**)(void *, uint64_t, uint64_t))(v8 + 32);
  }
  else
  {
    int v15 = *(void (**)(void *, uint64_t, uint64_t))(v8 + 32);
    v15(v10, v11 & ~v9, v7);
    size_t v17 = *(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v16 = v8 + 56;
    v17(v10, 0, 1, v7);
    int v12 = *(_DWORD *)(v16 + 28);
    uint64_t v13 = *(void *)(v16 + 8);
  }
  if (v12) {
    uint64_t v18 = v13;
  }
  else {
    uint64_t v18 = v13 + 1;
  }
  uint64_t v19 = (void *)(((v24 | v9) + v18) & v25);
  uint64_t v20 = ((v11 | v9) + v18) & v25;
  v15(v19, v20, v7);
  uint64_t v21 = (_OWORD *)(((unint64_t)v19 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (_OWORD *)((v13 + 7 + v20) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  *(_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  return v26;
}

uint64_t sub_1A8CBD63C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_1A8D596F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9 + a1;
  uint64_t v30 = ~v9;
  uint64_t v31 = a1;
  uint64_t v11 = v6 + v9 + a2;
  int v12 = (const void *)(v11 & ~v9);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  LODWORD(a1) = v13(v10 & ~v9, 1, v7);
  int v14 = v13((uint64_t)v12, 1, v7);
  if (a1)
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v8 + 32))(v10 & ~v9, v12, v7);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v10 & ~v9, 0, 1, v7);
      goto LABEL_12;
    }
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v8 + 40))(v10 & ~v9, v12, v7);
      goto LABEL_12;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10 & ~v9, v7);
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  if (v15) {
    size_t v17 = v16;
  }
  else {
    size_t v17 = v16 + 1;
  }
  memcpy((void *)(v10 & ~v9), v12, v17);
LABEL_12:
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  uint64_t v19 = v8 + 40;
  uint64_t v18 = v20;
  uint64_t v21 = *(void *)(v19 + 24);
  if (*(_DWORD *)(v19 + 44)) {
    uint64_t v22 = *(void *)(v19 + 24);
  }
  else {
    uint64_t v22 = v21 + 1;
  }
  uint64_t v23 = ((v10 | v9) + v22) & v30;
  uint64_t v24 = ((v11 | v9) + v22) & v30;
  v18(v23, v24, v7);
  uint64_t v25 = (void *)((v21 + 7 + v23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (void *)((v21 + 7 + v24) & 0xFFFFFFFFFFFFFFF8);
  void *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRelease();
  size_t v27 = (void *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (void *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  *size_t v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRelease();
  return v31;
}

BOOL sub_1A8CBD8E4(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1A8CBD8F4()
{
  return sub_1A8D5A4B0();
}

uint64_t sub_1A8CBD91C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974617269707865 && a2 == 0xEA00000000006E6FLL || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656863746566 && a2 == 0xE700000000000000 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000044 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x44495344746C61 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A8CBDB4C()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8CBDBA8(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  v11[0] = a2;
  v11[1] = v3;
  type metadata accessor for CacheBox.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_1A8D5A350();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8D5A510();
  char v16 = 0;
  uint64_t v9 = v11[3];
  sub_1A8D5A340();
  if (!v9)
  {
    char v15 = 1;
    sub_1A8D596F0();
    sub_1A8C93C40((unint64_t *)&unk_1EB5E92B0);
    sub_1A8D5A310();
    char v14 = 2;
    sub_1A8D5A340();
    char v13 = 3;
    sub_1A8D5A2F0();
    char v12 = 4;
    sub_1A8D5A2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

BOOL sub_1A8CBDE4C(char *a1, char *a2)
{
  return sub_1A8CBD8E4(*a1, *a2);
}

uint64_t sub_1A8CBDE64()
{
  return sub_1A8CBDB4C();
}

uint64_t sub_1A8CBDE74()
{
  return sub_1A8CBD8F4();
}

uint64_t sub_1A8CBDE84()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8CBDED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A8CBD91C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A8CBDF04@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A8CBE0DC();
  *a1 = result;
  return result;
}

uint64_t sub_1A8CBDF38(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1A8CBDF8C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1A8CBDFE0(void *a1, uint64_t a2)
{
  return sub_1A8CBDBA8(a1, a2);
}

uint64_t sub_1A8CBDFF8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A8CBE058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

uint64_t sub_1A8CBE088()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A8CBE0A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A8CBE0C0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A8CBE0DC()
{
  return 5;
}

BOOL sub_1A8CBE0E4(char a1)
{
  uint64_t v1 = 0xD000000000000012;
  uint64_t v2 = 0x80000001A8D640F0;
  switch(a1)
  {
    case 1:
      uint64_t v2 = 0x80000001A8D640D0;
      uint64_t v1 = 0xD000000000000011;
      break;
    case 2:
      uint64_t v1 = 0xD000000000000015;
      uint64_t v2 = 0x80000001A8D640B0;
      break;
    case 3:
      uint64_t v1 = 0x6C7070612E6D6F63;
      uint64_t v2 = 0xEE00707673722E65;
      break;
    default:
      break;
  }
  id v4 = objc_allocWithZone(MEMORY[0x1E4F223C8]);
  id v5 = sub_1A8CBE430(v1, v2, 0);
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1A8D59A80();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB5E9318);
  id v7 = v5;
  uint64_t v8 = sub_1A8D59A60();
  os_log_type_t v9 = sub_1A8D59ED0();
  if (!os_log_type_enabled(v8, v9))
  {

    if (!v5) {
      return v5 != 0;
    }
    goto LABEL_15;
  }
  uint64_t v10 = swift_slowAlloc();
  uint64_t v11 = swift_slowAlloc();
  uint64_t v15 = v11;
  *(_DWORD *)uint64_t v10 = 136315394;
  uint64_t v12 = 0xD000000000000012;
  unint64_t v13 = 0x80000001A8D640F0;
  switch(a1)
  {
    case 1:
      unint64_t v13 = 0x80000001A8D640D0;
      uint64_t v12 = 0xD000000000000011;
      break;
    case 2:
      uint64_t v12 = 0xD000000000000015;
      unint64_t v13 = 0x80000001A8D640B0;
      break;
    case 3:
      uint64_t v12 = 0x6C7070612E6D6F63;
      unint64_t v13 = 0xEE00707673722E65;
      break;
    default:
      break;
  }
  sub_1A8C90120(v12, v13, &v15);
  sub_1A8D59FE0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v10 + 12) = 1024;

  sub_1A8D59FE0();
  _os_log_impl(&dword_1A8C7F000, v8, v9, "App Installation for bundleIdentifier %s: %{BOOL}d", (uint8_t *)v10, 0x12u);
  swift_arrayDestroy();
  MEMORY[0x1AD0E6EB0](v11, -1, -1);
  MEMORY[0x1AD0E6EB0](v10, -1, -1);

  if (v5) {
LABEL_15:
  }

  return v5 != 0;
}

id sub_1A8CBE430(uint64_t a1, uint64_t a2, char a3)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  id v5 = (void *)sub_1A8D59BC0();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithBundleIdentifier_allowPlaceholder_error_, v5, a3 & 1, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_1A8D59550();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_1A8CBE50C()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v1 = (void *)sub_1A8D59BC0();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    *((void *)&v8 + 1) = sub_1A8C82BC8();
    os_log_type_t v9 = &off_1EFF56B50;
    *(void *)&long long v7 = v2;
  }
  else
  {
    os_log_type_t v9 = 0;
    long long v7 = 0u;
    long long v8 = 0u;
  }
  type metadata accessor for TicketCache();
  uint64_t v3 = swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v4 = swift_allocObject();
  id v5 = (_DWORD *)swift_slowAlloc();
  *(void *)(v4 + 16) = v5;
  *id v5 = 0;
  *(void *)(v3 + 56) = v4;
  uint64_t result = sub_1A8C83BCC((uint64_t)&v7, v3 + 16, &qword_1EB5EAD60);
  qword_1EB5E9818 = v3;
  return result;
}

uint64_t static TicketCache.shared.getter()
{
  if (qword_1EB5E9828 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t TicketCache.persistentDomain.getter()
{
  sub_1A8CBE710(v0 + 16, (uint64_t)v4);
  uint64_t v1 = v5;
  if (v5)
  {
    uint64_t v2 = v6;
    __swift_project_boxed_opaque_existential_1(v4, v5);
    uint64_t v1 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v2 + 64))(0xD000000000000030, 0x80000001A8D64110, v1, v2);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
  }
  else
  {
    sub_1A8C8DE74((uint64_t)v4, &qword_1EB5EAD60);
  }
  return v1;
}

uint64_t sub_1A8CBE710(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAD60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t TicketCache.allTickets(forDSID:)(uint64_t *a1, unint64_t a2)
{
  uint64_t v3 = v2;
  sub_1A8CBE710(v2 + 16, (uint64_t)v11);
  uint64_t v6 = v12;
  if (!v12)
  {
    sub_1A8C8DE74((uint64_t)v11, &qword_1EB5EAD60);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v7 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  uint64_t v8 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v7 + 64))(0xD000000000000030, 0x80000001A8D64110, v6, v7);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  if (!v8) {
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v9 = sub_1A8CBF8C8(v8, v3, a1, a2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v9;
}

id sub_1A8CBE888(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t a4)
{
  uint64_t v41 = a3;
  unint64_t v42 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9898);
  MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9890);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v11, v13);
  char v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v17);
  uint64_t v19 = (id *)((char *)&v40 - v18);
  uint64_t v20 = *(void *)(v4 + 56);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v20 + 16));
  sub_1A8CBEF24(a1, a2, (uint64_t)v10);
  uint64_t v21 = v19;
  uint64_t v22 = v41;
  unint64_t v23 = v42;
  uint64_t v40 = a1;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1A8C8DE74((uint64_t)v10, &qword_1EB5E9898);
    unint64_t v24 = a2;
    if (qword_1EB5EAB38 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1A8D59A80();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EB5EAB48);
    swift_bridgeObjectRetain_n();
    uint64_t v26 = sub_1A8D59A60();
    os_log_type_t v27 = sub_1A8D59F00();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v29 = v40;
    if (v28)
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      v44[0] = v31;
      *(_DWORD *)uint64_t v30 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_1A8C90120(v29, v24, v44);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v26, v27, "No ticket cache for featureID: %{public}s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v31, -1, -1);
      MEMORY[0x1AD0E6EB0](v30, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  sub_1A8C83BCC((uint64_t)v10, (uint64_t)v16, &qword_1EB5E9890);
  sub_1A8C83BCC((uint64_t)v16, (uint64_t)v21, &qword_1EB5E9890);
  if ((sub_1A8CEAB60(0, 0, v22, v23, 0) & 1) == 0)
  {
    unint64_t v33 = a2;
    if (qword_1EB5EAB38 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1A8D59A80();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EB5EAB48);
    swift_bridgeObjectRetain_n();
    uint64_t v35 = sub_1A8D59A60();
    os_log_type_t v36 = sub_1A8D59F00();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v44[0] = v38;
      *(_DWORD *)uint64_t v37 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_1A8C90120(v40, v33, v44);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v35, v36, "Ticket CacheBox is not valid for feature: %s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v38, -1, -1);
      MEMORY[0x1AD0E6EB0](v37, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_1A8C8DE74((uint64_t)v21, &qword_1EB5E9890);
    return 0;
  }
  id v32 = *v21;
  sub_1A8C8DE74((uint64_t)v21, &qword_1EB5E9890);
  return v32;
}

uint64_t sub_1A8CBEF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A8CBE710(v3 + 16, (uint64_t)v16);
  uint64_t v8 = v17;
  if (!v17)
  {
    sub_1A8C8DE74((uint64_t)v16, &qword_1EB5EAD60);
    goto LABEL_6;
  }
  uint64_t v9 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 32))(a1, a2, v8, v9);
  unint64_t v12 = v11;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  if (v12 >> 60 == 15)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9890);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
  sub_1A8D59500();
  swift_allocObject();
  sub_1A8D594F0();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9890);
  sub_1A8CBFB9C(&qword_1EB5E9778);
  sub_1A8D594E0();
  if (v4)
  {
    swift_release();
    return sub_1A8C93C84(v10, v12);
  }
  else
  {
    sub_1A8C93C84(v10, v12);
    swift_release();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a3, 0, 1, v13);
  }
}

void sub_1A8CBF104(uint64_t a1, unint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9890);
  sub_1A8CBFB9C((unint64_t *)&unk_1E979EA50);
  uint64_t v5 = sub_1A8D59510();
  unint64_t v7 = v6;
  uint64_t v8 = *(void *)(v2 + 56);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v8 + 16));
  sub_1A8CBE710(v2 + 16, (uint64_t)v18);
  uint64_t v9 = v19;
  if (v19)
  {
    uint64_t v10 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    v17[3] = MEMORY[0x1E4F277B8];
    v17[0] = v5;
    v17[1] = v7;
    unint64_t v11 = *(void (**)(void *, uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 8);
    sub_1A8CA17BC(v5, v7);
    v11(v17, a1, a2, v9, v10);
    sub_1A8C8DE74((uint64_t)v17, (uint64_t *)&unk_1EB5EA170);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  }
  else
  {
    sub_1A8C8DE74((uint64_t)v18, &qword_1EB5EAD60);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  if (qword_1EB5EAB38 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1A8D59A80();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB5EAB48);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1A8D59A60();
  os_log_type_t v14 = sub_1A8D59F00();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v18[0] = v16;
    *(_DWORD *)uint64_t v15 = 136446210;
    swift_bridgeObjectRetain();
    v17[0] = sub_1A8C90120(a1, a2, v18);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v13, v14, "Updating cache for ticket: %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v16, -1, -1);
    MEMORY[0x1AD0E6EB0](v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  sub_1A8C93C98(v5, v7);
}

void sub_1A8CBF5C8()
{
  uint64_t v1 = v0;
  if (qword_1EB5EAB38 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5EAB48);
  swift_retain_n();
  uint64_t v3 = sub_1A8D59A60();
  os_log_type_t v4 = sub_1A8D59F00();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v16 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_1A8CBE710(v0 + 16, (uint64_t)v13);
    uint64_t v7 = v14;
    if (v14)
    {
      uint64_t v8 = v15;
      __swift_project_boxed_opaque_existential_1(v13, v14);
      if ((*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v8 + 64))(0xD000000000000030, 0x80000001A8D64110, v7, v8))
      {
        uint64_t v9 = sub_1A8D59B40();
        unint64_t v11 = v10;
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
LABEL_11:
        v13[0] = sub_1A8C90120(v9, v11, &v16);
        sub_1A8D59FE0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A8C7F000, v3, v4, "Resetting ticket cache. Current domain is: %s", v5, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v6, -1, -1);
        MEMORY[0x1AD0E6EB0](v5, -1, -1);

        goto LABEL_12;
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
    }
    else
    {
      sub_1A8C8DE74((uint64_t)v13, &qword_1EB5EAD60);
    }
    unint64_t v11 = 0xE500000000000000;
    uint64_t v9 = 0x3E6C696E3CLL;
    goto LABEL_11;
  }

  swift_release_n();
LABEL_12:
  uint64_t v12 = *(void *)(v1 + 56);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 16));
  sub_1A8CBFBE4(v1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
}

uint64_t TicketCache.deinit()
{
  sub_1A8C8DE74(v0 + 16, &qword_1EB5EAD60);
  swift_release();
  return v0;
}

uint64_t TicketCache.__deallocating_deinit()
{
  sub_1A8C8DE74(v0 + 16, &qword_1EB5EAD60);
  swift_release();
  return MEMORY[0x1F4186488](v0, 64, 7);
}

uint64_t sub_1A8CBF8C8(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t a4)
{
  uint64_t v30 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
  if (!v9) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v11 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    swift_bridgeObjectRetain();
    id v17 = sub_1A8CBE888(v16, v15, a3, a4);
    if (v17)
    {
      id v21 = v17;
      uint64_t v22 = sub_1A8D59CD0();
      uint64_t v27 = v23;
      uint64_t v28 = v22;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1A8C9D670(0, v29[2] + 1, 1, v29);
        uint64_t v29 = (void *)result;
      }
      unint64_t v25 = v29[2];
      unint64_t v24 = v29[3];
      if (v25 >= v24 >> 1)
      {
        uint64_t result = (uint64_t)sub_1A8C9D670((void *)(v24 > 1), v25 + 1, 1, v29);
        uint64_t v29 = (void *)result;
      }
      _OWORD v29[2] = v25 + 1;
      uint64_t v26 = &v29[3 * v25];
      v26[4] = v28;
      v26[5] = v27;
      v26[6] = v21;
      if (v9) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      if (v9) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v31) {
      goto LABEL_29;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v31) {
        goto LABEL_29;
      }
      unint64_t v19 = *(void *)(v30 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v31) {
          goto LABEL_29;
        }
        unint64_t v19 = *(void *)(v30 + 8 * v11);
        if (!v19)
        {
          int64_t v11 = v18 + 3;
          if (v18 + 3 >= v31) {
            goto LABEL_29;
          }
          unint64_t v19 = *(void *)(v30 + 8 * v11);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v9 = (v19 - 1) & v19;
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v31)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v29;
  }
  unint64_t v19 = *(void *)(v30 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_29;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TicketCache()
{
  return self;
}

uint64_t method lookup function for TicketCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TicketCache);
}

uint64_t sub_1A8CBFB9C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB5E9890);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1A8CBFBE4(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  sub_1A8CBE710(a1 + 16, (uint64_t)v13);
  if (v14)
  {
    uint64_t v2 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    sub_1A8C90A64(MEMORY[0x1E4FBC860]);
    (*(void (**)(void))(v2 + 56))();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  }
  else
  {
    sub_1A8C8DE74((uint64_t)v13, &qword_1EB5EAD60);
  }
  if (qword_1EB5EAB38 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A8D59A80();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB5EAB48);
  swift_retain_n();
  os_log_type_t v4 = sub_1A8D59A60();
  os_log_type_t v5 = sub_1A8D59F00();
  if (!os_log_type_enabled(v4, v5))
  {

    swift_release_n();
    return;
  }
  uint64_t v6 = (uint8_t *)swift_slowAlloc();
  uint64_t v7 = swift_slowAlloc();
  uint64_t v16 = v7;
  *(_DWORD *)uint64_t v6 = 136315138;
  sub_1A8CBE710(v1, (uint64_t)v13);
  uint64_t v8 = v14;
  if (!v14)
  {
    sub_1A8C8DE74((uint64_t)v13, &qword_1EB5EAD60);
LABEL_13:
    unint64_t v12 = 0xE500000000000000;
    uint64_t v10 = 0x3E6C696E3CLL;
    goto LABEL_14;
  }
  uint64_t v9 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  if (!(*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v9 + 64))(0xD000000000000030, 0x80000001A8D64110, v8, v9))
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
    goto LABEL_13;
  }
  uint64_t v10 = sub_1A8D59B40();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
LABEL_14:
  v13[0] = sub_1A8C90120(v10, v12, &v16);
  sub_1A8D59FE0();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1A8C7F000, v4, v5, "Reset ticket cache. New domain is: %s", v6, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1AD0E6EB0](v7, -1, -1);
  MEMORY[0x1AD0E6EB0](v6, -1, -1);
}

uint64_t sub_1A8CBFEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[14] = a4;
  v5[15] = v4;
  v5[12] = a2;
  v5[13] = a3;
  v5[11] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  v5[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CBFF8C, 0, 0);
}

uint64_t sub_1A8CBFF8C()
{
  uint64_t v15 = v0;
  if (qword_1EB5EAB78 != -1) {
    swift_once();
  }
  uint64_t v1 = (uint64_t *)v0[11];
  unint64_t v2 = v0[12];
  v0[17] = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(0x6C6C2E64756F6C63, 0xE90000000000006DLL, v1, v2, 0, 1);
  v0[18] = FeatureCache.allFeatures(forDSID:ignoreTTL:)(v1, v2, 1);
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A8D59A80();
  v0[19] = __swift_project_value_buffer(v3, (uint64_t)qword_1EB5E9318);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1A8D59A60();
  os_log_type_t v5 = sub_1A8D59F00();
  BOOL v6 = os_log_type_enabled(v4, v5);
  unint64_t v7 = v0[14];
  if (v6)
  {
    uint64_t v8 = v0[13];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v14 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    swift_bridgeObjectRetain();
    v0[10] = sub_1A8C90120(v8, v7, &v14);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v4, v5, "[%{public}s]starting network fetch for all features", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v13 = (uint64_t (__cdecl *)())((char *)&dword_1E979E6E0 + dword_1E979E6E0);
  unint64_t v11 = (void *)swift_task_alloc();
  v0[20] = v11;
  *unint64_t v11 = v0;
  v11[1] = sub_1A8CC0248;
  return v13();
}

uint64_t sub_1A8CC0248(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 168) = a1;
  *(void *)(v3 + 176) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1A8CC07D4;
  }
  else {
    uint64_t v4 = sub_1A8CC035C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1A8CC035C()
{
  uint64_t v35 = v0;
  unint64_t v1 = v0[21];
  unint64_t v2 = v0[18];
  uint64_t v3 = v0[15];
  sub_1A8CEB6E4(v1, v0[11], v0[12]);
  sub_1A8CEA9EC();
  uint64_t v4 = (void *)(v3 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore);
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore + 24);
  uint64_t v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  unint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
  sub_1A8CEEB94((uint64_t)v7, v2, v1);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_1A8D59A60();
  os_log_type_t v9 = sub_1A8D59F00();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v11 = v0[13];
    unint64_t v10 = v0[14];
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v34 = v13;
    *(_DWORD *)unint64_t v12 = 136446210;
    swift_bridgeObjectRetain();
    v0[9] = sub_1A8C90120(v11, v10, &v34);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v8, v9, "[%{public}s]network fetch finished for all features", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v13, -1, -1);
    MEMORY[0x1AD0E6EB0](v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  unint64_t v14 = v0[21];
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1A8D5A1C0();
    if (!v15) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v15) {
      goto LABEL_13;
    }
  }
  uint64_t v16 = v0[21];
  unint64_t v17 = v14 & 0xC000000000000001;
  if ((v14 & 0xC000000000000001) != 0) {
    int64_t v18 = (char *)MEMORY[0x1AD0E6030](0, v16);
  }
  else {
    int64_t v18 = (char *)*(id *)(v16 + 32);
  }
  unint64_t v19 = v18;
  if (*(void *)&v18[OBJC_IVAR___CloudFeature_featureID] == 0x6C6C2E64756F6C63
    && *(void *)&v18[OBJC_IVAR___CloudFeature_featureID + 8] == 0xE90000000000006DLL
    || (sub_1A8D5A390() & 1) != 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }

  if (v15 == 1)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    unint64_t v19 = 0;
LABEL_14:
    v0[23] = v19;
    type metadata accessor for Assets();
    sub_1A8CF7E54(0xD000000000000026, 0x80000001A8D64320);
    uint64_t v23 = (void *)swift_task_alloc();
    v0[24] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1A8CC0848;
    uint64_t v24 = v0[15];
    v23[19] = v0[21];
    v23[20] = v24;
    uint64_t v20 = (uint64_t)sub_1A8CC11C8;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    return MEMORY[0x1F4188298](v20, v21, v22);
  }
  if (v17)
  {
    uint64_t v25 = 1;
    while (1)
    {
      uint64_t v20 = MEMORY[0x1AD0E6030](v25, v0[21]);
      uint64_t v26 = v25 + 1;
      if (__OFADD__(v25, 1)) {
        break;
      }
      unint64_t v19 = (char *)v20;
      BOOL v27 = *(void *)(v20 + OBJC_IVAR___CloudFeature_featureID) == 0x6C6C2E64756F6C63
         && *(void *)(v20 + OBJC_IVAR___CloudFeature_featureID + 8) == 0xE90000000000006DLL;
      if (v27 || (sub_1A8D5A390() & 1) != 0) {
        goto LABEL_11;
      }
      swift_unknownObjectRelease();
      ++v25;
      if (v26 == v15) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v28 = v0[21];
    uint64_t v29 = 5;
    while (1)
    {
      uint64_t v30 = v29 - 3;
      if (__OFADD__(v29 - 4, 1)) {
        break;
      }
      int64_t v31 = *(char **)(v28 + 8 * v29);
      BOOL v32 = *(void *)&v31[OBJC_IVAR___CloudFeature_featureID] == 0x6C6C2E64756F6C63
         && *(void *)&v31[OBJC_IVAR___CloudFeature_featureID + 8] == 0xE90000000000006DLL;
      if (v32 || (uint64_t v20 = sub_1A8D5A390(), (v20 & 1) != 0))
      {
        unint64_t v19 = v31;
        goto LABEL_11;
      }
      ++v29;
      if (v30 == v15) {
        goto LABEL_13;
      }
    }
  }
  __break(1u);
  return MEMORY[0x1F4188298](v20, v21, v22);
}

uint64_t sub_1A8CC07D4()
{
  unint64_t v1 = *(void **)(v0 + 136);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1A8CC0848()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8CC0944, 0, 0);
}

uint64_t sub_1A8CC0944()
{
  uint64_t v55 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_1A8D59A60();
  os_log_type_t v2 = sub_1A8D59F00();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = v0[13];
    unint64_t v3 = v0[14];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v54 = v6;
    *(_DWORD *)uint64_t v5 = 136446210;
    swift_bridgeObjectRetain();
    v0[8] = sub_1A8C90120(v4, v3, &v54);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v1, v2, "[%{public}s]Determining if user is eligible for CFU.", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v6, -1, -1);
    MEMORY[0x1AD0E6EB0](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  unint64_t v7 = (void *)v0[23];
  uint64_t v8 = (void *)v0[17];
  if (v7)
  {
    if (v8)
    {
      swift_bridgeObjectRetain_n();
      id v9 = v7;
      id v10 = v8;
      uint64_t v11 = sub_1A8D59A60();
      os_log_type_t v12 = sub_1A8D59F00();
      BOOL v13 = os_log_type_enabled(v11, v12);
      unint64_t v14 = v0[14];
      if (v13)
      {
        uint64_t v15 = v0[13];
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        id v52 = v10;
        uint64_t v17 = swift_slowAlloc();
        uint64_t v54 = v17;
        *(_DWORD *)uint64_t v16 = 136446210;
        swift_bridgeObjectRetain();
        v0[7] = sub_1A8C90120(v15, v14, &v54);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A8C7F000, v11, v12, "[%{public}s]User had old and new features, attempting to further check eligiblity.", v16, 0xCu);
        swift_arrayDestroy();
        uint64_t v18 = v17;
        id v10 = v52;
        MEMORY[0x1AD0E6EB0](v18, -1, -1);
        MEMORY[0x1AD0E6EB0](v16, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v35 = v0[16];
      uint64_t v37 = v0[13];
      uint64_t v36 = v0[14];
      uint64_t v38 = sub_1A8D59E10();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v35, 1, 1, v38);
      uint64_t v39 = (void *)swift_allocObject();
      v39[2] = 0;
      v39[3] = 0;
      v39[4] = v10;
      v39[5] = v9;
      v39[6] = v37;
      v39[7] = v36;
      swift_bridgeObjectRetain();
      sub_1A8C84960(v35, (uint64_t)&unk_1E979EB10, (uint64_t)v39);

      swift_release();
      goto LABEL_20;
    }
    id v28 = v7;
    swift_bridgeObjectRetain_n();
    id v20 = v28;
    uint64_t v21 = sub_1A8D59A60();
    os_log_type_t v29 = sub_1A8D59F00();
    if (os_log_type_enabled(v21, v29))
    {
      uint64_t v53 = v0[23];
      uint64_t v30 = v0[13];
      unint64_t v31 = v0[14];
      uint64_t v32 = swift_slowAlloc();
      unint64_t v33 = (void *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      uint64_t v54 = v51;
      *(_DWORD *)uint64_t v32 = 136446466;
      swift_bridgeObjectRetain();
      v0[5] = sub_1A8C90120(v30, v31, &v54);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 12) = 2114;
      v0[6] = v20;
      id v34 = v20;
      sub_1A8D59FE0();
      *unint64_t v33 = v53;

      _os_log_impl(&dword_1A8C7F000, v21, v29, "[%{public}s]User is not eligible for CFU because old feature object is nil. New object: %{public}@", (uint8_t *)v32, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v33, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v51, -1, -1);
      MEMORY[0x1AD0E6EB0](v32, -1, -1);

      goto LABEL_20;
    }
    goto LABEL_13;
  }
  if (v8)
  {
    id v19 = v8;
    swift_bridgeObjectRetain_n();
    id v20 = v19;
    uint64_t v21 = sub_1A8D59A60();
    os_log_type_t v22 = sub_1A8D59F00();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v50 = v0[17];
      uint64_t v24 = v0[13];
      unint64_t v23 = v0[14];
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t v54 = v49;
      *(_DWORD *)uint64_t v25 = 136446466;
      swift_bridgeObjectRetain();
      v0[3] = sub_1A8C90120(v24, v23, &v54);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 2114;
      v0[4] = v20;
      id v27 = v20;
      sub_1A8D59FE0();
      *uint64_t v26 = v50;

      _os_log_impl(&dword_1A8C7F000, v21, v22, "[%{public}s]User is not eligible for CFU because new feature object is nil. Old object: %{public}@", (uint8_t *)v25, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v26, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v49, -1, -1);
      MEMORY[0x1AD0E6EB0](v25, -1, -1);

      goto LABEL_20;
    }
LABEL_13:

LABEL_18:
    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v21 = sub_1A8D59A60();
  os_log_type_t v40 = sub_1A8D59F00();
  BOOL v41 = os_log_type_enabled(v21, v40);
  unint64_t v42 = v0[14];
  if (!v41) {
    goto LABEL_18;
  }
  uint64_t v43 = v0[13];
  long long v44 = (uint8_t *)swift_slowAlloc();
  uint64_t v45 = swift_slowAlloc();
  uint64_t v54 = v45;
  *(_DWORD *)long long v44 = 136446210;
  swift_bridgeObjectRetain();
  v0[2] = sub_1A8C90120(v43, v42, &v54);
  sub_1A8D59FE0();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_1A8C7F000, v21, v40, "[%{public}s]User is not eligible for CFU because old and new feature objects are nil.", v44, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1AD0E6EB0](v45, -1, -1);
  MEMORY[0x1AD0E6EB0](v44, -1, -1);
LABEL_19:

LABEL_20:
  swift_task_dealloc();
  uint64_t v46 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v47 = v0[21];
  return v46(v47);
}

uint64_t sub_1A8CC11A8(uint64_t a1)
{
  *(void *)(v2 + 152) = a1;
  *(void *)(v2 + 160) = v1;
  return MEMORY[0x1F4188298](sub_1A8CC11C8, 0, 0);
}

uint64_t sub_1A8CC11C8()
{
  unint64_t v1 = v0[19];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1A8D5A1C0();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (!v2) {
    goto LABEL_13;
  }
  uint64_t v3 = v0[19];
  unint64_t v4 = v1 & 0xC000000000000001;
  if ((v1 & 0xC000000000000001) != 0) {
    uint64_t v5 = (char *)MEMORY[0x1AD0E6030](0, v3);
  }
  else {
    uint64_t v5 = (char *)*(id *)(v3 + 32);
  }
  uint64_t v6 = v5;
  BOOL v7 = *(void *)&v5[OBJC_IVAR___CloudFeature_featureID] == 0x6C6C2E64756F6C63
    && *(void *)&v5[OBJC_IVAR___CloudFeature_featureID + 8] == 0xE90000000000006DLL;
  if (v7 || (sub_1A8D5A390() & 1) != 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }

  if (v2 == 1)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    uint64_t v9 = swift_task_alloc();
    uint64_t v10 = sub_1A8D596F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    id v11 = objc_allocWithZone((Class)type metadata accessor for CloudFeature());
    uint64_t v6 = (char *)sub_1A8CB79B4(0x6C6C2E64756F6C63, 0xE90000000000006DLL, 0, 0, 1, 0, 0, v9);
    swift_task_dealloc();
LABEL_14:
    v0[21] = v6;
    os_log_type_t v12 = self;
    id v13 = CloudFeature.cloudFeatureObject.getter();
    v0[22] = v13;
    v0[2] = v0;
    v0[7] = v0 + 18;
    v0[3] = sub_1A8CC1594;
    uint64_t v14 = swift_continuation_init();
    v0[10] = MEMORY[0x1E4F143A8];
    v0[11] = 0x40000000;
    v0[12] = sub_1A8CD9998;
    v0[13] = &block_descriptor;
    v0[14] = v14;
    objc_msgSend(v12, sel__currentAvailabilityWithFeatureObject_completionHandler_, v13, v0 + 10);
    uint64_t v8 = (uint64_t)(v0 + 2);
    return MEMORY[0x1F41881E8](v8);
  }
  if (v4)
  {
    uint64_t v15 = 1;
    while (1)
    {
      uint64_t v8 = MEMORY[0x1AD0E6030](v15, v0[19]);
      uint64_t v16 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        break;
      }
      uint64_t v6 = (char *)v8;
      BOOL v17 = *(void *)(v8 + OBJC_IVAR___CloudFeature_featureID) == 0x6C6C2E64756F6C63
         && *(void *)(v8 + OBJC_IVAR___CloudFeature_featureID + 8) == 0xE90000000000006DLL;
      if (v17 || (sub_1A8D5A390() & 1) != 0) {
        goto LABEL_11;
      }
      swift_unknownObjectRelease();
      ++v15;
      if (v16 == v2) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v18 = v0[19];
    uint64_t v19 = 5;
    while (1)
    {
      uint64_t v20 = v19 - 3;
      if (__OFADD__(v19 - 4, 1)) {
        break;
      }
      uint64_t v21 = *(char **)(v18 + 8 * v19);
      BOOL v22 = *(void *)&v21[OBJC_IVAR___CloudFeature_featureID] == 0x6C6C2E64756F6C63
         && *(void *)&v21[OBJC_IVAR___CloudFeature_featureID + 8] == 0xE90000000000006DLL;
      if (v22 || (uint64_t v8 = sub_1A8D5A390(), (v8 & 1) != 0))
      {
        uint64_t v6 = v21;
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      ++v19;
      if (v20 == v2) {
        goto LABEL_13;
      }
    }
  }
  __break(1u);
  return MEMORY[0x1F41881E8](v8);
}

uint64_t sub_1A8CC1594()
{
  return MEMORY[0x1F4188298](sub_1A8CC1674, 0, 0);
}

uint64_t sub_1A8CC1674()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[18];
  v0[23] = v3;

  uint64_t v4 = OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_availabilityClient;
  v0[24] = OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_availabilityClient;
  __swift_project_boxed_opaque_existential_1((void *)(v2 + v4), *(void *)(v2 + v4 + 24));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[25] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1A8CC1734;
  return sub_1A8CE2BC4(v3);
}

uint64_t sub_1A8CC1734()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8CC1830, 0, 0);
}

uint64_t sub_1A8CC1830()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = (void *)(v0[20] + v0[24]);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  uint64_t v3 = (char *)(v1 + OBJC_IVAR___CloudFeature_canUse);
  swift_beginAccess();
  char v4 = *v3;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1A8CC1910;
  return sub_1A8CE4670(v4);
}

uint64_t sub_1A8CC1910()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8CC1A0C, 0, 0);
}

uint64_t sub_1A8CC1A0C()
{
  uint64_t v1 = (void *)(v0[20] + v0[24]);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  unint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = sub_1A8CCDB98(v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1A8D41A98(v3);
  v0[27] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[28] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1A8CC1AFC;
  return sub_1A8CE3544(v4);
}

uint64_t sub_1A8CC1AFC()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1A8CC1C14, 0, 0);
}

uint64_t sub_1A8CC1C14()
{
  uint64_t v1 = *(void **)(v0 + 168);

  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1A8CC1C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[3] = a5;
  return MEMORY[0x1F4188298](sub_1A8CC1CA0, 0, 0);
}

uint64_t sub_1A8CC1CA0()
{
  uint64_t v15 = v0;
  uint64_t v1 = _s25CloudSubscriptionFeatures8FollowUpCACSgycfC_0();
  v0[6] = v1;
  if (v1)
  {
    unint64_t v2 = (void *)swift_task_alloc();
    v0[7] = v2;
    *unint64_t v2 = v0;
    v2[1] = sub_1A8CC1F14;
    uint64_t v3 = v0[3];
    return sub_1A8D310F8(v3);
  }
  else
  {
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1A8D59A80();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EB5E9318);
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_1A8D59A60();
    os_log_type_t v7 = sub_1A8D59EE0();
    BOOL v8 = os_log_type_enabled(v6, v7);
    unint64_t v9 = v0[5];
    if (v8)
    {
      uint64_t v10 = v0[4];
      id v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v14 = v12;
      *(_DWORD *)id v11 = 136446210;
      swift_bridgeObjectRetain();
      v0[2] = sub_1A8C90120(v10, v9, &v14);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v6, v7, "[%{public}s]No FollowUp able to be created. Will not post CFU.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v12, -1, -1);
      MEMORY[0x1AD0E6EB0](v11, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    id v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_1A8CC1F14(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  if (a1)
  {
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v3 + 64) = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_1A8CC208C;
    return sub_1A8D295D4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1A8CC2188, 0, 0);
  }
}

uint64_t sub_1A8CC208C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8CC2188, 0, 0);
}

uint64_t sub_1A8CC2188()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CC21E8()
{
  *(void *)(v0 + 448) = sub_1A8C83E20(0x75746165466C6C61, 0xEB00000000736572);
  return MEMORY[0x1F4188298](sub_1A8CC229C, 0, 0);
}

uint64_t sub_1A8CC229C()
{
  uint64_t v2 = *(void *)(v0 + 424);
  uint64_t v1 = *(void *)(v0 + 432);
  uint64_t v3 = *(void **)(v0 + 376);
  uint64_t v5 = *(void *)(v0 + 344);
  uint64_t v4 = *(void *)(v0 + 352);
  long long v11 = *(_OWORD *)(v0 + 328);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 456) = v6;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(_OWORD *)(v6 + 40) = v11;
  *(void *)(v6 + 56) = v5;
  *(void *)(v6 + 64) = v4;
  uint64_t v7 = dword_1E979F8D8;
  swift_bridgeObjectRetain();
  id v8 = v3;
  swift_bridgeObjectRetain();
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 464) = v9;
  *unint64_t v9 = v0;
  v9[1] = sub_1A8CC2410;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E979F8D8 + v7))(0x75746165466C6C61, 0xEB00000000736572, (uint64_t)&unk_1E979EC50, v6);
}

uint64_t sub_1A8CC2410(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 472) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    uint64_t v5 = sub_1A8CC2C14;
  }
  else
  {
    *(void *)(v4 + 480) = a1;
    uint64_t v5 = sub_1A8CC2580;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1A8CC2580()
{
  uint64_t v52 = v0;
  v51[1] = *MEMORY[0x1E4F143B8];
  unint64_t v1 = *(void *)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 368);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1A8CCDA54(v1, v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
    swift_bridgeObjectRelease();
    id v5 = v4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v6 = (char *)v5;
    uint64_t v7 = sub_1A8D59A60();
    os_log_type_t v8 = sub_1A8D59F00();
    BOOL v9 = os_log_type_enabled(v7, v8);
    unint64_t v10 = *(void *)(v0 + 368);
    if (v9)
    {
      uint64_t v11 = *(void *)(v0 + 352);
      uint64_t v44 = *(void *)(v0 + 360);
      os_log_type_t type = v8;
      uint64_t v13 = *(void *)(v0 + 336);
      uint64_t v12 = *(void *)(v0 + 344);
      uint64_t v14 = *(void *)(v0 + 328);
      uint64_t v50 = v4;
      uint64_t v15 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      v51[0] = v45;
      *(_DWORD *)uint64_t v15 = 136446722;
      swift_bridgeObjectRetain();
      uint64_t v16 = MEMORY[0x1AD0E5BA0](v14, v13, v12, v11);
      unint64_t v18 = v17;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 248) = sub_1A8C90120(v16, v18, v51);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 256) = sub_1A8C90120(v44, v10, v51);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 22) = 1026;
      uint64_t v19 = &v6[OBJC_IVAR___CloudFeature_canUse];
      swift_beginAccess();
      LODWORD(v19) = *v19;

      *(_DWORD *)(v0 + 488) = v19;
      sub_1A8D59FE0();

      _os_log_impl(&dword_1A8C7F000, v7, type, "[%{public}s] Feature %{public}s fetched. Can use: %{BOOL,public}d", (uint8_t *)v15, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v45, -1, -1);
      uint64_t v20 = v15;
      uint64_t v4 = v50;
      MEMORY[0x1AD0E6EB0](v20, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    id v21 = 0;
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    BOOL v22 = sub_1A8D59A60();
    os_log_type_t v23 = sub_1A8D59F00();
    BOOL v24 = os_log_type_enabled(v22, v23);
    unint64_t v25 = *(void *)(v0 + 368);
    if (v24)
    {
      uint64_t v26 = *(void *)(v0 + 352);
      uint64_t v46 = *(void *)(v0 + 360);
      uint64_t v28 = *(void *)(v0 + 336);
      uint64_t v27 = *(void *)(v0 + 344);
      uint64_t v29 = *(void *)(v0 + 328);
      uint64_t v30 = swift_slowAlloc();
      uint64_t typea = swift_slowAlloc();
      v51[0] = typea;
      *(_DWORD *)uint64_t v30 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v31 = MEMORY[0x1AD0E5BA0](v29, v28, v27, v26);
      unint64_t v33 = v32;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 232) = sub_1A8C90120(v31, v33, v51);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 240) = sub_1A8C90120(v46, v25, v51);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v22, v23, "[%{public}s] No value returned for feature %{public}s assuming unavailable and stubbing in cache to prevent excessive requests.", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](typea, -1, -1);
      MEMORY[0x1AD0E6EB0](v30, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    if (qword_1EB5EAB78 != -1) {
      swift_once();
    }
    uint64_t v34 = *(void *)(v0 + 432);
    uint64_t v49 = *(void *)(v0 + 424);
    uint64_t v36 = *(void *)(v0 + 360);
    uint64_t v35 = *(void *)(v0 + 368);
    uint64_t v37 = sub_1A8D596F0();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v39 = swift_task_alloc();
    uint64_t v40 = swift_task_alloc();
    sub_1A8D596E0();
    sub_1A8D59630();
    BOOL v41 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v41(v40, v37);
    swift_task_dealloc();
    sub_1A8CEE3B4(v36, v35, v39, v49, v34);
    swift_bridgeObjectRelease();
    v41(v39, v37);
    swift_task_dealloc();
    id v21 = sub_1A8CA6B90(4);
    uint64_t v6 = 0;
    uint64_t v4 = 0;
  }
  (*(void (**)(void *, id))(v0 + 384))(v4, v21);

  swift_release();
  swift_task_dealloc();
  unint64_t v42 = *(uint64_t (**)(void))(v0 + 8);
  return v42();
}

uint64_t sub_1A8CC2C14()
{
  uint64_t v99 = v0;
  v98[1] = *MEMORY[0x1E4F143B8];
  swift_release();
  unint64_t v1 = *(void **)(v0 + 472);
  *(void *)(v0 + 264) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 408);
    if (swift_getEnumCaseMultiPayload() == 2)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v4 = sub_1A8D59A60();
      os_log_type_t v5 = sub_1A8D59F00();
      BOOL v6 = os_log_type_enabled(v4, v5);
      unint64_t v7 = *(void *)(v0 + 368);
      if (v6)
      {
        uint64_t type = *(void *)(v0 + 360);
        uint64_t v9 = *(void *)(v0 + 344);
        uint64_t v8 = *(void *)(v0 + 352);
        uint64_t v10 = *(void *)(v0 + 328);
        uint64_t v11 = *(void *)(v0 + 336);
        uint64_t v12 = swift_slowAlloc();
        uint64_t v92 = swift_slowAlloc();
        v98[0] = v92;
        *(_DWORD *)uint64_t v12 = 136446466;
        swift_bridgeObjectRetain();
        uint64_t v13 = MEMORY[0x1AD0E5BA0](v10, v11, v9, v8);
        unint64_t v15 = v14;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 216) = sub_1A8C90120(v13, v15, v98);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v12 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 224) = sub_1A8C90120(type, v7, v98);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A8C7F000, v4, v5, "[%{public}s] Feature %{public}s received 204 network response", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v92, -1, -1);
        MEMORY[0x1AD0E6EB0](v12, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      uint64_t v65 = *(void (**)(id, void))(v0 + 384);
      uint64_t v67 = *(void *)(v0 + 360);
      uint64_t v66 = *(void *)(v0 + 368);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
      uint64_t v68 = swift_task_alloc();
      uint64_t v69 = sub_1A8D596F0();
      uint64_t v70 = *(void *)(v69 - 8);
      uint64_t v71 = swift_task_alloc();
      sub_1A8D596E0();
      sub_1A8D59630();
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v71, v69);
      swift_task_dealloc();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v68, 0, 1, v69);
      uint64_t v72 = swift_task_alloc();
      sub_1A8C8D028(v68, v72);
      id v73 = objc_allocWithZone((Class)type metadata accessor for CloudFeature());
      swift_bridgeObjectRetain();
      id v74 = sub_1A8CB79B4(v67, v66, 0, 0, 1, 0, 0, v72);
      swift_task_dealloc();
      sub_1A8C8DE74(v68, &qword_1EB5EACF0);
      swift_task_dealloc();
      v65(v74, 0);

      uint64_t v75 = *(void **)(v0 + 264);
      goto LABEL_32;
    }
    sub_1A8CCF62C(v3);
  }

  sub_1A8C8EB1C(0, (unint64_t *)&unk_1EB5EA8F0);
  swift_getErrorValue();
  uint64_t v16 = *(void *)(v0 + 72);
  uint64_t v17 = *(void *)(v0 + 80);
  id v18 = v1;
  id v19 = sub_1A8C90F38(v16, v17);
  id v20 = sub_1A8CA6B90(13);
  char v21 = sub_1A8D59FA0();

  if (v21)
  {
    if (qword_1EB5EAB78 != -1) {
      swift_once();
    }
    id v22 = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(*(void *)(v0 + 360), *(void *)(v0 + 368), *(uint64_t **)(v0 + 424), *(void *)(v0 + 432), 1, 1);
    swift_bridgeObjectRelease();
    if (v22)
    {
      swift_bridgeObjectRetain_n();
      id v23 = v22;
      BOOL v24 = sub_1A8D59A60();
      os_log_type_t v25 = sub_1A8D59EE0();
      BOOL v26 = os_log_type_enabled(v24, v25);
      uint64_t v27 = *(void *)(v0 + 352);
      if (v26)
      {
        os_log_t log = *(os_log_t *)(v0 + 344);
        uint64_t v82 = *(void *)(v0 + 336);
        uint64_t v28 = *(void *)(v0 + 328);
        os_log_type_t typea = v25;
        uint64_t v29 = swift_slowAlloc();
        os_log_type_t v88 = (void *)swift_slowAlloc();
        uint64_t v93 = swift_slowAlloc();
        v98[0] = v93;
        *(_DWORD *)uint64_t v29 = 136446466;
        swift_bridgeObjectRetain();
        uint64_t v30 = MEMORY[0x1AD0E5BA0](v28, v82, log, v27);
        os_log_t loga = v24;
        unint64_t v32 = v31;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 200) = sub_1A8C90120(v30, v32, v98);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v29 + 12) = 2114;
        *(void *)(v0 + 208) = v23;
        id v33 = v23;
        sub_1A8D59FE0();
        *os_log_type_t v88 = v22;

        _os_log_impl(&dword_1A8C7F000, loga, typea, "[%{public}s] FeatureRequest failed because we're missing auth header, falling back to cached feature %{public}@", (uint8_t *)v29, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v88, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v93, -1, -1);
        MEMORY[0x1AD0E6EB0](v29, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      v76 = *(void (**)(id, void))(v0 + 384);
      id v77 = v23;
      v76(v22, 0);

      goto LABEL_33;
    }
    uint64_t v61 = *(void (**)(void, id))(v0 + 384);
    swift_getErrorValue();
    uint64_t v62 = *(void *)(v0 + 48);
    uint64_t v63 = *(void *)(v0 + 56);
  }
  else
  {
    swift_bridgeObjectRetain();
    id v34 = v1;
    swift_bridgeObjectRetain();
    id v35 = v1;
    uint64_t v36 = sub_1A8D59A60();
    os_log_type_t v37 = sub_1A8D59EE0();
    BOOL v38 = os_log_type_enabled(v36, v37);
    uint64_t v39 = *(void *)(v0 + 352);
    if (v38)
    {
      os_log_type_t v96 = v37;
      uint64_t v41 = *(void *)(v0 + 336);
      uint64_t v40 = *(void *)(v0 + 344);
      uint64_t v42 = *(void *)(v0 + 328);
      uint64_t v43 = swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      v98[0] = v94;
      *(_DWORD *)uint64_t v43 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v44 = MEMORY[0x1AD0E5BA0](v42, v41, v40, v39);
      unint64_t v46 = v45;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 152) = sub_1A8C90120(v44, v46, v98);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v43 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v47 = sub_1A8D5A440();
      *(void *)(v0 + 176) = sub_1A8C90120(v47, v48, v98);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A8C7F000, v36, v96, "[%{public}s] FeatureRequest failed with error: %{public}s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v94, -1, -1);
      MEMORY[0x1AD0E6EB0](v43, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    if (*(unsigned char *)(v0 + 492))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1EB5EAB78 != -1) {
        swift_once();
      }
      id v49 = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(*(void *)(v0 + 360), *(void *)(v0 + 368), *(uint64_t **)(v0 + 424), *(void *)(v0 + 432), 1, 1);
      swift_bridgeObjectRelease();
      if (v49)
      {
        swift_bridgeObjectRetain_n();
        id v50 = v49;
        uint64_t v51 = sub_1A8D59A60();
        os_log_type_t v52 = sub_1A8D59F00();
        BOOL v53 = os_log_type_enabled(v51, v52);
        uint64_t v54 = *(void *)(v0 + 352);
        if (v53)
        {
          os_log_t logb = *(os_log_t *)(v0 + 344);
          uint64_t v83 = *(void *)(v0 + 336);
          uint64_t v55 = *(void *)(v0 + 328);
          os_log_type_t v95 = v52;
          uint64_t v56 = swift_slowAlloc();
          uint64_t v89 = (void *)swift_slowAlloc();
          uint64_t v97 = swift_slowAlloc();
          v98[0] = v97;
          *(_DWORD *)uint64_t v56 = 136446466;
          swift_bridgeObjectRetain();
          uint64_t v57 = MEMORY[0x1AD0E5BA0](v55, v83, logb, v54);
          os_log_t logc = v51;
          unint64_t v59 = v58;
          swift_bridgeObjectRelease();
          *(void *)(v0 + 136) = sub_1A8C90120(v57, v59, v98);
          sub_1A8D59FE0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v56 + 12) = 2114;
          *(void *)(v0 + 144) = v50;
          id v60 = v50;
          sub_1A8D59FE0();
          *uint64_t v89 = v49;

          _os_log_impl(&dword_1A8C7F000, logc, v95, "[%{public}s] Falling back to cached feature: %{public}@", (uint8_t *)v56, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
          swift_arrayDestroy();
          MEMORY[0x1AD0E6EB0](v89, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x1AD0E6EB0](v97, -1, -1);
          MEMORY[0x1AD0E6EB0](v56, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
        uint64_t v78 = *(void (**)(id, void))(v0 + 384);
        id v79 = v50;
        v78(v49, 0);

        goto LABEL_31;
      }
    }
    uint64_t v61 = *(void (**)(void, id))(v0 + 384);
    swift_getErrorValue();
    uint64_t v62 = *(void *)(v0 + 120);
    uint64_t v63 = *(void *)(v0 + 128);
  }
  id v64 = sub_1A8C90F38(v62, v63);
  v61(0, v64);

LABEL_31:
  uint64_t v75 = v1;
LABEL_32:

LABEL_33:
  swift_task_dealloc();
  id v80 = *(uint64_t (**)(void))(v0 + 8);
  return v80();
}

uint64_t sub_1A8CC38B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return MEMORY[0x1F4188298](sub_1A8CC38E0, 0, 0);
}

uint64_t sub_1A8CC38E0()
{
  uint64_t v1 = MEMORY[0x1AD0E5BA0](v0[6], v0[7], v0[8], v0[9]);
  uint64_t v3 = v2;
  v0[10] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[11] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1A8CC39A0;
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  return sub_1A8CBFEF0(v6, v5, v1, v3);
}

uint64_t sub_1A8CC39A0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1A8CC3AF4;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 104) = a1;
    uint64_t v5 = sub_1A8CC3AD0;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1A8CC3AD0()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 104);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A8CC3AF4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CC3B58()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  MEMORY[0x1F4188790](v2 - 8, v3);
  id v77 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A8D59720();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8D59710();
  uint64_t v10 = sub_1A8D59700();
  unint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v14 = sub_1A8C91D0C(8, v10, v12, v13);
  uint64_t v16 = v15;
  uint64_t v80 = v17;
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (qword_1EB5EAB40 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1A8D59A80();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EB5EAB60);
  swift_bridgeObjectRetain_n();
  char v21 = sub_1A8D59A60();
  os_log_type_t v22 = sub_1A8D59F00();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v75 = v16;
  uint64_t v76 = v14;
  if (v23)
  {
    BOOL v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v82 = v25;
    *(_DWORD *)BOOL v24 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v26 = MEMORY[0x1AD0E5BA0](v14, v16, v80, v19);
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v81 = sub_1A8C90120(v26, v28, &v82);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v21, v22, "[%s]Cache clear message received by ind!", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v25, -1, -1);
    MEMORY[0x1AD0E6EB0](v24, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v29 = &v1[OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore];
  uint64_t v30 = *(void *)&v1[OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore + 24];
  uint64_t v31 = *(void *)&v1[OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore + 32];
  __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore], v30);
  unint64_t v32 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 32))(v30, v31);
  if (v32
    && (id v33 = v32, v34 = objc_msgSend(v32, sel_aa_altDSID), v33, v34))
  {
    id v35 = (uint64_t *)sub_1A8D59BF0();
    unint64_t v37 = v36;

    if (qword_1EB5EAB78 != -1) {
      swift_once();
    }
    sub_1A8CEB80C(v35, v37);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1EB5EAB78 != -1) {
      swift_once();
    }
    sub_1A8CEB80C(0, 0);
  }
  uint64_t v38 = *((void *)v29 + 3);
  uint64_t v39 = *((void *)v29 + 4);
  __swift_project_boxed_opaque_existential_1(v29, v38);
  uint64_t v40 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 32))(v38, v39);
  id v79 = v1;
  uint64_t v74 = v19;
  if (v40
    && (uint64_t v41 = v40, v42 = objc_msgSend(v40, sel_aa_altDSID), v41, v42))
  {
    uint64_t v43 = sub_1A8D59BF0();
    uint64_t v45 = v44;
  }
  else
  {
    uint64_t v43 = 0;
    uint64_t v45 = 0;
  }
  id v46 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v47 = (void *)sub_1A8D59BC0();
  id v48 = objc_msgSend(v46, sel_initWithSuiteName_, v47);

  type metadata accessor for SystemProperties();
  swift_initStaticObject();
  id v49 = sub_1A8C8E620();
  uint64_t v51 = v50;
  type metadata accessor for WaitlistCache();
  os_log_type_t v52 = (void *)swift_allocObject();
  if (v48)
  {
    v52[2] = v48;
    v52[3] = v49;
    v52[4] = v51;
    v52[5] = v43;
    v52[6] = v45;
    sub_1A8CD302C();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  id v53 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v54 = (void *)sub_1A8D59BC0();
  id v55 = objc_msgSend(v53, sel_initWithSuiteName_, v54);

  id v56 = sub_1A8CEA284(v55);
  id v57 = sub_1A8CC4258();
  sub_1A8CEA388((uint64_t)v57, v58);

  swift_bridgeObjectRelease();
  unint64_t v59 = self;
  id v60 = objc_msgSend(v59, sel_sharedInstance);
  id v61 = objc_msgSend(v60, sel_controller);

  sub_1A8D37E08();
  id v62 = objc_msgSend(v59, sel_sharedInstance);
  id v63 = objc_msgSend(v62, sel_controller);

  sub_1A8CA2E04();
  uint64_t v64 = sub_1A8D59E10();
  uint64_t v65 = (uint64_t)v77;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v77, 1, 1, v64);
  uint64_t v66 = (void *)swift_allocObject();
  v66[2] = 0;
  v66[3] = 0;
  uint64_t v67 = v79;
  uint64_t v68 = v76;
  v66[4] = v79;
  v66[5] = v68;
  uint64_t v69 = v80;
  v66[6] = v75;
  v66[7] = v69;
  uint64_t v70 = ObjectType;
  v66[8] = v74;
  v66[9] = v70;
  id v71 = v67;
  sub_1A8C84960(v65, (uint64_t)&unk_1E979EAE8, (uint64_t)v66);
  return swift_release();
}

id sub_1A8CC4258()
{
  id result = objc_msgSend(self, sel_defaultStore);
  if (result)
  {
    uint64_t v1 = result;
    id v2 = objc_msgSend(result, sel_aa_primaryAppleAccount);

    if (v2)
    {
      id v3 = objc_msgSend(v2, sel_aa_altDSID);

      if (v3)
      {
        id v2 = (id)sub_1A8D59BF0();
      }
      else
      {
        return 0;
      }
    }
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A8CC4314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[8] = a4;
  return MEMORY[0x1F4188298](sub_1A8CC4340, 0, 0);
}

uint64_t sub_1A8CC4340()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_taskLimiters);
  *(void *)(v0 + 104) = v1;
  return MEMORY[0x1F4188298](sub_1A8CC436C, v1, 0);
}

uint64_t sub_1A8CC436C()
{
  *(void *)(v0 + 112) = sub_1A8C83E20(0x75746165466C6C61, 0xEB00000000736572);
  return MEMORY[0x1F4188298](sub_1A8CC43F4, 0, 0);
}

uint64_t sub_1A8CC43F4()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  long long v8 = *(_OWORD *)(v0 + 72);
  id v3 = *(void **)(v0 + 64);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 120) = v4;
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v8;
  *(void *)(v4 + 40) = v2;
  *(void *)(v4 + 48) = v1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E979F8D8 + dword_1E979F8D8);
  id v5 = v3;
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1A8CC4528;
  return v9(0x75746165466C6C61, 0xEB00000000736572, (uint64_t)&unk_1E979EAF8, v4);
}

uint64_t sub_1A8CC4528()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    uint64_t v2 = sub_1A8CC46CC;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1A8CC466C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CC466C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CC46CC()
{
  BOOL v24 = v0;
  swift_release();
  if (qword_1EB5EAB40 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5EAB60);
  swift_bridgeObjectRetain();
  id v3 = v1;
  swift_bridgeObjectRetain();
  id v4 = v1;
  id v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59F00();
  BOOL v7 = os_log_type_enabled(v5, v6);
  long long v8 = (void *)v0[17];
  uint64_t v9 = v0[12];
  if (v7)
  {
    uint64_t v11 = v0[10];
    uint64_t v10 = v0[11];
    uint64_t v12 = v0[9];
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = v22;
    *(_DWORD *)uint64_t v13 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v14 = MEMORY[0x1AD0E5BA0](v12, v11, v10, v9);
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    v0[5] = sub_1A8C90120(v14, v16, &v23);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v17 = sub_1A8D5A440();
    v0[7] = sub_1A8C90120(v17, v18, &v23);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, v5, v6, "[%s] Feature fetch after cache clear failed. Notifying clients. error: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v22, -1, -1);
    MEMORY[0x1AD0E6EB0](v13, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t v19 = (void *)v0[17];
  sub_1A8CEA9EC();

  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1A8CC499C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  _OWORD v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x1F4188298](sub_1A8CC49C4, 0, 0);
}

uint64_t sub_1A8CC49C4()
{
  uint64_t v1 = (void *)(v0[3] + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  id v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  if (v4 && (id v5 = v4, v6 = objc_msgSend(v4, sel_aa_altDSID), v5, v6))
  {
    uint64_t v7 = sub_1A8D59BF0();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  v0[8] = v9;
  uint64_t v10 = MEMORY[0x1AD0E5BA0](v0[4], v0[5], v0[6], v0[7]);
  uint64_t v12 = v11;
  v0[9] = v11;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[10] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1A8CC4B14;
  return sub_1A8CBFEF0(v7, v9, v10, v12);
}

uint64_t sub_1A8CC4B14(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v5 = sub_1A8CC4C70;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 96) = a1;
    swift_bridgeObjectRelease();
    id v5 = sub_1A8CC4C4C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1A8CC4C4C()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 96);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A8CC4C70()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CC4D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[16] = v10;
  v8[17] = v11;
  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[11] = a4;
  return MEMORY[0x1F4188298](sub_1A8C92EA4, 0, 0);
}

uint64_t sub_1A8CC4D5C()
{
  (*(void (**)(void, void))(v0 + 128))(*(unsigned __int8 *)(v0 + 184), 0);
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CC4DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t v8 = (uint64_t (__cdecl *)())((char *)&dword_1E979E7F8 + dword_1E979E7F8);
  id v6 = (void *)swift_task_alloc();
  v5[7] = v6;
  *id v6 = v5;
  v6[1] = sub_1A8C92FAC;
  return v8();
}

uint64_t sub_1A8CC4E80()
{
  char v1 = sub_1A8CF2CCC(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  if (qword_1EB5EAD00 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5EAC50);
  uint64_t v3 = sub_1A8D59A60();
  os_log_type_t v4 = sub_1A8D59F00();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v5 = 67240192;
    *(_DWORD *)(v0 + 72) = v1 & 1;
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v3, v4, "Returning eligibility %{BOOL,public}d from server", v5, 8u);
    MEMORY[0x1AD0E6EB0](v5, -1, -1);
  }

  **(unsigned char **)(v0 + 16) = v1 & 1;
  id v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

void sub_1A8CC4FF8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  if (qword_1EB5EAD00 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1A8D59A80();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EB5EAC50);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_1A8D59A60();
  os_log_type_t v18 = sub_1A8D59F00();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v23 = a8;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v26 = v20;
    *(_DWORD *)uint64_t v19 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A8C90120(a1, a2, &v26);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A8C90120(a3, a4, &v26);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v17, v18, "Requesting geoclassification for featureID %s and bundleID %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    uint64_t v21 = v20;
    a8 = v23;
    MEMORY[0x1AD0E6EB0](v21, -1, -1);
    MEMORY[0x1AD0E6EB0](v19, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  id v22 = sub_1A8C8E338();
  sub_1A8CCE090(a1, a2, a3, a4, a5, a6, a7 & 1, a8, a9, v24);
}

uint64_t sub_1A8CC5398(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 120) = v12;
  *(_OWORD *)(v8 + 104) = v11;
  *(_OWORD *)(v8 + 88) = v10;
  *(void *)(v8 + 72) = a7;
  *(void *)(v8 + 80) = a8;
  *(void *)(v8 + 56) = a5;
  *(void *)(v8 + 64) = a6;
  *(unsigned char *)(v8 + 176) = a4;
  return MEMORY[0x1F4188298](sub_1A8CC53D8, 0, 0);
}

uint64_t sub_1A8CC53D8()
{
  if ((*(unsigned char *)(v0 + 176) & 1) != 0
    || (char v1 = sub_1A8CE9D60(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void **)(*(void *)(v0 + 56)+ OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_geoCache))) == 0)
  {
    uint64_t v20 = *(void *)(*(void *)(v0 + 56)
                    + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_taskLimiters);
    *(void *)(v0 + 128) = v20;
    return MEMORY[0x1F4188298](sub_1A8CC57A0, v20, 0);
  }
  else
  {
    uint64_t v2 = v1;
    uint64_t v3 = sub_1A8D596F0();
    uint64_t v4 = *(void *)(v3 - 8);
    uint64_t v5 = swift_task_alloc();
    sub_1A8D596E0();
    char v6 = sub_1A8D59650();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
    swift_task_dealloc();
    if (v6)
    {
      uint64_t v8 = *(void *)(v0 + 96);
      uint64_t v7 = *(void *)(v0 + 104);
      id v9 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
      long long v10 = (void *)sub_1A8D59BC0();
      id v11 = objc_msgSend(v9, sel_initWithSuiteName_, v10);

      id v12 = sub_1A8CEA284(v11);
      sub_1A8CEA388(v8, v7);
    }
    if (qword_1EB5EAD00 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1A8D59A80();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EB5EAC50);
    id v14 = v2;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1A8D59A60();
    os_log_type_t v16 = sub_1A8D59F00();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 138412290;
      *(void *)(v0 + 48) = v14;
      os_log_t log = v15;
      os_log_type_t v18 = v2;
      id v19 = v14;
      sub_1A8D59FE0();
      void *v25 = v18;
      swift_bridgeObjectRelease();

      uint64_t v2 = v18;
      uint64_t v15 = log;
      _os_log_impl(&dword_1A8C7F000, log, v16, "serving geoclassification info from cache: %@", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v25, -1, -1);
      MEMORY[0x1AD0E6EB0](v17, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v21 = *(void (**)(void *, void))(v0 + 112);
    id v22 = v14;
    v21(v2, 0);
    swift_bridgeObjectRelease();

    uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
}

uint64_t sub_1A8CC57A0()
{
  *(void *)(v0 + 136) = sub_1A8C83E20(7300455, 0xE300000000000000);
  return MEMORY[0x1F4188298](sub_1A8CC5818, 0, 0);
}

uint64_t sub_1A8CC5818()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v4 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v6 = v0[8];
  uint64_t v5 = v0[9];
  uint64_t v7 = (void *)v0[7];
  uint64_t v8 = (void *)swift_allocObject();
  v0[18] = v8;
  v8[2] = v2;
  v8[3] = v1;
  v8[4] = v7;
  v8[5] = v6;
  v8[6] = v5;
  v8[7] = v4;
  v8[8] = v3;
  id v14 = (char *)&dword_1E979F988 + dword_1E979F988;
  swift_bridgeObjectRetain();
  id v9 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v10 = (void *)swift_task_alloc();
  v0[19] = v10;
  *long long v10 = v0;
  v10[1] = sub_1A8CC5954;
  uint64_t v12 = v0[8];
  uint64_t v11 = v0[9];
  return ((uint64_t (*)(uint64_t, uint64_t, void *, void *))v14)(v12, v11, &unk_1E979EC10, v8);
}

uint64_t sub_1A8CC5954(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 160) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    uint64_t v5 = sub_1A8CC5B3C;
  }
  else
  {
    *(void *)(v4 + 168) = a1;
    uint64_t v5 = sub_1A8CC5AA0;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1A8CC5AA0()
{
  uint64_t v1 = (void *)v0[21];
  uint64_t v2 = (void (*)(void *, void))v0[14];
  id v3 = v1;
  v2(v1, 0);

  swift_release();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1A8CC5B3C()
{
  uint64_t v1 = (void *)v0[20];
  uint64_t v2 = (void (*)(void, id))v0[14];
  swift_release();
  swift_getErrorValue();
  id v3 = sub_1A8C90F38(v0[3], v0[4]);
  v2(0, v3);

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1A8CC5BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[22] = a7;
  v8[23] = a8;
  v8[20] = a5;
  v8[21] = a6;
  v8[18] = a3;
  v8[19] = a4;
  v8[16] = a1;
  v8[17] = a2;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E7D0 + dword_1E979E7D0);
  uint64_t v11 = (void *)swift_task_alloc();
  v8[24] = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_1A8CC5CD0;
  return v13((uint64_t)(v8 + 2), a2, a3);
}

uint64_t sub_1A8CC5CD0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1A8CC5E04, 0, 0);
  }
}

uint64_t sub_1A8CC5E04()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 152) + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_geoCache);
  uint64_t v2 = *(void *)(v0 + 48);
  *(void *)(v0 + 120) = v2;
  id v3 = (_OWORD *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v6 = *(void *)(v0 + 176);
  unint64_t v5 = *(void *)(v0 + 184);
  uint64_t v8 = *(void *)(v0 + 160);
  unint64_t v7 = *(void *)(v0 + 168);
  sub_1A8CEA634(v2, *(void *)(v0 + 136), *(void *)(v0 + 144), v1);
  unint64_t v9 = sub_1A8CF32C4(v8, v7, v6, v5);
  if (v4)
  {
    *(_OWORD *)(v0 + 56) = *v3;
    sub_1A8CCFB3C(v0 + 56);
    *(_OWORD *)(v0 + 72) = *(_OWORD *)(v0 + 32);
    sub_1A8CCFB3C(v0 + 72);
    sub_1A8CCFB68(v0 + 120);
  }
  else
  {
    unint64_t v11 = v9;
    uint64_t v12 = *(unint64_t **)(v0 + 128);
    *(_OWORD *)(v0 + 88) = *v3;
    sub_1A8CCFB3C(v0 + 88);
    *(_OWORD *)(v0 + 104) = *(_OWORD *)(v0 + 32);
    sub_1A8CCFB3C(v0 + 104);
    sub_1A8CCFB68(v0 + 120);
    *uint64_t v12 = v11;
  }
  long long v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1A8CC5FA4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A8CC742C(a1, a2, a3, a4, "Fetching ticket %s", (uint64_t)&unk_1EFF564A0, (uint64_t)&unk_1E979EBE0);
}

uint64_t sub_1A8CC5FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[20] = a7;
  v8[21] = a8;
  v8[18] = a5;
  v8[19] = a6;
  v8[17] = a4;
  return MEMORY[0x1F4188298](sub_1A8CC5FF8, 0, 0);
}

uint64_t sub_1A8CC5FF8()
{
  uint64_t v31 = v0;
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  v0[22] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9318);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[18];
  if (v4)
  {
    uint64_t v6 = v0[17];
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v29 = v8;
    *(_DWORD *)unint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[16] = sub_1A8C90120(v6, v5, &v29);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Starting fetch for ticket %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  unint64_t v9 = (void *)(v0[19] + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore);
  uint64_t v10 = v9[3];
  uint64_t v11 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v10);
  uint64_t v12 = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  unint64_t v14 = v13;
  v0[23] = v12;
  v0[24] = v13;
  if (qword_1EB5E9828 != -1) {
    swift_once();
  }
  uint64_t v15 = (char *)sub_1A8CBE888(v0[17], v0[18], v12, v14);
  if (v15)
  {
    os_log_type_t v16 = v15;
    uint64_t v17 = *(void *)&v15[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket];
    uint64_t v18 = *(void *)&v15[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket + 8];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v18 = 0;
  }
  v0[25] = v17;
  v0[26] = v18;
  swift_bridgeObjectRetain_n();
  id v19 = sub_1A8D59A60();
  os_log_type_t v20 = sub_1A8D59F00();
  BOOL v21 = os_log_type_enabled(v19, v20);
  unint64_t v22 = v0[18];
  if (v21)
  {
    uint64_t v23 = v0[17];
    BOOL v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v29 = v25;
    *(_DWORD *)BOOL v24 = 136315138;
    swift_bridgeObjectRetain();
    v0[15] = sub_1A8C90120(v23, v22, &v29);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v19, v20, "No valid cache value for ticket %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v25, -1, -1);
    MEMORY[0x1AD0E6EB0](v24, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v26 = *(void *)(v0[19] + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_taskLimiters);
  v0[27] = v26;
  uint64_t v29 = 0x5F74656B636974;
  unint64_t v30 = 0xE700000000000000;
  sub_1A8D59CA0();
  unint64_t v27 = v30;
  v0[28] = v29;
  v0[29] = v27;
  return MEMORY[0x1F4188298](sub_1A8CC6428, v26, 0);
}

uint64_t sub_1A8CC6428()
{
  v0[30] = sub_1A8C83E20(v0[28], v0[29]);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1A8CC64A4, 0, 0);
}

uint64_t sub_1A8CC64A4()
{
  long long v8 = *(_OWORD *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  sub_1A8D59CA0();
  *(void *)(v0 + 248) = 0xE700000000000000;
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 256) = v5;
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *(_OWORD *)(v5 + 32) = v8;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v1;
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E979F968 + dword_1E979F968);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1A8CC6608;
  return v9(0x5F74656B636974, 0xE700000000000000, (uint64_t)&unk_1E979EBF0, v5);
}

uint64_t sub_1A8CC6608(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 272) = v1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_1A8CC6824;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 280) = a1;
    uint64_t v5 = sub_1A8CC6778;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1A8CC6778()
{
  uint64_t v1 = (char *)v0[35];
  uint64_t v2 = (void (*)(void *, void))v0[20];
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status];
  id v4 = v3;
  v2(v3, 0);

  swift_release();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1A8CC6824()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void **)(v0 + 272);
  swift_release();
  id v2 = v1;
  id v3 = v1;
  id v4 = sub_1A8D59A60();
  os_log_type_t v5 = sub_1A8D59EE0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 272);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v26 = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    swift_getErrorValue();
    uint64_t v9 = sub_1A8D5A440();
    *(void *)(v0 + 112) = sub_1A8C90120(v9, v10, &v26);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, v4, v5, "GetTicketStatus failed with error: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 272);
  }
  uint64_t v12 = (char *)sub_1A8CBE888(*(void *)(v0 + 136), *(void *)(v0 + 144), *(uint64_t **)(v0 + 184), *(void *)(v0 + 192));
  swift_bridgeObjectRelease();
  if (v12)
  {
    unint64_t v13 = sub_1A8D59A60();
    os_log_type_t v14 = sub_1A8D59F00();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_1A8C7F000, v13, v14, "Returning cached ticket status.", v15, 2u);
      MEMORY[0x1AD0E6EB0](v15, -1, -1);
    }
    os_log_type_t v16 = *(void **)(v0 + 272);
    uint64_t v17 = *(void (**)(void *, id))(v0 + 160);

    uint64_t v18 = *(void **)&v12[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status];
    swift_getErrorValue();
    uint64_t v19 = *(void *)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 80);
    id v21 = v18;
    id v22 = sub_1A8C90F38(v19, v20);
    v17(v18, v22);
  }
  else
  {
    os_log_type_t v16 = *(void **)(v0 + 272);
    uint64_t v23 = *(void (**)(void, char *))(v0 + 160);
    swift_getErrorValue();
    uint64_t v12 = (char *)sub_1A8C90F38(*(void *)(v0 + 48), *(void *)(v0 + 56));
    v23(0, v12);
  }

  BOOL v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_1A8CC6B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v7[5] = a2;
  v7[6] = a3;
  v7[4] = a1;
  v7[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9890);
  v7[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CC6BEC, 0, 0);
}

uint64_t sub_1A8CC6BEC()
{
  uint64_t v17 = v0;
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  v0[13] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9318);
  swift_bridgeObjectRetain_n();
  id v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[6];
  if (v4)
  {
    uint64_t v6 = v0[5];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[3] = sub_1A8C90120(v6, v5, &v16);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Starting network fetch for ticket %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E7C8 + dword_1E979E7C8);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[14] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1A8CC6E2C;
  uint64_t v10 = v0[7];
  uint64_t v11 = v0[8];
  uint64_t v13 = v0[5];
  uint64_t v12 = v0[6];
  return v15(v13, v12, v10, v11);
}

uint64_t sub_1A8CC6E2C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 120) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    BOOL v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1A8CC6F7C, 0, 0);
  }
}

uint64_t sub_1A8CC6F7C()
{
  uint64_t v23 = v0;
  if (qword_1EB5E9828 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 120);
  id v2 = *(void **)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v3 = *(int **)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v7 = *(void *)(v0 + 40);
  unint64_t v6 = *(void *)(v0 + 48);
  sub_1A8D59530();
  swift_allocObject();
  sub_1A8D59520();
  uint64_t v8 = (char *)v2 + v3[11];
  uint64_t v9 = sub_1A8D596F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  swift_bridgeObjectRetain();
  id v10 = v1;
  sub_1A8D596D0();
  *id v2 = v10;
  uint64_t v11 = (void *)((char *)v2 + v3[13]);
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = (void *)((char *)v2 + v3[14]);
  *uint64_t v12 = v5;
  v12[1] = v4;
  sub_1A8CBF104(v7, v6);
  sub_1A8C8DE74((uint64_t)v2, &qword_1EB5E9890);
  swift_release();
  type metadata accessor for Assets();
  sub_1A8CF7E54(0xD000000000000025, 0x80000001A8D643D0);
  sub_1A8CEAA00();
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1A8D59A60();
  os_log_type_t v14 = sub_1A8D59F00();
  BOOL v15 = os_log_type_enabled(v13, v14);
  unint64_t v16 = *(void *)(v0 + 48);
  if (v15)
  {
    uint64_t v17 = *(void *)(v0 + 40);
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v22 = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 16) = sub_1A8C90120(v17, v16, &v22);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v13, v14, "Network fetch finished for %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v19, -1, -1);
    MEMORY[0x1AD0E6EB0](v18, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  **(void **)(v0 + 32) = *(void *)(v0 + 120);
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_1A8CC7404(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A8CC742C(a1, a2, a3, a4, "Getting or fetching ticket %s", (uint64_t)&unk_1EFF56428, (uint64_t)&unk_1E979EBC0);
}

uint64_t sub_1A8CC742C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6, uint64_t a7)
{
  id v35 = a5;
  id v10 = v7;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  MEMORY[0x1F4188790](v16 - 8, v17);
  unint64_t v37 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1A8D59A80();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EB5E9318);
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_1A8D59A60();
  os_log_type_t v21 = sub_1A8D59F00();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v34 = a3;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v32 = a6;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v36 = a1;
    uint64_t v25 = v24;
    uint64_t v39 = v24;
    uint64_t v33 = ObjectType;
    *(_DWORD *)uint64_t v23 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1A8C90120(v36, a2, &v39);
    uint64_t ObjectType = v33;
    a3 = v34;
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v20, v21, v35, v23, 0xCu);
    swift_arrayDestroy();
    uint64_t v26 = v25;
    a1 = v36;
    MEMORY[0x1AD0E6EB0](v26, -1, -1);
    MEMORY[0x1AD0E6EB0](v23, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v27 = sub_1A8D59E10();
  uint64_t v28 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v37, 1, 1, v27);
  uint64_t v29 = (void *)swift_allocObject();
  _OWORD v29[2] = 0;
  v29[3] = 0;
  v29[4] = a1;
  v29[5] = a2;
  v29[6] = v10;
  v29[7] = a3;
  v29[8] = a4;
  v29[9] = ObjectType;
  swift_bridgeObjectRetain();
  id v30 = v10;
  swift_retain();
  sub_1A8C84960(v28, a7, (uint64_t)v29);
  return swift_release();
}

uint64_t sub_1A8CC7708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[16] = a4;
  v8[21] = type metadata accessor for InternalError();
  v8[22] = swift_task_alloc();
  v8[23] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CC77B8, 0, 0);
}

uint64_t sub_1A8CC77B8()
{
  id v35 = v0;
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  v0[24] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9318);
  swift_bridgeObjectRetain_n();
  id v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[17];
  if (v4)
  {
    uint64_t v6 = v0[16];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v33 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[15] = sub_1A8C90120(v6, v5, &v33);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Starting request for ticket %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v9 = (void *)(v0[18] + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore);
  uint64_t v10 = v9[3];
  uint64_t v11 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v10);
  uint64_t v12 = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  unint64_t v14 = v13;
  v0[25] = v12;
  v0[26] = v13;
  if (qword_1EB5E9828 != -1) {
    swift_once();
  }
  id v15 = sub_1A8CBE888(v0[16], v0[17], v12, v14);
  if (v15)
  {
    id v16 = v15;
    id v17 = v15;
    uint64_t v18 = sub_1A8D59A60();
    os_log_type_t v19 = sub_1A8D59EE0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v21 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138412290;
      v0[14] = v17;
      id v22 = v17;
      sub_1A8D59FE0();
      *os_log_type_t v21 = v16;

      _os_log_impl(&dword_1A8C7F000, v18, v19, "There already is a cached ticket when calling getTicket: %@", v20, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v21, -1, -1);
      MEMORY[0x1AD0E6EB0](v20, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_1A8D59A60();
    os_log_type_t v24 = sub_1A8D59F00();
    BOOL v25 = os_log_type_enabled(v23, v24);
    unint64_t v26 = v0[17];
    if (v25)
    {
      uint64_t v27 = v0[16];
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v33 = v29;
      *(_DWORD *)uint64_t v28 = 136315138;
      swift_bridgeObjectRetain();
      v0[13] = sub_1A8C90120(v27, v26, &v33);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v23, v24, "No valid cache value for ticket %s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v29, -1, -1);
      MEMORY[0x1AD0E6EB0](v28, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  uint64_t v30 = *(void *)(v0[18] + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_taskLimiters);
  v0[27] = v30;
  uint64_t v33 = 0x656B636954746567;
  unint64_t v34 = 0xEA00000000005F74;
  sub_1A8D59CA0();
  unint64_t v31 = v34;
  v0[28] = v33;
  v0[29] = v31;
  return MEMORY[0x1F4188298](sub_1A8CC7CE4, v30, 0);
}

uint64_t sub_1A8CC7CE4()
{
  v0[30] = sub_1A8C83E20(v0[28], v0[29]);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1A8CC7D60, 0, 0);
}

uint64_t sub_1A8CC7D60()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[17];
  BOOL v4 = (void *)v0[18];
  uint64_t v5 = v0[16];
  sub_1A8D59CA0();
  v0[31] = 0xEA00000000005F74;
  uint64_t v6 = (void *)swift_allocObject();
  v0[32] = v6;
  _OWORD v6[2] = v5;
  v6[3] = v3;
  v6[4] = v2;
  v6[5] = v1;
  v6[6] = v4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E979F968 + dword_1E979F968);
  swift_bridgeObjectRetain();
  id v7 = v4;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[33] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1A8CC7EBC;
  return v10(0x656B636954746567, 0xEA00000000005F74, (uint64_t)&unk_1E979EBD0, (uint64_t)v6);
}

uint64_t sub_1A8CC7EBC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 272) = v1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_1A8CC80D0;
  }
  else
  {
    *(void *)(v4 + 280) = a1;
    uint64_t v5 = sub_1A8CC8024;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1A8CC8024()
{
  uint64_t v1 = (void *)v0[35];
  uint64_t v2 = (void (*)(void *, void))v0[19];
  id v3 = v1;
  v2(v1, 0);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1A8CC80D0()
{
  uint64_t v32 = v0;
  uint64_t v1 = *(void **)(v0 + 272);
  swift_release();
  *(void *)(v0 + 80) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    uint64_t v11 = *(void **)(v0 + 272);

    id v12 = v11;
    id v13 = v11;
    unint64_t v14 = sub_1A8D59A60();
    os_log_type_t v15 = sub_1A8D59EE0();
    BOOL v16 = os_log_type_enabled(v14, v15);
    id v17 = *(void **)(v0 + 272);
    if (v16)
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v31 = v19;
      *(_DWORD *)uint64_t v18 = 136446210;
      swift_getErrorValue();
      uint64_t v20 = sub_1A8D5A440();
      *(void *)(v0 + 88) = sub_1A8C90120(v20, v21, &v31);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A8C7F000, v14, v15, "GetTicket failed with error: %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v19, -1, -1);
      MEMORY[0x1AD0E6EB0](v18, -1, -1);
    }
    else
    {
    }
    id v22 = *(void **)(v0 + 272);
    uint64_t v23 = *(void (**)(void, id))(v0 + 152);
    swift_getErrorValue();
    id v24 = sub_1A8C90F38(*(void *)(v0 + 48), *(void *)(v0 + 56));
    v23(0, v24);

    BOOL v25 = v22;
    goto LABEL_12;
  }
  uint64_t v3 = *(void *)(v0 + 176);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1A8CCF62C(v3);
    goto LABEL_6;
  }

  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1A8D59A60();
  os_log_type_t v5 = sub_1A8D59F00();
  BOOL v6 = os_log_type_enabled(v4, v5);
  unint64_t v7 = *(void *)(v0 + 136);
  if (v6)
  {
    uint64_t v8 = *(void *)(v0 + 128);
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v31 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 96) = sub_1A8C90120(v8, v7, &v31);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v4, v5, "Ticket %s received 204 network response", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v26 = *(void *)(v0 + 184);
  uint64_t v27 = *(void (**)(void, id))(v0 + 152);
  swift_storeEnumTagMultiPayload();
  id v28 = sub_1A8CA6D74();
  sub_1A8CCF62C(v26);
  v27(0, v28);

  BOOL v25 = *(void **)(v0 + 80);
LABEL_12:

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_1A8CC84F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[23] = a5;
  v6[24] = a6;
  v6[21] = a3;
  v6[22] = a4;
  v6[19] = a1;
  v6[20] = a2;
  v6[25] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9890);
  v6[26] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CC8590, 0, 0);
}

uint64_t sub_1A8CC8590()
{
  os_log_type_t v15 = v0;
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  v0[27] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9318);
  swift_bridgeObjectRetain_n();
  id v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[21];
  if (v4)
  {
    uint64_t v6 = v0[20];
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)unint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[18] = sub_1A8C90120(v6, v5, &v14);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Starting network fetch for ticket %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E979E7A0 + dword_1E979E7A0);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[28] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1A8CC87D0;
  uint64_t v11 = v0[20];
  uint64_t v10 = v0[21];
  return v13(v11, v10);
}

uint64_t sub_1A8CC87D0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 232) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    BOOL v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1A8CC8920, 0, 0);
  }
}

uint64_t sub_1A8CC8920()
{
  if (qword_1EB5E9828 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[29];
  id v2 = (void *)v0[26];
  uint64_t v3 = (int *)v0[25];
  uint64_t v4 = v0[22];
  uint64_t v5 = v0[23];
  uint64_t v6 = v0[20];
  unint64_t v18 = v0[21];
  sub_1A8D59530();
  swift_allocObject();
  sub_1A8D59520();
  unint64_t v7 = (char *)v2 + v3[11];
  uint64_t v8 = sub_1A8D596F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  swift_bridgeObjectRetain();
  id v9 = v1;
  sub_1A8D596D0();
  *id v2 = v9;
  uint64_t v10 = (void *)((char *)v2 + v3[13]);
  *uint64_t v10 = 0;
  v10[1] = 0;
  uint64_t v11 = (void *)((char *)v2 + v3[14]);
  *uint64_t v11 = v4;
  v11[1] = v5;
  sub_1A8CBF104(v6, v18);
  sub_1A8C8DE74((uint64_t)v2, &qword_1EB5E9890);
  swift_release();
  type metadata accessor for Assets();
  sub_1A8CF7E54(0xD00000000000001FLL, 0x80000001A8D64390);
  sub_1A8CEAA00();
  id v12 = sub_1A8D59A60();
  os_log_type_t v13 = sub_1A8D59F00();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_1A8C7F000, v12, v13, "Attempting to get primary apple account", v14, 2u);
    MEMORY[0x1AD0E6EB0](v14, -1, -1);
  }

  id v15 = sub_1A8C8E338();
  v0[30] = v15;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1A8CC8BFC;
  uint64_t v16 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A8CF80E0;
  v0[13] = &block_descriptor_95;
  v0[14] = v16;
  objc_msgSend(v15, sel_aa_primaryAppleAccountWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A8CC8BFC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 248) = v1;
  if (v1) {
    id v2 = sub_1A8CC90AC;
  }
  else {
    id v2 = sub_1A8CC8D0C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

id sub_1A8CC8D0C()
{
  uint64_t v24 = v0;
  uint64_t v1 = *(void **)(v0 + 120);

  id v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  BOOL v4 = os_log_type_enabled(v2, v3);
  if (v1)
  {
    if (v4)
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_1A8C7F000, v2, v3, "There is an account, not registering", v5, 2u);
      MEMORY[0x1AD0E6EB0](v5, -1, -1);
    }
  }
  else
  {
    if (v4)
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1A8C7F000, v2, v3, "There is no account, registering.", v6, 2u);
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
    }

    objc_msgSend(self, sel_registerForLoggedOutPushNotifications);
  }
  swift_bridgeObjectRetain_n();
  unint64_t v7 = sub_1A8D59A60();
  os_log_type_t v8 = sub_1A8D59F00();
  BOOL v9 = os_log_type_enabled(v7, v8);
  unint64_t v10 = *(void *)(v0 + 168);
  if (v9)
  {
    uint64_t v11 = *(void *)(v0 + 160);
    id v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = v13;
    *(_DWORD *)id v12 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 128) = sub_1A8C90120(v11, v10, &v23);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v7, v8, "Network fetch finished for %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v13, -1, -1);
    MEMORY[0x1AD0E6EB0](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v14 = *(void **)(*(void *)(v0 + 232) + OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status);
  objc_allocWithZone((Class)type metadata accessor for TicketStatus());
  id v15 = v14;
  id result = TicketStatus.init(rawValue:)(0x657669746361, 0xE600000000000000);
  if (result)
  {
    id v17 = result;
    char v18 = sub_1A8D59FA0();

    if ((v18 & 1) != 0 && os_variant_has_internal_ui())
    {
      uint64_t v19 = sub_1A8D59A60();
      os_log_type_t v20 = sub_1A8D59F00();
      if (os_log_type_enabled(v19, v20))
      {
        unint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v21 = 0;
        _os_log_impl(&dword_1A8C7F000, v19, v20, "Ticket is active & internal build detected, clearing cache & notifying", v21, 2u);
        MEMORY[0x1AD0E6EB0](v21, -1, -1);
      }

      sub_1A8CC3B58();
    }
    **(void **)(v0 + 152) = *(void *)(v0 + 232);
    swift_task_dealloc();
    id v22 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v22();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1A8CC90AC()
{
  uint64_t v30 = v0;
  id v2 = *(void **)(v0 + 240);
  uint64_t v1 = *(void **)(v0 + 248);
  swift_willThrow();

  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59F00();
  if (os_log_type_enabled(v5, v6))
  {
    unint64_t v7 = *(void **)(v0 + 248);
    os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
    BOOL v9 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v8 = 138412290;
    id v10 = v7;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 136) = v11;
    sub_1A8D59FE0();
    *BOOL v9 = v11;

    _os_log_impl(&dword_1A8C7F000, v5, v6, "Unable to get primary apple account: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
  }
  else
  {
    id v12 = *(void **)(v0 + 248);
  }
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1A8D59A60();
  os_log_type_t v14 = sub_1A8D59F00();
  BOOL v15 = os_log_type_enabled(v13, v14);
  unint64_t v16 = *(void *)(v0 + 168);
  if (v15)
  {
    uint64_t v17 = *(void *)(v0 + 160);
    char v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v29 = v19;
    *(_DWORD *)char v18 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 128) = sub_1A8C90120(v17, v16, &v29);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v13, v14, "Network fetch finished for %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v19, -1, -1);
    MEMORY[0x1AD0E6EB0](v18, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  os_log_type_t v20 = *(void **)(*(void *)(v0 + 232) + OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status);
  objc_allocWithZone((Class)type metadata accessor for TicketStatus());
  id v21 = v20;
  id result = TicketStatus.init(rawValue:)(0x657669746361, 0xE600000000000000);
  if (result)
  {
    uint64_t v23 = result;
    char v24 = sub_1A8D59FA0();

    if ((v24 & 1) != 0 && os_variant_has_internal_ui())
    {
      uint64_t v25 = sub_1A8D59A60();
      os_log_type_t v26 = sub_1A8D59F00();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v27 = 0;
        _os_log_impl(&dword_1A8C7F000, v25, v26, "Ticket is active & internal build detected, clearing cache & notifying", v27, 2u);
        MEMORY[0x1AD0E6EB0](v27, -1, -1);
      }

      sub_1A8CC3B58();
    }
    **(void **)(v0 + 152) = *(void *)(v0 + 232);
    swift_task_dealloc();
    id v28 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v28();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A8CC9694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _OWORD v6[2] = a5;
  v6[3] = a6;
  unint64_t v7 = (void *)swift_task_alloc();
  v6[4] = v7;
  *unint64_t v7 = v6;
  v7[1] = sub_1A8CC9728;
  return sub_1A8D28C58();
}

uint64_t sub_1A8CC9728(char a1)
{
  *(unsigned char *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8CCFDB0, 0, 0);
}

uint64_t sub_1A8CC9828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _OWORD v6[2] = a5;
  v6[3] = a6;
  unint64_t v7 = (void *)swift_task_alloc();
  v6[4] = v7;
  *unint64_t v7 = v6;
  v7[1] = sub_1A8CC98BC;
  return sub_1A8D2A36C();
}

uint64_t sub_1A8CC98BC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8CC99BC, 0, 0);
}

uint64_t sub_1A8CC99BC()
{
  (*(void (**)(void, void))(v0 + 16))(*(unsigned __int8 *)(v0 + 40), 0);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CC9A40(void *a1, int a2, int a3, void *aBlock, void (*a5)(uint64_t, uint64_t, void *))
{
  unint64_t v7 = _Block_copy(aBlock);
  uint64_t v8 = sub_1A8D59BF0();
  uint64_t v10 = v9;
  _Block_copy(v7);
  id v11 = a1;
  a5(v8, v10, v7);
  _Block_release(v7);
  _Block_release(v7);

  return swift_bridgeObjectRelease();
}

void sub_1A8CC9AE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s25CloudSubscriptionFeatures8FollowUpCACSgycfC_0();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = os_transaction_create();
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1A8D59A80();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB5E97D0);
    uint64_t v10 = sub_1A8D59A60();
    os_log_type_t v11 = sub_1A8D59F00();
    if (os_log_type_enabled(v10, v11))
    {
      id v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v12 = 0;
      _os_log_impl(&dword_1A8C7F000, v10, v11, "revalidating GM feature and CFU", v12, 2u);
      MEMORY[0x1AD0E6EB0](v12, -1, -1);
    }

    uint64_t v13 = sub_1A8D59E10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
    os_log_type_t v14 = (void *)swift_allocObject();
    v14[2] = 0;
    void v14[3] = 0;
    v14[4] = v1;
    v14[5] = v7;
    v14[6] = v8;
    id v15 = v1;
    sub_1A8C84960((uint64_t)v5, (uint64_t)&unk_1E979EB90, (uint64_t)v14);
    swift_release();
  }
  else
  {
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1A8D59A80();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EB5E97D0);
    os_log_t v21 = (os_log_t)sub_1A8D59A60();
    os_log_type_t v17 = sub_1A8D59EE0();
    if (os_log_type_enabled(v21, v17))
    {
      char v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v18 = 0;
      _os_log_impl(&dword_1A8C7F000, v21, v17, "Unable to create FollowUp Controller", v18, 2u);
      MEMORY[0x1AD0E6EB0](v18, -1, -1);
    }
    os_log_t v19 = v21;
  }
}

uint64_t sub_1A8CC9DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 32) = a5;
  return MEMORY[0x1F4188298](sub_1A8CC9DC4, 0, 0);
}

uint64_t sub_1A8CC9DC4()
{
  uint64_t v32 = v0;
  uint64_t v1 = v0;
  if (qword_1EB5E97F0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5E97D0);
  uint64_t v3 = sub_1A8D59A60();
  os_log_type_t v4 = sub_1A8D59ED0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1A8C7F000, v3, v4, "Task started getting account", v5, 2u);
    MEMORY[0x1AD0E6EB0](v5, -1, -1);
  }
  uint64_t v6 = v0[3];

  uint64_t v7 = *(void *)(v6 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore + 24);
  uint64_t v8 = *(void *)(v6 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v6 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore), v7);
  uint64_t v9 = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  unint64_t v11 = v10;
  swift_bridgeObjectRetain_n();
  id v12 = sub_1A8D59A60();
  os_log_type_t v13 = sub_1A8D59ED0();
  if (os_log_type_enabled(v12, v13))
  {
    id v28 = v0 + 2;
    os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v30 = v0;
    *(_DWORD *)os_log_type_t v14 = 136315138;
    v31[0] = v29;
    if (v11) {
      uint64_t v15 = (uint64_t)v9;
    }
    else {
      uint64_t v15 = 0;
    }
    uint64_t v16 = v9;
    if (v11) {
      unint64_t v17 = v11;
    }
    else {
      unint64_t v17 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    *id v28 = sub_1A8C90120(v15, v17, v31);
    uint64_t v1 = v30;
    sub_1A8D59FE0();
    uint64_t v9 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v12, v13, "Account retrieved %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v29, -1, -1);
    MEMORY[0x1AD0E6EB0](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  type metadata accessor for AvailabilityManager();
  swift_initStaticObject();
  sub_1A8CDA18C((uint64_t)v31);
  int v18 = LOBYTE(v31[0]);
  swift_bridgeObjectRelease();
  if (v18 == 1)
  {
    if (qword_1EB5EAB78 != -1) {
      swift_once();
    }
    v1[5] = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(0x6C6C2E64756F6C63, 0xE90000000000006DLL, v9, v11, 0, 1);
    swift_bridgeObjectRelease();
    os_log_t v19 = sub_1A8D59A60();
    os_log_type_t v20 = sub_1A8D59F00();
    if (os_log_type_enabled(v19, v20))
    {
      os_log_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_t v21 = 0;
      _os_log_impl(&dword_1A8C7F000, v19, v20, "Preconditions met, Checking if CFU should be posted", v21, 2u);
      MEMORY[0x1AD0E6EB0](v21, -1, -1);
    }

    id v22 = (void *)swift_task_alloc();
    v1[6] = v22;
    void *v22 = v1;
    v22[1] = sub_1A8CCA2C8;
    return sub_1A8D28C58();
  }
  else
  {
    swift_bridgeObjectRelease();
    char v24 = sub_1A8D59A60();
    os_log_type_t v25 = sub_1A8D59F00();
    if (os_log_type_enabled(v24, v25))
    {
      os_log_type_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v26 = 0;
      _os_log_impl(&dword_1A8C7F000, v24, v25, "User is not elegible for CFU, clearing any existing CFUs", v26, 2u);
      MEMORY[0x1AD0E6EB0](v26, -1, -1);
    }

    sub_1A8D2AB78(0xD000000000000013, 0x80000001A8D64370);
    LOBYTE(v31[0]) = 1;
    sub_1A8D2AE8C(v31);
    uint64_t v27 = (uint64_t (*)(void))v1[1];
    return v27();
  }
}

uint64_t sub_1A8CCA2C8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8CCA3C4, 0, 0);
}

uint64_t sub_1A8CCA3C4()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CCA4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _OWORD v6[2] = a5;
  v6[3] = a6;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[4] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1A8CCA58C;
  return sub_1A8D295D4();
}

uint64_t sub_1A8CCA58C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8CCA688, 0, 0);
}

uint64_t sub_1A8CCA688()
{
  (*(void (**)(void))(v0 + 16))(0);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CCA8D8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A8CCC06C(a1, a2, a3, a4, "Signing up for ticket %{public}s", (uint64_t)&unk_1EFF56220, (uint64_t)&unk_1E979EAC8);
}

uint64_t sub_1A8CCA900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  return MEMORY[0x1F4188298](sub_1A8CCA928, 0, 0);
}

uint64_t sub_1A8CCA928()
{
  id v49 = v0;
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  v0[23] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9318);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[19];
  if (v4)
  {
    uint64_t v6 = v0[18];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v47 = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    swift_bridgeObjectRetain();
    v0[17] = sub_1A8C90120(v6, v5, &v47);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Starting signup for ticket %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v9 = (void *)(v0[20] + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore);
  uint64_t v10 = v9[3];
  uint64_t v11 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v10);
  id v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11);
  if (v12
    && (os_log_type_t v13 = v12, v14 = objc_msgSend(v12, sel_aa_altDSID), v13, v14))
  {
    uint64_t v15 = sub_1A8D59BF0();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = 0;
  }
  v0[24] = v15;
  v0[25] = v17;
  id v18 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  swift_bridgeObjectRetain();
  os_log_t v19 = (void *)sub_1A8D59BC0();
  id v20 = objc_msgSend(v18, sel_initWithSuiteName_, v19);

  type metadata accessor for SystemProperties();
  swift_initStaticObject();
  os_log_t v21 = sub_1A8C8E620();
  uint64_t v23 = v22;
  type metadata accessor for WaitlistCache();
  char v24 = (void *)swift_allocObject();
  os_log_type_t v25 = v24;
  if (!v20)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    os_log_type_t v26 = 0;
    os_log_type_t v25 = 0;
LABEL_21:
    v0[26] = v26;
    v0[27] = v25;
    uint64_t v45 = *(void *)(v0[20] + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_taskLimiters);
    v0[28] = v45;
    uint64_t v47 = 0x5F70756E676973;
    unint64_t v48 = 0xE700000000000000;
    sub_1A8D59CA0();
    unint64_t v46 = v48;
    v0[29] = v47;
    v0[30] = v46;
    id v32 = sub_1A8CCAE3C;
    uint64_t v33 = v45;
    uint64_t v34 = 0;
    return MEMORY[0x1F4188298](v32, v33, v34);
  }
  uint64_t v24[2] = v20;
  uint64_t v24[3] = v21;
  uint64_t v24[4] = v23;
  v24[5] = v15;
  v24[6] = v17;
  swift_retain();
  os_log_type_t v26 = (char *)sub_1A8CD35A8(0, 0);
  swift_release();
  if (!v26) {
    goto LABEL_21;
  }
  uint64_t v27 = OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status;
  id v28 = *(void **)&v26[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status];
  uint64_t v29 = (objc_class *)type metadata accessor for TicketStatus();
  objc_allocWithZone(v29);
  id v30 = v28;
  uint64_t v31 = v26;
  id v32 = TicketStatus.init(rawValue:)(0x6465756575716E65, 0xE800000000000000);
  if (!v32)
  {
    __break(1u);
    goto LABEL_25;
  }
  id v35 = v32;
  char v36 = sub_1A8D59FA0();

  if ((v36 & 1) == 0)
  {
    unint64_t v37 = *(void **)&v26[v27];
    objc_allocWithZone(v29);
    id v38 = v37;
    id v32 = TicketStatus.init(rawValue:)(0x657669746361, 0xE600000000000000);
    if (v32)
    {
      uint64_t v39 = v32;
      char v40 = sub_1A8D59FA0();

      if (v40) {
        goto LABEL_16;
      }

      goto LABEL_21;
    }
LABEL_25:
    __break(1u);
    return MEMORY[0x1F4188298](v32, v33, v34);
  }
LABEL_16:
  uint64_t v41 = (void (*)(char *, void))v0[21];
  swift_bridgeObjectRelease();
  id v42 = v31;
  v41(v26, 0);
  swift_release();

  uint64_t v43 = (uint64_t (*)(void))v0[1];
  return v43();
}

uint64_t sub_1A8CCAE3C()
{
  v0[31] = sub_1A8C83E20(v0[29], v0[30]);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1A8CCAEB8, 0, 0);
}

uint64_t sub_1A8CCAEB8()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[19];
  uint64_t v5 = v0[18];
  sub_1A8D59CA0();
  v0[32] = 0xE700000000000000;
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (void *)swift_allocObject();
  v0[33] = v7;
  v7[2] = v5;
  v7[3] = v4;
  v7[4] = v1;
  v7[5] = v2;
  v7[6] = v3;
  v7[7] = v6;
  uint64_t v10 = (char *)&dword_1E979F948 + dword_1E979F948;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[34] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1A8CCB03C;
  return ((uint64_t (*)(uint64_t, unint64_t, void *, void *))v10)(0x5F70756E676973, 0xE700000000000000, &unk_1E979EAD8, v7);
}

uint64_t sub_1A8CCB03C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 280) = v1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_1A8CCB258;
  }
  else
  {
    *(void *)(v4 + 288) = a1;
    uint64_t v5 = sub_1A8CCB1A4;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1A8CCB1A4()
{
  uint64_t v1 = (void *)v0[36];
  uint64_t v2 = (void *)v0[26];
  uint64_t v3 = (void (*)(void *, void))v0[21];
  id v4 = v1;
  v3(v1, 0);

  swift_release();
  swift_release();

  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1A8CCB258()
{
  char v40 = v0;
  uint64_t v1 = (void *)v0[26];
  uint64_t v2 = (void *)v0[35];
  if (v1)
  {
    id v3 = v1;
    id v4 = v2;
    id v5 = v3;
    id v6 = v2;
    id v7 = v5;
    uint64_t v8 = sub_1A8D59A60();
    os_log_type_t v9 = sub_1A8D59EE0();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = (void *)v0[35];
    if (v10)
    {
      uint64_t v36 = v0[26];
      uint64_t v12 = swift_slowAlloc();
      os_log_type_t type = v9;
      os_log_type_t v13 = (void *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = v38;
      *(_DWORD *)uint64_t v12 = 138543618;
      v0[13] = v7;
      id v14 = v7;
      id v15 = v7;
      sub_1A8D59FE0();
      *os_log_type_t v13 = v36;

      id v7 = v14;
      *(_WORD *)(v12 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v16 = sub_1A8D5A440();
      v0[16] = sub_1A8C90120(v16, v17, &v39);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A8C7F000, v8, type, "signupForWaitlist recovered with existing cached value %{public}@ after error: %{public}s", (uint8_t *)v12, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v13, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v38, -1, -1);
      MEMORY[0x1AD0E6EB0](v12, -1, -1);
    }
    else
    {
    }
    id v28 = (void *)v0[35];
    uint64_t v29 = v0[26];
    id v30 = (void (*)(uint64_t, void))v0[21];
    id v31 = v7;
    v30(v29, 0);
    swift_release();

    swift_release();
  }
  else
  {
    id v18 = v2;
    id v19 = v2;
    id v20 = sub_1A8D59A60();
    os_log_type_t v21 = sub_1A8D59EE0();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v23 = (void *)v0[35];
    if (v22)
    {
      char v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v39 = v25;
      *(_DWORD *)char v24 = 136446210;
      swift_getErrorValue();
      uint64_t v26 = sub_1A8D5A440();
      v0[12] = sub_1A8C90120(v26, v27, &v39);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A8C7F000, v20, v21, "signupForWaitlist failed with error: %{public}s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v25, -1, -1);
      MEMORY[0x1AD0E6EB0](v24, -1, -1);
    }
    else
    {
    }
    id v28 = (void *)v0[35];
    id v32 = (void (*)(void, id))v0[21];
    swift_getErrorValue();
    id v33 = sub_1A8C90F38(v0[6], v0[7]);
    v32(0, v33);
    swift_release();
    swift_release();
  }
  uint64_t v34 = (uint64_t (*)(void))v0[1];
  return v34();
}

uint64_t sub_1A8CCB6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[30] = a6;
  v7[31] = a7;
  v7[28] = a4;
  v7[29] = a5;
  v7[26] = a2;
  v7[27] = a3;
  v7[25] = a1;
  return MEMORY[0x1F4188298](sub_1A8CCB714, 0, 0);
}

id sub_1A8CCB714()
{
  uint64_t v17 = v0;
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  *(void *)(v0 + 256) = __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9318);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = *(void *)(v0 + 216);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 208);
    id v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = v8;
    *(_DWORD *)id v7 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 192) = sub_1A8C90120(v6, v5, &v16);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Starting network fetch for signup for %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *(void *)(v0 + 40) = &type metadata for Device;
  *(void *)(v0 + 48) = &protocol witness table for Device;
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    BOOL v10 = result;
    char deviceSupportsGenerativeModelSystems = MobileGestalt_get_deviceSupportsGenerativeModelSystems();

    *(unsigned char *)(v0 + 16) = deviceSupportsGenerativeModelSystems;
    id v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E979E798 + dword_1E979E798);
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1A8CCB998;
    uint64_t v14 = *(void *)(v0 + 208);
    uint64_t v13 = *(void *)(v0 + 216);
    return (id)v15(v14, v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A8CCB998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v10 = *(void **)v5;
  uint64_t v11 = *(void *)v5 + 16;
  *(void *)(*(void *)v5 + 272) = v4;
  swift_task_dealloc();
  if (v4)
  {
    __swift_destroy_boxed_opaque_existential_0(v11);
    uint64_t v12 = sub_1A8CCBF3C;
  }
  else
  {
    v10[35] = a4;
    v10[36] = a3;
    v10[37] = a2;
    v10[38] = a1;
    __swift_destroy_boxed_opaque_existential_0(v11);
    uint64_t v12 = sub_1A8CCBAF0;
  }
  return MEMORY[0x1F4188298](v12, 0, 0);
}

id sub_1A8CCBAF0()
{
  uint64_t v41 = v0;
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v6 = (objc_class *)type metadata accessor for WaitlistResult();
  id v7 = (char *)objc_allocWithZone(v6);
  uint64_t v8 = &v7[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_ticket];
  *(void *)uint64_t v8 = v1;
  *((void *)v8 + 1) = v2;
  *(void *)&v7[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status] = v3;
  *(void *)&v7[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_featureIDs] = v4;
  *(void *)(v0 + 168) = v7;
  *(void *)(v0 + 176) = v6;
  os_log_type_t v9 = (char *)objc_msgSendSuper2((objc_super *)(v0 + 168), sel_init);
  BOOL v10 = v9;
  if (v5) {
    sub_1A8CD2ACC(v9, *(void *)(v0 + 232), *(void *)(v0 + 240));
  }
  uint64_t v11 = *(void *)(v0 + 248) + 16;
  type metadata accessor for Assets();
  sub_1A8CF7E54(0xD000000000000027, 0x80000001A8D64290);
  sub_1A8CEAA00();
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1AD0E6FA0](v11);
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    uint64_t v14 = *(void *)(v0 + 248) + 16;
    swift_beginAccess();
    uint64_t v15 = MEMORY[0x1AD0E6FA0](v14);
    uint64_t v16 = (void *)v15;
    if (v15)
    {
      sub_1A8C91CA8(v15 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore, v0 + 56);

      uint64_t v17 = *(void *)(v0 + 80);
      uint64_t v18 = *(void *)(v0 + 88);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), v17);
      uint64_t v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
      __swift_destroy_boxed_opaque_existential_0(v0 + 56);
    }
    sub_1A8CEF3B0((uint64_t)v16);
  }
  swift_bridgeObjectRetain_n();
  id v19 = sub_1A8D59A60();
  os_log_type_t v20 = sub_1A8D59F00();
  BOOL v21 = os_log_type_enabled(v19, v20);
  unint64_t v22 = *(void *)(v0 + 216);
  if (v21)
  {
    uint64_t v39 = v10;
    uint64_t v23 = *(void *)(v0 + 208);
    char v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v40 = v25;
    *(_DWORD *)char v24 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v26 = v23;
    BOOL v10 = v39;
    *(void *)(v0 + 184) = sub_1A8C90120(v26, v22, &v40);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v19, v20, "signupForWaitlist network fetch finished for %{public}s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v25, -1, -1);
    MEMORY[0x1AD0E6EB0](v24, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v27 = *(void **)&v10[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status];
  objc_allocWithZone((Class)type metadata accessor for TicketStatus());
  id v28 = v27;
  id result = TicketStatus.init(rawValue:)(0x657669746361, 0xE600000000000000);
  if (result)
  {
    id v30 = result;
    char v31 = sub_1A8D59FA0();

    if ((v31 & 1) != 0 && os_variant_has_internal_ui())
    {
      id v32 = sub_1A8D59A60();
      os_log_type_t v33 = sub_1A8D59F00();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v34 = 0;
        _os_log_impl(&dword_1A8C7F000, v32, v33, "Ticket is active & internal build detected, clearing cache & notifying", v34, 2u);
        MEMORY[0x1AD0E6EB0](v34, -1, -1);
      }
      uint64_t v35 = *(void *)(v0 + 248);

      swift_beginAccess();
      uint64_t v36 = MEMORY[0x1AD0E6FA0](v35 + 16);
      if (v36)
      {
        unint64_t v37 = (void *)v36;
        sub_1A8CC3B58();
      }
    }
    **(void **)(v0 + 200) = v10;
    uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v38();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A8CCBF3C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A8CCC044(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A8CCC06C(a1, a2, a3, a4, "Getting status for ticket %{public}s", (uint64_t)&unk_1EFF561A8, (uint64_t)&unk_1E979EAA0);
}

uint64_t sub_1A8CCC06C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v36 = a7;
  os_log_type_t v9 = v7;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  MEMORY[0x1F4188790](v14 - 8, v15);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1A8D59A80();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EB5E9318);
  swift_bridgeObjectRetain_n();
  id v19 = sub_1A8D59A60();
  os_log_type_t v20 = sub_1A8D59F00();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v34 = v9;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v35 = a1;
    unint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v33 = a3;
    uint64_t v24 = v23;
    uint64_t v38 = v23;
    id v32 = a5;
    *(_DWORD *)unint64_t v22 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1A8C90120(v35, a2, &v38);
    os_log_type_t v9 = v34;
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v19, v20, v32, v22, 0xCu);
    swift_arrayDestroy();
    uint64_t v25 = v24;
    a3 = v33;
    MEMORY[0x1AD0E6EB0](v25, -1, -1);
    uint64_t v26 = v22;
    a1 = v35;
    MEMORY[0x1AD0E6EB0](v26, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v27 = sub_1A8D59E10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v17, 1, 1, v27);
  id v28 = (void *)swift_allocObject();
  _OWORD v28[2] = 0;
  v28[3] = 0;
  uint64_t v28[4] = a1;
  v28[5] = a2;
  v28[6] = v9;
  v28[7] = a3;
  v28[8] = a4;
  swift_bridgeObjectRetain();
  id v29 = v9;
  swift_retain();
  sub_1A8C84960((uint64_t)v17, v36, (uint64_t)v28);
  return swift_release();
}

uint64_t sub_1A8CCC334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  return MEMORY[0x1F4188298](sub_1A8CCC35C, 0, 0);
}

uint64_t sub_1A8CCC35C()
{
  id v49 = v0;
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  v0[23] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9318);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[19];
  if (v4)
  {
    uint64_t v6 = v0[18];
    id v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v47 = v8;
    *(_DWORD *)id v7 = 136446210;
    swift_bridgeObjectRetain();
    v0[17] = sub_1A8C90120(v6, v5, &v47);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Starting status request for ticket %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  os_log_type_t v9 = (void *)(v0[20] + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore);
  uint64_t v10 = v9[3];
  uint64_t v11 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v10);
  uint64_t v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11);
  if (v12
    && (uint64_t v13 = v12, v14 = objc_msgSend(v12, sel_aa_altDSID), v13, v14))
  {
    uint64_t v15 = sub_1A8D59BF0();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = 0;
  }
  v0[24] = v15;
  v0[25] = v17;
  id v18 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  swift_bridgeObjectRetain();
  id v19 = (void *)sub_1A8D59BC0();
  id v20 = objc_msgSend(v18, sel_initWithSuiteName_, v19);

  type metadata accessor for SystemProperties();
  swift_initStaticObject();
  uint64_t v21 = sub_1A8C8E620();
  uint64_t v23 = v22;
  type metadata accessor for WaitlistCache();
  uint64_t v24 = (void *)swift_allocObject();
  uint64_t v25 = v24;
  if (!v20)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    uint64_t v26 = 0;
    uint64_t v25 = 0;
LABEL_21:
    v0[26] = v26;
    v0[27] = v25;
    uint64_t v45 = *(void *)(v0[20] + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_taskLimiters);
    v0[28] = v45;
    uint64_t v47 = 0x5F737574617473;
    unint64_t v48 = 0xE700000000000000;
    sub_1A8D59CA0();
    unint64_t v46 = v48;
    v0[29] = v47;
    v0[30] = v46;
    id v32 = sub_1A8CCC86C;
    uint64_t v33 = v45;
    uint64_t v34 = 0;
    return MEMORY[0x1F4188298](v32, v33, v34);
  }
  uint64_t v24[2] = v20;
  uint64_t v24[3] = v21;
  uint64_t v24[4] = v23;
  v24[5] = v15;
  v24[6] = v17;
  swift_retain();
  uint64_t v26 = (char *)sub_1A8CD35A8(0, 0);
  swift_release();
  if (!v26) {
    goto LABEL_21;
  }
  uint64_t v27 = OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status;
  id v28 = *(void **)&v26[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status];
  id v29 = (objc_class *)type metadata accessor for TicketStatus();
  objc_allocWithZone(v29);
  id v30 = v28;
  uint64_t v31 = v26;
  id v32 = TicketStatus.init(rawValue:)(0x6465756575716E65, 0xE800000000000000);
  if (!v32)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v35 = v32;
  char v36 = sub_1A8D59FA0();

  if ((v36 & 1) == 0)
  {
    uint64_t v37 = *(void **)&v26[v27];
    objc_allocWithZone(v29);
    id v38 = v37;
    id v32 = TicketStatus.init(rawValue:)(0x657669746361, 0xE600000000000000);
    if (v32)
    {
      uint64_t v39 = v32;
      char v40 = sub_1A8D59FA0();

      if (v40) {
        goto LABEL_16;
      }

      goto LABEL_21;
    }
LABEL_25:
    __break(1u);
    return MEMORY[0x1F4188298](v32, v33, v34);
  }
LABEL_16:
  uint64_t v41 = (void (*)(char *, void))v0[21];
  swift_bridgeObjectRelease();
  uint64_t v42 = v31;
  v41(v26, 0);

  swift_release();
  uint64_t v43 = (uint64_t (*)(void))v0[1];
  return v43();
}

uint64_t sub_1A8CCC86C()
{
  v0[31] = sub_1A8C83E20(v0[29], v0[30]);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1A8CCC8E8, 0, 0);
}

uint64_t sub_1A8CCC8E8()
{
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v5 = v0[18];
  uint64_t v4 = v0[19];
  sub_1A8D59CA0();
  v0[32] = 0xE700000000000000;
  uint64_t v6 = (void *)swift_allocObject();
  v0[33] = v6;
  _OWORD v6[2] = v5;
  v6[3] = v4;
  v6[4] = v1;
  v6[5] = v3;
  v6[6] = v2;
  os_log_type_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E979F948 + dword_1E979F948);
  swift_bridgeObjectRetain();
  swift_retain();
  id v7 = (void *)swift_task_alloc();
  v0[34] = v7;
  *id v7 = v0;
  v7[1] = sub_1A8CCCA44;
  return v9(0x5F737574617473, 0xE700000000000000, (uint64_t)&unk_1E979EAB0, (uint64_t)v6);
}

uint64_t sub_1A8CCCA44(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 280) = v1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_1A8CCCC60;
  }
  else
  {
    *(void *)(v4 + 288) = a1;
    uint64_t v5 = sub_1A8CCCBAC;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1A8CCCBAC()
{
  uint64_t v1 = (void *)v0[36];
  uint64_t v2 = (void *)v0[26];
  uint64_t v3 = (void (*)(void *, void))v0[21];
  id v4 = v1;
  v3(v1, 0);
  swift_release();
  swift_release();

  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1A8CCCC60()
{
  uint64_t v41 = v0;
  uint64_t v1 = (void *)v0[26];
  uint64_t v2 = (void *)v0[35];
  if (v1)
  {
    id v3 = v1;
    id v4 = v2;
    id v5 = v3;
    id v6 = v2;
    id v7 = v5;
    uint64_t v8 = sub_1A8D59A60();
    os_log_type_t v9 = sub_1A8D59EE0();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = (void *)v0[35];
    if (v10)
    {
      uint64_t v37 = v0[26];
      uint64_t v12 = swift_slowAlloc();
      os_log_type_t type = v9;
      uint64_t v13 = (void *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = v39;
      *(_DWORD *)uint64_t v12 = 138543618;
      v0[13] = v7;
      id v14 = v7;
      id v15 = v7;
      sub_1A8D59FE0();
      *uint64_t v13 = v37;

      id v7 = v14;
      *(_WORD *)(v12 + 12) = 2082;
      swift_getErrorValue();
      uint64_t v16 = sub_1A8D5A440();
      v0[16] = sub_1A8C90120(v16, v17, &v40);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A8C7F000, v8, type, "getWaitlistStatus recovered with existing cached value %{public}@ after error: %{public}s", (uint8_t *)v12, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v13, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v39, -1, -1);
      MEMORY[0x1AD0E6EB0](v12, -1, -1);
    }
    else
    {
    }
    id v28 = (void *)v0[35];
    uint64_t v29 = v0[26];
    id v30 = (void (*)(uint64_t, void))v0[21];
    id v31 = v7;
    v30(v29, 0);

    swift_release();
    swift_release();
  }
  else
  {
    id v18 = v2;
    id v19 = v2;
    id v20 = sub_1A8D59A60();
    os_log_type_t v21 = sub_1A8D59EE0();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v23 = (void *)v0[35];
    if (v22)
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v40 = v25;
      *(_DWORD *)uint64_t v24 = 136446210;
      swift_getErrorValue();
      uint64_t v26 = sub_1A8D5A440();
      v0[12] = sub_1A8C90120(v26, v27, &v40);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A8C7F000, v20, v21, "getWaitlistStatus failed with error: %{public}s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v25, -1, -1);
      MEMORY[0x1AD0E6EB0](v24, -1, -1);
    }
    else
    {
    }
    id v32 = (void *)v0[35];
    uint64_t v33 = (void (*)(void, id))v0[21];
    swift_getErrorValue();
    id v34 = sub_1A8C90F38(v0[6], v0[7]);
    v33(0, v34);
    swift_release();
    swift_release();
  }
  uint64_t v35 = (uint64_t (*)(void))v0[1];
  return v35();
}

uint64_t sub_1A8CCD0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  return MEMORY[0x1F4188298](sub_1A8CCD120, 0, 0);
}

uint64_t sub_1A8CCD120()
{
  id v19 = v0;
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  v0[12] = __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9318);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[8];
  if (v4)
  {
    uint64_t v6 = v0[7];
    id v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = v8;
    *(_DWORD *)id v7 = 136446210;
    swift_bridgeObjectRetain();
    v0[5] = sub_1A8C90120(v6, v5, &v18);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Starting network fetch for status for %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = v0[9];
  if (v9)
  {
    uint64_t v10 = sub_1A8CD35A8(0, 0);
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      uint64_t v9 = *(void *)(v10 + OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_ticket);
      uint64_t v12 = *(void *)(v10 + OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_ticket + 8);
      swift_bridgeObjectRetain();

      goto LABEL_11;
    }
    uint64_t v9 = 0;
  }
  uint64_t v12 = 0;
LABEL_11:
  v0[13] = v12;
  unint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E979E770 + dword_1E979E770);
  uint64_t v13 = (void *)swift_task_alloc();
  v0[14] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1A8CCD3B0;
  uint64_t v15 = v0[7];
  uint64_t v14 = v0[8];
  return v17(v15, v14, v9, v12);
}

uint64_t sub_1A8CCD3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(void **)v5;
  *(void *)(*(void *)v5 + 120) = v4;
  swift_task_dealloc();
  if (v4)
  {
    uint64_t v11 = sub_1A8CCD7F8;
  }
  else
  {
    v10[16] = a4;
    v10[17] = a3;
    v10[18] = a2;
    v10[19] = a1;
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_1A8CCD500;
  }
  return MEMORY[0x1F4188298](v11, 0, 0);
}

uint64_t sub_1A8CCD500()
{
  uint64_t v25 = v0;
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v6 = (objc_class *)type metadata accessor for WaitlistResult();
  id v7 = (char *)objc_allocWithZone(v6);
  uint64_t v8 = &v7[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_ticket];
  *(void *)uint64_t v8 = v1;
  *((void *)v8 + 1) = v2;
  *(void *)&v7[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status] = v3;
  *(void *)&v7[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_featureIDs] = v4;
  *(void *)(v0 + 16) = v7;
  *(void *)(v0 + 24) = v6;
  id v9 = objc_msgSendSuper2((objc_super *)(v0 + 16), sel_init);
  if (v5)
  {
    uint64_t v11 = *(void *)(v0 + 80);
    uint64_t v10 = *(void *)(v0 + 88);
    swift_retain();
    sub_1A8CD2ACC(v9, v11, v10);
    swift_release();
  }
  else
  {
    uint64_t v12 = sub_1A8D59A60();
    os_log_type_t v13 = sub_1A8D59EE0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1A8C7F000, v12, v13, "Unable to initialize WaitlistCache. Response will not be cached.", v14, 2u);
      MEMORY[0x1AD0E6EB0](v14, -1, -1);
    }
  }
  type metadata accessor for Assets();
  sub_1A8CF7E54(0xD000000000000024, 0x80000001A8D64260);
  sub_1A8CEAA00();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_1A8D59A60();
  os_log_type_t v16 = sub_1A8D59F00();
  BOOL v17 = os_log_type_enabled(v15, v16);
  unint64_t v18 = *(void *)(v0 + 64);
  if (v17)
  {
    uint64_t v19 = *(void *)(v0 + 56);
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v24 = v21;
    *(_DWORD *)uint64_t v20 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 32) = sub_1A8C90120(v19, v18, &v24);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v15, v16, "getWaitlistStatus network fetch finished for %{public}s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v21, -1, -1);
    MEMORY[0x1AD0E6EB0](v20, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  **(void **)(v0 + 48) = v9;
  BOOL v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1A8CCD7F8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_1A8CCD97C()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FeatureRequestHandler()
{
  return self;
}

void *sub_1A8CCDA54(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_1A8D5A1C0())
  {
    uint64_t v7 = 4;
    while (1)
    {
      uint64_t v8 = (a1 & 0xC000000000000001) != 0
         ? (char *)MEMORY[0x1AD0E6030](v7 - 4, a1)
         : (char *)*(id *)(a1 + 8 * v7);
      id v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      BOOL v11 = *(void *)&v8[OBJC_IVAR___CloudFeature_featureID] == a2
         && *(void *)&v8[OBJC_IVAR___CloudFeature_featureID + 8] == a3;
      if (v11 || (sub_1A8D5A390() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A8CCDB98(unint64_t a1)
{
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v4 = (char *)MEMORY[0x1AD0E6030](v3, a1);
LABEL_9:
        uint64_t v5 = v4;
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_20;
        }
        uint64_t v7 = *(void *)&v4[OBJC_IVAR___CloudFeature_featureID];
        uint64_t v8 = *(void *)&v4[OBJC_IVAR___CloudFeature_featureID + 8];
        if ((sub_1A8D59CC0() & 1) != 0
          || (v7 == 0x6C6C2E64756F6C63 ? (BOOL v9 = v8 == 0xE90000000000006DLL) : (BOOL v9 = 0), v9
                                                                                      || (sub_1A8D5A390() & 1) != 0))
        {
          sub_1A8D5A140();
          sub_1A8D5A170();
          sub_1A8D5A180();
          sub_1A8D5A150();
        }
        else
        {
        }
        ++v3;
        if (v6 == v2) {
          return v11;
        }
      }
      if (v3 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      uint64_t v2 = sub_1A8D5A1C0();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    uint64_t v4 = (char *)*(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1A8CCDD50()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A8CCDD88()
{
  return objectdestroy_7Tm(72);
}

uint64_t sub_1A8CCDD90()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 40);
  long long v5 = *(_OWORD *)(v0 + 56);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1A8C81A88;
  *(_OWORD *)(v3 + 168) = v5;
  *(_OWORD *)(v3 + 152) = v4;
  *(void *)(v3 + 144) = v2;
  return MEMORY[0x1F4188298](sub_1A8CCC35C, 0, 0);
}

uint64_t sub_1A8CCDE4C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A8CCDE94(uint64_t a1)
{
  long long v7 = *(_OWORD *)(v1 + 32);
  long long v8 = *(_OWORD *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_1A8C81A88;
  *(void *)(v5 + 88) = v4;
  *(_OWORD *)(v5 + 72) = v7;
  *(_OWORD *)(v5 + 56) = v8;
  *(void *)(v5 + 48) = a1;
  return MEMORY[0x1F4188298](sub_1A8CCD120, 0, 0);
}

uint64_t sub_1A8CCE090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v28 = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  MEMORY[0x1F4188790](v16 - 8, v17);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1A8D59E10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = 0;
  *(void *)(v21 + 24) = 0;
  *(unsigned char *)(v21 + 32) = a7;
  *(void *)(v21 + 40) = a10;
  *(void *)(v21 + 48) = a1;
  uint64_t v22 = v28;
  *(void *)(v21 + 56) = a2;
  *(void *)(v21 + 64) = v22;
  uint64_t v23 = v29;
  *(void *)(v21 + 72) = a4;
  *(void *)(v21 + 80) = v23;
  uint64_t v24 = v30;
  *(void *)(v21 + 88) = a6;
  *(void *)(v21 + 96) = v24;
  *(void *)(v21 + 104) = a9;
  *(void *)(v21 + 112) = ObjectType;
  id v25 = a10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A8C84960((uint64_t)v19, (uint64_t)&unk_1E979EC00, v21);
  return swift_release();
}

void sub_1A8CCE210(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore);
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  unint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  if (v6)
  {
    long long v7 = v6;
    id v8 = objc_msgSend(v6, sel_isEnabledForDataclass_, *MEMORY[0x1E4F17620]);
    if (qword_1EB5EAD00 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1A8D59A80();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB5EAC50);
    uint64_t v10 = sub_1A8D59A60();
    os_log_type_t v11 = sub_1A8D59F00();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 67109120;
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v10, v11, "Shared albums enablement status: %{BOOL}d", v12, 8u);
      MEMORY[0x1AD0E6EB0](v12, -1, -1);
    }

    (*(void (**)(uint64_t, id, void))(a2 + 16))(a2, v8, 0);
  }
  else
  {
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1A8D59A80();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EB5E9318);
    uint64_t v14 = sub_1A8D59A60();
    os_log_type_t v15 = sub_1A8D59EE0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1A8C7F000, v14, v15, "Unable to get primary account", v16, 2u);
      MEMORY[0x1AD0E6EB0](v16, -1, -1);
    }

    id v17 = sub_1A8CA6B90(10);
    (*(void (**)(uint64_t, void, id))(a2 + 16))(a2, 0, v17);
  }
}

void sub_1A8CCE4AC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1A8D59A80();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB5E9318);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_1A8D59A60();
  os_log_type_t v10 = sub_1A8D59F00();
  if (os_log_type_enabled(v9, v10))
  {
    os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v20 = v12;
    *(_DWORD *)os_log_type_t v11 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A8C90120(a1, a2, &v20);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v9, v10, "Fetching ticket status from cache for feature %s.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v12, -1, -1);
    MEMORY[0x1AD0E6EB0](v11, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v13 = (void *)(a3 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore);
  uint64_t v14 = *(void *)(a3 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore + 24);
  uint64_t v15 = v13[4];
  __swift_project_boxed_opaque_existential_1(v13, v14);
  uint64_t v16 = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  unint64_t v18 = v17;
  if (qword_1EB5E9828 != -1) {
    swift_once();
  }
  uint64_t v19 = (char *)sub_1A8CBE888(a1, a2, v16, v18);
  swift_bridgeObjectRelease();
  if (v19)
  {
    (*(void (**)(uint64_t, void, void))(a4 + 16))(a4, *(void *)&v19[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status], 0);
  }
  else
  {
    uint64_t v19 = (char *)sub_1A8CA6B90(4);
    (*(void (**)(uint64_t, void, char *))(a4 + 16))(a4, 0, v19);
  }
}

void sub_1A8CCE74C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!_s25CloudSubscriptionFeatures8FollowUpCACSgycfC_0()) {
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1A8D5A220();
  swift_bridgeObjectRelease();
  if (v4 == 1)
  {
    char v5 = 1;
    goto LABEL_6;
  }
  if (v4)
  {
    swift_release();
LABEL_11:
    id v6 = sub_1A8CA6B90(7);
    (*(void (**)(uint64_t, id))(a3 + 16))(a3, v6);
    goto LABEL_13;
  }
  char v5 = 0;
LABEL_6:
  char v7 = v5;
  if (sub_1A8D2AE8C(&v7))
  {
    (*(void (**)(uint64_t, void))(a3 + 16))(a3, 0);
    swift_release();
    return;
  }
  id v6 = sub_1A8CA6B90(4);
  (*(void (**)(uint64_t, id))(a3 + 16))(a3, v6);
  swift_release();
LABEL_13:
}

void sub_1A8CCE884(uint64_t a1, uint64_t a2, void (**a3)(void, void, void))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  MEMORY[0x1F4188790](v4 - 8, v5);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  _Block_copy(a3);
  uint64_t v9 = _s25CloudSubscriptionFeatures8FollowUpCACSgycfC_0();
  if (v9)
  {
    uint64_t v10 = v9;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1A8D5A220();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1A8D59E10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
    uint64_t v13 = (void *)swift_allocObject();
    id v13[2] = 0;
    void v13[3] = 0;
    v13[4] = v10;
    v13[5] = sub_1A8C93BDC;
    void v13[6] = v8;
    swift_retain();
    if (v11) {
      uint64_t v14 = &unk_1E979EBA0;
    }
    else {
      uint64_t v14 = &unk_1E979EBB0;
    }
    sub_1A8C84960((uint64_t)v7, (uint64_t)v14, (uint64_t)v13);
    swift_release();
    swift_release();
  }
  else
  {
    id v17 = sub_1A8CA6B90(7);
    ((void (**)(void, void, id))a3)[2](a3, 0, v17);
    swift_release();
    uint64_t v15 = v17;
  }
}

uint64_t sub_1A8CCEAC0()
{
  return objectdestroy_7Tm(72);
}

uint64_t sub_1A8CCEAC8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 40);
  long long v5 = *(_OWORD *)(v0 + 56);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1A8C81A88;
  *(_OWORD *)(v3 + 168) = v5;
  *(_OWORD *)(v3 + 152) = v4;
  *(void *)(v3 + 144) = v2;
  return MEMORY[0x1F4188298](sub_1A8CCA928, 0, 0);
}

uint64_t sub_1A8CCEB84()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A8CCEBBC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1A8CCEC0C(uint64_t a1)
{
  long long v8 = *(_OWORD *)(v1 + 32);
  long long v9 = *(_OWORD *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 8) = sub_1A8C81A88;
  *(void *)(v6 + 240) = v5;
  *(void *)(v6 + 248) = v4;
  *(_OWORD *)(v6 + 208) = v9;
  *(_OWORD *)(v6 + 224) = v8;
  *(void *)(v6 + 200) = a1;
  return MEMORY[0x1F4188298](sub_1A8CCB714, 0, 0);
}

uint64_t sub_1A8CCECE0()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1A8CCED28()
{
  long long v5 = *(_OWORD *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1A8C81A88;
  *(void *)(v3 + 96) = v2;
  *(_OWORD *)(v3 + 64) = v6;
  *(_OWORD *)(v3 + 80) = v5;
  return MEMORY[0x1F4188298](sub_1A8CC4340, 0, 0);
}

uint64_t sub_1A8CCEDEC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A8CCEE2C(uint64_t a1)
{
  long long v7 = *(_OWORD *)(v1 + 32);
  long long v8 = *(_OWORD *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 56) = v4;
  *(_OWORD *)(v5 + 40) = v7;
  *(_OWORD *)(v5 + 24) = v8;
  *(void *)(v5 + 8) = sub_1A8C81A88;
  *(void *)(v5 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1A8CC49C4, 0, 0);
}

uint64_t sub_1A8CCEF00()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1A8CCEF50()
{
  long long v5 = *(_OWORD *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1A8C81A88;
  *(void *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v5;
  return MEMORY[0x1F4188298](sub_1A8CC1CA0, 0, 0);
}

uint64_t sub_1A8CCF00C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1A8CCF024()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1A8C81A88;
  *(_OWORD *)(v2 + 16) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A8CCA58C;
  return sub_1A8D295D4();
}

uint64_t sub_1A8CCF10C()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A8CCF15C()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1A8C81A88;
  *(_OWORD *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_1A8CC9DC4, 0, 0);
}

uint64_t sub_1A8CCF20C()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1A8C81A88;
  *(_OWORD *)(v2 + 16) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A8CC9728;
  return sub_1A8D28C58();
}

uint64_t objectdestroy_59Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A8CCF340()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1A8C81A88;
  *(_OWORD *)(v2 + 16) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A8CC98BC;
  return sub_1A8D2A36C();
}

uint64_t sub_1A8CCF428()
{
  return objectdestroy_7Tm(80);
}

uint64_t sub_1A8CCF430(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1A8C81A88;
  return sub_1A8CC7708(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1A8CCF51C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A8CCF564(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1A8C81A88;
  return sub_1A8CC84F0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1A8CCF62C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InternalError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A8CCF688()
{
  return objectdestroy_7Tm(80);
}

uint64_t objectdestroy_7Tm(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return MEMORY[0x1F4186498](v1, a1, 7);
}

uint64_t sub_1A8CCF6EC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 40);
  long long v5 = *(_OWORD *)(v0 + 56);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1A8C81A88;
  *(_OWORD *)(v3 + 144) = v4;
  *(_OWORD *)(v3 + 160) = v5;
  *(void *)(v3 + 136) = v2;
  return MEMORY[0x1F4188298](sub_1A8CC5FF8, 0, 0);
}

uint64_t sub_1A8CCF7A4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1A8CCF7EC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1A8C81A88;
  return sub_1A8CC6B48(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1A8CCF8C0()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t sub_1A8CCF920()
{
  char v2 = *(unsigned char *)(v0 + 32);
  long long v9 = *(_OWORD *)(v0 + 56);
  long long v10 = *(_OWORD *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v0 + 88);
  *(void *)(v1 + 16) = v6;
  *(void *)uint64_t v6 = v1;
  *(void *)(v6 + 8) = sub_1A8C81A88;
  *(void *)(v6 + 120) = v5;
  *(_OWORD *)(v6 + 104) = v7;
  *(void *)(v6 + 88) = v3;
  *(void *)(v6 + 96) = v4;
  *(_OWORD *)(v6 + 72) = v9;
  *(_OWORD *)(v6 + 56) = v10;
  *(unsigned char *)(v6 + 176) = v2;
  return MEMORY[0x1F4188298](sub_1A8CC53D8, 0, 0);
}

uint64_t sub_1A8CCFA10()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1A8CCFA60(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1A8C81A88;
  return sub_1A8CC5BFC(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1A8CCFB3C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A8CCFB68(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A8CCFB94()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_1A8CCFBEC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A8CCFC2C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t sub_1A8CCFC84()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1A8CCFCCC(uint64_t a1)
{
  long long v8 = *(_OWORD *)(v1 + 32);
  long long v9 = *(_OWORD *)(v1 + 16);
  long long v7 = *(_OWORD *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 72) = v4;
  *(_OWORD *)(v5 + 56) = v7;
  *(_OWORD *)(v5 + 40) = v8;
  *(_OWORD *)(v5 + 24) = v9;
  *(void *)(v5 + 8) = sub_1A8C81A88;
  *(void *)(v5 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1A8CC38E0, 0, 0);
}

uint64_t sub_1A8CCFDDC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1A8CCFDF0()
{
  qword_1EB5E9920 = (uint64_t)&unk_1EFF55610;
}

uint64_t sub_1A8CCFE04(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A8CCFEA4;
  return MEMORY[0x1F40E6600](a1, 0);
}

uint64_t sub_1A8CCFEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = *v4;
  uint64_t v8 = swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 8);
  if (!v3)
  {
    uint64_t v8 = a1;
    uint64_t v9 = a2;
    uint64_t v10 = a3;
  }
  return v11(v8, v9, v10);
}

uint64_t sub_1A8CCFFBC()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEB0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A8D5C9F0;
  *(void *)(v0 + 32) = 0xD000000000000016;
  *(void *)(v0 + 40) = 0x80000001A8D644C0;
  id v32 = &type metadata for CoreTelephonyFeatures;
  unint64_t v1 = sub_1A8CD1538();
  unint64_t v33 = v1;
  LOBYTE(v31[0]) = 0;
  char v2 = sub_1A8D597C0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
  if (v2)
  {
    if (qword_1EB5E92F0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1A8D59A80();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB5E92D8);
    uint64_t v4 = sub_1A8D59A60();
    os_log_type_t v5 = sub_1A8D59F00();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      v31[0] = v7;
      *(_DWORD *)uint64_t v6 = 136446210;
      sub_1A8C90120(0xD00000000000001BLL, 0x80000001A8D64500, v31);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v4, v5, "Including software capabilities in request %{public}s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v7, -1, -1);
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
    }

    unint64_t v9 = *(void *)(v0 + 16);
    unint64_t v8 = *(void *)(v0 + 24);
    if (v9 >= v8 >> 1) {
      uint64_t v0 = (uint64_t)sub_1A8C9D544((void *)(v8 > 1), v9 + 1, 1, (void *)v0);
    }
    *(void *)(v0 + 16) = v9 + 1;
    uint64_t v10 = v0 + 16 * v9;
    *(void *)(v10 + 32) = 0xD00000000000001BLL;
    *(void *)(v10 + 40) = 0x80000001A8D64500;
  }
  else
  {
    if (qword_1EB5E92F0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1A8D59A80();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB5E92D8);
    uint64_t v12 = sub_1A8D59A60();
    os_log_type_t v13 = sub_1A8D59F00();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v31[0] = v15;
      *(_DWORD *)uint64_t v14 = 136446210;
      sub_1A8C90120(0xD00000000000001BLL, 0x80000001A8D64500, v31);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v12, v13, "Not including software capabilities in request %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v15, -1, -1);
      MEMORY[0x1AD0E6EB0](v14, -1, -1);
    }
  }
  id v32 = &type metadata for CoreTelephonyFeatures;
  unint64_t v33 = v1;
  LOBYTE(v31[0]) = 1;
  char v16 = sub_1A8D597C0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
  if (v16)
  {
    if (qword_1EB5E92F0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1A8D59A80();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EB5E92D8);
    unint64_t v18 = sub_1A8D59A60();
    os_log_type_t v19 = sub_1A8D59F00();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      v31[0] = v21;
      *(_DWORD *)uint64_t v20 = 136446210;
      sub_1A8C90120(0xD000000000000011, 0x80000001A8D644E0, v31);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v18, v19, "Including software capabilities in request %{public}s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v21, -1, -1);
      MEMORY[0x1AD0E6EB0](v20, -1, -1);
    }

    unint64_t v23 = *(void *)(v0 + 16);
    unint64_t v22 = *(void *)(v0 + 24);
    if (v23 >= v22 >> 1) {
      uint64_t v0 = (uint64_t)sub_1A8C9D544((void *)(v22 > 1), v23 + 1, 1, (void *)v0);
    }
    *(void *)(v0 + 16) = v23 + 1;
    uint64_t v24 = v0 + 16 * v23;
    *(void *)(v24 + 32) = 0xD000000000000011;
    *(void *)(v24 + 40) = 0x80000001A8D644E0;
  }
  else
  {
    if (qword_1EB5E92F0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1A8D59A80();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EB5E92D8);
    uint64_t v26 = sub_1A8D59A60();
    os_log_type_t v27 = sub_1A8D59F00();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      v31[0] = v29;
      *(_DWORD *)uint64_t v28 = 136446210;
      sub_1A8C90120(0xD000000000000011, 0x80000001A8D644E0, v31);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v26, v27, "Not including software capabilities in request %{public}s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v29, -1, -1);
      MEMORY[0x1AD0E6EB0](v28, -1, -1);
    }
  }
  return v0;
}

void sub_1A8CD0644(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v59 = a2;
  double v5 = *(double *)v2;
  id v6 = objc_allocWithZone(MEMORY[0x1E4F28E80]);
  uint64_t v7 = (void *)sub_1A8D59570();
  id v8 = objc_msgSend(v6, sel_initWithURL_cachePolicy_timeoutInterval_, v7, 1, v5);

  unint64_t v9 = (void *)sub_1A8D59BC0();
  uint64_t v10 = (void *)sub_1A8D59BC0();
  objc_msgSend(v8, sel_setValue_forHTTPHeaderField_, v9, v10);

  objc_msgSend(v8, sel_setTimeoutInterval_, v5);
  if (*(void *)(sub_1A8D59730() + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v11 = (void *)sub_1A8D59BC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = 0;
  }
  uint64_t v12 = (void *)sub_1A8D59BC0();
  objc_msgSend(v8, sel_setValue_forHTTPHeaderField_, v11, v12);

  uint64_t v13 = v3[4];
  uint64_t v14 = v3[5];
  __swift_project_boxed_opaque_existential_1(v3 + 1, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  if (v15)
  {
    char v16 = (void *)sub_1A8D59BC0();
    swift_bridgeObjectRelease();
    uint64_t v17 = (void *)sub_1A8D59BC0();
    objc_msgSend(v8, sel_setValue_forHTTPHeaderField_, v16, v17);
  }
  uint64_t v58 = v3;
  objc_msgSend(v8, sel_ak_addClientInfoHeader);
  objc_msgSend(v8, sel_ak_addCountryHeader);
  if (a1)
  {
    id v18 = a1;
    id v19 = objc_msgSend(v18, sel_aa_personID);
    uint64_t v20 = (void *)sub_1A8D59BC0();
    objc_msgSend(v8, sel_setValue_forHTTPHeaderField_, v19, v20);

    if (objc_msgSend(v8, sel_respondsToSelector_, sel_aa_addBasicAuthorizationHeaderWithAccount_preferUsingPassword_))
    {
      objc_msgSend(v8, sel_aa_addBasicAuthorizationHeaderWithAccount_preferUsingPassword_, v18, 0);
    }
    else
    {
      if (qword_1EB5E92F0 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_1A8D59A80();
      __swift_project_value_buffer(v21, (uint64_t)qword_1EB5E92D8);
      id v22 = v8;
      unint64_t v23 = sub_1A8D59A60();
      os_log_type_t v24 = sub_1A8D59EE0();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        id v57 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 138412290;
        v60[0] = v22;
        id v26 = v22;
        sub_1A8D59FE0();
        os_log_type_t v27 = v57;
        *id v57 = v22;

        _os_log_impl(&dword_1A8C7F000, v23, v24, "Unable to add authorization header to urlRequest: %@", v25, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v27, -1, -1);
        MEMORY[0x1AD0E6EB0](v25, -1, -1);

        goto LABEL_15;
      }
    }
  }
LABEL_15:
  id v28 = objc_msgSend(self, sel_systemTimeZone);
  uint64_t v29 = sub_1A8D597B0();
  id v57 = &v57;
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29, v31);
  unint64_t v33 = (char *)&v57 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8D597A0();

  uint64_t v34 = sub_1A8D596F0();
  uint64_t v35 = v8;
  uint64_t v36 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34, v37);
  uint64_t v39 = (char *)&v57 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8D596E0();
  sub_1A8D59770();
  uint64_t v41 = v40;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v34);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v29);
  if (v41)
  {
    uint64_t v42 = (void *)sub_1A8D59BC0();
    swift_bridgeObjectRelease();
    uint64_t v43 = (void *)sub_1A8D59BC0();
    objc_msgSend(v35, sel_setValue_forHTTPHeaderField_, v42, v43, v57);
  }
  uint64_t v44 = v58;
  sub_1A8CD0ED4(v35);
  sub_1A8CD13A0(v35);
  __swift_project_boxed_opaque_existential_1(v44 + 11, v44[14]);
  sub_1A8C9AE64();
  if (v45)
  {
    unint64_t v46 = (void *)sub_1A8D59BC0();
    swift_bridgeObjectRelease();
    uint64_t v47 = (void *)sub_1A8D59BC0();
    objc_msgSend(v35, sel_setValue_forHTTPHeaderField_, v46, v47);
  }
  __swift_project_boxed_opaque_existential_1(v44 + 11, v44[14]);
  if (sub_1A8C9AB6C())
  {
    unint64_t v48 = (void *)sub_1A8D59BC0();
    id v49 = (void *)sub_1A8D59BC0();
    objc_msgSend(v35, sel_setValue_forHTTPHeaderField_, v48, v49);

    if (qword_1EB5E92F0 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_1A8D59A80();
    __swift_project_value_buffer(v50, (uint64_t)qword_1EB5E92D8);
    uint64_t v51 = sub_1A8D59A60();
    os_log_type_t v52 = sub_1A8D59EC0();
    if (os_log_type_enabled(v51, v52))
    {
      id v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v53 = 0;
      _os_log_impl(&dword_1A8C7F000, v51, v52, "Adding retail device header to request.", v53, 2u);
      MEMORY[0x1AD0E6EB0](v53, -1, -1);
    }
  }
  if (os_variant_has_internal_ui())
  {
    v60[3] = &type metadata for FeatureFlag;
    v60[4] = sub_1A8C937E4();
    LOBYTE(v60[0]) = 4;
    char v54 = sub_1A8D597C0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
    if (v54)
    {
      id v55 = (void *)sub_1A8D59BC0();
      id v56 = (void *)sub_1A8D59BC0();
      objc_msgSend(v35, sel_setValue_forHTTPHeaderField_, v55, v56);
    }
  }
  sub_1A8D592F0();
}

void sub_1A8CD0ED4(void *a1)
{
  char v2 = v1;
  v33[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1A8CD158C();
  uint64_t v4 = (void *)sub_1A8D59F30();
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F23A80]), sel_initWithQueue_, v4);

  v33[0] = 0;
  id v6 = objc_msgSend(v5, sel_getStewieSupport_, v33);

  if (v6)
  {
    id v7 = v33[0];
    unsigned int v8 = objc_msgSend(v6, sel_hwSupport);

    if (v8)
    {
      if (qword_1EB5E92F0 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_1A8D59A80();
      __swift_project_value_buffer(v9, (uint64_t)qword_1EB5E92D8);
      uint64_t v10 = sub_1A8D59A60();
      os_log_type_t v11 = sub_1A8D59F00();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v13 = (void *)swift_slowAlloc();
        v33[0] = v13;
        *(_DWORD *)uint64_t v12 = 136446210;
        sub_1A8C90120(0x696B726F7774656ELL, 0xED000074732E676ELL, (uint64_t *)v33);
        sub_1A8D59FE0();
        _os_log_impl(&dword_1A8C7F000, v10, v11, "Including device capability header in request %{public}s", v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v13, -1, -1);
        MEMORY[0x1AD0E6EB0](v12, -1, -1);
      }

      uint64_t v14 = &unk_1EFF536E8;
      goto LABEL_14;
    }
  }
  else
  {
    id v15 = v33[0];
    char v16 = (void *)sub_1A8D59550();

    swift_willThrow();
  }
  if (qword_1EB5E92F0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1A8D59A80();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EB5E92D8);
  id v18 = sub_1A8D59A60();
  os_log_type_t v19 = sub_1A8D59F00();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_1A8C7F000, v18, v19, "Not including CT device capability header in request", v20, 2u);
    MEMORY[0x1AD0E6EB0](v20, -1, -1);
  }

  uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
LABEL_14:
  uint64_t v21 = v2 + 6;
  uint64_t v23 = v2[9];
  uint64_t v22 = v2[10];
  __swift_project_boxed_opaque_existential_1(v21, v23);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v23, v22))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_1A8C9D544(0, v14[2] + 1, 1, v14);
    }
    unint64_t v25 = v14[2];
    unint64_t v24 = v14[3];
    int64_t v26 = v24 >> 1;
    unint64_t v27 = v25 + 1;
    if (v24 >> 1 <= v25)
    {
      uint64_t v14 = sub_1A8C9D544((void *)(v24 > 1), v25 + 1, 1, v14);
      unint64_t v24 = v14[3];
      int64_t v26 = v24 >> 1;
    }
    v14[2] = v27;
    id v28 = &v14[2 * v25];
    uint64_t v28[4] = 0x6C6C2E64756F6C63;
    v28[5] = 0xE90000000000006DLL;
    int64_t v29 = v25 + 2;
    if (v26 < v29) {
      uint64_t v14 = sub_1A8C9D544((void *)(v24 > 1), v29, 1, v14);
    }
    v14[2] = v29;
    uint64_t v30 = &v14[2 * v27];
    v30[4] = 7171180;
    v30[5] = 0xE300000000000000;
  }
  v33[0] = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9DB0);
  sub_1A8C9D3A4();
  sub_1A8D59B70();
  swift_bridgeObjectRelease();
  uint64_t v31 = (void *)sub_1A8D59BC0();
  swift_bridgeObjectRelease();
  uint64_t v32 = (void *)sub_1A8D59BC0();
  objc_msgSend(a1, sel_setValue_forHTTPHeaderField_, v31, v32);
}

void sub_1A8CD13A0(void *a1)
{
  char v2 = (void *)sub_1A8CCFFBC();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v2 = sub_1A8C9D544(0, v2[2] + 1, 1, v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    char v2 = sub_1A8C9D544((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  id v5 = &v2[2 * v4];
  v5[4] = 0x6C6C2E64756F6C63;
  v5[5] = 0xE90000000000006DLL;
  uint64_t v9 = v2;
  if (qword_1EB5E98F0 != -1) {
    swift_once();
  }
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1A8CEBB44(v6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9DB0);
  sub_1A8C9D3A4();
  sub_1A8D59B70();
  swift_bridgeObjectRelease();
  id v7 = (void *)sub_1A8D59BC0();
  swift_bridgeObjectRelease();
  unsigned int v8 = (void *)sub_1A8D59BC0();
  objc_msgSend(a1, sel_setValue_forHTTPHeaderField_, v7, v8, v9);
}

unint64_t sub_1A8CD1538()
{
  unint64_t result = qword_1EB5E9458;
  if (!qword_1EB5E9458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9458);
  }
  return result;
}

unint64_t sub_1A8CD158C()
{
  unint64_t result = qword_1EB5E93A0;
  if (!qword_1EB5E93A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB5E93A0);
  }
  return result;
}

uint64_t destroy for GatewayRequestFactory(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  __swift_destroy_boxed_opaque_existential_0(a1 + 48);
  return __swift_destroy_boxed_opaque_existential_0(a1 + 88);
}

uint64_t initializeWithCopy for GatewayRequestFactory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  long long v5 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 48, a2 + 48);
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 88, a2 + 88);
  return a1;
}

uint64_t *assignWithCopy for GatewayRequestFactory(uint64_t *a1, uint64_t *a2)
{
  long long v4 = a2 + 11;
  *a1 = *a2;
  long long v5 = a1 + 11;
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  __swift_assign_boxed_opaque_existential_1(a1 + 6, a2 + 6);
  __swift_assign_boxed_opaque_existential_1(v5, v4);
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for GatewayRequestFactory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  __swift_destroy_boxed_opaque_existential_0(a1 + 48);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  __swift_destroy_boxed_opaque_existential_0(a1 + 88);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for GatewayRequestFactory(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GatewayRequestFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GatewayRequestFactory()
{
  return &type metadata for GatewayRequestFactory;
}

void *WaitlistCache.__allocating_init(defaults:bootSessionID:altDSID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  os_log_type_t v11 = v10;
  if (a1)
  {
    id v10[2] = a1;
    v10[3] = a2;
    v10[4] = a3;
    v10[5] = a4;
    v10[6] = a5;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v11;
}

uint64_t sub_1A8CD1974()
{
  uint64_t result = 0x65756C6176;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64656863746566;
      break;
    case 2:
      uint64_t result = 0x73736553746F6F62;
      break;
    case 3:
      uint64_t result = 0x44495344746C61;
      break;
    case 4:
      uint64_t result = 0x7974726964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A8CD1A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A8CD4A4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A8CD1A48(uint64_t a1)
{
  unint64_t v2 = sub_1A8CD22A0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8CD1A84(uint64_t a1)
{
  unint64_t v2 = sub_1A8CD22A0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t WaitlistCacheBox.encode(to:)(void *a1)
{
  long long v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EC60);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8CD22A0();
  sub_1A8D5A510();
  uint64_t v12 = *v3;
  v11[7] = 0;
  type metadata accessor for WaitlistResult();
  sub_1A8CD29D8(&qword_1E979EC70, (void (*)(uint64_t))type metadata accessor for WaitlistResult);
  sub_1A8D5A340();
  if (!v2)
  {
    type metadata accessor for WaitlistCacheBox();
    v11[6] = 1;
    sub_1A8D596F0();
    sub_1A8C93C40((unint64_t *)&unk_1EB5E92B0);
    sub_1A8D5A340();
    v11[5] = 2;
    sub_1A8D5A320();
    void v11[4] = 3;
    sub_1A8D5A2F0();
    void v11[3] = 4;
    sub_1A8D5A330();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

void WaitlistCacheBox.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EC78);
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for WaitlistCacheBox();
  MEMORY[0x1F4188790](v8, v9);
  os_log_type_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8CD22A0();
  sub_1A8D5A4F0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    id v28 = a1;
    uint64_t v12 = v11;
    type metadata accessor for WaitlistResult();
    char v36 = 0;
    sub_1A8CD29D8(&qword_1E979EC80, (void (*)(uint64_t))type metadata accessor for WaitlistResult);
    uint64_t v13 = v31;
    uint64_t v14 = v7;
    sub_1A8D5A2B0();
    uint64_t v15 = (uint64_t)v12;
    *uint64_t v12 = v37;
    uint64_t v16 = sub_1A8D596F0();
    uint64_t v17 = *(void *)(v16 - 8);
    MEMORY[0x1F4188790](v16, v18);
    uint64_t v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    char v35 = 1;
    sub_1A8C93C40(&qword_1EB5EA168);
    sub_1A8D5A2B0();
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v15 + v8[5], v20, v16);
    char v34 = 2;
    uint64_t v21 = sub_1A8D5A290();
    uint64_t v22 = (uint64_t *)(v15 + v8[6]);
    uint64_t *v22 = v21;
    v22[1] = v23;
    char v33 = 3;
    uint64_t v24 = sub_1A8D5A250();
    uint64_t v27 = v17;
    unint64_t v25 = (uint64_t *)(v15 + v8[7]);
    uint64_t *v25 = v24;
    v25[1] = v26;
    char v32 = 4;
    LOBYTE(v17) = sub_1A8D5A2A0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v13);
    *(unsigned char *)(v15 + v8[8]) = v17 & 1;
    sub_1A8CD2340(v15, v29);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    sub_1A8CD23A4(v15);
  }
}

void sub_1A8CD220C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1A8CD2224(void *a1)
{
  return WaitlistCacheBox.encode(to:)(a1);
}

void *WaitlistCache.init(defaults:bootSessionID:altDSID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    v5[2] = a1;
    v5[3] = a2;
    v5[4] = a3;
    v5[5] = a4;
    v5[6] = a5;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for WaitlistCache();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

unint64_t sub_1A8CD22A0()
{
  unint64_t result = qword_1E979EC68;
  if (!qword_1E979EC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EC68);
  }
  return result;
}

uint64_t type metadata accessor for WaitlistCacheBox()
{
  uint64_t result = qword_1E979ECB0;
  if (!qword_1E979ECB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A8CD2340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WaitlistCacheBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8CD23A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WaitlistCacheBox();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for WaitlistCache()
{
  return self;
}

uint64_t sub_1A8CD2424()
{
  unint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = (void *)sub_1A8D59BC0();
  id v3 = objc_msgSend(v1, sel_dataForKey_, v2);

  if (!v3) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = sub_1A8D595D0();
  unint64_t v6 = v5;

  sub_1A8D593A0();
  swift_allocObject();
  sub_1A8D59390();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EC88);
  sub_1A8CD2944(&qword_1E979EC90, &qword_1E979EC98);
  sub_1A8D59380();
  swift_release();
  sub_1A8C93C98(v4, v6);
  return v8;
}

void sub_1A8CD2588()
{
  uint64_t v1 = v0;
  sub_1A8D59420();
  swift_allocObject();
  sub_1A8D59410();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EC88);
  sub_1A8CD2944(&qword_1E979ECA0, &qword_1E979ECA8);
  uint64_t v2 = sub_1A8D59400();
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v5 = *(void **)(v1 + 16);
  sub_1A8CA17BC(v2, v4);
  unint64_t v6 = (void *)sub_1A8D595B0();
  sub_1A8C93C98(v2, v4);
  uint64_t v7 = (void *)sub_1A8D59BC0();
  objc_msgSend(v5, sel_setObject_forKey_, v6, v7);
  sub_1A8C93C98(v2, v4);
}

uint64_t sub_1A8CD2944(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E979EC88);
    sub_1A8CD29D8(a2, (void (*)(uint64_t))type metadata accessor for WaitlistCacheBox);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A8CD29D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void (*sub_1A8CD2A20(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  *a1 = sub_1A8CD2424();
  return sub_1A8CD2A68;
}

void sub_1A8CD2A68(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1A8CD2588();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A8CD2588();
  }
}

uint64_t sub_1A8CD2AC0(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return sub_1A8CD35A8(a3, a4);
}

uint64_t sub_1A8CD2ACC(void *a1, uint64_t a2, uint64_t a3)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v7 = type metadata accessor for WaitlistCacheBox();
  uint64_t v8 = (int *)(v7 - 8);
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v10);
  uint64_t v12 = (void *)((char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A8CD2C9C((uint64_t)a1);
  id v13 = a1;
  sub_1A8D596D0();
  uint64_t v14 = *(void *)(v3 + 24);
  uint64_t v15 = *(void *)(v3 + 32);
  *uint64_t v12 = v13;
  uint64_t v16 = (void *)((char *)v12 + v8[8]);
  *uint64_t v16 = v14;
  v16[1] = v15;
  uint64_t v17 = (void *)((char *)v12 + v8[9]);
  *uint64_t v17 = a2;
  v17[1] = a3;
  *((unsigned char *)v12 + v8[10]) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1A8CD2424();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E979E8F0);
  unint64_t v19 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1A8D5C9F0;
  sub_1A8CD2340((uint64_t)v12, v20 + v19);
  v22[0] = v18;
  sub_1A8CEBE68(v20);
  sub_1A8CD2588();
  return sub_1A8CD23A4((uint64_t)v12);
}

void sub_1A8CD2C9C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_featureIDs);
  uint64_t v4 = sub_1A8CD2424();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1A8CD3C54(v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A8D59420();
  swift_allocObject();
  sub_1A8D59410();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EC88);
  sub_1A8CD2944(&qword_1E979ECA0, &qword_1E979ECA8);
  uint64_t v6 = sub_1A8D59400();
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v9 = *(void **)(v2 + 16);
  sub_1A8CA17BC(v6, v8);
  uint64_t v10 = (void *)sub_1A8D595B0();
  sub_1A8C93C98(v6, v8);
  uint64_t v11 = (void *)sub_1A8D59BC0();
  objc_msgSend(v9, sel_setObject_forKey_, v10, v11, v5);
  sub_1A8C93C98(v6, v8);
}

void sub_1A8CD302C()
{
  uint64_t v1 = (int *)type metadata accessor for WaitlistCacheBox();
  uint64_t v2 = *((void *)v1 - 1);
  uint64_t v4 = MEMORY[0x1F4188790](v1, v3);
  uint64_t v6 = (void **)((char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (void *)((char *)v32 - v8);
  uint64_t v10 = sub_1A8CD2424();
  int64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    v32[1] = v0;
    uint64_t v34 = MEMORY[0x1E4FBC860];
    sub_1A8CB661C(0, v11, 0);
    uint64_t v12 = *(unsigned __int8 *)(v2 + 80);
    v32[0] = v10;
    uint64_t v33 = (v12 + 32) & ~v12;
    uint64_t v13 = v10 + v33;
    uint64_t v14 = *(void *)(v2 + 72);
    do
    {
      sub_1A8CD2340(v13, (uint64_t)v6);
      uint64_t v15 = *v6;
      uint64_t v16 = v1[5];
      uint64_t v17 = (char *)v6 + v16;
      uint64_t v18 = (char *)v9 + v16;
      uint64_t v19 = sub_1A8D596F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v18, v17, v19);
      uint64_t v20 = v1[6];
      uint64_t v21 = *(uint64_t *)((char *)v6 + v20);
      uint64_t v22 = *(uint64_t *)((char *)v6 + v20 + 8);
      uint64_t v23 = (uint64_t *)((char *)v6 + v1[7]);
      uint64_t v25 = *v23;
      uint64_t v24 = v23[1];
      *uint64_t v9 = v15;
      uint64_t v26 = (void *)((char *)v9 + v20);
      *uint64_t v26 = v21;
      v26[1] = v22;
      uint64_t v27 = (void *)((char *)v9 + v1[7]);
      *uint64_t v27 = v25;
      v27[1] = v24;
      *((unsigned char *)v9 + v1[8]) = 1;
      swift_bridgeObjectRetain();
      id v28 = v15;
      swift_bridgeObjectRetain();
      sub_1A8CD23A4((uint64_t)v6);
      uint64_t v29 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A8CB661C(0, *(void *)(v29 + 16) + 1, 1);
        uint64_t v29 = v34;
      }
      unint64_t v31 = *(void *)(v29 + 16);
      unint64_t v30 = *(void *)(v29 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1A8CB661C(v30 > 1, v31 + 1, 1);
        uint64_t v29 = v34;
      }
      *(void *)(v29 + 16) = v31 + 1;
      sub_1A8CD3ED4((uint64_t)v9, v29 + v33 + v31 * v14);
      v13 += v14;
      --v11;
    }
    while (v11);
  }
  swift_bridgeObjectRelease();
  sub_1A8CD2588();
}

void sub_1A8CD32AC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = (id)sub_1A8D59BC0();
  objc_msgSend(v1, sel_setURL_forKey_, 0, v2);
}

uint64_t WaitlistCache.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WaitlistCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 56, 7);
}

uint64_t sub_1A8CD33A0(uint64_t a1, uint64_t a2, int a3)
{
  int v24 = a3;
  uint64_t v26 = type metadata accessor for WaitlistCacheBox();
  uint64_t v7 = MEMORY[0x1F4188790](v26, v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7, v10);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v27 = MEMORY[0x1E4FBC860];
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v23 = v3;
    uint64_t v16 = *(void *)(v11 + 72);
    unint64_t v25 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v17 = a1 + v25;
    uint64_t v18 = MEMORY[0x1E4FBC860];
    do
    {
      sub_1A8CD2340(v17, (uint64_t)v13);
      uint64_t v19 = &v13[*(int *)(v26 + 24)];
      BOOL v20 = *(void *)v19 == *(void *)(a2 + 24) && *((void *)v19 + 1) == *(void *)(a2 + 32);
      if (v20 || (sub_1A8D5A390() & 1) != 0 || (v24 & 1) != 0)
      {
        sub_1A8CD3ED4((uint64_t)v13, (uint64_t)v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1A8CB661C(0, *(void *)(v18 + 16) + 1, 1);
        }
        uint64_t v18 = v27;
        unint64_t v22 = *(void *)(v27 + 16);
        unint64_t v21 = *(void *)(v27 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_1A8CB661C(v21 > 1, v22 + 1, 1);
          uint64_t v18 = v27;
        }
        *(void *)(v18 + 16) = v22 + 1;
        sub_1A8CD3ED4((uint64_t)v9, v18 + v25 + v22 * v16);
      }
      else
      {
        sub_1A8CD23A4((uint64_t)v13);
      }
      v17 += v16;
      --v15;
    }
    while (v15);
    return v27;
  }
  return result;
}

uint64_t sub_1A8CD35A8(int a1, int a2)
{
  LODWORD(v90) = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979ECD8);
  uint64_t v6 = MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v86 = (uint64_t)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6, v8);
  os_log_type_t v87 = (id *)((char *)&v80 - v9);
  uint64_t v10 = type metadata accessor for WaitlistCacheBox();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v10, v12);
  uint64_t v83 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13, v15);
  uint64_t v82 = (uint64_t)&v80 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16, v18);
  uint64_t v81 = (uint64_t)&v80 - v20;
  uint64_t v22 = MEMORY[0x1F4188790](v19, v21);
  uint64_t v89 = (uint64_t *)((char *)&v80 - v23);
  uint64_t v25 = MEMORY[0x1F4188790](v22, v24);
  uint64_t v91 = (uint64_t)&v80 - v26;
  uint64_t v28 = MEMORY[0x1F4188790](v25, v27);
  uint64_t v85 = (uint64_t)&v80 - v29;
  uint64_t v31 = MEMORY[0x1F4188790](v28, v30);
  uint64_t v84 = (uint64_t)&v80 - v32;
  MEMORY[0x1F4188790](v31, v33);
  char v35 = (char *)&v80 - v34;
  uint64_t v36 = sub_1A8CD2424();
  swift_retain();
  uint64_t v37 = sub_1A8CD33A0(v36, v2, a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  uint64_t v39 = MEMORY[0x1E4FBC860];
  uint64_t v92 = MEMORY[0x1E4FBC860];
  uint64_t v40 = *(void *)(v37 + 16);
  uint64_t v88 = v11;
  if (v40)
  {
    unint64_t v41 = 0;
    uint64_t v42 = MEMORY[0x1E4FBC860];
    while (v41 < *(void *)(v37 + 16))
    {
      unint64_t v43 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      uint64_t v44 = *(void *)(v11 + 72);
      sub_1A8CD2340(v37 + v43 + v44 * v41, (uint64_t)v35);
      if (v35[*(int *)(v10 + 32)] == 1 && (v90 & 1) == 0)
      {
        uint64_t result = sub_1A8CD23A4((uint64_t)v35);
      }
      else
      {
        uint64_t v45 = v10;
        sub_1A8CD3ED4((uint64_t)v35, v91);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1A8CB661C(0, *(void *)(v42 + 16) + 1, 1);
        }
        uint64_t v42 = v92;
        unint64_t v47 = *(void *)(v92 + 16);
        unint64_t v46 = *(void *)(v92 + 24);
        if (v47 >= v46 >> 1)
        {
          sub_1A8CB661C(v46 > 1, v47 + 1, 1);
          uint64_t v42 = v92;
        }
        *(void *)(v42 + 16) = v47 + 1;
        uint64_t result = sub_1A8CD3ED4(v91, v42 + v43 + v47 * v44);
        uint64_t v10 = v45;
        uint64_t v11 = v88;
      }
      if (v40 == ++v41)
      {
        uint64_t v39 = v92;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v48 = *(void *)(v39 + 16);
    if (!v48)
    {
      uint64_t v68 = v86;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v86, 1, 1, v10);
      uint64_t v69 = v87;
LABEL_26:
      swift_release();
      sub_1A8CD4C80(v68, (uint64_t)v69);
LABEL_29:
      if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v11 + 48))(v69, 1, v10))
      {
        id v78 = 0;
      }
      else
      {
        id v78 = *v69;
        id v79 = *v69;
      }
      sub_1A8CD4CE8((uint64_t)v69);
      return (uint64_t)v78;
    }
    id v49 = (objc_class *)type metadata accessor for TicketStatus();
    uint64_t v50 = v39 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v51 = *(void *)(v11 + 72);
    uint64_t v91 = v39;
    swift_retain();
    uint64_t v90 = v50;
    uint64_t v52 = v48;
    id v53 = v89;
    while (1)
    {
      sub_1A8CD2340(v50, (uint64_t)v53);
      char v54 = *(void **)(*v53 + OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status);
      id v55 = objc_allocWithZone(v49);
      id v56 = v54;
      uint64_t result = (uint64_t)TicketStatus.init(rawValue:)(0x657669746361, 0xE600000000000000);
      if (!result) {
        break;
      }
      id v57 = (void *)result;
      char v58 = sub_1A8D59FA0();

      if (v58)
      {
        swift_release();
        uint64_t v70 = v85;
        sub_1A8CD3ED4((uint64_t)v89, v85);
        swift_release();
        uint64_t v71 = v70;
        uint64_t v72 = v84;
        sub_1A8CD3ED4(v71, v84);
        uint64_t v73 = v72;
        uint64_t v69 = v87;
        sub_1A8CD3ED4(v73, (uint64_t)v87);
        uint64_t v11 = v88;
        (*(void (**)(id *, void, uint64_t, uint64_t))(v88 + 56))(v69, 0, 1, v10);
        goto LABEL_29;
      }
      id v53 = v89;
      sub_1A8CD23A4((uint64_t)v89);
      v50 += v51;
      if (!--v52)
      {
        uint64_t v59 = v10;
        swift_release();
        swift_retain();
        uint64_t v60 = v90;
        id v61 = v83;
        while (1)
        {
          sub_1A8CD2340(v60, (uint64_t)v61);
          id v62 = *(void **)(*v61 + OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status);
          id v63 = objc_allocWithZone(v49);
          id v64 = v62;
          uint64_t result = (uint64_t)TicketStatus.init(rawValue:)(0x6465756575716E65, 0xE800000000000000);
          if (!result) {
            goto LABEL_36;
          }
          uint64_t v65 = (void *)result;
          char v66 = sub_1A8D59FA0();

          if (v66)
          {
            swift_release();
            uint64_t v74 = v82;
            sub_1A8CD3ED4((uint64_t)v61, v82);
            swift_release();
            uint64_t v75 = v74;
            uint64_t v76 = v81;
            sub_1A8CD3ED4(v75, v81);
            uint64_t v77 = v76;
            uint64_t v69 = v87;
            sub_1A8CD3ED4(v77, (uint64_t)v87);
            uint64_t v11 = v88;
            uint64_t v10 = v59;
            (*(void (**)(id *, void, uint64_t, uint64_t))(v88 + 56))(v69, 0, 1, v59);
            goto LABEL_29;
          }
          sub_1A8CD23A4((uint64_t)v61);
          v60 += v51;
          if (!--v48)
          {
            uint64_t v67 = v91;
            uint64_t result = swift_release();
            if (!*(void *)(v67 + 16)) {
              goto LABEL_34;
            }
            uint64_t v68 = v86;
            sub_1A8CD2340(v90, v86);
            uint64_t v11 = v88;
            uint64_t v10 = v59;
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v88 + 56))(v68, 0, 1, v59);
            uint64_t v69 = v87;
            goto LABEL_26;
          }
        }
      }
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1A8CD3C54(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for WaitlistCacheBox() - 8;
  uint64_t v7 = MEMORY[0x1F4188790](v5, v6);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7, v10);
  uint64_t v13 = (void *)((char *)v28 - v12);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v33 = MEMORY[0x1E4FBC860];
  uint64_t v32 = *(void *)(a1 + 16);
  if (v32)
  {
    v28[1] = v2;
    uint64_t v15 = 0;
    uint64_t v16 = *(void *)(v11 + 72);
    unint64_t v30 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v31 = a1 + v30;
    uint64_t v29 = a2 + 7;
    uint64_t v17 = MEMORY[0x1E4FBC860];
    while (1)
    {
      sub_1A8CD2340(v31 + v16 * v15, (uint64_t)v13);
      uint64_t v19 = *(void **)(*v13 + OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_featureIDs);
      uint64_t v20 = v19[2];
      if (v20 != a2[2]) {
        goto LABEL_11;
      }
      if (v20 && v19 != a2)
      {
        BOOL v23 = v19[4] == a2[4] && v19[5] == a2[5];
        if (!v23 && (sub_1A8D5A390() & 1) == 0) {
          goto LABEL_11;
        }
        uint64_t v24 = v20 - 1;
        if (v24) {
          break;
        }
      }
LABEL_8:
      sub_1A8CD23A4((uint64_t)v13);
LABEL_9:
      if (++v15 == v32) {
        return v33;
      }
    }
    uint64_t v25 = v19 + 7;
    uint64_t v26 = v29;
    while (1)
    {
      BOOL v27 = *(v25 - 1) == *(v26 - 1) && *v25 == *v26;
      if (!v27 && (sub_1A8D5A390() & 1) == 0) {
        break;
      }
      v25 += 2;
      v26 += 2;
      if (!--v24) {
        goto LABEL_8;
      }
    }
LABEL_11:
    sub_1A8CD3ED4((uint64_t)v13, (uint64_t)v9);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_1A8CB661C(0, *(void *)(v17 + 16) + 1, 1);
    }
    uint64_t v17 = v33;
    unint64_t v22 = *(void *)(v33 + 16);
    unint64_t v21 = *(void *)(v33 + 24);
    if (v22 >= v21 >> 1)
    {
      sub_1A8CB661C(v21 > 1, v22 + 1, 1);
      uint64_t v17 = v33;
    }
    *(void *)(v17 + 16) = v22 + 1;
    sub_1A8CD3ED4((uint64_t)v9, v17 + v30 + v22 * v16);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1A8CD3ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WaitlistCacheBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8CD3F38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A8CD2424();
  *a1 = result;
  return result;
}

void sub_1A8CD3F64()
{
}

void **initializeBufferWithCopyOfBuffer for WaitlistCacheBox(void **a1, void **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1A8D596F0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    uint64_t v16 = (void **)((char *)v7 + v14);
    uint64_t v17 = (void **)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = (void **)((char *)v7 + v15);
    uint64_t v20 = (void **)((char *)a2 + v15);
    uint64_t v21 = v20[1];
    void *v19 = *v20;
    v19[1] = v21;
    *((unsigned char *)v7 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for WaitlistCacheBox(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1A8D596F0();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void **initializeWithCopy for WaitlistCacheBox(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A8D596F0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v6;
  v11(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = (void **)((char *)a1 + v13);
  uint64_t v16 = (void **)((char *)a2 + v13);
  uint64_t v17 = v16[1];
  void *v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = (void **)((char *)a1 + v14);
  uint64_t v19 = (void **)((char *)a2 + v14);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void **assignWithCopy for WaitlistCacheBox(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1A8D596F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void **)((char *)a1 + v13);
  uint64_t v15 = (void **)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void **)((char *)a1 + v16);
  uint64_t v18 = (void **)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *initializeWithTake for WaitlistCacheBox(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A8D596F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void **assignWithTake for WaitlistCacheBox(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = a3[5];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A8D596F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void **)((char *)a1 + v11);
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void **)((char *)a1 + v16);
  uint64_t v18 = (uint64_t *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for WaitlistCacheBox(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A8CD44D0);
}

uint64_t sub_1A8CD44D0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A8D596F0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for WaitlistCacheBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A8CD4594);
}

void *sub_1A8CD4594(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1A8D596F0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A8CD463C()
{
  uint64_t result = sub_1A8D596F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for WaitlistCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WaitlistCache);
}

uint64_t dispatch thunk of WaitlistCache.__allocating_init(defaults:bootSessionID:altDSID:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of WaitlistCache.allCachedResults.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of WaitlistCache.allCachedResults.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of WaitlistCache.allCachedResults.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of WaitlistCache.waitlistResult(featureID:ignoreBootSession:allowDirty:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of WaitlistCache.setWaitlistResult(_:altDSID:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of WaitlistCache.clearOverlap(withWaitlistResult:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of WaitlistCache.dirtyCache()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of WaitlistCache.clearCache()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

unsigned char *storeEnumTagSinglePayload for WaitlistCacheBox.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8CD490CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WaitlistCacheBox.CodingKeys()
{
  return &type metadata for WaitlistCacheBox.CodingKeys;
}

unint64_t sub_1A8CD4948()
{
  unint64_t result = qword_1E979ECC0;
  if (!qword_1E979ECC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979ECC0);
  }
  return result;
}

unint64_t sub_1A8CD49A0()
{
  unint64_t result = qword_1E979ECC8;
  if (!qword_1E979ECC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979ECC8);
  }
  return result;
}

unint64_t sub_1A8CD49F8()
{
  unint64_t result = qword_1E979ECD0;
  if (!qword_1E979ECD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979ECD0);
  }
  return result;
}

uint64_t sub_1A8CD4A4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656863746566 && a2 == 0xE700000000000000 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73736553746F6F62 && a2 == 0xED000044496E6F69 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x44495344746C61 && a2 == 0xE700000000000000 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7974726964 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A8CD4C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979ECD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8CD4CE8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979ECD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

CloudSubscriptionFeatures::TicketManagerError_optional __swiftcall TicketManagerError.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  *unint64_t v1 = v2;
  return (CloudSubscriptionFeatures::TicketManagerError_optional)rawValue;
}

uint64_t TicketManagerError.rawValue.getter()
{
  return *v0;
}

CloudSubscriptionFeatures::TicketManagerError_optional sub_1A8CD4D64(Swift::Int *a1)
{
  return TicketManagerError.init(rawValue:)(*a1);
}

void sub_1A8CD4D6C(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1A8CD4D7C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1A8CD98E4();
  unint64_t v5 = sub_1A8C81800();
  return MEMORY[0x1F4185E20](a1, a2, v4, v5);
}

uint64_t sub_1A8CD4DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)sub_1A8D59BC0();
  id v8 = objc_msgSend(v6, sel_initWithSuiteName_, v7);

  type metadata accessor for SystemProperties();
  swift_initStaticObject();
  uint64_t v9 = sub_1A8C8E620();
  uint64_t v11 = v10;
  type metadata accessor for WaitlistCache();
  uint64_t v12 = (void *)swift_allocObject();
  if (v8)
  {
    v12[2] = v8;
    uint64_t v12[3] = v9;
    v12[4] = v11;
    v12[5] = a3;
    v12[6] = a4;
    uint64_t v13 = sub_1A8CD35A8(0, 0);
    swift_release();
    return v13;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return 0;
  }
}

uint64_t static TicketManager.signupForWaitlist(featureID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E979ECE8 + dword_1E979ECE8);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_1A8CD997C;
  return v7(a1, a2);
}

uint64_t sub_1A8CD5130(int a1, void *aBlock)
{
  v2[2] = _Block_copy(aBlock);
  uint64_t v3 = sub_1A8D59BF0();
  uint64_t v5 = v4;
  v2[3] = v4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E979ECE8 + dword_1E979ECE8);
  id v6 = (void *)swift_task_alloc();
  v2[4] = v6;
  *id v6 = v2;
  v6[1] = sub_1A8CD9978;
  return v8(v3, v5);
}

uint64_t static TicketManager.getWaitlistStatus(featureID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E979ECF8 + dword_1E979ECF8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A8C98E68;
  return v7(a1, a2);
}

uint64_t sub_1A8CD542C(int a1, void *aBlock)
{
  v2[2] = _Block_copy(aBlock);
  uint64_t v3 = sub_1A8D59BF0();
  uint64_t v5 = v4;
  v2[3] = v4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E979ECF8 + dword_1E979ECF8);
  id v6 = (void *)swift_task_alloc();
  v2[4] = v6;
  *id v6 = v2;
  v6[1] = sub_1A8CD54FC;
  return v8(v3, v5);
}

uint64_t sub_1A8CD54FC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void (***)(void, void, void))(v5 + 16);
  if (v3)
  {
    uint64_t v8 = (void *)sub_1A8D59540();

    ((void (**)(void, void, void *))v7)[2](v7, 0, v8);
    _Block_release(v7);
  }
  else
  {
    ((void (**)(void, void *, void))v7)[2](v7, a1, 0);
    _Block_release(v7);
  }
  uint64_t v9 = *(uint64_t (**)(void))(v6 + 8);
  return v9();
}

uint64_t sub_1A8CD56A0(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  uint64_t v4 = sub_1A8D599D0();
  v3[19] = v4;
  v3[20] = *(void *)(v4 - 8);
  v3[21] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CD5764, 0, 0);
}

id sub_1A8CD5764()
{
  uint64_t v68 = v0;
  uint64_t v2 = (uint64_t *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = OBJC_IVAR___CSFTicketManager_signposter;
  *(void *)(v0 + 176) = OBJC_IVAR___CSFTicketManager_signposter;
  uint64_t v7 = (void *)(v5 + v6);
  __swift_project_boxed_opaque_existential_1((void *)(v5 + v6), *(void *)(v5 + v6 + 24));
  sub_1A8D599F0();
  sub_1A8D599B0();
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  uint64_t v8 = sub_1A8CE1ECC(0, v3, 0, 0);
  *(void *)(v0 + 184) = v8;
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + OBJC_IVAR___CSFTicketManager_getTicketMock))(v1, v4);
  if (v9)
  {
    uint64_t v10 = (char *)v9;
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    unint64_t v11 = 0x80000001A8D64620;
    uint64_t v12 = v8;
    uint64_t v13 = (const char *)0xD000000000000012;
LABEL_3:
    sub_1A8CE2358(0, v12, v13, v11);
    swift_release();
LABEL_4:
    (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(char *))(v0 + 8);
    return (id)v14(v10);
  }
  uint64_t v16 = (*(uint64_t (**)(void, void))(*(void *)(v0 + 144) + OBJC_IVAR___CSFTicketManager_getCachedFeature))(*(void *)(v0 + 128), *(void *)(v0 + 136));
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    uint64_t v18 = (unsigned char *)(v16 + OBJC_IVAR___CloudFeature_canUse);
    swift_beginAccess();
    if (*v18 == 1)
    {
      if (qword_1E979E448 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_1A8D59A80();
      __swift_project_value_buffer(v19, (uint64_t)qword_1E979F000);
      swift_bridgeObjectRetain_n();
      uint64_t v20 = sub_1A8D59A60();
      os_log_type_t v21 = sub_1A8D59F00();
      BOOL v22 = os_log_type_enabled(v20, v21);
      unint64_t v23 = *(void *)(v0 + 136);
      if (v22)
      {
        uint64_t v63 = *v2;
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        uint64_t v67 = v66;
        *(_DWORD *)uint64_t v24 = 136446210;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 120) = sub_1A8C90120(v63, v23, &v67);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A8C7F000, v20, v21, "Found active feature for feature ID %{public}s, returning .active ticket.", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v66, -1, -1);
        MEMORY[0x1AD0E6EB0](v24, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      __swift_project_boxed_opaque_existential_1(v7, v7[3]);
      sub_1A8CE2358(0, v8, (const char *)0xD000000000000019, 0x80000001A8D64600);
      objc_allocWithZone((Class)type metadata accessor for TicketStatus());
      id result = TicketStatus.init(rawValue:)(0x657669746361, 0xE600000000000000);
      if (result)
      {
        id v50 = result;
        uint64_t v52 = *(void *)(v0 + 128);
        uint64_t v51 = *(void *)(v0 + 136);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEB0);
        uint64_t v53 = swift_allocObject();
        *(_OWORD *)(v53 + 16) = xmmword_1A8D5C9F0;
        *(void *)(v53 + 32) = v52;
        *(void *)(v53 + 40) = v51;
        char v54 = (objc_class *)type metadata accessor for WaitlistResult();
        id v55 = (char *)objc_allocWithZone(v54);
        id v56 = &v55[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_ticket];
        *(void *)id v56 = 0;
        *((void *)v56 + 1) = 0;
        *(void *)&v55[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status] = v50;
        *(void *)&v55[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_featureIDs] = v53;
        *(void *)(v0 + 80) = v55;
        *(void *)(v0 + 88) = v54;
        swift_bridgeObjectRetain();
        uint64_t v10 = (char *)objc_msgSendSuper2((objc_super *)(v0 + 80), sel_init);
        swift_release();

        goto LABEL_4;
      }
      goto LABEL_42;
    }
  }
  uint64_t v25 = (*(uint64_t (**)(void, void))(*(void *)(v0 + 144) + OBJC_IVAR___CSFTicketManager_getCachedTicket))(*(void *)(v0 + 128), *(void *)(v0 + 136));
  *(void *)(v0 + 192) = v25;
  if (v25)
  {
    uint64_t v10 = (char *)v25;
    uint64_t v26 = OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status;
    BOOL v27 = *(void **)(v25 + OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status);
    uint64_t v28 = (objc_class *)type metadata accessor for TicketStatus();
    objc_allocWithZone(v28);
    id v29 = v27;
    id result = TicketStatus.init(rawValue:)(0x6465756575716E65, 0xE800000000000000);
    if (!result)
    {
      __break(1u);
      goto LABEL_41;
    }
    unint64_t v30 = result;
    char v31 = sub_1A8D59FA0();

    if (v31)
    {
      if (qword_1E979E448 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_1A8D59A80();
      __swift_project_value_buffer(v32, (uint64_t)qword_1E979F000);
      swift_bridgeObjectRetain_n();
      uint64_t v33 = sub_1A8D59A60();
      os_log_type_t v34 = sub_1A8D59F00();
      BOOL v35 = os_log_type_enabled(v33, v34);
      unint64_t v36 = *(void *)(v0 + 136);
      if (v35)
      {
        uint64_t v65 = *(void *)(v0 + 128);
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        uint64_t v38 = swift_slowAlloc();
        uint64_t v67 = v38;
        *(_DWORD *)uint64_t v37 = 136446210;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 104) = sub_1A8C90120(v65, v36, &v67);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A8C7F000, v33, v34, "Found enqueued ticket for feature ID %{public}s, returning .enqueued ticket.", v37, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v38, -1, -1);
        MEMORY[0x1AD0E6EB0](v37, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      __swift_project_boxed_opaque_existential_1(v7, v7[3]);
      uint64_t v13 = (const char *)0xD00000000000001FLL;
      id v57 = "success=1 cachedTicket=enqueued";
LABEL_39:
      unint64_t v11 = (unint64_t)(v57 - 32) | 0x8000000000000000;
      uint64_t v12 = v8;
      goto LABEL_3;
    }
    uint64_t v39 = *(void **)&v10[v26];
    objc_allocWithZone(v28);
    id v40 = v39;
    id result = TicketStatus.init(rawValue:)(0x657669746361, 0xE600000000000000);
    if (!result)
    {
LABEL_43:
      __break(1u);
      return result;
    }
    unint64_t v41 = result;
    char v42 = sub_1A8D59FA0();

    if (v42)
    {
      if (qword_1E979E448 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_1A8D59A80();
      __swift_project_value_buffer(v43, (uint64_t)qword_1E979F000);
      swift_bridgeObjectRetain_n();
      uint64_t v44 = sub_1A8D59A60();
      os_log_type_t v45 = sub_1A8D59EE0();
      BOOL v46 = os_log_type_enabled(v44, v45);
      unint64_t v47 = *(void *)(v0 + 136);
      if (v46)
      {
        uint64_t v64 = *v2;
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        uint64_t v67 = v49;
        *(_DWORD *)uint64_t v48 = 136446210;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 96) = sub_1A8C90120(v64, v47, &v67);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A8C7F000, v44, v45, "Found active ticket for feature ID %{public}s, returning .active ticket. There was no cached feature so this is unexpected.", v48, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v49, -1, -1);
        MEMORY[0x1AD0E6EB0](v48, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      __swift_project_boxed_opaque_existential_1(v7, v7[3]);
      uint64_t v13 = (const char *)0xD00000000000001DLL;
      id v57 = "success=1 cachedTicket=active";
      goto LABEL_39;
    }
  }
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 144) + OBJC_IVAR___CSFTicketManager_provider), *(void *)(*(void *)(v0 + 144) + OBJC_IVAR___CSFTicketManager_provider + 24));
  *(void *)(v0 + 40) = &type metadata for Device;
  *(void *)(v0 + 48) = &protocol witness table for Device;
  id result = (id)MobileGestalt_get_current_device();
  if (!result)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  char v58 = result;
  char deviceSupportsGenerativeModelSystems = MobileGestalt_get_deviceSupportsGenerativeModelSystems();

  *(unsigned char *)(v0 + 16) = deviceSupportsGenerativeModelSystems;
  uint64_t v60 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v60;
  *uint64_t v60 = v0;
  v60[1] = sub_1A8CD60F8;
  uint64_t v62 = *(void *)(v0 + 128);
  uint64_t v61 = *(void *)(v0 + 136);
  return (id)sub_1A8D07944(v62, v61, v0 + 16, v0 + 216);
}

uint64_t sub_1A8CD60F8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 208) = a1;
  swift_task_dealloc();
  if (v1)
  {
    *(unsigned char *)(v3 + 217) = *(unsigned char *)(v3 + 216);
    uint64_t v4 = sub_1A8CD6320;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v3 + 16);
    uint64_t v4 = sub_1A8CD621C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1A8CD621C()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = (void *)(v0[18] + v0[22]);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  if (v1)
  {
    unint64_t v3 = 0x80000001A8D64590;
    uint64_t v4 = v0[23];
    unint64_t v5 = 0xD000000000000023;
  }
  else
  {
    uint64_t v4 = v0[23];
    unint64_t v5 = 0x3D73736563637573;
    unint64_t v3 = 0xE900000000000031;
  }
  sub_1A8CE2358(0, v4, (const char *)v5, v3);
  swift_release();
  uint64_t v6 = v0[26];
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  return v7(v6);
}

uint64_t sub_1A8CD6320()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 217);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v6 = (void *)(*(void *)(v0 + 144) + *(void *)(v0 + 176));
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1A8D5A0C0();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 112) = v1;
  sub_1A8D5A360();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  sub_1A8CE2358(0, v2, (const char *)0xD000000000000014, 0x80000001A8D64570);
  swift_bridgeObjectRelease();
  sub_1A8CD8D1C();
  swift_allocError();
  *uint64_t v7 = v1;
  swift_willThrow();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1A8CD661C(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_1A8D59BF0();
  uint64_t v7 = v6;
  v3[4] = v6;
  a3;
  uint64_t v8 = (void *)swift_task_alloc();
  void v3[5] = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1A8CD9990;
  return sub_1A8CD56A0(v5, v7);
}

uint64_t sub_1A8CD66F0(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  uint64_t v4 = sub_1A8D599D0();
  v3[19] = v4;
  v3[20] = *(void *)(v4 - 8);
  v3[21] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CD67B4, 0, 0);
}

id sub_1A8CD67B4()
{
  uint64_t v68 = v0;
  uint64_t v2 = (uint64_t *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = OBJC_IVAR___CSFTicketManager_signposter;
  *(void *)(v0 + 176) = OBJC_IVAR___CSFTicketManager_signposter;
  uint64_t v7 = (void *)(v5 + v6);
  __swift_project_boxed_opaque_existential_1((void *)(v5 + v6), *(void *)(v5 + v6 + 24));
  sub_1A8D599F0();
  sub_1A8D599B0();
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  uint64_t v8 = sub_1A8CE1ECC(1, v3, 0, 0);
  *(void *)(v0 + 184) = v8;
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + OBJC_IVAR___CSFTicketManager_getTicketMock))(v1, v4);
  if (v9)
  {
    uint64_t v10 = (char *)v9;
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    unint64_t v11 = 0x80000001A8D64620;
    uint64_t v12 = v8;
    uint64_t v13 = (const char *)0xD000000000000012;
LABEL_3:
    sub_1A8CE2358(1, v12, v13, v11);
    swift_release();
LABEL_4:
    (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(char *))(v0 + 8);
    return (id)v14(v10);
  }
  uint64_t v16 = (*(uint64_t (**)(void, void))(*(void *)(v0 + 144) + OBJC_IVAR___CSFTicketManager_getCachedFeature))(*(void *)(v0 + 128), *(void *)(v0 + 136));
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    uint64_t v18 = (unsigned char *)(v16 + OBJC_IVAR___CloudFeature_canUse);
    swift_beginAccess();
    if (*v18 == 1)
    {
      if (qword_1E979E448 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_1A8D59A80();
      __swift_project_value_buffer(v19, (uint64_t)qword_1E979F000);
      swift_bridgeObjectRetain_n();
      uint64_t v20 = sub_1A8D59A60();
      os_log_type_t v21 = sub_1A8D59F00();
      BOOL v22 = os_log_type_enabled(v20, v21);
      unint64_t v23 = *(void *)(v0 + 136);
      if (v22)
      {
        uint64_t v63 = *v2;
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        uint64_t v67 = v66;
        *(_DWORD *)uint64_t v24 = 136446210;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 120) = sub_1A8C90120(v63, v23, &v67);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A8C7F000, v20, v21, "Found active feature for feature ID %{public}s, returning .active ticket.", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v66, -1, -1);
        MEMORY[0x1AD0E6EB0](v24, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      __swift_project_boxed_opaque_existential_1(v7, v7[3]);
      sub_1A8CE2358(1, v8, (const char *)0xD000000000000019, 0x80000001A8D64600);
      objc_allocWithZone((Class)type metadata accessor for TicketStatus());
      id result = TicketStatus.init(rawValue:)(0x657669746361, 0xE600000000000000);
      if (result)
      {
        id v50 = result;
        uint64_t v52 = *(void *)(v0 + 128);
        uint64_t v51 = *(void *)(v0 + 136);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEB0);
        uint64_t v53 = swift_allocObject();
        *(_OWORD *)(v53 + 16) = xmmword_1A8D5C9F0;
        *(void *)(v53 + 32) = v52;
        *(void *)(v53 + 40) = v51;
        char v54 = (objc_class *)type metadata accessor for WaitlistResult();
        id v55 = (char *)objc_allocWithZone(v54);
        id v56 = &v55[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_ticket];
        *(void *)id v56 = 0;
        *((void *)v56 + 1) = 0;
        *(void *)&v55[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status] = v50;
        *(void *)&v55[OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_featureIDs] = v53;
        *(void *)(v0 + 80) = v55;
        *(void *)(v0 + 88) = v54;
        swift_bridgeObjectRetain();
        uint64_t v10 = (char *)objc_msgSendSuper2((objc_super *)(v0 + 80), sel_init);
        swift_release();

        goto LABEL_4;
      }
      goto LABEL_42;
    }
  }
  uint64_t v25 = (*(uint64_t (**)(void, void))(*(void *)(v0 + 144) + OBJC_IVAR___CSFTicketManager_getCachedTicket))(*(void *)(v0 + 128), *(void *)(v0 + 136));
  *(void *)(v0 + 192) = v25;
  if (v25)
  {
    uint64_t v10 = (char *)v25;
    uint64_t v26 = OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status;
    BOOL v27 = *(void **)(v25 + OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status);
    uint64_t v28 = (objc_class *)type metadata accessor for TicketStatus();
    objc_allocWithZone(v28);
    id v29 = v27;
    id result = TicketStatus.init(rawValue:)(0x6465756575716E65, 0xE800000000000000);
    if (!result)
    {
      __break(1u);
      goto LABEL_41;
    }
    unint64_t v30 = result;
    char v31 = sub_1A8D59FA0();

    if (v31)
    {
      if (qword_1E979E448 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_1A8D59A80();
      __swift_project_value_buffer(v32, (uint64_t)qword_1E979F000);
      swift_bridgeObjectRetain_n();
      uint64_t v33 = sub_1A8D59A60();
      os_log_type_t v34 = sub_1A8D59F00();
      BOOL v35 = os_log_type_enabled(v33, v34);
      unint64_t v36 = *(void *)(v0 + 136);
      if (v35)
      {
        uint64_t v65 = *(void *)(v0 + 128);
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        uint64_t v38 = swift_slowAlloc();
        uint64_t v67 = v38;
        *(_DWORD *)uint64_t v37 = 136446210;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 104) = sub_1A8C90120(v65, v36, &v67);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A8C7F000, v33, v34, "Found enqueued ticket for feature ID %{public}s, returning .enqueued ticket.", v37, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v38, -1, -1);
        MEMORY[0x1AD0E6EB0](v37, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      __swift_project_boxed_opaque_existential_1(v7, v7[3]);
      uint64_t v13 = (const char *)0xD00000000000001FLL;
      id v57 = "success=1 cachedTicket=enqueued";
LABEL_39:
      unint64_t v11 = (unint64_t)(v57 - 32) | 0x8000000000000000;
      uint64_t v12 = v8;
      goto LABEL_3;
    }
    uint64_t v39 = *(void **)&v10[v26];
    objc_allocWithZone(v28);
    id v40 = v39;
    id result = TicketStatus.init(rawValue:)(0x657669746361, 0xE600000000000000);
    if (!result)
    {
LABEL_43:
      __break(1u);
      return result;
    }
    unint64_t v41 = result;
    char v42 = sub_1A8D59FA0();

    if (v42)
    {
      if (qword_1E979E448 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_1A8D59A80();
      __swift_project_value_buffer(v43, (uint64_t)qword_1E979F000);
      swift_bridgeObjectRetain_n();
      uint64_t v44 = sub_1A8D59A60();
      os_log_type_t v45 = sub_1A8D59EE0();
      BOOL v46 = os_log_type_enabled(v44, v45);
      unint64_t v47 = *(void *)(v0 + 136);
      if (v46)
      {
        uint64_t v64 = *v2;
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        uint64_t v67 = v49;
        *(_DWORD *)uint64_t v48 = 136446210;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 96) = sub_1A8C90120(v64, v47, &v67);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A8C7F000, v44, v45, "Found active ticket for feature ID %{public}s, returning .active ticket. There was no cached feature so this is unexpected.", v48, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v49, -1, -1);
        MEMORY[0x1AD0E6EB0](v48, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      __swift_project_boxed_opaque_existential_1(v7, v7[3]);
      uint64_t v13 = (const char *)0xD00000000000001DLL;
      id v57 = "success=1 cachedTicket=active";
      goto LABEL_39;
    }
  }
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 144) + OBJC_IVAR___CSFTicketManager_provider), *(void *)(*(void *)(v0 + 144) + OBJC_IVAR___CSFTicketManager_provider + 24));
  *(void *)(v0 + 40) = &type metadata for Device;
  *(void *)(v0 + 48) = &protocol witness table for Device;
  id result = (id)MobileGestalt_get_current_device();
  if (!result)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  char v58 = result;
  char deviceSupportsGenerativeModelSystems = MobileGestalt_get_deviceSupportsGenerativeModelSystems();

  *(unsigned char *)(v0 + 16) = deviceSupportsGenerativeModelSystems;
  uint64_t v60 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v60;
  *uint64_t v60 = v0;
  v60[1] = sub_1A8CD7148;
  uint64_t v62 = *(void *)(v0 + 128);
  uint64_t v61 = *(void *)(v0 + 136);
  return (id)sub_1A8D08374(v62, v61, v0 + 16, v0 + 216);
}

uint64_t sub_1A8CD7148(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 208) = a1;
  swift_task_dealloc();
  if (v1)
  {
    *(unsigned char *)(v3 + 217) = *(unsigned char *)(v3 + 216);
    uint64_t v4 = sub_1A8CD7370;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v3 + 16);
    uint64_t v4 = sub_1A8CD726C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1A8CD726C()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = (void *)(v0[18] + v0[22]);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  if (v1)
  {
    unint64_t v3 = 0x80000001A8D64590;
    uint64_t v4 = v0[23];
    unint64_t v5 = 0xD000000000000023;
  }
  else
  {
    uint64_t v4 = v0[23];
    unint64_t v5 = 0x3D73736563637573;
    unint64_t v3 = 0xE900000000000031;
  }
  sub_1A8CE2358(1, v4, (const char *)v5, v3);
  swift_release();
  uint64_t v6 = v0[26];
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  return v7(v6);
}

uint64_t sub_1A8CD7370()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 217);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v6 = (void *)(*(void *)(v0 + 144) + *(void *)(v0 + 176));
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1A8D5A0C0();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 112) = v1;
  sub_1A8D5A360();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  sub_1A8CE2358(1, v2, (const char *)0xD000000000000014, 0x80000001A8D64570);
  swift_bridgeObjectRelease();
  sub_1A8CD8D1C();
  swift_allocError();
  *uint64_t v7 = v1;
  swift_willThrow();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1A8CD766C(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_1A8D59BF0();
  uint64_t v7 = v6;
  v3[4] = v6;
  a3;
  uint64_t v8 = (void *)swift_task_alloc();
  void v3[5] = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1A8CD7740;
  return sub_1A8CD66F0(v5, v7);
}

uint64_t sub_1A8CD7740(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void **)(*v2 + 16);
  uint64_t v7 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  uint64_t v8 = *(void (***)(void, void, void))(v5 + 24);
  if (v3)
  {
    uint64_t v9 = (void *)sub_1A8D59540();

    ((void (**)(void, void, void *))v8)[2](v8, 0, v9);
    _Block_release(v8);
  }
  else
  {
    ((void (**)(void, void *, void))v8)[2](v8, a1, 0);
    _Block_release(v8);
  }
  uint64_t v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

id TicketManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void TicketManager.init()()
{
}

id TicketManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TicketManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1A8CD7A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9)
{
  v26[3] = type metadata accessor for XPCCaller();
  v26[4] = &off_1EFF56768;
  v26[0] = a1;
  uint64_t v17 = sub_1A8D59A00();
  v25[3] = v17;
  v25[4] = (uint64_t)&off_1EFF56B98;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(boxed_opaque_existential_1, a8, v17);
  sub_1A8C91CA8((uint64_t)v26, (uint64_t)&a9[OBJC_IVAR___CSFTicketManager_provider]);
  uint64_t v19 = &a9[OBJC_IVAR___CSFTicketManager_getCachedFeature];
  *(void *)uint64_t v19 = a2;
  *((void *)v19 + 1) = a3;
  uint64_t v20 = &a9[OBJC_IVAR___CSFTicketManager_getCachedTicket];
  *(void *)uint64_t v20 = a4;
  *((void *)v20 + 1) = a5;
  os_log_type_t v21 = &a9[OBJC_IVAR___CSFTicketManager_getTicketMock];
  *(void *)os_log_type_t v21 = a6;
  *((void *)v21 + 1) = a7;
  sub_1A8C91CA8((uint64_t)v25, (uint64_t)&a9[OBJC_IVAR___CSFTicketManager_signposter]);
  v24.receiver = a9;
  v24.super_class = (Class)type metadata accessor for TicketManager();
  id v22 = objc_msgSendSuper2(&v24, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  return v22;
}

id sub_1A8CD7BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v33 = type metadata accessor for XPCCaller();
  os_log_type_t v34 = &off_1EFF56768;
  v32[0] = a1;
  uint64_t v16 = sub_1A8D59A00();
  uint64_t v30 = v16;
  char v31 = &off_1EFF56B98;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v29);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(boxed_opaque_existential_1, a8, v16);
  uint64_t v18 = (char *)objc_allocWithZone((Class)type metadata accessor for TicketManager());
  uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
  MEMORY[0x1F4188790](v19, v19);
  os_log_type_t v21 = (uint64_t *)((char *)v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
  MEMORY[0x1F4188790](v23, v23);
  uint64_t v25 = (char *)v29 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v26 + 16))(v25);
  id v27 = sub_1A8CD7A4C(*v21, a2, a3, a4, a5, a6, a7, (uint64_t)v25, v18);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  return v27;
}

uint64_t sub_1A8CD7DF0(uint64_t a1, uint64_t a2)
{
  v2[16] = a1;
  v2[17] = a2;
  uint64_t v3 = sub_1A8D59A80();
  v2[18] = v3;
  v2[19] = *(void *)(v3 - 8);
  v2[20] = swift_task_alloc();
  uint64_t v4 = sub_1A8D59A00();
  v2[21] = v4;
  v2[22] = *(void *)(v4 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CD7F1C, 0, 0);
}

uint64_t sub_1A8CD7F1C()
{
  id v1 = sub_1A8C8E338();
  v0[25] = v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1A8CD8020;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A8CF80E0;
  v0[13] = &block_descriptor_80;
  v0[14] = v2;
  objc_msgSend(v1, sel_aa_primaryAppleAccountWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A8CD8020()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 208) = v1;
  if (v1) {
    uint64_t v2 = sub_1A8CD9984;
  }
  else {
    uint64_t v2 = sub_1A8CD8130;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CD8130()
{
  uint64_t v1 = *(void **)(v0 + 120);
  if (v1
    && (id v2 = objc_msgSend(*(id *)(v0 + 120), sel_aa_altDSID), v1, v2))
  {
    uint64_t v3 = sub_1A8D59BF0();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }

  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v5;
  id v7 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  if (qword_1E979E458 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)(v0 + 184);
  uint64_t v8 = *(void *)(v0 + 192);
  uint64_t v10 = *(void *)(v0 + 168);
  uint64_t v11 = *(void *)(v0 + 176);
  uint64_t v13 = *(void *)(v0 + 152);
  uint64_t v12 = *(void *)(v0 + 160);
  uint64_t v14 = *(void *)(v0 + 144);
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1E979F018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v15, v14);
  sub_1A8D599E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v8, v10);
  id v16 = v7;
  *(void *)(v0 + 216) = sub_1A8CD7BA4((uint64_t)v16, (uint64_t)sub_1A8CD4DD4, 0, (uint64_t)sub_1A8CD9988, v6, (uint64_t)sub_1A8CD4DD8, 0, v9);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v10);

  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_1A8CD8388;
  uint64_t v19 = *(void *)(v0 + 128);
  uint64_t v18 = *(void *)(v0 + 136);
  return sub_1A8CD56A0(v19, v18);
}

uint64_t sub_1A8CD8388(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 232) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1A8CD9994, 0, 0);
  }
  else
  {

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1A8CD84FC(uint64_t a1, uint64_t a2)
{
  v2[16] = a1;
  v2[17] = a2;
  uint64_t v3 = sub_1A8D59A80();
  v2[18] = v3;
  v2[19] = *(void *)(v3 - 8);
  v2[20] = swift_task_alloc();
  uint64_t v4 = sub_1A8D59A00();
  v2[21] = v4;
  v2[22] = *(void *)(v4 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CD8628, 0, 0);
}

uint64_t sub_1A8CD8628()
{
  id v1 = sub_1A8C8E338();
  v0[25] = v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1A8CD872C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A8CF80E0;
  v0[13] = &block_descriptor_0;
  v0[14] = v2;
  objc_msgSend(v1, sel_aa_primaryAppleAccountWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A8CD872C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 208) = v1;
  if (v1) {
    uint64_t v2 = sub_1A8CD8C08;
  }
  else {
    uint64_t v2 = sub_1A8CD883C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CD883C()
{
  uint64_t v1 = *(void **)(v0 + 120);
  if (v1
    && (id v2 = objc_msgSend(*(id *)(v0 + 120), sel_aa_altDSID), v1, v2))
  {
    uint64_t v3 = sub_1A8D59BF0();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }

  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v5;
  id v7 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  if (qword_1E979E458 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)(v0 + 184);
  uint64_t v8 = *(void *)(v0 + 192);
  uint64_t v10 = *(void *)(v0 + 168);
  uint64_t v11 = *(void *)(v0 + 176);
  uint64_t v13 = *(void *)(v0 + 152);
  uint64_t v12 = *(void *)(v0 + 160);
  uint64_t v14 = *(void *)(v0 + 144);
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1E979F018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v15, v14);
  sub_1A8D599E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v8, v10);
  id v16 = v7;
  *(void *)(v0 + 216) = sub_1A8CD7BA4((uint64_t)v16, (uint64_t)sub_1A8CD4DD4, 0, (uint64_t)sub_1A8CD9970, v6, (uint64_t)sub_1A8CD4DD8, 0, v9);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v10);

  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_1A8CD8A94;
  uint64_t v19 = *(void *)(v0 + 128);
  uint64_t v18 = *(void *)(v0 + 136);
  return sub_1A8CD66F0(v19, v18);
}

uint64_t sub_1A8CD8A94(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 232) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1A8CD8C94, 0, 0);
  }
  else
  {

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1A8CD8C08()
{
  uint64_t v1 = *(void **)(v0 + 200);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1A8CD8C94()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1A8CD8D1C()
{
  unint64_t result = qword_1E979ED30;
  if (!qword_1E979ED30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E979ED30);
  }
  return result;
}

uint64_t type metadata accessor for TicketManager()
{
  return self;
}

unint64_t sub_1A8CD8D98()
{
  unint64_t result = qword_1E979ED40[0];
  if (!qword_1E979ED40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E979ED40);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TicketManagerError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TicketManagerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8CD8F48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TicketManagerError()
{
  return &type metadata for TicketManagerError;
}

uint64_t sub_1A8CD8F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 8)
                                                                                     + **(int **)(a6 + 8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1A8CD998C;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1A8CD90A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 16)
                                                                                     + **(int **)(a6 + 16));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1A8CD998C;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t method lookup function for TicketManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TicketManager);
}

uint64_t dispatch thunk of TicketManager.signupForWaitlist(featureID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x80);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *BOOL v7 = v3;
  v7[1] = sub_1A8CD998C;
  return v9(a1, a2);
}

uint64_t dispatch thunk of TicketManager.getWaitlistStatus(featureID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x88);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *BOOL v7 = v3;
  v7[1] = sub_1A8C99788;
  return v9(a1, a2);
}

uint64_t sub_1A8CD941C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  unsigned int v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A8C81A88;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_1E979ED68 + dword_1E979ED68);
  return v6(v2, v3, v4);
}

uint64_t sub_1A8CD94D4()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  unsigned int v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A8C81A88;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1E979F468 + dword_1E979F468);
  return v6(v2, v3, v4);
}

uint64_t sub_1A8CD9598(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *BOOL v7 = v2;
  v7[1] = sub_1A8C81A88;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1E979F470 + dword_1E979F470);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1A8CD9668()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A8C81A88;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_1E979ED88 + dword_1E979ED88);
  return v6(v2, v3, v4);
}

uint64_t sub_1A8CD9728()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1A8C81994;
  uint64_t v5 = (uint64_t (*)(int, void *))((char *)&dword_1E979EDA8 + dword_1E979EDA8);
  return v5(v2, v3);
}

uint64_t objectdestroy_46Tm()
{
  _Block_release(*(const void **)(v0 + 24));
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A8CD9828()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1A8C81A88;
  uint64_t v5 = (uint64_t (*)(int, void *))((char *)&dword_1E979EDC8 + dword_1E979EDC8);
  return v5(v2, v3);
}

unint64_t sub_1A8CD98E4()
{
  unint64_t result = qword_1E979EDE8[0];
  if (!qword_1E979EDE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E979EDE8);
  }
  return result;
}

uint64_t sub_1A8CD9938()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A8CD9970(uint64_t a1, uint64_t a2)
{
  return sub_1A8CD4DDC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1A8CD9998(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  **(void **)(*(void *)(v2 + 64) + 40) = a2;
  id v3 = a2;
  return MEMORY[0x1F41881F8](v2);
}

uint64_t sub_1A8CD99EC(char a1)
{
  *(unsigned char *)(v1 + 88) = a1;
  return MEMORY[0x1F4188298](sub_1A8CD9A0C, 0, 0);
}

uint64_t sub_1A8CD9A0C()
{
  char v1 = *(unsigned char *)(v0 + 88);
  uint64_t v2 = (objc_class *)type metadata accessor for XPCCaller();
  id v3 = objc_msgSend(objc_allocWithZone(v2), sel_init);
  *(void *)(v0 + 40) = v2;
  *(void *)(v0 + 48) = &off_1EFF55120;
  *(void *)(v0 + 16) = v3;
  uint64_t v4 = *__swift_project_boxed_opaque_existential_1((void *)(v0 + 16), (uint64_t)v2);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = 0x6C6C2E64756F6C63;
  *(void *)(v5 + 32) = 0xE90000000000006DLL;
  *(unsigned char *)(v5 + 40) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v6;
  uint64_t v7 = type metadata accessor for CloudFeature();
  *uint64_t v6 = v0;
  v6[1] = sub_1A8CD9B6C;
  return MEMORY[0x1F4188160](v0 + 56, 0, 0, 0xD00000000000001FLL, 0x80000001A8D64940, sub_1A8C92C3C, v5, v7);
}

uint64_t sub_1A8CD9B6C()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8CD9CF4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A8CD9C88;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CD9C88()
{
  uint64_t v1 = *(void *)(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1A8CD9CF4()
{
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CD9D64(char a1)
{
  uint64_t v5 = (uint64_t (*)(char))((char *)&dword_1E979F5B0 + dword_1E979F5B0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A8C98E68;
  return v5(a1);
}

id sub_1A8CD9E0C()
{
  return sub_1A8CD9E3C();
}

id sub_1A8CD9E20()
{
  return sub_1A8CD9E3C();
}

id sub_1A8CD9E3C()
{
  if ((sub_1A8D419C0() & 1) == 0) {
    return 0;
  }
  if (qword_1EB5EA2D8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB5EA2D0;
  uint64_t v1 = (void *)sub_1A8D59BC0();
  id v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

uint64_t sub_1A8CD9EE0()
{
  return MEMORY[0x1F4188298](sub_1A8CD9EFC, 0, 0);
}

uint64_t sub_1A8CD9EFC()
{
  if (qword_1EB5EA128 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1EB5EA140;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1A8CDA02C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A8D2534C;
  v0[13] = &block_descriptor_31;
  v0[14] = v2;
  objc_msgSend(v1, sel_assetStatusWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A8CDA02C()
{
  return MEMORY[0x1F4188298](sub_1A8CDA10C, 0, 0);
}

uint64_t sub_1A8CDA10C()
{
  if (*(unsigned char *)(v0 + 121)) {
    int v1 = 256;
  }
  else {
    int v1 = 0;
  }
  return (*(uint64_t (**)(void))(v0 + 8))(v1 | *(unsigned __int8 *)(v0 + 120));
}

uint64_t static AvailabilityManager.shared.getter()
{
  type metadata accessor for AvailabilityManager();
  return swift_initStaticObject();
}

uint64_t type metadata accessor for AvailabilityManager()
{
  return self;
}

void sub_1A8CDA18C(uint64_t a1@<X8>)
{
  uint64_t v25 = 0;
  __int16 v26 = 256;
  id v2 = objc_msgSend(self, sel_currentAvailability);
  sub_1A8C9C118(v2, (uint64_t)&v25, (uint64_t)&v27);
  char v3 = BYTE1(v27);
  char v4 = BYTE2(v27);
  uint64_t v5 = v28;
  char v23 = v29;
  char v24 = v27;
  uint64_t v6 = v31;
  uint64_t v22 = v30;
  if (qword_1E979E470 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1A8D59A80();
  __swift_project_value_buffer(v7, (uint64_t)qword_1E979F060);
  id v8 = v2;
  swift_bridgeObjectRetain_n();
  id v9 = v8;
  uint64_t v10 = sub_1A8D59A60();
  os_log_type_t v11 = sub_1A8D59F00();
  if (os_log_type_enabled(v10, v11))
  {
    char v21 = v4;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v25 = v20;
    *(_DWORD *)uint64_t v12 = 136315650;
    os_log_t log = v10;
    uint64_t v27 = sub_1A8C90120(0x2928646568636163, 0xE800000000000000, &v25);
    sub_1A8D59FE0();
    *(_WORD *)(v12 + 12) = 2080;
    LOBYTE(v27) = v24;
    BYTE1(v27) = v3;
    BYTE2(v27) = v21;
    uint64_t v28 = v5;
    char v29 = v23;
    uint64_t v30 = v22;
    uint64_t v31 = v6;
    uint64_t v13 = AvailabilityModel.description.getter();
    uint64_t v27 = sub_1A8C90120(v13, v14, &v25);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 22) = 2112;
    uint64_t v27 = (uint64_t)v9;
    id v15 = v9;
    char v16 = v24;
    sub_1A8D59FE0();
    void *v19 = v9;

    _os_log_impl(&dword_1A8C7F000, log, v11, "%s: Returning AvailabilityModel %s, from csfAvailability %@", (uint8_t *)v12, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v19, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v20, -1, -1);
    uint64_t v17 = v12;
    char v4 = v21;
    MEMORY[0x1AD0E6EB0](v17, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    char v16 = v24;
  }
  *(unsigned char *)a1 = v16;
  *(unsigned char *)(a1 + 1) = v3;
  *(unsigned char *)(a1 + 2) = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v23;
  *(void *)(a1 + 24) = v22;
  *(void *)(a1 + 32) = v6;
}

uint64_t sub_1A8CDA4F4(uint64_t a1)
{
  *(void *)(v1 + 128) = a1;
  return MEMORY[0x1F4188298](sub_1A8CDA514, 0, 0);
}

uint64_t sub_1A8CDA514()
{
  uint64_t v1 = self;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1A8CDA61C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A8CD9998;
  v0[13] = &block_descriptor_1;
  v0[14] = v2;
  objc_msgSend(v1, sel_currentAvailabilityWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A8CDA61C()
{
  return MEMORY[0x1F4188298](sub_1A8CDA6FC, 0, 0);
}

uint64_t sub_1A8CDA6FC()
{
  uint64_t v37 = v0;
  uint64_t v1 = (void *)v0[15];
  uint64_t v28 = 0;
  __int16 v29 = 256;
  id v2 = v1;
  sub_1A8C9C118(v2, (uint64_t)&v28, (uint64_t)&v30);
  char v3 = v31;
  char v26 = v32;
  char v27 = v30;
  uint64_t v25 = v33;
  char v4 = v34;
  uint64_t v5 = v35;
  uint64_t v6 = v36;
  if (qword_1E979E470 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1A8D59A80();
  __swift_project_value_buffer(v7, (uint64_t)qword_1E979F060);
  id v8 = v2;
  swift_bridgeObjectRetain_n();
  id v9 = v8;
  uint64_t v10 = sub_1A8D59A60();
  os_log_type_t v11 = sub_1A8D59F00();
  if (os_log_type_enabled(v10, v11))
  {
    char v24 = v4;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v28 = v23;
    *(_DWORD *)uint64_t v12 = 136315650;
    os_log_t log = v10;
    v0[10] = sub_1A8C90120(0x29286863746566, 0xE700000000000000, &v28);
    sub_1A8D59FE0();
    *(_WORD *)(v12 + 12) = 2080;
    char v30 = v27;
    char v31 = v3;
    char v32 = v26;
    uint64_t v33 = v25;
    char v34 = v24;
    uint64_t v35 = v5;
    uint64_t v36 = v6;
    uint64_t v13 = AvailabilityModel.description.getter();
    v0[10] = sub_1A8C90120(v13, v14, &v28);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 22) = 2112;
    v0[10] = v9;
    id v15 = v9;
    char v16 = v27;
    sub_1A8D59FE0();
    void *v22 = v9;

    _os_log_impl(&dword_1A8C7F000, log, v11, "%s: Returning AvailabilityModel %s, from csfAvailability %@", (uint8_t *)v12, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v22, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v23, -1, -1);
    uint64_t v17 = v12;
    char v4 = v24;
    MEMORY[0x1AD0E6EB0](v17, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    char v16 = v27;
  }
  uint64_t v18 = v0[16];
  *(unsigned char *)uint64_t v18 = v16;
  *(unsigned char *)(v18 + 1) = v3;
  *(unsigned char *)(v18 + 2) = v26;
  *(void *)(v18 + 8) = v25;
  *(unsigned char *)(v18 + 16) = v4;
  *(void *)(v18 + 24) = v5;
  *(void *)(v18 + 32) = v6;
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_1A8CDAA84(char a1)
{
  *(void *)(v2 + 48) = v1;
  *(unsigned char *)(v2 + 76) = a1;
  return MEMORY[0x1F4188298](sub_1A8CDAAA8, 0, 0);
}

uint64_t sub_1A8CDAAA8()
{
  uint64_t v17 = v0;
  if ((*(uint64_t (**)(void))(*(void *)(v0 + 48) + 48))())
  {
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1A8D59A80();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9318);
    uint64_t v2 = sub_1A8D59A60();
    os_log_type_t v3 = sub_1A8D59F00();
    if (os_log_type_enabled(v2, v3))
    {
      char v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = swift_slowAlloc();
      uint64_t v16 = v5;
      *(_DWORD *)char v4 = 136315138;
      *(void *)(v0 + 40) = sub_1A8C90120(0xD00000000000001DLL, 0x80000001A8D646E0, &v16);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v2, v3, "%s Eligibility bypass is set to YES. Overriding access status to true.", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v5, -1, -1);
      MEMORY[0x1AD0E6EB0](v4, -1, -1);
    }

    uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v6(1);
  }
  else
  {
    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1A8D59A80();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EB5EAEE0);
    id v9 = sub_1A8D59A60();
    os_log_type_t v10 = sub_1A8D59F00();
    if (os_log_type_enabled(v9, v10))
    {
      int v11 = *(unsigned __int8 *)(v0 + 76);
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 67109120;
      *(_DWORD *)(v0 + 72) = v11;
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v9, v10, "Requesting feature ignoreCache %{BOOL}d", v12, 8u);
      MEMORY[0x1AD0E6EB0](v12, -1, -1);
    }

    id v15 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)(v0 + 48) + 16)
                                          + **(int **)(*(void *)(v0 + 48) + 16));
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1A8CDAE20;
    uint64_t v14 = *(unsigned __int8 *)(v0 + 76);
    return v15(v14);
  }
}

uint64_t sub_1A8CDAE20(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6(0);
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    return MEMORY[0x1F4188298](sub_1A8CDAF70, 0, 0);
  }
}

uint64_t sub_1A8CDAF70()
{
  uint64_t v1 = *(char **)(v0 + 64);
  uint64_t v2 = &v1[OBJC_IVAR___CloudFeature_canUse];
  swift_beginAccess();
  uint64_t v3 = *v2;

  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_1A8CDB000(char a1)
{
  *(void *)(v2 + 64) = v1;
  *(unsigned char *)(v2 + 120) = a1;
  return MEMORY[0x1F4188298](sub_1A8CDB024, 0, 0);
}

uint64_t sub_1A8CDB024()
{
  uint64_t v58 = v0;
  uint64_t v1 = sub_1A8D59720();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = swift_task_alloc();
  sub_1A8D59710();
  uint64_t v4 = sub_1A8D59700();
  unint64_t v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  uint64_t v8 = sub_1A8C91D0C(8, v4, v6, v7);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v15 = MEMORY[0x1AD0E5BA0](v8, v10, v12, v14);
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 72) = v15;
  *(void *)(v0 + 80) = v17;
  if (qword_1E979E470 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1A8D59A80();
  *(void *)(v0 + 88) = __swift_project_value_buffer(v18, (uint64_t)qword_1E979F060);
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_1A8D59A60();
  os_log_type_t v20 = sub_1A8D59F00();
  if (os_log_type_enabled(v19, v20))
  {
    char v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)char v21 = 136446210;
    uint64_t v55 = v22;
    uint64_t v56 = 91;
    unint64_t v57 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    sub_1A8D59CA0();
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 56) = sub_1A8C90120(91, 0xE100000000000000, &v55);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v19, v20, "%{public}s Start", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v22, -1, -1);
    MEMORY[0x1AD0E6EB0](v21, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if ((*(uint64_t (**)(void))(*(void *)(v0 + 64) + 64))())
  {
    uint64_t v53 = (uint64_t *)(v0 + 40);
    if (qword_1E979E438 != -1) {
      swift_once();
    }
    uint64_t v23 = qword_1E97A8B28;
    int64_t v24 = *(void *)(qword_1E97A8B28 + 16);
    uint64_t v25 = MEMORY[0x1E4FBC860];
    if (v24)
    {
      uint64_t v52 = v0;
      uint64_t v56 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1A8CB65DC(0, v24, 0);
      uint64_t v25 = v56;
      unint64_t v26 = *(void *)(v56 + 16);
      uint64_t v27 = 24 * v26 + 48;
      uint64_t v28 = (uint64_t *)(v23 + 40);
      do
      {
        uint64_t v29 = *(v28 - 1);
        uint64_t v30 = *v28;
        uint64_t v56 = v25;
        int64_t v31 = v26 + 1;
        unint64_t v32 = *(void *)(v25 + 24);
        swift_bridgeObjectRetain();
        if (v26 >= v32 >> 1)
        {
          sub_1A8CB65DC(v32 > 1, v31, 1);
          uint64_t v25 = v56;
        }
        *(void *)(v25 + 16) = v31;
        uint64_t v33 = (unsigned char *)(v25 + v27);
        *((void *)v33 - 2) = v29;
        *((void *)v33 - 1) = v30;
        *uint64_t v33 = 1;
        v27 += 24;
        v28 += 2;
        ++v26;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
      uint64_t v0 = v52;
    }
    if (*(void *)(v25 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9900);
      uint64_t v38 = sub_1A8D5A1F0();
    }
    else
    {
      uint64_t v38 = MEMORY[0x1E4FBC868];
    }
    uint64_t v56 = v38;
    uint64_t v42 = swift_bridgeObjectRetain();
    sub_1A8CDD738(v42, 1, &v56);
    swift_bridgeObjectRelease();
    uint64_t v43 = v56;
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1A8D59A60();
    os_log_type_t v45 = sub_1A8D59F00();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 136446466;
      uint64_t v55 = v47;
      uint64_t v56 = 91;
      unint64_t v57 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_1A8D59CA0();
      sub_1A8D59CA0();
      swift_bridgeObjectRetain();
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      *uint64_t v53 = sub_1A8C90120(v56, v57, &v55);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v46 + 12) = 2082;
      swift_retain();
      uint64_t v48 = sub_1A8D59B40();
      unint64_t v50 = v49;
      swift_release();
      *(void *)(v0 + 48) = sub_1A8C90120(v48, v50, &v55);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1A8C7F000, v44, v45, "%{public}s Bypass is enabled, returning %{public}s", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v47, -1, -1);
      MEMORY[0x1AD0E6EB0](v46, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();
    }

    uint64_t v51 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v51(v43);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    char v34 = sub_1A8D59A60();
    os_log_type_t v35 = sub_1A8D59F00();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136446210;
      uint64_t v55 = v37;
      uint64_t v56 = 91;
      unint64_t v57 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_1A8D59CA0();
      sub_1A8D59CA0();
      swift_bridgeObjectRetain();
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 32) = sub_1A8C90120(v56, v57, &v55);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v34, v35, "%{public}s Fetching feature access...", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v37, -1, -1);
      MEMORY[0x1AD0E6EB0](v36, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    char v54 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)(v0 + 64) + 32)
                                          + **(int **)(*(void *)(v0 + 64) + 32));
    uint64_t v39 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v39;
    *uint64_t v39 = v0;
    v39[1] = sub_1A8CDB9CC;
    uint64_t v40 = *(unsigned __int8 *)(v0 + 120);
    return v54(v40);
  }
}

uint64_t sub_1A8CDB9CC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v5 = sub_1A8CDBDB4;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    unint64_t v5 = sub_1A8CDBAF4;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1A8CDBAF4()
{
  uint64_t v12 = v0;
  uint64_t v1 = sub_1A8D41A98(v0[14]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v11[0] = v10;
    *(_DWORD *)uint64_t v4 = 136446466;
    v11[1] = 91;
    v11[2] = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    sub_1A8D59CA0();
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    v0[2] = sub_1A8C90120(91, 0xE100000000000000, v11);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1A8D59B40();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[3] = sub_1A8C90120(v5, v7, v11);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v2, v3, "%{public}s Returning %{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    MEMORY[0x1AD0E6EB0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
  return v8(v1);
}

uint64_t sub_1A8CDBDB4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8CDBE18(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1A8CDBE38, 0, 0);
}

uint64_t sub_1A8CDBE38()
{
  uint64_t v11 = v0;
  if ((*(uint64_t (**)(void))(*(void *)(v0 + 32) + 48))())
  {
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1A8D59A80();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9318);
    uint64_t v2 = sub_1A8D59A60();
    os_log_type_t v3 = sub_1A8D59F00();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = swift_slowAlloc();
      uint64_t v10 = v5;
      *(_DWORD *)uint64_t v4 = 136315138;
      *(void *)(v0 + 16) = sub_1A8C90120(0xD000000000000010, 0x80000001A8D64750, &v10);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v2, v3, "%s Eligibility bypass is set to YES. Overriding asset status to available.", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v5, -1, -1);
      MEMORY[0x1AD0E6EB0](v4, -1, -1);
    }

    **(void **)(v0 + 24) = 0;
    unint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  else
  {
    uint64_t v9 = (uint64_t (*)(void))(*(void *)(*(void *)(v0 + 32) + 80) + **(int **)(*(void *)(v0 + 32) + 80));
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 40) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1A8CDC0B8;
    return v9();
  }
}

uint64_t sub_1A8CDC0B8(__int16 a1)
{
  *(_WORD *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8CDC1B8, 0, 0);
}

uint64_t sub_1A8CDC1B8()
{
  __int16 v1 = *(_WORD *)(v0 + 48);
  if ((v1 & 0x100) != 0) {
    uint64_t v2 = (v1 & 1) == 0;
  }
  else {
    uint64_t v2 = ((v1 & 1) == 0) | 2;
  }
  **(void **)(v0 + 24) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

CloudSubscriptionFeatures::AvailabilityManager::AssetUnavailableReasons __swiftcall AvailabilityManager.AssetUnavailableReasons.init(rawValue:)(CloudSubscriptionFeatures::AvailabilityManager::AssetUnavailableReasons rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t AvailabilityManager.AssetUnavailableReasons.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t AvailabilityManager.AssetUnavailableReasons.rawValue.setter(uint64_t result)
{
  *__int16 v1 = result;
  return result;
}

uint64_t (*AvailabilityManager.AssetUnavailableReasons.rawValue.modify())()
{
  return nullsub_1;
}

void static AvailabilityManager.AssetUnavailableReasons.assetIsNotReady.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static AvailabilityManager.AssetUnavailableReasons.shortOfStorage.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void *static AvailabilityManager.AssetUnavailableReasons.allCases.getter()
{
  return &unk_1EFF558B0;
}

unint64_t AvailabilityManager.AssetUnavailableReasons.description.getter()
{
  uint64_t v1 = *v0;
  if (!*v0) {
    return 0xD000000000000013;
  }
  if (v1) {
    sub_1A8D59CA0();
  }
  if ((v1 & 2) != 0) {
    sub_1A8D59CA0();
  }
  sub_1A8D59CA0();
  return 0xD000000000000016;
}

void sub_1A8CDC308(void *a1@<X8>)
{
  *a1 = &unk_1EFF558E0;
}

uint64_t AvailabilityManager.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t AvailabilityManager.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186488](v0, 96, 7);
}

uint64_t static Availability.current.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for AvailabilityManager();
  swift_initStaticObject();
  sub_1A8CDA18C((uint64_t)v6);
  BOOL v2 = v7;
  int v3 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  BOOL v5 = v2;
  if (!v3) {
    BOOL v5 = v2;
  }
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v3;
  return result;
}

uint64_t static Availability.current()(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  type metadata accessor for AvailabilityManager();
  swift_initStaticObject();
  BOOL v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v2;
  *BOOL v2 = v1;
  v2[1] = sub_1A8CDC4E8;
  v2[16] = v1 + 16;
  return MEMORY[0x1F4188298](sub_1A8CDA514, 0, 0);
}

uint64_t sub_1A8CDC4E8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8CDC5E4, 0, 0);
}

uint64_t sub_1A8CDC5E4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  int v2 = *(unsigned __int8 *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 56);
  swift_bridgeObjectRelease();
  BOOL v4 = v1 != 0;
  if (!v2) {
    BOOL v4 = v1;
  }
  *(void *)uint64_t v3 = v4;
  *(unsigned char *)(v3 + 8) = v2;
  BOOL v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t Availability.description.getter()
{
  uint64_t v1 = *v0;
  if (*((unsigned char *)v0 + 8) == 1)
  {
    if (v1) {
      return 0x646574696D696CLL;
    }
    else {
      return 0x6C62616C69617661;
    }
  }
  else
  {
    sub_1A8D5A0C0();
    swift_bridgeObjectRelease();
    CSFUnavailabilityReasons.description.getter(v1);
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    return 0xD000000000000016;
  }
}

uint64_t Availability.shouldShowGM.getter()
{
  type metadata accessor for AvailabilityManager();
  swift_initStaticObject();
  sub_1A8CDA18C((uint64_t)v2);
  uint64_t v0 = v2[0];
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Availability.hash(into:)()
{
  if (*(unsigned char *)(v0 + 8) != 1) {
    sub_1A8D5A4B0();
  }
  return sub_1A8D5A4B0();
}

uint64_t static Availability.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(unsigned __int8 *)(a2 + 8);
  unsigned int v3 = (*(void *)a1 == *(void *)a2) & ~v2;
  if (*(void *)a2) {
    unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  }
  else {
    unsigned int v4 = 0;
  }
  if (*(void *)a2) {
    unsigned int v2 = 0;
  }
  if (*(void *)a1) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = v2;
  }
  if (*(unsigned char *)(a1 + 8) == 1) {
    return v5;
  }
  else {
    return v3;
  }
}

uint64_t sub_1A8CDC80C()
{
  return 0;
}

uint64_t sub_1A8CDC818(uint64_t a1)
{
  unint64_t v2 = sub_1A8CDDBB8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8CDC854(uint64_t a1)
{
  unint64_t v2 = sub_1A8CDDBB8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A8CDC890()
{
  uint64_t v1 = 0x646574696D696CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x616C696176616E75;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C62616C69617661;
  }
}

uint64_t sub_1A8CDC8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A8CDE9BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A8CDC920(uint64_t a1)
{
  unint64_t v2 = sub_1A8CDDABC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8CDC95C(uint64_t a1)
{
  unint64_t v2 = sub_1A8CDDABC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A8CDC998@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1A8CDC9C8(uint64_t a1)
{
  unint64_t v2 = sub_1A8CDDB64();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8CDCA04(uint64_t a1)
{
  unint64_t v2 = sub_1A8CDDB64();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A8CDCA40()
{
  return 0x736E6F73616572;
}

uint64_t sub_1A8CDCA58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x736E6F73616572 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A8D5A390();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A8CDCAF0(uint64_t a1)
{
  unint64_t v2 = sub_1A8CDDB10();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8CDCB2C(uint64_t a1)
{
  unint64_t v2 = sub_1A8CDDB10();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Availability.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EE30);
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v30 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EE38);
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v27 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EE40);
  uint64_t v25 = *(void *)(v10 - 8);
  uint64_t v26 = v10;
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EE48);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *v2;
  int v20 = *((unsigned __int8 *)v2 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8CDDABC();
  sub_1A8D5A510();
  if (v20 == 1)
  {
    if (v19)
    {
      char v35 = 1;
      sub_1A8CDDB64();
      char v21 = v27;
      sub_1A8D5A2E0();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v29);
    }
    else
    {
      char v34 = 0;
      sub_1A8CDDBB8();
      sub_1A8D5A2E0();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  else
  {
    char v36 = 2;
    sub_1A8CDDB10();
    uint64_t v22 = v30;
    sub_1A8D5A2E0();
    uint64_t v33 = v19;
    type metadata accessor for UnavailabilityReasons(0);
    sub_1A8C9E5F4(&qword_1E979EE60);
    uint64_t v23 = v32;
    sub_1A8D5A340();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
}

uint64_t Availability.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A8D5A4A0();
  if (v1 != 1) {
    sub_1A8D5A4B0();
  }
  sub_1A8D5A4B0();
  return sub_1A8D5A4D0();
}

uint64_t Availability.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EE78);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  uint64_t v43 = v4;
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v46 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EE80);
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EE88);
  uint64_t v45 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EE90);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v17);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  uint64_t v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_1A8CDDABC();
  uint64_t v21 = v48;
  sub_1A8D5A4F0();
  if (!v21)
  {
    uint64_t v39 = v11;
    uint64_t v23 = v45;
    uint64_t v22 = v46;
    uint64_t v48 = v16;
    uint64_t v24 = sub_1A8D5A2C0();
    if (*(void *)(v24 + 16) == 1)
    {
      if (*(unsigned char *)(v24 + 32))
      {
        if (*(unsigned char *)(v24 + 32) != 1)
        {
          char v52 = 2;
          sub_1A8CDDB10();
          sub_1A8D5A230();
          uint64_t v31 = v15;
          uint64_t v32 = v44;
          type metadata accessor for UnavailabilityReasons(0);
          sub_1A8C9E5F4(&qword_1E979EEA0);
          char v34 = v22;
          uint64_t v35 = v42;
          sub_1A8D5A2B0();
          (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v35);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v31);
          char v36 = 0;
          uint64_t v25 = v49;
          uint64_t v37 = (uint64_t)v47;
LABEL_12:
          *(void *)uint64_t v32 = v25;
          *(unsigned char *)(v32 + 8) = v36;
          return __swift_destroy_boxed_opaque_existential_0(v37);
        }
        char v51 = 1;
        sub_1A8CDDB64();
        sub_1A8D5A230();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v41);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v15);
        uint64_t v25 = 1;
      }
      else
      {
        char v50 = 0;
        sub_1A8CDDBB8();
        sub_1A8D5A230();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v39);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v15);
        uint64_t v25 = 0;
      }
      char v36 = 1;
      uint64_t v37 = (uint64_t)v47;
      uint64_t v32 = v44;
      goto LABEL_12;
    }
    uint64_t v26 = sub_1A8D5A120();
    swift_allocError();
    uint64_t v27 = v19;
    uint64_t v28 = v15;
    uint64_t v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EE98);
    *uint64_t v30 = &type metadata for Availability;
    sub_1A8D5A240();
    sub_1A8D5A110();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v30, *MEMORY[0x1E4FBBA70], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v27, v28);
  }
  uint64_t v37 = (uint64_t)v47;
  return __swift_destroy_boxed_opaque_existential_0(v37);
}

uint64_t sub_1A8CDD5A4()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A8D5A4A0();
  if (v1 != 1) {
    sub_1A8D5A4B0();
  }
  sub_1A8D5A4B0();
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8CDD610()
{
  if (*(unsigned char *)(v0 + 8) != 1) {
    sub_1A8D5A4B0();
  }
  return sub_1A8D5A4B0();
}

uint64_t sub_1A8CDD660()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A8D5A4A0();
  if (v1 != 1) {
    sub_1A8D5A4B0();
  }
  sub_1A8D5A4B0();
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8CDD6C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Availability.init(from:)(a1, a2);
}

uint64_t sub_1A8CDD6E0(void *a1)
{
  return Availability.encode(to:)(a1);
}

uint64_t sub_1A8CDD6FC(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(unsigned __int8 *)(a2 + 8);
  unsigned int v3 = (*(void *)a1 == *(void *)a2) & ~v2;
  if (*(void *)a2) {
    unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  }
  else {
    unsigned int v4 = 0;
  }
  if (*(void *)a2) {
    unsigned int v2 = 0;
  }
  if (*(void *)a1) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = v2;
  }
  if (*(unsigned char *)(a1 + 8) == 1) {
    return v5;
  }
  else {
    return v3;
  }
}

void sub_1A8CDD738(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  char v42 = *(unsigned char *)(a1 + 48);
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1A8C90B9C(v8, v7);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1A8CF21E8();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v21 = (uint64_t *)(v20[6] + 16 * v11);
    *uint64_t v21 = v8;
    v21[1] = v7;
    *(unsigned char *)(v20[7] + v11) = v42;
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    uint64_t v25 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v26 = (unsigned char *)(a1 + 72);
    while (1)
    {
      uint64_t v28 = *((void *)v26 - 2);
      uint64_t v27 = *((void *)v26 - 1);
      char v29 = *v26;
      uint64_t v30 = (void *)*a3;
      swift_bridgeObjectRetain();
      unint64_t v31 = sub_1A8C90B9C(v28, v27);
      uint64_t v33 = v30[2];
      BOOL v34 = (v32 & 1) == 0;
      BOOL v23 = __OFADD__(v33, v34);
      uint64_t v35 = v33 + v34;
      if (v23) {
        break;
      }
      char v36 = v32;
      if (v30[3] < v35)
      {
        sub_1A8CF159C(v35, 1);
        unint64_t v31 = sub_1A8C90B9C(v28, v27);
        if ((v36 & 1) != (v37 & 1)) {
          goto LABEL_25;
        }
      }
      if (v36) {
        goto LABEL_10;
      }
      uint64_t v38 = (void *)*a3;
      *(void *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      uint64_t v39 = (uint64_t *)(v38[6] + 16 * v31);
      *uint64_t v39 = v28;
      v39[1] = v27;
      *(unsigned char *)(v38[7] + v31) = v29;
      uint64_t v40 = v38[2];
      BOOL v23 = __OFADD__(v40, 1);
      uint64_t v41 = v40 + 1;
      if (v23) {
        goto LABEL_24;
      }
      v26 += 24;
      _OWORD v38[2] = v41;
      if (!--v25) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1A8CF159C(v14, a2 & 1);
  unint64_t v16 = sub_1A8C90B9C(v8, v7);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v18 = (void *)swift_allocError();
    swift_willThrow();
    id v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1A8D5A400();
  __break(1u);
LABEL_26:
  sub_1A8D5A0C0();
  sub_1A8D59CA0();
  sub_1A8D5A190();
  sub_1A8D59CA0();
  sub_1A8D5A1B0();
  __break(1u);
}

unint64_t sub_1A8CDDABC()
{
  unint64_t result = qword_1E979EE50;
  if (!qword_1E979EE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EE50);
  }
  return result;
}

unint64_t sub_1A8CDDB10()
{
  unint64_t result = qword_1E979EE58;
  if (!qword_1E979EE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EE58);
  }
  return result;
}

unint64_t sub_1A8CDDB64()
{
  unint64_t result = qword_1E979EE68;
  if (!qword_1E979EE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EE68);
  }
  return result;
}

unint64_t sub_1A8CDDBB8()
{
  unint64_t result = qword_1E979EE70;
  if (!qword_1E979EE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EE70);
  }
  return result;
}

unint64_t sub_1A8CDDC10()
{
  unint64_t result = qword_1E979EEA8;
  if (!qword_1E979EEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EEA8);
  }
  return result;
}

unint64_t sub_1A8CDDC68()
{
  unint64_t result = qword_1E979EEB0;
  if (!qword_1E979EEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EEB0);
  }
  return result;
}

unint64_t sub_1A8CDDCC0()
{
  unint64_t result = qword_1E979EEB8;
  if (!qword_1E979EEB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E979EEC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EEB8);
  }
  return result;
}

unint64_t sub_1A8CDDD20()
{
  unint64_t result = qword_1E979EEC8;
  if (!qword_1E979EEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EEC8);
  }
  return result;
}

unint64_t sub_1A8CDDD78()
{
  unint64_t result = qword_1E979EED0;
  if (!qword_1E979EED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EED0);
  }
  return result;
}

unint64_t sub_1A8CDDDD0()
{
  unint64_t result = qword_1E979EED8;
  if (!qword_1E979EED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EED8);
  }
  return result;
}

uint64_t sub_1A8CDDE24(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A8CDDE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A8C81A88;
  return v9(a1, a2, a3);
}

uint64_t method lookup function for AvailabilityManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AvailabilityManager);
}

uint64_t dispatch thunk of AvailabilityManager.cached()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of AvailabilityManager.fetch()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A8C81994;
  return v6(a1);
}

uint64_t dispatch thunk of AvailabilityManager.getAccessStatus(serverValue:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 144) + **(int **)(*(void *)v1 + 144));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A8C99788;
  return v6(a1);
}

uint64_t dispatch thunk of AvailabilityManager.getAccessGrantedFeatureKeys(serverValue:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 152) + **(int **)(*(void *)v1 + 152));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A8C99788;
  return v6(a1);
}

uint64_t dispatch thunk of AvailabilityManager.getAssetStatus()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 160) + **(int **)(*(void *)v1 + 160));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A8C81994;
  return v6(a1);
}

ValueMetadata *type metadata accessor for AvailabilityManager.AssetUnavailableReasons()
{
  return &type metadata for AvailabilityManager.AssetUnavailableReasons;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for AvailabilityStatus(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AvailabilityStatus(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1A8CDE408(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1A8CDE424(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Availability()
{
  return &type metadata for Availability;
}

unsigned char *storeEnumTagSinglePayload for Availability.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8CDE520);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Availability.CodingKeys()
{
  return &type metadata for Availability.CodingKeys;
}

ValueMetadata *type metadata accessor for Availability.AvailableCodingKeys()
{
  return &type metadata for Availability.AvailableCodingKeys;
}

ValueMetadata *type metadata accessor for Availability.LimitedCodingKeys()
{
  return &type metadata for Availability.LimitedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Availability.UnavailableCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A8CDE614);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Availability.UnavailableCodingKeys()
{
  return &type metadata for Availability.UnavailableCodingKeys;
}

unint64_t sub_1A8CDE650()
{
  unint64_t result = qword_1E979EF08;
  if (!qword_1E979EF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EF08);
  }
  return result;
}

unint64_t sub_1A8CDE6A8()
{
  unint64_t result = qword_1E979EF10;
  if (!qword_1E979EF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EF10);
  }
  return result;
}

unint64_t sub_1A8CDE700()
{
  unint64_t result = qword_1E979EF18;
  if (!qword_1E979EF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EF18);
  }
  return result;
}

unint64_t sub_1A8CDE758()
{
  unint64_t result = qword_1E979EF20;
  if (!qword_1E979EF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EF20);
  }
  return result;
}

unint64_t sub_1A8CDE7B0()
{
  unint64_t result = qword_1E979EF28;
  if (!qword_1E979EF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EF28);
  }
  return result;
}

unint64_t sub_1A8CDE808()
{
  unint64_t result = qword_1E979EF30;
  if (!qword_1E979EF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EF30);
  }
  return result;
}

unint64_t sub_1A8CDE860()
{
  unint64_t result = qword_1E979EF38;
  if (!qword_1E979EF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EF38);
  }
  return result;
}

unint64_t sub_1A8CDE8B8()
{
  unint64_t result = qword_1E979EF40;
  if (!qword_1E979EF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EF40);
  }
  return result;
}

unint64_t sub_1A8CDE910()
{
  unint64_t result = qword_1E979EF48;
  if (!qword_1E979EF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EF48);
  }
  return result;
}

unint64_t sub_1A8CDE968()
{
  unint64_t result = qword_1E979EF50;
  if (!qword_1E979EF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EF50);
  }
  return result;
}

uint64_t sub_1A8CDE9BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065;
  if (v2 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646574696D696CLL && a2 == 0xE700000000000000 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x616C696176616E75 && a2 == 0xEB00000000656C62)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void sub_1A8CDEB3C(uint64_t a1)
{
}

void sub_1A8CDEB60(uint64_t a1)
{
  sub_1A8CDEFB8(a1, (uint64_t)v9);
  uint64_t v2 = v10;
  if (v10)
  {
    int v3 = __swift_project_boxed_opaque_existential_1(v9, v10);
    uint64_t v4 = *(void *)(v2 - 8);
    MEMORY[0x1F4188790](v3, v3);
    char v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v4 + 16))(v6);
    uint64_t v7 = sub_1A8D5A380();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v8 = (void *)sub_1A8D59BC0();
  objc_msgSend(v1, sel_setObject_forKey_, v7, v8);
  swift_unknownObjectRelease();
}

void sub_1A8CDECC0()
{
  uint64_t v1 = *v0;
  id v2 = (id)sub_1A8D59BC0();
  objc_msgSend(v1, sel_removeObjectForKey_, v2);
}

double sub_1A8CDED18@<D0>(_OWORD *a1@<X8>)
{
  int v3 = *v1;
  uint64_t v4 = (void *)sub_1A8D59BC0();
  id v5 = objc_msgSend(v3, sel_objectForKey_, v4);

  if (v5)
  {
    sub_1A8D5A010();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

id sub_1A8CDEDAC()
{
  uint64_t v1 = *v0;
  id v2 = (void *)sub_1A8D59BC0();
  id v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  return v3;
}

void sub_1A8CDEDF4()
{
  uint64_t v1 = *v0;
  id v2 = (void *)sub_1A8D59B20();
  id v3 = (id)sub_1A8D59BC0();
  objc_msgSend(v1, sel_setPersistentDomain_forName_, v2, v3);
}

uint64_t sub_1A8CDEE90()
{
  uint64_t v1 = *v0;
  id v2 = (void *)sub_1A8D59BC0();
  id v3 = objc_msgSend(v1, sel_persistentDomainForName_, v2);

  if (!v3) {
    return 0;
  }
  uint64_t v4 = sub_1A8D59B30();

  return v4;
}

uint64_t sub_1A8CDEF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1A8CDEF2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1A8CDEF40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1A8CDEF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1A8CDEF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_1A8CDEF7C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1A8CDEF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t sub_1A8CDEFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t sub_1A8CDEFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EA170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8CDF020(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v17 = *(void *)(a3 + 16);
  if (v17)
  {
    id v5 = (uint64_t (*)(void *))result;
    unint64_t v6 = 0;
    uint64_t v7 = (uint64_t *)(a3 + 40);
    uint64_t v8 = MEMORY[0x1E4FBC860];
    char v15 = (uint64_t (*)(void *))result;
    while (v6 < *(void *)(v4 + 16))
    {
      uint64_t v10 = *(v7 - 1);
      uint64_t v9 = *v7;
      v18[0] = v10;
      v18[1] = v9;
      swift_bridgeObjectRetain();
      char v11 = v5(v18);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v11)
      {
        double result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v19 = v8;
        if ((result & 1) == 0)
        {
          double result = sub_1A8CB6294(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v19;
        }
        unint64_t v13 = *(void *)(v8 + 16);
        unint64_t v12 = *(void *)(v8 + 24);
        if (v13 >= v12 >> 1)
        {
          double result = sub_1A8CB6294(v12 > 1, v13 + 1, 1);
          uint64_t v8 = v19;
        }
        *(void *)(v8 + 16) = v13 + 1;
        uint64_t v14 = v8 + 16 * v13;
        *(void *)(v14 + 32) = v10;
        *(void *)(v14 + 40) = v9;
        uint64_t v4 = a3;
        id v5 = v15;
      }
      else
      {
        double result = swift_bridgeObjectRelease();
      }
      ++v6;
      v7 += 2;
      if (v17 == v6) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_16:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

id static EligibilityFetcher.currentEligibility()()
{
  return sub_1A8CE078C();
}

BOOL sub_1A8CDF1E0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  sub_1A8CE1DAC();
  sub_1A8D59AC0();
  if (v5 != 1) {
    return v4 == 3;
  }
  swift_bridgeObjectRetain();
  sub_1A8D2CDD4(&v4, v1, v2);
  swift_bridgeObjectRelease();
  return 0;
}

id EligibilityFetcher.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id EligibilityFetcher.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EligibilityFetcher();
  return objc_msgSendSuper2(&v2, sel_init);
}

id EligibilityFetcher.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EligibilityFetcher();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A8CDF370(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v27 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a2 + 56;
    v26[0] = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      unint64_t v6 = (uint64_t *)(v26[0] + 16 * v5);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      ++v5;
      sub_1A8D5A4A0();
      swift_bridgeObjectRetain();
      sub_1A8D59C80();
      uint64_t v9 = sub_1A8D5A4D0();
      uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v11 = v9 & ~v10;
      if ((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
      {
        uint64_t v12 = *(void *)(v2 + 48);
        unint64_t v13 = (void *)(v12 + 16 * v11);
        BOOL v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_1A8D5A390() & 1) != 0)
        {
          uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
          uint64_t v28 = v5;
LABEL_19:
          char v20 = *(unsigned char *)(v2 + 32);
          unint64_t v21 = (unint64_t)((1 << v20) + 63) >> 6;
          size_t v22 = 8 * v21;
          if ((v20 & 0x3Fu) < 0xE
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
          {
            MEMORY[0x1F4188790](isStackAllocationSafe, v19);
            memcpy((char *)v26 - ((v22 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v22);
            uint64_t v23 = sub_1A8CDF684((uint64_t)v26 - ((v22 + 15) & 0x3FFFFFFFFFFFFFF0), v21, v2, v11, &v27);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v24 = (void *)swift_slowAlloc();
            memcpy(v24, (const void *)(v2 + 56), v22);
            uint64_t v23 = sub_1A8CDF684((uint64_t)v24, v21, v2, v11, &v27);
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x1AD0E6EB0](v24, -1, -1);
          }
          return v23;
        }
        uint64_t v15 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v15;
          if (((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
            break;
          }
          unint64_t v16 = (void *)(v12 + 16 * v11);
          BOOL v17 = *v16 == v8 && v16[1] == v7;
          if (v17 || (sub_1A8D5A390() & 1) != 0)
          {
            uint64_t v28 = v5;
            uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
            goto LABEL_19;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
  }
  return v2;
}

uint64_t sub_1A8CDF684(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v30 = (unint64_t *)result;
  uint64_t v31 = v6 - 1;
  uint64_t v8 = *a5;
  unint64_t v7 = a5[1];
  unint64_t v9 = *(void *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return sub_1A8CDF8B0(v30, a2, v31, a3);
  }
  uint64_t v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9) {
      goto LABEL_29;
    }
    uint64_t v11 = v8 + 16 * v7;
    uint64_t v13 = *(void *)(v11 + 32);
    uint64_t v12 = *(void *)(v11 + 40);
    a5[1] = v7 + 1;
    sub_1A8D5A4A0();
    swift_bridgeObjectRetain();
    sub_1A8D59C80();
    uint64_t v14 = sub_1A8D5A4D0();
    uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    uint64_t v18 = 1 << v16;
    if (((1 << v16) & *(void *)(v32 + 8 * (v16 >> 6))) == 0) {
      goto LABEL_4;
    }
    uint64_t v19 = *(void *)(a3 + 48);
    char v20 = (void *)(v19 + 16 * v16);
    BOOL v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (sub_1A8D5A390() & 1) == 0)
    {
      uint64_t v24 = ~v15;
      for (unint64_t i = v16 + 1; ; unint64_t i = v26 + 1)
      {
        unint64_t v26 = i & v24;
        if (((*(void *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v19 + 16 * v26);
        BOOL v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (sub_1A8D5A390() & 1) != 0)
        {
          double result = swift_bridgeObjectRelease();
          unint64_t v17 = v26 >> 6;
          uint64_t v18 = 1 << v26;
          goto LABEL_15;
        }
      }
LABEL_4:
      double result = swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    double result = swift_bridgeObjectRelease();
LABEL_15:
    unint64_t v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      uint64_t v23 = v31 - 1;
      if (__OFSUB__(v31, 1)) {
        goto LABEL_30;
      }
      --v31;
      if (!v23) {
        return MEMORY[0x1E4FBC870];
      }
    }
LABEL_5:
    uint64_t v8 = *a5;
    unint64_t v7 = a5[1];
    unint64_t v9 = *(void *)(*a5 + 16);
    if (v7 == v9) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A8CDF8B0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB5EAC70);
  uint64_t result = sub_1A8D5A0A0();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1A8D5A4A0();
    swift_bridgeObjectRetain();
    sub_1A8D59C80();
    uint64_t result = sub_1A8D5A4D0();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    BOOL v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *BOOL v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A8CDFB48(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1A8CDFBE8(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1A8CDFCCC(uint64_t a1)
{
  uint64_t v2 = sub_1A8D19900((uint64_t)&unk_1EFF53650);
  swift_arrayDestroy();
  uint64_t v3 = sub_1A8D59AA0();
  uint64_t v4 = sub_1A8CDF370(v3, v2);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  swift_release();
  p_info = CSFGMOptIn.info;
  if (v5)
  {
    if (qword_1EB5E9F68 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1A8D59A80();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB5E9DF8);
    unint64_t v8 = sub_1A8D59A60();
    os_log_type_t v9 = sub_1A8D59EE0();
    if (os_log_type_enabled(v8, v9))
    {
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v10 = 0;
      unint64_t v11 = "Missing language and region keys from os_eligibility response. Will assume false for both.";
LABEL_10:
      _os_log_impl(&dword_1A8C7F000, v8, v9, v11, v10, 2u);
      MEMORY[0x1AD0E6EB0](v10, -1, -1);
    }
  }
  else
  {
    if (qword_1EB5E9F68 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1A8D59A80();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB5E9DF8);
    unint64_t v8 = sub_1A8D59A60();
    os_log_type_t v9 = sub_1A8D59F00();
    if (os_log_type_enabled(v8, v9))
    {
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v10 = 0;
      unint64_t v11 = "Eligibility statuses appear valid.";
      goto LABEL_10;
    }
  }

  uint64_t v96 = MEMORY[0x1E4FBC870];
  uint64_t v13 = sub_1A8D59AA0();
  MEMORY[0x1F4188790](v13, v14);
  v82[2] = a1;
  v82[3] = &v96;
  uint64_t v16 = sub_1A8CDF020((uint64_t)sub_1A8CE1D80, (uint64_t)v82, v15);
  uint64_t v17 = sub_1A8D19900(v16);
  swift_bridgeObjectRelease();
  uint64_t v18 = v96;
  int64_t v19 = *(void *)(v96 + 16);
  uint64_t v91 = v17;
  if (v19)
  {
    uint64_t v86 = a1;
    v93[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1A8CB6294(0, v19, 0);
    uint64_t v20 = v93[0];
    int64_t v21 = sub_1A8CDFB48(v18);
    int v23 = v22;
    uint64_t v92 = (v18 + 56);
    uint64_t v17 = v24 & 1;
    uint64_t v89 = "eation";
    unint64_t v90 = 0x80000001A8D62AA0;
    os_log_type_t v87 = "NPUT_DEVICE_LANGUAGE";
    uint64_t v88 = 0x80000001A8D62AD0;
    do
    {
      if (v21 < 0 || v21 >= 1 << *(unsigned char *)(v18 + 32))
      {
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
      if (((*(unint64_t *)((char *)&v92->isa + (((unint64_t)v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
        goto LABEL_68;
      }
      if (*(_DWORD *)(v18 + 36) != v23) {
        goto LABEL_69;
      }
      unint64_t v25 = (uint64_t *)(*(void *)(v18 + 48) + 16 * v21);
      a1 = *v25;
      unint64_t v26 = v25[1];
      if (*v25 == 0xD000000000000024 && v26 == v90 || (sub_1A8D5A390() & 1) != 0)
      {
        unint64_t v26 = 0xE800000000000000;
        a1 = 0x65676175676E614CLL;
      }
      else if (a1 == 0xD000000000000027 && v26 == v88 || (sub_1A8D5A390() & 1) != 0)
      {
        unint64_t v26 = 0xE600000000000000;
        a1 = 0x6E6F69676552;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      v93[0] = v20;
      unint64_t v28 = *(void *)(v20 + 16);
      unint64_t v27 = *(void *)(v20 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1A8CB6294(v27 > 1, v28 + 1, 1);
        uint64_t v20 = v93[0];
      }
      *(void *)(v20 + 16) = v28 + 1;
      uint64_t v29 = v20 + 16 * v28;
      *(void *)(v29 + 32) = a1;
      *(void *)(v29 + 40) = v26;
      int64_t v30 = sub_1A8CDFBE8(v21, v23, v17 & 1, v18);
      int64_t v21 = v30;
      int v23 = v31;
      uint64_t v17 = v32 & 1;
      --v19;
    }
    while (v19);
    sub_1A8CE1DA0(v30, v31, v32 & 1);
    swift_bridgeObjectRelease();
    p_info = CSFGMOptIn.info;
    if (qword_1EB5E9F68 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_1A8D59A80();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EB5E9DF8);
    swift_retain();
    BOOL v34 = sub_1A8D59A60();
    os_log_type_t v35 = sub_1A8D59EE0();
    if (os_log_type_enabled(v34, v35))
    {
      char v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      v93[0] = v37;
      *(_DWORD *)char v36 = 136315138;
      uint64_t v38 = swift_bridgeObjectRetain();
      uint64_t v39 = MEMORY[0x1AD0E5CA0](v38, MEMORY[0x1E4FBB1A0]);
      unint64_t v41 = v40;
      swift_release();
      v95[0] = sub_1A8C90120(v39, v41, v93);
      p_info = (__objc2_class_ro **)(CSFGMOptIn + 32);
      sub_1A8D59FE0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A8C7F000, v34, v35, "Failed to get value for the following eligibility keys: %s. May erroneously report language/region/device ineligibility.", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v37, -1, -1);
      MEMORY[0x1AD0E6EB0](v36, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v17 = v91;
    a1 = v86;
  }
  if (p_info[493] != (__objc2_class_ro *)-1) {
LABEL_70:
  }
    swift_once();
  uint64_t v42 = sub_1A8D59A80();
  __swift_project_value_buffer(v42, (uint64_t)qword_1EB5E9DF8);
  uint64_t v43 = sub_1A8D59AB0();
  uint64_t v44 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43, v45);
  uint64_t v47 = (char *)&v83 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v47, a1, v43);
  swift_bridgeObjectRetain_n();
  uint64_t v48 = sub_1A8D59A60();
  int v49 = sub_1A8D59F00();
  uint64_t v92 = v48;
  if (os_log_type_enabled(v48, (os_log_type_t)v49))
  {
    LODWORD(v89) = v49;
    uint64_t v50 = swift_slowAlloc();
    uint64_t v88 = swift_slowAlloc();
    v95[0] = v88;
    *(_DWORD *)uint64_t v50 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1A8D59E80();
    unint64_t v53 = v52;
    swift_bridgeObjectRelease();
    v93[0] = sub_1A8C90120(v51, v53, v95);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 12) = 2080;
    unint64_t v90 = (unint64_t)v47;
    uint64_t v54 = sub_1A8D59AA0();
    uint64_t v55 = *(void *)(v54 + 16);
    if (v55)
    {
      uint64_t v84 = v50;
      uint64_t v85 = v44;
      uint64_t v86 = v43;
      os_log_type_t v87 = (char *)&v83;
      uint64_t v56 = 0;
      uint64_t v83 = v54;
      uint64_t v57 = v54 + 32;
      uint64_t v58 = v17 + 56;
      uint64_t v59 = MEMORY[0x1E4FBC860];
      while (1)
      {
        uint64_t v60 = (uint64_t *)(v57 + 16 * v56);
        uint64_t v61 = *v60;
        uint64_t v62 = v60[1];
        if (!*(void *)(v17 + 16)) {
          break;
        }
        sub_1A8D5A4A0();
        swift_bridgeObjectRetain();
        sub_1A8D59C80();
        uint64_t v63 = sub_1A8D5A4D0();
        uint64_t v64 = -1 << *(unsigned char *)(v17 + 32);
        unint64_t v65 = v63 & ~v64;
        if (((*(void *)(v58 + ((v65 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v65) & 1) == 0) {
          goto LABEL_57;
        }
        uint64_t v66 = *(void *)(v91 + 48);
        uint64_t v67 = (void *)(v66 + 16 * v65);
        BOOL v68 = *v67 == v61 && v67[1] == v62;
        if (!v68 && (sub_1A8D5A390() & 1) == 0)
        {
          uint64_t v69 = ~v64;
          do
          {
            unint64_t v65 = (v65 + 1) & v69;
            if (((*(void *)(v58 + ((v65 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v65) & 1) == 0) {
              goto LABEL_57;
            }
            uint64_t v70 = (void *)(v66 + 16 * v65);
            BOOL v71 = *v70 == v61 && v70[1] == v62;
          }
          while (!v71 && (sub_1A8D5A390() & 1) == 0);
        }
        swift_bridgeObjectRelease();
LABEL_40:
        ++v56;
        uint64_t v17 = v91;
        if (v56 == v55)
        {
          swift_bridgeObjectRelease();
          uint64_t v43 = v86;
          uint64_t v44 = v85;
          uint64_t v50 = v84;
          goto LABEL_65;
        }
      }
      swift_bridgeObjectRetain();
LABEL_57:
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v94 = v59;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A8CB6294(0, *(void *)(v59 + 16) + 1, 1);
        uint64_t v59 = v94;
      }
      unint64_t v74 = *(void *)(v59 + 16);
      unint64_t v73 = *(void *)(v59 + 24);
      if (v74 >= v73 >> 1)
      {
        sub_1A8CB6294(v73 > 1, v74 + 1, 1);
        uint64_t v59 = v94;
      }
      *(void *)(v59 + 16) = v74 + 1;
      uint64_t v75 = v59 + 16 * v74;
      *(void *)(v75 + 32) = v61;
      *(void *)(v75 + 40) = v62;
      goto LABEL_40;
    }
    swift_bridgeObjectRelease();
    uint64_t v59 = MEMORY[0x1E4FBC860];
LABEL_65:
    uint64_t v76 = MEMORY[0x1AD0E5CA0](v59, MEMORY[0x1E4FBB1A0]);
    unint64_t v78 = v77;
    swift_release();
    v93[0] = sub_1A8C90120(v76, v78, v95);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v44 + 8))(v90, v43);
    swift_bridgeObjectRelease();
    id v79 = v92;
    _os_log_impl(&dword_1A8C7F000, v92, (os_log_type_t)v89, "Retrieved eligibleKeys: %s, ineligibleKeys: %s", (uint8_t *)v50, 0x16u);
    uint64_t v80 = v88;
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v80, -1, -1);
    MEMORY[0x1AD0E6EB0](v50, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v43);

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v17;
}

id sub_1A8CE078C()
{
  v87[9] = *MEMORY[0x1E4F143B8];
  uint64_t v85 = 0;
  uint64_t v86 = 0;
  unint64_t v1 = (uint64_t *)swift_slowAlloc();
  unsigned int domain_answer = os_eligibility_get_domain_answer();
  if (sub_1A8D419C0())
  {
    if (qword_1EB5E9FA8 != -1) {
      swift_once();
    }
    uint64_t v3 = (void *)qword_1EB5E9F98;
    uint64_t v4 = (void *)sub_1A8D59BC0();
    LODWORD(v3) = objc_msgSend(v3, sel_BOOLForKey_, v4);

    if (v3) {
      uint64_t v86 = 1;
    }
  }
  if (domain_answer)
  {
    sub_1A8CE1D2C();
    swift_allocError();
    *(void *)uint64_t v5 = domain_answer;
    *(unsigned char *)(v5 + 8) = 0;
LABEL_15:
    swift_willThrow();
    goto LABEL_16;
  }
  if (v86 == 1)
  {
    sub_1A8CE1D2C();
    swift_allocError();
    *(void *)uint64_t v6 = 0;
LABEL_14:
    *(unsigned char *)(v6 + 8) = 3;
    goto LABEL_15;
  }
  uint64_t v7 = *v1;
  if (!*v1)
  {
    sub_1A8CE1D2C();
    swift_allocError();
    *(void *)uint64_t v6 = 1;
    goto LABEL_14;
  }
  uint64_t v8 = swift_unknownObjectRetain();
  uint64_t v9 = MEMORY[0x1AD0E70A0](v8);
  if (v9 != sub_1A8D59A90())
  {
    uint64_t v10 = MEMORY[0x1AD0E70A0](v7);
    sub_1A8CE1D2C();
    swift_allocError();
    *(void *)uint64_t v11 = v10;
    *(unsigned char *)(v11 + 8) = 2;
    swift_willThrow();
    swift_unknownObjectRelease();
LABEL_16:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9FB0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v1, -1, -1);
    return v0;
  }
  uint64_t v76 = &v70;
  uint64_t v75 = sub_1A8D59AB0();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75, v13);
  uint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectRetain();
  uint64_t v77 = v7;
  sub_1A8D59AD0();
  uint64_t v16 = sub_1A8CDFCCC((uint64_t)v15);
  uint64_t v82 = "eation";
  int v72 = sub_1A8CB871C(0xD000000000000024, 0x80000001A8D62AA0, v16);
  id v79 = "NPUT_DEVICE_LANGUAGE";
  uint64_t v80 = v16;
  uint64_t v81 = (void *)0x80000001A8D62AD0;
  int v71 = sub_1A8CB871C(0xD000000000000027, 0x80000001A8D62AD0, v16);
  unint64_t v73 = v15;
  uint64_t v17 = sub_1A8D59AA0();
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v78 = v17;
  if (v18)
  {
    int64_t v19 = (void *)(v17 + 40);
    uint64_t v20 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v26 = *(v19 - 1);
      unint64_t v25 = (void *)*v19;
      if ((v26 != 0xD000000000000024 || v25 != (void *)0x80000001A8D62AA0)
        && (sub_1A8D5A390() & 1) == 0
        && (v26 != 0xD000000000000027 || v25 != v81)
        && (sub_1A8D5A390() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v87[0] = v20;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A8CB6294(0, *(void *)(v20 + 16) + 1, 1);
          uint64_t v20 = v87[0];
        }
        unint64_t v22 = *(void *)(v20 + 16);
        unint64_t v21 = *(void *)(v20 + 24);
        unint64_t v23 = v22 + 1;
        if (v22 >= v21 >> 1)
        {
          unint64_t v70 = v22 + 1;
          sub_1A8CB6294(v21 > 1, v22 + 1, 1);
          unint64_t v23 = v70;
          uint64_t v20 = v87[0];
        }
        *(void *)(v20 + 16) = v23;
        uint64_t v24 = v20 + 16 * v22;
        *(void *)(v24 + 32) = v26;
        *(void *)(v24 + 40) = v25;
      }
      v19 += 2;
      --v18;
    }
    while (v18);
  }
  else
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  p_info = CSFGMOptIn.info;
  if (*(void *)(v20 + 16))
  {
    uint64_t v81 = (void *)v20;
    if (qword_1EB5E9F68 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1A8D59A80();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EB5E9DF8);
    int64_t v30 = v81;
    swift_retain_n();
    uint64_t v31 = sub_1A8D59A60();
    os_log_type_t v32 = sub_1A8D59F00();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v82 = (char *)swift_slowAlloc();
      v87[0] = (uint64_t)v82;
      *(_DWORD *)uint64_t v33 = 136315138;
      id v79 = (char *)(v33 + 4);
      uint64_t v34 = swift_retain();
      uint64_t v35 = MEMORY[0x1AD0E5CA0](v34, MEMORY[0x1E4FBB1A0]);
      unint64_t v37 = v36;
      swift_release();
      uint64_t v38 = v35;
      p_info = (__objc2_class_ro **)(CSFGMOptIn + 32);
      uint64_t v83 = sub_1A8C90120(v38, v37, v87);
      sub_1A8D59FE0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A8C7F000, v31, v32, "Checking remaining keys for device eligibility: %s", v33, 0xCu);
      uint64_t v39 = v82;
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v39, -1, -1);
      MEMORY[0x1AD0E6EB0](v33, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v78 = v30[2];
    if (v78)
    {
      id v79 = (char *)(v30 + 4);
      uint64_t v44 = v80;
      uint64_t v82 = (char *)(v80 + 56);
      swift_retain();
      uint64_t v45 = 0;
      do
      {
        if (!*(void *)(v44 + 16))
        {
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_67;
        }
        uint64_t v46 = &v79[16 * v45];
        uint64_t v48 = *(void *)v46;
        uint64_t v47 = *((void *)v46 + 1);
        sub_1A8D5A4A0();
        swift_bridgeObjectRetain();
        sub_1A8D59C80();
        uint64_t v49 = sub_1A8D5A4D0();
        uint64_t v50 = -1 << *(unsigned char *)(v44 + 32);
        unint64_t v51 = v49 & ~v50;
        if (((*(void *)&v82[(v51 >> 3) & 0xFFFFFFFFFFFFFF8] >> v51) & 1) == 0) {
          goto LABEL_66;
        }
        uint64_t v52 = *(void *)(v44 + 48);
        unint64_t v53 = (void *)(v52 + 16 * v51);
        BOOL v54 = *v53 == v48 && v53[1] == v47;
        if (!v54 && (sub_1A8D5A390() & 1) == 0)
        {
          uint64_t v55 = ~v50;
          for (unint64_t i = v51 + 1; ; unint64_t i = v57 + 1)
          {
            uint64_t v57 = i & v55;
            if (((*(void *)&v82[((i & v55) >> 3) & 0xFFFFFFFFFFFFFF8] >> (i & v55)) & 1) == 0) {
              break;
            }
            uint64_t v58 = (void *)(v52 + 16 * v57);
            BOOL v59 = *v58 == v48 && v58[1] == v47;
            if (v59 || (sub_1A8D5A390() & 1) != 0) {
              goto LABEL_46;
            }
          }
LABEL_66:
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
LABEL_67:
          swift_release();
          char v60 = 0;
          goto LABEL_68;
        }
LABEL_46:
        ++v45;
        swift_bridgeObjectRelease();
        uint64_t v44 = v80;
      }
      while (v45 != v78);
      swift_bridgeObjectRelease();
      swift_release_n();
      char v60 = 1;
LABEL_68:
      p_info = CSFGMOptIn.info;
      goto LABEL_69;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    if (qword_1EB5E9F68 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_1A8D59A80();
    __swift_project_value_buffer(v40, (uint64_t)qword_1EB5E9DF8);
    unint64_t v41 = sub_1A8D59A60();
    os_log_type_t v42 = sub_1A8D59F00();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl(&dword_1A8C7F000, v41, v42, "No remaining keys in os_eligibility check. Will assume device is eligible.", v43, 2u);
      MEMORY[0x1AD0E6EB0](v43, -1, -1);
    }
  }
  char v60 = 1;
LABEL_69:
  uint64_t v61 = (objc_class *)type metadata accessor for Eligibility();
  uint64_t v62 = objc_allocWithZone(v61);
  v62[OBJC_IVAR___CSFEligibility_regionEligible] = v71 & 1;
  v62[OBJC_IVAR___CSFEligibility_languageEligible] = v72 & 1;
  v62[OBJC_IVAR___CSFEligibility_siriLanguageEligible] = 0;
  v62[OBJC_IVAR___CSFEligibility_locationEligible] = 0;
  v62[OBJC_IVAR___CSFEligibility_deviceEligibile] = v60;
  v84.receiver = v62;
  v84.super_class = v61;
  id v63 = objc_msgSendSuper2(&v84, sel_init);
  if (p_info[493] != (__objc2_class_ro *)-1) {
    swift_once();
  }
  uint64_t v64 = sub_1A8D59A80();
  __swift_project_value_buffer(v64, (uint64_t)qword_1EB5E9DF8);
  id v0 = v63;
  unint64_t v65 = sub_1A8D59A60();
  os_log_type_t v66 = sub_1A8D59F00();
  if (os_log_type_enabled(v65, v66))
  {
    uint64_t v82 = (char *)v65;
    uint64_t v67 = (uint8_t *)swift_slowAlloc();
    uint64_t v81 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v67 = 138412290;
    v87[0] = (uint64_t)v0;
    id v68 = v0;
    unint64_t v65 = v82;
    sub_1A8D59FE0();
    uint64_t v69 = v81;
    *uint64_t v81 = v0;

    _os_log_impl(&dword_1A8C7F000, v65, v66, "Calculated eligibility from os_eligibility: %@", v67, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v69, -1, -1);
    MEMORY[0x1AD0E6EB0](v67, -1, -1);
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v75);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9FB0);
  swift_arrayDestroy();
  MEMORY[0x1AD0E6EB0](v1, -1, -1);
  return v0;
}

id _s25CloudSubscriptionFeatures18EligibilityFetcherC7currentAA0D0CvgZ_0()
{
  return sub_1A8CE078C();
}

uint64_t type metadata accessor for EligibilityFetcher()
{
  return self;
}

unint64_t sub_1A8CE1D2C()
{
  unint64_t result = qword_1E979EF58;
  if (!qword_1E979EF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EF58);
  }
  return result;
}

BOOL sub_1A8CE1D80(uint64_t *a1)
{
  return sub_1A8CDF1E0(a1);
}

uint64_t sub_1A8CE1DA0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A8CE1DAC()
{
  unint64_t result = qword_1EB5E9FB8;
  if (!qword_1EB5E9FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9FB8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EligibilityError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EligibilityError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A8CE1E8C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1A8CE1EA4(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)unint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for EligibilityError()
{
  return &type metadata for EligibilityError;
}

uint64_t sub_1A8CE1ECC(char a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1A8D599D0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v13 = sub_1A8D599F0();
    int v14 = sub_1A8D59F70();
    if (sub_1A8D59FB0())
    {
      if (a1) {
        uint64_t v15 = "getWaitlistStatus";
      }
      else {
        uint64_t v15 = "signupForWaitlist";
      }
      HIDWORD(v38) = v14;
      uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      uint64_t v39 = v15;
      unint64_t v40 = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v16(v12, a2, v8);
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v41 = a2;
      uint64_t v19 = v18;
      uint64_t v43 = v18;
      *(_DWORD *)uint64_t v17 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_1A8C90120(a3, a4, &v43);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 12) = 2082;
      uint64_t v20 = sub_1A8D5A0E0();
      uint64_t v42 = sub_1A8C90120(v20, v21, &v43);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      os_signpost_id_t v22 = sub_1A8D599C0();
      _os_signpost_emit_with_name_impl(&dword_1A8C7F000, v13, BYTE4(v38), v22, v39, "%{public}s %{public}s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      uint64_t v23 = v19;
      a2 = v41;
      MEMORY[0x1AD0E6EB0](v23, -1, -1);
      MEMORY[0x1AD0E6EB0](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    }
    v16(v12, a2, v8);
  }
  else
  {
    uint64_t v24 = sub_1A8D599F0();
    int v25 = sub_1A8D59F70();
    unint64_t v26 = v9 + 16;
    if (sub_1A8D59FB0())
    {
      if (a1) {
        unint64_t v27 = "getWaitlistStatus";
      }
      else {
        unint64_t v27 = "signupForWaitlist";
      }
      HIDWORD(v38) = v25;
      unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      uint64_t v39 = v27;
      unint64_t v40 = v26 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v28(v12, a2, v8);
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v41 = a2;
      uint64_t v31 = v30;
      uint64_t v43 = v30;
      *(_DWORD *)uint64_t v29 = 136446210;
      uint64_t v32 = sub_1A8D5A0E0();
      uint64_t v42 = sub_1A8C90120(v32, v33, &v43);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      os_signpost_id_t v34 = sub_1A8D599C0();
      _os_signpost_emit_with_name_impl(&dword_1A8C7F000, v24, BYTE4(v38), v34, v39, "%{public}s", v29, 0xCu);
      swift_arrayDestroy();
      uint64_t v35 = v31;
      uint64_t v36 = v41;
      MEMORY[0x1AD0E6EB0](v35, -1, -1);
      MEMORY[0x1AD0E6EB0](v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      v28(v12, v36, v8);
    }
    else
    {

      (*(void (**)(char *, uint64_t, uint64_t))v26)(v12, a2, v8);
    }
  }
  sub_1A8D59A40();
  swift_allocObject();
  return sub_1A8D59A30();
}

uint64_t sub_1A8CE2358(char a1, uint64_t a2, const char *a3, unint64_t a4)
{
  os_log_type_t v66 = a3;
  uint64_t v6 = sub_1A8D59A10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v6, v8);
  uint64_t v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v12);
  int v14 = (char *)&v61 - v13;
  uint64_t v15 = sub_1A8D599D0();
  uint64_t v68 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15, v16);
  uint64_t v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v17, v20);
  uint64_t v67 = (char *)&v61 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21, v23);
  unint64_t v26 = (char *)&v61 - v25;
  if (a4)
  {
    char v27 = a1;
    uint64_t v65 = v24;
    swift_bridgeObjectRetain_n();
    unint64_t v28 = sub_1A8D599F0();
    sub_1A8D59A20();
    int v29 = sub_1A8D59F60();
    if (sub_1A8D59FB0())
    {
      int v62 = v29;
      uint64_t v30 = "getWaitlistStatus";
      if ((v27 & 1) == 0) {
        uint64_t v30 = "signupForWaitlist";
      }
      id v63 = v30;
      os_log_t v64 = v28;
      swift_retain();
      sub_1A8D59A50();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v14, v6) == *MEMORY[0x1E4FBD340])
      {
        char v31 = 0;
        uint64_t v61 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
        uint64_t v61 = "%{public}s %{public}s";
        char v31 = 2;
      }
      unint64_t v40 = v67;
      uint64_t v41 = v68;
      uint64_t v42 = v65;
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v67, v26, v65);
      uint64_t v43 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v70 = v44;
      *(unsigned char *)uint64_t v43 = v31;
      *(unsigned char *)(v43 + 1) = v31;
      *(_WORD *)(v43 + 2) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_1A8C90120((uint64_t)v66, a4, &v70);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v43 + 12) = 2082;
      uint64_t v45 = sub_1A8D5A0E0();
      uint64_t v69 = sub_1A8C90120(v45, v46, &v70);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      os_signpost_id_t v47 = sub_1A8D599C0();
      os_log_t v48 = v64;
      _os_signpost_emit_with_name_impl(&dword_1A8C7F000, v64, (os_signpost_type_t)v62, v47, v63, v61, (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v44, -1, -1);
      MEMORY[0x1AD0E6EB0](v43, -1, -1);

      uint64_t v49 = *(void (**)(char *, uint64_t))(v41 + 8);
      v49(v26, v42);
      return ((uint64_t (*)(char *, uint64_t))v49)(v40, v42);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v26, v65);
    }
  }
  else
  {
    uint64_t v32 = v24;
    unint64_t v33 = sub_1A8D599F0();
    sub_1A8D59A20();
    int v34 = sub_1A8D59F60();
    if (sub_1A8D59FB0())
    {
      uint64_t v35 = "getWaitlistStatus";
      if ((a1 & 1) == 0) {
        uint64_t v35 = "signupForWaitlist";
      }
      os_log_type_t v66 = v35;
      swift_retain();
      sub_1A8D59A50();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v11, v6) == *MEMORY[0x1E4FBD340])
      {
        char v36 = 0;
        char v37 = 0;
        uint64_t v38 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
        uint64_t v38 = "%{public}s";
        char v37 = 2;
        char v36 = 1;
      }
      LODWORD(v65) = v34;
      uint64_t v50 = v68;
      uint64_t v51 = v32;
      uint64_t v52 = v32;
      unint64_t v53 = v38;
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v67, v19, v52);
      uint64_t v54 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v70 = v55;
      *(unsigned char *)uint64_t v54 = v37;
      *(unsigned char *)(v54 + 1) = v36;
      *(_WORD *)(v54 + 2) = 2082;
      uint64_t v56 = sub_1A8D5A0E0();
      uint64_t v69 = sub_1A8C90120(v56, v57, &v70);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      uint64_t v58 = v67;
      os_signpost_id_t v59 = sub_1A8D599C0();
      _os_signpost_emit_with_name_impl(&dword_1A8C7F000, v33, (os_signpost_type_t)v65, v59, v66, v53, (uint8_t *)v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v55, -1, -1);
      MEMORY[0x1AD0E6EB0](v54, -1, -1);

      char v60 = *(void (**)(char *, uint64_t))(v50 + 8);
      v60(v19, v51);
      return ((uint64_t (*)(char *, uint64_t))v60)(v58, v51);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v19, v32);
    }
  }
}

void sub_1A8CE29D0()
{
  qword_1E97A8B28 = (uint64_t)&unk_1EFF55710;
}

void *sub_1A8CE29E4()
{
  sub_1A8D599A0();
  swift_allocObject();
  uint64_t v0 = sub_1A8D59990();
  type metadata accessor for AvailabilityClient();
  unint64_t result = (void *)swift_allocObject();
  result[2] = v0;
  result[3] = sub_1A8CD9E0C;
  result[4] = 0;
  result[5] = sub_1A8CD9E20;
  result[6] = 0;
  result[7] = &unk_1E979EFC8;
  result[8] = 0;
  qword_1EB5ECD08 = (uint64_t)result;
  return result;
}

uint64_t sub_1A8CE2A78()
{
  return MEMORY[0x1F4188298](sub_1A8CE2A94, 0, 0);
}

uint64_t sub_1A8CE2A94()
{
  if (qword_1EB5EA128 != -1) {
    swift_once();
  }
  unint64_t v1 = (void *)qword_1EB5EA140;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1A8CDA02C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A8D2534C;
  v0[13] = &block_descriptor_21;
  v0[14] = v2;
  objc_msgSend(v1, sel_assetStatusWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A8CE2BC4(uint64_t a1)
{
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = v1;
  return MEMORY[0x1F4188298](sub_1A8CE2BE4, 0, 0);
}

uint64_t sub_1A8CE2BE4()
{
  uint64_t v1 = sub_1A8D59920();
  v0[11] = v1;
  v0[12] = *(void *)(v1 - 8);
  uint64_t v2 = swift_task_alloc();
  v0[13] = v2;
  sub_1A8CE331C();
  unsigned int v3 = (void *)swift_task_alloc();
  v0[14] = v3;
  *unsigned int v3 = v0;
  v3[1] = sub_1A8CE2CF4;
  return MEMORY[0x1F411BFB0](v2);
}

uint64_t sub_1A8CE2CF4()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 104);
  uint64_t v3 = *(void *)(*(void *)v1 + 96);
  uint64_t v4 = *(void *)(*(void *)v1 + 88);
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    uint64_t v5 = sub_1A8CE3048;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v5 = sub_1A8CE2E74;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1A8CE2E74()
{
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 72);
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5E9318);
  id v3 = v1;
  uint64_t v4 = sub_1A8D59A60();
  os_log_type_t v5 = sub_1A8D59F00();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void **)(v0 + 72);
  if (v6)
  {
    uint64_t v8 = (void *)(v0 + 64);
    uint64_t v14 = v0;
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138543362;
    *uint64_t v8 = v7;
    id v11 = v7;
    sub_1A8D59FE0();
    *uint64_t v10 = v7;

    _os_log_impl(&dword_1A8C7F000, v4, v5, "Successfully notified AvailabilityFoundationClient about new availability status %{public}@!", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    uint64_t v0 = v14;
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1A8CE3048()
{
  uint64_t v22 = v0;
  swift_task_dealloc();
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[15];
  uint64_t v2 = (void *)v0[9];
  uint64_t v3 = sub_1A8D59A80();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB5E9318);
  id v4 = v2;
  id v5 = v1;
  id v6 = v4;
  id v7 = v1;
  uint64_t v8 = sub_1A8D59A60();
  os_log_type_t v9 = sub_1A8D59EE0();
  BOOL v10 = os_log_type_enabled(v8, v9);
  id v11 = (void *)v0[15];
  uint64_t v12 = (void *)v0[9];
  if (v10)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = v20;
    *(_DWORD *)uint64_t v13 = 138543618;
    v0[5] = v12;
    id v15 = v12;
    sub_1A8D59FE0();
    *uint64_t v14 = v12;

    *(_WORD *)(v13 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v16 = sub_1A8D5A440();
    v0[7] = sub_1A8C90120(v16, v17, &v21);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, v8, v9, "Failed to notify AvailabilityFoundationClient about new availability status %{public}@. Error: %{public}s", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v14, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v20, -1, -1);
    MEMORY[0x1AD0E6EB0](v13, -1, -1);
  }
  else
  {
  }
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1A8CE331C()
{
  id v1 = objc_msgSend(v0, sel_status);
  if (v1 == (id)1)
  {
    uint64_t v8 = sub_1A8D59900();
    MEMORY[0x1F4188790](v8, v9);
    id v6 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v7 = (unsigned int *)MEMORY[0x1E4F63DE8];
  }
  else
  {
    if (v1)
    {
      uint64_t v11 = sub_1A8D59900();
      uint64_t v12 = *(void *)(v11 - 8);
      MEMORY[0x1F4188790](v11, v13);
      id v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1A8CE74F4();
      sub_1A8D598F0();
      (*(void (**)(char *, void, uint64_t))(v12 + 104))(v15, *MEMORY[0x1E4F63D90], v11);
      return sub_1A8D59910();
    }
    uint64_t v2 = sub_1A8D59900();
    MEMORY[0x1F4188790](v2, v3);
    id v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v7 = (unsigned int *)MEMORY[0x1E4F63DF0];
  }
  (*(void (**)(char *, void))(v4 + 104))(v6, *v7);
  return sub_1A8D59910();
}

uint64_t sub_1A8CE3544(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  return MEMORY[0x1F4188298](sub_1A8CE3564, 0, 0);
}

uint64_t sub_1A8CE3564()
{
  uint64_t v58 = v0;
  uint64_t v1 = sub_1A8D59720();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = swift_task_alloc();
  sub_1A8D59710();
  uint64_t v4 = sub_1A8D59700();
  unint64_t v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  uint64_t v8 = sub_1A8C91D0C(8, v4, v6, v7);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v15 = MEMORY[0x1AD0E5BA0](v8, v10, v12, v14);
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  v0[18] = v15;
  v0[19] = v17;
  if (qword_1E979E470 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1A8D59A80();
  v0[20] = __swift_project_value_buffer(v18, (uint64_t)qword_1E979F060);
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_1A8D59A60();
  os_log_type_t v20 = sub_1A8D59F00();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136446210;
    uint64_t v55 = v22;
    uint64_t v56 = 91;
    unint64_t v57 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    sub_1A8D59CA0();
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    v0[15] = sub_1A8C90120(91, 0xE100000000000000, &v55);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v19, v20, "%{public}s Start", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v22, -1, -1);
    MEMORY[0x1AD0E6EB0](v21, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if ((*(uint64_t (**)(void))(v0[17] + 40))())
  {
    uint64_t v54 = v0 + 13;
    if (qword_1E979E438 != -1) {
      swift_once();
    }
    uint64_t v23 = qword_1E97A8B28;
    int64_t v24 = *(void *)(qword_1E97A8B28 + 16);
    uint64_t v25 = MEMORY[0x1E4FBC860];
    if (v24)
    {
      unint64_t v53 = v0;
      uint64_t v56 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1A8CB65DC(0, v24, 0);
      uint64_t v25 = v56;
      unint64_t v26 = *(void *)(v56 + 16);
      uint64_t v27 = 24 * v26 + 48;
      unint64_t v28 = (uint64_t *)(v23 + 40);
      do
      {
        uint64_t v29 = *(v28 - 1);
        uint64_t v30 = *v28;
        uint64_t v56 = v25;
        int64_t v31 = v26 + 1;
        unint64_t v32 = *(void *)(v25 + 24);
        swift_bridgeObjectRetain();
        if (v26 >= v32 >> 1)
        {
          sub_1A8CB65DC(v32 > 1, v31, 1);
          uint64_t v25 = v56;
        }
        *(void *)(v25 + 16) = v31;
        unint64_t v33 = (unsigned char *)(v25 + v27);
        *((void *)v33 - 2) = v29;
        *((void *)v33 - 1) = v30;
        *unint64_t v33 = 1;
        v27 += 24;
        v28 += 2;
        ++v26;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
      uint64_t v0 = v53;
    }
    if (*(void *)(v25 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9900);
      uint64_t v41 = sub_1A8D5A1F0();
    }
    else
    {
      uint64_t v41 = MEMORY[0x1E4FBC868];
    }
    uint64_t v56 = v41;
    uint64_t v44 = swift_bridgeObjectRetain();
    sub_1A8CDD738(v44, 1, &v56);
    swift_bridgeObjectRelease();
    uint64_t v42 = v56;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v45 = sub_1A8D59A60();
    os_log_type_t v46 = sub_1A8D59F00();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136446466;
      uint64_t v55 = v48;
      uint64_t v56 = 91;
      unint64_t v57 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_1A8D59CA0();
      sub_1A8D59CA0();
      swift_bridgeObjectRetain();
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      *uint64_t v54 = sub_1A8C90120(v56, v57, &v55);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 12) = 2080;
      swift_retain();
      uint64_t v49 = sub_1A8D59B40();
      unint64_t v51 = v50;
      swift_release();
      v0[14] = sub_1A8C90120(v49, v51, &v55);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1A8C7F000, v45, v46, "%{public}s ADM Availability bypass is set to YES. Overriding access status to: %s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v48, -1, -1);
      MEMORY[0x1AD0E6EB0](v47, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    int v34 = sub_1A8D59A60();
    os_log_type_t v35 = sub_1A8D59F00();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136446466;
      uint64_t v55 = v37;
      uint64_t v56 = 91;
      unint64_t v57 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_1A8D59CA0();
      sub_1A8D59CA0();
      swift_bridgeObjectRetain();
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      v0[11] = sub_1A8C90120(v56, v57, &v55);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v36 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_1A8D59B40();
      unint64_t v40 = v39;
      swift_bridgeObjectRelease();
      v0[12] = sub_1A8C90120(v38, v40, &v55);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v34, v35, "%{public}s Attempting to update availability to %{public}s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v37, -1, -1);
      MEMORY[0x1AD0E6EB0](v36, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    uint64_t v42 = v0[16];
    swift_bridgeObjectRetain();
  }
  v0[21] = v42;
  uint64_t v43 = (void *)swift_task_alloc();
  v0[22] = v43;
  void *v43 = v0;
  v43[1] = sub_1A8CE3F44;
  return MEMORY[0x1F411BFD0](v42);
}

uint64_t sub_1A8CE3F44()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1A8CE4304;
  }
  else
  {
    uint64_t v2 = sub_1A8CE4060;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CE4060()
{
  uint64_t v11 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1A8D59A60();
  os_log_type_t v2 = sub_1A8D59F00();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v10[0] = v9;
    *(_DWORD *)uint64_t v3 = 136446466;
    v10[1] = 91;
    id v10[2] = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    sub_1A8D59CA0();
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    v0[9] = sub_1A8C90120(91, 0xE100000000000000, v10);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v3 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1A8D59B40();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    v0[10] = sub_1A8C90120(v4, v6, v10);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v1, v2, "%{public}s Successfully notified AvailabilityFoundationClient about feature access status: %{public}s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
    MEMORY[0x1AD0E6EB0](v3, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  unint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1A8CE4304()
{
  uint64_t v18 = v0;
  uint64_t v1 = (void *)v0[23];
  swift_bridgeObjectRetain();
  id v2 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v1;
  uint64_t v4 = sub_1A8D59A60();
  os_log_type_t v5 = sub_1A8D59EE0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v15 = (void *)v0[23];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v17[0] = v16;
    *(_DWORD *)uint64_t v6 = 136446722;
    v17[1] = 91;
    v17[2] = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    sub_1A8D59CA0();
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    v0[7] = sub_1A8C90120(91, 0xE100000000000000, v17);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1A8D59B40();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    v0[5] = sub_1A8C90120(v7, v9, v17);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 22) = 2082;
    swift_getErrorValue();
    uint64_t v10 = sub_1A8D5A440();
    v0[8] = sub_1A8C90120(v10, v11, v17);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, v4, v5, "%{public}s Failed to notify AvailabilityFoundationClient about access status: %{public}s. Error: %{public}s", (uint8_t *)v6, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v16, -1, -1);
    MEMORY[0x1AD0E6EB0](v6, -1, -1);
  }
  else
  {
    uint64_t v12 = (void *)v0[23];

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1A8CE4670(char a1)
{
  *(void *)(v2 + 64) = v1;
  *(unsigned char *)(v2 + 100) = a1;
  return MEMORY[0x1F4188298](sub_1A8CE4694, 0, 0);
}

uint64_t sub_1A8CE4694()
{
  uint64_t v11 = v0;
  if ((*(uint64_t (**)(void))(*(void *)(v0 + 64) + 24))())
  {
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1A8D59A80();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9318);
    uint64_t v2 = sub_1A8D59A60();
    os_log_type_t v3 = sub_1A8D59F00();
    if (os_log_type_enabled(v2, v3))
    {
      int v4 = *(unsigned __int8 *)(v0 + 100);
      uint64_t v5 = swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v10 = v6;
      *(_DWORD *)uint64_t v5 = 136315394;
      *(void *)(v0 + 56) = sub_1A8C90120(0xD000000000000022, 0x80000001A8D64B30, &v10);
      sub_1A8D59FE0();
      *(_WORD *)(v5 + 12) = 1024;
      *(_DWORD *)(v0 + 96) = v4;
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v2, v3, "%s Eligibility bypass is set to YES. Overriding access status %{BOOL}d to true.", (uint8_t *)v5, 0x12u);
      uint64_t v7 = 1;
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
      MEMORY[0x1AD0E6EB0](v5, -1, -1);
    }
    else
    {

      uint64_t v7 = 1;
    }
  }
  else
  {
    uint64_t v7 = *(unsigned __int8 *)(v0 + 100);
  }
  *(unsigned char *)(v0 + 101) = v7;
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v8;
  *unint64_t v8 = v0;
  v8[1] = sub_1A8CE48EC;
  return MEMORY[0x1F411BFC0](v7);
}

uint64_t sub_1A8CE48EC()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A8CE4B48;
  }
  else {
    uint64_t v2 = sub_1A8CE4A00;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CE4A00()
{
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9318);
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 101);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67240192;
    *(_DWORD *)(v0 + 88) = v4;
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Successfully notified AvailabilityFoundationClient about access status: %{BOOL,public}d!", v5, 8u);
    MEMORY[0x1AD0E6EB0](v5, -1, -1);
  }

  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1A8CE4B48()
{
  uint64_t v17 = v0;
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 80);
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5E9318);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59EE0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 80);
  if (v7)
  {
    int v9 = *(unsigned __int8 *)(v0 + 101);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v16 = v11;
    *(_DWORD *)uint64_t v10 = 67240450;
    *(_DWORD *)(v0 + 92) = v9;
    sub_1A8D59FE0();
    *(_WORD *)(v10 + 8) = 2082;
    swift_getErrorValue();
    uint64_t v12 = sub_1A8D5A440();
    *(void *)(v0 + 40) = sub_1A8C90120(v12, v13, &v16);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, v5, v6, "Failed to notify AvailabilityFoundationClient about access status: %{BOOL,public}d. Error: %{public}s", (uint8_t *)v10, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v11, -1, -1);
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
  }
  else
  {
  }
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1A8CE4D90(char a1)
{
  *(void *)(v2 + 208) = v1;
  *(unsigned char *)(v2 + 252) = a1;
  return MEMORY[0x1F4188298](sub_1A8CE4DB4, 0, 0);
}

uint64_t sub_1A8CE4DB4()
{
  uint64_t v18 = v0;
  if ((*(uint64_t (**)(void))(*(void *)(v0 + 208) + 24))())
  {
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1A8D59A80();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9318);
    uint64_t v2 = sub_1A8D59A60();
    os_log_type_t v3 = sub_1A8D59F00();
    if (os_log_type_enabled(v2, v3))
    {
      int v4 = *(unsigned __int8 *)(v0 + 252);
      uint64_t v5 = swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v17 = v6;
      *(_DWORD *)uint64_t v5 = 136315394;
      *(void *)(v0 + 200) = sub_1A8C90120(0xD000000000000019, 0x80000001A8D64B10, &v17);
      sub_1A8D59FE0();
      *(_WORD *)(v5 + 12) = 1024;
      *(_DWORD *)(v0 + 248) = v4;
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v2, v3, "%s Eligibility bypass is set to YES. Overriding OptIn status %{BOOL}d to true.", (uint8_t *)v5, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
      MEMORY[0x1AD0E6EB0](v5, -1, -1);
    }

LABEL_8:
    id v7 = objc_msgSend(self, sel_mainBundle);
    id v8 = objc_msgSend(v7, sel_bundleIdentifier);

    if (v8)
    {
      uint64_t v9 = sub_1A8D59BF0();
      uint64_t v11 = v10;
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v11 = 0;
    }
    if (off_1EFF55688)
    {
      if (v11)
      {
        if (qword_1EFF55680 == v9 && off_1EFF55688 == (_UNKNOWN *)v11 || (sub_1A8D5A390() & 1) != 0) {
          goto LABEL_22;
        }
LABEL_18:
        if (off_1EFF55698 && (qword_1EFF55690 == v9 && off_1EFF55698 == v11 || (sub_1A8D5A390() & 1) != 0))
        {
LABEL_22:
          swift_bridgeObjectRelease();
LABEL_30:
          uint64_t v14 = self;
          *(void *)(v0 + 16) = v0;
          *(void *)(v0 + 24) = sub_1A8CE5230;
          uint64_t v15 = swift_continuation_init();
          *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
          *(void *)(v0 + 88) = 0x40000000;
          *(void *)(v0 + 96) = sub_1A8CE5BC0;
          *(void *)(v0 + 104) = &block_descriptor_17;
          *(void *)(v0 + 112) = v15;
          objc_msgSend(v14, sel_clearCFUWithCompletionHandler_, v0 + 80);
          return MEMORY[0x1F41881E8](v0 + 16);
        }
        goto LABEL_25;
      }
      if (off_1EFF55698)
      {
LABEL_25:
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9D60);
        swift_arrayDestroy();
        uint64_t v12 = 1;
        goto LABEL_26;
      }
    }
    else if (v11)
    {
      goto LABEL_18;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9D60);
    swift_arrayDestroy();
    goto LABEL_30;
  }
  if (*(unsigned char *)(v0 + 252) == 1) {
    goto LABEL_8;
  }
  uint64_t v12 = 0;
LABEL_26:
  *(unsigned char *)(v0 + 253) = v12;
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v13;
  *unint64_t v13 = v0;
  v13[1] = sub_1A8CE54A0;
  return MEMORY[0x1F411BFC0](v12);
}

uint64_t sub_1A8CE5230()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 216) = v1;
  if (v1) {
    uint64_t v2 = sub_1A8CE56FC;
  }
  else {
    uint64_t v2 = sub_1A8CE5340;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CE5340()
{
  if (qword_1EB5E97F0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E97D0);
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Successfully cleared CFU on opt-in", v4, 2u);
    MEMORY[0x1AD0E6EB0](v4, -1, -1);
  }

  *(unsigned char *)(v0 + 253) = 1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1A8CE54A0;
  return MEMORY[0x1F411BFC0](1);
}

uint64_t sub_1A8CE54A0()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A8CE5978;
  }
  else {
    uint64_t v2 = sub_1A8CE55B4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CE55B4()
{
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9318);
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 253);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67240192;
    *(_DWORD *)(v0 + 244) = v4;
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Successfully notified AvailabilityFoundationClient about new optIn status: %{BOOL,public}d!", v5, 8u);
    MEMORY[0x1AD0E6EB0](v5, -1, -1);
  }

  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1A8CE56FC()
{
  uint64_t v16 = v0;
  swift_willThrow();
  if (qword_1EB5E97F0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 216);
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5E97D0);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59EE0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 216);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    swift_getErrorValue();
    uint64_t v11 = sub_1A8D5A440();
    *(void *)(v0 + 184) = sub_1A8C90120(v11, v12, &v15);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, v5, v6, "Unable to clear CFU on opt-in. Error: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
  }
  else
  {
  }
  *(unsigned char *)(v0 + 253) = 1;
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v13;
  *unint64_t v13 = v0;
  v13[1] = sub_1A8CE54A0;
  return MEMORY[0x1F411BFC0](1);
}

uint64_t sub_1A8CE5978()
{
  uint64_t v17 = v0;
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 232);
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5E9318);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59EE0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 232);
  if (v7)
  {
    int v9 = *(unsigned __int8 *)(v0 + 253);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v16 = v11;
    *(_DWORD *)uint64_t v10 = 67240450;
    *(_DWORD *)(v0 + 240) = v9;
    sub_1A8D59FE0();
    *(_WORD *)(v10 + 8) = 2082;
    swift_getErrorValue();
    uint64_t v12 = sub_1A8D5A440();
    *(void *)(v0 + 168) = sub_1A8C90120(v12, v13, &v16);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, v5, v6, "Failed to notify AvailabilityFoundationClient about new optIn status: %{BOOL,public}d. Error: %{public}s", (uint8_t *)v10, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v11, -1, -1);
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
  }
  else
  {
  }
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1A8CE5BC0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
    uint64_t v4 = swift_allocError();
    *uint64_t v5 = a2;
    id v6 = a2;
    return MEMORY[0x1F4188208](v2, v4);
  }
  else
  {
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1A8CE5C58()
{
  *(void *)(v1 + 232) = v0;
  return MEMORY[0x1F4188298](sub_1A8CE5C78, 0, 0);
}

uint64_t sub_1A8CE5C78()
{
  if (qword_1EB5EA128 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1EB5EA140;
  v0[2] = v0;
  v0[3] = sub_1A8CE5DA0;
  uint64_t v2 = swift_continuation_init();
  v0[18] = MEMORY[0x1E4F143A8];
  v0[19] = 0x40000000;
  v0[20] = sub_1A8CE6224;
  v0[21] = &block_descriptor_2;
  v0[22] = v2;
  objc_msgSend(v1, sel_resetCachedStatusWithCompletionHandler_, v0 + 18);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A8CE5DA0()
{
  return MEMORY[0x1F4188298](sub_1A8CE5E80, 0, 0);
}

uint64_t sub_1A8CE5E80()
{
  uint64_t v1 = (void *)qword_1EB5EA140;
  v0[10] = v0;
  v0[15] = v0 + 31;
  v0[11] = sub_1A8CE5F80;
  uint64_t v2 = swift_continuation_init();
  v0[23] = MEMORY[0x1E4F143A8];
  v0[24] = 0x40000000;
  v0[25] = sub_1A8D2534C;
  v0[26] = &block_descriptor_13;
  v0[27] = v2;
  objc_msgSend(v1, sel_assetStatusWithCompletionHandler_, v0 + 23);
  return MEMORY[0x1F41881E8](v0 + 10);
}

uint64_t sub_1A8CE5F80()
{
  return MEMORY[0x1F4188298](sub_1A8CE6060, 0, 0);
}

uint64_t sub_1A8CE6060()
{
  if (*(unsigned char *)(v0 + 249)) {
    uint64_t v1 = ~*(unsigned __int8 *)(v0 + 248) & 1;
  }
  else {
    uint64_t v1 = ~*(unsigned __int8 *)(v0 + 248) & 1 | 2;
  }
  *(void *)(v0 + 224) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1A8CE6130;
  uint64_t v3 = *(void *)(v0 + 224);
  v2[18] = *(void *)(v0 + 232);
  v2[19] = v3;
  return MEMORY[0x1F4188298](sub_1A8CE6250, 0, 0);
}

uint64_t sub_1A8CE6130()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A8CE6224(uint64_t a1)
{
  return MEMORY[0x1F41881F8](*(void *)(a1 + 32));
}

uint64_t sub_1A8CE622C(uint64_t *a1)
{
  uint64_t v3 = *a1;
  *(void *)(v2 + 144) = v1;
  *(void *)(v2 + 152) = v3;
  return MEMORY[0x1F4188298](sub_1A8CE6250, 0, 0);
}

uint64_t sub_1A8CE6250()
{
  uint64_t v16 = v0;
  v0[14] = v0[19];
  if ((*(uint64_t (**)(void))(v0[18] + 24))())
  {
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1A8D59A80();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EB5E9318);
    uint64_t v3 = sub_1A8D59A60();
    os_log_type_t v4 = sub_1A8D59F00();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v13 = v0[19];
      uint64_t v5 = swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v14 = v6;
      *(_DWORD *)uint64_t v5 = 136315394;
      v0[16] = sub_1A8C90120(0xD000000000000026, 0x80000001A8D64A90, &v14);
      sub_1A8D59FE0();
      *(_WORD *)(v5 + 12) = 2080;
      uint64_t v15 = v13;
      unint64_t v7 = AvailabilityManager.AssetUnavailableReasons.description.getter();
      v0[17] = sub_1A8C90120(v7, v8, &v14);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A8C7F000, v3, v4, "%s Eligibility bypass is set to YES. Overriding asset unavailability status %s to available.", (uint8_t *)v5, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
      MEMORY[0x1AD0E6EB0](v5, -1, -1);
    }

    uint64_t v9 = 0;
    v0[14] = 0;
  }
  else
  {
    uint64_t v9 = v0[19];
  }
  uint64_t v15 = v9;
  uint64_t v10 = sub_1A8CE6A68(v1);
  v0[20] = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[21] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1A8CE64E4;
  return MEMORY[0x1F411BFB8](v10);
}

uint64_t sub_1A8CE64E4()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8CE67D8;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1A8CE6600;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CE6600()
{
  uint64_t v11 = v0;
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9318);
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    v10[0] = v5;
    *(_DWORD *)uint64_t v4 = 136446210;
    swift_beginAccess();
    v10[1] = v0[14];
    unint64_t v6 = AvailabilityManager.AssetUnavailableReasons.description.getter();
    v0[15] = sub_1A8C90120(v6, v7, v10);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Successfully notified AvailabilityFoundationClient about new asset status: %{public}s!", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v5, -1, -1);
    MEMORY[0x1AD0E6EB0](v4, -1, -1);
  }

  unint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1A8CE67D8()
{
  uint64_t v18 = v0;
  swift_bridgeObjectRelease();
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5E9318);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59EE0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  unint64_t v8 = (void *)v0[22];
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v17[0] = v10;
    *(_DWORD *)uint64_t v9 = 136446466;
    swift_beginAccess();
    v17[1] = v0[14];
    unint64_t v11 = AvailabilityManager.AssetUnavailableReasons.description.getter();
    v0[12] = sub_1A8C90120(v11, v12, v17);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v13 = sub_1A8D5A440();
    v0[13] = sub_1A8C90120(v13, v14, v17);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, v5, v6, "Failed to notify AvailabilityFoundationClient about new asset status: %{public}s. Error: %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1A8CE6A68(__n128 a1)
{
  char v2 = 0;
  uint64_t v3 = 0;
  uint64_t v4 = *v1;
  uint64_t v42 = MEMORY[0x1E4FBC870];
  a1.n128_u64[0] = 136315394;
  __n128 v38 = a1;
  unint64_t v37 = 0x80000001A8D64AC0;
  unint64_t v34 = (unint64_t)" .assetIsNotReady";
  unint64_t v35 = 0x80000001A8D64770;
  uint64_t v36 = MEMORY[0x1E4FBC840] + 8;
  v33[0] = 0x80000001A8D647B0;
  v33[1] = 0x80000001A8D64790;
  do
  {
    char v14 = v2;
    uint64_t v15 = *((void *)&unk_1EFF55910 + v3 + 4);
    if ((v15 & ~v4) == 0)
    {
      if (v15 == 2)
      {
        uint64_t v5 = sub_1A8D59980();
        uint64_t v6 = *(void *)(v5 - 8);
        uint64_t v8 = MEMORY[0x1F4188790](v5, v7);
        uint64_t v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
        MEMORY[0x1F4188790](v8, v11);
        uint64_t v13 = (char *)v33 - v12;
        (*(void (**)(char *, void, uint64_t))(v6 + 104))((char *)v33 - v12, *MEMORY[0x1E4F63E20], v5);
        sub_1A8D2CF84(v10, v13);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
      }
      else if (v15 == 1)
      {
        uint64_t v16 = sub_1A8D59980();
        uint64_t v17 = *(void *)(v16 - 8);
        uint64_t v19 = MEMORY[0x1F4188790](v16, v18);
        uint64_t v21 = (char *)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
        MEMORY[0x1F4188790](v19, v22);
        int64_t v24 = (char *)v33 - v23;
        (*(void (**)(char *, void, uint64_t))(v17 + 104))((char *)v33 - v23, *MEMORY[0x1E4F63E28], v16);
        sub_1A8D2CF84(v21, v24);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
      }
      else
      {
        if (qword_1EB5E9298 != -1) {
          swift_once();
        }
        uint64_t v25 = sub_1A8D59A80();
        __swift_project_value_buffer(v25, (uint64_t)qword_1EB5E9318);
        unint64_t v26 = sub_1A8D59A60();
        os_log_type_t v27 = sub_1A8D59EE0();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = swift_slowAlloc();
          uint64_t v29 = swift_slowAlloc();
          uint64_t v41 = v29;
          *(_DWORD *)uint64_t v28 = v38.n128_u32[0];
          *(void *)(v28 + 4) = sub_1A8C90120(0xD00000000000001ALL, v37, &v41);
          *(_WORD *)(v28 + 12) = 2080;
          if (v15)
          {
            unint64_t v39 = 0xD000000000000016;
            unint64_t v40 = v35;
            if (v15) {
              sub_1A8D59CA0();
            }
            if ((v15 & 2) != 0) {
              sub_1A8D59CA0();
            }
            sub_1A8D59CA0();
            uint64_t v30 = v39;
            unint64_t v31 = v40;
          }
          else
          {
            uint64_t v30 = 0xD000000000000013;
            unint64_t v31 = v34 | 0x8000000000000000;
          }
          *(void *)(v28 + 14) = sub_1A8C90120(v30, v31, &v41);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A8C7F000, v26, v27, "%s: Unknown reason: %s)", (uint8_t *)v28, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1AD0E6EB0](v29, -1, -1);
          MEMORY[0x1AD0E6EB0](v28, -1, -1);
        }
        else
        {
        }
      }
    }
    char v2 = 1;
    uint64_t v3 = 1;
  }
  while ((v14 & 1) == 0);
  return v42;
}

uint64_t sub_1A8CE6F04()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186488](v0, 72, 7);
}

void *static CSFUnavailabilityReasons.allCases.getter()
{
  return &unk_1EFF556A0;
}

unint64_t sub_1A8CE6F64()
{
  unint64_t result = qword_1E979EF60;
  if (!qword_1E979EF60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1E979EF68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979EF60);
  }
  return result;
}

void sub_1A8CE6FC0(void *a1@<X8>)
{
  *a1 = &unk_1EFF556A0;
}

uint64_t sub_1A8CE6FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A8C81A88;
  return v9(a1, a2, a3);
}

uint64_t sub_1A8CE70D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A8C81A88;
  return v9(a1, a2, a3);
}

uint64_t sub_1A8CE71D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A8C81A88;
  return v9(a1, a2, a3);
}

uint64_t sub_1A8CE72DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 32) + **(int **)(a3 + 32));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A8C81994;
  return v9(a1, a2, a3);
}

uint64_t sub_1A8CE73E0(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 40) + **(int **)(a2 + 40));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A8C81A88;
  return v7(a1, a2);
}

uint64_t type metadata accessor for AvailabilityClient()
{
  return self;
}

uint64_t sub_1A8CE74F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x1E4FBC870];
  uint64_t v27 = MEMORY[0x1E4FBC870];
  unint64_t v3 = (unint64_t)objc_msgSend(v1, sel_unavailabiltyReasons);
  uint64_t v4 = qword_1EFF556B0;
  if (qword_1EFF556B0)
  {
    uint64_t v5 = &qword_1EFF556C0;
    unint64_t v25 = v3;
    do
    {
      uint64_t v8 = *v5++;
      uint64_t v7 = v8;
      if ((v8 & ~v3) == 0)
      {
        uint64_t v9 = sub_1A8D598E0();
        uint64_t v10 = *(void *)(v9 - 8);
        uint64_t v12 = MEMORY[0x1F4188790](v9, v11);
        char v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v16 = MEMORY[0x1F4188790](v12, v15);
        uint64_t v18 = (char *)&v24 - v17;
        MEMORY[0x1F4188790](v16, v19);
        uint64_t v21 = (char *)&v24 - v20;
        uint64_t v26 = v22;
        uint64_t v6 = (unsigned int *)MEMORY[0x1E4F63DD8];
        switch(v7)
        {
          case 1:
            uint64_t v6 = (unsigned int *)MEMORY[0x1E4F63DC0];
            break;
          case 2:
            break;
          case 3:
          case 5:
          case 6:
          case 7:
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 14:
          case 15:
          case 17:
          case 18:
          case 19:
          case 20:
          case 21:
          case 22:
          case 23:
          case 24:
          case 25:
          case 26:
          case 27:
          case 28:
          case 29:
          case 30:
          case 31:
          case 33:
          case 34:
          case 35:
          case 36:
          case 37:
          case 38:
          case 39:
          case 40:
          case 41:
          case 42:
          case 43:
          case 44:
          case 45:
          case 46:
          case 47:
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 58:
          case 59:
          case 60:
          case 61:
          case 62:
          case 63:
            goto LABEL_3;
          case 4:
            uint64_t v6 = (unsigned int *)MEMORY[0x1E4F63DC8];
            break;
          case 8:
            uint64_t v6 = (unsigned int *)MEMORY[0x1E4F63DD0];
            break;
          case 16:
            uint64_t v6 = (unsigned int *)MEMORY[0x1E4F63DB8];
            break;
          case 32:
            uint64_t v6 = (unsigned int *)MEMORY[0x1E4F63DB0];
            break;
          case 64:
            uint64_t v6 = (unsigned int *)MEMORY[0x1E4F63DA8];
            break;
          default:
            if (v7 == 128)
            {
              uint64_t v6 = (unsigned int *)MEMORY[0x1E4F63DA0];
            }
            else if (v7 == 256)
            {
              uint64_t v6 = (unsigned int *)MEMORY[0x1E4F63D98];
            }
            else
            {
LABEL_3:
              uint64_t v6 = (unsigned int *)MEMORY[0x1E4F63DE0];
            }
            break;
        }
        (*(void (**)(char *, void, uint64_t))(v10 + 104))((char *)&v24 - v20, *v6, v9);
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v21, v9);
        sub_1A8D2C78C(v14, v18);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
        unint64_t v3 = v25;
      }
      --v4;
    }
    while (v4);
    return v27;
  }
  return v2;
}

uint64_t sub_1A8CE7890(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  *(void *)(*v3 + 464) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 472) = a2;
    *(void *)(v6 + 480) = a1;
    return MEMORY[0x1F4188298](sub_1A8CE79F0, 0, 0);
  }
}

uint64_t sub_1A8CE79F0()
{
  uint64_t v1 = *(void *)(v0 + 472);
  *(void *)(v0 + 312) = *(void *)(v0 + 480);
  *(void *)(v0 + 320) = v1;
  strcpy((char *)(v0 + 328), "{featureKey}");
  *(unsigned char *)(v0 + 341) = 0;
  *(_WORD *)(v0 + 342) = -5120;
  *(_OWORD *)(v0 + 344) = *(_OWORD *)(v0 + 56);
  sub_1A8CE96DC();
  uint64_t v2 = sub_1A8D5A000();
  uint64_t v4 = v3;
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 424) + 56), *(void *)(*(void *)(v0 + 424) + 80));
  uint64_t v5 = sub_1A8C9AE64();
  if (v6)
  {
    if (v4)
    {
      *(void *)(v0 + 360) = v2;
      *(void *)(v0 + 368) = v4;
      *(void *)(v0 + 376) = 0x7D644964757BLL;
      *(void *)(v0 + 384) = 0xE600000000000000;
      *(void *)(v0 + 392) = v5;
      *(void *)(v0 + 400) = v6;
      uint64_t v2 = sub_1A8D5A000();
      unint64_t v8 = v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v8 = 0;
    }
    sub_1A8CE9730(v2, v8, *(void *)(v0 + 408));
  }
  else
  {
    sub_1A8C8C7B0();
    swift_allocError();
    *uint64_t v9 = 11;
    swift_willThrow();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1A8CE7BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  *(void *)(*v3 + 496) = v2;
  swift_task_dealloc();
  if (v2)
  {
    unint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 504) = a2;
    *(void *)(v6 + 512) = a1;
    return MEMORY[0x1F4188298](sub_1A8CE7D44, 0, 0);
  }
}

uint64_t sub_1A8CE7D44()
{
  uint64_t v1 = *(void *)(v0 + 504);
  if (v1)
  {
    *(void *)(v0 + 312) = *(void *)(v0 + 512);
    *(void *)(v0 + 320) = v1;
    strcpy((char *)(v0 + 328), "{featureKey}");
    *(unsigned char *)(v0 + 341) = 0;
    *(_WORD *)(v0 + 342) = -5120;
    *(_OWORD *)(v0 + 344) = *(_OWORD *)(v0 + 56);
    sub_1A8CE96DC();
    uint64_t v2 = sub_1A8D5A000();
    uint64_t v4 = v3;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v2 = *(void *)(v0 + 512);
  }
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 424) + 56), *(void *)(*(void *)(v0 + 424) + 80));
  uint64_t v5 = sub_1A8C9AE64();
  if (v6)
  {
    if (v4)
    {
      *(void *)(v0 + 360) = v2;
      *(void *)(v0 + 368) = v4;
      *(void *)(v0 + 376) = 0x7D644964757BLL;
      *(void *)(v0 + 384) = 0xE600000000000000;
      *(void *)(v0 + 392) = v5;
      *(void *)(v0 + 400) = v6;
      sub_1A8CE96DC();
      uint64_t v2 = sub_1A8D5A000();
      unint64_t v8 = v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v8 = 0;
    }
    sub_1A8CE9730(v2, v8, *(void *)(v0 + 408));
  }
  else
  {
    sub_1A8C8C7B0();
    swift_allocError();
    *uint64_t v9 = 11;
    swift_willThrow();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1A8CE7F58(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  *(void *)(*v3 + 528) = v2;
  swift_task_dealloc();
  if (v2)
  {
    unint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 536) = a2;
    *(void *)(v6 + 544) = a1;
    return MEMORY[0x1F4188298](sub_1A8CE80BC, 0, 0);
  }
}

uint64_t sub_1A8CE80BC()
{
  uint64_t v1 = v0[67];
  uint64_t v2 = v0[68];
  __swift_project_boxed_opaque_existential_1((void *)(v0[53] + 56), *(void *)(v0[53] + 80));
  uint64_t v3 = sub_1A8C9AE64();
  if (v4)
  {
    if (v1)
    {
      v0[33] = v2;
      v0[34] = v1;
      v0[35] = 0x7D644964757BLL;
      v0[36] = 0xE600000000000000;
      v0[37] = v3;
      v0[38] = v4;
      sub_1A8CE96DC();
      uint64_t v2 = sub_1A8D5A000();
      unint64_t v6 = v5;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v6 = 0;
    }
    sub_1A8CE9730(v2, v6, v0[51]);
  }
  else
  {
    sub_1A8C8C7B0();
    swift_allocError();
    *uint64_t v7 = 11;
    swift_willThrow();
  }
  swift_bridgeObjectRelease();
  unint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1A8CE8228(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  *(void *)(*v3 + 560) = v2;
  swift_task_dealloc();
  if (v2)
  {
    unint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 568) = a2;
    *(void *)(v6 + 576) = a1;
    return MEMORY[0x1F4188298](sub_1A8CE838C, 0, 0);
  }
}

uint64_t sub_1A8CE838C()
{
  uint64_t v1 = v0[72];
  uint64_t v2 = v0[71];
  __swift_project_boxed_opaque_existential_1((void *)(v0[53] + 56), *(void *)(v0[53] + 80));
  uint64_t v3 = sub_1A8C9AE64();
  if (v4)
  {
    if (v2)
    {
      v0[33] = v1;
      v0[34] = v2;
      v0[35] = 0x7D644964757BLL;
      v0[36] = 0xE600000000000000;
      v0[37] = v3;
      v0[38] = v4;
      sub_1A8CE96DC();
      uint64_t v1 = sub_1A8D5A000();
      unint64_t v6 = v5;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v6 = 0;
    }
    sub_1A8CE9730(v1, v6, v0[51]);
  }
  else
  {
    sub_1A8C8C7B0();
    swift_allocError();
    *uint64_t v7 = 11;
    swift_willThrow();
  }
  swift_bridgeObjectRelease();
  unint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1A8CE84F8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  *(void *)(*v3 + 592) = v2;
  swift_task_dealloc();
  if (v2)
  {
    unint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 600) = a2;
    *(void *)(v6 + 608) = a1;
    return MEMORY[0x1F4188298](sub_1A8CE865C, 0, 0);
  }
}

uint64_t sub_1A8CE865C()
{
  sub_1A8CE9730(v0[76], v0[75], v0[51]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1A8CE86E0()
{
  sub_1A8CE9730(v0[78], v0[77], v0[51]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1A8CE8764(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  *(void *)(*v3 + 640) = v2;
  swift_task_dealloc();
  if (v2)
  {
    unint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 648) = a2;
    *(void *)(v6 + 656) = a1;
    return MEMORY[0x1F4188298](sub_1A8CE88C8, 0, 0);
  }
}

uint64_t sub_1A8CE88C8()
{
  sub_1A8CE9730(v0[82], v0[81], v0[51]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1A8CE894C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  *(void *)(*v3 + 680) = v2;
  swift_task_dealloc();
  if (v2)
  {
    unint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 688) = a2;
    *(void *)(v6 + 696) = a1;
    return MEMORY[0x1F4188298](sub_1A8CE8AB0, 0, 0);
  }
}

uint64_t sub_1A8CE8AB0()
{
  uint64_t v1 = *(void *)(v0 + 688);
  uint64_t v2 = *(void *)(v0 + 696);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 424) + 56), *(void *)(*(void *)(v0 + 424) + 80));
  uint64_t v3 = sub_1A8C9AE64();
  if (v4)
  {
    uint64_t v5 = v4;
    if (v1)
    {
      uint64_t v6 = v3;
      uint64_t v7 = *(void *)(v0 + 664);
      uint64_t v8 = *(void *)(v0 + 432);
      *(void *)(v0 + 168) = v2;
      *(void *)(v0 + 176) = v1;
      strcpy((char *)(v0 + 184), "{featureKey}");
      *(unsigned char *)(v0 + 197) = 0;
      *(_WORD *)(v0 + 198) = -5120;
      *(void *)(v0 + 200) = v8;
      *(void *)(v0 + 208) = v7;
      sub_1A8CE96DC();
      *(void *)(v0 + 216) = sub_1A8D5A000();
      *(void *)(v0 + 224) = v9;
      *(void *)(v0 + 232) = 0x7D644964757BLL;
      *(void *)(v0 + 240) = 0xE600000000000000;
      *(void *)(v0 + 248) = v6;
      *(void *)(v0 + 256) = v5;
      uint64_t v2 = sub_1A8D5A000();
      unint64_t v11 = v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v11 = 0;
    }
    sub_1A8CE9730(v2, v11, *(void *)(v0 + 408));
  }
  else
  {
    sub_1A8C8C7B0();
    swift_allocError();
    *uint64_t v12 = 11;
    swift_willThrow();
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1A8CE8CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  *(void *)(*v3 + 712) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 720) = a2;
    *(void *)(v6 + 728) = a1;
    return MEMORY[0x1F4188298](sub_1A8CE8E14, 0, 0);
  }
}

uint64_t sub_1A8CE8E14()
{
  uint64_t v1 = *(void *)(v0 + 728);
  uint64_t v2 = *(void *)(v0 + 720);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 424) + 56), *(void *)(*(void *)(v0 + 424) + 80));
  uint64_t v3 = sub_1A8C9AE64();
  if (v4)
  {
    uint64_t v5 = v4;
    if (v2)
    {
      uint64_t v6 = v3;
      uint64_t v7 = *(void *)(v0 + 664);
      uint64_t v8 = *(void *)(v0 + 432);
      *(void *)(v0 + 168) = v1;
      *(void *)(v0 + 176) = v2;
      strcpy((char *)(v0 + 184), "{featureKey}");
      *(unsigned char *)(v0 + 197) = 0;
      *(_WORD *)(v0 + 198) = -5120;
      *(void *)(v0 + 200) = v8;
      *(void *)(v0 + 208) = v7;
      sub_1A8CE96DC();
      *(void *)(v0 + 216) = sub_1A8D5A000();
      *(void *)(v0 + 224) = v9;
      *(void *)(v0 + 232) = 0x7D644964757BLL;
      *(void *)(v0 + 240) = 0xE600000000000000;
      *(void *)(v0 + 248) = v6;
      *(void *)(v0 + 256) = v5;
      uint64_t v1 = sub_1A8D5A000();
      unint64_t v11 = v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v11 = 0;
    }
    sub_1A8CE9730(v1, v11, *(void *)(v0 + 408));
  }
  else
  {
    sub_1A8C8C7B0();
    swift_allocError();
    *uint64_t v12 = 11;
    swift_willThrow();
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1A8CE9014(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  *(void *)(*v3 + 752) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 760) = a2;
    *(void *)(v6 + 768) = a1;
    return MEMORY[0x1F4188298](sub_1A8CE9178, 0, 0);
  }
}

uint64_t sub_1A8CE9178()
{
  uint64_t v1 = *(void *)(v0 + 760);
  uint64_t v2 = *(void *)(v0 + 768);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 424) + 56), *(void *)(*(void *)(v0 + 424) + 80));
  uint64_t v3 = sub_1A8C9AE64();
  if (v4)
  {
    uint64_t v5 = v4;
    if (v1)
    {
      uint64_t v6 = v3;
      uint64_t v7 = *(void *)(v0 + 736);
      uint64_t v8 = *(void *)(v0 + 432);
      *(void *)(v0 + 72) = v2;
      *(void *)(v0 + 80) = v1;
      strcpy((char *)(v0 + 88), "{featureKey}");
      *(unsigned char *)(v0 + 101) = 0;
      *(_WORD *)(v0 + 102) = -5120;
      *(void *)(v0 + 104) = v8;
      *(void *)(v0 + 112) = v7;
      sub_1A8CE96DC();
      *(void *)(v0 + 120) = sub_1A8D5A000();
      *(void *)(v0 + 128) = v9;
      *(void *)(v0 + 136) = 0x7D644964757BLL;
      *(void *)(v0 + 144) = 0xE600000000000000;
      *(void *)(v0 + 152) = v6;
      *(void *)(v0 + 160) = v5;
      uint64_t v2 = sub_1A8D5A000();
      unint64_t v11 = v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v11 = 0;
    }
    sub_1A8CE9730(v2, v11, *(void *)(v0 + 408));
  }
  else
  {
    sub_1A8C8C7B0();
    swift_allocError();
    *uint64_t v12 = 11;
    swift_willThrow();
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1A8CE9378(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  *(void *)(*v3 + 784) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 792) = a2;
    *(void *)(v6 + 800) = a1;
    return MEMORY[0x1F4188298](sub_1A8CE94DC, 0, 0);
  }
}

uint64_t sub_1A8CE94DC()
{
  uint64_t v1 = *(void *)(v0 + 800);
  uint64_t v2 = *(void *)(v0 + 792);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 424) + 56), *(void *)(*(void *)(v0 + 424) + 80));
  uint64_t v3 = sub_1A8C9AE64();
  if (v4)
  {
    uint64_t v5 = v4;
    if (v2)
    {
      uint64_t v6 = v3;
      uint64_t v7 = *(void *)(v0 + 736);
      uint64_t v8 = *(void *)(v0 + 432);
      *(void *)(v0 + 72) = v1;
      *(void *)(v0 + 80) = v2;
      strcpy((char *)(v0 + 88), "{featureKey}");
      *(unsigned char *)(v0 + 101) = 0;
      *(_WORD *)(v0 + 102) = -5120;
      *(void *)(v0 + 104) = v8;
      *(void *)(v0 + 112) = v7;
      sub_1A8CE96DC();
      *(void *)(v0 + 120) = sub_1A8D5A000();
      *(void *)(v0 + 128) = v9;
      *(void *)(v0 + 136) = 0x7D644964757BLL;
      *(void *)(v0 + 144) = 0xE600000000000000;
      *(void *)(v0 + 152) = v6;
      *(void *)(v0 + 160) = v5;
      uint64_t v1 = sub_1A8D5A000();
      unint64_t v11 = v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v11 = 0;
    }
    sub_1A8CE9730(v1, v11, *(void *)(v0 + 408));
  }
  else
  {
    sub_1A8C8C7B0();
    swift_allocError();
    *uint64_t v12 = 11;
    swift_willThrow();
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

unint64_t sub_1A8CE96DC()
{
  unint64_t result = qword_1EB5E9358;
  if (!qword_1EB5E9358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9358);
  }
  return result;
}

uint64_t sub_1A8CE9730@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a2)
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E92A0);
    MEMORY[0x1F4188790](v6 - 8, v7);
    uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_bridgeObjectRetain();
    sub_1A8D59590();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_1A8D595A0();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v9, v10);
    }
    sub_1A8CE9A3C((uint64_t)v9);
  }
  if (qword_1EB5E92F0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1A8D59A80();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB5E92D8);
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1A8D59A60();
  os_log_type_t v14 = sub_1A8D59EE0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v22 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    if (a2) {
      uint64_t v17 = a1;
    }
    else {
      uint64_t v17 = 0x3E6C696E3CLL;
    }
    if (a2) {
      unint64_t v18 = a2;
    }
    else {
      unint64_t v18 = 0xE500000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1A8C90120(v17, v18, &v22);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A8C7F000, v13, v14, "failed to create url from string: %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v16, -1, -1);
    MEMORY[0x1AD0E6EB0](v15, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1A8C8C7B0();
  swift_allocError();
  unsigned char *v19 = 6;
  return swift_willThrow();
}

uint64_t sub_1A8CE9A3C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E92A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for URLResolver(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0(a1 + 56);
}

_OWORD *initializeWithCopy for URLResolver(_OWORD *a1, _OWORD *a2)
{
  long long v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
  long long v5 = a2[5];
  a1[5] = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(char *, char *, uint64_t))(v5 - 8);
  swift_unknownObjectRetain();
  v7((char *)a1 + 56, (char *)a2 + 56, v6);
  return a1;
}

uint64_t *assignWithCopy for URLResolver(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v4 = a2[6];
  a1[5] = a2[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[6] = v4;
  __swift_assign_boxed_opaque_existential_1(a1 + 7, a2 + 7);
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for URLResolver(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = v6;
  __swift_destroy_boxed_opaque_existential_0(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for URLResolver(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLResolver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for URLResolver()
{
  return &type metadata for URLResolver;
}

ValueMetadata *type metadata accessor for GeoClassificationCache()
{
  return &type metadata for GeoClassificationCache;
}

void *sub_1A8CE9D60(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, void *a7)
{
  v34[0] = a5;
  v34[1] = a6;
  _OWORD v34[2] = a3;
  v34[3] = a4;
  v34[4] = a1;
  v34[5] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_log_type_t v14 = (void *)sub_1A8D40BC0(v34, a7);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EB5EAB38 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1A8D59A80();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EB5EAB48);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_1A8D59A60();
    os_log_type_t v20 = sub_1A8D59F00();
    if (!os_log_type_enabled(v19, v20))
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return 0;
    }
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v32[0] = v22;
    *(_DWORD *)uint64_t v21 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1A8C90120(a1, a2, v32);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1A8C90120(a3, a4, v32);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v19, v20, "no geoclassification cache for featureID: %{public}s, and bundle ID: %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v22, -1, -1);
    MEMORY[0x1AD0E6EB0](v21, -1, -1);
LABEL_15:

    return 0;
  }
  uint64_t v17 = v14;
  if ((sub_1A8D3FD58(a5, a6, v14, v15, v16) & 1) == 0)
  {
    uint64_t v31 = a1;
    if (qword_1EB5EAB38 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1A8D59A80();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EB5EAB48);
    swift_bridgeObjectRetain_n();
    uint64_t v24 = sub_1A8D59A60();
    os_log_type_t v25 = sub_1A8D59F00();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v30 = a7;
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      v32[0] = v29;
      *(_DWORD *)uint64_t v26 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_1A8C90120(v31, a2, v32);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v24, v25, "Invalid geo cache for featureID: %{public}s. Deleting cache entry", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v29, -1, -1);
      uint64_t v27 = v26;
      a7 = v30;
      MEMORY[0x1AD0E6EB0](v27, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v32[0] = a5;
    v32[1] = a6;
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    sub_1A8D59CA0();
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v19 = sub_1A8D59BC0();
    swift_bridgeObjectRelease();
    objc_msgSend(a7, sel_removeObjectForKey_, v19);
    swift_bridgeObjectRelease();

    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

id sub_1A8CEA284(id result)
{
  if (!result)
  {
    if (qword_1EB5EAD00 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1A8D59A80();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EB5EAC50);
    uint64_t v3 = sub_1A8D59A60();
    os_log_type_t v4 = sub_1A8D59EE0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_1A8C7F000, v3, v4, "GeoClassificationCache was passed invalid user defaults!", v5, 2u);
      MEMORY[0x1AD0E6EB0](v5, -1, -1);
    }

    id v6 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
    return objc_msgSend(v6, sel_init);
  }
  return result;
}

void sub_1A8CEA388(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    if (qword_1EB5EAD00 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1A8D59A80();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EB5EAC50);
    uint64_t v3 = sub_1A8D59A60();
    os_log_type_t v4 = sub_1A8D59F00();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_1A8C7F000, v3, v4, "Refreshing geoclassification cache", v5, 2u);
      MEMORY[0x1AD0E6EB0](v5, -1, -1);
    }

    id v6 = self;
    uint64_t v7 = (void *)sub_1A8D59BC0();
    uint64_t v8 = (void *)sub_1A8D59BC0();
    uint64_t v9 = (void *)sub_1A8D59BC0();
    aBlock[4] = nullsub_1;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A8D12F00;
    aBlock[3] = &block_descriptor_9;
    uint64_t v10 = _Block_copy(aBlock);
    objc_msgSend(v6, sel_requestGeoClassificationForFeatureID_bundleID_altDSID_ignoreCache_completion_, v7, v8, v9, 1, v10);
    _Block_release(v10);
  }
  else
  {
    if (qword_1EB5EAD00 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1A8D59A80();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB5EAC50);
    osos_log_t log = sub_1A8D59A60();
    os_log_type_t v12 = sub_1A8D59EE0();
    if (os_log_type_enabled(oslog, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_1A8C7F000, oslog, v12, "altDSID is nil, unable to refresh geoclassification", v13, 2u);
      MEMORY[0x1AD0E6EB0](v13, -1, -1);
    }
  }
}

void sub_1A8CEA634(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v29 = a1 + 64;
    uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
    uint64_t v7 = -1;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    unint64_t v8 = v7 & *(void *)(a1 + 64);
    int64_t v30 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v9 = swift_bridgeObjectRetain();
    int64_t v10 = 0;
    uint64_t v31 = v9;
    while (1)
    {
      if (v8)
      {
        uint64_t v32 = (v8 - 1) & v8;
        int64_t v33 = v10;
        unint64_t v11 = __clz(__rbit64(v8)) | (v10 << 6);
      }
      else
      {
        int64_t v12 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_42;
        }
        if (v12 >= v30)
        {
LABEL_32:
          swift_release();
          return;
        }
        unint64_t v13 = *(void *)(v29 + 8 * v12);
        int64_t v14 = v10 + 1;
        if (!v13)
        {
          int64_t v14 = v10 + 2;
          if (v10 + 2 >= v30) {
            goto LABEL_32;
          }
          unint64_t v13 = *(void *)(v29 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v10 + 3;
            if (v10 + 3 >= v30) {
              goto LABEL_32;
            }
            unint64_t v13 = *(void *)(v29 + 8 * v14);
            if (!v13)
            {
              uint64_t v15 = v10 + 4;
              if (v10 + 4 >= v30) {
                goto LABEL_32;
              }
              unint64_t v13 = *(void *)(v29 + 8 * v15);
              if (!v13)
              {
                while (1)
                {
                  int64_t v14 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_43;
                  }
                  if (v14 >= v30) {
                    goto LABEL_32;
                  }
                  unint64_t v13 = *(void *)(v29 + 8 * v14);
                  ++v15;
                  if (v13) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v14 = v10 + 4;
            }
          }
        }
LABEL_21:
        uint64_t v32 = (v13 - 1) & v13;
        int64_t v33 = v14;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
      }
      unint64_t v16 = (uint64_t *)(*(void *)(v9 + 48) + 16 * v11);
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      unint64_t v19 = *(void *)(*(void *)(v9 + 56) + 8 * v11);
      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_1A8D5A1C0();
        if (!v20) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!v20) {
          goto LABEL_5;
        }
      }
      if (v20 < 1)
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      uint64_t v21 = 0;
      do
      {
        if ((v19 & 0xC000000000000001) != 0) {
          uint64_t v22 = (char *)MEMORY[0x1AD0E6030](v21, v19);
        }
        else {
          uint64_t v22 = (char *)*(id *)(v19 + 8 * v21 + 32);
        }
        uint64_t v23 = v22;
        ++v21;
        uint64_t v24 = *(void *)&v22[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey];
        uint64_t v25 = *(void *)&v22[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey + 8];
        v36[0] = a2;
        v36[1] = a3;
        _OWORD v36[2] = v17;
        uint64_t v36[3] = v18;
        v36[4] = v24;
        v36[5] = v25;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A8D3FFF0(v36, a4, v23, a2, a3);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while (v20 != v21);
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = v31;
      unint64_t v8 = v32;
      int64_t v10 = v33;
    }
  }
  if (qword_1EB5EAB38 != -1) {
LABEL_44:
  }
    swift_once();
  uint64_t v26 = sub_1A8D59A80();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EB5EAB48);
  osos_log_t loga = sub_1A8D59A60();
  os_log_type_t v27 = sub_1A8D59EE0();
  if (os_log_type_enabled(osloga, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl(&dword_1A8C7F000, osloga, v27, "failed to update geoclassification cache, missing altDSID", v28, 2u);
    MEMORY[0x1AD0E6EB0](v28, -1, -1);
  }
}

void sub_1A8CEA9D8()
{
}

void sub_1A8CEA9EC()
{
}

void sub_1A8CEAA00()
{
}

void sub_1A8CEAA14(const char *a1, CFNotificationName *a2)
{
  if (qword_1EB5EAB40 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A8D59A80();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EAB60);
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59F00();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1A8C7F000, v5, v6, a1, v7, 2u);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }

  unint64_t v8 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(v8, *a2, 0, 0, 0);
}

uint64_t sub_1A8CEAB38(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t a4, char a5)
{
  return sub_1A8CEAB88(a1, a2, a3, a4, a5, &qword_1EB5EAC40, (void (*)(void))type metadata accessor for CloudFeature, &qword_1EB5E9FC0);
}

uint64_t sub_1A8CEAB60(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t a4, char a5)
{
  return sub_1A8CEAB88(a1, a2, a3, a4, a5, &qword_1EB5E9890, (void (*)(void))type metadata accessor for Ticket, &qword_1E979EFD8);
}

uint64_t sub_1A8CEAB88(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t a4, char a5, uint64_t *a6, void (*a7)(void), uint64_t *a8)
{
  uint64_t v86 = a7;
  os_log_type_t v87 = a8;
  uint64_t v10 = v8;
  uint64_t v88 = a3;
  uint64_t v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t v17 = MEMORY[0x1F4188790](v15, v16);
  unint64_t v19 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v17, v20);
  uint64_t v23 = (char *)&v85 - v22;
  MEMORY[0x1F4188790](v21, v24);
  uint64_t v26 = (char *)&v85 - v25;
  sub_1A8CB249C(v10, (uint64_t)&v85 - v25, a6);
  if (!a2) {
    goto LABEL_9;
  }
  os_log_type_t v27 = &v26[v15[13]];
  uint64_t v28 = *((void *)v27 + 1);
  if (!v28)
  {
    sub_1A8C8DE74((uint64_t)v26, a6);
LABEL_27:
    if (qword_1EB5EAB38 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_1A8D59A80();
    __swift_project_value_buffer(v44, (uint64_t)qword_1EB5EAB48);
    uint64_t v45 = sub_1A8D59A60();
    os_log_type_t v46 = sub_1A8D59F00();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v90 = v48;
      *(_DWORD *)uint64_t v47 = 136315138;
      v86(0);
      __swift_instantiateConcreteTypeFromMangledName(v87);
      uint64_t v49 = sub_1A8D5A540();
      uint64_t v89 = sub_1A8C90120(v49, v50, &v90);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A8C7F000, v45, v46, "Invalid cache box with type %s ... session id changed", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v48, -1, -1);
      MEMORY[0x1AD0E6EB0](v47, -1, -1);
    }

    return 0;
  }
  if (*(void *)v27 == a1 && v28 == a2)
  {
LABEL_9:
    sub_1A8C8DE74((uint64_t)v26, a6);
  }
  else
  {
    char v30 = sub_1A8D5A390();
    sub_1A8C8DE74((uint64_t)v26, a6);
    if ((v30 & 1) == 0) {
      goto LABEL_27;
    }
  }
  uint64_t v31 = (uint64_t **)(v10 + v15[14]);
  uint64_t v32 = v31[1];
  if (!a4)
  {
    if (!v32)
    {
LABEL_32:
      sub_1A8CB249C(v10, (uint64_t)v23, a6);
LABEL_33:
      sub_1A8C8DE74((uint64_t)v23, a6);
      goto LABEL_34;
    }
LABEL_19:
    sub_1A8CB249C(v10, (uint64_t)v23, a6);
    goto LABEL_20;
  }
  if (!v32) {
    goto LABEL_19;
  }
  if (*v31 == v88 && v32 == (uint64_t *)a4) {
    goto LABEL_32;
  }
  char v34 = sub_1A8D5A390();
  sub_1A8CB249C(v10, (uint64_t)v23, a6);
  if (v34) {
    goto LABEL_33;
  }
LABEL_20:
  uint64_t v35 = *(void *)&v23[v15[14] + 8];
  sub_1A8C8DE74((uint64_t)v23, a6);
  if (v35)
  {
    if (qword_1EB5EAB38 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_1A8D59A80();
    __swift_project_value_buffer(v36, (uint64_t)qword_1EB5EAB48);
    sub_1A8CB249C(v10, (uint64_t)v19, a6);
    swift_bridgeObjectRetain_n();
    unint64_t v37 = sub_1A8D59A60();
    os_log_type_t v38 = sub_1A8D59F00();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v90 = v40;
      *(_DWORD *)uint64_t v39 = 136315394;
      uint64_t v41 = (uint64_t *)&v19[v15[14]];
      if (v41[1])
      {
        uint64_t v42 = *v41;
        unint64_t v43 = v41[1];
      }
      else
      {
        unint64_t v43 = 0xE300000000000000;
        uint64_t v42 = 7104878;
      }
      swift_bridgeObjectRetain();
      uint64_t v89 = sub_1A8C90120(v42, v43, &v90);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      sub_1A8C8DE74((uint64_t)v19, a6);
      *(_WORD *)(v39 + 12) = 2080;
      if (a4) {
        uint64_t v82 = (uint64_t)v88;
      }
      else {
        uint64_t v82 = 7104878;
      }
      if (a4) {
        unint64_t v83 = a4;
      }
      else {
        unint64_t v83 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v89 = sub_1A8C90120(v82, v83, &v90);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A8C7F000, v37, v38, "invalid ... altDSID changed. Cache altDSID: %s, currentAltDSID: %s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v40, -1, -1);
      MEMORY[0x1AD0E6EB0](v39, -1, -1);
    }
    else
    {
      sub_1A8C8DE74((uint64_t)v19, a6);

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
LABEL_34:
  if (a5) {
    return 1;
  }
  uint64_t v52 = sub_1A8D596F0();
  uint64_t v88 = &v85;
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = *(void *)(v53 + 64);
  MEMORY[0x1F4188790](v52, v55);
  unint64_t v56 = (v54 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v57 = (char *)&v85 - v56;
  uint64_t v58 = v10 + v15[11];
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  os_log_type_t v87 = &v85;
  MEMORY[0x1F4188790](v59 - 8, v60);
  int v62 = (char *)&v85 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8CB249C(v58, (uint64_t)v62, &qword_1EB5EACF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v62, 1, v52) == 1)
  {
    sub_1A8C8DE74((uint64_t)v62, &qword_1EB5EACF0);
    return 1;
  }
  else
  {
    uint64_t v63 = (*(uint64_t (**)(char *, char *, uint64_t))(v53 + 32))((char *)&v85 - v56, v62, v52);
    MEMORY[0x1F4188790](v63, v64);
    uint64_t v65 = (char *)&v85 - v56;
    sub_1A8D596E0();
    sub_1A8D59620();
    if (v66 <= 0.0)
    {
      uint64_t v76 = *(void *)&v66;
      if (qword_1EB5EAB38 != -1) {
        swift_once();
      }
      uint64_t v77 = sub_1A8D59A80();
      __swift_project_value_buffer(v77, (uint64_t)qword_1EB5EAB48);
      uint64_t v78 = sub_1A8D59A60();
      os_log_type_t v79 = sub_1A8D59F00();
      if (os_log_type_enabled(v78, v79))
      {
        uint64_t v80 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v80 = 134349056;
        uint64_t v90 = v76;
        sub_1A8D59FE0();
        _os_log_impl(&dword_1A8C7F000, v78, v79, "invalid ... time until expiry is %{public}f", v80, 0xCu);
        MEMORY[0x1AD0E6EB0](v80, -1, -1);
      }

      uint64_t v81 = *(void (**)(char *, uint64_t))(v53 + 8);
      v81(v65, v52);
      v81(v57, v52);
      return 0;
    }
    sub_1A8D59620();
    BOOL v51 = v67 > 0.0;
    if (v67 <= 0.0)
    {
      uint64_t v68 = *(void *)&v67;
      if (qword_1EB5EAB38 != -1) {
        swift_once();
      }
      uint64_t v69 = sub_1A8D59A80();
      __swift_project_value_buffer(v69, (uint64_t)qword_1EB5EAB48);
      uint64_t v70 = sub_1A8D59A60();
      os_log_type_t v71 = sub_1A8D59F00();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = v52;
        unint64_t v73 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v73 = 134349056;
        uint64_t v90 = v68;
        sub_1A8D59FE0();
        _os_log_impl(&dword_1A8C7F000, v70, v71, "invalid ... time since fetch is %{public}f", v73, 0xCu);
        uint64_t v74 = v73;
        uint64_t v52 = v72;
        unint64_t v57 = (char *)&v85 - v56;
        MEMORY[0x1AD0E6EB0](v74, -1, -1);
      }
    }
    uint64_t v75 = *(void (**)(char *, uint64_t))(v53 + 8);
    v75(v65, v52);
    v75(v57, v52);
  }
  return v51;
}

uint64_t FeatureCache.allFeatures(forDSID:ignoreTTL:)(uint64_t *a1, unint64_t a2, char a3)
{
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (qword_1EB5E9F90 != -1) {
    swift_once();
  }
  id v7 = sub_1A8D11248(a3 & 1);
  if (v7)
  {
    id v8 = v7;
    MEMORY[0x1AD0E5C70]();
    if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1A8D59D80();
    }
    sub_1A8D59DA0();
    sub_1A8D59D70();
  }
  sub_1A8CB249C(v3 + 16, (uint64_t)v14, &qword_1EB5EAD60);
  uint64_t v9 = v15;
  if (v15)
  {
    uint64_t v10 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    uint64_t v11 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v10 + 64))(0xD000000000000029, 0x80000001A8D64D70, v9, v10);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
    if (v11)
    {
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_1A8CEE148(v11, a1, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A8CEBC9C(v12);
    }
  }
  else
  {
    sub_1A8C8DE74((uint64_t)v14, &qword_1EB5EAD60);
  }
  return v17;
}

uint64_t sub_1A8CEB6E4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A8D59530();
  swift_allocObject();
  uint64_t v6 = sub_1A8D59520();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1A8D5A1C0();
    uint64_t v7 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v7) {
      goto LABEL_10;
    }
  }
  if (v7 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      uint64_t v10 = (char *)MEMORY[0x1AD0E6030](i, a1);
    }
    else {
      uint64_t v10 = (char *)*(id *)(a1 + 8 * i + 32);
    }
    uint64_t v11 = v10;
    sub_1A8CECA2C(v10, v6, a2, a3);
  }
LABEL_10:
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1A8CEB80C(uint64_t *a1, unint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 56);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v5 + 16));
  sub_1A8CB249C(v2 + 16, (uint64_t)v17, &qword_1EB5EAD60);
  uint64_t v6 = v18;
  if (v18)
  {
    uint64_t v7 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    uint64_t v8 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v7 + 64))(0xD000000000000029, 0x80000001A8D64D70, v6, v7);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
    if (v8)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1A8CEE684(v8, v2, a1, a2);
      swift_release();
      swift_bridgeObjectRelease();
      if (qword_1EB5EAB38 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_1A8D59A80();
      __swift_project_value_buffer(v9, (uint64_t)qword_1EB5EAB48);
      swift_bridgeObjectRetain_n();
      uint64_t v10 = sub_1A8D59A60();
      os_log_type_t v11 = sub_1A8D59F00();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        v17[0] = v13;
        *(_DWORD *)uint64_t v12 = 134218242;
        sub_1A8D59FE0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v12 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v14 = sub_1A8D59B50();
        unint64_t v16 = v15;
        swift_bridgeObjectRelease();
        sub_1A8C90120(v14, v16, v17);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A8C7F000, v10, v11, "Expired cache for %ld features: %s", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v13, -1, -1);
        MEMORY[0x1AD0E6EB0](v12, -1, -1);
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    sub_1A8C8DE74((uint64_t)v17, &qword_1EB5EAD60);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  }
  if (qword_1EB5E9F90 != -1) {
    swift_once();
  }
  sub_1A8D12300();
}

uint64_t sub_1A8CEBB44(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1A8C9D544(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1A8D5A200();
  __break(1u);
  return result;
}

uint64_t sub_1A8CEBC9C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1A8D5A1C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1A8D5A1C0();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x1AD0E6040](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_1A8CEDF24(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1A8D5A1C0();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_1A8D59D70();
}

uint64_t sub_1A8CEBE68(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_1A8C9D798(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for WaitlistCacheBox() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1A8D5A200();
  __break(1u);
  return result;
}

uint64_t static FeatureCache.shared.getter()
{
  if (qword_1EB5EAB78 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t FeatureCache.persistentDomain.getter()
{
  sub_1A8CB249C(v0 + 16, (uint64_t)v4, &qword_1EB5EAD60);
  uint64_t v1 = v5;
  if (v5)
  {
    uint64_t v2 = v6;
    __swift_project_boxed_opaque_existential_1(v4, v5);
    uint64_t v1 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v2 + 64))(0xD000000000000029, 0x80000001A8D64D70, v1, v2);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
  }
  else
  {
    sub_1A8C8DE74((uint64_t)v4, &qword_1EB5EAD60);
  }
  return v1;
}

void sub_1A8CEC11C(void **a1)
{
  unint64_t v3 = *a1;
  int64_t v4 = (char ***)((char *)*a1 + OBJC_IVAR___CloudFeature_featureID);
  uint64_t v5 = v4[1];
  uint64_t v59 = *v4;
  swift_bridgeObjectRetain();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAC40);
  sub_1A8C92C7C(&qword_1EB5E9888, &qword_1EB5EAC40);
  uint64_t v7 = sub_1A8D59510();
  unint64_t v9 = v8;
  uint64_t v10 = *(void *)(v1 + 56);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 16));
  sub_1A8CB249C(v1 + 16, (uint64_t)v61, &qword_1EB5EAD60);
  uint64_t v11 = v62;
  uint64_t v57 = v7;
  unint64_t v58 = v9;
  if (v62)
  {
    uint64_t v12 = v63;
    __swift_project_boxed_opaque_existential_1(v61, v62);
    v60[3] = MEMORY[0x1E4F277B8];
    v60[0] = v7;
    v60[1] = v9;
    unint64_t v13 = v9;
    unint64_t v14 = *(void (**)(void *, char **, char **, uint64_t, uint64_t))(v12 + 8);
    sub_1A8CA17BC(v7, v13);
    v14(v60, v59, v5, v11, v12);
    sub_1A8C8DE74((uint64_t)v60, (uint64_t *)&unk_1EB5EA170);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
  }
  else
  {
    sub_1A8C8DE74((uint64_t)v61, &qword_1EB5EAD60);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_1A8D596F0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x1F4188790](v15, v18);
  uint64_t v19 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)a1 + *(int *)(v6 + 44);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  MEMORY[0x1F4188790](v21 - 8, v22);
  uint64_t v24 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8CB249C(v20, (uint64_t)v24, &qword_1EB5EACF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v24, 1, v15) == 1)
  {
    sub_1A8C8DE74((uint64_t)v24, &qword_1EB5EACF0);
    if (qword_1EB5EAB38 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1A8D59A80();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EB5EAB48);
    id v26 = v3;
    os_log_type_t v27 = sub_1A8D59A60();
    os_log_type_t v28 = sub_1A8D59F00();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v30 = v57;
    if (v29)
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 138543362;
      v61[0] = (uint64_t)v26;
      id v33 = v26;
      sub_1A8D59FE0();
      *uint64_t v32 = v26;

      _os_log_impl(&dword_1A8C7F000, v27, v28, "updating cache for feature: %{public}@, no cache-ttl.", v31, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v32, -1, -1);
      MEMORY[0x1AD0E6EB0](v31, -1, -1);
      sub_1A8C93C98(v30, v58);
    }
    else
    {
      sub_1A8C93C98(v57, v58);
    }
  }
  else
  {
    uint64_t v59 = &v52;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))((char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v15);
    if (qword_1EB5EAB38 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1A8D59A80();
    uint64_t v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1EB5EAB48);
    MEMORY[0x1F4188790](v35, v36);
    unint64_t v37 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v37, v37, v15);
    id v38 = v3;
    uint64_t v39 = sub_1A8D59A60();
    os_log_type_t v40 = sub_1A8D59F00();
    int v41 = v40;
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v42 = swift_slowAlloc();
      unint64_t v56 = &v52;
      uint64_t v43 = v42;
      uint64_t v44 = (void *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      v61[0] = v55;
      *(_DWORD *)uint64_t v43 = 138543618;
      int v54 = v41;
      uint64_t v52 = v19;
      os_log_t v53 = v39;
      v60[0] = v38;
      id v45 = v38;
      sub_1A8D59FE0();
      void *v44 = v38;

      *(_WORD *)(v43 + 12) = 2082;
      sub_1A8C93C40((unint64_t *)&qword_1EB5E92D0);
      uint64_t v46 = sub_1A8D5A360();
      v60[0] = sub_1A8C90120(v46, v47, v61);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      uint64_t v48 = *(void (**)(char *, uint64_t))(v16 + 8);
      v48(v37, v15);
      os_log_t v49 = v53;
      _os_log_impl(&dword_1A8C7F000, v53, (os_log_type_t)v54, "updating cache for feature: %{public}@, cache-ttl:%{public}s", (uint8_t *)v43, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v44, -1, -1);
      uint64_t v50 = v55;
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v50, -1, -1);
      MEMORY[0x1AD0E6EB0](v43, -1, -1);
      sub_1A8C93C98(v57, v58);

      v48(v52, v15);
    }
    else
    {
      sub_1A8C93C98(v57, v58);

      BOOL v51 = *(void (**)(char *, uint64_t))(v16 + 8);
      v51(v37, v15);

      v51(v19, v15);
    }
  }
}

void sub_1A8CECA2C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAC40);
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (void **)((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (sub_1A8D59CC0())
  {
    if (qword_1EB5E9F90 != -1) {
      swift_once();
    }
    sub_1A8D1181C(a1);
  }
  else
  {
    uint64_t v52 = a3;
    uint64_t v53 = a4;
    uint64_t v54 = a2;
    uint64_t v55 = v4;
    uint64_t v13 = sub_1A8D596F0();
    unint64_t v58 = &v47;
    uint64_t v14 = *(void *)(v13 - 8);
    MEMORY[0x1F4188790](v13, v15);
    unint64_t v50 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v51 = v16;
    uint64_t v57 = (char *)&v47 - v50;
    uint64_t v17 = (uint64_t)&a1[OBJC_IVAR___CloudFeature_ttl];
    swift_beginAccess();
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    unint64_t v56 = &v47;
    uint64_t v19 = *(void *)(*(void *)(v18 - 8) + 64);
    MEMORY[0x1F4188790](v18 - 8, v20);
    unint64_t v21 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
    sub_1A8CB249C(v17, (uint64_t)&v47 - v21, &qword_1EB5EACF0);
    uint64_t v22 = v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))((char *)&v47 - v21, 1, v13) == 1)
    {
      sub_1A8C8DE74((uint64_t)&v47 - v21, &qword_1EB5EACF0);
      if (qword_1EB5EAB38 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_1A8D59A80();
      __swift_project_value_buffer(v23, (uint64_t)qword_1EB5EAB48);
      uint64_t v24 = a1;
      uint64_t v25 = sub_1A8D59A60();
      os_log_type_t v26 = sub_1A8D59EE0();
      if (os_log_type_enabled(v25, v26))
      {
        os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
        os_log_type_t v28 = (void *)swift_slowAlloc();
        *(_DWORD *)os_log_type_t v27 = 138543362;
        uint64_t v59 = v24;
        BOOL v29 = v24;
        sub_1A8D59FE0();
        *os_log_type_t v28 = v24;

        _os_log_impl(&dword_1A8C7F000, v25, v26, "failed to cache feature %{public}@, missing TTL", v27, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v28, -1, -1);
        MEMORY[0x1AD0E6EB0](v27, -1, -1);
      }
      else
      {
      }
    }
    else
    {
      uint64_t v30 = *(uint64_t (**)(void))(v14 + 32);
      uint64_t v48 = (int *)v9;
      uint64_t v49 = v22 + 32;
      uint64_t v31 = v57;
      uint64_t v32 = v30();
      unint64_t v56 = &v47;
      MEMORY[0x1F4188790](v32, v33);
      uint64_t v34 = (char *)&v47 - v21;
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))((char *)&v47 - v21, v31, v13);
      uint64_t v35 = v22;
      uint64_t v36 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v22 + 56))((char *)&v47 - v21, 0, 1, v13);
      uint64_t v47 = (uint64_t)&v47;
      MEMORY[0x1F4188790](v36, v37);
      id v38 = (char *)&v47 - v50;
      uint64_t v39 = a1;
      sub_1A8D596E0();
      __swift_project_boxed_opaque_existential_1((void *)(v55 + 64), *(void *)(v55 + 88));
      os_log_type_t v40 = sub_1A8C8E620();
      uint64_t v42 = v41;
      *uint64_t v12 = v39;
      uint64_t v43 = v48;
      sub_1A8C83BCC((uint64_t)v34, (uint64_t)v12 + v48[11], &qword_1EB5EACF0);
      ((void (*)(char *, char *, uint64_t))v30)((char *)v12 + v43[12], v38, v13);
      uint64_t v44 = (char **)((char *)v12 + v43[13]);
      void *v44 = v40;
      v44[1] = v42;
      id v45 = (void **)((char *)v12 + v43[14]);
      uint64_t v46 = v53;
      void *v45 = v52;
      v45[1] = v46;
      swift_bridgeObjectRetain();
      sub_1A8CEC11C(v12);
      sub_1A8C8DE74((uint64_t)v12, &qword_1EB5EAC40);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v57, v13);
    }
  }
}

void sub_1A8CECFB4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  sub_1A8CB249C(v0 + 16, (uint64_t)v9, &qword_1EB5EAD60);
  if (v10)
  {
    uint64_t v2 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    sub_1A8C90A64(MEMORY[0x1E4FBC860]);
    (*(void (**)(void))(v2 + 56))();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  }
  else
  {
    sub_1A8C8DE74((uint64_t)v9, &qword_1EB5EAD60);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  if (qword_1EB5EAB38 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A8D59A80();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB5EAB48);
  uint64_t v4 = sub_1A8D59A60();
  os_log_type_t v5 = sub_1A8D59F00();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_1A8C7F000, v4, v5, "Reset feature cache.", v6, 2u);
    MEMORY[0x1AD0E6EB0](v6, -1, -1);
  }

  if (qword_1EB5E9F90 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void **)(qword_1EB5ECCE0 + 16);
  unint64_t v8 = (void *)sub_1A8D59BC0();
  objc_msgSend(v7, sel_removeObjectForKey_, v8);
}

uint64_t sub_1A8CED1BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 56);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 16));
  sub_1A8CB249C(v1 + 16, (uint64_t)v46, &qword_1EB5EAD60);
  uint64_t v5 = v47;
  if (v47)
  {
    uint64_t v6 = v48;
    __swift_project_boxed_opaque_existential_1(v46, v47);
    unint64_t v7 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v6 + 64))(0xD000000000000029, 0x80000001A8D64D70, v5, v6);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
    if (v7) {
      goto LABEL_6;
    }
  }
  else
  {
    sub_1A8C8DE74((uint64_t)v46, &qword_1EB5EAD60);
  }
  unint64_t v7 = sub_1A8C90A64(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRelease();
LABEL_6:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  if (*(void *)(v7 + 16))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
    MEMORY[0x1F4188790](v8 - 8, v10);
    uint64_t v11 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v12 = sub_1A8D596F0();
    uint64_t v13 = *(void *)(v12 - 8);
    id v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v45(v11, 1, 1, v12);
    swift_retain();
    sub_1A8CEE994(v7, v2, (uint64_t)v11);
    swift_bridgeObjectRelease();
    swift_release();
    if (qword_1EB5E9F90 != -1) {
      swift_once();
    }
    id v14 = sub_1A8D11248(0);
    if (v14)
    {
      uint64_t v16 = v14;
      uint64_t v39 = v13 + 56;
      int v41 = v37;
      uint64_t v42 = a1;
      uint64_t v44 = v37;
      uint64_t v17 = *(void *)(v13 + 64);
      uint64_t v18 = MEMORY[0x1F4188790](v14, v15);
      id v38 = (char *)((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      os_log_type_t v40 = (char *)((char *)v37 - v38);
      uint64_t v19 = v18 + OBJC_IVAR___CloudFeature_ttl;
      uint64_t v20 = swift_beginAccess();
      uint64_t v43 = v37;
      MEMORY[0x1F4188790](v20, v21);
      unint64_t v22 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
      sub_1A8CB249C(v19, (uint64_t)v37 - v22, &qword_1EB5EACF0);
      uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      if (v23((char *)v37 - v22, 1, v12) == 1)
      {

        sub_1A8C8DE74((uint64_t)v37 - v22, &qword_1EB5EACF0);
      }
      else
      {
        v37[0] = *(void *)(v13 + 32);
        v37[1] = v13 + 32;
        uint64_t v26 = ((uint64_t (*)(char *, char *, uint64_t))v37[0])(v40, (char *)v37 - v22, v12);
        uint64_t v43 = v37;
        uint64_t v28 = MEMORY[0x1F4188790](v26, v27);
        BOOL v29 = (char *)((char *)v37 - v38);
        id v38 = (char *)v37;
        MEMORY[0x1F4188790](v28, v30);
        sub_1A8CB249C((uint64_t)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v37 - v22, &qword_1EB5EACF0);
        if (v23((char *)v37 - v22, 1, v12) == 1)
        {

          sub_1A8C8DE74((uint64_t)v37 - v22, &qword_1EB5EACF0);
          sub_1A8C8DE74((uint64_t)v11, &qword_1EB5EACF0);
          ((void (*)(char *, char *, uint64_t))v37[0])(v11, v40, v12);
          v45(v11, 0, 1, v12);
        }
        else
        {
          uint64_t v31 = ((uint64_t (*)(char *, char *, uint64_t))v37[0])(v29, (char *)v37 - v22, v12);
          MEMORY[0x1F4188790](v31, v32);
          uint64_t v33 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
          sub_1A8C93C40((unint64_t *)&unk_1EB5E92C0);
          uint64_t v34 = v40;
          if (sub_1A8D59B80()) {
            uint64_t v35 = v34;
          }
          else {
            uint64_t v35 = v29;
          }
          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v33, v35, v12);

          uint64_t v36 = *(void (**)(char *, uint64_t))(v13 + 8);
          v36(v29, v12);
          v36(v34, v12);
          v45(v33, 0, 1, v12);
          sub_1A8C83C30((uint64_t)v33, (uint64_t)v11);
        }
      }
      a1 = v42;
    }
    return sub_1A8C83BCC((uint64_t)v11, a1, &qword_1EB5EACF0);
  }
  else
  {
    uint64_t v24 = sub_1A8D596F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a1, 1, 1, v24);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A8CED77C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAC48);
  MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAC40);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[1];
  uint64_t v73 = *a1;
  uint64_t v74 = v16;
  sub_1A8C901F4((uint64_t)(a1 + 2), (uint64_t)&v75);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v76 = a3;
  uint64_t v19 = v71;
  unint64_t v18 = v72;
  sub_1A8D59500();
  swift_allocObject();
  sub_1A8D594F0();
  sub_1A8C92C7C((unint64_t *)&qword_1EB5EA2C8, &qword_1EB5EAC40);
  sub_1A8D594E0();
  if (v3)
  {

    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    sub_1A8C93C98(v19, v18);
    return sub_1A8C8DE74((uint64_t)v10, &qword_1EB5EAC48);
  }
  unint64_t v70 = v18;
  swift_release();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  sub_1A8C83BCC((uint64_t)v10, (uint64_t)v15, &qword_1EB5EAC40);
  uint64_t v20 = (char **)&v15[*(int *)(v11 + 52)];
  uint64_t v21 = *v20;
  unint64_t v22 = v20[1];
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 64), *(void *)(a2 + 88));
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1A8C8E620();
  if (!v22)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v21 == v23 && v22 == v24)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  char v26 = sub_1A8D5A390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0)
  {
LABEL_12:
    sub_1A8C8DE74((uint64_t)v15, &qword_1EB5EAC40);
    return sub_1A8C93C98(v19, v70);
  }
LABEL_14:
  uint64_t v27 = sub_1A8D596F0();
  double v67 = &v59;
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void *)(v28 + 64);
  MEMORY[0x1F4188790](v27, v30);
  unint64_t v63 = (v29 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v64 = (char *)&v59 - v63;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  uint64_t v65 = &v59;
  MEMORY[0x1F4188790](v31 - 8, v32);
  uint64_t v69 = v33;
  unint64_t v66 = ((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v34 = (char *)&v59 - v66;
  sub_1A8CB249C(v76, (uint64_t)&v59 - v66, &qword_1EB5EACF0);
  uint64_t v68 = v28;
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  uint64_t v36 = v27;
  uint64_t v62 = v35;
  if (v35(v34, 1, v27) == 1)
  {
    sub_1A8C93C98(v19, v70);
    sub_1A8C8DE74((uint64_t)v34, &qword_1EB5EACF0);
    uint64_t v38 = MEMORY[0x1F4188790](&v15[*(int *)(v11 + 44)], v37);
    uint64_t v39 = (char *)&v59 - v66;
    sub_1A8CB249C(v38, (uint64_t)&v59 - v66, &qword_1EB5EACF0);
    sub_1A8C8DE74((uint64_t)v15, &qword_1EB5EAC40);
    return sub_1A8C83C30((uint64_t)v39, v76);
  }
  else
  {
    os_log_type_t v40 = v64;
    int v41 = v34;
    uint64_t v42 = v36;
    uint64_t v60 = *(uint64_t (**)(char *, char *, uint64_t))(v68 + 32);
    uint64_t v61 = v68 + 32;
    uint64_t v43 = v60(v64, v41, v36);
    MEMORY[0x1F4188790](v43, v44);
    id v45 = (char *)&v59 - v63;
    uint64_t v65 = &v59;
    uint64_t v47 = MEMORY[0x1F4188790](&v15[*(int *)(v11 + 44)], v46);
    uint64_t v48 = (char *)&v59 - v66;
    sub_1A8CB249C(v47, (uint64_t)&v59 - v66, &qword_1EB5EACF0);
    if (v62(v48, 1, v36) == 1)
    {
      sub_1A8C93C98(v19, v70);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v40, v36);
      sub_1A8C8DE74((uint64_t)v15, &qword_1EB5EAC40);
      return sub_1A8C8DE74((uint64_t)v48, &qword_1EB5EACF0);
    }
    else
    {
      uint64_t v49 = v60(v45, v48, v36);
      uint64_t v65 = &v59;
      MEMORY[0x1F4188790](v49, v50);
      uint64_t v52 = (char *)&v59 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1A8C93C40((unint64_t *)&unk_1EB5E92C0);
      uint64_t v53 = v40;
      uint64_t v54 = v36;
      char v55 = sub_1A8D59B80();
      uint64_t v69 = &v59;
      uint64_t v56 = v68;
      if (v55) {
        uint64_t v57 = v53;
      }
      else {
        uint64_t v57 = v45;
      }
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v52, v57, v42);
      sub_1A8C93C98(v19, v70);
      unint64_t v58 = *(void (**)(char *, uint64_t))(v56 + 8);
      v58(v45, v54);
      v58(v64, v54);
      sub_1A8C8DE74((uint64_t)v15, &qword_1EB5EAC40);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v52, 0, 1, v54);
      return sub_1A8C83C30((uint64_t)v52, v76);
    }
  }
}

uint64_t FeatureCache.deinit()
{
  sub_1A8C8DE74(v0 + 16, &qword_1EB5EAD60);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  return v0;
}

uint64_t FeatureCache.__deallocating_deinit()
{
  sub_1A8C8DE74(v0 + 16, &qword_1EB5EAD60);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  return MEMORY[0x1F4186488](v0, 104, 7);
}

uint64_t sub_1A8CEDF24(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1A8D5A1C0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1A8D5A1C0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1A8C92C7C(&qword_1E979EFE0, &qword_1EB5E9630);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9630);
          uint64_t v12 = sub_1A8D3E49C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for CloudFeature();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1A8D5A200();
  __break(1u);
  return result;
}

uint64_t sub_1A8CEE148(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  uint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t v22 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v9) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v22 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_18:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_19:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    uint64_t v20 = qword_1EB5EAB78;
    swift_bridgeObjectRetain();
    if (v20 != -1) {
      swift_once();
    }
    id v21 = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(v18, v19, a2, a3, 0, 0);
    uint64_t result = swift_bridgeObjectRelease();
    if (v21)
    {
      MEMORY[0x1AD0E5C70](result);
      if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1A8D59D80();
      }
      sub_1A8D59DA0();
      uint64_t result = sub_1A8D59D70();
    }
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v9) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v22 + 8 * v16);
  if (v15) {
    goto LABEL_17;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v9) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v22 + 8 * v16);
  if (v15) {
    goto LABEL_17;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v9) {
    goto LABEL_29;
  }
  unint64_t v15 = *(void *)(v22 + 8 * v16);
  if (v15) {
    goto LABEL_17;
  }
  int64_t v16 = v11 + 4;
  if (v11 + 4 >= v9)
  {
LABEL_29:
    swift_release();
    return v23;
  }
  unint64_t v15 = *(void *)(v22 + 8 * v16);
  if (v15)
  {
LABEL_17:
    int64_t v11 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v9) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v22 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t method lookup function for FeatureCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeatureCache);
}

void sub_1A8CEE3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (sub_1A8D59CC0())
  {
    if (qword_1EB5E9F90 != -1) {
      swift_once();
    }
    sub_1A8D12964();
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    v23[2] = v23;
    uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
    MEMORY[0x1F4188790](v10 - 8, v12);
    unint64_t v13 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v14 = sub_1A8D596F0();
    uint64_t v24 = a5;
    uint64_t v15 = *(void *)(v14 - 8);
    MEMORY[0x1F4188790](v14, v16);
    v23[1] = v5;
    uint64_t v18 = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A8D596E0();
    sub_1A8D59630();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    uint64_t v19 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v15 + 56))((char *)v23 - v13, 0, 1, v14);
    MEMORY[0x1F4188790](v19, v20);
    sub_1A8CB249C((uint64_t)v23 - v13, (uint64_t)v23 - v13, &qword_1EB5EACF0);
    objc_allocWithZone((Class)type metadata accessor for CloudFeature());
    swift_bridgeObjectRetain();
    id v21 = (char *)sub_1A8CB79B4(a1, a2, 0, 0, 1, 0, 0, (uint64_t)v23 - v13);
    sub_1A8C8DE74((uint64_t)v23 - v13, &qword_1EB5EACF0);
    sub_1A8D59530();
    swift_allocObject();
    uint64_t v22 = sub_1A8D59520();
    sub_1A8CECA2C(v21, v22, a4, v24);

    swift_release();
  }
}

uint64_t sub_1A8CEE684(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t a4)
{
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v30 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v31 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (v8) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v21 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v21 < v30)
    {
      unint64_t v22 = *(void *)(v29 + 8 * v21);
      ++v10;
      if (v22) {
        goto LABEL_22;
      }
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v30) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v29 + 8 * v10);
      if (v22) {
        goto LABEL_22;
      }
      int64_t v10 = v21 + 2;
      if (v21 + 2 >= v30) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v29 + 8 * v10);
      if (v22) {
        goto LABEL_22;
      }
      int64_t v10 = v21 + 3;
      if (v21 + 3 >= v30) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v29 + 8 * v10);
      if (v22)
      {
LABEL_22:
        unint64_t v8 = (v22 - 1) & v22;
        for (unint64_t i = __clz(__rbit64(v22)) + (v10 << 6); ; unint64_t i = v19 | (v10 << 6))
        {
          uint64_t v24 = (uint64_t *)(*(void *)(v31 + 48) + 16 * i);
          uint64_t v25 = *v24;
          unint64_t v26 = v24[1];
          swift_bridgeObjectRetain();
          uint64_t v27 = (char *)FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(v25, v26, a3, a4, 0, 0);
          if (v27)
          {
            uint64_t v11 = v27;
            uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
            MEMORY[0x1F4188790](v12 - 8, v13);
            uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
            sub_1A8D59600();
            uint64_t v16 = sub_1A8D596F0();
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
            int64_t v32 = v10;
            uint64_t v17 = (uint64_t)&v11[OBJC_IVAR___CloudFeature_ttl];
            swift_beginAccess();
            sub_1A8C83C30((uint64_t)v15, v17);
            swift_endAccess();
            sub_1A8D59530();
            swift_allocObject();
            uint64_t v18 = sub_1A8D59520();
            sub_1A8CECA2C(v11, v18, (uint64_t)a3, a4);
            swift_bridgeObjectRelease();

            int64_t v10 = v32;
            uint64_t result = swift_release();
            if (!v8) {
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t result = swift_bridgeObjectRelease();
            if (!v8) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v19 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
        }
      }
      int64_t v23 = v21 + 4;
      if (v23 < v30)
      {
        unint64_t v22 = *(void *)(v29 + 8 * v23);
        if (v22)
        {
          int64_t v10 = v23;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v10 = v23 + 1;
          if (__OFADD__(v23, 1)) {
            goto LABEL_28;
          }
          if (v10 >= v30) {
            return swift_release();
          }
          unint64_t v22 = *(void *)(v29 + 8 * v10);
          ++v23;
          if (v22) {
            goto LABEL_22;
          }
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A8CEE994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v24 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (v9)
  {
    unint64_t v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v13 = v12 | (v11 << 6);
LABEL_5:
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v13);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    sub_1A8C901F4(*(void *)(a1 + 56) + 32 * v13, (uint64_t)v23);
    *(void *)&long long v22 = v16;
    *((void *)&v22 + 1) = v15;
    v21[0] = v22;
    v21[1] = v23[0];
    v21[2] = v23[1];
    swift_bridgeObjectRetain();
    sub_1A8CED77C((uint64_t *)v21, a2, a3);
    uint64_t result = sub_1A8C8DE74((uint64_t)v21, &qword_1EB5E9368);
    if (v3) {
      return swift_release();
    }
  }
  if (__OFADD__(v11++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v11 >= v24) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v20 + 8 * v11);
  if (v18)
  {
LABEL_19:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v13 = __clz(__rbit64(v18)) + (v11 << 6);
    goto LABEL_5;
  }
  int64_t v19 = v11 + 1;
  if (v11 + 1 >= v24) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v20 + 8 * v19);
  if (v18) {
    goto LABEL_18;
  }
  int64_t v19 = v11 + 2;
  if (v11 + 2 >= v24) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v20 + 8 * v19);
  if (v18) {
    goto LABEL_18;
  }
  int64_t v19 = v11 + 3;
  if (v11 + 3 >= v24) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v20 + 8 * v19);
  if (v18) {
    goto LABEL_18;
  }
  int64_t v19 = v11 + 4;
  if (v11 + 4 >= v24) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v20 + 8 * v19);
  if (v18)
  {
LABEL_18:
    int64_t v11 = v19;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v11 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v11 >= v24) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v20 + 8 * v11);
    ++v19;
    if (v18) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1A8CEEB94(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a1)
  {
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1A8D59A80();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB5E9318);
    uint64_t v4 = sub_1A8D59A60();
    os_log_type_t v5 = sub_1A8D59F00();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      uint64_t v45 = v7;
      *(_DWORD *)uint64_t v6 = 136315138;
      sub_1A8C90120(0xD000000000000041, 0x80000001A8D64E00, &v45);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v4, v5, "%s: There is an account, skipping unregistration", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v7, -1, -1);
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
    }

    return 0;
  }
  sub_1A8CB8EE0(a2);
  if ((v11 & 1) != 0 || (sub_1A8CB8EE0(a3), (v12 & 1) == 0))
  {
    int v18 = 0;
  }
  else
  {
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1A8D59A80();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EB5E9318);
    uint64_t v14 = sub_1A8D59A60();
    os_log_type_t v15 = sub_1A8D59F00();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v45 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      sub_1A8C90120(0xD000000000000041, 0x80000001A8D64E00, &v45);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v14, v15, "%s: We transitioned to having access for afm", v16, 0xCu);
      int v18 = 1;
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v17, -1, -1);
      MEMORY[0x1AD0E6EB0](v16, -1, -1);
    }
    else
    {

      int v18 = 1;
    }
  }
  sub_1A8CB9118(a2);
  if ((v19 & 1) != 0 || (sub_1A8CB9118(a3), (v20 & 1) == 0))
  {
    if (!v18)
    {
      if (qword_1EB5E9298 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_1A8D59A80();
      __swift_project_value_buffer(v31, (uint64_t)qword_1EB5E9318);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      int64_t v32 = sub_1A8D59A60();
      os_log_type_t v33 = sub_1A8D59F00();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        uint64_t v45 = v44;
        *(_DWORD *)uint64_t v34 = 136315650;
        sub_1A8C90120(0xD000000000000041, 0x80000001A8D64E00, &v45);
        sub_1A8D59FE0();
        *(_WORD *)(v34 + 12) = 2080;
        uint64_t v35 = type metadata accessor for CloudFeature();
        uint64_t v36 = swift_bridgeObjectRetain();
        uint64_t v37 = MEMORY[0x1AD0E5CA0](v36, v35);
        unint64_t v39 = v38;
        swift_bridgeObjectRelease();
        sub_1A8C90120(v37, v39, &v45);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 22) = 2080;
        uint64_t v40 = swift_bridgeObjectRetain();
        uint64_t v41 = MEMORY[0x1AD0E5CA0](v40, v35);
        unint64_t v43 = v42;
        swift_bridgeObjectRelease();
        sub_1A8C90120(v41, v43, &v45);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A8C7F000, v32, v33, "%s: We did not transition to having access, skipping unregistration.\n Old features: %s,\n new features: %s", (uint8_t *)v34, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v44, -1, -1);
        MEMORY[0x1AD0E6EB0](v34, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      return 0;
    }
  }
  else
  {
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1A8D59A80();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB5E9318);
    long long v22 = sub_1A8D59A60();
    os_log_type_t v23 = sub_1A8D59F00();
    if (os_log_type_enabled(v22, v23))
    {
      int64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v45 = v25;
      *(_DWORD *)int64_t v24 = 136315138;
      sub_1A8C90120(0xD000000000000041, 0x80000001A8D64E00, &v45);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v22, v23, "%s: We transitioned to having access for adm", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v25, -1, -1);
      MEMORY[0x1AD0E6EB0](v24, -1, -1);
    }
  }
  if (qword_1EB5E9298 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1A8D59A80();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EB5E9318);
  uint64_t v27 = sub_1A8D59A60();
  os_log_type_t v28 = sub_1A8D59F00();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v45 = v30;
    *(_DWORD *)uint64_t v29 = 136315138;
    sub_1A8C90120(0xD000000000000041, 0x80000001A8D64E00, &v45);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v27, v28, "%s: We transitioned to having access, proceeding with unregistration.", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v30, -1, -1);
    MEMORY[0x1AD0E6EB0](v29, -1, -1);
  }

  objc_msgSend(self, sel_unregisterForLoggedOutPushNotifications);
  return 1;
}

BOOL sub_1A8CEF3B0(uint64_t a1)
{
  if (a1)
  {
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1A8D59A80();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EB5E9318);
    uint64_t v3 = sub_1A8D59A60();
    os_log_type_t v4 = sub_1A8D59F00();
    if (os_log_type_enabled(v3, v4))
    {
      os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v13 = v6;
      *(_DWORD *)os_log_type_t v5 = 136315138;
      sub_1A8C90120(0xD000000000000026, 0x80000001A8D64E50, &v13);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v3, v4, "%s: There is an account, skipping registration", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
      MEMORY[0x1AD0E6EB0](v5, -1, -1);
    }
  }
  else
  {
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1A8D59A80();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB5E9318);
    uint64_t v8 = sub_1A8D59A60();
    os_log_type_t v9 = sub_1A8D59F00();
    if (os_log_type_enabled(v8, v9))
    {
      int64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v13 = v11;
      *(_DWORD *)int64_t v10 = 136315138;
      sub_1A8C90120(0xD000000000000026, 0x80000001A8D64E50, &v13);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v8, v9, "%s: There is no account, will proceed with registration", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v11, -1, -1);
      MEMORY[0x1AD0E6EB0](v10, -1, -1);
    }

    objc_msgSend(self, sel_registerForLoggedOutPushNotifications);
  }
  return a1 == 0;
}

uint64_t sub_1A8CEF68C(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1EB5E9430);
}

uint64_t static FeaturesLogger.common.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1EB5E94B0, (uint64_t)qword_1EB5E9430, a1);
}

uint64_t static FeaturesLogger.client.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1EB5EAEF8, (uint64_t)qword_1EB5EAEE0, a1);
}

uint64_t static FeaturesLogger.notifications.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1EB5EAB40, (uint64_t)qword_1EB5EAB60, a1);
}

uint64_t sub_1A8CEF714(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1EB5E9318);
}

uint64_t static FeaturesLogger.daemonXPC.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1EB5E9298, (uint64_t)qword_1EB5E9318, a1);
}

uint64_t static FeaturesLogger.daemonController.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1EB5EAD00, (uint64_t)qword_1EB5EAC50, a1);
}

uint64_t static FeaturesLogger.daemonCache.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1EB5EAB38, (uint64_t)qword_1EB5EAB48, a1);
}

uint64_t sub_1A8CEF7A4(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1EB5E92F8);
}

uint64_t static FeaturesLogger.daemonNetworking.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1EB5E9310, (uint64_t)qword_1EB5E92F8, a1);
}

uint64_t sub_1A8CEF7EC(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1EB5E97A8);
}

uint64_t static FeaturesLogger.daemonBGTask.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1EB5E97C8, (uint64_t)qword_1EB5E97A8, a1);
}

uint64_t sub_1A8CEF83C(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1E979EFE8);
}

uint64_t static FeaturesLogger.serverPayload.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1E979E440, (uint64_t)qword_1E979EFE8, a1);
}

uint64_t sub_1A8CEF88C(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1E979F000);
}

uint64_t static FeaturesLogger.ticketManager.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1E979E448, (uint64_t)qword_1E979F000, a1);
}

uint64_t sub_1A8CEF8DC(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1EB5E92D8);
}

uint64_t static FeaturesLogger.featureRequest.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1EB5E92F0, (uint64_t)qword_1EB5E92D8, a1);
}

uint64_t sub_1A8CEF92C(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1EB5E9E10);
}

uint64_t static FeaturesLogger.assets.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1EB5E9E28, (uint64_t)qword_1EB5E9E10, a1);
}

uint64_t sub_1A8CEF96C(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1EB5E97D0);
}

uint64_t static FeaturesLogger.cfu.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1EB5E97F0, (uint64_t)qword_1EB5E97D0, a1);
}

uint64_t sub_1A8CEF9A8(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1EB5E9DF8);
}

uint64_t static FeaturesLogger.deviceProperties.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1EB5E9F68, (uint64_t)qword_1EB5E9DF8, a1);
}

uint64_t sub_1A8CEF9F0(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1EB5E97F8);
}

uint64_t static FeaturesLogger.locale.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1EB5E9720, (uint64_t)qword_1EB5E97F8, a1);
}

uint64_t sub_1A8CEFA30(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1EB5EA288);
}

uint64_t static FeaturesLogger.optIn.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(qword_1EB5EA1F8, (uint64_t)qword_1EB5EA288, a1);
}

uint64_t sub_1A8CEFA70(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1EB5E9728);
}

uint64_t static FeaturesLogger.migrator.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1EB5E9810, (uint64_t)qword_1EB5E9728, a1);
}

uint64_t sub_1A8CEFAB4(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1E979F018);
}

uint64_t static FeaturesLogger.analytics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1E979E458, (uint64_t)qword_1E979F018, a1);
}

uint64_t sub_1A8CEFAFC(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1E979F030);
}

uint64_t static FeaturesLogger.diagnostics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1E979E460, (uint64_t)qword_1E979F030, a1);
}

uint64_t sub_1A8CEFB48(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1E979F048);
}

uint64_t static FeaturesLogger.mocking.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1E979E468, (uint64_t)qword_1E979F048, a1);
}

uint64_t sub_1A8CEFB8C(uint64_t a1)
{
  return sub_1A8C85B20(a1, qword_1E979F060);
}

uint64_t static FeaturesLogger.availability.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8CEFBD8(&qword_1E979E470, (uint64_t)qword_1E979F060, a1);
}

uint64_t sub_1A8CEFBD8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1A8D59A80();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

ValueMetadata *type metadata accessor for FeaturesLogger()
{
  return &type metadata for FeaturesLogger;
}

uint64_t GMAnalyticsAction.init(rawValue:)(uint64_t a1)
{
  if (a1 == 14) {
    uint64_t v1 = 14;
  }
  else {
    uint64_t v1 = 0;
  }
  if (a1 == 6) {
    return 6;
  }
  else {
    return v1;
  }
}

uint64_t *sub_1A8CEFCA8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  if (*result == 6) {
    uint64_t v3 = 6;
  }
  else {
    uint64_t v3 = 0;
  }
  BOOL v4 = v2 == 14;
  if (v2 == 14) {
    uint64_t v5 = 14;
  }
  else {
    uint64_t v5 = v3;
  }
  BOOL v6 = !v4 && *result != 6;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v6;
  return result;
}

id GMAnalyticsProvider.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id GMAnalyticsProvider.init()()
{
  id v1 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v2 = v0;
  uint64_t v3 = (void *)sub_1A8D59BC0();
  id v4 = objc_msgSend(v1, sel_initWithSuiteName_, v3);

  uint64_t v12 = sub_1A8C8EB1C(0, (unint64_t *)&qword_1EB5EACA0);
  uint64_t v13 = &off_1EFF56B50;
  if (!v4) {
    id v4 = objc_msgSend(self, sel_standardUserDefaults);
  }
  *(void *)&long long v11 = v4;
  sub_1A8C91C90(&v11, (uint64_t)&v2[OBJC_IVAR___CSFGMAnalyticsProvider_dataStore]);
  uint64_t v5 = type metadata accessor for AvailabilityManager();
  uint64_t inited = swift_initStaticObject();
  uint64_t v7 = (uint64_t *)&v2[OBJC_IVAR___CSFGMAnalyticsProvider_availabilityManager];
  v7[3] = v5;
  v7[4] = (uint64_t)&off_1EFF569B0;
  *uint64_t v7 = inited;
  uint64_t v8 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))&v2[OBJC_IVAR___CSFGMAnalyticsProvider_sendFunction];
  *uint64_t v8 = sub_1A8CEFE68;
  v8[1] = 0;

  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for GMAnalyticsProvider();
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t sub_1A8CEFE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v6 = (void *)sub_1A8D59BC0();
  v10[4] = a3;
  v10[5] = a4;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  uint64_t v10[2] = sub_1A8CEFF4C;
  uint64_t v10[3] = &block_descriptor_10;
  uint64_t v7 = _Block_copy(v10);
  swift_retain();
  uint64_t v8 = AnalyticsSendEventLazy();

  _Block_release(v7);
  swift_release();
  return v8;
}

uint64_t type metadata accessor for GMAnalyticsProvider()
{
  return self;
}

id sub_1A8CEFF4C(uint64_t a1)
{
  id v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1A8C8EB1C(0, (unint64_t *)&unk_1EB5EA8F0);
    id v4 = (void *)sub_1A8D59B20();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = 0;
  }
  return v4;
}

uint64_t sub_1A8CF000C(uint64_t a1)
{
  *(void *)(v2 + 232) = a1;
  *(void *)(v2 + 240) = v1;
  return MEMORY[0x1F4188298](sub_1A8CF002C, 0, 0);
}

uint64_t sub_1A8CF002C()
{
  uint64_t v1 = *(void *)(v0 + 232);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F098);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A8D5C9F0;
  *(void *)(inited + 32) = 7627617;
  *(void *)(inited + 40) = 0xE300000000000000;
  *(void *)(inited + 48) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v1);
  uint64_t v3 = (void *)sub_1A8CB9718(inited);
  if (v1 == 6)
  {
    id v4 = &unk_1EFF55770;
    goto LABEL_5;
  }
  if (v1 == 14)
  {
    id v4 = &unk_1EFF55798;
LABEL_5:
    *(void *)(v0 + 248) = v4;
    uint64_t v5 = v4[2];
    *(void *)(v0 + 256) = v5;
    if (!v5)
    {
LABEL_42:
      uint64_t v45 = *(uint64_t (**)(unint64_t, unint64_t, uint64_t (*)(), uint64_t))(*(void *)(v0 + 240)
                                                                                                 + OBJC_IVAR___CSFGMAnalyticsProvider_sendFunction);
      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = v3;
      char v47 = v45(0xD00000000000002CLL, 0x80000001A8D64F00, sub_1A8CF1488, v46);
      swift_release();
      uint64_t v48 = *(uint64_t (**)(void))(v0 + 8);
      return v48(v47 & 1);
    }
    uint64_t v6 = OBJC_IVAR___CSFGMAnalyticsProvider_availabilityManager;
    *(void *)(v0 + 264) = OBJC_IVAR___CSFGMAnalyticsProvider_dataStore;
    *(void *)(v0 + 272) = v6;
    uint64_t v49 = (unsigned char *)(v0 + 304);
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    while (1)
    {
      *(void *)(v0 + 280) = v3;
      *(void *)(v0 + 288) = v7;
      int v8 = *(unsigned __int8 *)(*(void *)(v0 + 248) + v7 + 32);
      *uint64_t v49 = v8;
      if (v8 == 1)
      {
        unint64_t v42 = (void *)(*(void *)(v0 + 240) + *(void *)(v0 + 272));
        __swift_project_boxed_opaque_existential_1(v42, v42[3]);
        unint64_t v43 = (void *)swift_task_alloc();
        *(void *)(v0 + 296) = v43;
        void *v43 = v0;
        v43[1] = sub_1A8CF07F8;
        return sub_1A8CDA4F4(v0 + 72);
      }
      os_log_type_t v9 = (void *)(*(void *)(v0 + 240) + *(void *)(v0 + 264));
      uint64_t v10 = sub_1A8D596F0();
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v12 = swift_task_alloc();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
      uint64_t v13 = swift_task_alloc();
      uint64_t v15 = v9[3];
      uint64_t v14 = v9[4];
      __swift_project_boxed_opaque_existential_1(v9, v15);
      (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v14 + 24))(0xD00000000000001ALL, 0x80000001A8D64EE0, v15, v14);
      if (!*(void *)(v0 + 200)) {
        break;
      }
      int v16 = swift_dynamicCast();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v13, v16 ^ 1u, 1, v10);
      uint64_t v17 = v0 + 112;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10) == 1) {
        goto LABEL_18;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v12, v13, v10);
      swift_task_dealloc();
      uint64_t v18 = swift_task_alloc();
      sub_1A8D596E0();
      sub_1A8D59620();
      double v20 = v19;
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v21(v18, v10);
      v21(v12, v10);
      long long v22 = (ValueMetadata *)swift_task_dealloc();
      double v26 = v20 / 3600.0;
      if ((~COERCE__INT64(v20 / 3600.0) & 0x7FF0000000000000) == 0)
      {
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
        return MEMORY[0x1F4185D40](v22, v23, v24, v25);
      }
      if (v26 <= -1.0) {
        goto LABEL_49;
      }
      if (v26 >= 1.84467441e19) {
        goto LABEL_50;
      }
      unint64_t v27 = (unint64_t)v26;
LABEL_19:
      swift_task_dealloc();
      id v28 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, v27);
      *(void *)(v0 + 168) = sub_1A8C8EB1C(0, &qword_1EB5EACA8);
      *(void *)(v0 + 144) = v28;
      sub_1A8CA2798(v0 + 144, v17);
      if (!*(void *)(v0 + 136))
      {
        sub_1A8C8DE74(v17, (uint64_t *)&unk_1EB5EA170);
LABEL_8:
        uint64_t v3 = *(void **)(v0 + 280);
        goto LABEL_9;
      }
      sub_1A8C8EB1C(0, (unint64_t *)&unk_1EB5EA8F0);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_8;
      }
      uint64_t v29 = *(void *)(v0 + 280);
      if (*v49) {
        uint64_t v30 = 7631717;
      }
      else {
        uint64_t v30 = 6973044;
      }
      id v31 = *(id *)(v0 + 216);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v0 + 224) = v29;
      unint64_t v33 = sub_1A8C90B9C(v30, 0xE300000000000000);
      uint64_t v34 = *(void *)(v29 + 16);
      BOOL v35 = (v23 & 1) == 0;
      long long v22 = (ValueMetadata *)(v34 + v35);
      if (__OFADD__(v34, v35)) {
        goto LABEL_51;
      }
      char v36 = v23;
      if (*(void *)(*(void *)(v0 + 280) + 24) >= (uint64_t)v22)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          long long v22 = (ValueMetadata *)sub_1A8CF2394();
        }
      }
      else
      {
        sub_1A8CF1BC0((uint64_t)v22, isUniquelyReferenced_nonNull_native);
        long long v22 = (ValueMetadata *)sub_1A8C90B9C(v30, 0xE300000000000000);
        if ((v36 & 1) != (v23 & 1))
        {
          return sub_1A8D5A400();
        }
        unint64_t v33 = (unint64_t)v22;
      }
      uint64_t v3 = *(void **)(v0 + 224);
      if (v36)
      {
        uint64_t v37 = v3[7];

        *(void *)(v37 + 8 * v33) = v31;
      }
      else
      {
        v3[(v33 >> 6) + 8] |= 1 << v33;
        unint64_t v38 = (uint64_t *)(v3[6] + 16 * v33);
        *unint64_t v38 = v30;
        v38[1] = 0xE300000000000000;
        *(void *)(v3[7] + 8 * v33) = v31;
        uint64_t v39 = v3[2];
        BOOL v40 = __OFADD__(v39, 1);
        uint64_t v41 = v39 + 1;
        if (v40) {
          goto LABEL_52;
        }
        v3[2] = v41;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();

LABEL_9:
      uint64_t v7 = *(void *)(v0 + 288) + 1;
      if (v7 == *(void *)(v0 + 256))
      {
        swift_bridgeObjectRelease();
        goto LABEL_42;
      }
    }
    sub_1A8C8DE74(v0 + 176, (uint64_t *)&unk_1EB5EA170);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v13, 1, 1, v10);
    uint64_t v17 = v0 + 112;
LABEL_18:
    sub_1A8C8DE74(v13, &qword_1EB5EACF0);
    swift_task_dealloc();
    unint64_t v27 = 0;
    goto LABEL_19;
  }
  *(void *)(v0 + 208) = *(void *)(v0 + 232);
  long long v22 = &type metadata for GMAnalyticsAction;
  uint64_t v25 = MEMORY[0x1E4FBB550];
  uint64_t v23 = v0 + 208;
  int64_t v24 = &type metadata for GMAnalyticsAction;
  return MEMORY[0x1F4185D40](v22, v23, v24, v25);
}

uint64_t sub_1A8CF07F8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8CF08F4, 0, 0);
}

uint64_t sub_1A8CF08F4()
{
  uint64_t v1 = v0 + 112;
  uint64_t v2 = *(void *)(v0 + 80);
  char v3 = *(unsigned char *)(v0 + 88);
  swift_bridgeObjectRelease();
  if ((v3 & 1) == 0)
  {
    if (v2)
    {
      if ((v2 & 2) == 0)
      {
        unint64_t v4 = 1;
        if ((v2 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_9;
      }
      unint64_t v4 = 5;
      if ((v2 & 4) != 0) {
        goto LABEL_9;
      }
    }
    else
    {
      if ((v2 & 2) == 0)
      {
        unint64_t v4 = 0;
        if ((v2 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_9;
      }
      unint64_t v4 = 4;
      if ((v2 & 4) != 0) {
LABEL_9:
      }
        v4 |= 2uLL;
    }
LABEL_10:
    if ((v2 & 8) != 0)
    {
      v4 |= 8uLL;
      if ((v2 & 0x200) == 0) {
        goto LABEL_13;
      }
    }
    else if ((v2 & 0x200) == 0)
    {
      goto LABEL_13;
    }
    v4 |= 0x10uLL;
    goto LABEL_13;
  }
  unint64_t v4 = 0;
LABEL_13:
  uint64_t v44 = (unsigned char *)(v0 + 304);
  while (1)
  {
    id v5 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, v4);
    *(void *)(v0 + 168) = sub_1A8C8EB1C(0, &qword_1EB5EACA8);
    *(void *)(v0 + 144) = v5;
    sub_1A8CA2798(v0 + 144, v1);
    if (!*(void *)(v0 + 136))
    {
      sub_1A8C8DE74(v1, (uint64_t *)&unk_1EB5EA170);
LABEL_27:
      uint64_t v17 = *(void **)(v0 + 280);
      goto LABEL_35;
    }
    sub_1A8C8EB1C(0, (unint64_t *)&unk_1EB5EA8F0);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_27;
    }
    uint64_t v6 = *(void *)(v0 + 280);
    if (*v44) {
      uint64_t v7 = 7631717;
    }
    else {
      uint64_t v7 = 6973044;
    }
    id v8 = *(id *)(v0 + 216);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v0 + 224) = v6;
    unint64_t v11 = sub_1A8C90B9C(v7, 0xE300000000000000);
    uint64_t v12 = *(void *)(v6 + 16);
    BOOL v13 = (v10 & 1) == 0;
    uint64_t result = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      return result;
    }
    char v15 = v10;
    if (*(void *)(*(void *)(v0 + 280) + 24) >= result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t result = (uint64_t)sub_1A8CF2394();
      }
      goto LABEL_30;
    }
    sub_1A8CF1BC0(result, isUniquelyReferenced_nonNull_native);
    uint64_t result = sub_1A8C90B9C(v7, 0xE300000000000000);
    if ((v15 & 1) != (v16 & 1)) {
      break;
    }
    unint64_t v11 = result;
LABEL_30:
    uint64_t v17 = *(void **)(v0 + 224);
    if (v15)
    {
      uint64_t v18 = v17[7];

      *(void *)(v18 + 8 * v11) = v8;
    }
    else
    {
      v17[(v11 >> 6) + 8] |= 1 << v11;
      double v19 = (uint64_t *)(v17[6] + 16 * v11);
      uint64_t *v19 = v7;
      v19[1] = 0xE300000000000000;
      *(void *)(v17[7] + 8 * v11) = v8;
      uint64_t v20 = v17[2];
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21) {
        goto LABEL_62;
      }
      uint64_t v17[2] = v22;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();

LABEL_35:
    uint64_t v23 = *(void *)(v0 + 288) + 1;
    if (v23 == *(void *)(v0 + 256))
    {
      swift_bridgeObjectRelease();
      unint64_t v38 = *(uint64_t (**)(unint64_t, unint64_t, uint64_t (*)(), uint64_t))(*(void *)(v0 + 240)
                                                                                                 + OBJC_IVAR___CSFGMAnalyticsProvider_sendFunction);
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v17;
      char v40 = v38(0xD00000000000002CLL, 0x80000001A8D64F00, sub_1A8CF1488, v39);
      swift_release();
      uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
      return v41(v40 & 1);
    }
    *(void *)(v0 + 280) = v17;
    *(void *)(v0 + 288) = v23;
    int v24 = *(unsigned __int8 *)(*(void *)(v0 + 248) + v23 + 32);
    unsigned char *v44 = v24;
    if (v24 == 1)
    {
      unint64_t v42 = (void *)(*(void *)(v0 + 240) + *(void *)(v0 + 272));
      __swift_project_boxed_opaque_existential_1(v42, v42[3]);
      unint64_t v43 = (void *)swift_task_alloc();
      *(void *)(v0 + 296) = v43;
      void *v43 = v0;
      v43[1] = sub_1A8CF07F8;
      return sub_1A8CDA4F4(v0 + 72);
    }
    uint64_t v25 = (void *)(*(void *)(v0 + 240) + *(void *)(v0 + 264));
    uint64_t v26 = sub_1A8D596F0();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = swift_task_alloc();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    uint64_t v29 = swift_task_alloc();
    uint64_t v31 = v25[3];
    uint64_t v30 = v25[4];
    __swift_project_boxed_opaque_existential_1(v25, v31);
    (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v30 + 24))(0xD00000000000001ALL, 0x80000001A8D64EE0, v31, v30);
    if (!*(void *)(v0 + 200))
    {
      sub_1A8C8DE74(v0 + 176, (uint64_t *)&unk_1EB5EA170);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v29, 1, 1, v26);
      uint64_t v1 = v0 + 112;
LABEL_15:
      sub_1A8C8DE74(v29, &qword_1EB5EACF0);
      swift_task_dealloc();
      unint64_t v4 = 0;
      goto LABEL_16;
    }
    int v32 = swift_dynamicCast();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v29, v32 ^ 1u, 1, v26);
    uint64_t v1 = v0 + 112;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v29, 1, v26) == 1) {
      goto LABEL_15;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v28, v29, v26);
    swift_task_dealloc();
    uint64_t v33 = swift_task_alloc();
    sub_1A8D596E0();
    sub_1A8D59620();
    double v35 = v34;
    char v36 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v36(v33, v26);
    v36(v28, v26);
    uint64_t result = swift_task_dealloc();
    double v37 = v35 / 3600.0;
    if ((~COERCE__INT64(v35 / 3600.0) & 0x7FF0000000000000) == 0) {
      goto LABEL_59;
    }
    if (v37 <= -1.0) {
      goto LABEL_60;
    }
    if (v37 >= 1.84467441e19) {
      goto LABEL_61;
    }
    unint64_t v4 = (unint64_t)v37;
LABEL_16:
    swift_task_dealloc();
  }
  return sub_1A8D5A400();
}

uint64_t sub_1A8CF11A0(uint64_t a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  id v6 = a3;
  uint64_t v7 = (void *)swift_task_alloc();
  v3[4] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A8CF1274;
  v7[29] = a1;
  v7[30] = v6;
  return MEMORY[0x1F4188298](sub_1A8CF002C, 0, 0);
}

uint64_t sub_1A8CF1274(char a1)
{
  char v3 = *(void (***)(void, void))(*v1 + 24);
  unint64_t v4 = *(void **)(*v1 + 16);
  uint64_t v7 = *v1;
  swift_task_dealloc();

  v3[2](v3, a1 & 1);
  _Block_release(v3);
  id v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

id GMAnalyticsProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GMAnalyticsProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A8CF1450()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A8CF1488()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1A8CF1490(uint64_t a1)
{
  uint64_t v2 = sub_1A8D5A050();
  return sub_1A8CF14D4(a1, v2);
}

unint64_t sub_1A8CF14D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1A8CA5098(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1AD0E5FA0](v9, a1);
      sub_1A8CF2B7C((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1A8CF159C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9900);
  char v37 = a2;
  uint64_t v6 = sub_1A8D5A1E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  double v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1A8D5A4A0();
    sub_1A8D59C80();
    uint64_t result = sub_1A8D5A4D0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A8CF18A8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E98F8);
  char v36 = a2;
  uint64_t v6 = sub_1A8D5A1E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A8D5A4A0();
    sub_1A8D59C80();
    uint64_t result = sub_1A8D5A4D0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A8CF1BC0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EA08);
  char v38 = a2;
  uint64_t v6 = sub_1A8D5A1E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_1A8D5A4A0();
    sub_1A8D59C80();
    uint64_t result = sub_1A8D5A4D0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A8CF1ED0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9698);
  char v36 = a2;
  uint64_t v6 = sub_1A8D5A1E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1A8D5A4A0();
    sub_1A8D59C80();
    uint64_t result = sub_1A8D5A4D0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_1A8CF21E8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9900);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A8D5A1D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    void *v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A8CF2394()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EA08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A8D5A1D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    int64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_1A8CF254C()
{
  unint64_t result = qword_1E979F0A0;
  if (!qword_1E979F0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F0A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for GMAnalyticsAction()
{
  return &type metadata for GMAnalyticsAction;
}

uint64_t method lookup function for GMAnalyticsProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GMAnalyticsProvider);
}

uint64_t dispatch thunk of GMAnalyticsProvider.sendAction(_:)(uint64_t a1)
{
  uint64_t v4 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x78);
  unint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A8CF26DC;
  return v7(a1);
}

uint64_t sub_1A8CF26DC(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

void *sub_1A8CF27D8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9698);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A8D5A1D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A8CF2990()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAD58);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A8D5A1D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  char v25 = v1;
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    sub_1A8C91CA8(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_1A8C91C90(v26, *(void *)(v4 + 56) + v20);
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A8CF2B7C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A8CF2BD0()
{
  _Block_release(*(const void **)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A8CF2C10()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1A8C81994;
  uint64_t v6 = (uint64_t (*)(uint64_t, void *, void *))((char *)&dword_1E979F0B0 + dword_1E979F0B0);
  return v6(v2, v3, v4);
}

uint64_t sub_1A8CF2CCC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  if (*(void *)(a5 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_1A8C90B9C(a3, a4);
    if (v11)
    {
      unint64_t v12 = (uint64_t *)(*(void *)(a5 + 56) + 24 * v10);
      uint64_t v13 = *v12;
      uint64_t v14 = v12[1];
      uint64_t v15 = v12[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v15)
      {
        swift_bridgeObjectRelease();
        char v16 = sub_1A8CF2CCC(a1, a2, v14, v15, a5);
        swift_bridgeObjectRelease();
        return v16 & 1;
      }
      if (v13)
      {
        uint64_t v24 = *(void *)(v13 + 16);
        if (v24)
        {
          uint64_t v23 = *(unsigned __int8 *)(v13 + 48);
          BOOL v25 = *(void *)(v13 + 32) == a1 && *(void *)(v13 + 40) == a2;
          if (v25 || (sub_1A8D5A390() & 1) != 0)
          {
LABEL_35:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (qword_1EB5EAD00 != -1) {
              swift_once();
            }
            uint64_t v33 = sub_1A8D59A80();
            __swift_project_value_buffer(v33, (uint64_t)qword_1EB5EAC50);
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            int64_t v34 = sub_1A8D59A60();
            os_log_type_t v35 = sub_1A8D59F00();
            if (os_log_type_enabled(v34, v35))
            {
              uint64_t v36 = swift_slowAlloc();
              uint64_t v37 = swift_slowAlloc();
              uint64_t v38 = v37;
              *(_DWORD *)uint64_t v36 = 67240450;
              swift_bridgeObjectRelease();
              sub_1A8D59FE0();
              swift_bridgeObjectRelease();
              *(_WORD *)(v36 + 8) = 2082;
              swift_bridgeObjectRetain();
              sub_1A8C90120(a1, a2, &v38);
              sub_1A8D59FE0();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1A8C7F000, v34, v35, "Returning eligibility status %{BOOL,public}d for feature ID: %{public}s", (uint8_t *)v36, 0x12u);
              swift_arrayDestroy();
              MEMORY[0x1AD0E6EB0](v37, -1, -1);
              MEMORY[0x1AD0E6EB0](v36, -1, -1);
              swift_bridgeObjectRelease();
            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
            }
            return v23;
          }
          unint64_t v26 = (unsigned __int8 *)(v13 + 72);
          while (--v24)
          {
            uint64_t v23 = *v26;
            if (*((void *)v26 - 2) != a1 || *((void *)v26 - 1) != a2)
            {
              v26 += 24;
              if ((sub_1A8D5A390() & 1) == 0) {
                continue;
              }
            }
            goto LABEL_35;
          }
        }
        swift_bridgeObjectRelease();
      }
      if (qword_1EB5EAD00 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_1A8D59A80();
      __swift_project_value_buffer(v28, (uint64_t)qword_1EB5EAC50);
      swift_bridgeObjectRetain_n();
      uint64_t v29 = sub_1A8D59A60();
      os_log_type_t v30 = sub_1A8D59EE0();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        uint64_t v38 = v32;
        *(_DWORD *)uint64_t v31 = 136446210;
        swift_bridgeObjectRetain();
        sub_1A8C90120(a1, a2, &v38);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A8C7F000, v29, v30, "Eligibility section not found for feature ID: %{public}s", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v32, -1, -1);
        MEMORY[0x1AD0E6EB0](v31, -1, -1);

        return 0;
      }

      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EB5EAD00 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1A8D59A80();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EB5EAC50);
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_1A8D59A60();
  os_log_type_t v20 = sub_1A8D59EE0();
  if (!os_log_type_enabled(v19, v20))
  {

LABEL_11:
    swift_bridgeObjectRelease_n();
    return 0;
  }
  unint64_t v21 = (uint8_t *)swift_slowAlloc();
  uint64_t v22 = swift_slowAlloc();
  uint64_t v38 = v22;
  *(_DWORD *)unint64_t v21 = 136446210;
  swift_bridgeObjectRetain();
  sub_1A8C90120(a3, a4, &v38);
  sub_1A8D59FE0();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_1A8C7F000, v19, v20, "Eligibility section not found for bundle ID: %{public}s", v21, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1AD0E6EB0](v22, -1, -1);
  MEMORY[0x1AD0E6EB0](v21, -1, -1);

  return 0;
}

unint64_t sub_1A8CF32C4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v5 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8)
  {
LABEL_11:
    uint64_t v15 = sub_1A8D596F0();
    uint64_t v16 = *(void *)(v15 - 8);
    MEMORY[0x1F4188790](v15, v17);
    uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A8D596E0();
    os_log_type_t v20 = (objc_class *)type metadata accessor for GeoClassificationInfo();
    unint64_t v21 = objc_allocWithZone(v20);
    uint64_t v22 = OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta;
    v21[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta] = 0;
    uint64_t v23 = &v21[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey];
    *uint64_t v23 = 0;
    v23[1] = 0xE000000000000000;
    uint64_t v24 = &v21[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification];
    *uint64_t v24 = 0;
    v24[1] = 0xE000000000000000;
    (*(void (**)(unsigned char *, char *, uint64_t))(v16 + 16))(&v21[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_cacheTill], v19, v15);
    v21[v22] = 0;
    v46.receiver = v21;
    v46.super_class = v20;
    unint64_t v9 = (unint64_t)objc_msgSendSuper2(&v46, sel_init);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    return v9;
  }
  unint64_t v9 = a4;
  uint64_t v11 = *((void *)v4 + 4);
  if (!*(void *)(v11 + 16)) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_1A8C90B9C(a3, v9);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    if (qword_1E979E440 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1A8D59A80();
    __swift_project_value_buffer(v25, (uint64_t)qword_1E979EFE8);
    long long v26 = *v4;
    long long v48 = v4[1];
    long long v49 = v26;
    swift_bridgeObjectRetain();
    sub_1A8CF4660((uint64_t)&v49);
    sub_1A8CF4660((uint64_t)&v48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A8CF4660((uint64_t)&v49);
    sub_1A8CF4660((uint64_t)&v48);
    swift_bridgeObjectRetain();
    BOOL v27 = sub_1A8D59A60();
    os_log_type_t v28 = sub_1A8D59EE0();
    if (!os_log_type_enabled(v27, v28))
    {
      swift_bridgeObjectRelease_n();
      sub_1A8CCFB3C((uint64_t)&v49);
      sub_1A8CCFB3C((uint64_t)&v48);
      swift_bridgeObjectRelease();
      sub_1A8CCFB3C((uint64_t)&v49);
      sub_1A8CCFB3C((uint64_t)&v48);

      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    uint64_t v29 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v50 = v30;
    *(_DWORD *)uint64_t v29 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A8C90120(a3, v9, &v50);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v29 + 12) = 2080;
    unint64_t v9 = v29 + 14;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F0C0);
    uint64_t v31 = sub_1A8D59B40();
    unint64_t v33 = v32;
    swift_bridgeObjectRelease();
    uint64_t v47 = sub_1A8C90120(v31, v33, &v50);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    sub_1A8CCFB3C((uint64_t)&v49);
    sub_1A8CCFB3C((uint64_t)&v48);
    swift_bridgeObjectRelease();
    sub_1A8CCFB3C((uint64_t)&v49);
    sub_1A8CCFB3C((uint64_t)&v48);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A8C7F000, v27, v28, "Unable to find bundleID %s in appIDs %s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v30, -1, -1);
    unint64_t v34 = v29;
LABEL_17:
    MEMORY[0x1AD0E6EB0](v34, -1, -1);

LABEL_19:
    sub_1A8C8C7B0();
    swift_allocError();
    *os_log_type_t v35 = 2;
    swift_willThrow();
    return v9;
  }
  unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  unint64_t v9 = (unint64_t)sub_1A8CF468C(v14, a1, a2);
  swift_bridgeObjectRelease();
  if (!v9)
  {
    if (qword_1E979E440 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_1A8D59A80();
    __swift_project_value_buffer(v37, (uint64_t)qword_1E979EFE8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    BOOL v27 = sub_1A8D59A60();
    os_log_type_t v38 = sub_1A8D59EE0();
    if (!os_log_type_enabled(v27, v38))
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_19;
    }
    unint64_t v9 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v50 = v39;
    *(_DWORD *)unint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A8C90120(a1, a2, &v50);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v40 = type metadata accessor for GeoClassificationInfo();
    uint64_t v41 = swift_bridgeObjectRetain();
    uint64_t v42 = MEMORY[0x1AD0E5CA0](v41, v40);
    unint64_t v44 = v43;
    swift_bridgeObjectRelease();
    uint64_t v47 = sub_1A8C90120(v42, v44, &v50);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A8C7F000, v27, v38, "Unable to find featureID %s in bundle %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v39, -1, -1);
    unint64_t v34 = v9;
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1A8CF3994(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v13 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F160);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  unint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8CF627C();
  sub_1A8D5A510();
  char v15 = 0;
  sub_1A8D5A320();
  if (!v4)
  {
    char v14 = 1;
    sub_1A8D5A330();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1A8CF3B08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F0F8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8CF5910();
  sub_1A8D5A510();
  uint64_t v16 = a2;
  char v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9640);
  sub_1A8CF5964(&qword_1E979F100, (void (*)(void))sub_1A8CF5A28);
  sub_1A8D5A310();
  if (!v4)
  {
    char v14 = 1;
    sub_1A8D5A2F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1A8CF3CCC()
{
  return 0x7263736275537369;
}

uint64_t sub_1A8CF3CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7263736275537369 && a2 == 0xEC00000072656269)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A8D5A390();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A8CF3D9C(uint64_t a1)
{
  unint64_t v2 = sub_1A8CF4CF4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8CF3DD8(uint64_t a1)
{
  unint64_t v2 = sub_1A8CF4CF4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A8CF3E14@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E96B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8CF4CF4();
  sub_1A8D5A4F0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v10 = sub_1A8D5A2A0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v10 & 1;
  return result;
}

uint64_t sub_1A8CF3F74(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F130);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8CF4CF4();
  sub_1A8D5A510();
  sub_1A8D5A330();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_1A8CF40A8()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 0x4B65727574616566;
  }
}

uint64_t sub_1A8CF40EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A8CF4D48(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A8CF4114(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1A8CF4120(uint64_t a1)
{
  unint64_t v2 = sub_1A8CF627C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8CF415C(uint64_t a1)
{
  unint64_t v2 = sub_1A8CF627C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A8CF4198@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1A8CF4E44(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_1A8CF41CC(void *a1)
{
  return sub_1A8CF3994(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

BOOL sub_1A8CF41EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1A8CF4204()
{
  if (*v0) {
    return 0x754264656B6E696CLL;
  }
  else {
    return 0x446E6F6974636573;
  }
}

uint64_t sub_1A8CF4258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A8CF5030(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A8CF4280(uint64_t a1)
{
  unint64_t v2 = sub_1A8CF5910();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8CF42BC(uint64_t a1)
{
  unint64_t v2 = sub_1A8CF5910();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A8CF42F8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1A8CF516C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1A8CF4328(void *a1)
{
  return sub_1A8CF3B08(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1A8CF4348(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F110);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8CF5808();
  sub_1A8D5A510();
  char v14 = 0;
  sub_1A8D5A320();
  if (!v2)
  {
    char v13 = 1;
    sub_1A8D5A320();
    uint64_t v12 = *(void *)(v3 + 32);
    v11[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F0D8);
    sub_1A8CF5A7C();
    sub_1A8D5A340();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1A8CF44F4()
{
  uint64_t v1 = 0x4379616C70736964;
  if (*v0 != 1) {
    uint64_t v1 = 0x734449707061;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x437972746E756F63;
  }
}

uint64_t sub_1A8CF4560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A8CF53BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A8CF4588(uint64_t a1)
{
  unint64_t v2 = sub_1A8CF5808();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8CF45C4(uint64_t a1)
{
  unint64_t v2 = sub_1A8CF5808();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1A8CF4600@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A8CF5548(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1A8CF4648(void *a1)
{
  return sub_1A8CF4348(a1);
}

uint64_t sub_1A8CF4660(uint64_t a1)
{
  return a1;
}

void *sub_1A8CF468C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_1A8D5A1C0())
  {
    uint64_t v7 = 4;
    while (1)
    {
      uint64_t v8 = (a1 & 0xC000000000000001) != 0
         ? (char *)MEMORY[0x1AD0E6030](v7 - 4, a1)
         : (char *)*(id *)(a1 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      BOOL v11 = *(void *)&v8[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey] == a2
         && *(void *)&v8[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey + 8] == a3;
      if (v11 || (sub_1A8D5A390() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t destroy for BundleEntry()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s25CloudSubscriptionFeatures11BundleEntryVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BundleEntry(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for BundleEntry(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BundleEntry(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BundleEntry(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BundleEntry()
{
  return &type metadata for BundleEntry;
}

uint64_t destroy for GeoServerResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for GeoServerResponse(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for GeoServerResponse(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GeoServerResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GeoServerResponse(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GeoServerResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GeoServerResponse()
{
  return &type metadata for GeoServerResponse;
}

unsigned char *storeEnumTagSinglePayload for SubscriberStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8CF4CBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriberStatus()
{
  return &type metadata for SubscriberStatus;
}

unint64_t sub_1A8CF4CF4()
{
  unint64_t result = qword_1EB5E95C0;
  if (!qword_1EB5E95C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E95C0);
  }
  return result;
}

uint64_t sub_1A8CF4D48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4B65727574616566 && a2 == 0xEA00000000007965;
  if (v2 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A8D64FD0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A8CF4E44(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E96C0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8CF627C();
  sub_1A8D5A4F0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v10[15] = 0;
    uint64_t v8 = sub_1A8D5A290();
    v10[14] = 1;
    swift_bridgeObjectRetain();
    sub_1A8D5A2A0();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1A8CF5030(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x446E6F6974636573 && a2 == 0xEE00736C69617465;
  if (v2 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x754264656B6E696CLL && a2 == 0xEF79654B656C646ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A8CF516C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E96B0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1A8CF5910();
  sub_1A8D5A4F0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9640);
    v10[7] = 0;
    sub_1A8CF5964(&qword_1EB5E9648, (void (*)(void))sub_1A8CF59D4);
    sub_1A8D5A280();
    uint64_t v8 = v11;
    void v10[6] = 1;
    swift_bridgeObjectRetain();
    sub_1A8D5A250();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1A8CF53BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL;
  if (v2 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4379616C70736964 && a2 == 0xEE007972746E756FLL || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x734449707061 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A8CF5548@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F0C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8CF5808();
  sub_1A8D5A4F0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v25 = 0;
  uint64_t v10 = sub_1A8D5A290();
  uint64_t v12 = v11;
  uint64_t v21 = v10;
  char v24 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1A8D5A290();
  uint64_t v15 = v14;
  uint64_t v19 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F0D8);
  char v23 = 2;
  sub_1A8CF585C();
  uint64_t v20 = v15;
  swift_bridgeObjectRetain();
  sub_1A8D5A2B0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v16 = v22;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v17 = v20;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v21;
  a2[1] = v12;
  a2[2] = v19;
  a2[3] = v17;
  a2[4] = v16;
  return result;
}

unint64_t sub_1A8CF5808()
{
  unint64_t result = qword_1E979F0D0;
  if (!qword_1E979F0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F0D0);
  }
  return result;
}

unint64_t sub_1A8CF585C()
{
  unint64_t result = qword_1E979F0E0;
  if (!qword_1E979F0E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E979F0D8);
    sub_1A8CF5B30(&qword_1E979F0E8, &qword_1E979F0F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F0E0);
  }
  return result;
}

unint64_t sub_1A8CF5910()
{
  unint64_t result = qword_1EB5E94B8;
  if (!qword_1EB5E94B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E94B8);
  }
  return result;
}

uint64_t sub_1A8CF5964(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB5E9640);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A8CF59D4()
{
  unint64_t result = qword_1EB5E95F8;
  if (!qword_1EB5E95F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E95F8);
  }
  return result;
}

unint64_t sub_1A8CF5A28()
{
  unint64_t result = qword_1E979F108;
  if (!qword_1E979F108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F108);
  }
  return result;
}

unint64_t sub_1A8CF5A7C()
{
  unint64_t result = qword_1E979F118;
  if (!qword_1E979F118)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E979F0D8);
    sub_1A8CF5B30(&qword_1E979F120, &qword_1E979F128);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F118);
  }
  return result;
}

uint64_t sub_1A8CF5B30(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E979F0C0);
    sub_1A8CF5BB0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A8CF5BB0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for GeoClassificationInfo();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for BundleEntry.CodingKeys()
{
  return &type metadata for BundleEntry.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for GeoServerResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8CF5CD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GeoServerResponse.CodingKeys()
{
  return &type metadata for GeoServerResponse.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SubscriberStatus.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A8CF5DACLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriberStatus.CodingKeys()
{
  return &type metadata for SubscriberStatus.CodingKeys;
}

uint64_t sub_1A8CF5DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EligibilitySection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for EligibilitySection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for EligibilitySection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EligibilitySection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EligibilitySection()
{
  return &type metadata for EligibilitySection;
}

unint64_t sub_1A8CF5F68()
{
  unint64_t result = qword_1E979F138;
  if (!qword_1E979F138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F138);
  }
  return result;
}

unint64_t sub_1A8CF5FC0()
{
  unint64_t result = qword_1E979F140;
  if (!qword_1E979F140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F140);
  }
  return result;
}

unint64_t sub_1A8CF6018()
{
  unint64_t result = qword_1E979F148;
  if (!qword_1E979F148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F148);
  }
  return result;
}

unint64_t sub_1A8CF6070()
{
  unint64_t result = qword_1EB5E94C8;
  if (!qword_1EB5E94C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E94C8);
  }
  return result;
}

unint64_t sub_1A8CF60C8()
{
  unint64_t result = qword_1EB5E94C0;
  if (!qword_1EB5E94C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E94C0);
  }
  return result;
}

unint64_t sub_1A8CF6120()
{
  unint64_t result = qword_1E979F150;
  if (!qword_1E979F150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F150);
  }
  return result;
}

unint64_t sub_1A8CF6178()
{
  unint64_t result = qword_1E979F158;
  if (!qword_1E979F158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F158);
  }
  return result;
}

unint64_t sub_1A8CF61D0()
{
  unint64_t result = qword_1EB5E95D0;
  if (!qword_1EB5E95D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E95D0);
  }
  return result;
}

unint64_t sub_1A8CF6228()
{
  unint64_t result = qword_1EB5E95C8;
  if (!qword_1EB5E95C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E95C8);
  }
  return result;
}

unint64_t sub_1A8CF627C()
{
  unint64_t result = qword_1EB5E95E0;
  if (!qword_1EB5E95E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E95E0);
  }
  return result;
}

unsigned char *_s25CloudSubscriptionFeatures11BundleEntryV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8CF639CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EligibilitySection.CodingKeys()
{
  return &type metadata for EligibilitySection.CodingKeys;
}

unint64_t sub_1A8CF63D8()
{
  unint64_t result = qword_1E979F168;
  if (!qword_1E979F168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F168);
  }
  return result;
}

unint64_t sub_1A8CF6430()
{
  unint64_t result = qword_1EB5E95F0;
  if (!qword_1EB5E95F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E95F0);
  }
  return result;
}

unint64_t sub_1A8CF6488()
{
  unint64_t result = qword_1EB5E95E8;
  if (!qword_1EB5E95E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E95E8);
  }
  return result;
}

uint64_t sub_1A8CF64E4()
{
  return MEMORY[0x1F4186488](v0, 24, 7);
}

BOOL sub_1A8CF64F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = sub_1A8C90F38(v6, v9);
  id v11 = objc_msgSend(v10, sel_domain);

  uint64_t v12 = sub_1A8D59BF0();
  uint64_t v14 = v13;

  if (v12 == sub_1A8D59BF0() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, a1);
  }
  else
  {
    char v17 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, a1);
    if ((v17 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
      return 0;
    }
  }
  id v19 = sub_1A8C90F38(a1, a2);
  uint64_t v20 = (uint64_t)objc_msgSend(v19, sel_code);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
  return v20 > 499;
}

CloudSubscriptionFeatures::ServerError_optional __swiftcall ServerError.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 1;
  switch(rawValue)
  {
    case 400:
      *uint64_t v1 = 2;
      return (CloudSubscriptionFeatures::ServerError_optional)rawValue;
    case 401:
      goto LABEL_11;
    case 402:
    case 403:
    case 405:
    case 406:
    case 407:
    case 408:
    case 409:
    case 410:
    case 411:
    case 413:
    case 414:
    case 415:
    case 416:
    case 417:
    case 418:
    case 419:
    case 420:
    case 421:
    case 422:
    case 423:
    case 424:
    case 425:
    case 426:
    case 427:
    case 428:
      goto LABEL_6;
    case 404:
      *uint64_t v1 = 3;
      return (CloudSubscriptionFeatures::ServerError_optional)rawValue;
    case 412:
      *uint64_t v1 = 4;
      return (CloudSubscriptionFeatures::ServerError_optional)rawValue;
    case 429:
      *uint64_t v1 = 5;
      return (CloudSubscriptionFeatures::ServerError_optional)rawValue;
    default:
      if (rawValue == 204)
      {
        char v2 = 0;
LABEL_11:
        *uint64_t v1 = v2;
      }
      else if (rawValue == 1000)
      {
        *uint64_t v1 = 6;
      }
      else
      {
LABEL_6:
        *uint64_t v1 = 7;
      }
      return (CloudSubscriptionFeatures::ServerError_optional)rawValue;
  }
}

uint64_t static ServerError.OtherServerError.errorDomain.getter()
{
  return sub_1A8D59BF0();
}

uint64_t ServerError.OtherServerError.errorCode.getter()
{
  return *(void *)v0;
}

uint64_t sub_1A8CF6814()
{
  return sub_1A8D59BF0();
}

uint64_t sub_1A8CF6838()
{
  return *(void *)v0;
}

uint64_t sub_1A8CF6840()
{
  return sub_1A8D59480();
}

uint64_t sub_1A8CF6858()
{
  return sub_1A8D5A430();
}

uint64_t sub_1A8CF6888()
{
  return sub_1A8D5A420();
}

void *static ServerError.allCases.getter()
{
  return &unk_1EFF52F38;
}

uint64_t ServerError.rawValue.getter()
{
  return qword_1A8D5F158[*v0];
}

BOOL sub_1A8CF68DC(char *a1, char *a2)
{
  return qword_1A8D5F158[*a1] == qword_1A8D5F158[*a2];
}

unint64_t sub_1A8CF6904()
{
  unint64_t result = qword_1E979F170;
  if (!qword_1E979F170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F170);
  }
  return result;
}

uint64_t sub_1A8CF6958()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8CF69A8()
{
  return sub_1A8D5A4B0();
}

uint64_t sub_1A8CF69E0()
{
  return sub_1A8D5A4D0();
}

CloudSubscriptionFeatures::ServerError_optional sub_1A8CF6A2C(Swift::Int *a1)
{
  return ServerError.init(rawValue:)(*a1);
}

void sub_1A8CF6A34(void *a1@<X8>)
{
  *a1 = qword_1A8D5F158[*v1];
}

unint64_t sub_1A8CF6A4C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A8CF6A7C();
  unint64_t result = sub_1A8CF6AD0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A8CF6A7C()
{
  unint64_t result = qword_1E979F178;
  if (!qword_1E979F178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F178);
  }
  return result;
}

unint64_t sub_1A8CF6AD0()
{
  unint64_t result = qword_1E979F180;
  if (!qword_1E979F180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F180);
  }
  return result;
}

uint64_t sub_1A8CF6B28()
{
  return qword_1A8D5F158[*v0];
}

unint64_t sub_1A8CF6B3C()
{
  return sub_1A8D018E0(*v0);
}

unint64_t sub_1A8CF6B48()
{
  unint64_t result = qword_1E979F188;
  if (!qword_1E979F188)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E979F190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F188);
  }
  return result;
}

void sub_1A8CF6BA4(void *a1@<X8>)
{
  *a1 = &unk_1EFF52F38;
}

uint64_t sub_1A8CF6BB4()
{
  return sub_1A8D5A430();
}

uint64_t sub_1A8CF6BE4()
{
  return sub_1A8D5A410();
}

uint64_t getEnumTagSinglePayload for ServerError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ServerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8CF6D90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerError()
{
  return &type metadata for ServerError;
}

ValueMetadata *type metadata accessor for ServerError.OtherServerError()
{
  return &type metadata for ServerError.OtherServerError;
}

unint64_t sub_1A8CF6DD8()
{
  unint64_t result = qword_1E979F198;
  if (!qword_1E979F198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F198);
  }
  return result;
}

unint64_t sub_1A8CF6E2C()
{
  unint64_t result = qword_1E979F1A0;
  if (!qword_1E979F1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F1A0);
  }
  return result;
}

uint64_t sub_1A8CF6E88()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8CF6F70()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8CF7058(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 7169633;
  }
  else {
    uint64_t v2 = 7169121;
  }
  if (a2) {
    uint64_t v3 = 7169633;
  }
  else {
    uint64_t v3 = 7169121;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1A8D5A390();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1A8CF70C4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x80000001A8D62CC0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000011;
  switch(v4)
  {
    case 1:
      unsigned int v6 = "doesNotHaveAccess";
      goto LABEL_8;
    case 2:
      unint64_t v5 = 0xD000000000000012;
      unsigned int v6 = "hardwareIneligible";
      goto LABEL_8;
    case 3:
      unint64_t v5 = 0xD000000000000012;
      unsigned int v6 = "softwareIneligible";
      goto LABEL_8;
    case 4:
      unint64_t v5 = 0xD00000000000001CLL;
      unsigned int v6 = "assetsNotFinishedDownloading";
      goto LABEL_8;
    case 5:
      unint64_t v5 = 0xD000000000000020;
      unsigned int v6 = "siriAssetsNotFinishedDownloading";
      goto LABEL_8;
    case 6:
      unint64_t v5 = 0xD000000000000010;
      unsigned int v6 = "isAlreadyOptedIn";
LABEL_8:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000001A8D62CC0;
  switch(a2)
  {
    case 1:
      int v8 = "doesNotHaveAccess";
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xD000000000000012;
      int v8 = "hardwareIneligible";
      goto LABEL_16;
    case 3:
      unint64_t v2 = 0xD000000000000012;
      int v8 = "softwareIneligible";
      goto LABEL_16;
    case 4:
      unint64_t v2 = 0xD00000000000001CLL;
      int v8 = "assetsNotFinishedDownloading";
      goto LABEL_16;
    case 5:
      unint64_t v2 = 0xD000000000000020;
      int v8 = "siriAssetsNotFinishedDownloading";
      goto LABEL_16;
    case 6:
      unint64_t v2 = 0xD000000000000010;
      int v8 = "isAlreadyOptedIn";
LABEL_16:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1A8D5A390();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1A8CF7290(char a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEE00747365757165;
  uint64_t v3 = 0x5265727574616566;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0x74657373416D6661;
    }
    else {
      uint64_t v4 = 0x74657373416D6461;
    }
    unint64_t v5 = 0xE900000000000073;
    int v6 = a2;
    if (!a2) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  uint64_t v4 = 0x5265727574616566;
  unint64_t v5 = 0xEE00747365757165;
  int v6 = a2;
  if (a2)
  {
LABEL_6:
    if (v6 == 1) {
      uint64_t v3 = 0x74657373416D6661;
    }
    else {
      uint64_t v3 = 0x74657373416D6461;
    }
    unint64_t v2 = 0xE900000000000073;
  }
LABEL_10:
  if (v4 == v3 && v5 == v2) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1A8D5A390();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1A8CF738C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEA0000000000746ELL;
  uint64_t v3 = 0x6553736148756663;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6761676E45756663;
    }
    else {
      uint64_t v5 = 0x6E4974706FLL;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xED0000746E656D65;
    }
    else {
      unint64_t v6 = 0xE500000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x6553736148756663;
  unint64_t v6 = 0xEA0000000000746ELL;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x6761676E45756663;
    }
    else {
      uint64_t v3 = 0x6E4974706FLL;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xED0000746E656D65;
    }
    else {
      unint64_t v2 = 0xE500000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1A8D5A390();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A8CF74B8(char a1, char a2)
{
  unint64_t v3 = 0xD00000000000003DLL;
  unint64_t v4 = 0x80000001A8D62B00;
  switch(a1)
  {
    case 1:
      uint64_t v5 = "Device is not in or through the waitlist.";
      goto LABEL_4;
    case 2:
      uint64_t v5 = "Access is granted but user has opted out.";
LABEL_4:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000029;
      break;
    case 3:
      unint64_t v3 = 0xD000000000000022;
      unint64_t v4 = 0x80000001A8D62BB0;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xD00000000000003DLL;
  unint64_t v7 = 0x80000001A8D62B00;
  switch(a2)
  {
    case 1:
      char v8 = "Device is not in or through the waitlist.";
      goto LABEL_9;
    case 2:
      char v8 = "Access is granted but user has opted out.";
LABEL_9:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      unint64_t v6 = 0xD000000000000029;
      goto LABEL_10;
    case 3:
      unint64_t v7 = 0x80000001A8D62BB0;
      if (v3 == 0xD000000000000022) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v3 != v6) {
        goto LABEL_15;
      }
LABEL_13:
      if (v4 == v7) {
        char v9 = 1;
      }
      else {
LABEL_15:
      }
        char v9 = sub_1A8D5A390();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1A8CF7634(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 6644083;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 6644083;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x534F696C656E6170;
      break;
    case 2:
      unint64_t v5 = 0x7272615079657267;
      unint64_t v3 = 0xEA0000000000746FLL;
      break;
    case 3:
      unint64_t v3 = 0x80000001A8D62A40;
      unint64_t v5 = 0xD000000000000013;
      break;
    case 4:
      unint64_t v5 = 0x657061506874616DLL;
      unint64_t v3 = 0xE900000000000072;
      break;
    case 5:
      unint64_t v5 = 0x696665526F747561;
      unint64_t v3 = 0xEA0000000000656ELL;
      break;
    case 6:
      unint64_t v5 = 0x69746172656E6567;
      unint64_t v3 = 0xEE006C6F6F546E6FLL;
      break;
    case 7:
      unint64_t v5 = 0x724379726F6D656DLL;
      unint64_t v3 = 0xEE006E6F69746165;
      break;
    case 8:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x7070417067;
      break;
    case 9:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1430482279;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x534F696C656E6170) {
        goto LABEL_28;
      }
      goto LABEL_31;
    case 2:
      unint64_t v6 = 0xEA0000000000746FLL;
      if (v5 != 0x7272615079657267) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 3:
      unint64_t v6 = 0x80000001A8D62A40;
      if (v5 != 0xD000000000000013) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 4:
      unint64_t v6 = 0xE900000000000072;
      if (v5 != 0x657061506874616DLL) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 5:
      unint64_t v6 = 0xEA0000000000656ELL;
      if (v5 != 0x696665526F747561) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 6:
      uint64_t v7 = 0x69746172656E6567;
      uint64_t v8 = 0x6C6F6F546E6FLL;
      goto LABEL_24;
    case 7:
      uint64_t v7 = 0x724379726F6D656DLL;
      uint64_t v8 = 0x6E6F69746165;
LABEL_24:
      unint64_t v6 = v8 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      if (v5 != v7) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 8:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x7070417067;
      goto LABEL_27;
    case 9:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1430482279) {
        goto LABEL_31;
      }
      goto LABEL_28;
    default:
LABEL_27:
      if (v5 != v2) {
        goto LABEL_31;
      }
LABEL_28:
      if (v3 == v6) {
        char v9 = 1;
      }
      else {
LABEL_31:
      }
        char v9 = sub_1A8D5A390();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1A8CF7964(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x657361656C6572;
    }
    else {
      uint64_t v3 = 0x6E6F697463416F6ELL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x657361656C6572;
      }
      else {
        uint64_t v6 = 0x6E6F697463416F6ELL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x7472617473;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x7472617473)
  {
LABEL_21:
    char v8 = sub_1A8D5A390();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A8CF7A78(char a1, char a2)
{
  unint64_t v3 = 0xD00000000000003DLL;
  unint64_t v4 = 0x80000001A8D62B00;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xD000000000000034;
      int v5 = "Access not granted - device is not through waitlist.";
      goto LABEL_4;
    case 2:
      unint64_t v3 = 0xD000000000000029;
      int v5 = "Access is granted but user has opted out.";
LABEL_4:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      break;
    case 3:
      unint64_t v4 = 0x80000001A8D62BB0;
      unint64_t v3 = 0xD000000000000022;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xD00000000000003DLL;
  unint64_t v7 = 0x80000001A8D62B00;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xD000000000000034;
      char v8 = "Access not granted - device is not through waitlist.";
      goto LABEL_9;
    case 2:
      unint64_t v6 = 0xD000000000000029;
      char v8 = "Access is granted but user has opted out.";
LABEL_9:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      goto LABEL_10;
    case 3:
      unint64_t v7 = 0x80000001A8D62BB0;
      if (v3 == 0xD000000000000022) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v3 != v6) {
        goto LABEL_15;
      }
LABEL_13:
      if (v4 == v7) {
        char v9 = 1;
      }
      else {
LABEL_15:
      }
        char v9 = sub_1A8D5A390();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1A8CF7BF8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000007965;
  uint64_t v3 = 0x4B65727574616566;
  uint64_t v4 = a1;
  uint64_t v5 = 0x4B65727574616566;
  unint64_t v6 = 0xEA00000000007965;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6C69546568636163;
      unint64_t v6 = 0xE90000000000006CLL;
      break;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x6573556E6163;
      break;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x74696D696CLL;
      break;
    case 4:
      uint64_t v5 = 0x6F54737365636361;
      unint64_t v6 = 0xEB000000006E656BLL;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE90000000000006CLL;
      if (v5 == 0x6C69546568636163) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x6573556E6163) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x74696D696CLL;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xEB000000006E656BLL;
      if (v5 != 0x6F54737365636361) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1A8D5A390();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1A8CF7DD4(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x7465656B61726170;
  }
  else {
    uint64_t v2 = 0x64756F6C434C4D49;
  }
  if (a2) {
    uint64_t v3 = 0x7465656B61726170;
  }
  else {
    uint64_t v3 = 0x64756F6C434C4D49;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1A8D5A390();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1A8CF7E54(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  MEMORY[0x1F4188790](v6 - 8, v7);
  char v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB5E9E28 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1A8D59A80();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB5E9E10);
  swift_bridgeObjectRetain_n();
  id v11 = sub_1A8D59A60();
  os_log_type_t v12 = sub_1A8D59F00();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v19 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1A8C90120(a1, a2, &v19);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v11, v12, "Evaluating whether assets should be downloaded or released silently. [Source: %s]", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v14, -1, -1);
    MEMORY[0x1AD0E6EB0](v13, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v15 = sub_1A8D59E10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = 0;
  void v16[3] = 0;
  v16[4] = v3;
  void v16[5] = a1;
  v16[6] = a2;
  swift_bridgeObjectRetain();
  sub_1A8CB9978((uint64_t)v9, (uint64_t)&unk_1E979F2A0, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_1A8CF80E0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    id v11 = a2;
    uint64_t v8 = *(void *)(*(void *)(v3 + 64) + 40);
    id v9 = a2;
    sub_1A8D01330((uint64_t)&v11, v8);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1A8CF81A4(uint64_t a1)
{
  char v3 = *(unsigned char *)(v1 + 1);
  char v4 = *(unsigned char *)(v1 + 2);
  uint64_t v5 = *(void *)(v1 + 8);
  char v6 = *(unsigned char *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 32);
  *(unsigned char *)(v2 + 16) = *(unsigned char *)v1;
  *(unsigned char *)(v2 + 17) = v3;
  *(unsigned char *)(v2 + 18) = v4;
  *(void *)(v2 + 24) = v5;
  *(unsigned char *)(v2 + 32) = v6;
  *(void *)(v2 + 40) = v7;
  *(void *)(v2 + 48) = v8;
  *(void *)(v2 + 56) = a1;
  id v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v9;
  *id v9 = v2;
  v9[1] = sub_1A8CF8274;
  return AvailabilityModel.shouldReleaseModels()(v2 + 72);
}

uint64_t sub_1A8CF8274()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8CF8370, 0, 0);
}

uint64_t sub_1A8CF8370()
{
  char v1 = *(unsigned char *)(v0 + 72);
  uint64_t v2 = 0;
  switch(v1)
  {
    case 3:
      swift_bridgeObjectRelease();
      uint64_t v2 = 2;
      break;
    case 4:
      break;
    default:
      char v3 = sub_1A8D5A390();
      swift_bridgeObjectRelease();
      if (v3) {
        uint64_t v2 = 2;
      }
      else {
        uint64_t v2 = 1;
      }
      break;
  }
  **(unsigned char **)(v0 + 56) = v1;
  char v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v2);
}

uint64_t AvailabilityModel.shouldReleaseModels()(uint64_t a1)
{
  *(unsigned char *)(v2 + 48) = *(unsigned char *)v1;
  *(unsigned char *)(v2 + 49) = *(unsigned char *)(v1 + 1);
  *(unsigned char *)(v2 + 50) = *(unsigned char *)(v1 + 2);
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  *(unsigned char *)(v2 + 51) = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  *(void *)(v2 + 32) = *(void *)(v1 + 24);
  *(void *)(v2 + 40) = v4;
  return MEMORY[0x1F4188298](sub_1A8CF8500, 0, 0);
}

uint64_t sub_1A8CF8500()
{
  if (*(unsigned char *)(v0 + 48) == 1)
  {
    if (*(unsigned char *)(v0 + 49))
    {
      if (qword_1EB5E9E28 != -1) {
        swift_once();
      }
      uint64_t v1 = sub_1A8D59A80();
      __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9E10);
      uint64_t v2 = sub_1A8D59A60();
      os_log_type_t v3 = sub_1A8D59F00();
      char v4 = 3;
      if (os_log_type_enabled(v2, v3))
      {
        uint64_t v5 = "Device does not meet hardware/locale/region requirements, but not all availability was able to be fetched. "
             "Will not alter download state.";
LABEL_30:
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_1A8C7F000, v2, v3, v5, v14, 2u);
        MEMORY[0x1AD0E6EB0](v14, -1, -1);
      }
    }
    else
    {
      char v7 = *(unsigned char *)(v0 + 50);
      if (AvailabilityModel.serverGrantedAccess.getter())
      {
        LOWORD(v18) = 1;
        BYTE2(v18) = v7;
        uint64_t v19 = *(void *)(v0 + 24);
        LOBYTE(v20) = *(unsigned char *)(v0 + 51);
        uint64_t v21 = *(void *)(v0 + 32);
        uint64_t v22 = *(void *)(v0 + 40);
        BOOL IsOpted = AvailabilityModel.deviceIsOptedIn.getter();
        unsigned int v9 = objc_msgSend(self, sel_hasEngagedWithCFU, v18, v19, v20, v21, v22);
        if (IsOpted)
        {
          if (qword_1EB5E9E28 != -1) {
            swift_once();
          }
          uint64_t v10 = sub_1A8D59A80();
          __swift_project_value_buffer(v10, (uint64_t)qword_1EB5E9E10);
          uint64_t v2 = sub_1A8D59A60();
          os_log_type_t v3 = sub_1A8D59F00();
          char v4 = 4;
          if (os_log_type_enabled(v2, v3))
          {
            uint64_t v5 = "Device is opted-in (has toggle enabled). Should start downloads.";
            goto LABEL_30;
          }
        }
        else if (v9)
        {
          if (qword_1EB5E9E28 != -1) {
            swift_once();
          }
          uint64_t v12 = sub_1A8D59A80();
          __swift_project_value_buffer(v12, (uint64_t)qword_1EB5E9E10);
          uint64_t v2 = sub_1A8D59A60();
          os_log_type_t v3 = sub_1A8D59F00();
          char v4 = 2;
          if (os_log_type_enabled(v2, v3))
          {
            uint64_t v5 = "Device is not opted-in (has toggle disabled). Should not start asset download.";
            goto LABEL_30;
          }
        }
        else
        {
          if (qword_1EB5E9E28 != -1) {
            swift_once();
          }
          uint64_t v13 = sub_1A8D59A80();
          __swift_project_value_buffer(v13, (uint64_t)qword_1EB5E9E10);
          uint64_t v2 = sub_1A8D59A60();
          os_log_type_t v3 = sub_1A8D59F00();
          char v4 = 4;
          if (os_log_type_enabled(v2, v3))
          {
            uint64_t v5 = "Device is not opted in but has not engaged with CFU. Should download assets.";
            goto LABEL_30;
          }
        }
      }
      else
      {
        if (qword_1EB5E9E28 != -1) {
          swift_once();
        }
        uint64_t v11 = sub_1A8D59A80();
        __swift_project_value_buffer(v11, (uint64_t)qword_1EB5E9E10);
        uint64_t v2 = sub_1A8D59A60();
        os_log_type_t v3 = sub_1A8D59F00();
        char v4 = 1;
        if (os_log_type_enabled(v2, v3))
        {
          uint64_t v5 = "Device meets hardware/locale/region requirements but has not been dequeued (accessNotGranted). Will not start downloads.";
          goto LABEL_30;
        }
      }
    }
  }
  else
  {
    if (qword_1EB5E9E28 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1A8D59A80();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EB5E9E10);
    uint64_t v2 = sub_1A8D59A60();
    os_log_type_t v3 = sub_1A8D59F00();
    char v4 = 0;
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v5 = "Device does not meet hardware/locale/region requirements. Will not start downloads.";
      goto LABEL_30;
    }
  }
  uint64_t v15 = *(char **)(v0 + 16);

  char *v15 = v4;
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_1A8CF8900(uint64_t a1)
{
  char v3 = *(unsigned char *)(v1 + 1);
  char v4 = *(unsigned char *)(v1 + 2);
  uint64_t v5 = *(void *)(v1 + 8);
  char v6 = *(unsigned char *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 32);
  *(unsigned char *)(v2 + 16) = *(unsigned char *)v1;
  *(unsigned char *)(v2 + 17) = v3;
  *(unsigned char *)(v2 + 18) = v4;
  *(void *)(v2 + 24) = v5;
  *(unsigned char *)(v2 + 32) = v6;
  *(void *)(v2 + 40) = v7;
  *(void *)(v2 + 48) = v8;
  *(void *)(v2 + 56) = a1;
  unsigned int v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v9;
  *unsigned int v9 = v2;
  v9[1] = sub_1A8CF89D0;
  return AvailabilityModel.shouldReleaseADMModels()(v2 + 72);
}

uint64_t sub_1A8CF89D0()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8CF8ACC, 0, 0);
}

uint64_t sub_1A8CF8ACC()
{
  char v1 = *(unsigned char *)(v0 + 72);
  uint64_t v2 = 0;
  switch(v1)
  {
    case 3:
      swift_bridgeObjectRelease();
      uint64_t v2 = 2;
      break;
    case 4:
      break;
    default:
      char v3 = sub_1A8D5A390();
      swift_bridgeObjectRelease();
      if (v3) {
        uint64_t v2 = 2;
      }
      else {
        uint64_t v2 = 1;
      }
      break;
  }
  **(unsigned char **)(v0 + 56) = v1;
  char v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v2);
}

uint64_t AvailabilityModel.shouldReleaseADMModels()(uint64_t a1)
{
  *(unsigned char *)(v2 + 184) = *(unsigned char *)v1;
  *(unsigned char *)(v2 + 185) = *(unsigned char *)(v1 + 1);
  *(unsigned char *)(v2 + 186) = *(unsigned char *)(v1 + 2);
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = v3;
  *(unsigned char *)(v2 + 187) = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  *(void *)(v2 + 136) = *(void *)(v1 + 24);
  *(void *)(v2 + 144) = v4;
  return MEMORY[0x1F4188298](sub_1A8CF8C5C, 0, 0);
}

uint64_t sub_1A8CF8C5C()
{
  uint64_t v61 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 184);
  uint64_t v2 = sub_1A8D59720();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = swift_task_alloc();
  sub_1A8D59710();
  uint64_t v5 = sub_1A8D59700();
  unint64_t v7 = v6;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  uint64_t v9 = sub_1A8C91D0C(8, v5, v7, v8);
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v16 = MEMORY[0x1AD0E5BA0](v9, v11, v13, v15);
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 152) = v16;
  *(void *)(v0 + 160) = v18;
  if (v1 != 1)
  {
    if (qword_1EB5E9E28 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1A8D59A80();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EB5E9E10);
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1A8D59A60();
    os_log_type_t v31 = sub_1A8D59F00();
    if (os_log_type_enabled(v30, v31))
    {
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)unint64_t v32 = 136446210;
      uint64_t v60 = v33;
      swift_bridgeObjectRetain();
      sub_1A8D59CA0();
      sub_1A8D59CA0();
      swift_bridgeObjectRetain();
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 56) = sub_1A8C90120(91, 0xE100000000000000, &v60);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v30, v31, "%{public}s Device does not meet hardware/locale/region requirements. Will not start ADM downloads.", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v33, -1, -1);
      MEMORY[0x1AD0E6EB0](v32, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    char v41 = 0;
    goto LABEL_19;
  }
  if (sub_1A8D419C0())
  {
    if (qword_1EB5EA2D8 != -1) {
      swift_once();
    }
    uint64_t v19 = (void *)qword_1EB5EA2D0;
    uint64_t v20 = (void *)sub_1A8D59BC0();
    LODWORD(v19) = objc_msgSend(v19, sel_BOOLForKey_, v20);

    if (v19)
    {
      p_info = CSFGMOptIn.info;
      if (qword_1EB5E9E28 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_1A8D59A80();
      __swift_project_value_buffer(v22, (uint64_t)qword_1EB5E9E10);
      swift_bridgeObjectRetain_n();
      uint64_t v23 = sub_1A8D59A60();
      os_log_type_t v24 = sub_1A8D59F00();
      if (os_log_type_enabled(v23, v24))
      {
        char v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v59 = v22;
        uint64_t v26 = swift_slowAlloc();
        *(_DWORD *)char v25 = 136446210;
        uint64_t v60 = v26;
        swift_bridgeObjectRetain();
        sub_1A8D59CA0();
        sub_1A8D59CA0();
        swift_bridgeObjectRetain();
        sub_1A8D59CA0();
        swift_bridgeObjectRelease();
        sub_1A8D59CA0();
        swift_bridgeObjectRelease();
        *(void *)(v0 + 112) = sub_1A8C90120(91, 0xE100000000000000, &v60);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A8C7F000, v23, v24, "%{public}s ADM Bypass is enabled, will skip feature availability checks.", v25, 0xCu);
        swift_arrayDestroy();
        uint64_t v27 = v26;
        uint64_t v22 = v59;
        MEMORY[0x1AD0E6EB0](v27, -1, -1);
        os_log_type_t v28 = v25;
        p_info = (__objc2_class_ro **)(CSFGMOptIn + 32);
        MEMORY[0x1AD0E6EB0](v28, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      BOOL IsOpted = AvailabilityModel.deviceIsOptedIn.getter();
      unsigned int v44 = objc_msgSend(self, sel_hasEngagedWithCFU);
      uint64_t v45 = p_info[453];
      if (IsOpted)
      {
        if (v45 != (__objc2_class_ro *)-1) {
          swift_once();
        }
        __swift_project_value_buffer(v22, (uint64_t)qword_1EB5E9E10);
        swift_bridgeObjectRetain();
        objc_super v46 = sub_1A8D59A60();
        os_log_type_t v47 = sub_1A8D59F00();
        if (os_log_type_enabled(v46, v47))
        {
          long long v48 = (uint8_t *)swift_slowAlloc();
          uint64_t v49 = swift_slowAlloc();
          *(_DWORD *)long long v48 = 136446210;
          uint64_t v60 = v49;
          swift_bridgeObjectRetain();
          sub_1A8D59CA0();
          sub_1A8D59CA0();
          swift_bridgeObjectRetain();
          sub_1A8D59CA0();
          swift_bridgeObjectRelease();
          sub_1A8D59CA0();
          swift_bridgeObjectRelease();
          *(void *)(v0 + 104) = sub_1A8C90120(91, 0xE100000000000000, &v60);
          sub_1A8D59FE0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1A8C7F000, v46, v47, "%{public}s Device is opted-in (has toggle enabled). Should start ADM downloads.", v48, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AD0E6EB0](v49, -1, -1);
          MEMORY[0x1AD0E6EB0](v48, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        char v41 = 4;
      }
      else if (v44)
      {
        if (v45 != (__objc2_class_ro *)-1) {
          swift_once();
        }
        __swift_project_value_buffer(v22, (uint64_t)qword_1EB5E9E10);
        swift_bridgeObjectRetain();
        uint64_t v50 = sub_1A8D59A60();
        os_log_type_t v51 = sub_1A8D59F00();
        if (os_log_type_enabled(v50, v51))
        {
          uint64_t v52 = (uint8_t *)swift_slowAlloc();
          uint64_t v53 = swift_slowAlloc();
          *(_DWORD *)uint64_t v52 = 136446210;
          uint64_t v60 = v53;
          swift_bridgeObjectRetain();
          sub_1A8D59CA0();
          sub_1A8D59CA0();
          swift_bridgeObjectRetain();
          sub_1A8D59CA0();
          swift_bridgeObjectRelease();
          sub_1A8D59CA0();
          swift_bridgeObjectRelease();
          *(void *)(v0 + 96) = sub_1A8C90120(91, 0xE100000000000000, &v60);
          sub_1A8D59FE0();
          swift_bridgeObjectRelease();
          char v41 = 2;
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1A8C7F000, v50, v51, "%{public}s Device is not opted-in (has toggle disabled). Should not start ADM asset download.", v52, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AD0E6EB0](v53, -1, -1);
          MEMORY[0x1AD0E6EB0](v52, -1, -1);
        }
        else
        {
          char v41 = 2;
          swift_bridgeObjectRelease_n();
        }
      }
      else
      {
        if (v45 != (__objc2_class_ro *)-1) {
          swift_once();
        }
        __swift_project_value_buffer(v22, (uint64_t)qword_1EB5E9E10);
        swift_bridgeObjectRetain();
        uint64_t v54 = sub_1A8D59A60();
        os_log_type_t v55 = sub_1A8D59F00();
        if (os_log_type_enabled(v54, v55))
        {
          uint64_t v56 = (uint8_t *)swift_slowAlloc();
          uint64_t v57 = swift_slowAlloc();
          *(_DWORD *)uint64_t v56 = 136446210;
          uint64_t v60 = v57;
          swift_bridgeObjectRetain();
          sub_1A8D59CA0();
          sub_1A8D59CA0();
          swift_bridgeObjectRetain();
          sub_1A8D59CA0();
          swift_bridgeObjectRelease();
          sub_1A8D59CA0();
          swift_bridgeObjectRelease();
          *(void *)(v0 + 88) = sub_1A8C90120(91, 0xE100000000000000, &v60);
          sub_1A8D59FE0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1A8C7F000, v54, v55, "%{public}s Device is not opted in but has not engaged with CFU. Should download ADM assets.", v56, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AD0E6EB0](v57, -1, -1);
          MEMORY[0x1AD0E6EB0](v56, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        char v41 = 4;
      }
LABEL_19:
      **(unsigned char **)(v0 + 120) = v41;
      uint64_t v42 = *(uint64_t (**)(void))(v0 + 8);
      return v42();
    }
  }
  uint64_t v35 = *(void *)(v0 + 136);
  uint64_t v34 = *(void *)(v0 + 144);
  char v36 = *(unsigned char *)(v0 + 187);
  uint64_t v37 = *(void *)(v0 + 128);
  char v38 = *(unsigned char *)(v0 + 186);
  char v39 = *(unsigned char *)(v0 + 185);
  *(unsigned char *)(v0 + 16) = 1;
  *(unsigned char *)(v0 + 17) = v39;
  *(unsigned char *)(v0 + 18) = v38;
  *(void *)(v0 + 24) = v37;
  *(unsigned char *)(v0 + 32) = v36;
  *(void *)(v0 + 40) = v35;
  *(void *)(v0 + 48) = v34;
  uint64_t v40 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v40;
  *uint64_t v40 = v0;
  v40[1] = sub_1A8CF98FC;
  return MEMORY[0x1F4188298](sub_1A8CFA634, 0, 0);
}

uint64_t sub_1A8CF98FC(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1A8CFA2E4;
  }
  else
  {
    *(unsigned char *)(v4 + 188) = a1 & 1;
    uint64_t v5 = sub_1A8CF9A28;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1A8CF9A28()
{
  uint64_t v27 = v0;
  if (*(unsigned char *)(v0 + 188))
  {
    BOOL IsOpted = AvailabilityModel.deviceIsOptedIn.getter();
    unsigned int v2 = objc_msgSend(self, sel_hasEngagedWithCFU);
    if (IsOpted)
    {
      if (qword_1EB5E9E28 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1A8D59A80();
      __swift_project_value_buffer(v3, (uint64_t)qword_1EB5E9E10);
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1A8D59A60();
      os_log_type_t v5 = sub_1A8D59F00();
      if (os_log_type_enabled(v4, v5))
      {
        unint64_t v6 = (uint8_t *)swift_slowAlloc();
        uint64_t v7 = swift_slowAlloc();
        *(_DWORD *)unint64_t v6 = 136446210;
        uint64_t v26 = v7;
        swift_bridgeObjectRetain();
        sub_1A8D59CA0();
        sub_1A8D59CA0();
        swift_bridgeObjectRetain();
        sub_1A8D59CA0();
        swift_bridgeObjectRelease();
        sub_1A8D59CA0();
        swift_bridgeObjectRelease();
        *(void *)(v0 + 104) = sub_1A8C90120(91, 0xE100000000000000, &v26);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A8C7F000, v4, v5, "%{public}s Device is opted-in (has toggle enabled). Should start ADM downloads.", v6, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v7, -1, -1);
        MEMORY[0x1AD0E6EB0](v6, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
LABEL_25:
      char v13 = 4;
      goto LABEL_26;
    }
    if (!v2)
    {
      if (qword_1EB5E9E28 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_1A8D59A80();
      __swift_project_value_buffer(v19, (uint64_t)qword_1EB5E9E10);
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1A8D59A60();
      os_log_type_t v21 = sub_1A8D59F00();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v23 = swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 136446210;
        uint64_t v26 = v23;
        swift_bridgeObjectRetain();
        sub_1A8D59CA0();
        sub_1A8D59CA0();
        swift_bridgeObjectRetain();
        sub_1A8D59CA0();
        swift_bridgeObjectRelease();
        sub_1A8D59CA0();
        swift_bridgeObjectRelease();
        *(void *)(v0 + 88) = sub_1A8C90120(91, 0xE100000000000000, &v26);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A8C7F000, v20, v21, "%{public}s Device is not opted in but has not engaged with CFU. Should download ADM assets.", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v23, -1, -1);
        MEMORY[0x1AD0E6EB0](v22, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      goto LABEL_25;
    }
    if (qword_1EB5E9E28 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1A8D59A80();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EB5E9E10);
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1A8D59A60();
    os_log_type_t v16 = sub_1A8D59F00();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136446210;
      uint64_t v26 = v18;
      swift_bridgeObjectRetain();
      sub_1A8D59CA0();
      sub_1A8D59CA0();
      swift_bridgeObjectRetain();
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 96) = sub_1A8C90120(91, 0xE100000000000000, &v26);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      char v13 = 2;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v15, v16, "%{public}s Device is not opted-in (has toggle disabled). Should not start ADM asset download.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v18, -1, -1);
      MEMORY[0x1AD0E6EB0](v17, -1, -1);
    }
    else
    {
      char v13 = 2;
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_1EB5E9E28 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1A8D59A80();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EB5E9E10);
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1A8D59A60();
    os_log_type_t v10 = sub_1A8D59F00();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136446210;
      uint64_t v26 = v12;
      swift_bridgeObjectRetain();
      sub_1A8D59CA0();
      sub_1A8D59CA0();
      swift_bridgeObjectRetain();
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 80) = sub_1A8C90120(91, 0xE100000000000000, &v26);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v9, v10, "%{public}s Device meets hardware/locale/region requirements but has not been dequeued nor is currently in the ADM waitlist. Will not start ADM downloads.", v11, 0xCu);
      char v13 = 1;
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v12, -1, -1);
      MEMORY[0x1AD0E6EB0](v11, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      char v13 = 1;
    }
  }
LABEL_26:
  **(unsigned char **)(v0 + 120) = v13;
  os_log_type_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_1A8CFA2E4()
{
  uint64_t v17 = v0;
  if (qword_1EB5E9E28 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 176);
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5E9E10);
  id v3 = v1;
  swift_bridgeObjectRetain();
  id v4 = v1;
  os_log_type_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59F00();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 176);
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    os_log_type_t v10 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v16[0] = v15;
    *(_DWORD *)uint64_t v9 = 136446466;
    v16[1] = 91;
    void v16[2] = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    sub_1A8D59CA0();
    swift_bridgeObjectRetain();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 64) = sub_1A8C90120(91, 0xE100000000000000, v16);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2112;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 72) = v12;
    sub_1A8D59FE0();
    *os_log_type_t v10 = v12;

    _os_log_impl(&dword_1A8C7F000, v5, v6, "%{public}s Device meets hardware/locale/region requirements, but ADM feature availability was not able to be fetched. Will not alter ADM download state. Error: %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v15, -1, -1);
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  **(unsigned char **)(v0 + 120) = 3;
  char v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t AvailabilityModel.hasADMAccessOrInWaitlist()()
{
  return MEMORY[0x1F4188298](sub_1A8CFA634, 0, 0);
}

uint64_t sub_1A8CFA634()
{
  uint64_t v1 = self;
  uint64_t v2 = sub_1A8D59BC0();
  v0[24] = v2;
  v0[2] = v0;
  v0[7] = v0 + 23;
  v0[3] = sub_1A8CFA770;
  uint64_t v3 = swift_continuation_init();
  v0[18] = MEMORY[0x1E4F143A8];
  v0[19] = 0x40000000;
  v0[20] = sub_1A8CFAECC;
  v0[21] = &block_descriptor_3;
  v0[22] = v3;
  objc_msgSend(v1, sel_requestFeatureWithId_completion_, v2, v0 + 18);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A8CFA770()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 200) = v1;
  if (v1) {
    uint64_t v2 = sub_1A8CFADE4;
  }
  else {
    uint64_t v2 = sub_1A8CFA880;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CFA880()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = (void *)v0[24];
  unsigned __int8 v3 = objc_msgSend(v1, sel_canUse);

  if (v3)
  {
    uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
    return v4(1);
  }
  else
  {
    id v6 = sub_1A8C8E338();
    v0[26] = v6;
    v0[10] = v0;
    v0[15] = v0 + 23;
    v0[11] = sub_1A8CFA9E4;
    uint64_t v7 = swift_continuation_init();
    v0[18] = MEMORY[0x1E4F143A8];
    v0[19] = 0x40000000;
    v0[20] = sub_1A8CF80E0;
    v0[21] = &block_descriptor_2;
    v0[22] = v7;
    objc_msgSend(v6, sel_aa_primaryAppleAccountWithCompletion_, v0 + 18);
    return MEMORY[0x1F41881E8](v0 + 10);
  }
}

uint64_t sub_1A8CFA9E4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 216) = v1;
  if (v1) {
    uint64_t v2 = sub_1A8CFAE58;
  }
  else {
    uint64_t v2 = sub_1A8CFAAF4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

id sub_1A8CFAAF4()
{
  uint64_t v1 = *(void **)(v0 + 184);
  if (!v1)
  {

LABEL_16:
    uint64_t v24 = 0;
    goto LABEL_17;
  }
  id v2 = objc_msgSend(*(id *)(v0 + 184), sel_aa_altDSID);

  unsigned __int8 v3 = *(void **)(v0 + 208);
  if (!v2)
  {

    goto LABEL_16;
  }
  uint64_t v4 = sub_1A8D59BF0();
  uint64_t v6 = v5;

  id v7 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v8 = (void *)sub_1A8D59BC0();
  id v9 = objc_msgSend(v7, sel_initWithSuiteName_, v8);

  type metadata accessor for SystemProperties();
  swift_initStaticObject();
  os_log_type_t v10 = sub_1A8C8E620();
  uint64_t v12 = v11;
  type metadata accessor for WaitlistCache();
  char v13 = (void *)swift_allocObject();
  if (!v9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    goto LABEL_16;
  }
  id v13[2] = v9;
  void v13[3] = v10;
  v13[4] = v12;
  v13[5] = v4;
  void v13[6] = v6;
  uint64_t v14 = sub_1A8CD35A8(0, 0);
  if (!v14)
  {
    swift_release();
    goto LABEL_16;
  }
  uint64_t v15 = (void *)v14;
  os_log_type_t v16 = *(void **)(v14 + OBJC_IVAR____TtC25CloudSubscriptionFeatures14WaitlistResult_status);
  uint64_t v17 = (objc_class *)type metadata accessor for TicketStatus();
  objc_allocWithZone(v17);
  id v18 = v16;
  id result = TicketStatus.init(rawValue:)(0x657669746361, 0xE600000000000000);
  if (!result)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v20 = result;
  char v21 = sub_1A8D59FA0();

  if ((v21 & 1) == 0)
  {
    objc_allocWithZone(v17);
    id v18 = v18;
    id result = TicketStatus.init(rawValue:)(0x6465756575716E65, 0xE800000000000000);
    if (result)
    {
      uint64_t v22 = result;
      char v23 = sub_1A8D59FA0();

      if (v23) {
        goto LABEL_9;
      }
      objc_allocWithZone(v17);
      id result = TicketStatus.init(rawValue:)(0x7551746559746F6ELL, 0xEC00000064657565);
      if (result)
      {
        char v25 = result;
        sub_1A8D59FA0();

        swift_release();
        goto LABEL_16;
      }
LABEL_22:
      __break(1u);
      return result;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_9:

  swift_release();
  uint64_t v24 = 1;
LABEL_17:
  uint64_t v26 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return (id)v26(v24);
}

uint64_t sub_1A8CFADE4()
{
  uint64_t v1 = *(void **)(v0 + 192);
  swift_willThrow();

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t sub_1A8CFAE58()
{
  uint64_t v1 = *(void **)(v0 + 208);
  swift_willThrow();

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t sub_1A8CFAECC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    a1 = v3;
    a2 = (void *)v5;
    return MEMORY[0x1F4188208](a1, a2);
  }
  if (!a2)
  {
    __break(1u);
    return MEMORY[0x1F4188208](a1, a2);
  }
  **(void **)(*(void *)(v3 + 64) + 40) = a2;
  id v8 = a2;
  return swift_continuation_throwingResume();
}

CloudSubscriptionFeatures::ReleaseReason_optional __swiftcall ReleaseReason.init(rawValue:)(Swift::String rawValue)
{
  return (CloudSubscriptionFeatures::ReleaseReason_optional)sub_1A8CFB140(v1);
}

unint64_t ReleaseReason.rawValue.getter()
{
  unint64_t result = 0xD00000000000003DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000034;
      break;
    case 2:
      unint64_t result = 0xD000000000000029;
      break;
    case 3:
      unint64_t result = 0xD000000000000022;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A8CFB02C(char *a1, char *a2)
{
  return sub_1A8CF7A78(*a1, *a2);
}

uint64_t sub_1A8CFB038()
{
  return sub_1A8CF6E88();
}

uint64_t sub_1A8CFB040()
{
  return sub_1A8D24D7C();
}

uint64_t sub_1A8CFB048()
{
  return sub_1A8D24E48();
}

CloudSubscriptionFeatures::ReleaseReason_optional sub_1A8CFB050(Swift::String *a1)
{
  return ReleaseReason.init(rawValue:)(*a1);
}

unint64_t sub_1A8CFB05C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ReleaseReason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A8CFB084()
{
  return sub_1A8D59D10();
}

uint64_t sub_1A8CFB0E4()
{
  return sub_1A8D59CF0();
}

CloudSubscriptionFeatures::ADMReleaseReason_optional __swiftcall ADMReleaseReason.init(rawValue:)(Swift::String rawValue)
{
  return (CloudSubscriptionFeatures::ADMReleaseReason_optional)sub_1A8CFB140(v1);
}

uint64_t sub_1A8CFB140@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1A8D5A220();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 4;
  if (v2 < 4) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

unint64_t ADMReleaseReason.rawValue.getter()
{
  unint64_t result = 0xD00000000000003DLL;
  switch(*v0)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000029;
      break;
    case 3:
      unint64_t result = 0xD000000000000022;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A8CFB22C(char *a1, char *a2)
{
  return sub_1A8CF74B8(*a1, *a2);
}

uint64_t sub_1A8CFB238()
{
  return sub_1A8CF6F70();
}

uint64_t sub_1A8CFB240()
{
  return sub_1A8D24B28();
}

uint64_t sub_1A8CFB248()
{
  return sub_1A8D24F2C();
}

CloudSubscriptionFeatures::ADMReleaseReason_optional sub_1A8CFB250(Swift::String *a1)
{
  return ADMReleaseReason.init(rawValue:)(*a1);
}

unint64_t sub_1A8CFB25C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ADMReleaseReason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A8CFB284(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A8CF7964(*a1, *a2);
}

uint64_t sub_1A8CFB290()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8CFB330()
{
  sub_1A8D59C80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A8CFB3BC()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8CFB458@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A8CFDB98();
  *a1 = result;
  return result;
}

void sub_1A8CFB488(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x657361656C6572;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6E6F697463416F6ELL;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7472617473;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1A8CFB4E4()
{
  return sub_1A8D59D10();
}

uint64_t sub_1A8CFB544()
{
  return sub_1A8D59CF0();
}

uint64_t sub_1A8CFB594()
{
  sub_1A8D597F0();
  swift_allocObject();
  sub_1A8D597E0();
  uint64_t v0 = swift_retain();
  id v1 = sub_1A8CFDA44(v0);
  uint64_t result = swift_release();
  qword_1EB5EA140 = (uint64_t)v1;
  return result;
}

uint64_t static Assets.shared.getter()
{
  if (qword_1EB5EA128 != -1) {
    swift_once();
  }
  return swift_unknownObjectRetain();
}

uint64_t sub_1A8CFB6A8()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1A8CFB6C8, v0, 0);
}

uint64_t sub_1A8CFB6C8()
{
  if (qword_1EB5E9E28 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9E10);
  int v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v4 = 0;
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Clearing cached Asset status", v4, 2u);
    MEMORY[0x1AD0E6EB0](v4, -1, -1);
  }
  uint64_t v5 = *(void *)(v0 + 16);

  *(_WORD *)(v5 + 112) = 2;
  BOOL v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1A8CFB954(const void *a1, uint64_t a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  swift_retain();
  unint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_1A8CFBA14;
  v4[2] = a2;
  return MEMORY[0x1F4188298](sub_1A8CFB6C8, a2, 0);
}

uint64_t sub_1A8CFBA14()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 24);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_release();
  v1[2](v1);
  _Block_release(v1);
  int v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_1A8CFBB50()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1A8CFBB70, v0, 0);
}

uint64_t sub_1A8CFBB70()
{
  if (sub_1A8D419C0())
  {
    if (qword_1EB5E9F80 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_1EB5E9F70;
    int v2 = (void *)sub_1A8D59BC0();
    LODWORD(v1) = objc_msgSend(v1, sel_BOOLForKey_, v2);

    if (v1)
    {
      if (qword_1EB5E9E28 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1A8D59A80();
      __swift_project_value_buffer(v3, (uint64_t)qword_1EB5E9E10);
      uint64_t v4 = sub_1A8D59A60();
      os_log_type_t v5 = sub_1A8D59F00();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl(&dword_1A8C7F000, v4, v5, "Skiping asset download check because of assets bypass", v6, 2u);
        MEMORY[0x1AD0E6EB0](v6, -1, -1);
      }

      int v7 = 1;
      goto LABEL_10;
    }
  }
  __int16 v11 = *(_WORD *)(*(void *)(v0 + 16) + 112);
  if (v11 != 2)
  {
    id v12 = objc_msgSend(self, sel_mainBundle);
    id v13 = objc_msgSend(v12, sel_bundleIdentifier);

    if (v13)
    {
      uint64_t v14 = sub_1A8D59BF0();
      uint64_t v16 = v15;

      if (qword_1EB5EA138 != -1) {
        swift_once();
      }
      char v17 = sub_1A8CB871C(v14, v16, qword_1EB5ECCE8);
      swift_bridgeObjectRelease();
      if (v17)
      {
        int v7 = v11 & 1;
        if (qword_1EB5E9E28 != -1) {
          swift_once();
        }
        uint64_t v18 = sub_1A8D59A80();
        __swift_project_value_buffer(v18, (uint64_t)qword_1EB5E9E10);
        uint64_t v19 = sub_1A8D59A60();
        os_log_type_t v20 = sub_1A8D59F00();
        if (os_log_type_enabled(v19, v20))
        {
          uint64_t v21 = swift_slowAlloc();
          *(_DWORD *)uint64_t v21 = 67240448;
          *(_DWORD *)(v0 + 44) = v7;
          sub_1A8D59FE0();
          *(_WORD *)(v21 + 8) = 1026;
          *(_DWORD *)(v0 + 48) = (unsigned __int16)(v11 & 0x100) >> 8;
          sub_1A8D59FE0();
          _os_log_impl(&dword_1A8C7F000, v19, v20, "Using cached Asset status finishedDownloading: %{BOOL,public}d enoughStorage: %{BOOL,public}d", (uint8_t *)v21, 0xEu);
          MEMORY[0x1AD0E6EB0](v21, -1, -1);
        }

        if ((v11 & 0x100) == 0)
        {
          int v8 = 0;
          goto LABEL_11;
        }
LABEL_10:
        int v8 = 256;
LABEL_11:
        id v9 = *(uint64_t (**)(void))(v0 + 8);
        return v9(v8 | v7);
      }
    }
  }
  uint64_t v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v22;
  void *v22 = v0;
  v22[1] = sub_1A8CFBF80;
  uint64_t v23 = *(void *)(v0 + 16);
  v22[3] = v23;
  return MEMORY[0x1F4188298](sub_1A8CFC868, v23, 0);
}

uint64_t sub_1A8CFBF80(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  *(unsigned char *)(*(void *)v1 + 52) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8CFC098, v2, 0);
}

uint64_t sub_1A8CFC098()
{
  if (*(unsigned char *)(v0 + 52) == 1)
  {
    if (qword_1EB5E9E28 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1A8D59A80();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9E10);
    uint64_t v2 = sub_1A8D59A60();
    os_log_type_t v3 = sub_1A8D59F00();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1A8C7F000, v2, v3, "Assets are ready. Returning true.", v4, 2u);
      MEMORY[0x1AD0E6EB0](v4, -1, -1);
    }
    uint64_t v5 = *(void *)(v0 + 16);

    *(_WORD *)(v5 + 112) = 257;
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v6(257);
  }
  else
  {
    int v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 32) = v8;
    *int v8 = v0;
    v8[1] = sub_1A8CFC24C;
    uint64_t v9 = *(void *)(v0 + 16);
    v8[3] = v9;
    return MEMORY[0x1F4188298](sub_1A8CFCF48, v9, 0);
  }
}

uint64_t sub_1A8CFC24C(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  *(unsigned char *)(*(void *)v1 + 53) = a1 & 1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8CFC368, v2, 0);
}

uint64_t sub_1A8CFC368()
{
  if (qword_1EB5E9E28 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9E10);
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 53);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67240192;
    *(_DWORD *)(v0 + 40) = v4;
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Assets are not ready. Device has enough storage? %{BOOL,public}d", v5, 8u);
    MEMORY[0x1AD0E6EB0](v5, -1, -1);
  }

  if (*(unsigned char *)(v0 + 53)) {
    __int16 v6 = 256;
  }
  else {
    __int16 v6 = 0;
  }
  *(_WORD *)(*(void *)(v0 + 16) + 112) = v6;
  int v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1A8CFC634(const void *a1, uint64_t a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  swift_retain();
  int v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *int v4 = v2;
  v4[1] = sub_1A8CFC6F4;
  v4[2] = a2;
  return MEMORY[0x1F4188298](sub_1A8CFBB70, a2, 0);
}

uint64_t sub_1A8CFC6F4(unsigned int a1)
{
  os_log_type_t v3 = *(void (***)(void, void, void))(*v1 + 24);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  swift_release();
  v3[2](v3, a1 & 1, (a1 >> 8) & 1);
  _Block_release(v3);
  int v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_1A8CFC848()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1A8CFC868, v0, 0);
}

uint64_t sub_1A8CFC868()
{
  if ((sub_1A8D419C0() & 1) == 0) {
    goto LABEL_12;
  }
  if (qword_1EB5E9F80 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1EB5E9F70;
  uint64_t v2 = (void *)sub_1A8D59BC0();
  LODWORD(v1) = objc_msgSend(v1, sel_BOOLForKey_, v2);

  if (v1)
  {
    if (qword_1EB5E9E28 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1A8D59A80();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB5E9E10);
    int v4 = sub_1A8D59A60();
    os_log_type_t v5 = sub_1A8D59F00();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1A8C7F000, v4, v5, "Skiping asset download check because of assets bypass", v6, 2u);
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
    }

    uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
    return v7(1);
  }
  else
  {
LABEL_12:
    __swift_project_boxed_opaque_existential_1((void *)(v0[3] + 120), *(void *)(v0[3] + 144));
    uint64_t v10 = (uint64_t (*)(void))((int)*MEMORY[0x1E4F78CC8] + MEMORY[0x1E4F78CC8]);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[4] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1A8CFCA90;
    return v10();
  }
}

uint64_t sub_1A8CFCA90(char a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(unsigned char *)(v4 + 52) = a1;
  *(void *)(v4 + 40) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 24);
  if (v1) {
    uint64_t v6 = sub_1A8CFCD20;
  }
  else {
    uint64_t v6 = sub_1A8CFCBC8;
  }
  return MEMORY[0x1F4188298](v6, v5, 0);
}

uint64_t sub_1A8CFCBC8()
{
  if (qword_1EB5E9E28 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9E10);
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 52);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67109120;
    *(_DWORD *)(v0 + 48) = v4;
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Are assets ready? %{BOOL}d", v5, 8u);
    MEMORY[0x1AD0E6EB0](v5, -1, -1);
  }

  uint64_t v6 = *(unsigned __int8 *)(v0 + 52);
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v7(v6);
}

uint64_t sub_1A8CFCD20()
{
  if (qword_1EB5E9E28 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5E9E10);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59EE0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[5];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v12;
    sub_1A8D59FE0();
    *uint64_t v10 = v12;

    _os_log_impl(&dword_1A8C7F000, v5, v6, "Unable to check if assets are finished downloading with error: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
  }
  else
  {
  }
  id v13 = (uint64_t (*)(void))v0[1];
  return v13(0);
}

uint64_t sub_1A8CFCF28()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1A8CFCF48, v0, 0);
}

uint64_t sub_1A8CFCF48()
{
  if ((sub_1A8D419C0() & 1) == 0) {
    goto LABEL_12;
  }
  if (qword_1EB5E9F80 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1EB5E9F70;
  uint64_t v2 = (void *)sub_1A8D59BC0();
  LODWORD(v1) = objc_msgSend(v1, sel_BOOLForKey_, v2);

  if (v1)
  {
    if (qword_1EB5E9E28 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1A8D59A80();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB5E9E10);
    id v4 = sub_1A8D59A60();
    os_log_type_t v5 = sub_1A8D59F00();
    if (os_log_type_enabled(v4, v5))
    {
      os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v6 = 0;
      _os_log_impl(&dword_1A8C7F000, v4, v5, "Skiping storage check because of assets bypass", v6, 2u);
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
    }

    BOOL v7 = (uint64_t (*)(uint64_t))v0[1];
    return v7(1);
  }
  else
  {
LABEL_12:
    __swift_project_boxed_opaque_existential_1((void *)(v0[3] + 120), *(void *)(v0[3] + 144));
    uint64_t v10 = (uint64_t (*)(void))((int)*MEMORY[0x1E4F78CD0] + MEMORY[0x1E4F78CD0]);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[4] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1A8CFD170;
    return v10();
  }
}

uint64_t sub_1A8CFD170(char a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(unsigned char *)(v4 + 52) = a1;
  *(void *)(v4 + 40) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 24);
  if (v1) {
    os_log_type_t v6 = sub_1A8CFD400;
  }
  else {
    os_log_type_t v6 = sub_1A8CFD2A8;
  }
  return MEMORY[0x1F4188298](v6, v5, 0);
}

uint64_t sub_1A8CFD2A8()
{
  if (qword_1EB5E9E28 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E9E10);
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 52);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67109120;
    *(_DWORD *)(v0 + 48) = v4;
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Does device have enough storage? %{BOOL}d", v5, 8u);
    MEMORY[0x1AD0E6EB0](v5, -1, -1);
  }

  uint64_t v6 = *(unsigned __int8 *)(v0 + 52);
  BOOL v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v7(v6);
}

uint64_t sub_1A8CFD400()
{
  if (qword_1EB5E9E28 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5E9E10);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59EE0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[5];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v12;
    sub_1A8D59FE0();
    *uint64_t v10 = v12;

    _os_log_impl(&dword_1A8C7F000, v5, v6, "Unable to check if device has enough storage for assets with error: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
  }
  else
  {
  }
  id v13 = (uint64_t (*)(uint64_t))v0[1];
  return v13(1);
}

uint64_t sub_1A8CFD608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a1;
  id v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E979F1E8 + dword_1E979F1E8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_1A8CFD6C0;
  return v11(a5, a6);
}

uint64_t sub_1A8CFD6C0()
{
  *(void *)(*(void *)v1 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v2 = sub_1A8D014D8;
  }
  else
  {
    uint64_t v2 = sub_1A8CFD7DC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8CFD7DC()
{
  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 32) != 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static Assets.evaluateAssetEligibility(source:)(uint64_t a1, uint64_t a2)
{
  BOOL v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E979F1E8 + dword_1E979F1E8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A8C81994;
  return v7(a1, a2);
}

uint64_t static Assets.startDownload(source:requestResourcesKey:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1A8CFDBE4(a1, a2, a3, "Triggering model download. [Source: %s, requestResourcesKey: %s]", MEMORY[0x1F419B498], "Triggered model downloaded successfully. [Source: %s, requestResourcesKey: %s]", "Unable to request resources with error: %@ [Source: %s, requestResourcesKey: %s]");
}

uint64_t static Assets.removeModels(source:requestResourcesKey:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1A8CFDBE4(a1, a2, a3, "Triggering model deletion. [Source: %s, requestResourcesKey: %s]", MEMORY[0x1F419B490], "Triggered model deletion successfully. [Source: %s, requestResourcesKey: %s]", "Unable to request model deletion with error: %@. [Source: %s, requestResourcesKey: %s]");
}

void Assets.__allocating_init()()
{
}

void Assets.init()()
{
}

uint64_t Assets.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 120);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t Assets.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 120);
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t Assets.unownedExecutor.getter()
{
  return v0;
}

id sub_1A8CFDA44(uint64_t a1)
{
  uint64_t v2 = sub_1A8D597F0();
  void v14[3] = v2;
  v14[4] = &off_1EFF56CA8;
  v14[0] = a1;
  id v3 = (objc_class *)type metadata accessor for Assets();
  uint64_t v4 = (_WORD *)swift_allocObject();
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v2);
  MEMORY[0x1F4188790](v5, v5);
  BOOL v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v8 + 16))(v7);
  uint64_t v9 = *v7;
  void v13[3] = v2;
  v13[4] = &off_1EFF56CA8;
  v13[0] = v9;
  swift_defaultActor_initialize();
  v4[56] = 2;
  sub_1A8C91CA8((uint64_t)v13, (uint64_t)(v4 + 60));
  v12.receiver = v4;
  v12.super_class = v3;
  id v10 = objc_msgSendSuper2(&v12, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
  return v10;
}

uint64_t sub_1A8CFDB98()
{
  unint64_t v0 = sub_1A8D5A220();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1A8CFDBE4(uint64_t a1, unint64_t a2, uint64_t a3, const char *a4, uint64_t (*a5)(uint64_t), const char *a6, const char *a7)
{
  uint64_t v64 = a6;
  uint64_t v65 = a7;
  unint64_t v72 = a5;
  if (qword_1EB5E9E28 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1A8D59A80();
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1EB5E9E10);
  uint64_t v13 = sub_1A8D59810();
  double v67 = &v59;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  char v17 = (char *)&v59 - (((unint64_t)&v16[1].isa + 7) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void (**)(char *))(v14 + 16);
  uint64_t v70 = v14 + 16;
  os_log_t v68 = v16;
  uint64_t v69 = v18;
  ((void (*)(char *, uint64_t, uint64_t))v18)(v17, a3, v13);
  swift_bridgeObjectRetain_n();
  uint64_t v73 = v12;
  uint64_t v19 = sub_1A8D59A60();
  os_log_type_t v20 = sub_1A8D59F00();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v66 = a1;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v63 = a3;
    uint64_t v23 = v22;
    uint64_t v62 = swift_slowAlloc();
    uint64_t v75 = (void (*)(void))v62;
    *(_DWORD *)uint64_t v23 = 136315394;
    os_log_t v61 = v19;
    swift_bridgeObjectRetain();
    uint64_t v74 = sub_1A8C90120(a1, a2, (uint64_t *)&v75);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 12) = 2080;
    uint64_t v60 = a4;
    uint64_t v24 = sub_1A8D59800();
    uint64_t v74 = sub_1A8C90120(v24, v25, (uint64_t *)&v75);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v14 + 8);
    v26(v17, v13);
    uint64_t v19 = v61;
    _os_log_impl(&dword_1A8C7F000, v61, v20, v60, (uint8_t *)v23, 0x16u);
    uint64_t v27 = v62;
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v27, -1, -1);
    uint64_t v28 = v23;
    a3 = v63;
    MEMORY[0x1AD0E6EB0](v28, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v14 + 8);
    v26(v17, v13);
  }

  sub_1A8D597F0();
  swift_allocObject();
  uint64_t v29 = sub_1A8D597E0();
  uint64_t v30 = v71;
  uint64_t v31 = v72(a3);
  if (v30)
  {
    unint64_t v72 = (uint64_t (*)(uint64_t))v26;
    double v67 = &v59;
    MEMORY[0x1F4188790](v31, a3);
    uint64_t v33 = (char *)&v59 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    v69(v33);
    swift_bridgeObjectRetain();
    id v34 = v30;
    swift_bridgeObjectRetain();
    id v35 = v30;
    char v36 = sub_1A8D59A60();
    os_log_type_t v37 = sub_1A8D59EE0();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v71 = (void *)v29;
      uint64_t v39 = v38;
      uint64_t v40 = (void *)swift_slowAlloc();
      uint64_t v69 = (void (*)(char *))swift_slowAlloc();
      uint64_t v75 = (void (*)(void))v69;
      *(_DWORD *)uint64_t v39 = 138412802;
      os_log_t v68 = v36;
      id v41 = v30;
      uint64_t v42 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v73 = v13;
      uint64_t v74 = v42;
      uint64_t v43 = v42;
      uint64_t v70 = v14;
      sub_1A8D59FE0();
      *uint64_t v40 = v43;

      *(_WORD *)(v39 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v74 = sub_1A8C90120(v66, a2, (uint64_t *)&v75);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v39 + 22) = 2080;
      uint64_t v44 = sub_1A8D59800();
      uint64_t v74 = sub_1A8C90120(v44, v45, (uint64_t *)&v75);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v72)(v33, v73);
      char v36 = v68;
      _os_log_impl(&dword_1A8C7F000, v68, v37, v65, (uint8_t *)v39, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v40, -1, -1);
      objc_super v46 = v69;
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v46, -1, -1);
      MEMORY[0x1AD0E6EB0](v39, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      ((void (*)(char *, uint64_t))v72)(v33, v13);
    }

    swift_willThrow();
    return swift_release();
  }
  else
  {
    uint64_t v71 = (void *)v29;
    double v67 = &v59;
    MEMORY[0x1F4188790](v31, a3);
    long long v48 = (char *)&v59 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
    v69(v48);
    swift_bridgeObjectRetain_n();
    uint64_t v49 = sub_1A8D59A60();
    os_log_type_t v50 = sub_1A8D59F00();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = swift_slowAlloc();
      unint64_t v72 = (uint64_t (*)(uint64_t))v26;
      uint64_t v52 = v51;
      uint64_t v53 = swift_slowAlloc();
      uint64_t v70 = v14;
      uint64_t v54 = v53;
      uint64_t v75 = (void (*)(void))v53;
      *(_DWORD *)uint64_t v52 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_1A8C90120(v66, a2, (uint64_t *)&v75);
      uint64_t v73 = v13;
      uint64_t v74 = v55;
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v52 + 12) = 2080;
      uint64_t v56 = sub_1A8D59800();
      uint64_t v74 = sub_1A8C90120(v56, v57, (uint64_t *)&v75);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v72)(v48, v73);
      _os_log_impl(&dword_1A8C7F000, v49, v50, v64, (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v54, -1, -1);
      MEMORY[0x1AD0E6EB0](v52, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      v26(v48, v13);
    }

    return swift_release();
  }
}

uint64_t sub_1A8CFE3E4(uint64_t a1, uint64_t a2)
{
  v2[76] = a2;
  v2[75] = a1;
  v2[77] = type metadata accessor for AssetDiagnostics();
  v2[78] = swift_task_alloc();
  v2[79] = swift_task_alloc();
  v2[80] = swift_task_alloc();
  v2[81] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A8CFE4A4, 0, 0);
}

uint64_t sub_1A8CFE4A4()
{
  uint64_t v36 = v0;
  uint64_t v1 = sub_1A8D596F0();
  *(void *)(v0 + 656) = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = v2;
  *(void *)(v0 + 664) = v2;
  *(void *)(v0 + 672) = *(void *)(v2 + 64);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 680) = v4;
  uint64_t v31 = v4;
  sub_1A8D596E0();
  if (qword_1EB5E9E28 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1A8D59A80();
  *(void *)(v0 + 688) = __swift_project_value_buffer(v5, (uint64_t)qword_1EB5E9E10);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1A8D59A60();
  os_log_type_t v7 = sub_1A8D59F00();
  BOOL v8 = os_log_type_enabled(v6, v7);
  unint64_t v9 = *(void *)(v0 + 608);
  uint64_t v32 = v3;
  uint64_t v33 = v1;
  if (v8)
  {
    uint64_t v10 = *(void *)(v0 + 600);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v34 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 496) = sub_1A8C90120(v10, v9, &v34);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v6, v7, "Evaluating whether assets should be downloaded or released. [Source: %s]", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v12, -1, -1);
    MEMORY[0x1AD0E6EB0](v11, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (MKBDeviceUnlockedSinceBoot())
  {
    uint64_t v34 = 0;
    __int16 v35 = 256;
    uint64_t v13 = self;
    *(void *)(v0 + 696) = v13;
    sub_1A8C9C118(objc_msgSend(v13, sel_currentAvailability), (uint64_t)&v34, v0 + 328);
    char v14 = *(unsigned char *)(v0 + 328);
    char v15 = *(unsigned char *)(v0 + 329);
    char v16 = *(unsigned char *)(v0 + 330);
    uint64_t v17 = *(void *)(v0 + 336);
    char v18 = *(unsigned char *)(v0 + 344);
    uint64_t v19 = *(void *)(v0 + 352);
    uint64_t v20 = *(void *)(v0 + 360);
    *(void *)(v0 + 704) = v20;
    *(unsigned char *)(v0 + 208) = v14;
    *(unsigned char *)(v0 + 209) = v15;
    *(unsigned char *)(v0 + 210) = v16;
    *(void *)(v0 + 216) = v17;
    *(unsigned char *)(v0 + 224) = v18;
    *(void *)(v0 + 232) = v19;
    *(void *)(v0 + 240) = v20;
    BOOL v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 712) = v21;
    *BOOL v21 = v0;
    v21[1] = sub_1A8CFE998;
    return sub_1A8CF81A4(v0 + 809);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_1A8D59A60();
    os_log_type_t v24 = sub_1A8D59EE0();
    BOOL v25 = os_log_type_enabled(v23, v24);
    unint64_t v26 = *(void *)(v0 + 608);
    if (v25)
    {
      uint64_t v27 = *(void *)(v0 + 600);
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v34 = v29;
      *(_DWORD *)uint64_t v28 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 576) = sub_1A8C90120(v27, v26, &v34);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v23, v24, "Unable to trigger download or release of resources because the device has not been unlocked [Source: %s]", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v29, -1, -1);
      MEMORY[0x1AD0E6EB0](v28, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_1A8CA6B90(15);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
    return v30();
  }
}

uint64_t sub_1A8CFE998(char a1)
{
  *(unsigned char *)(*(void *)v1 + 810) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1A8CFEAB8, 0, 0);
}

uint64_t sub_1A8CFEAB8()
{
  uint64_t v85 = v0;
  uint64_t v82 = *(unsigned __int8 *)(v0 + 809);
  if (!*(unsigned char *)(v0 + 810))
  {
    swift_bridgeObjectRetain_n();
    os_log_type_t v7 = sub_1A8D59A60();
    os_log_type_t v8 = sub_1A8D59F00();
    BOOL v9 = os_log_type_enabled(v7, v8);
    unint64_t v10 = *(void *)(v0 + 608);
    if (v9)
    {
      uint64_t v11 = *(void *)(v0 + 600);
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v83 = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 592) = sub_1A8C90120(v11, v10, &v83);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v7, v8, "Device is ready for downloads, sending requestResources signal. [Source: %s]", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v13, -1, -1);
      MEMORY[0x1AD0E6EB0](v12, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    unint64_t v21 = *(void *)(v0 + 608);
    uint64_t v22 = *(void *)(v0 + 600);
    uint64_t v23 = sub_1A8D59810();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = swift_task_alloc();
    (*(void (**)(uint64_t, void, uint64_t))(v24 + 104))(v25, *MEMORY[0x1E4F78CF0], v23);
    unint64_t v26 = "Triggering model download. [Source: %s, requestResourcesKey: %s]";
    uint64_t v27 = (uint64_t (*)(uint64_t))MEMORY[0x1F419B498];
    uint64_t v28 = "Triggered model downloaded successfully. [Source: %s, requestResourcesKey: %s]";
    uint64_t v29 = "Unable to request resources with error: %@ [Source: %s, requestResourcesKey: %s]";
    goto LABEL_13;
  }
  if (*(unsigned char *)(v0 + 810) == 1)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v1 = sub_1A8D59A60();
    os_log_type_t v2 = sub_1A8D59F00();
    BOOL v3 = os_log_type_enabled(v1, v2);
    unint64_t v4 = *(void *)(v0 + 608);
    if (v3)
    {
      uint64_t v81 = *(void *)(v0 + 600);
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v83 = v6;
      *(_DWORD *)uint64_t v5 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 584) = sub_1A8C90120(v81, v4, &v83);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v1, v2, "Device is not ready for downloads, sending releaseResources signal. [Source: %s]", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
      MEMORY[0x1AD0E6EB0](v5, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    unint64_t v21 = *(void *)(v0 + 608);
    uint64_t v22 = *(void *)(v0 + 600);
    uint64_t v23 = sub_1A8D59810();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = swift_task_alloc();
    (*(void (**)(uint64_t, void, uint64_t))(v24 + 104))(v25, *MEMORY[0x1E4F78CF0], v23);
    unint64_t v26 = "Triggering model deletion. [Source: %s, requestResourcesKey: %s]";
    uint64_t v27 = (uint64_t (*)(uint64_t))MEMORY[0x1F419B490];
    uint64_t v28 = "Triggered model deletion successfully. [Source: %s, requestResourcesKey: %s]";
    uint64_t v29 = "Unable to request model deletion with error: %@. [Source: %s, requestResourcesKey: %s]";
LABEL_13:
    sub_1A8CFDBE4(v22, v21, v25, v26, v27, v28, v29);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
    swift_task_dealloc();
    goto LABEL_16;
  }
  swift_bridgeObjectRetain_n();
  char v14 = sub_1A8D59A60();
  os_log_type_t v15 = sub_1A8D59F00();
  BOOL v16 = os_log_type_enabled(v14, v15);
  unint64_t v17 = *(void *)(v0 + 608);
  if (v16)
  {
    uint64_t v18 = *(void *)(v0 + 600);
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v83 = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 528) = sub_1A8C90120(v18, v17, &v83);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v14, v15, "Unable to fetch device readyness, not sending request or release resources. [Source: %s]", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v20, -1, -1);
    MEMORY[0x1AD0E6EB0](v19, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

LABEL_16:
  uint64_t v30 = *(void *)(v0 + 680);
  uint64_t v31 = *(void *)(v0 + 664);
  uint64_t v32 = *(void *)(v0 + 656);
  uint64_t v33 = swift_task_alloc();
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
  *(void *)(v0 + 720) = v34;
  *(void *)(v0 + 728) = (v31 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v34(v33, v30, v32);
  __int16 v35 = self;
  *(void *)(v0 + 736) = v35;
  id v36 = objc_msgSend(v35, sel_processInfo);
  id v37 = objc_msgSend(v36, sel_processName);

  uint64_t v38 = sub_1A8D59BF0();
  uint64_t v79 = v39;
  uint64_t v80 = v38;

  if (sub_1A8D419C0())
  {
    if (qword_1EB5EA2D8 != -1) {
      swift_once();
    }
    uint64_t v40 = (void *)qword_1EB5EA2D0;
    id v41 = (void *)sub_1A8D59BC0();
    unsigned __int8 v42 = objc_msgSend(v40, sel_BOOLForKey_, v41);
  }
  else
  {
    unsigned __int8 v42 = 0;
  }
  unint64_t v43 = 0xD00000000000003DLL;
  unint64_t v44 = 0x80000001A8D62B00;
  unint64_t v45 = 0;
  unint64_t v46 = 0;
  switch(v82)
  {
    case 1:
      unint64_t v43 = 0xD000000000000034;
      uint64_t v47 = "Access not granted - device is not through waitlist.";
      goto LABEL_24;
    case 2:
      unint64_t v43 = 0xD000000000000029;
      uint64_t v47 = "Access is granted but user has opted out.";
LABEL_24:
      unint64_t v44 = (unint64_t)(v47 - 32) | 0x8000000000000000;
      goto LABEL_26;
    case 3:
      unint64_t v44 = 0x80000001A8D62BB0;
      unint64_t v43 = 0xD000000000000022;
      goto LABEL_26;
    case 4:
      goto LABEL_27;
    default:
LABEL_26:
      unint64_t v45 = v43;
      unint64_t v46 = v44;
LABEL_27:
      char v48 = *(unsigned char *)(v0 + 810);
      uint64_t v49 = *(void *)(v0 + 664);
      uint64_t v50 = *(void *)(v0 + 656);
      uint64_t v51 = *(void **)(v0 + 648);
      uint64_t v52 = *(int **)(v0 + 616);
      uint64_t v53 = *(void *)(v0 + 608);
      *uint64_t v51 = *(void *)(v0 + 600);
      v51[1] = v53;
      uint64_t v54 = (char *)v51 + v52[5];
      uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 32);
      *(void *)(v0 + 744) = v55;
      *(void *)(v0 + 752) = (v49 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      v55(v54, v33, v50);
      uint64_t v56 = (void *)((char *)v51 + v52[6]);
      *uint64_t v56 = v80;
      v56[1] = v79;
      *((unsigned char *)v51 + v52[7]) = v42;
      unint64_t v57 = (void *)((char *)v51 + v52[8]);
      *unint64_t v57 = v45;
      v57[1] = v46;
      *((unsigned char *)v51 + v52[9]) = v48;
      unint64_t v58 = (_OWORD *)((char *)v51 + v52[10]);
      *unint64_t v58 = 0u;
      v58[1] = 0u;
      swift_task_dealloc();
      LOBYTE(v83) = 1;
      *(void *)(v0 + 184) = v52;
      uint64_t v59 = sub_1A8D0122C(&qword_1E979F270);
      *(void *)(v0 + 760) = v59;
      *(void *)(v0 + 192) = v59;
      uint64_t v60 = sub_1A8D0122C(&qword_1E979F278);
      *(void *)(v0 + 768) = v60;
      *(void *)(v0 + 200) = v60;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 160));
      sub_1A8D01270((uint64_t)v51, (uint64_t)boxed_opaque_existential_1);
      swift_bridgeObjectRetain();
      sub_1A8D50F64((unsigned __int8 *)&v83, (void *)(v0 + 160));
      *(void *)(v0 + 776) = 0;
      __swift_destroy_boxed_opaque_existential_0(v0 + 160);
      *(void *)(v0 + 784) = swift_task_alloc();
      sub_1A8D596E0();
      swift_bridgeObjectRetain_n();
      uint64_t v62 = sub_1A8D59A60();
      os_log_type_t v63 = sub_1A8D59F00();
      BOOL v64 = os_log_type_enabled(v62, v63);
      unint64_t v65 = *(void *)(v0 + 608);
      if (v64)
      {
        uint64_t v66 = *(void *)(v0 + 600);
        double v67 = (uint8_t *)swift_slowAlloc();
        uint64_t v68 = swift_slowAlloc();
        uint64_t v83 = v68;
        *(_DWORD *)double v67 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 520) = sub_1A8C90120(v66, v65, &v83);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A8C7F000, v62, v63, "Evaluating whether ADM assets should be downloaded or released. [Source: %s]", v67, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v68, -1, -1);
        MEMORY[0x1AD0E6EB0](v67, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v69 = *(void **)(v0 + 696);
      uint64_t v83 = 0;
      __int16 v84 = 256;
      sub_1A8C9C118(objc_msgSend(v69, sel_currentAvailability), (uint64_t)&v83, v0 + 248);
      char v70 = *(unsigned char *)(v0 + 248);
      char v71 = *(unsigned char *)(v0 + 249);
      char v72 = *(unsigned char *)(v0 + 250);
      uint64_t v73 = *(void *)(v0 + 256);
      char v74 = *(unsigned char *)(v0 + 264);
      uint64_t v75 = *(void *)(v0 + 272);
      uint64_t v76 = *(void *)(v0 + 280);
      *(void *)(v0 + 792) = v76;
      *(unsigned char *)(v0 + 288) = v70;
      *(unsigned char *)(v0 + 289) = v71;
      *(unsigned char *)(v0 + 290) = v72;
      *(void *)(v0 + 296) = v73;
      *(unsigned char *)(v0 + 304) = v74;
      *(void *)(v0 + 312) = v75;
      *(void *)(v0 + 320) = v76;
      uint64_t v77 = (void *)swift_task_alloc();
      *(void *)(v0 + 800) = v77;
      *uint64_t v77 = v0;
      v77[1] = sub_1A8CFF9BC;
      return sub_1A8CF8900(v0 + 808);
  }
}

uint64_t sub_1A8CFF9BC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 811) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1A8CFFADC, 0, 0);
}

uint64_t sub_1A8CFFADC()
{
  uint64_t v122 = v0;
  uint64_t v1 = *(unsigned __int8 *)(v0 + 808);
  if (*(unsigned char *)(v0 + 811))
  {
    if (*(unsigned char *)(v0 + 811) != 1)
    {
      swift_bridgeObjectRetain_n();
      BOOL v16 = sub_1A8D59A60();
      os_log_type_t v17 = sub_1A8D59F00();
      BOOL v18 = os_log_type_enabled(v16, v17);
      unint64_t v19 = *(void *)(v0 + 608);
      if (v18)
      {
        uint64_t v20 = *(void *)(v0 + 600);
        unint64_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        v121[0] = v22;
        *(_DWORD *)unint64_t v21 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 568) = sub_1A8C90120(v20, v19, v121);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A8C7F000, v16, v17, "Unable to fetch device readyness, not sending request or release ADM resources. [Source: %s]", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v22, -1, -1);
        MEMORY[0x1AD0E6EB0](v21, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      id v113 = *(void **)(v0 + 776);
      goto LABEL_24;
    }
    swift_bridgeObjectRetain_n();
    os_log_type_t v2 = sub_1A8D59A60();
    os_log_type_t v3 = sub_1A8D59F00();
    BOOL v4 = os_log_type_enabled(v2, v3);
    unint64_t v5 = *(void *)(v0 + 608);
    uint64_t v116 = v1;
    if (v4)
    {
      uint64_t v6 = *(void *)(v0 + 600);
      os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      v121[0] = v8;
      *(_DWORD *)os_log_type_t v7 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 504) = sub_1A8C90120(v6, v5, v121);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v2, v3, "Device is not ready for ADM downloads, sending releaseResources signal. [Source: %s]", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v8, -1, -1);
      MEMORY[0x1AD0E6EB0](v7, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v23 = *(void **)(v0 + 776);
    unint64_t v24 = *(void *)(v0 + 608);
    uint64_t v25 = *(void *)(v0 + 600);
    uint64_t v26 = sub_1A8D59810();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = swift_task_alloc();
    (*(void (**)(uint64_t, void, uint64_t))(v27 + 104))(v28, *MEMORY[0x1E4F78CE8], v26);
    uint64_t v29 = "Triggering model deletion. [Source: %s, requestResourcesKey: %s]";
    uint64_t v30 = (uint64_t (*)(uint64_t))MEMORY[0x1F419B490];
    uint64_t v31 = "Triggered model deletion successfully. [Source: %s, requestResourcesKey: %s]";
    uint64_t v32 = "Unable to request model deletion with error: %@. [Source: %s, requestResourcesKey: %s]";
  }
  else
  {
    swift_bridgeObjectRetain_n();
    BOOL v9 = sub_1A8D59A60();
    os_log_type_t v10 = sub_1A8D59F00();
    BOOL v11 = os_log_type_enabled(v9, v10);
    unint64_t v12 = *(void *)(v0 + 608);
    uint64_t v116 = v1;
    if (v11)
    {
      uint64_t v13 = *(void *)(v0 + 600);
      char v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v121[0] = v15;
      *(_DWORD *)char v14 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 512) = sub_1A8C90120(v13, v12, v121);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A8C7F000, v9, v10, "Device is ready for ADM downloads, sending requestResources signal. [Source: %s]", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v15, -1, -1);
      MEMORY[0x1AD0E6EB0](v14, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v23 = *(void **)(v0 + 776);
    unint64_t v24 = *(void *)(v0 + 608);
    uint64_t v25 = *(void *)(v0 + 600);
    uint64_t v26 = sub_1A8D59810();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = swift_task_alloc();
    (*(void (**)(uint64_t, void, uint64_t))(v27 + 104))(v28, *MEMORY[0x1E4F78CE8], v26);
    uint64_t v29 = "Triggering model download. [Source: %s, requestResourcesKey: %s]";
    uint64_t v30 = (uint64_t (*)(uint64_t))MEMORY[0x1F419B498];
    uint64_t v31 = "Triggered model downloaded successfully. [Source: %s, requestResourcesKey: %s]";
    uint64_t v32 = "Unable to request resources with error: %@ [Source: %s, requestResourcesKey: %s]";
  }
  sub_1A8CFDBE4(v25, v24, v28, v29, v30, v31, v32);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
  uint64_t v119 = v23;
  if (v23)
  {
    v114 = (uint64_t *)(v0 + 16);
    uint64_t v33 = *(void *)(v0 + 784);
    uint64_t v34 = *(void **)(v0 + 736);
    __int16 v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 720);
    uint64_t v36 = *(void *)(v0 + 656);
    swift_task_dealloc();
    uint64_t v112 = swift_task_alloc();
    v35(v112, v33, v36);
    id v37 = objc_msgSend(v34, sel_processInfo);
    id v38 = objc_msgSend(v37, sel_processName);

    uint64_t v39 = sub_1A8D59BF0();
    uint64_t v110 = v40;
    uint64_t v111 = v39;

    if (sub_1A8D419C0())
    {
      if (qword_1EB5EA2D8 != -1) {
        swift_once();
      }
      id v41 = (void *)qword_1EB5EA2D0;
      unsigned __int8 v42 = (void *)sub_1A8D59BC0();
      unsigned __int8 v109 = objc_msgSend(v41, sel_BOOLForKey_, v42);
    }
    else
    {
      unsigned __int8 v109 = 0;
    }
    unint64_t v43 = 0xD00000000000003DLL;
    unint64_t v44 = 0x80000001A8D62B00;
    unint64_t v45 = 0;
    unint64_t v46 = 0;
    switch(v116)
    {
      case 1:
        uint64_t v47 = "Device is not in or through the waitlist.";
        goto LABEL_39;
      case 2:
        uint64_t v47 = "Access is granted but user has opted out.";
LABEL_39:
        unint64_t v44 = (unint64_t)(v47 - 32) | 0x8000000000000000;
        unint64_t v43 = 0xD000000000000029;
        goto LABEL_41;
      case 3:
        unint64_t v43 = 0xD000000000000022;
        unint64_t v44 = 0x80000001A8D62BB0;
        goto LABEL_41;
      case 4:
        goto LABEL_42;
      default:
LABEL_41:
        unint64_t v45 = v43;
        unint64_t v46 = v44;
LABEL_42:
        char v108 = *(unsigned char *)(v0 + 811);
        uint64_t v107 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 744);
        uint64_t v106 = *(void *)(v0 + 656);
        uint64_t v81 = *(char **)(v0 + 624);
        uint64_t v82 = *(int **)(v0 + 616);
        uint64_t v103 = *(void *)(v0 + 600);
        uint64_t v104 = *(void *)(v0 + 608);
        long long v118 = *(_OWORD *)(v0 + 760);
        swift_getErrorValue();
        id v83 = v119;
        uint64_t v84 = sub_1A8D5A440();
        uint64_t v105 = v85;
        swift_getErrorValue();
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t v87 = *(void *)(v0 + 456);
        *(void *)(v0 + 480) = DynamicType;
        *(void *)(v0 + 488) = v87;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F288);
        uint64_t v88 = sub_1A8D59C40();
        uint64_t v90 = v89;

        *(void *)uint64_t v81 = v103;
        *((void *)v81 + 1) = v104;
        v107(&v81[v82[5]], v112, v106);
        uint64_t v91 = (uint64_t *)&v81[v82[6]];
        *uint64_t v91 = v111;
        v91[1] = v110;
        v81[v82[7]] = v109;
        uint64_t v92 = (unint64_t *)&v81[v82[8]];
        *uint64_t v92 = v45;
        v92[1] = v46;
        v81[v82[9]] = v108;
        uint64_t v93 = (uint64_t *)&v81[v82[10]];
        *uint64_t v93 = v84;
        v93[1] = v105;
        v93[2] = v88;
        v93[3] = v90;
        swift_task_dealloc();
        LOBYTE(v121[0]) = 2;
        *(void *)(v0 + 40) = v82;
        *(_OWORD *)(v0 + 48) = v118;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v114);
        sub_1A8D01270((uint64_t)v81, (uint64_t)boxed_opaque_existential_1);
        swift_bridgeObjectRetain();
        sub_1A8D50F64((unsigned __int8 *)v121, v114);
        uint64_t v95 = *(void *)(v0 + 784);
        uint64_t v96 = *(void *)(v0 + 680);
        uint64_t v97 = *(void *)(v0 + 664);
        uint64_t v98 = *(void *)(v0 + 656);
        uint64_t v99 = *(void *)(v0 + 648);
        uint64_t v100 = *(void *)(v0 + 624);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v114);
        swift_willThrow();
        sub_1A8D012D4(v100);
        BOOL v101 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
        v101(v95, v98);
        sub_1A8D012D4(v99);
        v101(v96, v98);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v80 = *(uint64_t (**)(void))(v0 + 8);
        break;
    }
    goto LABEL_43;
  }
  swift_task_dealloc();
  id v113 = 0;
  uint64_t v1 = v116;
LABEL_24:
  uint64_t v48 = *(void *)(v0 + 784);
  uint64_t v49 = *(void **)(v0 + 736);
  uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 720);
  uint64_t v51 = *(void *)(v0 + 656);
  uint64_t v52 = swift_task_alloc();
  v50(v52, v48, v51);
  id v53 = objc_msgSend(v49, sel_processInfo);
  id v54 = objc_msgSend(v53, sel_processName);

  uint64_t v120 = sub_1A8D59BF0();
  uint64_t v115 = v55;

  if (sub_1A8D419C0())
  {
    if (qword_1EB5EA2D8 != -1) {
      swift_once();
    }
    uint64_t v56 = (void *)qword_1EB5EA2D0;
    unint64_t v57 = (void *)sub_1A8D59BC0();
    unsigned __int8 v58 = objc_msgSend(v56, sel_BOOLForKey_, v57);
  }
  else
  {
    unsigned __int8 v58 = 0;
  }
  unint64_t v59 = 0xD00000000000003DLL;
  unint64_t v60 = 0x80000001A8D62B00;
  unint64_t v61 = 0;
  unint64_t v62 = 0;
  switch(v1)
  {
    case 1:
      os_log_type_t v63 = "Device is not in or through the waitlist.";
      goto LABEL_32;
    case 2:
      os_log_type_t v63 = "Access is granted but user has opted out.";
LABEL_32:
      unint64_t v60 = (unint64_t)(v63 - 32) | 0x8000000000000000;
      unint64_t v59 = 0xD000000000000029;
      goto LABEL_34;
    case 3:
      unint64_t v59 = 0xD000000000000022;
      unint64_t v60 = 0x80000001A8D62BB0;
      goto LABEL_34;
    case 4:
      goto LABEL_35;
    default:
LABEL_34:
      unint64_t v61 = v59;
      unint64_t v62 = v60;
LABEL_35:
      char v64 = *(unsigned char *)(v0 + 811);
      unint64_t v65 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 744);
      uint64_t v66 = *(void *)(v0 + 656);
      double v67 = *(char **)(v0 + 640);
      uint64_t v68 = *(int **)(v0 + 616);
      uint64_t v69 = *(void *)(v0 + 608);
      long long v117 = *(_OWORD *)(v0 + 760);
      *(void *)double v67 = *(void *)(v0 + 600);
      *((void *)v67 + 1) = v69;
      v65(&v67[v68[5]], v52, v66);
      char v70 = (uint64_t *)&v67[v68[6]];
      *char v70 = v120;
      v70[1] = v115;
      v67[v68[7]] = v58;
      char v71 = (unint64_t *)&v67[v68[8]];
      *char v71 = v61;
      v71[1] = v62;
      v67[v68[9]] = v64;
      char v72 = &v67[v68[10]];
      *(_OWORD *)char v72 = 0u;
      *((_OWORD *)v72 + 1) = 0u;
      swift_task_dealloc();
      LOBYTE(v121[0]) = 2;
      *(void *)(v0 + 88) = v68;
      *(_OWORD *)(v0 + 96) = v117;
      uint64_t v73 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 64));
      sub_1A8D01270((uint64_t)v67, (uint64_t)v73);
      swift_bridgeObjectRetain();
      sub_1A8D50F64((unsigned __int8 *)v121, (void *)(v0 + 64));
      if (v113) {

      }
      uint64_t v74 = *(void *)(v0 + 784);
      uint64_t v75 = *(void *)(v0 + 680);
      uint64_t v76 = *(void *)(v0 + 664);
      uint64_t v77 = *(void *)(v0 + 656);
      uint64_t v78 = *(void *)(v0 + 648);
      sub_1A8D012D4(*(void *)(v0 + 640));
      uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
      v79(v74, v77);
      sub_1A8D012D4(v78);
      v79(v75, v77);
      __swift_destroy_boxed_opaque_existential_0(v0 + 64);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v80 = *(uint64_t (**)(void))(v0 + 8);
      break;
  }
LABEL_43:
  return v80();
}

unint64_t sub_1A8D007CC()
{
  unint64_t result = qword_1E979F1F0;
  if (!qword_1E979F1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F1F0);
  }
  return result;
}

unint64_t sub_1A8D00824()
{
  unint64_t result = qword_1E979F1F8[0];
  if (!qword_1E979F1F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E979F1F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReleaseReason()
{
  return &type metadata for ReleaseReason;
}

unsigned char *_s25CloudSubscriptionFeatures13ReleaseReasonOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8D0095CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ADMReleaseReason()
{
  return &type metadata for ADMReleaseReason;
}

uint64_t sub_1A8D00994(uint64_t a1, uint64_t a2)
{
  os_log_type_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A8C99788;
  return v7(a1, a2);
}

uint64_t sub_1A8D00A84(uint64_t a1, uint64_t a2)
{
  os_log_type_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A8CD998C;
  return v7(a1, a2);
}

uint64_t type metadata accessor for Assets()
{
  return self;
}

uint64_t method lookup function for Assets(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Assets);
}

uint64_t dispatch thunk of Assets.resetCachedStatus()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_1A8C81A88;
  return v5();
}

uint64_t dispatch thunk of Assets.assetStatus()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_1A8D00DB8;
  return v5();
}

uint64_t sub_1A8D00DB8(__int16 a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  int v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3(a1 & 0x101);
}

unsigned char *storeEnumTagSinglePayload for DownloadAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8D00F84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadAction()
{
  return &type metadata for DownloadAction;
}

unint64_t sub_1A8D00FC0()
{
  unint64_t result = qword_1E979F220;
  if (!qword_1E979F220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F220);
  }
  return result;
}

unint64_t sub_1A8D01014()
{
  unint64_t result = qword_1E979F228;
  if (!qword_1E979F228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F228);
  }
  return result;
}

uint64_t sub_1A8D0106C()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *unsigned int v4 = v1;
  v4[1] = sub_1A8C81994;
  uint64_t v5 = (uint64_t (*)(const void *, uint64_t))((char *)&dword_1E979F230 + dword_1E979F230);
  return v5(v2, v3);
}

uint64_t sub_1A8D01124()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *unsigned int v4 = v1;
  v4[1] = sub_1A8C81A88;
  uint64_t v5 = (uint64_t (*)(const void *, uint64_t))((char *)&dword_1E979F240 + dword_1E979F240);
  return v5(v2, v3);
}

unint64_t sub_1A8D011D8()
{
  unint64_t result = qword_1E979F260;
  if (!qword_1E979F260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E979F260);
  }
  return result;
}

uint64_t sub_1A8D0122C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AssetDiagnostics();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A8D01270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetDiagnostics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8D012D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetDiagnostics();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A8D01330(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8D01398()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A8D013D8(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  unsigned int v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *unsigned int v6 = v2;
  v6[1] = sub_1A8C81A88;
  _OWORD v6[2] = a1;
  BOOL v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E979F1E8 + dword_1E979F1E8);
  uint64_t v7 = (void *)swift_task_alloc();
  v6[3] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1A8CFD6C0;
  return v9(v5, v4);
}

uint64_t static LocalError.errorDomain.getter()
{
  return sub_1A8D59BF0();
}

CloudSubscriptionFeatures::LocalError_optional __swiftcall LocalError.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 17;
  if ((unint64_t)rawValue < 0x11) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (CloudSubscriptionFeatures::LocalError_optional)rawValue;
}

void *static LocalError.allCases.getter()
{
  return &unk_1EFF52F00;
}

uint64_t LocalError.rawValue.getter()
{
  return *v0;
}

unint64_t sub_1A8D015F8()
{
  unint64_t result = qword_1E979F2A8;
  if (!qword_1E979F2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F2A8);
  }
  return result;
}

CloudSubscriptionFeatures::LocalError_optional sub_1A8D0164C(Swift::Int *a1)
{
  return LocalError.init(rawValue:)(*a1);
}

unint64_t sub_1A8D01654(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A8C817AC();
  unint64_t result = sub_1A8D01684();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A8D01684()
{
  unint64_t result = qword_1E979F2B0;
  if (!qword_1E979F2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F2B0);
  }
  return result;
}

unint64_t sub_1A8D016E0()
{
  unint64_t result = qword_1E979F2B8;
  if (!qword_1E979F2B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E979F2C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F2B8);
  }
  return result;
}

void sub_1A8D0173C(void *a1@<X8>)
{
  *a1 = &unk_1EFF52F00;
}

uint64_t getEnumTagSinglePayload for LocalError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LocalError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8D018A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalError()
{
  return &type metadata for LocalError;
}

unint64_t sub_1A8D018E0(char a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9418);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A8D5F520;
  *(void *)(inited + 32) = sub_1A8D59BF0();
  *(void *)(inited + 40) = v3;
  unint64_t v4 = 0xD000000000000021;
  unint64_t v5 = 0xD000000000000032;
  unint64_t v6 = 0x80000001A8D65D70;
  unint64_t v7 = 0x80000001A8D65EA0;
  unint64_t v8 = 0x80000001A8D65FC0;
  unint64_t v9 = 0xD00000000000002ELL;
  switch(a1)
  {
    case 1:
      unint64_t v5 = 0xD000000000000023;
      unint64_t v9 = 0xD000000000000029;
      unint64_t v6 = 0x80000001A8D65D40;
      unint64_t v7 = 0x80000001A8D65E70;
      unint64_t v8 = 0x80000001A8D65F90;
      unint64_t v4 = 0xD000000000000029;
      break;
    case 2:
      unint64_t v9 = 0xD00000000000002DLL;
      unint64_t v5 = 0xD000000000000039;
      unint64_t v6 = 0x80000001A8D65D10;
      unint64_t v7 = 0x80000001A8D65E30;
      unint64_t v8 = 0x80000001A8D65F60;
      unint64_t v4 = 0xD00000000000002ELL;
      break;
    case 3:
      unint64_t v9 = 0xD000000000000014;
      unint64_t v5 = 0xD000000000000022;
      unint64_t v4 = 0xD000000000000038;
      unint64_t v6 = 0x80000001A8D65CD0;
      unint64_t v7 = 0x80000001A8D65E00;
      uint64_t v10 = "404 server not found";
      goto LABEL_8;
    case 4:
      unint64_t v9 = 0xD000000000000020;
      unint64_t v5 = 0xD00000000000002DLL;
      unint64_t v4 = 0xD000000000000048;
      unint64_t v6 = 0x80000001A8D65C80;
      unint64_t v7 = 0x80000001A8D65DD0;
      uint64_t v10 = "dsId not found in this partition";
      goto LABEL_8;
    case 5:
      unint64_t v4 = 0xD000000000000022;
      unint64_t v9 = 0xD000000000000028;
      unint64_t v6 = 0x80000001A8D65C50;
      unint64_t v7 = 0x80000001A8D65DA0;
      unint64_t v8 = 0x80000001A8D65EE0;
      unint64_t v5 = 0xD00000000000002ELL;
      break;
    case 6:
      unint64_t v5 = 0xD00000000000001FLL;
      unint64_t v4 = 0xD000000000000030;
      unint64_t v9 = 0xD000000000000032;
      unint64_t v6 = 0x80000001A8D65C10;
      unint64_t v7 = 0x80000001A8D65BF0;
      uint64_t v10 = "Received 200 response but with no data in the body";
LABEL_8:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 80) = sub_1A8D59BF0();
  *(void *)(inited + 88) = v12;
  *(void *)(inited + 120) = v11;
  *(void *)(inited + 96) = v5;
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 128) = sub_1A8D59BF0();
  *(void *)(inited + 136) = v13;
  *(void *)(inited + 168) = v11;
  *(void *)(inited + 144) = v4;
  *(void *)(inited + 152) = v6;
  return sub_1A8C90A64(inited);
}

uint64_t *sub_1A8D01BA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = sub_1A8D596F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = sub_1A8D596F0();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      goto LABEL_10;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_1A8D01D9C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v4 = sub_1A8D596F0();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    uint64_t v6 = v4;
    uint64_t v7 = a1;
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = sub_1A8D596F0();
    uint64_t v8 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 1, v3);
    if (result) {
      return result;
    }
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    uint64_t v7 = a1;
    uint64_t v6 = v3;
  }
  return v5(v7, v6);
}

void *sub_1A8D01EAC(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = sub_1A8D596F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_1A8D596F0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_1A8D02060(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A8CCF62C((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_1A8D596F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_1A8D596F0();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1A8D02224(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = sub_1A8D596F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_1A8D596F0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_1A8D023D8(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A8CCF62C((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_1A8D596F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_1A8D596F0();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1A8D0259C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_1A8D025C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1A8D025F0()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_1A8D02600()
{
  sub_1A8C82EE4();
  if (v0 <= 0x3F)
  {
    sub_1A8D596F0();
    if (v1 <= 0x3F) {
      swift_initEnumMetadataMultiPayload();
    }
  }
}

unint64_t sub_1A8D026C4(unsigned __int8 a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9418);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A8D5F520;
  *(void *)(inited + 32) = sub_1A8D59BF0();
  *(void *)(inited + 40) = v3;
  unint64_t v4 = 0xD000000000000012;
  unint64_t v5 = 0xD000000000000014;
  unint64_t v6 = 0x80000001A8D65270;
  unint64_t v7 = 0x80000001A8D66190;
  unint64_t v8 = 0x80000001A8D66280;
  uint64_t v9 = a1;
  unint64_t v10 = 0xD000000000000015;
  switch(v9)
  {
    case 1:
      unint64_t v5 = 0xD000000000000018;
      unint64_t v10 = 0xD000000000000019;
      unint64_t v4 = 0xD000000000000022;
      unint64_t v6 = 0x80000001A8D660C0;
      unint64_t v7 = 0x80000001A8D66170;
      uint64_t v11 = "Unable to retrieve BAA certificate";
      goto LABEL_8;
    case 2:
      unint64_t v5 = 0xD000000000000018;
      unint64_t v10 = 0xD00000000000001ALL;
      unint64_t v4 = 0xD000000000000020;
      unint64_t v6 = 0x80000001A8D660C0;
      unint64_t v7 = 0x80000001A8D66150;
      uint64_t v11 = "Unable to retrieve reference key";
      goto LABEL_8;
    case 3:
      unint64_t v10 = 0xD000000000000022;
      unint64_t v7 = 0x80000001A8D66120;
      unint64_t v8 = 0x80000001A8D66200;
      unint64_t v6 = 0xEC00000072616461;
      unint64_t v5 = 0x72206120656C6966;
      unint64_t v4 = 0xD000000000000015;
      break;
    case 4:
      unint64_t v10 = 0xD00000000000001ELL;
      unint64_t v4 = 0xD000000000000026;
      unint64_t v6 = 0x80000001A8D660A0;
      unint64_t v7 = 0x80000001A8D66100;
      unint64_t v8 = 0x80000001A8D661D0;
      unint64_t v5 = 0xD000000000000015;
      break;
    case 5:
      unint64_t v10 = 0xD00000000000001CLL;
      unint64_t v4 = 0xD00000000000001ELL;
      unint64_t v6 = 0x80000001A8D66080;
      unint64_t v7 = 0x80000001A8D660E0;
      unint64_t v8 = 0x80000001A8D661B0;
      unint64_t v5 = 0xD00000000000001CLL;
      break;
    case 6:
      unint64_t v5 = 0xD00000000000001FLL;
      unint64_t v4 = 0xD00000000000002ELL;
      unint64_t v10 = 0xD000000000000038;
      unint64_t v6 = 0x80000001A8D66060;
      unint64_t v7 = 0x80000001A8D66020;
      uint64_t v11 = "This platform is not supported for BAA signing";
LABEL_8:
      unint64_t v8 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v4;
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 80) = sub_1A8D59BF0();
  *(void *)(inited + 88) = v13;
  *(void *)(inited + 120) = v12;
  *(void *)(inited + 96) = v10;
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 128) = sub_1A8D59BF0();
  *(void *)(inited + 136) = v14;
  *(void *)(inited + 168) = v12;
  *(void *)(inited + 144) = v5;
  *(void *)(inited + 152) = v6;
  return sub_1A8C90A64(inited);
}

void sub_1A8D02988()
{
  unint64_t v1 = v0;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F5B770]), sel_init);
  uint64_t v3 = (void *)sub_1A8D59BC0();
  objc_msgSend(v2, sel_setUniqueIdentifier_, v3);

  unint64_t v4 = (void *)sub_1A8D59BC0();
  objc_msgSend(v2, sel_setGroupIdentifier_, v4);

  unint64_t v5 = (void *)sub_1A8D59BC0();
  objc_msgSend(v2, sel_setTitle_, v5);

  unint64_t v6 = (void *)sub_1A8D59BC0();
  objc_msgSend(v2, sel_setInformativeText_, v6);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EA118);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1A8D5F770;
  uint64_t v8 = (uint64_t)v1 + *(int *)(type metadata accessor for FollowUpConfig() + 48);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E92A0);
  uint64_t v10 = *(void *)(*(void *)(v9 - 8) + 64);
  MEMORY[0x1F4188790](v9 - 8, v11);
  sub_1A8D03464(v8, (uint64_t)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_1A8D59BC0();
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1A8D595A0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v33 = v14;
  uint64_t v15 = 0;
  if (v32((char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v13) != 1)
  {
    uint64_t v15 = (void *)sub_1A8D59570();
    (*(void (**)(char *, uint64_t))(v33 + 8))((char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  }
  id v31 = self;
  id v16 = objc_msgSend(v31, sel_actionWithLabel_url_, v12, v15);

  if (v16)
  {
    *(void *)(v7 + 32) = v16;
    uint64_t v34 = v7;
    sub_1A8D59D70();
    sub_1A8C8EB1C(0, &qword_1E979F2C8);
    os_log_type_t v17 = (void *)sub_1A8D59D40();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setActions_, v17);

    id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F5B778]), sel_init);
    unint64_t v19 = (void *)sub_1A8D59BC0();
    objc_msgSend(v18, sel_setTitle_, v19);

    uint64_t v20 = (void *)sub_1A8D59BC0();
    objc_msgSend(v18, sel_setInformativeText_, v20);

    id v21 = objc_msgSend(v18, sel_setFrequency_, INFINITY);
    v30[1] = v30;
    MEMORY[0x1F4188790](v21, v22);
    uint64_t v23 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A8D03464(v8, (uint64_t)v23);
    swift_bridgeObjectRetain();
    unint64_t v24 = (void *)sub_1A8D59BC0();
    swift_bridgeObjectRelease();
    uint64_t v25 = 0;
    if (v32(v23, 1, v13) != 1)
    {
      uint64_t v25 = (void *)sub_1A8D59570();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v13);
    }
    id v26 = objc_msgSend(v31, sel_actionWithLabel_url_, v24, v25);

    objc_msgSend(v18, sel_setActivateAction_, v26);
    objc_msgSend(v2, sel_setNotification_, v18);
    if (*v1 == 0xD000000000000017 && v1[1] == 0x80000001A8D662A0 || (sub_1A8D5A390() & 1) != 0)
    {
      objc_msgSend(v2, sel_setDisplayStyle_, 17);
      if (v1[5]) {
        uint64_t v27 = (void *)sub_1A8D59BC0();
      }
      else {
        uint64_t v27 = 0;
      }
      objc_msgSend(v2, sel_setExtensionIdentifier_, v27);

      if (v1[7]) {
        uint64_t v28 = (void *)sub_1A8D59BC0();
      }
      else {
        uint64_t v28 = 0;
      }
      objc_msgSend(v2, sel_setRepresentingBundlePath_, v28);

      if (v1[9]) {
        uint64_t v29 = (void *)sub_1A8D59BC0();
      }
      else {
        uint64_t v29 = 0;
      }
      objc_msgSend(v2, sel_setBundleIconName_, v29);
    }
    else
    {
      objc_msgSend(v2, sel_setDisplayStyle_, 3);
    }
  }
  else
  {
    __break(1u);
  }
}

double sub_1A8D02EF0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1A8D59BF0();
  uint64_t v19 = v3;
  uint64_t v20 = v2;
  sub_1A8C8EB1C(0, &qword_1E979F2D0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  unint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v7 = sub_1A8D594D0();
  uint64_t v9 = v8;

  id v10 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata, 0xEC000000454C5449);
  uint64_t v11 = sub_1A8D594D0();
  uint64_t v13 = v12;

  id v14 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001A8D663D0);
  uint64_t v15 = sub_1A8D594D0();
  uint64_t v17 = v16;

  type metadata accessor for FollowUpConfig();
  sub_1A8D59590();
  *(void *)a1 = 0xD000000000000013;
  *(void *)(a1 + 8) = 0x80000001A8D64370;
  *(void *)(a1 + 16) = v20;
  *(void *)(a1 + 24) = v19;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(void *)(a1 + 80) = v7;
  *(void *)(a1 + 88) = v9;
  *(void *)(a1 + 96) = v11;
  *(void *)(a1 + 104) = v13;
  *(void *)(a1 + 112) = v15;
  *(void *)(a1 + 120) = v17;
  return result;
}

double sub_1A8D03168@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1A8D59BF0();
  uint64_t v21 = v3;
  uint64_t v22 = v2;
  sub_1A8C8EB1C(0, &qword_1E979F2D0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  unint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v7 = sub_1A8D594D0();
  uint64_t v9 = v8;

  id v10 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001A8D66370);
  uint64_t v11 = sub_1A8D594D0();
  uint64_t v13 = v12;

  id v14 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001A8D66390);
  uint64_t v15 = sub_1A8D594D0();
  uint64_t v17 = v16;

  uint64_t v18 = a1 + *(int *)(type metadata accessor for FollowUpConfig() + 48);
  uint64_t v19 = sub_1A8D595A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(void *)a1 = 0xD000000000000017;
  *(void *)(a1 + 8) = 0x80000001A8D662A0;
  *(void *)(a1 + 16) = v22;
  *(void *)(a1 + 24) = v21;
  *(void *)(a1 + 32) = 0xD000000000000038;
  *(void *)(a1 + 40) = 0x80000001A8D662C0;
  *(void *)(a1 + 48) = 0xD000000000000068;
  *(void *)(a1 + 56) = 0x80000001A8D66300;
  double result = 4.73648168e180;
  *(_OWORD *)(a1 + 64) = xmmword_1A8D5F780;
  *(void *)(a1 + 80) = v7;
  *(void *)(a1 + 88) = v9;
  *(void *)(a1 + 96) = v11;
  *(void *)(a1 + 104) = v13;
  *(void *)(a1 + 112) = v15;
  *(void *)(a1 + 120) = v17;
  return result;
}

uint64_t type metadata accessor for FollowUpConfig()
{
  uint64_t result = qword_1E979F2D8;
  if (!qword_1E979F2D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A8D03464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E92A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1A8D034CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    uint64_t v10 = a2[11];
    a1[10] = a2[10];
    a1[11] = v10;
    uint64_t v11 = a2[13];
    a1[12] = a2[12];
    a1[13] = v11;
    uint64_t v12 = a2[15];
    uint64_t v13 = *(int *)(a3 + 48);
    uint64_t v21 = (char *)a2 + v13;
    __dst = (char *)a1 + v13;
    a1[14] = a2[14];
    a1[15] = v12;
    uint64_t v14 = sub_1A8D595A0();
    uint64_t v19 = *(void *)(v14 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    uint64_t v15 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20(v21, 1, v15))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E92A0);
      memcpy(__dst, v21, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v21, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v15);
    }
  }
  return v3;
}

uint64_t sub_1A8D036D8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  uint64_t v5 = sub_1A8D595A0();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_1A8D037E0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  uint64_t v11 = a2[15];
  uint64_t v12 = *(int *)(a3 + 48);
  uint64_t v19 = (char *)a2 + v12;
  __dst = (char *)a1 + v12;
  a1[14] = a2[14];
  a1[15] = v11;
  uint64_t v13 = sub_1A8D595A0();
  uint64_t v17 = *(void *)(v13 - 8);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v14 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18(v19, 1, v14))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E92A0);
    memcpy(__dst, v19, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v19, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v14);
  }
  return a1;
}

void *sub_1A8D0399C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 48);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A8D595A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E92A0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_1A8D03C14(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  long long v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  long long v7 = a2[7];
  uint64_t v8 = *(int *)(a3 + 48);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v11 = sub_1A8D595A0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E92A0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

void *sub_1A8D03D40(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[13];
  a1[12] = a2[12];
  a1[13] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[15];
  a1[14] = a2[14];
  a1[15] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(a3 + 48);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1A8D595A0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 40))(v15, v16, v17);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E92A0);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  return a1;
}

uint64_t sub_1A8D03F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A8D03F4C);
}

uint64_t sub_1A8D03F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E92A0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1A8D04000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A8D04014);
}

uint64_t sub_1A8D04014(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E92A0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1A8D040C0()
{
  sub_1A8D0416C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1A8D0416C()
{
  if (!qword_1E979F2E8)
  {
    sub_1A8D595A0();
    unint64_t v0 = sub_1A8D59FD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E979F2E8);
    }
  }
}

uint64_t GeoClassificationInfo.featureKey.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A8D04354()
{
  uint64_t v0 = sub_1A8D596F0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0, v2);
  unint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8D596E0();
  char v5 = sub_1A8D59650();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5 & 1;
}

uint64_t sub_1A8D0447C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification + 8);
  swift_bridgeObjectRetain();
  return sub_1A8D05A48(v1, v2);
}

uint64_t static GeoClassificationInfo.supportsSecureCoding.getter()
{
  return 1;
}

unsigned char *GeoClassificationInfo.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return GeoClassificationInfo.init(from:)(a1);
}

unsigned char *GeoClassificationInfo.init(from:)(void *a1)
{
  id v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F2F8);
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta;
  v3[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta] = 0;
  uint64_t v10 = a1[3];
  uint64_t v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1A8D05BC4();
  id v37 = v3;
  uint64_t v11 = v8;
  sub_1A8D5A4F0();
  if (v2)
  {
    id v16 = v37;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);

    type metadata accessor for GeoClassificationInfo();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v33 = v9;
    uint64_t v13 = v34;
    uint64_t v12 = v35;
    char v39 = 3;
    uint64_t v14 = v11;
    uint64_t v15 = sub_1A8D5A290();
    uint64_t v18 = v37;
    uint64_t v19 = (uint64_t *)&v37[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey];
    uint64_t *v19 = v15;
    v19[1] = v20;
    char v39 = 0;
    uint64_t v21 = sub_1A8D5A290();
    uint64_t v22 = (uint64_t *)&v18[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification];
    uint64_t *v22 = v21;
    v22[1] = v23;
    uint64_t v32[2] = v22;
    uint64_t v24 = sub_1A8D596F0();
    v32[4] = v32;
    uint64_t v25 = *(void *)(v24 - 8);
    MEMORY[0x1F4188790](v24, v26);
    uint64_t v28 = (char *)v32 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    char v39 = 1;
    sub_1A8C93C40(&qword_1EB5EA168);
    sub_1A8D5A2B0();
    void v32[3] = v25;
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v32[1] = v24;
    v29(&v37[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_cacheTill], v28, v24);
    char v39 = 2;
    LOBYTE(v24) = sub_1A8D5A260();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v12);
    v3[v33] = v24 & 1;
    id v30 = v37;

    id v31 = (objc_class *)type metadata accessor for GeoClassificationInfo();
    v38.receiver = v30;
    v38.super_class = v31;
    id v3 = objc_msgSendSuper2(&v38, sel_init);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  }
  return v3;
}

id GeoClassificationInfo.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return GeoClassificationInfo.init(coder:)(a1);
}

id GeoClassificationInfo.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta;
  v1[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta] = 0;
  sub_1A8C8EB1C(0, (unint64_t *)&qword_1EB5EACB0);
  uint64_t v5 = v1;
  uint64_t v6 = sub_1A8D59F80();
  if (!v6)
  {
    if (qword_1EB5E94B0 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1A8D59A80();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EB5E9430);
    uint64_t v29 = sub_1A8D59A60();
    os_log_type_t v30 = sub_1A8D59EE0();
    if (!os_log_type_enabled(v29, v30)) {
      goto LABEL_18;
    }
    id v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v31 = 0;
    uint64_t v32 = "Could not decode feature key for GeoclassificationInfo!";
    goto LABEL_17;
  }
  uint64_t v7 = (void *)v6;
  uint64_t v8 = sub_1A8D59BF0();
  uint64_t v10 = v9;

  uint64_t v11 = sub_1A8D59F80();
  if (!v11)
  {
    swift_bridgeObjectRelease();
    if (qword_1EB5E94B0 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_1A8D59A80();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EB5E9430);
    uint64_t v29 = sub_1A8D59A60();
    os_log_type_t v30 = sub_1A8D59EE0();
    if (!os_log_type_enabled(v29, v30)) {
      goto LABEL_18;
    }
    id v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v31 = 0;
    uint64_t v32 = "Could not decode geoClassification for GeoclassificationInfo!";
    goto LABEL_17;
  }
  uint64_t v12 = (void *)v11;
  uint64_t v13 = sub_1A8D59BF0();
  uint64_t v15 = v14;

  sub_1A8C8EB1C(0, &qword_1EB5EAD50);
  uint64_t v16 = sub_1A8D59F80();
  if (!v16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EB5E94B0 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1A8D59A80();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EB5E9430);
    uint64_t v29 = sub_1A8D59A60();
    os_log_type_t v30 = sub_1A8D59EE0();
    if (!os_log_type_enabled(v29, v30)) {
      goto LABEL_18;
    }
    id v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v31 = 0;
    uint64_t v32 = "Could not decode cacheTill for GeoclassificationInfo!";
LABEL_17:
    _os_log_impl(&dword_1A8C7F000, v29, v30, v32, v31, 2u);
    MEMORY[0x1AD0E6EB0](v31, -1, -1);
LABEL_18:

    type metadata accessor for GeoClassificationInfo();
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v17 = (void *)v16;
  uint64_t v18 = (uint64_t *)&v5[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey];
  *uint64_t v18 = v8;
  v18[1] = v10;
  uint64_t v19 = (uint64_t *)&v5[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification];
  uint64_t *v19 = v13;
  v19[1] = v15;
  uint64_t v20 = sub_1A8D596F0();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20, v22);
  uint64_t v24 = (char *)&v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8D596C0();
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v5[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_cacheTill], v24, v20);
  uint64_t v25 = (void *)sub_1A8D59BC0();
  LOBYTE(v24) = objc_msgSend(a1, sel_decodeBoolForKey_, v25);

  v2[v4] = (_BYTE)v24;
  uint64_t v26 = (objc_class *)type metadata accessor for GeoClassificationInfo();
  v36.receiver = v5;
  v36.super_class = v26;
  id v27 = objc_msgSendSuper2(&v36, sel_init);

  return v27;
}

void sub_1A8D04E94(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)sub_1A8D59BC0();
  uint64_t v5 = (void *)sub_1A8D59BC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  uint64_t v6 = (void *)sub_1A8D59BC0();
  uint64_t v7 = (void *)sub_1A8D59BC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

  uint64_t v8 = (void *)sub_1A8D59640();
  uint64_t v9 = (void *)sub_1A8D59BC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);

  uint64_t v10 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta);
  id v11 = (id)sub_1A8D59BC0();
  objc_msgSend(a1, sel_encodeBool_forKey_, v10, v11);
}

uint64_t sub_1A8D050EC()
{
  uint64_t v1 = v0;
  sub_1A8D5A0C0();
  sub_1A8D59CA0();
  swift_bridgeObjectRetain();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  sub_1A8D59CA0();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification + 8);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1A8D05A48(v2, v3);
  uint64_t v5 = CSFGeoClassificationStatusDescription(v4);
  sub_1A8D59BF0();

  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  sub_1A8D59CA0();
  sub_1A8D596F0();
  sub_1A8C93C40((unint64_t *)&qword_1EB5E92D0);
  sub_1A8D5A360();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  sub_1A8D59CA0();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A8D052E8(uint64_t a1)
{
  sub_1A8CDEFB8(a1, (uint64_t)v9);
  if (!v10)
  {
    sub_1A8CA2800((uint64_t)v9);
    goto LABEL_17;
  }
  type metadata accessor for GeoClassificationInfo();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    char v6 = 0;
    return v6 & 1;
  }
  BOOL v2 = *(void *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey) == *(void *)&v8[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey]
    && *(void *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey + 8) == *(void *)&v8[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey + 8];
  if (!v2 && (sub_1A8D5A390() & 1) == 0
    || (*(void *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification) == *(void *)&v8[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification]
      ? (BOOL v3 = *(void *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification + 8) == *(void *)&v8[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification + 8])
      : (BOOL v3 = 0),
        !v3 && (sub_1A8D5A390() & 1) == 0 || (sub_1A8D596B0() & 1) == 0))
  {

    goto LABEL_17;
  }
  char v4 = *(unsigned char *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta);
  char v5 = v8[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta];

  char v6 = v4 ^ v5 ^ 1;
  return v6 & 1;
}

id GeoClassificationInfo.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void GeoClassificationInfo.init()()
{
}

unint64_t sub_1A8D05518()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C69546568636163;
      break;
    case 2:
      unint64_t result = 0x617465427369;
      break;
    case 3:
      unint64_t result = 0x4B65727574616566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A8D055B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A8D0600C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A8D055D8(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1A8D055E4(uint64_t a1)
{
  unint64_t v2 = sub_1A8D05BC4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8D05620(uint64_t a1)
{
  unint64_t v2 = sub_1A8D05BC4();
  return MEMORY[0x1F41862B0](a1, v2);
}

id GeoClassificationInfo.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GeoClassificationInfo();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A8D0572C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F310);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8D05BC4();
  sub_1A8D5A510();
  v9[15] = 0;
  sub_1A8D5A320();
  if (!v1)
  {
    v9[14] = 1;
    sub_1A8D596F0();
    sub_1A8C93C40((unint64_t *)&unk_1EB5E92B0);
    sub_1A8D5A340();
    v9[13] = 2;
    sub_1A8D5A330();
    v9[12] = 3;
    sub_1A8D5A320();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

unsigned char *sub_1A8D05930@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for GeoClassificationInfo());
  uint64_t result = GeoClassificationInfo.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1A8D05988(void *a1)
{
  return sub_1A8D0572C(a1);
}

uint64_t CSFGeoClassificationStatus.description.getter(uint64_t a1)
{
  uint64_t v1 = CSFGeoClassificationStatusDescription(a1);
  uint64_t v2 = sub_1A8D59BF0();

  return v2;
}

uint64_t sub_1A8D059F8()
{
  uint64_t v1 = CSFGeoClassificationStatusDescription(*v0);
  uint64_t v2 = sub_1A8D59BF0();

  return v2;
}

uint64_t sub_1A8D05A48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065;
  if (v2 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646574696D696CLL && a2 == 0xE700000000000000 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x616C696176616E75 && a2 == 0xEB00000000656C62)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 0;
    }
  }
}

unint64_t sub_1A8D05BC4()
{
  unint64_t result = qword_1E979F300;
  if (!qword_1E979F300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F300);
  }
  return result;
}

uint64_t sub_1A8D05C18()
{
  return type metadata accessor for GeoClassificationInfo();
}

uint64_t sub_1A8D05C20()
{
  uint64_t result = sub_1A8D596F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for GeoClassificationInfo(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GeoClassificationInfo);
}

uint64_t dispatch thunk of GeoClassificationInfo.expired.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of GeoClassificationInfo.status.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of GeoClassificationInfo.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of GeoClassificationInfo.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of GeoClassificationInfo.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of GeoClassificationInfo.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

unsigned char *storeEnumTagSinglePayload for GeoClassificationInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8D05ECCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GeoClassificationInfo.CodingKeys()
{
  return &type metadata for GeoClassificationInfo.CodingKeys;
}

unint64_t sub_1A8D05F08()
{
  unint64_t result = qword_1E979F318;
  if (!qword_1E979F318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F318);
  }
  return result;
}

unint64_t sub_1A8D05F60()
{
  unint64_t result = qword_1E979F320;
  if (!qword_1E979F320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F320);
  }
  return result;
}

unint64_t sub_1A8D05FB8()
{
  unint64_t result = qword_1E979F328;
  if (!qword_1E979F328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F328);
  }
  return result;
}

uint64_t sub_1A8D0600C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001A8D66430 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C69546568636163 && a2 == 0xE90000000000006CLL || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617465427369 && a2 == 0xE600000000000000 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4B65727574616566 && a2 == 0xEA00000000007965)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A8D061D8()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t type metadata accessor for TaskLimiters()
{
  return self;
}

uint64_t static Ticket.supportsSecureCoding.getter()
{
  return 1;
}

unint64_t sub_1A8D062B0()
{
  sub_1A8D5A0C0();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status);
  id v2 = objc_msgSend(v1, sel_description);
  sub_1A8D59BF0();

  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  sub_1A8D59CA0();
  swift_bridgeObjectRetain();
  sub_1A8D59CA0();
  swift_bridgeObjectRelease();
  sub_1A8D59CA0();
  return 0xD000000000000010;
}

uint64_t Ticket.ticket.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket);
  swift_bridgeObjectRetain();
  return v1;
}

id Ticket.status.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status);
}

id Ticket.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return Ticket.init(from:)(a1);
}

id Ticket.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E97A0);
  uint64_t v19 = *(void *)(v4 - 8);
  uint64_t v20 = v4;
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8D0678C();
  uint64_t v9 = v1;
  id v10 = v8;
  sub_1A8D5A4F0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    type metadata accessor for Ticket();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v12 = v19;
    uint64_t v11 = v20;
    LOBYTE(v23) = 0;
    uint64_t v13 = sub_1A8D5A250();
    uint64_t v15 = (uint64_t *)&v9[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket];
    uint64_t *v15 = v13;
    v15[1] = v16;
    type metadata accessor for TicketStatus();
    char v22 = 1;
    sub_1A8CB6308(&qword_1EB5E9750);
    sub_1A8D5A2B0();
    *(void *)&v9[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status] = v23;

    uint64_t v17 = (objc_class *)type metadata accessor for Ticket();
    v21.receiver = v9;
    v21.super_class = v17;
    id v10 = objc_msgSendSuper2(&v21, sel_init);
    sub_1A8D06C04();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v11);

    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v10;
}

unint64_t sub_1A8D0678C()
{
  unint64_t result = qword_1EB5E9758;
  if (!qword_1EB5E9758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9758);
  }
  return result;
}

uint64_t type metadata accessor for Ticket()
{
  return self;
}

id Ticket.__allocating_init(ticket:status:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  uint64_t v8 = &v7[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket];
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  *(void *)&v7[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status] = a3;
  v12.receiver = v7;
  v12.super_class = v3;
  id v9 = a3;
  id v10 = objc_msgSendSuper2(&v12, sel_init);
  sub_1A8D06C04();

  return v10;
}

id Ticket.init(ticket:status:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = &v3[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket];
  *(void *)uint64_t v5 = a1;
  *((void *)v5 + 1) = a2;
  *(void *)&v3[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status] = a3;
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for Ticket();
  id v6 = a3;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  sub_1A8D06C04();

  return v7;
}

id Ticket.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return Ticket.init(coder:)(a1);
}

id Ticket.init(coder:)(void *a1)
{
  sub_1A8CB585C();
  id v3 = v1;
  uint64_t v4 = sub_1A8D59F80();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    sub_1A8D59BE0();
  }
  *(_OWORD *)&v3[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket] = 0uLL;
  type metadata accessor for TicketStatus();
  id v6 = (void *)sub_1A8D59F80();
  if (v6)
  {
    *(void *)&v3[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status] = v6;
    id v7 = v6;

    v10.receiver = v3;
    v10.super_class = (Class)type metadata accessor for Ticket();
    id v8 = objc_msgSendSuper2(&v10, sel_init);
    sub_1A8D06C04();
  }
  else
  {

    swift_bridgeObjectRelease();
    type metadata accessor for Ticket();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v8;
}

void sub_1A8D06AB4(void *a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket + 8)) {
    uint64_t v3 = sub_1A8D59BC0();
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = (void *)sub_1A8D59BC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);
  swift_unknownObjectRelease();

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status);
  id v6 = (id)sub_1A8D59BC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);
}

void sub_1A8D06C04()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status];
  id v3 = objc_allocWithZone((Class)type metadata accessor for TicketStatus());
  uint64_t v4 = v2;
  id v5 = TicketStatus.init(rawValue:)(0x7551746559746F6ELL, 0xEC00000064657565);
  if (v5)
  {
    id v6 = v5;
    char v7 = sub_1A8D59FA0();

    if ((v7 & 1) == 0 && !*(void *)&v1[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket + 8])
    {
      if (qword_1EB5E94B0 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_1A8D59A80();
      __swift_project_value_buffer(v8, (uint64_t)qword_1EB5E9430);
      uint64_t v16 = v1;
      objc_super v9 = sub_1A8D59A60();
      os_log_type_t v10 = sub_1A8D59EE0();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 136315138;
        uint64_t v17 = v12;
        uint64_t v13 = (uint64_t *)&v4[OBJC_IVAR____TtC25CloudSubscriptionFeatures12TicketStatus_rawValue];
        swift_beginAccess();
        uint64_t v15 = *v13;
        unint64_t v14 = v13[1];
        swift_bridgeObjectRetain();
        sub_1A8C90120(v15, v14, &v17);
        sub_1A8D59FE0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A8C7F000, v9, v10, "Ticket is not valid - has status %s but no ticket value.", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v12, -1, -1);
        MEMORY[0x1AD0E6EB0](v11, -1, -1);
      }
      else
      {
      }
    }
  }
  else
  {
    __break(1u);
  }
}

id Ticket.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void Ticket.init()()
{
}

uint64_t sub_1A8D06F0C()
{
  if (*v0) {
    return 0x737574617473;
  }
  else {
    return 0x74656B636974;
  }
}

uint64_t sub_1A8D06F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A8D07574(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A8D06F60(uint64_t a1)
{
  unint64_t v2 = sub_1A8D0678C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8D06F9C(uint64_t a1)
{
  unint64_t v2 = sub_1A8D0678C();
  return MEMORY[0x1F41862B0](a1, v2);
}

id Ticket.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Ticket();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A8D0705C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F340);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  objc_super v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8D0678C();
  sub_1A8D5A510();
  char v13 = 0;
  sub_1A8D5A2F0();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status);
    v11[15] = 1;
    type metadata accessor for TicketStatus();
    sub_1A8CB6308((unint64_t *)&unk_1E979E880);
    sub_1A8D5A340();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

id sub_1A8D0720C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for Ticket());
  id result = Ticket.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1A8D07260(void *a1)
{
  return sub_1A8D0705C(a1);
}

uint64_t method lookup function for Ticket(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Ticket);
}

uint64_t dispatch thunk of Ticket.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of Ticket.__allocating_init(ticket:status:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of Ticket.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of Ticket.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of Ticket.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

unsigned char *storeEnumTagSinglePayload for Ticket.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8D07434);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Ticket.CodingKeys()
{
  return &type metadata for Ticket.CodingKeys;
}

unint64_t sub_1A8D07470()
{
  unint64_t result = qword_1E979F348;
  if (!qword_1E979F348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F348);
  }
  return result;
}

unint64_t sub_1A8D074C8()
{
  unint64_t result = qword_1EB5E9770;
  if (!qword_1EB5E9770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9770);
  }
  return result;
}

unint64_t sub_1A8D07520()
{
  unint64_t result = qword_1EB5E9768;
  if (!qword_1EB5E9768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9768);
  }
  return result;
}

uint64_t sub_1A8D07574(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74656B636974 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A8D07658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t sub_1A8D0766C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1A8C99788;
  return v13(a1, a2, a3, a4, a5);
}

void sub_1A8D07788(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, SEL *a8)
{
  id v19 = a2;
  uint64_t v20 = a8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EA48);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11, v14);
  uint64_t v15 = (void *)sub_1A8D59BC0();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v16, (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  aBlock[4] = a6;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A8C93908;
  aBlock[3] = a7;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v19, *v20, v15, v18);
  _Block_release(v18);
}

uint64_t sub_1A8D07944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[15] = v4;
  v5[16] = a4;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  return MEMORY[0x1F4188298](sub_1A8D0796C, 0, 0);
}

uint64_t sub_1A8D0796C()
{
  uint64_t v1 = *(void **)(v0 + 112);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 120);
    uint64_t v5 = swift_task_alloc();
    *(void *)(v0 + 136) = v5;
    *(void *)(v5 + 16) = v4;
    char v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v6;
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA8);
    *char v6 = v0;
    v6[1] = sub_1A8D07B08;
    return MEMORY[0x1F4188160](v0 + 40, 0, 0, 0xD00000000000001BLL, 0x80000001A8D668B0, sub_1A8D11140, v5, v7);
  }
  else
  {
    **(unsigned char **)(v0 + 128) = 1;
    *(unsigned char *)(v0 + 194) = 1;
    sub_1A8CD8D1C();
    swift_willThrowTypedImpl();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_1A8D07B08()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8D080DC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A8D07C24;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8D07C24()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[5];
  v0[20] = v3;
  swift_unknownObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[21] = v4;
  v4[2] = v3;
  void v4[3] = v2;
  v4[4] = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[22] = v5;
  uint64_t v6 = type metadata accessor for WaitlistResult();
  *uint64_t v5 = v0;
  v5[1] = sub_1A8D07D40;
  return MEMORY[0x1F4188160](v0 + 11, 0, 0, 0xD00000000000001DLL, 0x80000001A8D669B0, sub_1A8D110E8, v4, v6);
}

uint64_t sub_1A8D07D40()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8D111D0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A8D07E5C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8D07E5C()
{
  uint64_t v14 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = qword_1EB5EAEF8;
  id v2 = *(id *)(v0 + 88);
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A8D59A80();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB5EAEE0);
  id v4 = v2;
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59F00();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = v12;
    *(_DWORD *)uint64_t v7 = 136315394;
    *(void *)(v0 + 80) = sub_1A8C90120(0xD000000000000030, 0x80000001A8D66970, &v13);
    sub_1A8D59FE0();
    *(_WORD *)(v7 + 12) = 2114;
    *(void *)(v0 + 72) = v4;
    id v8 = v4;
    sub_1A8D59FE0();
    *uint64_t v11 = v4;

    _os_log_impl(&dword_1A8C7F000, v5, v6, "Received response for %s. Result: %{public}@.", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v12, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }
  else
  {
  }
  swift_unknownObjectRelease();

  objc_super v9 = *(uint64_t (**)(id))(v0 + 8);
  return v9(v4);
}

uint64_t sub_1A8D080DC()
{
  uint64_t v17 = v0;
  swift_task_dealloc();
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5EAEE0);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59EE0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  id v8 = *(void **)(v0 + 152);
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    *(void *)(v0 + 56) = sub_1A8C90120(0xD000000000000030, 0x80000001A8D66970, &v16);
    sub_1A8D59FE0();
    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v11 = sub_1A8D5A440();
    *(void *)(v0 + 48) = sub_1A8C90120(v11, v12, &v16);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, v5, v6, "%s failed: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = *(void **)(v0 + 152);
  **(unsigned char **)(v0 + 128) = 2;
  *(unsigned char *)(v0 + 193) = 2;
  sub_1A8CD8D1C();
  swift_willThrowTypedImpl();

  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1A8D08374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[15] = v4;
  v5[16] = a4;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  return MEMORY[0x1F4188298](sub_1A8D0839C, 0, 0);
}

uint64_t sub_1A8D0839C()
{
  uint64_t v1 = *(void **)(v0 + 112);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 120);
    uint64_t v5 = swift_task_alloc();
    *(void *)(v0 + 136) = v5;
    *(void *)(v5 + 16) = v4;
    os_log_type_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v6;
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA8);
    *os_log_type_t v6 = v0;
    v6[1] = sub_1A8D08538;
    return MEMORY[0x1F4188160](v0 + 40, 0, 0, 0xD00000000000001BLL, 0x80000001A8D668B0, sub_1A8D1103C, v5, v7);
  }
  else
  {
    **(unsigned char **)(v0 + 128) = 1;
    *(unsigned char *)(v0 + 194) = 1;
    sub_1A8CD8D1C();
    swift_willThrowTypedImpl();
    id v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_1A8D08538()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8D08BE0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A8D08654;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8D08654()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[5];
  v0[20] = v3;
  swift_unknownObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[21] = v4;
  v4[2] = v3;
  void v4[3] = v2;
  v4[4] = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[22] = v5;
  uint64_t v6 = type metadata accessor for WaitlistResult();
  *uint64_t v5 = v0;
  v5[1] = sub_1A8D08770;
  return MEMORY[0x1F4188160](v0 + 11, 0, 0, 0xD00000000000001ALL, 0x80000001A8D66900, sub_1A8D11044, v4, v6);
}

uint64_t sub_1A8D08770()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8D08B0C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A8D0888C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8D0888C()
{
  uint64_t v14 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = qword_1EB5EAEF8;
  id v2 = *(id *)(v0 + 88);
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A8D59A80();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB5EAEE0);
  id v4 = v2;
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59F00();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = v12;
    *(_DWORD *)uint64_t v7 = 136315394;
    *(void *)(v0 + 80) = sub_1A8C90120(0xD00000000000002DLL, 0x80000001A8D668D0, &v13);
    sub_1A8D59FE0();
    *(_WORD *)(v7 + 12) = 2114;
    *(void *)(v0 + 72) = v4;
    id v8 = v4;
    sub_1A8D59FE0();
    *uint64_t v11 = v4;

    _os_log_impl(&dword_1A8C7F000, v5, v6, "Received response for %s. Result: %{public}@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v12, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }
  else
  {
  }
  swift_unknownObjectRelease();

  uint64_t v9 = *(uint64_t (**)(id))(v0 + 8);
  return v9(v4);
}

uint64_t sub_1A8D08B0C()
{
  uint64_t v8 = v0;
  uint64_t v1 = *(void **)(v0 + 184);
  id v2 = *(unsigned char **)(v0 + 128);
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v3 = (void *)sub_1A8D59540();
  sub_1A8D42F9C(&v7);

  char v4 = v7;
  *id v2 = v7;
  *(unsigned char *)(v0 + 192) = v4;
  sub_1A8CD8D1C();
  swift_willThrowTypedImpl();
  swift_unknownObjectRelease();

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1A8D08BE0()
{
  uint64_t v17 = v0;
  swift_task_dealloc();
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5EAEE0);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59EE0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 152);
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    *(void *)(v0 + 56) = sub_1A8C90120(0xD00000000000002DLL, 0x80000001A8D668D0, &v16);
    sub_1A8D59FE0();
    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v11 = sub_1A8D5A440();
    *(void *)(v0 + 48) = sub_1A8C90120(v11, v12, &v16);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, v5, v6, "%s failed: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = *(void **)(v0 + 152);
  **(unsigned char **)(v0 + 128) = 2;
  *(unsigned char *)(v0 + 193) = 2;
  sub_1A8CD8D1C();
  swift_willThrowTypedImpl();

  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

void sub_1A8D08E78()
{
}

void sub_1A8D08E98(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

_WORD *sub_1A8D08F00(char a1, void (*a2)(), uint64_t a3)
{
  os_log_type_t v6 = sub_1A8C8B110();
  if (a1)
  {
    uint64_t v24 = a2;
    uint64_t v25 = a3;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v21 = 1107296256;
    char v22 = sub_1A8D08E98;
    uint64_t v23 = &block_descriptor_23;
    BOOL v7 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v8 = &selRef_synchronousRemoteObjectProxyWithErrorHandler_;
  }
  else
  {
    uint64_t v24 = a2;
    uint64_t v25 = a3;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v21 = 1107296256;
    char v22 = sub_1A8D08E98;
    uint64_t v23 = &block_descriptor_14;
    BOOL v7 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v8 = &selRef_remoteObjectProxyWithErrorHandler_;
  }
  id v9 = objc_msgSend(v6, *v8, v7);
  _Block_release(v7);

  sub_1A8D5A010();
  swift_unknownObjectRelease();
  sub_1A8C901F4((uint64_t)v26, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA8);
  if (swift_dynamicCast())
  {
    os_log_type_t v6 = v19;
    id v10 = sub_1A8C8B110();
    uint64_t v24 = sub_1A8D08E78;
    uint64_t v25 = 0;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v21 = 1107296256;
    char v22 = sub_1A8C877CC;
    uint64_t v23 = &block_descriptor_17_0;
    uint64_t v11 = _Block_copy(&aBlock);
    objc_msgSend(v10, sel_setInterruptionHandler_, v11);
    _Block_release(v11);

    id v12 = sub_1A8C8B110();
    uint64_t v24 = sub_1A8C879B0;
    uint64_t v25 = 0;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v21 = 1107296256;
    char v22 = sub_1A8C877CC;
    uint64_t v23 = &block_descriptor_20;
    uint64_t v13 = _Block_copy(&aBlock);
    objc_msgSend(v12, sel_setInvalidationHandler_, v13);
    _Block_release(v13);

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  }
  else
  {
    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1A8D59A80();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EB5EAEE0);
    uint64_t v15 = sub_1A8D59A60();
    os_log_type_t v16 = sub_1A8D59EE0();
    if (os_log_type_enabled(v15, v16))
    {
      os_log_type_t v6 = (_WORD *)swift_slowAlloc();
      *os_log_type_t v6 = 0;
      _os_log_impl(&dword_1A8C7F000, v15, v16, "Proxy object has the wrong type", (uint8_t *)v6, 2u);
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
    }

    sub_1A8C8C7B0();
    swift_allocError();
    *uint64_t v17 = 1;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  }
  return v6;
}

uint64_t sub_1A8D092C0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F3A0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  uint64_t v8 = sub_1A8D08F00(0, (void (*)())sub_1A8D110C8, v7);
  swift_release();
  v10[0] = v8;
  return sub_1A8D59DE0();
}

uint64_t sub_1A8D09440(void *a1)
{
  id v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F3A0);
  return sub_1A8D59DD0();
}

_WORD *sub_1A8D09488()
{
  return sub_1A8D0950C((void (*)())sub_1A8D094C4, "Sending cache clear message to %s", (SEL *)&selRef_clearCacheAndNotify);
}

void sub_1A8D094C4(void *a1)
{
}

_WORD *sub_1A8D094D0()
{
  return sub_1A8D0950C((void (*)())sub_1A8D096C4, "Sending ticket cache clear message to %s", (SEL *)&selRef_clearTicketCacheAndNotify);
}

_WORD *sub_1A8D0950C(void (*a1)(), const char *a2, SEL *a3)
{
  unint64_t result = sub_1A8D08F00(0, a1, 0);
  if (!v3)
  {
    uint64_t v7 = result;
    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1A8D59A80();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EB5EAEE0);
    id v9 = sub_1A8D59A60();
    os_log_type_t v10 = sub_1A8D59F00();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      sub_1A8C90120(6581865, 0xE300000000000000, &v13);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v9, v10, a2, v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v12, -1, -1);
      MEMORY[0x1AD0E6EB0](v11, -1, -1);
    }

    [v7 *a3];
    return (_WORD *)swift_unknownObjectRelease();
  }
  return result;
}

void sub_1A8D096C4(void *a1)
{
}

void sub_1A8D096D0(void *a1, const char *a2)
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A8D59A80();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EAEE0);
  id v5 = a1;
  id v6 = a1;
  osos_log_t log = sub_1A8D59A60();
  os_log_type_t v7 = sub_1A8D59EE0();
  if (os_log_type_enabled(oslog, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v13 = v9;
    *(_DWORD *)uint64_t v8 = 136446210;
    swift_getErrorValue();
    uint64_t v10 = sub_1A8D5A440();
    sub_1A8C90120(v10, v11, &v13);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, oslog, v7, a2, v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1A8D098C4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9740);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v6 = MEMORY[0x1F4188790](v2, v5);
  uint64_t v32 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v35 = a1;
  uint64_t v33 = v10;
  v10((char *)&v27 - v8, a1, v2);
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v31 = v11 + v4;
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t v34 = v2;
  v13(v12 + v11, v9, v2);
  uint64_t v14 = sub_1A8D08F00(0, (void (*)())sub_1A8D10E48, v12);
  uint64_t v29 = v13;
  unint64_t v30 = v11;
  swift_release();
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1A8D59A80();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EB5EAEE0);
  os_log_type_t v16 = sub_1A8D59A60();
  os_log_type_t v17 = sub_1A8D59F00();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    aBlock[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v37 = sub_1A8C90120(0xD000000000000017, 0x80000001A8D66860, aBlock);
    uint64_t v28 = v14;
    sub_1A8D59FE0();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v37 = sub_1A8C90120(6581865, 0xE300000000000000, aBlock);
    uint64_t v14 = v28;
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v16, v17, "Sending %s request to %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v19, -1, -1);
    MEMORY[0x1AD0E6EB0](v18, -1, -1);
  }

  uint64_t v20 = v32;
  char v22 = v29;
  unint64_t v21 = v30;
  uint64_t v23 = v34;
  v33(v32, v35, v34);
  uint64_t v24 = swift_allocObject();
  v22(v24 + v21, v20, v23);
  aBlock[4] = (uint64_t)sub_1A8D10E80;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A8C83048;
  aBlock[3] = (uint64_t)&block_descriptor_133;
  uint64_t v25 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v14, sel_getSharedAlbumsStatusWithCompletion_, v25);
  _Block_release(v25);
  return swift_unknownObjectRelease();
}

uint64_t sub_1A8D09EAC(char a1, void *a2)
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A8D59A80();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EAEE0);
  id v5 = a2;
  uint64_t v6 = sub_1A8D59A60();
  os_log_type_t v7 = sub_1A8D59F00();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v17 = v9;
    *(_DWORD *)uint64_t v8 = 136315650;
    sub_1A8C90120(0xD000000000000017, 0x80000001A8D66860, &v17);
    sub_1A8D59FE0();
    *(_WORD *)(v8 + 12) = 1024;
    char v16 = a1;
    sub_1A8D59FE0();
    *(_WORD *)(v8 + 18) = 2080;
    if (a2)
    {
      id v10 = objc_msgSend(v5, sel_localizedDescription);
      uint64_t v11 = sub_1A8D59BF0();
      unint64_t v13 = v12;
    }
    else
    {
      unint64_t v13 = 0xE300000000000000;
      uint64_t v11 = 7104878;
    }
    sub_1A8C90120(v11, v13, &v17);
    sub_1A8D59FE0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A8C7F000, v6, v7, "received %s response, isEnabled: %{BOOL}d, error: %s", (uint8_t *)v8, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
    MEMORY[0x1AD0E6EB0](v8, -1, -1);

    a1 = v16;
    if (!a2) {
      goto LABEL_10;
    }
LABEL_7:
    uint64_t v17 = (uint64_t)v5;
    id v14 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9740);
    return sub_1A8D59DD0();
  }

  if (a2) {
    goto LABEL_7;
  }
LABEL_10:
  LOBYTE(v17) = a1 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9740);
  return sub_1A8D59DE0();
}

uint64_t sub_1A8D0A15C(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  void v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x1F4188298](sub_1A8D0A180, 0, 0);
}

uint64_t sub_1A8D0A180()
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB5EAEE0);
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Getting ticket status", v4, 2u);
    MEMORY[0x1AD0E6EB0](v4, -1, -1);
  }
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = v0[3];

  uint64_t v8 = (void *)swift_task_alloc();
  v0[6] = v8;
  v8[2] = v5;
  v8[3] = v7;
  v8[4] = v6;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[7] = v9;
  uint64_t v10 = type metadata accessor for TicketStatus();
  *uint64_t v9 = v0;
  v9[1] = sub_1A8D0A344;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD00000000000001CLL, 0x80000001A8D66840, sub_1A8D10D34, v8, v10);
}

uint64_t sub_1A8D0A344()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8D0A47C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A8D0A460;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8D0A460()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1A8D0A47C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1A8D0A4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F390);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v5, v8);
  uint64_t v40 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v32 - v11;
  unint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v42 = a1;
  char v39 = v13;
  v13((char *)&v32 - v11, a1, v5);
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = (v14 + 16) & ~v14;
  uint64_t v16 = v14 | 7;
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  uint64_t v41 = v5;
  v18(v17 + v15, v12, v5);
  uint64_t v19 = sub_1A8D08F00(0, (void (*)())sub_1A8D10D4C, v17);
  uint64_t v33 = v18;
  uint64_t v34 = v16;
  uint64_t v35 = v6 + 32;
  uint64_t v36 = v15 + v7;
  swift_release();
  uint64_t v20 = qword_1EB5EAEF8;
  swift_unknownObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1A8D59A80();
  __swift_project_value_buffer(v21, (uint64_t)qword_1EB5EAEE0);
  char v22 = sub_1A8D59A60();
  os_log_type_t v23 = sub_1A8D59F00();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    aBlock[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315394;
    uint64_t v44 = sub_1A8C90120(0xD00000000000001CLL, 0x80000001A8D66840, aBlock);
    sub_1A8D59FE0();
    *(_WORD *)(v24 + 12) = 2080;
    uint64_t v44 = sub_1A8C90120(6581865, 0xE300000000000000, aBlock);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v22, v23, "Sending %s request to %s.", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v25, -1, -1);
    MEMORY[0x1AD0E6EB0](v24, -1, -1);
  }

  uint64_t v26 = v39;
  uint64_t v27 = v40;
  uint64_t v28 = (void *)sub_1A8D59BC0();
  uint64_t v29 = v41;
  v26(v27, v42, v41);
  uint64_t v30 = swift_allocObject();
  v33(v30 + v15, v27, v29);
  aBlock[4] = (uint64_t)sub_1A8D10D84;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A8C93908;
  aBlock[3] = (uint64_t)&block_descriptor_124;
  uint64_t v31 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v19, sel_getTicketStatusForFeature_completion_, v28, v31);
  swift_unknownObjectRelease();
  _Block_release(v31);
  swift_unknownObjectRelease();
}

uint64_t sub_1A8D0AB0C(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  void v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x1F4188298](sub_1A8D0AB30, 0, 0);
}

uint64_t sub_1A8D0AB30()
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB5EAEE0);
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1A8C7F000, v2, v3, "Getting ticket status from cache.", v4, 2u);
    MEMORY[0x1AD0E6EB0](v4, -1, -1);
  }
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = v0[3];

  uint64_t v8 = (void *)swift_task_alloc();
  v0[6] = v8;
  v8[2] = v5;
  v8[3] = v7;
  v8[4] = v6;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[7] = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F378);
  *uint64_t v9 = v0;
  v9[1] = sub_1A8D0ACF8;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD000000000000025, 0x80000001A8D667C0, sub_1A8D10C30, v8, v10);
}

uint64_t sub_1A8D0ACF8()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8D1123C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A8D11144;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

void sub_1A8D0AE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F380);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v5, v8);
  uint64_t v24 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v22 - v11;
  unint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v27 = a1;
  os_log_type_t v23 = v13;
  v13((char *)&v22 - v11, a1, v5);
  unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v22 = v14 + v7;
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 32);
  v16(v15 + v14, v12, v5);
  uint64_t v17 = sub_1A8D08F00(0, (void (*)())sub_1A8D10C48, v15);
  swift_release();
  swift_unknownObjectRetain();
  uint64_t v18 = (void *)sub_1A8D59BC0();
  uint64_t v19 = v24;
  v23(v24, v27, v5);
  uint64_t v20 = swift_allocObject();
  v16(v20 + v14, v19, v5);
  aBlock[4] = sub_1A8D10C80;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A8C93908;
  aBlock[3] = &block_descriptor_113;
  uint64_t v21 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v17, sel_getTicketStatusFromCacheForFeature_completion_, v18, v21);
  swift_unknownObjectRelease();
  _Block_release(v21);
  swift_unknownObjectRelease();
}

uint64_t sub_1A8D0B290(void *a1, void *a2)
{
  if (a2)
  {
    uint64_t v3 = qword_1EB5EAEF8;
    id v4 = a2;
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1A8D59A80();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EB5EAEE0);
    id v6 = v4;
    uint64_t v7 = sub_1A8D59A60();
    os_log_type_t v8 = sub_1A8D59EE0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = v31;
      *(_DWORD *)uint64_t v9 = 136315394;
      sub_1A8C90120(0xD000000000000025, 0x80000001A8D667C0, &v32);
      sub_1A8D59FE0();
      *(_WORD *)(v9 + 12) = 2112;
      id v11 = v6;
      sub_1A8D59FE0();
      *uint64_t v10 = a2;

      _os_log_impl(&dword_1A8C7F000, v7, v8, "Received %s error response: %@", (uint8_t *)v9, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v10, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v31, -1, -1);
      MEMORY[0x1AD0E6EB0](v9, -1, -1);
    }
    else
    {
    }
    uint64_t v32 = (uint64_t)v6;
LABEL_13:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F380);
    return sub_1A8D59DD0();
  }
  if (!a1)
  {
    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1A8D59A80();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EB5EAEE0);
    uint64_t v25 = sub_1A8D59A60();
    os_log_type_t v26 = sub_1A8D59EE0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v32 = v28;
      *(_DWORD *)uint64_t v27 = 136315138;
      sub_1A8C90120(0xD000000000000025, 0x80000001A8D667C0, &v32);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v25, v26, "Receieved %s neither an error or response object. Throwing error.", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v28, -1, -1);
      MEMORY[0x1AD0E6EB0](v27, -1, -1);
    }

    sub_1A8C8C7B0();
    uint64_t v29 = swift_allocError();
    *uint64_t v30 = 2;
    uint64_t v32 = v29;
    goto LABEL_13;
  }
  uint64_t v13 = qword_1EB5EAEF8;
  id v14 = a1;
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1A8D59A80();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EB5EAEE0);
  id v16 = v14;
  uint64_t v17 = sub_1A8D59A60();
  os_log_type_t v18 = sub_1A8D59F00();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = (void *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v32 = v21;
    *(_DWORD *)uint64_t v19 = 136315394;
    sub_1A8C90120(0xD000000000000025, 0x80000001A8D667C0, &v32);
    sub_1A8D59FE0();
    *(_WORD *)(v19 + 12) = 2112;
    id v22 = v16;
    sub_1A8D59FE0();
    *uint64_t v20 = a1;

    _os_log_impl(&dword_1A8C7F000, v17, v18, "Received %s status response: %@", (uint8_t *)v19, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v20, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v21, -1, -1);
    MEMORY[0x1AD0E6EB0](v19, -1, -1);
  }
  else
  {
  }
  uint64_t v32 = (uint64_t)a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F380);
  return sub_1A8D59DE0();
}

void sub_1A8D0B860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F368);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v5, v8);
  uint64_t v40 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v42 = a1;
  char v39 = v13;
  v13((char *)&v32 - v11, a1, v5);
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = (v14 + 16) & ~v14;
  uint64_t v16 = v14 | 7;
  uint64_t v17 = swift_allocObject();
  os_log_type_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  uint64_t v41 = v5;
  v18(v17 + v15, v12, v5);
  uint64_t v19 = sub_1A8D08F00(0, (void (*)())sub_1A8D10BD4, v17);
  uint64_t v33 = v18;
  uint64_t v34 = v16;
  uint64_t v35 = v6 + 32;
  uint64_t v36 = v15 + v7;
  swift_release();
  uint64_t v20 = qword_1EB5EAEF8;
  swift_unknownObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1A8D59A80();
  __swift_project_value_buffer(v21, (uint64_t)qword_1EB5EAEE0);
  id v22 = sub_1A8D59A60();
  os_log_type_t v23 = sub_1A8D59F00();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    aBlock[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315394;
    uint64_t v44 = sub_1A8C90120(0xD000000000000016, 0x80000001A8D66760, aBlock);
    sub_1A8D59FE0();
    *(_WORD *)(v24 + 12) = 2080;
    uint64_t v44 = sub_1A8C90120(6581865, 0xE300000000000000, aBlock);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v22, v23, "Sending %s request to %s.", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v25, -1, -1);
    MEMORY[0x1AD0E6EB0](v24, -1, -1);
  }

  os_log_type_t v26 = v39;
  uint64_t v27 = v40;
  uint64_t v28 = (void *)sub_1A8D59BC0();
  uint64_t v29 = v41;
  v26(v27, v42, v41);
  uint64_t v30 = swift_allocObject();
  v33(v30 + v15, v27, v29);
  aBlock[4] = (uint64_t)sub_1A8D10C0C;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A8C93908;
  aBlock[3] = (uint64_t)&block_descriptor_102;
  uint64_t v31 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v19, sel_getTicketForFeature_completion_, v28, v31);
  swift_unknownObjectRelease();
  _Block_release(v31);
  swift_unknownObjectRelease();
}

uint64_t sub_1A8D0BE8C(void *a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t *a6)
{
  if (a2)
  {
    uint64_t v10 = qword_1EB5EAEF8;
    id v11 = a2;
    if (v10 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1A8D59A80();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB5EAEE0);
    id v13 = v11;
    uint64_t v14 = sub_1A8D59A60();
    os_log_type_t v15 = sub_1A8D59EE0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v37 = (void *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v41 = v39;
      *(_DWORD *)uint64_t v16 = 136315394;
      sub_1A8C90120(a4, a5, &v41);
      sub_1A8D59FE0();
      *(_WORD *)(v16 + 12) = 2112;
      id v17 = v13;
      sub_1A8D59FE0();
      *uint64_t v37 = a2;

      _os_log_impl(&dword_1A8C7F000, v14, v15, "Received %s error response: %@", (uint8_t *)v16, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v37, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v39, -1, -1);
      MEMORY[0x1AD0E6EB0](v16, -1, -1);
    }
    else
    {
    }
    uint64_t v41 = (uint64_t)v13;
LABEL_13:
    __swift_instantiateConcreteTypeFromMangledName(a6);
    return sub_1A8D59DD0();
  }
  if (!a1)
  {
    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1A8D59A80();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EB5EAEE0);
    uint64_t v29 = sub_1A8D59A60();
    os_log_type_t v30 = sub_1A8D59EE0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = a6;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v41 = v33;
      *(_DWORD *)uint64_t v31 = 136315138;
      sub_1A8C90120(a4, a5, &v41);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v29, v30, "Receieved %s neither an error or response object. Throwing error.", v31, 0xCu);
      swift_arrayDestroy();
      uint64_t v34 = v33;
      a6 = v32;
      MEMORY[0x1AD0E6EB0](v34, -1, -1);
      MEMORY[0x1AD0E6EB0](v31, -1, -1);
    }

    sub_1A8C8C7B0();
    uint64_t v35 = swift_allocError();
    *uint64_t v36 = 2;
    uint64_t v41 = v35;
    goto LABEL_13;
  }
  uint64_t v19 = qword_1EB5EAEF8;
  id v20 = a1;
  if (v19 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1A8D59A80();
  __swift_project_value_buffer(v21, (uint64_t)qword_1EB5EAEE0);
  id v22 = v20;
  os_log_type_t v23 = sub_1A8D59A60();
  os_log_type_t v24 = sub_1A8D59F00();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v38 = (void *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v41 = v40;
    *(_DWORD *)uint64_t v25 = 136315394;
    sub_1A8C90120(a4, a5, &v41);
    sub_1A8D59FE0();
    *(_WORD *)(v25 + 12) = 2112;
    id v26 = v22;
    sub_1A8D59FE0();
    *uint64_t v38 = a1;

    _os_log_impl(&dword_1A8C7F000, v23, v24, "Received %s status response: %@", (uint8_t *)v25, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v38, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v40, -1, -1);
    MEMORY[0x1AD0E6EB0](v25, -1, -1);
  }
  else
  {
  }
  uint64_t v41 = (uint64_t)v22;
  __swift_instantiateConcreteTypeFromMangledName(a6);
  return sub_1A8D59DE0();
}

void sub_1A8D0C454(uint64_t a1, uint64_t a2, int a3)
{
  int v25 = a3;
  uint64_t v27 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9718);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](v4, v7);
  id v26 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v9);
  id v11 = (char *)&v23 - v10;
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v28 = a1;
  os_log_type_t v24 = v12;
  v12((char *)&v23 - v10, a1, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  os_log_type_t v15 = *(void (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v16 = v11;
  uint64_t v17 = v4;
  v15(v14 + v13, v16, v4);
  os_log_type_t v18 = sub_1A8D08F00(0, (void (*)())sub_1A8D10B90, v14);
  swift_release();
  swift_unknownObjectRetain();
  uint64_t v19 = (void *)sub_1A8D59BC0();
  swift_bridgeObjectRelease();
  id v20 = v26;
  v24(v26, v28, v17);
  uint64_t v21 = swift_allocObject();
  v15(v21 + v13, v20, v17);
  aBlock[4] = sub_1A8D108D4;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A8D0C908;
  aBlock[3] = &block_descriptor_93;
  id v22 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v18, sel_clearCFUGateWithFeature_completion_, v19, v22);
  swift_unknownObjectRelease();
  _Block_release(v22);
  swift_unknownObjectRelease();
}

void sub_1A8D0C908(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_1A8D0C974(uint64_t a1, uint64_t a2, int a3)
{
  int v25 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9718);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](v4, v7);
  id v26 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v9);
  id v11 = (char *)v23 - v10;
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v27 = a1;
  os_log_type_t v24 = v12;
  v12((char *)v23 - v10, a1, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v23[1] = v13 + v6;
  uint64_t v14 = swift_allocObject();
  os_log_type_t v15 = *(void (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v16 = v11;
  uint64_t v17 = v4;
  v15(v14 + v13, v16, v4);
  os_log_type_t v18 = sub_1A8D08F00(0, (void (*)())sub_1A8D1089C, v14);
  swift_release();
  swift_unknownObjectRetain();
  uint64_t v19 = (void *)sub_1A8D59BC0();
  swift_bridgeObjectRelease();
  id v20 = v26;
  v24(v26, v27, v17);
  uint64_t v21 = swift_allocObject();
  v15(v21 + v13, v20, v17);
  aBlock[4] = sub_1A8D108D4;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A8D0C908;
  aBlock[3] = &block_descriptor_56_0;
  id v22 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v18, sel_clearCFUWithId_completion_, v19, v22);
  swift_unknownObjectRelease();
  _Block_release(v22);
  swift_unknownObjectRelease();
}

uint64_t sub_1A8D0CE4C(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9718);
    return sub_1A8D59DD0();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9718);
    return sub_1A8D59DE0();
  }
}

void sub_1A8D0CEB0(uint64_t a1, uint64_t a2, int a3)
{
  int v25 = a3;
  uint64_t v27 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9740);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](v4, v7);
  id v26 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v9);
  id v11 = (char *)&v23 - v10;
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v28 = a1;
  os_log_type_t v24 = v12;
  v12((char *)&v23 - v10, a1, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  os_log_type_t v15 = *(void (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v16 = v11;
  uint64_t v17 = v4;
  v15(v14 + v13, v16, v4);
  os_log_type_t v18 = sub_1A8D08F00(0, (void (*)())sub_1A8D1094C, v14);
  swift_release();
  swift_unknownObjectRetain();
  uint64_t v19 = (void *)sub_1A8D59BC0();
  swift_bridgeObjectRelease();
  id v20 = v26;
  v24(v26, v28, v17);
  uint64_t v21 = swift_allocObject();
  v15(v21 + v13, v20, v17);
  aBlock[4] = sub_1A8D10A18;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A8C83048;
  aBlock[3] = &block_descriptor_65;
  id v22 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v18, sel_postCFUIfEligibleWithFeature_completion_, v19, v22);
  swift_unknownObjectRelease();
  _Block_release(v22);
  swift_unknownObjectRelease();
}

uint64_t sub_1A8D0D364(uint64_t a1, void *a2)
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A8D59A80();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB5EAEE0);
  uint64_t v4 = sub_1A8D59A60();
  os_log_type_t v5 = sub_1A8D59F00();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 67109120;
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v4, v5, "CFU was posted? %{BOOL}d", v6, 8u);
    MEMORY[0x1AD0E6EB0](v6, -1, -1);
  }

  if (a2)
  {
    id v7 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9740);
    return sub_1A8D59DD0();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9740);
    return sub_1A8D59DE0();
  }
}

uint64_t sub_1A8D0D4DC()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1A8D0D4FC, 0, 0);
}

uint64_t sub_1A8D0D4FC()
{
  uint64_t v1 = sub_1A8D08F00(0, (void (*)())sub_1A8D0D674, 0);
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5EAEE0);
  uint64_t v3 = sub_1A8D59A60();
  os_log_type_t v4 = sub_1A8D59F00();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v5 = 0;
    _os_log_impl(&dword_1A8C7F000, v3, v4, "Revalidating CFU", v5, 2u);
    MEMORY[0x1AD0E6EB0](v5, -1, -1);
  }

  objc_msgSend(v1, sel_revalidateCFU);
  swift_unknownObjectRelease();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

void sub_1A8D0D674(void *a1)
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5EAEE0);
  id v3 = a1;
  id v4 = a1;
  osos_log_t log = sub_1A8D59A60();
  os_log_type_t v5 = sub_1A8D59EE0();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v11 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1A8C90120(0x6164696C61766572, 0xEF29285546436574, &v11);
    sub_1A8D59FE0();
    *(_WORD *)(v6 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v8 = sub_1A8D5A440();
    sub_1A8C90120(v8, v9, &v11);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, oslog, v5, "Remote proxy error in %s: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
    MEMORY[0x1AD0E6EB0](v6, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1A8D0D8B0(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9740);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v3, v6);
  uint64_t v23 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v25 = a1;
  id v22 = v11;
  v11((char *)&v22 - v9, a1, v3);
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  os_log_type_t v15 = v10;
  uint64_t v16 = v3;
  v14(v13 + v12, v15, v3);
  uint64_t v17 = sub_1A8D08F00(0, (void (*)())sub_1A8D10B2C, v13);
  swift_release();
  os_log_type_t v18 = v23;
  v22(v23, v25, v16);
  uint64_t v19 = swift_allocObject();
  v14(v19 + v12, v18, v16);
  aBlock[4] = sub_1A8D10B6C;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A8C83048;
  aBlock[3] = &block_descriptor_83;
  id v20 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v17, sel_gmOptInToggleWithCompletion_, v20);
  swift_unknownObjectRelease();
  _Block_release(v20);
  return swift_unknownObjectRelease();
}

uint64_t sub_1A8D0DD30(char a1, void *a2)
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A8D59A80();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EAEE0);
  id v5 = a2;
  uint64_t v6 = sub_1A8D59A60();
  os_log_type_t v7 = sub_1A8D59F00();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v14 = v9;
    *(_DWORD *)uint64_t v8 = 67109378;
    sub_1A8D59FE0();
    *(_WORD *)(v8 + 8) = 2080;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9748);
    uint64_t v10 = sub_1A8D59FC0();
    sub_1A8C90120(v10, v11, &v14);
    sub_1A8D59FE0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A8C7F000, v6, v7, "Received GM Opt-In toggle value from XPC. Value %{BOOL}d, error: %s", (uint8_t *)v8, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
    MEMORY[0x1AD0E6EB0](v8, -1, -1);

    if (a2)
    {
LABEL_5:
      uint64_t v14 = (uint64_t)v5;
      id v12 = v5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9740);
      return sub_1A8D59DD0();
    }
  }
  else
  {

    if (a2) {
      goto LABEL_5;
    }
  }
  LOBYTE(v14) = a1 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9740);
  return sub_1A8D59DE0();
}

uint64_t sub_1A8D0DF68(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9718);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v3, v6);
  uint64_t v23 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)&v22 - v9;
  unint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v25 = a1;
  id v22 = v11;
  v11((char *)&v22 - v9, a1, v3);
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  os_log_type_t v15 = v10;
  uint64_t v16 = v3;
  v14(v13 + v12, v15, v3);
  uint64_t v17 = sub_1A8D08F00(0, (void (*)())sub_1A8D10A3C, v13);
  swift_release();
  os_log_type_t v18 = v23;
  v22(v23, v25, v16);
  uint64_t v19 = swift_allocObject();
  v14(v19 + v12, v18, v16);
  aBlock[4] = sub_1A8D10A7C;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A8D0C908;
  aBlock[3] = &block_descriptor_74;
  id v20 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v17, sel_forcePostCFUWithCompletion_, v20);
  swift_unknownObjectRelease();
  _Block_release(v20);
  return swift_unknownObjectRelease();
}

uint64_t sub_1A8D0E3E8(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, const char *a5, uint64_t *a6)
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1A8D59A80();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EB5EAEE0);
  id v12 = a1;
  id v13 = a1;
  uint64_t v14 = sub_1A8D59A60();
  os_log_type_t v15 = sub_1A8D59EE0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v23 = v17;
    *(_DWORD *)uint64_t v16 = 136315394;
    sub_1A8C90120(a3, a4, &v23);
    sub_1A8D59FE0();
    *(_WORD *)(v16 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v18 = sub_1A8D5A440();
    sub_1A8C90120(v18, v19, &v23);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, v14, v15, a5, (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v17, -1, -1);
    MEMORY[0x1AD0E6EB0](v16, -1, -1);
  }
  else
  {
  }
  sub_1A8C8C7B0();
  uint64_t v20 = swift_allocError();
  *uint64_t v21 = 1;
  uint64_t v23 = v20;
  __swift_instantiateConcreteTypeFromMangledName(a6);
  return sub_1A8D59DD0();
}

uint64_t sub_1A8D0E63C(void *a1)
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5EAEE0);
  id v3 = a1;
  uint64_t v4 = sub_1A8D59A60();
  os_log_type_t v5 = sub_1A8D59F00();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9748);
    uint64_t v8 = sub_1A8D59FC0();
    sub_1A8C90120(v8, v9, &v12);
    sub_1A8D59FE0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A8C7F000, v4, v5, "Received response for forcePostCFU. Error: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
    MEMORY[0x1AD0E6EB0](v6, -1, -1);

    if (a1)
    {
LABEL_5:
      uint64_t v12 = (uint64_t)v3;
      id v10 = v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9718);
      return sub_1A8D59DD0();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9718);
  return sub_1A8D59DE0();
}

void sub_1A8D0E838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t), uint64_t a6)
{
  uint64_t v7 = v6;
  id v12 = sub_1A8C8B110();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a5;
  *(void *)(v13 + 24) = a6;
  uint64_t v40 = (void (*)())sub_1A8D11244;
  uint64_t v41 = (void *)v13;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v37 = 1107296256;
  uint64_t v38 = sub_1A8D08E98;
  uint64_t v39 = &block_descriptor_179;
  uint64_t v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v15 = objc_msgSend(v12, sel_remoteObjectProxyWithErrorHandler_, v14);
  _Block_release(v14);

  sub_1A8D5A010();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA8);
  if (swift_dynamicCast())
  {
    id v16 = sub_1A8C8B110();
    uint64_t v40 = sub_1A8D0EF44;
    uint64_t v41 = 0;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v37 = 1107296256;
    uint64_t v38 = sub_1A8C877CC;
    uint64_t v39 = &block_descriptor_182;
    uint64_t v17 = _Block_copy(&aBlock);
    objc_msgSend(v16, sel_setInterruptionHandler_, v17);
    _Block_release(v17);

    id v18 = sub_1A8C8B110();
    uint64_t v40 = sub_1A8C879B0;
    uint64_t v41 = 0;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v37 = 1107296256;
    uint64_t v38 = sub_1A8C877CC;
    uint64_t v39 = &block_descriptor_185;
    unint64_t v19 = _Block_copy(&aBlock);
    objc_msgSend(v18, sel_setInvalidationHandler_, v19);
    _Block_release(v19);

    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A8D59A80();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EB5EAEE0);
    uint64_t v21 = sub_1A8D59A60();
    os_log_type_t v22 = sub_1A8D59F00();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_1A8C7F000, v21, v22, "sending eligibility request ...", v23, 2u);
      MEMORY[0x1AD0E6EB0](v23, -1, -1);
    }

    uint64_t v24 = (void *)sub_1A8D59BC0();
    uint64_t v25 = (void *)sub_1A8D59BC0();
    id v26 = (void *)swift_allocObject();
    long long v26[2] = a1;
    v26[3] = a2;
    v26[4] = v7;
    void v26[5] = a5;
    v26[6] = a6;
    uint64_t v40 = (void (*)())sub_1A8C92BB4;
    uint64_t v41 = v26;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v37 = 1107296256;
    uint64_t v38 = sub_1A8C83048;
    uint64_t v39 = &block_descriptor_192;
    uint64_t v27 = _Block_copy(&aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    id v28 = v7;
    swift_release();
    objc_msgSend(v35, sel_getFeatureEligibilityFor_bundleID_completion_, v24, v25, v27);
    _Block_release(v27);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1A8D59A80();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EB5EAEE0);
    os_log_type_t v30 = sub_1A8D59A60();
    os_log_type_t v31 = sub_1A8D59EE0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_1A8C7F000, v30, v31, "Proxy object has the wrong type", v32, 2u);
      MEMORY[0x1AD0E6EB0](v32, -1, -1);
    }

    sub_1A8C8C7B0();
    uint64_t v33 = (void *)swift_allocError();
    unsigned char *v34 = 1;
    a5(v33, 1);
  }
}

uint64_t sub_1A8D0ED5C(void *a1, uint64_t (*a2)(void *, uint64_t))
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A8D59A80();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EAEE0);
  id v5 = a1;
  id v6 = a1;
  uint64_t v7 = sub_1A8D59A60();
  os_log_type_t v8 = sub_1A8D59EE0();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v14 = v10;
    *(_DWORD *)unint64_t v9 = 136446210;
    swift_getErrorValue();
    uint64_t v11 = sub_1A8D5A440();
    sub_1A8C90120(v11, v12, &v14);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, v7, v8, "Cannot get remote proxy object: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
  }
  else
  {
  }
  return a2(a1, 1);
}

void sub_1A8D0EF44()
{
}

void sub_1A8D0EF64(void *a1, void (*a2)(void *, uint64_t))
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A8D59A80();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EAEE0);
  id v5 = a1;
  id v6 = a1;
  uint64_t v7 = sub_1A8D59A60();
  os_log_type_t v8 = sub_1A8D59EE0();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)unint64_t v9 = 136315138;
    swift_getErrorValue();
    uint64_t v11 = sub_1A8D5A440();
    sub_1A8C90120(v11, v12, &v15);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, v7, v8, "remote proxy error [geoclassification request]: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
  }
  else
  {
  }
  sub_1A8C8C7B0();
  uint64_t v13 = (void *)swift_allocError();
  *uint64_t v14 = 1;
  a2(v13, 1);
}

void sub_1A8D0F178(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_1A8D0F204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(void, void *), uint64_t a7)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a6;
  *(void *)(v12 + 24) = a7;
  swift_retain();
  id v13 = sub_1A8C8B110();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1A8D11238;
  *(void *)(v14 + 24) = v12;
  uint64_t v42 = (void (*)())sub_1A8D11244;
  unint64_t v43 = (void *)v14;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v39 = 1107296256;
  uint64_t v40 = sub_1A8D08E98;
  uint64_t v41 = &block_descriptor_159;
  uint64_t v15 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v16 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v15);
  _Block_release(v15);

  sub_1A8D5A010();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA8);
  if (swift_dynamicCast())
  {
    id v17 = sub_1A8C8B110();
    uint64_t v42 = sub_1A8D0EF44;
    unint64_t v43 = 0;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v39 = 1107296256;
    uint64_t v40 = sub_1A8C877CC;
    uint64_t v41 = &block_descriptor_162;
    id v18 = _Block_copy(&aBlock);
    objc_msgSend(v17, sel_setInterruptionHandler_, v18);
    _Block_release(v18);

    id v19 = sub_1A8C8B110();
    uint64_t v42 = sub_1A8C879B0;
    unint64_t v43 = 0;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v39 = 1107296256;
    uint64_t v40 = sub_1A8C877CC;
    uint64_t v41 = &block_descriptor_165;
    uint64_t v20 = _Block_copy(&aBlock);
    objc_msgSend(v19, sel_setInvalidationHandler_, v20);
    _Block_release(v20);

    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1A8D59A80();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB5EAEE0);
    os_log_type_t v22 = sub_1A8D59A60();
    os_log_type_t v23 = sub_1A8D59F00();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_1A8C7F000, v22, v23, "sending eligibility request ...", v24, 2u);
      MEMORY[0x1AD0E6EB0](v24, -1, -1);
    }

    uint64_t v25 = (void *)sub_1A8D59BC0();
    id v26 = (void *)sub_1A8D59BC0();
    uint64_t v27 = (void *)swift_allocObject();
    v27[2] = a1;
    v27[3] = a2;
    v27[4] = a5;
    v27[5] = sub_1A8D11238;
    v27[6] = v12;
    uint64_t v42 = (void (*)())sub_1A8C92BB4;
    unint64_t v43 = v27;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v39 = 1107296256;
    uint64_t v40 = sub_1A8C83048;
    uint64_t v41 = &block_descriptor_172;
    id v28 = _Block_copy(&aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    id v29 = a5;
    swift_release();
    objc_msgSend(v37, sel_getFeatureEligibilityFor_bundleID_completion_, v25, v26, v28);
    _Block_release(v28);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1A8D59A80();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EB5EAEE0);
    os_log_type_t v31 = sub_1A8D59A60();
    os_log_type_t v32 = sub_1A8D59EE0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl(&dword_1A8C7F000, v31, v32, "Proxy object has the wrong type", v33, 2u);
      MEMORY[0x1AD0E6EB0](v33, -1, -1);
    }

    sub_1A8C8C7B0();
    uint64_t v34 = (void *)swift_allocError();
    *uint64_t v35 = 1;
    id v36 = v34;
    a6(0, v34);

    swift_release();
  }
}

void sub_1A8D0F784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, void *a8, const void *a9)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a9;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1A8D0FD7C;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1A8D0FD84;
  *(void *)(v14 + 24) = v13;
  _Block_copy(a9);
  swift_retain();
  swift_retain();
  id v26 = a8;
  uint64_t v27 = sub_1A8D08F00(0, (void (*)())sub_1A8D0FD90, v14);
  swift_release();
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1A8D59A80();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EB5EAEE0);
  id v16 = sub_1A8D59A60();
  os_log_type_t v17 = sub_1A8D59F00();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    aBlock[0] = v19;
    *(_DWORD *)id v18 = 136315138;
    void aBlock[6] = sub_1A8C90120(6581865, 0xE300000000000000, aBlock);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v16, v17, "Sending geoclassification request to %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v19, -1, -1);
    MEMORY[0x1AD0E6EB0](v18, -1, -1);
  }

  uint64_t v20 = (void *)sub_1A8D59BC0();
  uint64_t v21 = (void *)sub_1A8D59BC0();
  os_log_type_t v22 = (void *)sub_1A8D59BC0();
  os_log_type_t v23 = (void *)swift_allocObject();
  void v23[2] = v26;
  void v23[3] = a1;
  uint64_t v23[4] = a2;
  v23[5] = a3;
  v23[6] = a4;
  v23[7] = sub_1A8D0FD84;
  v23[8] = v13;
  aBlock[4] = (uint64_t)sub_1A8D0FD9C;
  aBlock[5] = (uint64_t)v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A8C93908;
  aBlock[3] = (uint64_t)&block_descriptor_11;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  id v25 = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v27, sel_requestGeoClassificationFor_bundleID_altDSID_ignoreCache_completion_, v20, v21, v22, a7 & 1, v24);
  _Block_release(v24);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
}

uint64_t sub_1A8D0FD44()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1A8D0FD7C(uint64_t a1, char a2, uint64_t a3)
{
  sub_1A8D14BD0(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_1A8D0FD84(char *a1, char a2)
{
  sub_1A8D14A30(a1, a2 & 1, *(void (**)(uint64_t, uint64_t, char *))(v2 + 16));
}

void sub_1A8D0FD90(void *a1)
{
  sub_1A8D0EF64(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

void sub_1A8D0FDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a9;
  *(void *)(v15 + 24) = a10;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1A8D11234;
  *(void *)(v16 + 24) = v15;
  swift_retain();
  uint64_t v32 = v15;
  swift_retain();
  id v28 = a8;
  uint64_t v29 = a3;
  os_log_type_t v31 = sub_1A8D08F00(0, (void (*)())sub_1A8D11240, v16);
  swift_release();
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1A8D59A80();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EB5EAEE0);
  id v18 = sub_1A8D59A60();
  os_log_type_t v19 = sub_1A8D59F00();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    aBlock[0] = v21;
    *(_DWORD *)uint64_t v20 = 136315138;
    void aBlock[6] = sub_1A8C90120(6581865, 0xE300000000000000, aBlock);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v18, v19, "Sending geoclassification request to %s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v21, -1, -1);
    MEMORY[0x1AD0E6EB0](v20, -1, -1);
  }

  os_log_type_t v22 = (void *)sub_1A8D59BC0();
  os_log_type_t v23 = (void *)sub_1A8D59BC0();
  uint64_t v24 = (void *)sub_1A8D59BC0();
  id v25 = (void *)swift_allocObject();
  _OWORD v25[2] = v28;
  v25[3] = a1;
  v25[4] = a2;
  uint64_t v25[5] = v29;
  v25[6] = a4;
  v25[7] = sub_1A8D11234;
  v25[8] = v32;
  aBlock[4] = (uint64_t)sub_1A8D0FD9C;
  aBlock[5] = (uint64_t)v25;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A8C93908;
  aBlock[3] = (uint64_t)&block_descriptor_148;
  id v26 = _Block_copy(aBlock);
  swift_retain();
  id v27 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v31, sel_requestGeoClassificationFor_bundleID_altDSID_ignoreCache_completion_, v22, v23, v24, a7 & 1, v26);
  _Block_release(v26);
  swift_release();
  swift_unknownObjectRelease();
}

void sub_1A8D102F4(void *a1, void *a2, void (*a3)(void, void))
{
  if (a2)
  {
    uint64_t v5 = qword_1EB5EAEF8;
    id v6 = a2;
    if (v5 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1A8D59A80();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB5EAEE0);
    id v8 = v6;
    unint64_t v9 = sub_1A8D59A60();
    os_log_type_t v10 = sub_1A8D59EE0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v41 = a3;
      uint64_t v11 = swift_slowAlloc();
      uint64_t v39 = (void *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v43 = v40;
      *(_DWORD *)uint64_t v11 = 138412546;
      os_log_t log = v9;
      id v12 = v8;
      sub_1A8D59FE0();
      *uint64_t v39 = a2;

      *(_WORD *)(v11 + 12) = 2080;
      id v13 = objc_msgSend(v12, sel_userInfo);
      sub_1A8D59B30();

      uint64_t v14 = sub_1A8D59B40();
      unint64_t v16 = v15;
      swift_bridgeObjectRelease();
      sub_1A8C90120(v14, v16, &v43);
      sub_1A8D59FE0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A8C7F000, log, v10, "Received error from daemon: %@, %s", (uint8_t *)v11, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v39, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v40, -1, -1);
      uint64_t v17 = v11;
      a3 = v41;
      MEMORY[0x1AD0E6EB0](v17, -1, -1);
    }
    else
    {
    }
    id v29 = v8;
    uint64_t v30 = a2;
    uint64_t v31 = 1;
LABEL_22:
    a3(v30, v31);

    return;
  }
  if (a1)
  {
    uint64_t v19 = qword_1EB5EAEF8;
    id v20 = a1;
    if (v19 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1A8D59A80();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB5EAEE0);
    id v22 = v20;
    os_log_type_t v23 = sub_1A8D59A60();
    os_log_type_t v24 = sub_1A8D59F00();
    if (os_log_type_enabled(v23, v24))
    {
      id v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = a3;
      id v26 = (void *)swift_slowAlloc();
      *(_DWORD *)id v25 = 138412290;
      uint64_t v43 = (uint64_t)v22;
      id v27 = v22;
      sub_1A8D59FE0();
      *id v26 = a1;

      _os_log_impl(&dword_1A8C7F000, v23, v24, "received geoclassification response: %@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      id v28 = v26;
      a3 = v42;
      MEMORY[0x1AD0E6EB0](v28, -1, -1);
      MEMORY[0x1AD0E6EB0](v25, -1, -1);
    }
    else
    {
    }
    id v29 = v22;
    uint64_t v30 = a1;
    uint64_t v31 = 0;
    goto LABEL_22;
  }
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1A8D59A80();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EB5EAEE0);
  uint64_t v33 = sub_1A8D59A60();
  os_log_type_t v34 = sub_1A8D59EE0();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl(&dword_1A8C7F000, v33, v34, "Receivved no error and no geoclassification", v35, 2u);
    MEMORY[0x1AD0E6EB0](v35, -1, -1);
  }

  sub_1A8C8C7B0();
  id v36 = (void *)swift_allocError();
  *uint64_t v37 = 7;
  a3(v36, 1);
}

uint64_t sub_1A8D10890()
{
  return objectdestroy_49Tm(&qword_1EB5E9718);
}

uint64_t sub_1A8D1089C(void *a1)
{
  return sub_1A8D10978(a1, &qword_1EB5E9718, 0xD000000000000012, 0x80000001A8D66700, "Remote proxy error in %s: %s");
}

uint64_t sub_1A8D108C8()
{
  return objectdestroy_49Tm(&qword_1EB5E9718);
}

uint64_t sub_1A8D108D8(void *a1)
{
  return sub_1A8D0CE4C(a1);
}

uint64_t sub_1A8D10940()
{
  return objectdestroy_49Tm(&qword_1EB5E9740);
}

uint64_t sub_1A8D1094C(void *a1)
{
  return sub_1A8D10978(a1, &qword_1EB5E9740, 0xD00000000000001BLL, 0x80000001A8D66720, "Remote proxy error in %s: %s");
}

uint64_t sub_1A8D10978(void *a1, uint64_t *a2, uint64_t a3, unint64_t a4, const char *a5)
{
  uint64_t v11 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  return sub_1A8D0E3E8(a1, v5 + ((*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a3, a4, a5, a2);
}

uint64_t sub_1A8D10A0C()
{
  return objectdestroy_49Tm(&qword_1EB5E9740);
}

uint64_t sub_1A8D10A18(uint64_t a1, uint64_t a2)
{
  return sub_1A8D10E98(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A8D0D364);
}

uint64_t sub_1A8D10A30()
{
  return objectdestroy_49Tm(&qword_1EB5E9718);
}

uint64_t sub_1A8D10A3C(void *a1)
{
  return sub_1A8D10978(a1, &qword_1EB5E9718, 0x736F506563726F66, 0xEE00292855464374, "Remote proxy error in %s: %s");
}

uint64_t sub_1A8D10A70()
{
  return objectdestroy_49Tm(&qword_1EB5E9718);
}

uint64_t sub_1A8D10A7C(uint64_t a1)
{
  return sub_1A8D10A9C(a1, &qword_1EB5E9718, (uint64_t (*)(uint64_t, uint64_t))sub_1A8D0E63C);
}

uint64_t sub_1A8D10A9C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a3(a1, v6);
}

uint64_t sub_1A8D10B20()
{
  return objectdestroy_49Tm(&qword_1EB5E9740);
}

uint64_t sub_1A8D10B2C(void *a1)
{
  return sub_1A8D10978(a1, &qword_1EB5E9740, 0x546E4974704F6D67, 0xEF2928656C67676FLL, "Remote proxy error in %s: %s");
}

uint64_t sub_1A8D10B60()
{
  return objectdestroy_49Tm(&qword_1EB5E9740);
}

uint64_t sub_1A8D10B6C(uint64_t a1, uint64_t a2)
{
  return sub_1A8D10E98(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A8D0DD30);
}

uint64_t sub_1A8D10B84()
{
  return objectdestroy_49Tm(&qword_1EB5E9718);
}

uint64_t sub_1A8D10B90(void *a1)
{
  return sub_1A8D10978(a1, &qword_1EB5E9718, 0xD000000000000016, 0x80000001A8D66740, "Remote proxy error in %s: %s");
}

uint64_t sub_1A8D10BBC()
{
  return objectdestroy_49Tm(&qword_1EB5E9718);
}

uint64_t sub_1A8D10BC8()
{
  return objectdestroy_49Tm(&qword_1E979F368);
}

uint64_t sub_1A8D10BD4(void *a1)
{
  return sub_1A8D10978(a1, &qword_1E979F368, 0xD000000000000016, 0x80000001A8D66760, "Remote proxy error in %s: %s");
}

uint64_t sub_1A8D10C00()
{
  return objectdestroy_49Tm(&qword_1E979F368);
}

uint64_t sub_1A8D10C0C(void *a1, void *a2)
{
  return sub_1A8D10DA8(a1, a2, &qword_1E979F368, 0xD000000000000016, 0x80000001A8D66760);
}

void sub_1A8D10C30(uint64_t a1)
{
  sub_1A8D0AE14(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1A8D10C3C()
{
  return objectdestroy_49Tm(&qword_1E979F380);
}

uint64_t sub_1A8D10C48(void *a1)
{
  return sub_1A8D10978(a1, &qword_1E979F380, 0xD000000000000025, 0x80000001A8D667C0, "Remote proxy error in %s: %s");
}

uint64_t sub_1A8D10C74()
{
  return objectdestroy_49Tm(&qword_1E979F380);
}

uint64_t sub_1A8D10C80(uint64_t a1, uint64_t a2)
{
  return sub_1A8D10CA0(a1, a2, &qword_1E979F380, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A8D0B290);
}

uint64_t sub_1A8D10CA0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  uint64_t v8 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a4(a1, a2, v8);
}

void sub_1A8D10D34(uint64_t a1)
{
  sub_1A8D0A4E0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1A8D10D40()
{
  return objectdestroy_49Tm(&qword_1E979F390);
}

uint64_t sub_1A8D10D4C(void *a1)
{
  return sub_1A8D10978(a1, &qword_1E979F390, 0xD00000000000001CLL, 0x80000001A8D66840, "Remote proxy error in %s: %s");
}

uint64_t sub_1A8D10D78()
{
  return objectdestroy_49Tm(&qword_1E979F390);
}

uint64_t sub_1A8D10D84(void *a1, void *a2)
{
  return sub_1A8D10DA8(a1, a2, &qword_1E979F390, 0xD00000000000001CLL, 0x80000001A8D66840);
}

uint64_t sub_1A8D10DA8(void *a1, void *a2, uint64_t *a3, uint64_t a4, unint64_t a5)
{
  uint64_t v11 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  return sub_1A8D0BE8C(a1, a2, v5 + ((*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a4, a5, a3);
}

uint64_t sub_1A8D10E3C()
{
  return objectdestroy_49Tm(&qword_1EB5E9740);
}

uint64_t sub_1A8D10E48(void *a1)
{
  return sub_1A8D10978(a1, &qword_1EB5E9740, 0xD000000000000017, 0x80000001A8D66860, "remote proxy error in %s: %s");
}

uint64_t sub_1A8D10E74()
{
  return objectdestroy_49Tm(&qword_1EB5E9740);
}

uint64_t sub_1A8D10E80(uint64_t a1, uint64_t a2)
{
  return sub_1A8D10E98(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A8D09EAC);
}

uint64_t sub_1A8D10E98(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9740) - 8);
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a3(a1, a2, v7);
}

uint64_t sub_1A8D10F30()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t objectdestroy_10Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_1A8D10FBC(void *a1, void *a2)
{
  sub_1A8D102F4(a1, a2, *(void (**)(void, void))(v2 + 56));
}

uint64_t sub_1A8D10FCC()
{
  return objectdestroy_49Tm((uint64_t *)&unk_1EB5EAD18);
}

uint64_t sub_1A8D10FD8(void *a1)
{
  return sub_1A8D0ED5C(a1, *(uint64_t (**)(void *, uint64_t))(v1 + 16));
}

uint64_t sub_1A8D10FF4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A8D1103C(uint64_t a1)
{
  return sub_1A8D092C0(a1);
}

void sub_1A8D11044(uint64_t a1)
{
  sub_1A8D07788(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (uint64_t)&unk_1EFF576B0, (uint64_t)sub_1A8D1109C, (uint64_t)&block_descriptor_222, (SEL *)&selRef_waitlistStatusWithFeatureID_completion_);
}

uint64_t sub_1A8D11090()
{
  return objectdestroy_49Tm(&qword_1E979EA48);
}

uint64_t sub_1A8D1109C(uint64_t a1, uint64_t a2)
{
  return sub_1A8D10CA0(a1, a2, &qword_1E979EA48, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A8CBCE90);
}

uint64_t sub_1A8D110BC()
{
  return objectdestroy_49Tm(&qword_1E979F3A0);
}

uint64_t sub_1A8D110C8(uint64_t a1)
{
  return sub_1A8D10A9C(a1, &qword_1E979F3A0, (uint64_t (*)(uint64_t, uint64_t))sub_1A8D09440);
}

void sub_1A8D110E8(uint64_t a1)
{
  sub_1A8D07788(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (uint64_t)&unk_1EFF57728, (uint64_t)sub_1A8D1109C, (uint64_t)&block_descriptor_235, (SEL *)&selRef_signupForWaitlistWithFeatureID_completion_);
}

uint64_t sub_1A8D11134()
{
  return objectdestroy_49Tm(&qword_1E979EA48);
}

id sub_1A8D11248(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAC48);
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAC40);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v8, v10);
  id v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v14);
  unint64_t v16 = (id *)((char *)v29 - v15);
  uint64_t v17 = *(void *)(v2 + 24);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 16));
  sub_1A8D124FC(v2, (uint64_t)v7);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 16));
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1A8C8DE74((uint64_t)v7, &qword_1EB5EAC48);
    if (qword_1EB5EAB38 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1A8D59A80();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EB5EAB48);
    uint64_t v19 = sub_1A8D59A60();
    os_log_type_t v20 = sub_1A8D59F00();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_1A8C7F000, v19, v20, "No cache for cloud.llm found.", v21, 2u);
      MEMORY[0x1AD0E6EB0](v21, -1, -1);
    }
  }
  else
  {
    sub_1A8D12CB4((uint64_t)v7, (uint64_t)v13);
    sub_1A8D12CB4((uint64_t)v13, (uint64_t)v16);
    if (sub_1A8CEAB38(0, 0, 0, 0, a1 & 1))
    {
      id v22 = *v16;
      sub_1A8C8DE74((uint64_t)v16, &qword_1EB5EAC40);
      return v22;
    }
    if (qword_1EB5EAB38 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1A8D59A80();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EB5EAB48);
    id v25 = sub_1A8D59A60();
    os_log_type_t v26 = sub_1A8D59EE0();
    if (os_log_type_enabled(v25, v26))
    {
      id v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v30 = v28;
      *(_DWORD *)id v27 = 136315138;
      v29[1] = sub_1A8C90120(0x6C6C2E64756F6C63, 0xE90000000000006DLL, &v30);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v25, v26, "Cache for %s is not valid.", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v28, -1, -1);
      MEMORY[0x1AD0E6EB0](v27, -1, -1);
    }

    sub_1A8C8DE74((uint64_t)v16, &qword_1EB5EAC40);
  }
  return 0;
}

uint64_t sub_1A8D1181C(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAC40);
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char **)((char *)v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)&a1[OBJC_IVAR___CloudFeature_featureID];
  unint64_t v8 = *(void *)&a1[OBJC_IVAR___CloudFeature_featureID + 8];
  BOOL v10 = v9 == 0x6C6C2E64756F6C63 && v8 == 0xE90000000000006DLL;
  if (v10 || (sub_1A8D5A390() & 1) != 0)
  {
    uint64_t v11 = (uint64_t)&a1[OBJC_IVAR___CloudFeature_ttl];
    swift_beginAccess();
    uint64_t v12 = (uint64_t)v7 + v4[11];
    sub_1A8C8D028(v11, v12);
    type metadata accessor for SystemProperties();
    id v13 = a1;
    swift_initStaticObject();
    uint64_t v14 = sub_1A8C8E620();
    unint64_t v16 = v15;
    sub_1A8D596D0();
    *uint64_t v7 = v13;
    uint64_t v17 = (char **)((char *)v7 + v4[13]);
    *uint64_t v17 = v14;
    v17[1] = v16;
    uint64_t v18 = (char **)((char *)v7 + v4[14]);
    sub_1A8D59530();
    *uint64_t v18 = 0;
    v18[1] = 0;
    swift_allocObject();
    uint64_t v19 = sub_1A8D59520();
    sub_1A8D12D1C(&qword_1EB5E9888);
    uint64_t v20 = sub_1A8D59510();
    unint64_t v22 = v21;
    uint64_t v80 = v13;
    uint64_t v84 = v19;
    uint64_t v23 = *(void *)(v2 + 24);
    uint64_t v24 = *(os_unfair_lock_s **)(v23 + 16);
    unint64_t v25 = v8;
    uint64_t v26 = v9;
    uint64_t v27 = v20;
    sub_1A8CA17BC(v20, v21);
    os_unfair_lock_lock(v24);
    uint64_t v28 = *(void **)(v2 + 16);
    id v29 = (void *)sub_1A8D595B0();
    uint64_t v81 = v26;
    unint64_t v30 = v25;
    uint64_t v31 = (void *)sub_1A8D59BC0();
    objc_msgSend(v28, sel_setObject_forKey_, v29, v31);

    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 16));
    uint64_t v82 = v27;
    unint64_t v83 = v22;
    sub_1A8C93C98(v27, v22);
    uint64_t v32 = sub_1A8D596F0();
    uint64_t v33 = *(void *)(v32 - 8);
    uint64_t v34 = *(void *)(v33 + 64);
    MEMORY[0x1F4188790](v32, v35);
    id v36 = (char *)v77 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    MEMORY[0x1F4188790](v37 - 8, v38);
    uint64_t v40 = (char *)v77 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A8C8D028(v12, (uint64_t)v40);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v40, 1, v32) == 1)
    {
      sub_1A8C8DE74((uint64_t)v40, &qword_1EB5EACF0);
      if (qword_1EB5EAB38 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_1A8D59A80();
      __swift_project_value_buffer(v41, (uint64_t)qword_1EB5EAB48);
      uint64_t v42 = v80;
      uint64_t v43 = sub_1A8D59A60();
      os_log_type_t v44 = sub_1A8D59F00();
      BOOL v45 = os_log_type_enabled(v43, v44);
      uint64_t v46 = v81;
      if (v45)
      {
        uint64_t v47 = swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        v87[0] = v48;
        *(_DWORD *)uint64_t v47 = 136446466;
        swift_bridgeObjectRetain();
        uint64_t v86 = sub_1A8C90120(v46, v30, v87);
        sub_1A8D59FE0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 12) = 1024;
        uint64_t v49 = &v42[OBJC_IVAR___CloudFeature_canUse];
        swift_beginAccess();
        int v50 = *v49;

        int v85 = v50;
        sub_1A8D59FE0();

        _os_log_impl(&dword_1A8C7F000, v43, v44, "Updating cache for %{public}s, cache-ttl: nil, canUse: %{BOOL}d", (uint8_t *)v47, 0x12u);
        uint64_t v51 = 1;
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v48, -1, -1);
        MEMORY[0x1AD0E6EB0](v47, -1, -1);
        sub_1A8C93C98(v82, v83);

        swift_release();
        sub_1A8C8DE74((uint64_t)v7, &qword_1EB5EAC40);
      }
      else
      {
        sub_1A8C93C98(v82, v83);

        swift_release();
        sub_1A8C8DE74((uint64_t)v7, &qword_1EB5EAC40);
        return 1;
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))((char *)v77 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), v40, v32);
      if (qword_1EB5EAB38 != -1) {
        swift_once();
      }
      uint64_t v58 = sub_1A8D59A80();
      uint64_t v59 = __swift_project_value_buffer(v58, (uint64_t)qword_1EB5EAB48);
      uint64_t v79 = v77;
      MEMORY[0x1F4188790](v59, v60);
      unint64_t v61 = (char *)v77 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v61, v61, v32);
      unint64_t v62 = v80;
      os_log_type_t v63 = sub_1A8D59A60();
      os_log_type_t v64 = sub_1A8D59F00();
      LODWORD(v80) = v64;
      BOOL v65 = os_log_type_enabled(v63, v64);
      uint64_t v66 = v81;
      if (v65)
      {
        uint64_t v67 = swift_slowAlloc();
        uint64_t v78 = v36;
        uint64_t v68 = v67;
        v87[0] = swift_slowAlloc();
        v77[1] = (os_log_t)v77;
        uint64_t v69 = v87[0];
        *(_DWORD *)uint64_t v68 = 136446722;
        v77[0] = v63;
        swift_bridgeObjectRetain();
        uint64_t v86 = sub_1A8C90120(v66, v30, v87);
        sub_1A8D59FE0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v68 + 12) = 2082;
        sub_1A8D12710();
        uint64_t v70 = sub_1A8D5A360();
        uint64_t v86 = sub_1A8C90120(v70, v71, v87);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease();
        char v72 = *(void (**)(char *, uint64_t))(v33 + 8);
        v72(v61, v32);
        *(_WORD *)(v68 + 22) = 1024;
        uint64_t v73 = &v62[OBJC_IVAR___CloudFeature_canUse];
        swift_beginAccess();
        LODWORD(v73) = *v73;

        int v85 = (int)v73;
        sub_1A8D59FE0();

        os_log_t v74 = v77[0];
        _os_log_impl(&dword_1A8C7F000, v77[0], (os_log_type_t)v80, "Updating cache for %{public}s, cache-ttl: %{public}s, canUse: %{BOOL}d", (uint8_t *)v68, 0x1Cu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v69, -1, -1);
        MEMORY[0x1AD0E6EB0](v68, -1, -1);
        sub_1A8C93C98(v82, v83);

        swift_release();
        v72(v78, v32);
      }
      else
      {
        sub_1A8C93C98(v82, v83);

        swift_release();
        uint64_t v76 = *(void (**)(char *, uint64_t))(v33 + 8);
        v76(v61, v32);

        v76(v36, v32);
      }
      sub_1A8C8DE74((uint64_t)v7, &qword_1EB5EAC40);
      return 1;
    }
  }
  else
  {
    if (qword_1EB5EAB38 != -1) {
      swift_once();
    }
    uint64_t v52 = sub_1A8D59A80();
    __swift_project_value_buffer(v52, (uint64_t)qword_1EB5EAB48);
    id v53 = a1;
    id v54 = sub_1A8D59A60();
    os_log_type_t v55 = sub_1A8D59EE0();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      v88[0] = v57;
      *(_DWORD *)uint64_t v56 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v86 = sub_1A8C90120(v9, v8, v88);
      sub_1A8D59FE0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A8C7F000, v54, v55, "Attempted to save feature %{public}s to GM feature cache.", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v57, -1, -1);
      MEMORY[0x1AD0E6EB0](v56, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  return v51;
}

_DWORD *sub_1A8D12288()
{
  id v0 = sub_1A8D1275C();
  type metadata accessor for GMFeatureCache();
  uint64_t v1 = swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v2 = swift_allocObject();
  unint64_t result = (_DWORD *)swift_slowAlloc();
  *(void *)(v2 + 16) = result;
  *unint64_t result = 0;
  *(void *)(v1 + 16) = v0;
  *(void *)(v1 + 24) = v2;
  qword_1EB5ECCE0 = v1;
  return result;
}

void sub_1A8D12300()
{
  id v0 = (char *)sub_1A8D11248(1);
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    MEMORY[0x1F4188790](v2 - 8, v3);
    uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A8D59600();
    uint64_t v6 = sub_1A8D596F0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
    uint64_t v7 = (uint64_t)&v1[OBJC_IVAR___CloudFeature_ttl];
    swift_beginAccess();
    sub_1A8C83C30((uint64_t)v5, v7);
    swift_endAccess();
    sub_1A8D1181C(v1);
  }
  else
  {
    if (qword_1EB5EAB38 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1A8D59A80();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EB5EAB48);
    uint64_t v11 = sub_1A8D59A60();
    os_log_type_t v9 = sub_1A8D59F00();
    if (os_log_type_enabled(v11, v9))
    {
      BOOL v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v10 = 0;
      _os_log_impl(&dword_1A8C7F000, v11, v9, "Attempted to expire GM feature cache but no cached object was found.", v10, 2u);
      MEMORY[0x1AD0E6EB0](v10, -1, -1);
    }
  }
}

uint64_t sub_1A8D124FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = (void *)sub_1A8D59BC0();
  id v6 = objc_msgSend(v4, sel_dataForKey_, v5);

  if (v6)
  {
    uint64_t v7 = sub_1A8D595D0();
    unint64_t v9 = v8;

    sub_1A8D59500();
    swift_allocObject();
    sub_1A8D594F0();
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAC40);
    sub_1A8D12D1C((unint64_t *)&qword_1EB5EA2C8);
    sub_1A8D594E0();
    if (v2)
    {
      swift_release();
      return sub_1A8C93C98(v7, v9);
    }
    else
    {
      sub_1A8C93C98(v7, v9);
      swift_release();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a2, 0, 1, v10);
    }
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAC40);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
}

uint64_t sub_1A8D126AC()
{
  swift_release();
  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t type metadata accessor for GMFeatureCache()
{
  return self;
}

unint64_t sub_1A8D12710()
{
  unint64_t result = qword_1EB5E92D0;
  if (!qword_1EB5E92D0)
  {
    sub_1A8D596F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E92D0);
  }
  return result;
}

id sub_1A8D1275C()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v1 = (void *)sub_1A8D59BC0();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2) {
    return v2;
  }
  if (qword_1EB5EAB38 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A8D59A80();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EAB48);
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59F00();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v10 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_1A8C90120(0xD00000000000002BLL, 0x80000001A8D66A40, &v10);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v5, v6, "Unable to create user defaults with suiteID %s. Will use standard suite.", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }

  id v9 = objc_msgSend(self, sel_standardUserDefaults);
  return v9;
}

void sub_1A8D12964()
{
  if (qword_1EB5EAB38 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1A8D59A80();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB5EAB48);
  uint64_t v1 = sub_1A8D59A60();
  os_log_type_t v2 = sub_1A8D59F00();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v19 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    uint64_t v18 = sub_1A8C90120(0xD000000000000027, 0x80000001A8D66A10, &v19);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v1, v2, "%s did not find existing feature, will stub feature object from scratch.", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v4, -1, -1);
    MEMORY[0x1AD0E6EB0](v3, -1, -1);
  }

  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
  MEMORY[0x1F4188790](v5 - 8, v7);
  unint64_t v8 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = sub_1A8D596F0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  id v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8D596E0();
  sub_1A8D59630();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v14 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v10 + 56))((char *)&v18 - v8, 0, 1, v9);
  MEMORY[0x1F4188790](v14, v15);
  sub_1A8C8D028((uint64_t)&v18 - v8, (uint64_t)&v18 - v8);
  id v16 = objc_allocWithZone((Class)type metadata accessor for CloudFeature());
  uint64_t v17 = (char *)sub_1A8CB79B4(0x6C6C2E64756F6C63, 0xE90000000000006DLL, 0, 0, 1, 0, 0, (uint64_t)&v18 - v8);
  sub_1A8C8DE74((uint64_t)&v18 - v8, &qword_1EB5EACF0);
  sub_1A8D1181C(v17);
}

uint64_t sub_1A8D12CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAC40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A8D12D1C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB5EAC40);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1A8D12D64()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v1 = (void *)sub_1A8D59BC0();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  qword_1EB5ECCD0 = (uint64_t)v2;
}

uint64_t sub_1A8D12DD4()
{
  if (qword_1EB5E9468 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_1EB5ECCD0;
  if (!qword_1EB5ECCD0)
  {
    long long v5 = 0u;
    long long v6 = 0u;
LABEL_12:
    sub_1A8CA2800((uint64_t)&v5);
    return 2;
  }
  uint64_t v1 = (void *)sub_1A8D59BC0();
  id v2 = objc_msgSend(v0, sel_valueForKey_, v1);

  if (v2)
  {
    sub_1A8D5A010();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_1A8CA2798((uint64_t)v4, (uint64_t)&v5);
  if (!*((void *)&v6 + 1)) {
    goto LABEL_12;
  }
  if (swift_dynamicCast()) {
    return LOBYTE(v4[0]);
  }
  else {
    return 2;
  }
}

void sub_1A8D12F00(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v8 = a4;
  v7(a2, a3, a4);
  swift_release();
}

uint64_t static CSFFeatureManager.expireCache(defaults:domain:)(unint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAC48);
  MEMORY[0x1F4188790](v2 - 8, v3);
  long long v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAC40);
  int64_t v93 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (void **)((char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EB5EAEF8 != -1) {
LABEL_40:
  }
    swift_once();
  uint64_t v10 = sub_1A8D59A80();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB5EAEE0);
  uint64_t v11 = sub_1A8D59A60();
  os_log_type_t v12 = sub_1A8D59F00();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl(&dword_1A8C7F000, v11, v12, "Expiring existing features cache!", v13, 2u);
    MEMORY[0x1AD0E6EB0](v13, -1, -1);
  }

  uint64_t v14 = (void *)sub_1A8D59BC0();
  id v15 = objc_msgSend((id)a1, sel_persistentDomainForName_, v14);

  uint64_t v16 = MEMORY[0x1E4FBC840];
  int v85 = v9;
  if (v15)
  {
    a1 = sub_1A8D59B30();
  }
  else
  {
    a1 = sub_1A8C90A64(MEMORY[0x1E4FBC860]);
  }
  uint64_t v17 = *(void *)(a1 + 64);
  unint64_t v88 = a1 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v89 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v91 = v100;
  uint64_t v92 = (void **)&v98;
  uint64_t v87 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = v16 + 8;
  unint64_t v25 = v102;
  unint64_t v71 = a1;
  char v72 = v5;
  uint64_t v69 = v6;
  uint64_t v70 = v102;
  uint64_t v86 = v24;
  while (1)
  {
    if (v20)
    {
      unint64_t v26 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      int64_t v93 = v22;
      unint64_t v27 = v26 | (v22 << 6);
      goto LABEL_29;
    }
    BOOL v28 = __OFADD__(v22, 1);
    int64_t v29 = v22 + 1;
    if (v28)
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v29 >= v89) {
      goto LABEL_38;
    }
    unint64_t v30 = *(void *)(v88 + 8 * v29);
    if (!v30) {
      break;
    }
LABEL_28:
    unint64_t v20 = (v30 - 1) & v30;
    int64_t v93 = v29;
    unint64_t v27 = __clz(__rbit64(v30)) + (v29 << 6);
LABEL_29:
    uint64_t v32 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v27);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    sub_1A8C901F4(*(void *)(a1 + 56) + 32 * v27, (uint64_t)v25);
    *(void *)&long long v101 = v34;
    *((void *)&v101 + 1) = v33;
    long long v99 = v101;
    v100[0] = v102[0];
    v100[1] = v102[1];
    long long v97 = v101;
    uint64_t v9 = v92;
    sub_1A8C901F4((uint64_t)v91, (uint64_t)v92);
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      unint64_t v90 = v20;
      unint64_t v35 = a1;
      id v36 = v25;
      uint64_t v37 = (uint64_t)v5;
      uint64_t v38 = v6;
      uint64_t v40 = v95;
      unint64_t v39 = v96;
      sub_1A8D59500();
      swift_allocObject();
      sub_1A8D594F0();
      sub_1A8D13898();
      uint64_t v9 = v23;
      sub_1A8D594E0();
      if (v23)
      {
        swift_release();

        (*v87)(v37, 1, 1, v38);
        sub_1A8C93C98(v40, v39);
        sub_1A8C8DE74(v37, &qword_1EB5EAC48);
        uint64_t v23 = 0;
        uint64_t v6 = v38;
        long long v5 = (char *)v37;
        unint64_t v25 = v36;
        a1 = v35;
        unint64_t v20 = v90;
      }
      else
      {
        unint64_t v82 = v39;
        uint64_t v83 = v40;
        uint64_t v84 = 0;
        swift_release();
        (*v87)(v37, 0, 1, v38);
        uint64_t v41 = v85;
        sub_1A8C83BCC(v37, (uint64_t)v85, &qword_1EB5EAC40);
        uint64_t v42 = (char *)*v41;
        uint64_t v43 = (uint64_t *)((char *)*v41 + OBJC_IVAR___CloudFeature_featureID);
        uint64_t v44 = v43[1];
        uint64_t v79 = *v43;
        BOOL v45 = &v42[OBJC_IVAR___CloudFeature_canUse];
        swift_beginAccess();
        int v75 = *v45;
        uint64_t v46 = &v42[OBJC_IVAR___CloudFeature_limit];
        swift_beginAccess();
        uint64_t v78 = *(void *)v46;
        int v77 = v46[8];
        uint64_t v47 = &v42[OBJC_IVAR___CloudFeature_accessToken];
        swift_beginAccess();
        uint64_t v48 = *((void *)v47 + 1);
        uint64_t v76 = *(void *)v47;
        uint64_t v74 = v48;
        uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
        uint64_t v80 = &v68;
        MEMORY[0x1F4188790](v49 - 8, v50);
        uint64_t v52 = (char *)&v68 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
        swift_bridgeObjectRetain();
        uint64_t v81 = v42;
        swift_bridgeObjectRetain();
        sub_1A8D59600();
        uint64_t v53 = sub_1A8D596F0();
        id v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56);
        v54(v52, 0, 1, v53);
        Class v73 = (Class)type metadata accessor for CloudFeature();
        os_log_type_t v55 = objc_allocWithZone(v73);
        uint64_t v56 = &v55[OBJC_IVAR___CloudFeature_limit];
        *(void *)uint64_t v56 = 0;
        v56[8] = 1;
        uint64_t v57 = &v55[OBJC_IVAR___CloudFeature_accessToken];
        *uint64_t v57 = 0;
        v57[1] = 0;
        uint64_t v58 = (uint64_t)&v55[OBJC_IVAR___CloudFeature_ttl];
        v54(&v55[OBJC_IVAR___CloudFeature_ttl], 1, 1, v53);
        v55[OBJC_IVAR___CloudFeature_canUse] = v75;
        uint64_t v59 = &v55[OBJC_IVAR___CloudFeature_featureID];
        *uint64_t v59 = v79;
        v59[1] = v44;
        swift_beginAccess();
        *(void *)uint64_t v56 = v78;
        v56[8] = v77;
        swift_beginAccess();
        uint64_t v60 = v74;
        *uint64_t v57 = v76;
        v57[1] = v60;
        unint64_t v61 = v55;
        swift_bridgeObjectRelease();
        swift_beginAccess();
        sub_1A8CB958C((uint64_t)v52, v58);
        swift_endAccess();

        v94.receiver = v61;
        v94.super_class = v73;
        unint64_t v62 = (char *)objc_msgSendSuper2(&v94, sel_init);
        sub_1A8C8DE74((uint64_t)v52, &qword_1EB5EACF0);
        if (qword_1EB5EAB78 != -1) {
          swift_once();
        }
        uint64_t v9 = (void **)qword_1EB5EAB28;
        uint64_t v6 = v69;
        uint64_t v63 = (uint64_t)v85;
        os_log_type_t v64 = (uint64_t *)((char *)v85 + *(int *)(v69 + 56));
        uint64_t v65 = *v64;
        uint64_t v66 = v64[1];
        sub_1A8D59530();
        swift_allocObject();
        swift_bridgeObjectRetain();
        uint64_t v67 = sub_1A8D59520();
        sub_1A8CECA2C(v62, v67, v65, v66);

        swift_bridgeObjectRelease();
        swift_release();
        sub_1A8C93C98(v83, v82);

        sub_1A8C8DE74(v63, &qword_1EB5EAC40);
        a1 = v71;
        long long v5 = v72;
        unint64_t v25 = v70;
        uint64_t v23 = v84;
        unint64_t v20 = v90;
      }
    }
    uint64_t result = sub_1A8C8DE74((uint64_t)&v99, &qword_1EB5E9368);
    int64_t v22 = v93;
  }
  int64_t v31 = v29 + 1;
  if (v29 + 1 >= v89) {
    goto LABEL_38;
  }
  unint64_t v30 = *(void *)(v88 + 8 * v31);
  if (v30) {
    goto LABEL_27;
  }
  int64_t v31 = v29 + 2;
  if (v29 + 2 >= v89) {
    goto LABEL_38;
  }
  unint64_t v30 = *(void *)(v88 + 8 * v31);
  if (v30) {
    goto LABEL_27;
  }
  int64_t v31 = v29 + 3;
  if (v29 + 3 >= v89) {
    goto LABEL_38;
  }
  unint64_t v30 = *(void *)(v88 + 8 * v31);
  if (v30) {
    goto LABEL_27;
  }
  int64_t v31 = v29 + 4;
  if (v29 + 4 >= v89) {
    goto LABEL_38;
  }
  unint64_t v30 = *(void *)(v88 + 8 * v31);
  if (v30) {
    goto LABEL_27;
  }
  int64_t v31 = v29 + 5;
  if (v29 + 5 >= v89)
  {
LABEL_38:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  unint64_t v30 = *(void *)(v88 + 8 * v31);
  if (v30)
  {
LABEL_27:
    int64_t v29 = v31;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v29 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v29 >= v89) {
      goto LABEL_38;
    }
    unint64_t v30 = *(void *)(v88 + 8 * v29);
    ++v31;
    if (v30) {
      goto LABEL_28;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1A8D13898()
{
  unint64_t result = qword_1EB5EA2C8;
  if (!qword_1EB5EA2C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB5EAC40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5EA2C8);
  }
  return result;
}

void static CSFFeatureManager.requestFeature(id:completion:)(uint64_t a1, unint64_t a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  MEMORY[0x1F4188790](v10 - 8, v11);
  id v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1A8D59A80();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EB5EAEE0);
  swift_bridgeObjectRetain_n();
  id v15 = sub_1A8D59A60();
  os_log_type_t v16 = sub_1A8D59F00();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v34 = v13;
    uint64_t v35 = v5;
    uint64_t v18 = a4;
    uint64_t v19 = a3;
    unint64_t v20 = (uint8_t *)v17;
    uint64_t v21 = a1;
    uint64_t v22 = swift_slowAlloc();
    v37[0] = v22;
    *(_DWORD *)unint64_t v20 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)&v36[0] = sub_1A8C90120(v21, a2, v37);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v15, v16, "Checking feature with id: %s [swift]", v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v23 = v22;
    a1 = v21;
    MEMORY[0x1AD0E6EB0](v23, -1, -1);
    uint64_t v24 = v20;
    a3 = v19;
    a4 = v18;
    id v13 = v34;
    uint64_t v5 = v35;
    MEMORY[0x1AD0E6EB0](v24, -1, -1);

    if ((sub_1A8D328AC() & 1) == 0) {
      goto LABEL_10;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if ((sub_1A8D328AC() & 1) == 0) {
      goto LABEL_10;
    }
  }
  uint64_t v25 = sub_1A8D32CAC(a1, a2);
  id v26 = (id)v25;
  if (v25 || (id v26 = sub_1A8D33150(a1, a2)) != 0)
  {
    a3(v26, v25 != 0);
    sub_1A8C9292C(v26);
    return;
  }
LABEL_10:
  id v27 = sub_1A8D18DB0(a1, a2);
  if (v27)
  {
    BOOL v28 = v27;
    a3(v27, 0);
  }
  else
  {
    uint64_t v38 = &type metadata for FeatureFlag;
    unint64_t v39 = (_UNKNOWN **)sub_1A8C937E4();
    LOBYTE(v37[0]) = 0;
    sub_1A8D597C0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    int64_t v29 = (objc_class *)type metadata accessor for XPCCaller();
    id v30 = objc_msgSend(objc_allocWithZone(v29), sel_init);
    uint64_t v38 = (ValueMetadata *)v29;
    unint64_t v39 = &off_1EFF55120;
    v37[0] = (uint64_t)v30;
    uint64_t v31 = sub_1A8D59E10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v13, 1, 1, v31);
    sub_1A8C91CA8((uint64_t)v37, (uint64_t)v36);
    uint64_t v32 = (void *)swift_allocObject();
    uint64_t v32[2] = 0;
    void v32[3] = 0;
    v32[4] = v5;
    void v32[5] = a1;
    v32[6] = a2;
    sub_1A8C91C90(v36, (uint64_t)(v32 + 7));
    v32[12] = a3;
    v32[13] = a4;
    swift_bridgeObjectRetain();
    id v33 = v30;
    swift_retain();
    sub_1A8C84960((uint64_t)v13, (uint64_t)&unk_1E979F3B8, (uint64_t)v32);
    swift_release();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  }
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  objc_class *v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  void (*v37)(void, void);
  uint64_t v38;
  long long v39[2];
  uint64_t v40[3];
  ValueMetadata *v41;
  _UNKNOWN **v42;

  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  MEMORY[0x1F4188790](v10 - 8, v11);
  id v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1A8D59A80();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EB5EAEE0);
  swift_bridgeObjectRetain_n();
  id v15 = sub_1A8D59A60();
  os_log_type_t v16 = sub_1A8D59F00();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v37 = a3;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v38 = a4;
    unint64_t v20 = v13;
    uint64_t v21 = v5;
    uint64_t v22 = v19;
    v40[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)&v39[0] = sub_1A8C90120(a1, a2, v40);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v15, v16, "Checking feature with id: %s [objc]", v18, 0xCu);
    swift_arrayDestroy();
    uint64_t v23 = v22;
    uint64_t v5 = v21;
    id v13 = v20;
    a4 = v38;
    MEMORY[0x1AD0E6EB0](v23, -1, -1);
    uint64_t v24 = v18;
    a3 = v37;
    MEMORY[0x1AD0E6EB0](v24, -1, -1);

    if ((sub_1A8D328AC() & 1) == 0) {
      goto LABEL_10;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if ((sub_1A8D328AC() & 1) == 0) {
      goto LABEL_10;
    }
  }
  uint64_t v25 = sub_1A8D32CAC(a1, a2);
  if (v25)
  {
    id v26 = (void *)v25;
    a3(0, v25);

    return;
  }
  id v27 = sub_1A8D33150(a1, a2);
  if (v27) {
    goto LABEL_11;
  }
LABEL_10:
  id v27 = sub_1A8D18DB0(a1, a2);
  if (v27)
  {
LABEL_11:
    BOOL v28 = v27;
    int64_t v29 = CloudFeature.cloudFeatureObject.getter();
    a3(v29, 0);

    return;
  }
  uint64_t v41 = &type metadata for FeatureFlag;
  uint64_t v42 = (_UNKNOWN **)sub_1A8C937E4();
  LOBYTE(v40[0]) = 0;
  sub_1A8D597C0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  id v30 = swift_allocObject();
  *(void *)(v30 + 16) = a3;
  *(void *)(v30 + 24) = a4;
  uint64_t v31 = (objc_class *)type metadata accessor for XPCCaller();
  uint64_t v32 = objc_allocWithZone(v31);
  swift_retain();
  id v33 = objc_msgSend(v32, sel_init);
  uint64_t v41 = (ValueMetadata *)v31;
  uint64_t v42 = &off_1EFF55120;
  v40[0] = (uint64_t)v33;
  uint64_t v34 = sub_1A8D59E10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v13, 1, 1, v34);
  sub_1A8C91CA8((uint64_t)v40, (uint64_t)v39);
  uint64_t v35 = (void *)swift_allocObject();
  long long v35[2] = 0;
  v35[3] = 0;
  v35[4] = v5;
  v35[5] = a1;
  v35[6] = a2;
  sub_1A8C91C90(v39, (uint64_t)(v35 + 7));
  v35[12] = sub_1A8C92B70;
  v35[13] = v30;
  swift_bridgeObjectRetain();
  id v36 = v33;
  swift_retain();
  sub_1A8C84960((uint64_t)v13, (uint64_t)&unk_1E979F3C0, (uint64_t)v35);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);

  swift_release();
}

uint64_t sub_1A8D13CCC()
{
  uint64_t v0 = sub_1A8D19900((uint64_t)&unk_1EFF55A28);
  uint64_t result = swift_arrayDestroy();
  qword_1EB5ECCE8 = v0;
  return result;
}

id static CSFFeatureManager.cachedFeatureObject(id:)(uint64_t a1, unint64_t a2)
{
  id v2 = sub_1A8D18DB0(a1, a2);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  id v4 = CloudFeature.cloudFeatureObject.getter();

  return v4;
}

uint64_t sub_1A8D141E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[11] = a8;
  v8[12] = v10;
  v8[9] = a6;
  v8[10] = a7;
  v8[7] = a4;
  v8[8] = a5;
  return MEMORY[0x1F4188298](sub_1A8C840CC, 0, 0);
}

uint64_t sub_1A8D14214()
{
  uint64_t v1 = (void *)v0[15];
  id v2 = (void (*)(void *, uint64_t))v0[11];
  swift_release();
  id v3 = v1;
  v2(v1, 1);

  id v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1A8D142AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  return MEMORY[0x1F4188298](sub_1A8C83700, 0, 0);
}

uint64_t sub_1A8D142D0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void static CSFFeatureManager.getFeatureEligibility(for:bundleID:completion:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void *, uint64_t), uint64_t a6)
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1A8D59A80();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB5EAEE0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v13 = sub_1A8D59A60();
  os_log_type_t v14 = sub_1A8D59F00();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v18 = v16;
    *(_DWORD *)uint64_t v15 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A8C90120(a1, a2, &v18);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A8C90120(a3, a4, &v18);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v13, v14, "Checking feature eligibility with feature id: %s, bundle id: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v16, -1, -1);
    MEMORY[0x1AD0E6EB0](v15, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  id v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  sub_1A8D0E838(a1, a2, a3, a4, a5, a6);
}

uint64_t static CSFFeatureManager.getFeatureEligibility(forFeatureWithId:bundleId:completion:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void, void *), uint64_t a6)
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1A8D59A80();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB5EAEE0);
  id v13 = sub_1A8D59A60();
  os_log_type_t v14 = sub_1A8D59F00();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v19 = a5;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v20 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    sub_1A8C90120(0xD00000000000003CLL, 0x80000001A8D66A70, &v20);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v13, v14, "%s [objc]", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v16, -1, -1);
    id v17 = v15;
    a5 = v19;
    MEMORY[0x1AD0E6EB0](v17, -1, -1);
  }

  swift_retain();
  sub_1A8D1999C(a1, a2, a3, a4, a5, a6);
  return swift_release();
}

uint64_t static CSFFeatureManager.requestGeoClassification(forFeatureID:bundleID:altDSID:ignoreCache:completion:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1A8D59A80();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EB5EAEE0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v17 = sub_1A8D59A60();
  os_log_type_t v18 = sub_1A8D59F00();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v24 = a6;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v26 = v20;
    *(_DWORD *)uint64_t v19 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A8C90120(a1, a2, &v26);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A8C90120(a3, a4, &v26);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v17, v18, "Checking geoclassification for feature id: %s and bundle id %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    uint64_t v21 = v20;
    a6 = v24;
    MEMORY[0x1AD0E6EB0](v21, -1, -1);
    MEMORY[0x1AD0E6EB0](v19, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  id v22 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  swift_retain();
  sub_1A8D0FDA0(a1, a2, a3, a4, a5, a6, a7 & 1, v22, a8, a9);

  return swift_release();
}

void sub_1A8D14A30(char *a1, char a2, void (*a3)(uint64_t, uint64_t, char *))
{
  if (a2)
  {
    uint64_t v5 = a1;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = a1;
  }
  else
  {
    uint64_t v9 = *(void *)&a1[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification];
    uint64_t v10 = *(void *)&a1[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification + 8];
    sub_1A8D1DFB8(a1);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1A8D05A48(v9, v10);
    uint64_t v7 = a1[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta];
    uint64_t v8 = 0;
  }
  a3(v6, v7, v8);
  sub_1A8C9292C(a1);
}

void sub_1A8D14BD0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  if (a3) {
    uint64_t v7 = sub_1A8D59540();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  (*(void (**)(uint64_t, uint64_t, void))(a4 + 16))(a4, a1, a2 & 1);
}

void static CSFFeatureManager.requestGeoClassification(forFeatureID:bundleID:ignoreCache:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(uint64_t, void, void *), uint64_t a7)
{
  id v10 = objc_msgSend(self, sel_defaultStore);
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = objc_msgSend(v10, sel_aa_primaryAppleAccount);

    if (v12 && (id v13 = objc_msgSend(v12, sel_aa_altDSID), v12, v13))
    {
      sub_1A8D59BF0();

      uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      uint64_t v15 = (void *)sub_1A8D59BC0();
      uint64_t v16 = (void *)sub_1A8D59BC0();
      id v17 = (void *)sub_1A8D59BC0();
      swift_bridgeObjectRelease();
      aBlock[4] = a6;
      aBlock[5] = a7;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1A8D12F00;
      aBlock[3] = &block_descriptor_12;
      os_log_type_t v18 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(ObjCClassFromMetadata, sel_requestGeoClassificationForFeatureID_bundleID_altDSID_ignoreCache_completion_, v15, v16, v17, a5 & 1, v18);
      _Block_release(v18);
    }
    else
    {
      if (qword_1EB5EAEF8 != -1) {
        swift_once();
      }
      uint64_t v19 = a6;
      uint64_t v20 = sub_1A8D59A80();
      __swift_project_value_buffer(v20, (uint64_t)qword_1EB5EAEE0);
      uint64_t v21 = sub_1A8D59A60();
      os_log_type_t v22 = sub_1A8D59EE0();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_1A8C7F000, v21, v22, "Unable to access altDSID", v23, 2u);
        MEMORY[0x1AD0E6EB0](v23, -1, -1);
      }

      sub_1A8C8C7B0();
      uint64_t v24 = (void *)swift_allocError();
      unsigned char *v25 = 3;
      v19(3, 0, v24);
    }
  }
  else
  {
    __break(1u);
  }
}

id static CSFFeatureManager.addFeatureChangeObserver(change:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EB5EA8E0 != -1) {
    swift_once();
  }
  return NotificationObservation.addObserver(change:)(a1, a2);
}

id static CSFFeatureManager.addTicketChangeObserver(featureName:change:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1EB5EA8E0 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)swift_allocObject();
  long long v9[2] = v4;
  void v9[3] = a1;
  v9[4] = a2;
  v9[5] = a3;
  v9[6] = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  id v10 = NotificationObservation.addTicketObserver(change:)((uint64_t)sub_1A8D1A234, (uint64_t)v9);
  swift_release();
  return v10;
}

uint64_t sub_1A8D15178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAEA0);
  MEMORY[0x1F4188790](v10 - 8, v11);
  id v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1A8D59E10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = 0;
  v15[3] = 0;
  void v15[4] = a1;
  v15[5] = a2;
  v15[6] = a3;
  v15[7] = a4;
  v15[8] = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A8C84960((uint64_t)v13, (uint64_t)&unk_1E979F598, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_1A8D152A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[16] = a4;
  return MEMORY[0x1F4188298](sub_1A8D152D0, 0, 0);
}

uint64_t sub_1A8D152D0()
{
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v2 = sub_1A8D59BC0();
  v0[21] = v2;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1A8D153FC;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A8D1560C;
  v0[13] = &block_descriptor_220;
  v0[14] = v3;
  objc_msgSend(ObjCClassFromMetadata, sel_getTicketStatusFromCacheForFeature_completionHandler_, v2, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A8D153FC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 176) = v1;
  if (v1) {
    uint64_t v2 = sub_1A8D15584;
  }
  else {
    uint64_t v2 = sub_1A8D1550C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8D1550C()
{
  uint64_t v1 = *(void **)(v0 + 120);

  (*(void (**)(void *))(v0 + 152))(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1A8D15584()
{
  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v2 = *(void **)(v0 + 176);
  swift_willThrow();

  (*(void (**)(void))(v0 + 152))(0);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1A8D1560C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEC0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    uint64_t v11 = a2;
    uint64_t v8 = *(void *)(*(void *)(v3 + 64) + 40);
    id v9 = a2;
    sub_1A8C83BCC((uint64_t)&v11, v8, &qword_1E979F378);
    return swift_continuation_throwingResume();
  }
}

void _sSo17CSFFeatureManagerC25CloudSubscriptionFeaturesE27removeFeatureChangeObserver5tokenySo8NSObject_p_tFZ_0(void *a1)
{
  if (qword_1EB5EA8E0 != -1) {
    swift_once();
  }
  _s25CloudSubscriptionFeatures23NotificationObservationC14removeObserver5tokenySo8NSObject_p_tF_0(a1);
}

id static CSFFeatureManager.processPushNotification(dictionary:)()
{
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  return objc_msgSend(ObjCClassFromMetadata, sel_clearFeatureCacheAndNotify);
}

void static CSFFeatureManager.clearFeatureCacheAndNotify()()
{
}

void static CSFFeatureManager.clearTicketCacheAndNotify()()
{
}

uint64_t static CSFFeatureManager.getSharedAlbumsStatus()()
{
  return MEMORY[0x1F4188298](sub_1A8D15C10, 0, 0);
}

uint64_t sub_1A8D15C10()
{
  uint64_t v12 = v0;
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1A8D59A80();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB5EAEE0);
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v11 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    v0[2] = sub_1A8C90120(0xD000000000000017, 0x80000001A8D66860, &v11);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v2, v3, "%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v5, -1, -1);
    MEMORY[0x1AD0E6EB0](v4, -1, -1);
  }

  id v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  v0[3] = v6;
  uint64_t v7 = swift_task_alloc();
  v0[4] = v7;
  *(void *)(v7 + 16) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[5] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1A8D15E78;
  uint64_t v9 = MEMORY[0x1E4FBB390];
  return MEMORY[0x1F4188160](v0 + 7, 0, 0, 0xD000000000000017, 0x80000001A8D66860, sub_1A8D1AD10, v7, v9);
}

uint64_t sub_1A8D15E78()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8D15FFC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A8D15F94;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8D15F94()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 56);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1A8D15FFC()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t static CSFFeatureManager.getTicketStatus(forFeature:)(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E979F3D8 + dword_1E979F3D8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A8C98E68;
  return v7(a1, a2);
}

uint64_t sub_1A8D16294(int a1, void *aBlock)
{
  v2[2] = _Block_copy(aBlock);
  uint64_t v3 = sub_1A8D59BF0();
  uint64_t v5 = v4;
  v2[3] = v4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E979F3D8 + dword_1E979F3D8);
  id v6 = (void *)swift_task_alloc();
  v2[4] = v6;
  *id v6 = v2;
  v6[1] = sub_1A8CD54FC;
  return v8(v3, v5);
}

uint64_t static CSFFeatureManager.getTicketStatusFromCache(forFeature:)(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E979F3E8 + dword_1E979F3E8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A8CD997C;
  return v7(a1, a2);
}

uint64_t sub_1A8D16590(int a1, void *aBlock)
{
  v2[2] = _Block_copy(aBlock);
  uint64_t v3 = sub_1A8D59BF0();
  uint64_t v5 = v4;
  v2[3] = v4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E979F3E8 + dword_1E979F3E8);
  id v6 = (void *)swift_task_alloc();
  v2[4] = v6;
  *id v6 = v2;
  v6[1] = sub_1A8CD54FC;
  return v8(v3, v5);
}

uint64_t static CSFFeatureManager.getTicket(forFeature:)(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E979F3F8 + dword_1E979F3F8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A8CD997C;
  return v7(a1, a2);
}

uint64_t sub_1A8D1688C(int a1, void *aBlock)
{
  v2[2] = _Block_copy(aBlock);
  uint64_t v3 = sub_1A8D59BF0();
  uint64_t v5 = v4;
  v2[3] = v4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E979F3F8 + dword_1E979F3F8);
  id v6 = (void *)swift_task_alloc();
  v2[4] = v6;
  *id v6 = v2;
  v6[1] = sub_1A8CD9978;
  return v8(v3, v5);
}

uint64_t static CSFFeatureManager.deviceHasAnyTicket()()
{
  *(void *)(v1 + 128) = v0;
  return MEMORY[0x1F4188298](sub_1A8D1697C, 0, 0);
}

uint64_t sub_1A8D1697C()
{
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v2 = sub_1A8D59BC0();
  v0[17] = v2;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1A8D16AB4;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A8D1560C;
  v0[13] = &block_descriptor_21_0;
  v0[14] = v3;
  objc_msgSend(ObjCClassFromMetadata, sel_getTicketStatusFromCacheForFeature_completionHandler_, v2, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A8D16AB4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_1A8D16CA0;
  }
  else {
    uint64_t v2 = sub_1A8D16BC4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

id sub_1A8D16BC4()
{
  uint64_t v1 = *(void **)(v0 + 120);

  objc_allocWithZone((Class)type metadata accessor for TicketStatus());
  id result = TicketStatus.init(rawValue:)(0x6465756575716E65, 0xE800000000000000);
  if (result)
  {
    uint64_t v3 = result;
    if (v1)
    {
      id v4 = v1;
      char v5 = sub_1A8D59FA0();
    }
    else
    {
      char v5 = 0;
      id v4 = result;
    }

    id v6 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v6(v5 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A8D16CA0()
{
  uint64_t v1 = (void *)v0[17];
  swift_willThrow();

  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[18];
  uint64_t v3 = sub_1A8D59A80();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB5EAEE0);
  id v4 = v2;
  id v5 = v2;
  id v6 = sub_1A8D59A60();
  os_log_type_t v7 = sub_1A8D59EE0();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = (void *)v0[18];
  if (v8)
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412290;
    id v12 = v9;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v13;
    sub_1A8D59FE0();
    *uint64_t v11 = v13;

    _os_log_impl(&dword_1A8C7F000, v6, v7, "Error getting ticket status from cache: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v11, -1, -1);
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
  }
  else
  {
  }
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14(0);
}

uint64_t sub_1A8D17014(const void *a1)
{
  *(void *)(v1 + 16) = _Block_copy(a1);
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1A8D170D4;
  v3[16] = ObjCClassMetadata;
  return MEMORY[0x1F4188298](sub_1A8D1697C, 0, 0);
}

uint64_t sub_1A8D170D4(char a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  v3[2](v3, a1 & 1);
  _Block_release(v3);
  id v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t static CSFFeatureManager.clearCFUGate(name:)()
{
  return MEMORY[0x1F4188298](sub_1A8D17218, 0, 0);
}

uint64_t sub_1A8D17218()
{
  id v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  v0[2] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  uint64_t v4 = MEMORY[0x1E4FBC848];
  v3[1] = sub_1A8D17328;
  return MEMORY[0x1F4188160](v3, 0, 0, 0xD000000000000016, 0x80000001A8D66740, sub_1A8D1CD7C, v2, v4 + 8);
}

uint64_t sub_1A8D17328()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8D174A8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A8D17444;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8D17444()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8D174A8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static CSFFeatureManager.clearCFU()()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1E979F418 + dword_1E979F418);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A8C81A88;
  return v3();
}

uint64_t sub_1A8D17714(const void *a1)
{
  *(void *)(v1 + 16) = _Block_copy(a1);
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1E979F418 + dword_1E979F418);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A8D1E1F8;
  return v4();
}

uint64_t static CSFFeatureManager.postCFUIfEligible()()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1E979F428 + dword_1E979F428);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A8C81A88;
  return v3();
}

uint64_t sub_1A8D179BC(const void *a1)
{
  *(void *)(v1 + 16) = _Block_copy(a1);
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1E979F428 + dword_1E979F428);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A8D1E1F8;
  return v4();
}

uint64_t static CSFFeatureManager.revalidateCFU()()
{
  return MEMORY[0x1F4188298](sub_1A8D17A80, 0, 0);
}

uint64_t sub_1A8D17A80()
{
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A8D17B2C;
  return sub_1A8D0D4DC();
}

uint64_t sub_1A8D17B2C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A8D17C68, 0, 0);
  }
  else
  {

    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A8D17C68()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8D17E2C(const void *a1)
{
  *(void *)(v1 + 16) = _Block_copy(a1);
  return MEMORY[0x1F4188298](sub_1A8D17E94, 0, 0);
}

uint64_t sub_1A8D17E94()
{
  *(void *)(v0 + 24) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A8D17F40;
  return sub_1A8D0D4DC();
}

uint64_t sub_1A8D17F40()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A8D18098, 0, 0);
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 16);

    (*(void (**)(uint64_t, void))(v3 + 16))(v3, 0);
    _Block_release(*(const void **)(v2 + 16));
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
}

uint64_t sub_1A8D18098()
{
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 16);

  uint64_t v3 = (void *)sub_1A8D59540();
  (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);

  _Block_release(*(const void **)(v0 + 16));
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t static CSFFeatureManager.gmOptInToggle()()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1E979F440 + dword_1E979F440);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A8D181D8;
  return v3();
}

uint64_t sub_1A8D181D8(char a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (v1) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a1 & 1;
  }
  return v4(v5);
}

uint64_t sub_1A8D18440(const void *a1)
{
  *(void *)(v1 + 16) = _Block_copy(a1);
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1E979F440 + dword_1E979F440);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A8D184E8;
  return v4();
}

uint64_t sub_1A8D184E8(char a1)
{
  uint64_t v3 = v1;
  uint64_t v6 = *v2;
  uint64_t v5 = *v2;
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v8 = *(void *)(v5 + 16);
  if (v3)
  {
    uint64_t v9 = (void *)sub_1A8D59540();

    (*(void (**)(uint64_t, void, void *))(v8 + 16))(v8, 0, v9);
  }
  else
  {
    (*(void (**)(uint64_t, void, void))(v8 + 16))(v8, a1 & 1, 0);
  }
  _Block_release(*(const void **)(v6 + 16));
  uint64_t v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

uint64_t static CSFFeatureManager.forcePostCFU()()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1E979F450 + dword_1E979F450);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A8C81994;
  return v3();
}

uint64_t sub_1A8D18860(const void *a1)
{
  *(void *)(v1 + 16) = _Block_copy(a1);
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1E979F450 + dword_1E979F450);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1A8D18908;
  return v4();
}

uint64_t sub_1A8D18908()
{
  uint64_t v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v6 = *(void *)(v3 + 16);
  if (v2)
  {
    uint64_t v7 = (void *)sub_1A8D59540();

    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v6 + 16))(v6, 0);
  }
  _Block_release(*(const void **)(v4 + 16));
  uint64_t v8 = *(uint64_t (**)(void))(v5 + 8);
  return v8();
}

uint64_t sub_1A8D18A6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1A8C81A88;
  return v6();
}

uint64_t sub_1A8D18B38(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1A8C81A88;
  return v7();
}

uint64_t sub_1A8D18C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8D59E10();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A8D59E00();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1A8C8DE74(a1, &qword_1EB5EAEA0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A8D59DC0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

id sub_1A8D18DB0(uint64_t a1, unint64_t a2)
{
  void v23[3] = &type metadata for FeatureFlag;
  uint64_t v23[4] = sub_1A8C937E4();
  LOBYTE(v23[0]) = 0;
  char v4 = sub_1A8D597C0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  if ((v4 & 1) == 0) {
    return 0;
  }
  if (geteuid() < 0x1F5)
  {
    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1A8D59A80();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EB5EAEE0);
    uint64_t v6 = sub_1A8D59A60();
    os_log_type_t v7 = sub_1A8D59F00();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_1A8C7F000, v6, v7, "Skipping client cache because request is coming from a system user.", v8, 2u);
      MEMORY[0x1AD0E6EB0](v8, -1, -1);
    }
    id v9 = 0;
LABEL_22:

    return v9;
  }
  if (qword_1EB5EAB78 != -1) {
    swift_once();
  }
  id v10 = sub_1A8C8E338();
  id v11 = objc_msgSend(v10, sel_aa_primaryAppleAccount);
  uint64_t v12 = v11;
  if (v11)
  {
    id v13 = objc_msgSend(v11, sel_aa_altDSID);

    if (v13)
    {
      uint64_t v14 = (uint64_t *)sub_1A8D59BF0();
      uint64_t v12 = v15;
    }
    else
    {

      uint64_t v14 = 0;
      uint64_t v12 = 0;
    }
  }
  else
  {

    uint64_t v14 = 0;
  }
  id v9 = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(a1, a2, v14, (unint64_t)v12, 0, 0);
  swift_bridgeObjectRelease();
  if (v9)
  {
    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1A8D59A80();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EB5EAEE0);
    uint64_t v17 = v9;
    uint64_t v6 = sub_1A8D59A60();
    os_log_type_t v18 = sub_1A8D59F00();
    if (os_log_type_enabled(v6, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412290;
      v23[0] = v17;
      uint64_t v21 = v17;
      sub_1A8D59FE0();
      *uint64_t v20 = v9;

      _os_log_impl(&dword_1A8C7F000, v6, v18, "serving feature request from (client)cache: %@", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v20, -1, -1);
      MEMORY[0x1AD0E6EB0](v19, -1, -1);
    }
    else
    {

      uint64_t v6 = v17;
    }
    goto LABEL_22;
  }
  return v9;
}

uint64_t sub_1A8D19134(char a1)
{
  *(unsigned char *)(v1 + 144) = a1;
  return MEMORY[0x1F4188298](sub_1A8D19154, 0, 0);
}

uint64_t sub_1A8D19154()
{
  id v1 = objc_msgSend(self, sel_defaultStore);
  if (v1)
  {
    id v9 = v1;
    id v10 = objc_msgSend(v1, sel_aa_primaryAppleAccount);

    if (v10 && (id v11 = objc_msgSend(v10, sel_aa_altDSID), v10, v11))
    {
      uint64_t v12 = sub_1A8D59BF0();
      uint64_t v14 = v13;
    }
    else
    {
      uint64_t v12 = 0;
      uint64_t v14 = 0;
    }
    *(void *)(v0 + 104) = v12;
    *(void *)(v0 + 112) = v14;
    char v15 = *(unsigned char *)(v0 + 144);
    uint64_t v16 = (objc_class *)type metadata accessor for XPCCaller();
    id v17 = objc_msgSend(objc_allocWithZone(v16), sel_init);
    *(void *)(v0 + 40) = v16;
    *(void *)(v0 + 48) = &off_1EFF55120;
    *(void *)(v0 + 16) = v17;
    uint64_t v18 = *__swift_project_boxed_opaque_existential_1((void *)(v0 + 16), (uint64_t)v16);
    uint64_t v19 = swift_task_alloc();
    *(void *)(v0 + 120) = v19;
    *(void *)(v19 + 16) = v18;
    *(void *)(v19 + 24) = 0xD000000000000018;
    *(void *)(v19 + 32) = 0x80000001A8D62950;
    *(unsigned char *)(v19 + 40) = v15;
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v20;
    uint64_t v8 = type metadata accessor for CloudFeature();
    *uint64_t v20 = v0;
    v20[1] = sub_1A8D1934C;
    unint64_t v4 = 0xD00000000000001FLL;
    unint64_t v5 = 0x80000001A8D64940;
    uint64_t v6 = sub_1A8D1E1C4;
    id v1 = (id)(v0 + 80);
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    uint64_t v7 = v19;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x1F4188160](v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1A8D1934C()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8D19888;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A8D19468;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8D19468()
{
  uint64_t v34 = v0;
  uint64_t v1 = *(void **)(v0 + 80);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (qword_1EB5EAB78 != -1) {
    swift_once();
  }
  FeatureCache.allFeatures(forDSID:ignoreTTL:)(*(uint64_t **)(v0 + 104), *(void *)(v0 + 112), 0);
  swift_bridgeObjectRelease();
  unint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = sub_1A8CCDB98(v2);
  swift_bridgeObjectRelease_n();
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A8D59A80();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EAEE0);
  swift_bridgeObjectRetain_n();
  unint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59F00();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v32 = v29;
    *(_DWORD *)uint64_t v7 = 136315394;
    *(void *)(v0 + 88) = sub_1A8C90120(0xD00000000000001ALL, 0x80000001A8D66B50, &v32);
    BOOL v28 = (uint64_t *)(v0 + 96);
    sub_1A8D59FE0();
    uint64_t v31 = (uint8_t *)v7;
    *(_WORD *)(v7 + 12) = 2082;
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1A8D5A1C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v9 = MEMORY[0x1E4FBC860];
    os_log_type_t v30 = v6;
    if (v8)
    {
      uint64_t v33 = MEMORY[0x1E4FBC860];
      uint64_t result = sub_1A8CB6294(0, v8 & ~(v8 >> 63), 0);
      if (v8 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v26 = v1;
      uint64_t v27 = v0;
      uint64_t v11 = 0;
      uint64_t v9 = v33;
      unint64_t v12 = v3 & 0xC000000000000001;
      unint64_t v13 = v3;
      do
      {
        if (v12) {
          uint64_t v14 = (char *)MEMORY[0x1AD0E6030](v11, v3);
        }
        else {
          uint64_t v14 = (char *)*(id *)(v3 + 8 * v11 + 32);
        }
        char v15 = v14;
        uint64_t v16 = &v14[OBJC_IVAR___CloudFeature_featureID];
        swift_beginAccess();
        uint64_t v17 = *(void *)v16;
        uint64_t v18 = *((void *)v16 + 1);
        swift_bridgeObjectRetain();

        uint64_t v33 = v9;
        unint64_t v20 = *(void *)(v9 + 16);
        unint64_t v19 = *(void *)(v9 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_1A8CB6294(v19 > 1, v20 + 1, 1);
          uint64_t v9 = v33;
        }
        ++v11;
        *(void *)(v9 + 16) = v20 + 1;
        uint64_t v21 = v9 + 16 * v20;
        *(void *)(v21 + 32) = v17;
        *(void *)(v21 + 40) = v18;
        unint64_t v3 = v13;
      }
      while (v8 != v11);
      uint64_t v1 = v26;
      uint64_t v0 = v27;
    }
    uint64_t v22 = MEMORY[0x1AD0E5CA0](v9, MEMORY[0x1E4FBB1A0]);
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    *BOOL v28 = sub_1A8C90120(v22, v24, &v32);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v5, v30, "%s Returning features: %{public}s", v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v29, -1, -1);
    MEMORY[0x1AD0E6EB0](v31, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v25 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v25(v3);
}

uint64_t sub_1A8D19888()
{
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8D19900(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1A8D59E90();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1A8D2CDD4(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1A8D1999C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void, void *), uint64_t a6)
{
  uint64_t v12 = qword_1EB5EAEF8;
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1A8D59A80();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EB5EAEE0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_1A8D59A60();
  os_log_type_t v15 = sub_1A8D59F00();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v20 = v17;
    *(_DWORD *)uint64_t v16 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A8C90120(a1, a2, &v20);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A8C90120(a3, a4, &v20);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v14, v15, "Checking feature eligibility with feature id: %s, bundle id: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v17, -1, -1);
    MEMORY[0x1AD0E6EB0](v16, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  id v18 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  swift_retain();
  sub_1A8D0F204(a1, a2, a3, a4, v18, a5, a6);

  return swift_release_n();
}

void sub_1A8D19C28(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, char a7, void *aBlock)
{
  _Block_copy(aBlock);
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1A8D59A80();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EB5EAEE0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_1A8D59A60();
  os_log_type_t v18 = sub_1A8D59F00();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v25 = a1;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v24 = a6;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v26 = v20;
    *(_DWORD *)uint64_t v19 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A8C90120(v25, a2, &v26);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A8C90120(a3, a4, &v26);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v17, v18, "Checking geoclassification for feature id: %s and bundle id %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    uint64_t v21 = v20;
    a6 = v24;
    MEMORY[0x1AD0E6EB0](v21, -1, -1);
    uint64_t v22 = v19;
    a1 = v25;
    MEMORY[0x1AD0E6EB0](v22, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  id v23 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  _Block_copy(aBlock);
  sub_1A8D0F784(a1, a2, a3, a4, a5, a6, a7 & 1, v23, aBlock);
  _Block_release(aBlock);

  _Block_release(aBlock);
}

void sub_1A8D19ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, void (**a7)(void, void, void, void))
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a7;
  id v10 = self;
  _Block_copy(a7);
  id v11 = objc_msgSend(v10, sel_defaultStore);
  if (v11)
  {
    uint64_t v12 = v11;
    id v13 = objc_msgSend(v11, sel_aa_primaryAppleAccount);

    if (v13 && (id v14 = objc_msgSend(v13, sel_aa_altDSID), v13, v14))
    {
      sub_1A8D59BF0();
      char v27 = a5;

      uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      uint64_t v16 = (void *)sub_1A8D59BC0();
      uint64_t v17 = (void *)sub_1A8D59BC0();
      os_log_type_t v18 = (void *)sub_1A8D59BC0();
      swift_bridgeObjectRelease();
      aBlock[4] = sub_1A8D0FD7C;
      aBlock[5] = v9;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1A8D12F00;
      aBlock[3] = &block_descriptor_189;
      uint64_t v19 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(ObjCClassFromMetadata, sel_requestGeoClassificationForFeatureID_bundleID_altDSID_ignoreCache_completion_, v16, v17, v18, v27 & 1, v19);
      _Block_release(v19);
      swift_release();
    }
    else
    {
      if (qword_1EB5EAEF8 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_1A8D59A80();
      __swift_project_value_buffer(v20, (uint64_t)qword_1EB5EAEE0);
      uint64_t v21 = sub_1A8D59A60();
      os_log_type_t v22 = sub_1A8D59EE0();
      if (os_log_type_enabled(v21, v22))
      {
        id v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v23 = 0;
        _os_log_impl(&dword_1A8C7F000, v21, v22, "Unable to access altDSID", v23, 2u);
        MEMORY[0x1AD0E6EB0](v23, -1, -1);
      }

      sub_1A8C8C7B0();
      uint64_t v24 = (void *)swift_allocError();
      unsigned char *v25 = 3;
      uint64_t v26 = (void *)sub_1A8D59540();
      ((void (**)(void, uint64_t, void, void *))a7)[2](a7, 3, 0, v26);

      swift_release();
    }
  }
  else
  {
    _Block_release(a7);
    __break(1u);
  }
}

void sub_1A8D1A238(const char *a1, void (*a2)(void))
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A8D59A80();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EAEE0);
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59F00();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1A8C7F000, v5, v6, a1, v7, 2u);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }

  id v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  a2();
}

uint64_t _sSo17CSFFeatureManagerC25CloudSubscriptionFeaturesE32refreshAllGeoclassificationCacheyyFZ_0()
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1A8D59A80();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB5EAEE0);
  uint64_t v1 = sub_1A8D59A60();
  os_log_type_t v2 = sub_1A8D59F00();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1A8C7F000, v1, v2, "Geoclassification cache refresh request", v3, 2u);
    MEMORY[0x1AD0E6EB0](v3, -1, -1);
  }

  id v4 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v5 = (void *)sub_1A8D59BC0();
  id v6 = objc_msgSend(v4, sel_initWithSuiteName_, v5);

  id v7 = sub_1A8CEA284(v6);
  id v8 = sub_1A8CC4258();
  sub_1A8CEA388((uint64_t)v8, v9);

  return swift_bridgeObjectRelease();
}

BOOL _sSo17CSFFeatureManagerC25CloudSubscriptionFeaturesE02isC10SubscriberSbyFZ_0()
{
  id v0 = objc_msgSend(self, sel_sharedServerWithNoUrlCache);
  unint64_t v21 = sub_1A8D1E034();
  os_log_type_t v22 = &off_1EFF551A0;
  *(void *)&long long v20 = v0;
  sub_1A8C8E488();
  uint64_t v2 = v1;
  memset(v18, 0, sizeof(v18));
  uint64_t v19 = 0;
  sub_1A8C91C90(&v20, (uint64_t)v17);
  uint64_t ObjectType = swift_getObjectType();
  char v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(ObjectType, v2);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
  sub_1A8C8DE74((uint64_t)v18, &qword_1EB5E9DA8);
  if (v4 == 2)
  {
    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1A8D59A80();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EB5EAEE0);
    id v6 = sub_1A8D59A60();
    os_log_type_t v7 = sub_1A8D59EE0();
    if (os_log_type_enabled(v6, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v8 = 0;
      _os_log_impl(&dword_1A8C7F000, v6, v7, "SubscriptionStatus not found, defaulting to true", v8, 2u);
      MEMORY[0x1AD0E6EB0](v8, -1, -1);
    }
  }
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1A8D59A80();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB5EAEE0);
  id v10 = sub_1A8D59A60();
  os_log_type_t v11 = sub_1A8D59F00();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 67109120;
    int v13 = v4 & 1;
    if (v4 == 2) {
      int v14 = 1;
    }
    else {
      int v14 = v4 & 1;
    }
    LODWORD(v20) = v14;
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v10, v11, "SubscriptionStatus requested: %{BOOL}d", v12, 8u);
    MEMORY[0x1AD0E6EB0](v12, -1, -1);
  }
  else
  {

    int v13 = v4 & 1;
  }
  return v4 == 2 || v13 != 0;
}

uint64_t _sSo17CSFFeatureManagerC25CloudSubscriptionFeaturesE27shouldShowRSVPDataDetectorsSbyFZ_0()
{
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1A8D59A80();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB5EAEE0);
  uint64_t v1 = sub_1A8D59A60();
  os_log_type_t v2 = sub_1A8D59F00();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    v18[0] = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    sub_1A8C90120(0xD00000000000001DLL, 0x80000001A8D66B30, v18);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v1, v2, "%s requested", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v4, -1, -1);
    MEMORY[0x1AD0E6EB0](v3, -1, -1);
  }

  uint64_t v19 = &type metadata for FeatureFlag;
  unint64_t v5 = sub_1A8C937E4();
  unint64_t v20 = v5;
  LOBYTE(v18[0]) = 1;
  char v6 = sub_1A8D597C0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  if ((v6 & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v19 = &type metadata for FeatureFlag;
  unint64_t v20 = v5;
  LOBYTE(v18[0]) = 2;
  char v7 = sub_1A8D597C0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  if ((v7 & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v19 = &type metadata for FeatureFlag;
  unint64_t v20 = v5;
  LOBYTE(v18[0]) = 3;
  char v8 = sub_1A8D597C0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  if (v8)
  {
    if (qword_1EB5E9298 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v0, (uint64_t)qword_1EB5E9318);
    uint64_t v9 = sub_1A8D59A60();
    os_log_type_t v10 = sub_1A8D59F00();
    if (os_log_type_enabled(v9, v10))
    {
      os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v11 = 0;
      _os_log_impl(&dword_1A8C7F000, v9, v10, "All feature flags for rsvp are enabled, skipping XPCConnetion call", v11, 2u);
      MEMORY[0x1AD0E6EB0](v11, -1, -1);
    }

    char v12 = 1;
  }
  else
  {
LABEL_13:
    if (qword_1E979E428 != -1) {
      swift_once();
    }
    char v12 = sub_1A8CA265C();
    int v13 = sub_1A8D59A60();
    os_log_type_t v14 = sub_1A8D59F00();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      v18[0] = v16;
      *(_DWORD *)uint64_t v15 = 136315394;
      sub_1A8C90120(0xD00000000000001DLL, 0x80000001A8D66B30, v18);
      sub_1A8D59FE0();
      *(_WORD *)(v15 + 12) = 1026;
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v13, v14, "%s returning result: %{BOOL,public}d", (uint8_t *)v15, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v16, -1, -1);
      MEMORY[0x1AD0E6EB0](v15, -1, -1);
    }
  }
  return v12 & 1;
}

uint64_t sub_1A8D1AD10(uint64_t a1)
{
  return sub_1A8D098C4(a1);
}

uint64_t sub_1A8D1AD18(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return MEMORY[0x1F4188298](sub_1A8D1AD38, 0, 0);
}

id sub_1A8D1AD38()
{
  unint64_t v20 = v0;
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v2 = result;
    int deviceSupportsGenerativeModelSystems = MobileGestalt_get_deviceSupportsGenerativeModelSystems();

    if (deviceSupportsGenerativeModelSystems)
    {
      if (qword_1EB5EAEF8 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_1A8D59A80();
      v0[14] = __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EAEE0);
      unint64_t v5 = sub_1A8D59A60();
      os_log_type_t v6 = sub_1A8D59F00();
      if (os_log_type_enabled(v5, v6))
      {
        char v7 = (uint8_t *)swift_slowAlloc();
        uint64_t v8 = swift_slowAlloc();
        v19[0] = v8;
        *(_DWORD *)char v7 = 136315138;
        v0[11] = sub_1A8C90120(0xD00000000000001CLL, 0x80000001A8D66840, v19);
        sub_1A8D59FE0();
        _os_log_impl(&dword_1A8C7F000, v5, v6, "%s Attempting to get ticket status from daemon.", v7, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v8, -1, -1);
        MEMORY[0x1AD0E6EB0](v7, -1, -1);
      }

      v0[15] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
      uint64_t v9 = (void *)swift_task_alloc();
      v0[16] = v9;
      *uint64_t v9 = v0;
      v9[1] = sub_1A8D1B110;
      uint64_t v11 = v0[12];
      uint64_t v10 = v0[13];
      return (id)sub_1A8D0A15C(v11, v10);
    }
    else
    {
      if (qword_1EB5EAEF8 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_1A8D59A80();
      __swift_project_value_buffer(v12, (uint64_t)qword_1EB5EAEE0);
      int v13 = sub_1A8D59A60();
      os_log_type_t v14 = sub_1A8D59F00();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        uint64_t v16 = swift_slowAlloc();
        v19[0] = v16;
        *(_DWORD *)uint64_t v15 = 136315138;
        v0[8] = sub_1A8C90120(0xD00000000000001CLL, 0x80000001A8D66840, v19);
        sub_1A8D59FE0();
        _os_log_impl(&dword_1A8C7F000, v13, v14, "%s Device is not eligible.", v15, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v16, -1, -1);
        MEMORY[0x1AD0E6EB0](v15, -1, -1);
      }

      sub_1A8C8C7B0();
      swift_allocError();
      *uint64_t v17 = 12;
      swift_willThrow();
      os_log_type_t v18 = (uint64_t (*)(void))v0[1];
      return (id)v18();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A8D1B110(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 136) = a1;
  *(void *)(v3 + 144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1A8D1B580;
  }
  else
  {

    uint64_t v4 = sub_1A8D1B22C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1A8D1B22C()
{
  uint64_t v21 = v0;
  id v1 = *(id *)(v0 + 136);
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void **)(v0 + 136);
    uint64_t v5 = swift_slowAlloc();
    os_log_type_t v18 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = v19;
    *(_DWORD *)uint64_t v5 = 136315394;
    *(void *)(v0 + 72) = sub_1A8C90120(0xD00000000000001CLL, 0x80000001A8D66840, &v20);
    sub_1A8D59FE0();
    *(_WORD *)(v5 + 12) = 2112;
    *(void *)(v0 + 80) = v4;
    id v6 = v4;
    sub_1A8D59FE0();
    *os_log_type_t v18 = v4;

    _os_log_impl(&dword_1A8C7F000, v2, v3, "%s Returning ticket: %@", (uint8_t *)v5, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v18, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v19, -1, -1);
    MEMORY[0x1AD0E6EB0](v5, -1, -1);
  }
  else
  {
    char v7 = *(void **)(v0 + 136);
  }
  uint64_t v8 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GMAnalyticsProvider()), sel_init);
  uint64_t v9 = sub_1A8D596F0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = swift_task_alloc();
  sub_1A8D596D0();
  uint64_t v12 = *(void *)&v8[OBJC_IVAR___CSFGMAnalyticsProvider_dataStore + 24];
  uint64_t v13 = *(void *)&v8[OBJC_IVAR___CSFGMAnalyticsProvider_dataStore + 32];
  __swift_project_boxed_opaque_existential_1(&v8[OBJC_IVAR___CSFGMAnalyticsProvider_dataStore], v12);
  *(void *)(v0 + 40) = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16))(boxed_opaque_existential_1, v11, v9);
  (*(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v13 + 8))(v0 + 16, 0xD00000000000001ALL, 0x80000001A8D64EE0, v12, v13);
  sub_1A8C8DE74(v0 + 16, (uint64_t *)&unk_1EB5EA170);

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v9);
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v16 = *(void *)(v0 + 136);
  return v15(v16);
}

uint64_t sub_1A8D1B580()
{
  uint64_t v16 = v0;
  id v1 = *(void **)(v0 + 144);

  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1A8D59A60();
  os_log_type_t v5 = sub_1A8D59F00();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = *(void **)(v0 + 144);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = v14;
    *(_DWORD *)uint64_t v7 = 136315394;
    *(void *)(v0 + 48) = sub_1A8C90120(0xD00000000000001CLL, 0x80000001A8D66840, &v15);
    sub_1A8D59FE0();
    *(_WORD *)(v7 + 12) = 2112;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 56) = v10;
    sub_1A8D59FE0();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_1A8C7F000, v4, v5, "%s Unable to get ticket with error: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v14, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 144);
  }
  swift_willThrow();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1A8D1B7B4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return MEMORY[0x1F4188298](sub_1A8D1B844, 0, 0);
}

uint64_t sub_1A8D1B844()
{
  uint64_t v21 = v0;
  v20[1] = *MEMORY[0x1E4F143B8];
  id v1 = (id)MobileGestalt_get_current_device();
  if (!v1) {
    __break(1u);
  }
  uint64_t v2 = v1;
  int deviceSupportsGenerativeModelSystems = MobileGestalt_get_deviceSupportsGenerativeModelSystems();

  if (deviceSupportsGenerativeModelSystems)
  {
    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1A8D59A80();
    v0[11] = __swift_project_value_buffer(v4, (uint64_t)qword_1EB5EAEE0);
    os_log_type_t v5 = sub_1A8D59A60();
    os_log_type_t v6 = sub_1A8D59F00();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      v20[0] = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      v0[8] = sub_1A8C90120(0xD000000000000025, 0x80000001A8D667C0, v20);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v5, v6, "%s Attempting to get ticket status from cache.", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v8, -1, -1);
      MEMORY[0x1AD0E6EB0](v7, -1, -1);
    }

    v0[12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
    id v9 = (void *)swift_task_alloc();
    v0[13] = v9;
    *id v9 = v0;
    v9[1] = sub_1A8D1BC60;
    uint64_t v11 = v0[9];
    uint64_t v10 = v0[10];
    return sub_1A8D0AB0C(v11, v10);
  }
  else
  {
    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1A8D59A80();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EB5EAEE0);
    uint64_t v14 = sub_1A8D59A60();
    os_log_type_t v15 = sub_1A8D59F00();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v20[0] = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      v0[2] = sub_1A8C90120(0xD000000000000025, 0x80000001A8D667C0, v20);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v14, v15, "%s Device is not eligible.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v17, -1, -1);
      MEMORY[0x1AD0E6EB0](v16, -1, -1);
    }

    sub_1A8C8C7B0();
    swift_allocError();
    *os_log_type_t v18 = 12;
    swift_willThrow();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
}

uint64_t sub_1A8D1BC60(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1A8D1C010;
  }
  else
  {

    uint64_t v4 = sub_1A8D1BDB0;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1A8D1BDB0()
{
  uint64_t v13 = v0;
  v12[1] = *MEMORY[0x1E4F143B8];
  id v1 = *(id *)(v0 + 112);
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v11 = *(void *)(v0 + 112);
    uint64_t v4 = swift_slowAlloc();
    os_log_type_t v5 = (void *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    v12[0] = v6;
    *(_DWORD *)uint64_t v4 = 136315394;
    *(void *)(v0 + 40) = sub_1A8C90120(0xD000000000000025, 0x80000001A8D667C0, v12);
    sub_1A8D59FE0();
    *(_WORD *)(v4 + 12) = 2112;
    if (v11)
    {
      *(void *)(v0 + 56) = v1;
      id v7 = v1;
    }
    else
    {
      *(void *)(v0 + 48) = 0;
    }
    sub_1A8D59FE0();
    *os_log_type_t v5 = *(void *)(v0 + 112);

    _os_log_impl(&dword_1A8C7F000, v2, v3, "%s Returning ticket: %@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v5, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v6, -1, -1);
    MEMORY[0x1AD0E6EB0](v4, -1, -1);
  }
  else
  {
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v9 = *(void *)(v0 + 112);
  return v8(v9);
}

uint64_t sub_1A8D1C010()
{
  uint64_t v16 = v0;
  v15[1] = *MEMORY[0x1E4F143B8];
  id v1 = *(void **)(v0 + 120);

  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1A8D59A60();
  os_log_type_t v5 = sub_1A8D59F00();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 120);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v15[0] = v14;
    *(_DWORD *)uint64_t v7 = 136315394;
    *(void *)(v0 + 24) = sub_1A8C90120(0xD000000000000025, 0x80000001A8D667C0, v15);
    sub_1A8D59FE0();
    *(_WORD *)(v7 + 12) = 2112;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 32) = v10;
    sub_1A8D59FE0();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_1A8C7F000, v4, v5, "%s Unable to get ticket with error: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v14, -1, -1);
    MEMORY[0x1AD0E6EB0](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 120);
  }
  swift_willThrow();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1A8D1C274(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return MEMORY[0x1F4188298](sub_1A8D1C294, 0, 0);
}

uint64_t sub_1A8D1C294()
{
  os_log_type_t v30 = v0;
  id v1 = (id)MobileGestalt_get_current_device();
  if (!v1)
  {
    __break(1u);
    return MEMORY[0x1F4188160](v1, v2, v3, v4, v5, v6, v7, v8);
  }
  id v9 = v1;
  int deviceSupportsGenerativeModelSystems = MobileGestalt_get_deviceSupportsGenerativeModelSystems();

  if (deviceSupportsGenerativeModelSystems)
  {
    if (qword_1EB5EAEF8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1A8D59A80();
    v0[15] = __swift_project_value_buffer(v11, (uint64_t)qword_1EB5EAEE0);
    uint64_t v12 = sub_1A8D59A60();
    os_log_type_t v13 = sub_1A8D59F00();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v29[0] = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      v0[12] = sub_1A8C90120(0xD000000000000016, 0x80000001A8D66760, v29);
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v12, v13, "%s Attempting to create new ticket.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v15, -1, -1);
      MEMORY[0x1AD0E6EB0](v14, -1, -1);
    }

    uint64_t v17 = v0[13];
    uint64_t v16 = v0[14];
    id v18 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
    v0[16] = v18;
    uint64_t v19 = (void *)swift_task_alloc();
    v0[17] = v19;
    uint64_t v19[2] = v18;
    v19[3] = v17;
    v19[4] = v16;
    uint64_t v20 = (void *)swift_task_alloc();
    v0[18] = v20;
    uint64_t v8 = type metadata accessor for Ticket();
    *uint64_t v20 = v0;
    v20[1] = sub_1A8D1C6D4;
    unint64_t v5 = 0x80000001A8D66760;
    uint64_t v6 = sub_1A8D1E028;
    id v1 = v0 + 6;
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = 0xD000000000000016;
    uint64_t v7 = v19;
    return MEMORY[0x1F4188160](v1, v2, v3, v4, v5, v6, v7, v8);
  }
  if (qword_1EB5EAEF8 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1A8D59A80();
  __swift_project_value_buffer(v21, (uint64_t)qword_1EB5EAEE0);
  uint64_t v22 = sub_1A8D59A60();
  os_log_type_t v23 = sub_1A8D59F00();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v29[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    v0[9] = sub_1A8C90120(0xD000000000000016, 0x80000001A8D66760, v29);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v22, v23, "%s Device is not eligible.", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v25, -1, -1);
    MEMORY[0x1AD0E6EB0](v24, -1, -1);
  }

  sub_1A8C8C7B0();
  swift_allocError();
  *uint64_t v26 = 12;
  swift_willThrow();
  char v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_1A8D1C6D4()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8D1CB40;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A8D1C7F0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8D1C7F0()
{
  uint64_t v18 = v0;

  id v1 = *(id *)(v0 + 48);
  uint64_t v2 = sub_1A8D59A60();
  os_log_type_t v3 = sub_1A8D59F00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = v16;
    *(_DWORD *)uint64_t v4 = 136315394;
    *(void *)(v0 + 80) = sub_1A8C90120(0xD000000000000016, 0x80000001A8D66760, &v17);
    sub_1A8D59FE0();
    *(_WORD *)(v4 + 12) = 2112;
    *(void *)(v0 + 88) = v1;
    id v5 = v1;
    sub_1A8D59FE0();
    void *v15 = v1;

    _os_log_impl(&dword_1A8C7F000, v2, v3, "%s Returning ticket: %@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v15, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v16, -1, -1);
    MEMORY[0x1AD0E6EB0](v4, -1, -1);
  }
  else
  {
  }
  uint64_t v6 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GMAnalyticsProvider()), sel_init);
  uint64_t v7 = sub_1A8D596F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = swift_task_alloc();
  sub_1A8D596D0();
  uint64_t v10 = *(void *)&v6[OBJC_IVAR___CSFGMAnalyticsProvider_dataStore + 24];
  uint64_t v11 = *(void *)&v6[OBJC_IVAR___CSFGMAnalyticsProvider_dataStore + 32];
  __swift_project_boxed_opaque_existential_1(&v6[OBJC_IVAR___CSFGMAnalyticsProvider_dataStore], v10);
  *(void *)(v0 + 40) = v7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16))(boxed_opaque_existential_1, v9, v7);
  (*(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v11 + 8))(v0 + 16, 0xD00000000000001ALL, 0x80000001A8D64EE0, v10, v11);
  sub_1A8C8DE74(v0 + 16, (uint64_t *)&unk_1EB5EA170);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v7);
  swift_task_dealloc();
  os_log_type_t v13 = *(uint64_t (**)(id))(v0 + 8);
  return v13(v1);
}

uint64_t sub_1A8D1CB40()
{
  uint64_t v17 = v0;
  id v1 = (void *)v0[19];
  uint64_t v2 = (void *)v0[16];
  swift_task_dealloc();

  id v3 = v1;
  id v4 = v1;
  id v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59F00();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (void *)v0[19];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = v15;
    *(_DWORD *)uint64_t v8 = 136315394;
    v0[7] = sub_1A8C90120(0xD000000000000016, 0x80000001A8D66760, &v16);
    sub_1A8D59FE0();
    *(_WORD *)(v8 + 12) = 2112;
    id v10 = v7;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v11;
    sub_1A8D59FE0();
    *uint64_t v9 = v11;

    _os_log_impl(&dword_1A8C7F000, v5, v6, "%s Unable to get ticket with error: %@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v15, -1, -1);
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
  }
  else
  {
    uint64_t v12 = (void *)v0[19];
  }
  swift_willThrow();
  os_log_type_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

void sub_1A8D1CD7C(uint64_t a1)
{
  sub_1A8D0C454(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1A8D1CD88()
{
  return MEMORY[0x1F4188298](sub_1A8D1CDA4, 0, 0);
}

uint64_t sub_1A8D1CDA4()
{
  id v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  v0[2] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 1;
  id v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *id v3 = v0;
  uint64_t v4 = MEMORY[0x1E4FBC848];
  v3[1] = sub_1A8D1CEB4;
  return MEMORY[0x1F4188160](v3, 0, 0, 0xD000000000000012, 0x80000001A8D66700, sub_1A8D1E01C, v2, v4 + 8);
}

uint64_t sub_1A8D1CEB4()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8D1E1C0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A8D1E1FC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8D1CFD0()
{
  return MEMORY[0x1F4188298](sub_1A8D1CFEC, 0, 0);
}

uint64_t sub_1A8D1CFEC()
{
  id v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  v0[2] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 1;
  id v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *id v3 = v0;
  v3[1] = sub_1A8D17328;
  uint64_t v4 = MEMORY[0x1E4FBB390];
  return MEMORY[0x1F4188160](v0 + 6, 0, 0, 0xD00000000000001BLL, 0x80000001A8D66720, sub_1A8D1E010, v2, v4);
}

uint64_t sub_1A8D1D10C()
{
  return MEMORY[0x1F4188298](sub_1A8D1D128, 0, 0);
}

uint64_t sub_1A8D1D128()
{
  id v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  v0[2] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  id v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *id v3 = v0;
  v3[1] = sub_1A8D1D248;
  uint64_t v4 = MEMORY[0x1E4FBB390];
  return MEMORY[0x1F4188160](v0 + 6, 0, 0, 0x546E4974704F6D67, 0xEF2928656C67676FLL, sub_1A8D1E008, v2, v4);
}

uint64_t sub_1A8D1D248()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8D1D3CC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A8D1D364;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8D1D364()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1A8D1D3CC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t sub_1A8D1D438()
{
  return MEMORY[0x1F4188298](sub_1A8D1D454, 0, 0);
}

uint64_t sub_1A8D1D454()
{
  id v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  v0[2] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  id v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *id v3 = v0;
  v3[1] = sub_1A8D1D564;
  uint64_t v4 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188160](v3, 0, 0, 0x736F506563726F66, 0xEE00292855464374, sub_1A8D1E000, v2, v4);
}

uint64_t sub_1A8D1D564()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A8D1D680;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A8D1E1FC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8D1D680()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1A8D1D6E8()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1A8C81A88;
  uint64_t v4 = (uint64_t (*)(const void *))((char *)&dword_1E979F458 + dword_1E979F458);
  return v4(v2);
}

uint64_t sub_1A8D1D79C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_1A8C81A88;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E979F478 + dword_1E979F478);
  return v6(a1, v4);
}

uint64_t sub_1A8D1D854()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1A8C81A88;
  uint64_t v4 = (uint64_t (*)(const void *))((char *)&dword_1E979F488 + dword_1E979F488);
  return v4(v2);
}

uint64_t sub_1A8D1D908()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1A8C81A88;
  uint64_t v4 = (uint64_t (*)(const void *))((char *)&dword_1E979F4A8 + dword_1E979F4A8);
  return v4(v2);
}

uint64_t sub_1A8D1D9BC()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1A8C81A88;
  uint64_t v4 = (uint64_t (*)(const void *))((char *)&dword_1E979F4C8 + dword_1E979F4C8);
  return v4(v2);
}

uint64_t sub_1A8D1DA70()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A8D1DAA8()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1A8C81A88;
  uint64_t v4 = (uint64_t (*)(const void *))((char *)&dword_1E979F4E8 + dword_1E979F4E8);
  return v4(v2);
}

uint64_t sub_1A8D1DB5C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1A8C81994;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1E979F470 + dword_1E979F470);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1A8D1DC28()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1A8C81A88;
  uint64_t v4 = (uint64_t (*)(const void *))((char *)&dword_1E979F508 + dword_1E979F508);
  return v4(v2);
}

uint64_t sub_1A8D1DCE0()
{
  uint64_t v2 = *(void *)(v0 + 16);
  id v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1A8C81A88;
  uint64_t v5 = (uint64_t (*)(int, void *))((char *)&dword_1E979F528 + dword_1E979F528);
  return v5(v2, v3);
}

uint64_t sub_1A8D1DDA0()
{
  uint64_t v2 = *(void *)(v0 + 16);
  id v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1A8C81A88;
  uint64_t v5 = (uint64_t (*)(int, void *))((char *)&dword_1E979F548 + dword_1E979F548);
  return v5(v2, v3);
}

uint64_t sub_1A8D1DE60()
{
  uint64_t v2 = *(void *)(v0 + 16);
  id v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1A8C81A88;
  uint64_t v5 = (uint64_t (*)(int, void *))((char *)&dword_1E979F568 + dword_1E979F568);
  return v5(v2, v3);
}

uint64_t sub_1A8D1DF1C()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t objectdestroy_11Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A8D1DF98()
{
  return sub_1A8D15178(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1A8D1DFA8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

id sub_1A8D1DFB8(id a1)
{
  return a1;
}

uint64_t sub_1A8D1DFC4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A8D1E000(uint64_t a1)
{
  return sub_1A8D0DF68(a1, *(void *)(v1 + 16));
}

uint64_t sub_1A8D1E008(uint64_t a1)
{
  return sub_1A8D0D8B0(a1, *(void *)(v1 + 16));
}

void sub_1A8D1E010(uint64_t a1)
{
  sub_1A8D0CEB0(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

void sub_1A8D1E01C(uint64_t a1)
{
  sub_1A8D0C974(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

void sub_1A8D1E028(uint64_t a1)
{
  sub_1A8D0B860(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1A8D1E034()
{
  unint64_t result = qword_1EB5E9DC0;
  if (!qword_1EB5E9DC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB5E9DC0);
  }
  return result;
}

uint64_t sub_1A8D1E074()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1A8D1E0BC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_1A8C81A88;
  *(void *)(v5 + 160) = v4;
  *(_OWORD *)(v5 + 144) = v6;
  *(void *)(v5 + 128) = v2;
  *(void *)(v5 + 136) = v3;
  return MEMORY[0x1F4188298](sub_1A8D152D0, 0, 0);
}

uint64_t sub_1A8D1E180()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t static AvailabilityStatus.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(unsigned __int8 *)(a2 + 8);
  unsigned int v3 = (*(void *)a1 == *(void *)a2) & ~v2;
  if (*(void *)a2) {
    unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  }
  else {
    unsigned int v4 = 0;
  }
  if (*(void *)a2) {
    unsigned int v2 = 0;
  }
  if (*(void *)a1) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = v2;
  }
  if (*(unsigned char *)(a1 + 8) == 1) {
    return v5;
  }
  else {
    return v3;
  }
}

uint64_t AvailabilityStatus.unavailabilityReasons.getter()
{
  if (v0[8]) {
    return 0;
  }
  else {
    return *(void *)v0;
  }
}

void static AvailabilityStatus.current.getter(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_currentAvailability);
  id v3 = objc_msgSend(v2, sel_status);
  uint64_t v4 = (uint64_t)v3;
  if (!v3) {
    goto LABEL_4;
  }
  if (v3 == (id)2)
  {
    uint64_t v4 = (uint64_t)objc_msgSend(v2, sel_unavailabiltyReasons);
    int v5 = 0;
  }
  else
  {
    if (v3 == (id)1)
    {
LABEL_4:
      int v5 = 1;
      goto LABEL_7;
    }
    int v5 = 0;
    uint64_t v4 = 512;
  }
LABEL_7:

  if (qword_1E979E470 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1A8D59A80();
  __swift_project_value_buffer(v6, (uint64_t)qword_1E979F060);
  uint64_t v7 = sub_1A8D59A60();
  os_log_type_t v8 = sub_1A8D59F00();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v13 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    if (v5)
    {
      if (v4) {
        uint64_t v11 = 0x646574696D696CLL;
      }
      else {
        uint64_t v11 = 0x6C62616C69617661;
      }
      if (v4) {
        unint64_t v12 = 0xE700000000000000;
      }
      else {
        unint64_t v12 = 0xE900000000000065;
      }
    }
    else
    {
      sub_1A8D5A0C0();
      swift_bridgeObjectRelease();
      CSFUnavailabilityReasons.description.getter(v4);
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      uint64_t v11 = 0xD000000000000016;
      unint64_t v12 = 0x80000001A8D635E0;
    }
    sub_1A8C90120(v11, v12, &v13);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A8C7F000, v7, v8, "[sync] Fetched current AvailabilityStatus: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
  }

  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
}

uint64_t static AvailabilityStatus.current()(uint64_t a1)
{
  *(void *)(v1 + 128) = a1;
  return MEMORY[0x1F4188298](sub_1A8D1E4FC, 0, 0);
}

uint64_t sub_1A8D1E4FC()
{
  uint64_t v1 = self;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1A8D1E604;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A8CD9998;
  v0[13] = &block_descriptor_4;
  v0[14] = v2;
  objc_msgSend(v1, sel_currentAvailabilityWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A8D1E604()
{
  return MEMORY[0x1F4188298](sub_1A8D1E6E4, 0, 0);
}

uint64_t sub_1A8D1E6E4()
{
  uint64_t v16 = v0;
  uint64_t v1 = (void *)v0[15];
  id v2 = objc_msgSend(v1, sel_status);
  uint64_t v3 = (uint64_t)v2;
  if (!v2) {
    goto LABEL_4;
  }
  if (v2 == (id)2)
  {
    uint64_t v3 = (uint64_t)objc_msgSend(v1, sel_unavailabiltyReasons);
    int v4 = 0;
  }
  else
  {
    if (v2 == (id)1)
    {
LABEL_4:
      int v4 = 1;
      goto LABEL_7;
    }
    int v4 = 0;
    uint64_t v3 = 512;
  }
LABEL_7:

  if (qword_1E979E470 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1A8D59A80();
  __swift_project_value_buffer(v5, (uint64_t)qword_1E979F060);
  uint64_t v6 = sub_1A8D59A60();
  os_log_type_t v7 = sub_1A8D59F00();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v15[0] = v9;
    *(_DWORD *)os_log_type_t v8 = 136446210;
    if (v4)
    {
      if (v3) {
        uint64_t v10 = 0x646574696D696CLL;
      }
      else {
        uint64_t v10 = 0x6C62616C69617661;
      }
      if (v3) {
        unint64_t v11 = 0xE700000000000000;
      }
      else {
        unint64_t v11 = 0xE900000000000065;
      }
    }
    else
    {
      sub_1A8D5A0C0();
      swift_bridgeObjectRelease();
      v15[1] = 0xD000000000000016;
      uint64_t v15[2] = 0x80000001A8D635E0;
      CSFUnavailabilityReasons.description.getter(v3);
      sub_1A8D59CA0();
      swift_bridgeObjectRelease();
      uint64_t v10 = 0xD000000000000016;
      unint64_t v11 = 0x80000001A8D635E0;
    }
    v0[10] = sub_1A8C90120(v10, v11, v15);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A8C7F000, v6, v7, "[async] Fetched current AvailabilityStatus: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
    MEMORY[0x1AD0E6EB0](v8, -1, -1);
  }

  uint64_t v12 = v0[16];
  *(void *)uint64_t v12 = v3;
  *(unsigned char *)(v12 + 8) = v4;
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t AvailabilityStatus.description.getter()
{
  uint64_t v1 = *v0;
  if (*((unsigned char *)v0 + 8) == 1)
  {
    if (v1) {
      return 0x646574696D696CLL;
    }
    else {
      return 0x6C62616C69617661;
    }
  }
  else
  {
    sub_1A8D5A0C0();
    swift_bridgeObjectRelease();
    CSFUnavailabilityReasons.description.getter(v1);
    sub_1A8D59CA0();
    swift_bridgeObjectRelease();
    return 0xD000000000000016;
  }
}

uint64_t AvailabilityStatus.hash(into:)()
{
  if (*(unsigned char *)(v0 + 8) != 1) {
    sub_1A8D5A4B0();
  }
  return sub_1A8D5A4B0();
}

uint64_t sub_1A8D1EAA4(uint64_t a1)
{
  unint64_t v2 = sub_1A8D1F7F0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8D1EAE0(uint64_t a1)
{
  unint64_t v2 = sub_1A8D1F7F0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A8D1EB1C(uint64_t a1)
{
  unint64_t v2 = sub_1A8D1F6F4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8D1EB58(uint64_t a1)
{
  unint64_t v2 = sub_1A8D1F6F4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A8D1EB94(uint64_t a1)
{
  unint64_t v2 = sub_1A8D1F79C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8D1EBD0(uint64_t a1)
{
  unint64_t v2 = sub_1A8D1F79C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A8D1EC0C(uint64_t a1)
{
  unint64_t v2 = sub_1A8D1F748();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8D1EC48(uint64_t a1)
{
  unint64_t v2 = sub_1A8D1F748();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AvailabilityStatus.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F5C0);
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  MEMORY[0x1F4188790](v4, v5);
  os_log_type_t v30 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F5C8);
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  MEMORY[0x1F4188790](v7, v8);
  char v27 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F5D0);
  uint64_t v25 = *(void *)(v10 - 8);
  uint64_t v26 = v10;
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F5D8);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *v2;
  int v20 = *((unsigned __int8 *)v2 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8D1F6F4();
  sub_1A8D5A510();
  if (v20 == 1)
  {
    if (v19)
    {
      char v35 = 1;
      sub_1A8D1F79C();
      uint64_t v21 = v27;
      sub_1A8D5A2E0();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v29);
    }
    else
    {
      char v34 = 0;
      sub_1A8D1F7F0();
      sub_1A8D5A2E0();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  else
  {
    char v36 = 2;
    sub_1A8D1F748();
    uint64_t v22 = v30;
    sub_1A8D5A2E0();
    uint64_t v33 = v19;
    type metadata accessor for UnavailabilityReasons(0);
    sub_1A8C9E5F4(&qword_1E979EE60);
    uint64_t v23 = v32;
    sub_1A8D5A340();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
}

uint64_t AvailabilityStatus.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A8D5A4A0();
  if (v1 != 1) {
    sub_1A8D5A4B0();
  }
  sub_1A8D5A4B0();
  return sub_1A8D5A4D0();
}

uint64_t AvailabilityStatus.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F600);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  uint64_t v43 = v4;
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v46 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F608);
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F610);
  uint64_t v45 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F618);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v17);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  uint64_t v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_1A8D1F6F4();
  uint64_t v21 = v48;
  sub_1A8D5A4F0();
  if (!v21)
  {
    uint64_t v39 = v11;
    uint64_t v23 = v45;
    uint64_t v22 = v46;
    uint64_t v48 = v16;
    uint64_t v24 = sub_1A8D5A2C0();
    if (*(void *)(v24 + 16) == 1)
    {
      if (*(unsigned char *)(v24 + 32))
      {
        if (*(unsigned char *)(v24 + 32) != 1)
        {
          char v52 = 2;
          sub_1A8D1F748();
          sub_1A8D5A230();
          uint64_t v31 = v15;
          uint64_t v32 = v44;
          type metadata accessor for UnavailabilityReasons(0);
          sub_1A8C9E5F4(&qword_1E979EEA0);
          char v34 = v22;
          uint64_t v35 = v42;
          sub_1A8D5A2B0();
          (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v35);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v31);
          char v36 = 0;
          uint64_t v25 = v49;
          uint64_t v37 = (uint64_t)v47;
LABEL_12:
          *(void *)uint64_t v32 = v25;
          *(unsigned char *)(v32 + 8) = v36;
          return __swift_destroy_boxed_opaque_existential_0(v37);
        }
        char v51 = 1;
        sub_1A8D1F79C();
        sub_1A8D5A230();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v41);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v15);
        uint64_t v25 = 1;
      }
      else
      {
        char v50 = 0;
        sub_1A8D1F7F0();
        sub_1A8D5A230();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v39);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v15);
        uint64_t v25 = 0;
      }
      char v36 = 1;
      uint64_t v37 = (uint64_t)v47;
      uint64_t v32 = v44;
      goto LABEL_12;
    }
    uint64_t v26 = sub_1A8D5A120();
    swift_allocError();
    char v27 = v19;
    uint64_t v28 = v15;
    os_log_type_t v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E979EE98);
    *os_log_type_t v30 = &type metadata for AvailabilityStatus;
    sub_1A8D5A240();
    sub_1A8D5A110();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v30, *MEMORY[0x1E4FBBA70], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v27, v28);
  }
  uint64_t v37 = (uint64_t)v47;
  return __swift_destroy_boxed_opaque_existential_0(v37);
}

uint64_t sub_1A8D1F6C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AvailabilityStatus.init(from:)(a1, a2);
}

uint64_t sub_1A8D1F6D8(void *a1)
{
  return AvailabilityStatus.encode(to:)(a1);
}

unint64_t sub_1A8D1F6F4()
{
  unint64_t result = qword_1E979F5E0;
  if (!qword_1E979F5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F5E0);
  }
  return result;
}

unint64_t sub_1A8D1F748()
{
  unint64_t result = qword_1E979F5E8;
  if (!qword_1E979F5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F5E8);
  }
  return result;
}

unint64_t sub_1A8D1F79C()
{
  unint64_t result = qword_1E979F5F0;
  if (!qword_1E979F5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F5F0);
  }
  return result;
}

unint64_t sub_1A8D1F7F0()
{
  unint64_t result = qword_1E979F5F8;
  if (!qword_1E979F5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F5F8);
  }
  return result;
}

unint64_t sub_1A8D1F848()
{
  unint64_t result = qword_1E979F620;
  if (!qword_1E979F620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F620);
  }
  return result;
}

ValueMetadata *type metadata accessor for AvailabilityStatus()
{
  return &type metadata for AvailabilityStatus;
}

unsigned char *storeEnumTagSinglePayload for AvailabilityStatus.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8D1F978);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AvailabilityStatus.CodingKeys()
{
  return &type metadata for AvailabilityStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for AvailabilityStatus.AvailableCodingKeys()
{
  return &type metadata for AvailabilityStatus.AvailableCodingKeys;
}

ValueMetadata *type metadata accessor for AvailabilityStatus.LimitedCodingKeys()
{
  return &type metadata for AvailabilityStatus.LimitedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AvailabilityStatus.UnavailableCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A8D1FA6CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AvailabilityStatus.UnavailableCodingKeys()
{
  return &type metadata for AvailabilityStatus.UnavailableCodingKeys;
}

unint64_t sub_1A8D1FAA8()
{
  unint64_t result = qword_1E979F628;
  if (!qword_1E979F628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F628);
  }
  return result;
}

unint64_t sub_1A8D1FB00()
{
  unint64_t result = qword_1E979F630;
  if (!qword_1E979F630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F630);
  }
  return result;
}

unint64_t sub_1A8D1FB58()
{
  unint64_t result = qword_1E979F638;
  if (!qword_1E979F638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F638);
  }
  return result;
}

unint64_t sub_1A8D1FBB0()
{
  unint64_t result = qword_1E979F640;
  if (!qword_1E979F640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F640);
  }
  return result;
}

unint64_t sub_1A8D1FC08()
{
  unint64_t result = qword_1E979F648;
  if (!qword_1E979F648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F648);
  }
  return result;
}

unint64_t sub_1A8D1FC60()
{
  unint64_t result = qword_1E979F650;
  if (!qword_1E979F650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F650);
  }
  return result;
}

unint64_t sub_1A8D1FCB8()
{
  unint64_t result = qword_1E979F658;
  if (!qword_1E979F658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F658);
  }
  return result;
}

unint64_t sub_1A8D1FD10()
{
  unint64_t result = qword_1E979F660;
  if (!qword_1E979F660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F660);
  }
  return result;
}

unint64_t sub_1A8D1FD68()
{
  unint64_t result = qword_1E979F668;
  if (!qword_1E979F668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F668);
  }
  return result;
}

unint64_t sub_1A8D1FDC0()
{
  unint64_t result = qword_1E979F670;
  if (!qword_1E979F670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F670);
  }
  return result;
}

uint64_t sub_1A8D1FE14(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v3;
  return MEMORY[0x1F4188298](sub_1A8D1FE38, 0, 0);
}

uint64_t sub_1A8D1FE38()
{
  int v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1A8D1FF34;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A8CFAECC;
  v0[13] = &block_descriptor_5;
  v0[14] = v2;
  objc_msgSend(v1, sel_configurationWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A8D1FF34()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_1A8D200BC;
  }
  else {
    uint64_t v2 = sub_1A8D20044;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8D20044()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = (void *)v0[16];
  v2[3] = sub_1A8D22C74();
  v2[4] = &off_1EFF55288;
  *uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1A8D200BC()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A8D20128()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)sub_1A8D59BC0();
  id v3 = objc_msgSend(v1, sel__urlStringForKey_, v2);

  if (!v3) {
    return 0;
  }
  uint64_t v4 = sub_1A8D59BF0();

  return v4;
}

uint64_t sub_1A8D201A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1A8D201BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_1A8D201D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 24) + **(int **)(a4 + 24));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1A8C999B8;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1A8D202DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t sub_1A8D202F0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1A8D20304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1A8D20318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_1A8D2032C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_1A8D20340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_1A8D20354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t sub_1A8D20368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A8C81994;
  return v9(a1, a2, a3);
}

uint64_t sub_1A8D20470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1A8D20484(uint64_t a1, uint64_t a2)
{
  v3[24] = a2;
  v3[25] = v2;
  v3[23] = a1;
  return MEMORY[0x1F4188298](sub_1A8D204A8, 0, 0);
}

uint64_t sub_1A8D204A8()
{
  uint64_t v1 = v0[25];
  v0[26] = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  v0[27] = v2;
  uint64_t ObjectType = swift_getObjectType();
  v0[28] = ObjectType;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 24) + **(int **)(v2 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[29] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1A8D205C0;
  uint64_t v6 = v0[23];
  uint64_t v5 = v0[24];
  return v8(v6, v5, ObjectType, v2);
}

uint64_t sub_1A8D205C0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 240) = a2;
    *(void *)(v6 + 248) = a1;
    return MEMORY[0x1F4188298](sub_1A8D2071C, 0, 0);
  }
}

uint64_t sub_1A8D2071C()
{
  uint64_t v1 = v0[30];
  if (v1)
  {
    uint64_t v2 = v0[31];
LABEL_3:
    uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v3(v2, v1);
  }
  uint64_t v5 = v0[25] + 72;
  swift_beginAccess();
  sub_1A8CB249C(v5, (uint64_t)(v0 + 2), &qword_1EB5E9DA8);
  uint64_t v6 = v0[5];
  sub_1A8C8DE74((uint64_t)(v0 + 2), &qword_1EB5E9DA8);
  if (v6)
  {
    uint64_t v7 = v0[25];
    if (*(void *)(v7 + 96))
    {
      uint64_t v8 = v0[23];
      uint64_t v9 = v0[24];
      sub_1A8C91CA8(v7 + 72, (uint64_t)(v0 + 12));
      uint64_t v10 = v0[15];
      uint64_t v11 = v0[16];
      __swift_project_boxed_opaque_existential_1(v0 + 12, v10);
      uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(v8, v9, v10, v11);
      uint64_t v1 = v12;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 12));
      if (v1)
      {
        (*(void (**)(uint64_t, uint64_t, void, void, void))(v0[27] + 32))(v2, v1, v0[23], v0[24], v0[28]);
        goto LABEL_3;
      }
    }
    sub_1A8C8C7B0();
    swift_allocError();
    *uint64_t v17 = 5;
    swift_willThrow();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
  else
  {
    uint64_t v13 = (void *)v0[25];
    uint64_t v14 = v13[7];
    uint64_t v15 = v13[8];
    __swift_project_boxed_opaque_existential_1(v13 + 4, v14);
    uint64_t v19 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v15 + 8) + **(int **)(v15 + 8));
    uint64_t v16 = (void *)swift_task_alloc();
    v0[32] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_1A8D209D8;
    return v19(v0 + 7, v14, v15);
  }
}

uint64_t sub_1A8D209D8()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A8D20C98;
  }
  else {
    uint64_t v2 = sub_1A8D20AEC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8D20AEC()
{
  uint64_t v1 = v0[25] + 72;
  swift_beginAccess();
  sub_1A8D228CC((uint64_t)(v0 + 7), v1);
  swift_endAccess();
  uint64_t v2 = v0[25];
  if (!*(void *)(v2 + 96)) {
    goto LABEL_6;
  }
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[24];
  sub_1A8C91CA8(v2 + 72, (uint64_t)(v0 + 12));
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[16];
  __swift_project_boxed_opaque_existential_1(v0 + 12, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(v3, v4, v5, v6);
  uint64_t v9 = v8;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 12));
  if (v9)
  {
    (*(void (**)(uint64_t, uint64_t, void, void, void))(v0[27] + 32))(v7, v9, v0[23], v0[24], v0[28]);
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v10(v7, v9);
  }
  else
  {
LABEL_6:
    sub_1A8C8C7B0();
    swift_allocError();
    *uint64_t v12 = 5;
    swift_willThrow();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_1A8D20C98()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A8D20CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, a3, ObjectType, v7);
}

uint64_t sub_1A8D20D20(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1A8D24A30;
  v6[24] = a2;
  v6[25] = v2;
  v6[23] = a1;
  return MEMORY[0x1F4188298](sub_1A8D204A8, 0, 0);
}

uint64_t sub_1A8D20DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 32))(a1, a2, a3, a4, ObjectType, v9);
}

uint64_t sub_1A8D20E5C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40))(ObjectType, v1);
}

uint64_t sub_1A8D20EA8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, ObjectType, v3);
}

uint64_t sub_1A8D20F00()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 64))(ObjectType, v1) & 1;
}

uint64_t sub_1A8D20F50(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 72))(a1, ObjectType, v3);
}

uint64_t sub_1A8D20FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v23 = a4;
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  sub_1A8D59530();
  swift_allocObject();
  sub_1A8D59520();
  sub_1A8D22A84();
  uint64_t v10 = sub_1A8D59510();
  unint64_t v12 = v11;
  uint64_t result = swift_release();
  if (!v7)
  {
    sub_1A8CB249C(v6 + 16, (uint64_t)v17, &qword_1EB5EAD60);
    uint64_t v14 = v18;
    if (v18)
    {
      uint64_t v15 = v19;
      __swift_project_boxed_opaque_existential_1(v17, v18);
      uint64_t v16[3] = MEMORY[0x1E4F277B8];
      v16[0] = v10;
      v16[1] = v12;
      uint64_t v24 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8);
      sub_1A8CA17BC(v10, v12);
      v24(v16, a5, a6, v14, v15);
      sub_1A8C93C98(v10, v12);
      sub_1A8C8DE74((uint64_t)v16, (uint64_t *)&unk_1EB5EA170);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
    }
    else
    {
      sub_1A8C93C98(v10, v12);
      return sub_1A8C8DE74((uint64_t)v17, &qword_1EB5EAD60);
    }
  }
  return result;
}

uint64_t sub_1A8D2111C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A8D59530();
  swift_allocObject();
  sub_1A8D59520();
  type metadata accessor for NextRefreshCacheBox();
  sub_1A8D22C30(&qword_1E979F6C0);
  uint64_t v7 = sub_1A8D59510();
  unint64_t v9 = v8;
  uint64_t result = swift_release();
  if (!v4)
  {
    sub_1A8CB249C(v3 + 16, (uint64_t)v14, &qword_1EB5EAD60);
    uint64_t v11 = v15;
    if (v15)
    {
      uint64_t v12 = v16;
      __swift_project_boxed_opaque_existential_1(v14, v15);
      void v13[3] = MEMORY[0x1E4F277B8];
      v13[0] = v7;
      v13[1] = v9;
      uint64_t v17 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8);
      sub_1A8CA17BC(v7, v9);
      v17(v13, a2, a3, v11, v12);
      sub_1A8C93C98(v7, v9);
      sub_1A8C8DE74((uint64_t)v13, (uint64_t *)&unk_1EB5EA170);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
    }
    else
    {
      sub_1A8C93C98(v7, v9);
      return sub_1A8C8DE74((uint64_t)v14, &qword_1EB5EAD60);
    }
  }
  return result;
}

uint64_t sub_1A8D212B0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = a3;
  char v19 = a1;
  uint64_t v20 = a2;
  sub_1A8D59530();
  swift_allocObject();
  sub_1A8D59520();
  sub_1A8D22A30();
  uint64_t v9 = sub_1A8D59510();
  unint64_t v11 = v10;
  uint64_t result = swift_release();
  if (!v6)
  {
    sub_1A8CB249C(v5 + 16, (uint64_t)v16, &qword_1EB5EAD60);
    uint64_t v13 = v17;
    if (v17)
    {
      uint64_t v14 = v18;
      __swift_project_boxed_opaque_existential_1(v16, v17);
      uint64_t v15[3] = MEMORY[0x1E4F277B8];
      v15[0] = v9;
      v15[1] = v11;
      uint64_t v22 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8);
      sub_1A8CA17BC(v9, v11);
      v22(v15, a4, a5, v13, v14);
      sub_1A8C93C98(v9, v11);
      sub_1A8C8DE74((uint64_t)v15, (uint64_t *)&unk_1EB5EA170);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    }
    else
    {
      sub_1A8C93C98(v9, v11);
      return sub_1A8C8DE74((uint64_t)v16, &qword_1EB5EAD60);
    }
  }
  return result;
}

uint64_t sub_1A8D21424(char a1, uint64_t a2, uint64_t a3)
{
  char v18 = a1;
  sub_1A8D59530();
  swift_allocObject();
  sub_1A8D59520();
  sub_1A8D22934();
  uint64_t v7 = sub_1A8D59510();
  unint64_t v9 = v8;
  uint64_t result = swift_release();
  if (!v4)
  {
    sub_1A8CB249C(v3 + 16, (uint64_t)v15, &qword_1EB5EAD60);
    uint64_t v11 = v16;
    if (v16)
    {
      uint64_t v12 = v17;
      __swift_project_boxed_opaque_existential_1(v15, v16);
      void v14[3] = MEMORY[0x1E4F277B8];
      v14[0] = v7;
      v14[1] = v9;
      uint64_t v13 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8);
      sub_1A8CA17BC(v7, v9);
      v13(v14, a2, a3, v11, v12);
      sub_1A8C93C98(v7, v9);
      sub_1A8C8DE74((uint64_t)v14, (uint64_t *)&unk_1EB5EA170);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
    }
    else
    {
      sub_1A8C93C98(v7, v9);
      return sub_1A8C8DE74((uint64_t)v15, &qword_1EB5EAD60);
    }
  }
  return result;
}

uint64_t sub_1A8D21594(uint64_t a1, uint64_t a2)
{
  sub_1A8CB249C(v2 + 16, (uint64_t)v12, &qword_1EB5EAD60);
  uint64_t v6 = v13;
  if (!v13)
  {
    sub_1A8C8DE74((uint64_t)v12, &qword_1EB5EAD60);
    return 0;
  }
  uint64_t v7 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6, v7);
  unint64_t v10 = v9;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  if (v10 >> 60 == 15) {
    return 0;
  }
  sub_1A8D59500();
  swift_allocObject();
  sub_1A8D594F0();
  sub_1A8D229DC();
  sub_1A8D594E0();
  if (v3)
  {
    swift_release();
    return sub_1A8C93C84(v8, v10);
  }
  else
  {
    sub_1A8C93C84(v8, v10);
    swift_release();
    return v15;
  }
}

uint64_t sub_1A8D216EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t RefreshCacheBox = type metadata accessor for NextRefreshCacheBox();
  MEMORY[0x1F4188790](RefreshCacheBox - 8, v8);
  unint64_t v10 = (char *)&v24[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A8D596F0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)&v24[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  MEMORY[0x1F4188790](v16 - 8, v17);
  char v19 = (char *)&v24[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8CB249C(a1, (uint64_t)v19, &qword_1EB5EACF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v19, 1, v11) == 1)
  {
    sub_1A8C8DE74((uint64_t)v19, &qword_1EB5EACF0);
    sub_1A8CB249C(v3 + 16, (uint64_t)v24, &qword_1EB5EAD60);
    uint64_t v20 = v25;
    if (v25)
    {
      uint64_t v21 = v26;
      __swift_project_boxed_opaque_existential_1(v24, v25);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 16))(a2, a3, v20, v21);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
    }
    else
    {
      return sub_1A8C8DE74((uint64_t)v24, &qword_1EB5EAD60);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v19, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v15, v11);
    sub_1A8D2111C((uint64_t)v10, a2, a3);
    sub_1A8D22B70((uint64_t)v10);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_1A8D21980(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return MEMORY[0x1F4188298](sub_1A8D219A4, 0, 0);
}

uint64_t sub_1A8D219A4()
{
  uint64_t v1 = v0[13] + 16;
  sub_1A8CB249C(v1, (uint64_t)(v0 + 2), &qword_1EB5EAD60);
  uint64_t v2 = v0[5];
  if (!v2) {
    goto LABEL_11;
  }
  uint64_t v4 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v5 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v3, v2, v5);
  unint64_t v8 = v7;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  if (v8 >> 60 != 15)
  {
    sub_1A8D59500();
    swift_allocObject();
    sub_1A8D594F0();
    sub_1A8D22B1C();
    sub_1A8D594E0();
    sub_1A8C93C84(v6, v8);
    swift_release();
    uint64_t v9 = v0[8];
    if (!v9)
    {
      uint64_t v10 = 0;
      goto LABEL_13;
    }
    uint64_t v10 = v0[7];
    uint64_t v11 = v0[13];
    if (*(void *)(v11 + 56) == v0[9] && v0[10] == *(void *)(v11 + 64) || (sub_1A8D5A390() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1A8D22AD8(v10, v9);
      goto LABEL_13;
    }
    sub_1A8D22AD8(v10, v9);
    sub_1A8CB249C(v1, (uint64_t)(v0 + 2), &qword_1EB5EAD60);
    uint64_t v12 = v0[5];
    if (v12)
    {
      uint64_t v14 = v0[11];
      uint64_t v13 = v0[12];
      uint64_t v15 = v0[6];
      __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v13, v12, v15);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
      goto LABEL_12;
    }
LABEL_11:
    sub_1A8C8DE74((uint64_t)(v0 + 2), &qword_1EB5EAD60);
  }
LABEL_12:
  uint64_t v10 = 0;
  uint64_t v9 = 0;
LABEL_13:
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v16(v10, v9);
}

uint64_t sub_1A8D21C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    uint64_t v10 = *(void *)(v4 + 56);
    uint64_t v9 = *(void *)(v4 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A8D20FA8(a1, a2, v10, v9, a3, a4);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A8CB249C(v4 + 16, (uint64_t)v14, &qword_1EB5EAD60);
    uint64_t v12 = v15;
    if (v15)
    {
      uint64_t v13 = v16;
      __swift_project_boxed_opaque_existential_1(v14, v15);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 16))(a3, a4, v12, v13);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
    }
    else
    {
      return sub_1A8C8DE74((uint64_t)v14, &qword_1EB5EAD60);
    }
  }
}

uint64_t sub_1A8D21D58()
{
  sub_1A8CB249C(v0 + 16, (uint64_t)v8, &qword_1EB5EAD60);
  uint64_t v1 = v9;
  if (v9)
  {
    uint64_t v2 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    uint64_t v3 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v2 + 32))(0xD000000000000012, 0x80000001A8D66C30, v1, v2);
    unint64_t v5 = v4;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
    if (v5 >> 60 != 15)
    {
      sub_1A8D59500();
      swift_allocObject();
      sub_1A8D594F0();
      sub_1A8D229DC();
      sub_1A8D594E0();
      sub_1A8C93C84(v3, v5);
      swift_release();
      if (v12)
      {
        uint64_t v6 = v11 & 1;
        swift_bridgeObjectRelease();
        return v6;
      }
    }
  }
  else
  {
    sub_1A8C8DE74((uint64_t)v8, &qword_1EB5EAD60);
  }
  return 2;
}

uint64_t sub_1A8D21EB4(char a1)
{
  if (a1 == 2)
  {
    sub_1A8CB249C(v1 + 16, (uint64_t)v10, &qword_1EB5EAD60);
    uint64_t v3 = v11;
    if (v11)
    {
      uint64_t v4 = v12;
      __swift_project_boxed_opaque_existential_1(v10, v11);
      (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v4 + 16))(0xD000000000000012, 0x80000001A8D66C30, v3, v4);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
    }
    else
    {
      return sub_1A8C8DE74((uint64_t)v10, &qword_1EB5EAD60);
    }
  }
  else
  {
    sub_1A8CB249C(v1 + 16, (uint64_t)v10, &qword_1EB5EAD60);
    uint64_t v6 = v11;
    if (v11)
    {
      uint64_t v7 = v12;
      __swift_project_boxed_opaque_existential_1(v10, v11);
      (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v7 + 16))(0xD000000000000019, 0x80000001A8D66C10, v6, v7);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
    }
    else
    {
      sub_1A8C8DE74((uint64_t)v10, &qword_1EB5EAD60);
    }
    uint64_t v8 = *(void *)(v1 + 56);
    uint64_t v9 = *(void *)(v1 + 64);
    swift_bridgeObjectRetain();
    sub_1A8D212B0(a1 & 1, v8, v9, 0xD000000000000012, 0x80000001A8D66C30);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A8D22054()
{
  sub_1A8CB249C(v0 + 16, (uint64_t)v11, &qword_1EB5EAD60);
  uint64_t v1 = v12;
  if (v12)
  {
    uint64_t v2 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v3 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v2 + 32))(0xD000000000000019, 0x80000001A8D66C10, v1, v2);
    unint64_t v5 = v4;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
    if (v5 >> 60 != 15)
    {
      sub_1A8D59500();
      swift_allocObject();
      sub_1A8D594F0();
      sub_1A8D22988();
      sub_1A8D594E0();
      sub_1A8C93C84(v3, v5);
      swift_release();
      if (v14) {
        goto LABEL_6;
      }
    }
  }
  else
  {
    sub_1A8C8DE74((uint64_t)v11, &qword_1EB5EAD60);
  }
  sub_1A8D21594(0xD000000000000012, 0x80000001A8D66C30);
  if (!v7)
  {
LABEL_6:
    char v8 = 1;
    return v8 & 1;
  }
  if (v6 == *(void *)(v0 + 56) && v7 == *(void *)(v0 + 64))
  {
    swift_bridgeObjectRelease();
    char v8 = 0;
  }
  else
  {
    char v10 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    char v8 = v10 ^ 1;
  }
  return v8 & 1;
}

uint64_t sub_1A8D22234@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F700);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  char v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t RefreshCacheBox = type metadata accessor for NextRefreshCacheBox();
  MEMORY[0x1F4188790](RefreshCacheBox - 8, v10);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8D243B4();
  sub_1A8D5A4F0();
  if (!v2)
  {
    uint64_t v13 = sub_1A8D596F0();
    v18[1] = v18;
    v18[0] = *(void *)(v13 - 8);
    MEMORY[0x1F4188790](v13, v14);
    uint64_t v16 = (char *)v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A8C93C40(&qword_1EB5EA168);
    sub_1A8D5A2B0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    (*(void (**)(char *, char *, uint64_t))(v18[0] + 32))(v12, v16, v13);
    sub_1A8D22BCC((uint64_t)v12, v19);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1A8D224A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v12[1] = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E96D8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8D24014();
  sub_1A8D5A510();
  char v14 = 0;
  sub_1A8D5A330();
  if (!v4)
  {
    char v13 = 1;
    sub_1A8D5A320();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1A8D2261C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[0] = a4;
  v13[1] = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F6D8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8D24068();
  sub_1A8D5A510();
  char v15 = 0;
  sub_1A8D5A320();
  if (!v5)
  {
    char v14 = 1;
    sub_1A8D5A320();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1A8D22794(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1A8C82290;
  v6[12] = a2;
  v6[13] = v2;
  v6[11] = a1;
  return MEMORY[0x1F4188298](sub_1A8D219A4, 0, 0);
}

uint64_t sub_1A8D22860(char a1)
{
  return sub_1A8D21424(a1, 0xD000000000000019, 0x80000001A8D66C10);
}

uint64_t sub_1A8D228CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A8D22934()
{
  unint64_t result = qword_1EB5E9580;
  if (!qword_1EB5E9580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9580);
  }
  return result;
}

unint64_t sub_1A8D22988()
{
  unint64_t result = qword_1EB5E9D50;
  if (!qword_1EB5E9D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9D50);
  }
  return result;
}

unint64_t sub_1A8D229DC()
{
  unint64_t result = qword_1EB5E9DA0;
  if (!qword_1EB5E9DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9DA0);
  }
  return result;
}

unint64_t sub_1A8D22A30()
{
  unint64_t result = qword_1EB5E94A0;
  if (!qword_1EB5E94A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E94A0);
  }
  return result;
}

unint64_t sub_1A8D22A84()
{
  unint64_t result = qword_1E979F6A8;
  if (!qword_1E979F6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E979F6A8);
  }
  return result;
}

uint64_t sub_1A8D22AD8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A8D22B1C()
{
  unint64_t result = qword_1E979F6B8;
  if (!qword_1E979F6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F6B8);
  }
  return result;
}

uint64_t sub_1A8D22B70(uint64_t a1)
{
  uint64_t RefreshCacheBox = type metadata accessor for NextRefreshCacheBox();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(RefreshCacheBox - 8) + 8))(a1, RefreshCacheBox);
  return a1;
}

uint64_t sub_1A8D22BCC(uint64_t a1, uint64_t a2)
{
  uint64_t RefreshCacheBox = type metadata accessor for NextRefreshCacheBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(RefreshCacheBox - 8) + 32))(a2, a1, RefreshCacheBox);
  return a2;
}

uint64_t sub_1A8D22C30(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NextRefreshCacheBox();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A8D22C74()
{
  unint64_t result = qword_1E979F6D0;
  if (!qword_1E979F6D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E979F6D0);
  }
  return result;
}

uint64_t sub_1A8D22CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8D596F0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_1A8D22D20(uint64_t a1)
{
  uint64_t v2 = sub_1A8D596F0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1A8D22D84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8D596F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A8D22DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8D596F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A8D22E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8D596F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A8D22EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8D596F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A8D22F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A8D22F28);
}

uint64_t sub_1A8D22F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8D596F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1A8D22F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A8D22FA8);
}

uint64_t sub_1A8D22FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A8D596F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1A8D23018()
{
  uint64_t result = sub_1A8D596F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for URLCacheBox()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for URLCacheBox(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for URLCacheBox(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for URLCacheBox(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for URLCacheBox()
{
  return &type metadata for URLCacheBox;
}

uint64_t destroy for SubscriptionStatusCacheBox()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s25CloudSubscriptionFeatures26SubscriptionStatusCacheBoxVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SubscriptionStatusCacheBox(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SubscriptionStatusCacheBox(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionStatusCacheBox(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionStatusCacheBox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStatusCacheBox()
{
  return &type metadata for SubscriptionStatusCacheBox;
}

unsigned char *storeEnumTagSinglePayload for BoolCacheBox(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8D23418);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BoolCacheBox()
{
  return &type metadata for BoolCacheBox;
}

uint64_t sub_1A8D23458()
{
  return 0x726665527478656ELL;
}

uint64_t sub_1A8D23478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x726665527478656ELL && a2 == 0xEB00000000687365)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A8D5A390();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A8D23528(uint64_t a1)
{
  unint64_t v2 = sub_1A8D243B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8D23564(uint64_t a1)
{
  unint64_t v2 = sub_1A8D243B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A8D235A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A8D22234(a1, a2);
}

uint64_t sub_1A8D235B8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F6F0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8D243B4();
  sub_1A8D5A510();
  sub_1A8D596F0();
  sub_1A8C93C40((unint64_t *)&unk_1EB5E92B0);
  sub_1A8D5A340();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_1A8D2370C()
{
  if (*v0) {
    return 0x496E6F6973736573;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_1A8D23750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A8D23D70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A8D23778(uint64_t a1)
{
  unint64_t v2 = sub_1A8D24014();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8D237B4(uint64_t a1)
{
  unint64_t v2 = sub_1A8D24014();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A8D237F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1A8D23E6C(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = result & 1;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1A8D23824(void *a1)
{
  return sub_1A8D224A8(a1, *v1, *((void *)v1 + 1), *((void *)v1 + 2));
}

uint64_t sub_1A8D23844()
{
  if (*v0) {
    return 0x496E6F6973736573;
  }
  else {
    return 7107189;
  }
}

uint64_t sub_1A8D2387C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A8D240BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A8D238A4(uint64_t a1)
{
  unint64_t v2 = sub_1A8D24068();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8D238E0(uint64_t a1)
{
  unint64_t v2 = sub_1A8D24068();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A8D2391C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1A8D241AC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1A8D2394C(void *a1)
{
  return sub_1A8D2261C(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1A8D2396C()
{
  return 0x65756C6176;
}

uint64_t sub_1A8D23980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A8D5A390();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A8D23A10(uint64_t a1)
{
  unint64_t v2 = sub_1A8D23D1C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A8D23A4C(uint64_t a1)
{
  unint64_t v2 = sub_1A8D23D1C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A8D23A88@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9D58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8D23D1C();
  sub_1A8D5A4F0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v10 = sub_1A8D5A2A0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v10 & 1;
  return result;
}

uint64_t sub_1A8D23BE8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E96E0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8D23D1C();
  sub_1A8D5A510();
  sub_1A8D5A330();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_1A8D23D1C()
{
  unint64_t result = qword_1EB5E9568;
  if (!qword_1EB5E9568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9568);
  }
  return result;
}

uint64_t sub_1A8D23D70(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001A8D66C30 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A8D23E6C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9DC8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1A8D24014();
  sub_1A8D5A4F0();
  if (!v1)
  {
    v10[15] = 0;
    LOBYTE(v8) = sub_1A8D5A2A0();
    v10[14] = 1;
    sub_1A8D5A290();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v8 & 1;
}

unint64_t sub_1A8D24014()
{
  unint64_t result = qword_1EB5E9D88;
  if (!qword_1EB5E9D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9D88);
  }
  return result;
}

unint64_t sub_1A8D24068()
{
  unint64_t result = qword_1E979F6E0;
  if (!qword_1E979F6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F6E0);
  }
  return result;
}

uint64_t sub_1A8D240BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A8D5A390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A8D5A390();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A8D241AC(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F6E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A8D24068();
  sub_1A8D5A4F0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = sub_1A8D5A290();
    char v11 = 1;
    swift_bridgeObjectRetain();
    sub_1A8D5A290();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1A8D243B4()
{
  unint64_t result = qword_1E979F6F8;
  if (!qword_1E979F6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F6F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for NextRefreshCacheBox.CodingKeys()
{
  return &type metadata for NextRefreshCacheBox.CodingKeys;
}

ValueMetadata *type metadata accessor for URLCacheBox.CodingKeys()
{
  return &type metadata for URLCacheBox.CodingKeys;
}

unsigned char *_s25CloudSubscriptionFeatures11URLCacheBoxV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A8D24500);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStatusCacheBox.CodingKeys()
{
  return &type metadata for SubscriptionStatusCacheBox.CodingKeys;
}

unsigned char *_s25CloudSubscriptionFeatures19NextRefreshCacheBoxV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A8D245D4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BoolCacheBox.CodingKeys()
{
  return &type metadata for BoolCacheBox.CodingKeys;
}

unint64_t sub_1A8D24610()
{
  unint64_t result = qword_1E979F708;
  if (!qword_1E979F708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F708);
  }
  return result;
}

unint64_t sub_1A8D24668()
{
  unint64_t result = qword_1E979F710;
  if (!qword_1E979F710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F710);
  }
  return result;
}

unint64_t sub_1A8D246C0()
{
  unint64_t result = qword_1E979F718;
  if (!qword_1E979F718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F718);
  }
  return result;
}

unint64_t sub_1A8D24718()
{
  unint64_t result = qword_1E979F720;
  if (!qword_1E979F720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F720);
  }
  return result;
}

unint64_t sub_1A8D24770()
{
  unint64_t result = qword_1E979F728;
  if (!qword_1E979F728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F728);
  }
  return result;
}

unint64_t sub_1A8D247C8()
{
  unint64_t result = qword_1E979F730;
  if (!qword_1E979F730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F730);
  }
  return result;
}

unint64_t sub_1A8D24820()
{
  unint64_t result = qword_1E979F738;
  if (!qword_1E979F738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F738);
  }
  return result;
}

unint64_t sub_1A8D24878()
{
  unint64_t result = qword_1E979F740;
  if (!qword_1E979F740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F740);
  }
  return result;
}

unint64_t sub_1A8D248D0()
{
  unint64_t result = qword_1EB5E9D98;
  if (!qword_1EB5E9D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9D98);
  }
  return result;
}

unint64_t sub_1A8D24928()
{
  unint64_t result = qword_1EB5E9D90;
  if (!qword_1EB5E9D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9D90);
  }
  return result;
}

unint64_t sub_1A8D24980()
{
  unint64_t result = qword_1EB5E9578;
  if (!qword_1EB5E9578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9578);
  }
  return result;
}

unint64_t sub_1A8D249D8()
{
  unint64_t result = qword_1EB5E9570;
  if (!qword_1EB5E9570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E9570);
  }
  return result;
}

uint64_t sub_1A8D24A34()
{
  sub_1A8D59C80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A8D24B28()
{
  sub_1A8D59C80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A8D24BF4()
{
  sub_1A8D59C80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A8D24D7C()
{
  sub_1A8D59C80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A8D24E48()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8D24F2C()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8D25010()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8D25120(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      break;
    }
    if (v14 >= v6) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v2 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v6) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v2 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v6) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v2 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v6) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v2 + 8 * v8);
          if (!v15)
          {
            int64_t v16 = v14 + 4;
            if (v16 >= v6)
            {
LABEL_24:
              uint64_t v17 = 0;
              goto LABEL_25;
            }
            unint64_t v15 = *(void *)(v2 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                int64_t v8 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_27;
                }
                if (v8 >= v6) {
                  goto LABEL_24;
                }
                unint64_t v15 = *(void *)(v2 + 8 * v8);
                ++v16;
                if (v15) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v8 = v16;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_5:
    char v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    unint64_t v13 = v11[1];
    sub_1A8C901F4(*(void *)(a1 + 56) + 32 * v10, (uint64_t)v19);
    v18[0] = v12;
    v18[1] = v13;
    swift_bridgeObjectRetain();
    LOBYTE(v12) = sub_1A8D282A0(v12, v13, (uint64_t)v19);
    uint64_t result = sub_1A8C8DE74((uint64_t)v18, &qword_1EB5E9368);
    if (v12)
    {
      uint64_t v17 = 1;
LABEL_25:
      swift_release();
      return v17;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

CloudSubscriptionFeatures::FollowUp::Feature_optional __swiftcall FollowUp.Feature.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1A8D5A220();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1A8D2534C(uint64_t a1, char a2, char a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(unsigned char **)(*(void *)(v3 + 64) + 40);
  *uint64_t v4 = a2;
  v4[1] = a3;
  return MEMORY[0x1F41881F8](v3);
}

id static FollowUp.hasEngagedWithCFU.getter()
{
  return objc_msgSend(self, sel_hasEngagedWithCFU);
}

uint64_t FollowUp.Feature.rawValue.getter()
{
  if (*v0) {
    return 7169633;
  }
  else {
    return 7169121;
  }
}

id sub_1A8D253C0(uint64_t a1)
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1A8D25498(a1);
  uint64_t v2 = (void *)sub_1A8D59D40();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  unsigned int v3 = objc_msgSend(v1, sel_clearPendingFollowUpItemsWithUniqueIdentifiers_error_, v2, v6);

  if (v3) {
    return v6[0];
  }
  id v5 = v6[0];
  sub_1A8D59550();

  return (id)swift_willThrow();
}

uint64_t sub_1A8D25498(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1A8CB65FC(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A8CB65FC(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1A8CB65FC(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_1A8C90CF8(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

id sub_1A8D255C0(uint64_t a1)
{
  return sub_1A8D255E4(a1);
}

id sub_1A8D255E4(uint64_t a1)
{
  v4[1] = *(id *)MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (objc_msgSend(v1, sel_postFollowUpItem_error_, a1, v4)) {
    return v4[0];
  }
  id v3 = v4[0];
  sub_1A8D59550();

  return (id)swift_willThrow();
}

id sub_1A8D25690(uint64_t a1)
{
  return sub_1A8D253C0(a1);
}

uint64_t sub_1A8D256B4()
{
  uint64_t v1 = sub_1A8D25754();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return sub_1A8D31580(v2, v0, v1);
}

uint64_t sub_1A8D25754()
{
  v8[1] = *(id *)MEMORY[0x1E4F143B8];
  v8[0] = 0;
  id v2 = objc_msgSend(v0, sel_pendingFollowUpItems_, v8);
  id v3 = v8[0];
  if (v2)
  {
    uint64_t v4 = v2;
    sub_1A8C8EB1C(0, &qword_1E979F7D0);
    uint64_t v1 = sub_1A8D59D50();
    id v5 = v3;
  }
  else
  {
    id v6 = v8[0];
    sub_1A8D59550();

    swift_willThrow();
  }
  return v1;
}

CloudSubscriptionFeatures::FollowUp::IneligibilityReason_optional __swiftcall FollowUp.IneligibilityReason.init(rawValue:)(Swift::String rawValue)
{
  id v2 = v1;
  unint64_t v3 = sub_1A8D5A220();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *id v2 = v5;
  return result;
}

unint64_t FollowUp.IneligibilityReason.rawValue.getter()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000020;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A8D25950(unsigned __int8 *a1, char *a2)
{
  return sub_1A8CF70C4(*a1, *a2);
}

uint64_t sub_1A8D2595C()
{
  return sub_1A8D25010();
}

uint64_t sub_1A8D25968()
{
  return sub_1A8D24A34();
}

uint64_t sub_1A8D25970()
{
  return sub_1A8D25010();
}

CloudSubscriptionFeatures::FollowUp::IneligibilityReason_optional sub_1A8D25978(Swift::String *a1)
{
  return FollowUp.IneligibilityReason.init(rawValue:)(*a1);
}

unint64_t sub_1A8D25984@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FollowUp.IneligibilityReason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1A8D259AC()
{
  unint64_t result = 0xD00000000000001FLL;
  if (*(void *)(v0 + 32))
  {
    sub_1A8D59CA0();
    return 0xD000000000000020;
  }
  return result;
}

uint64_t sub_1A8D25A20()
{
  swift_beginAccess();
  sub_1A8CB249C(v0 + 96, (uint64_t)v11, &qword_1EB5EAD60);
  if (v12)
  {
    unint64_t v1 = 0xD00000000000001FLL;
    sub_1A8C91CA8((uint64_t)v11, (uint64_t)v8);
    sub_1A8C8DE74((uint64_t)v11, &qword_1EB5EAD60);
    uint64_t v2 = v9;
    uint64_t v3 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    if (*(void *)(v0 + 32))
    {
      sub_1A8D59CA0();
      unint64_t v1 = 0xD000000000000020;
      unint64_t v4 = 0x80000001A8D66CA0;
    }
    else
    {
      unint64_t v4 = 0x80000001A8D66C80;
    }
    char v6 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v3 + 40))(v1, v4, v2, v3);
    swift_bridgeObjectRelease();
    uint64_t v5 = v6 & 1;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  }
  else
  {
    sub_1A8C8DE74((uint64_t)v11, &qword_1EB5EAD60);
    return 2;
  }
  return v5;
}

uint64_t sub_1A8D25B60()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEB0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1A8D5C9F0;
  *(void *)(v1 + 32) = 0x746E6553736168;
  *(void *)(v1 + 40) = 0xE700000000000000;
  uint64_t v2 = v0[4];
  if (v2)
  {
    uint64_t v3 = v0[3];
    swift_bridgeObjectRetain();
    unint64_t v4 = 2;
    uint64_t v1 = (uint64_t)sub_1A8C9D544((void *)1, 2, 1, (void *)v1);
    *(void *)(v1 + 16) = 2;
    *(void *)(v1 + 48) = v3;
    *(void *)(v1 + 56) = v2;
  }
  else
  {
    unint64_t v4 = 1;
  }
  uint64_t v5 = v0[6];
  if (v5)
  {
    uint64_t v6 = v0[5];
    unint64_t v7 = *(void *)(v1 + 24);
    swift_bridgeObjectRetain();
    if (v4 >= v7 >> 1) {
      uint64_t v1 = (uint64_t)sub_1A8C9D544((void *)(v7 > 1), v4 + 1, 1, (void *)v1);
    }
    *(void *)(v1 + 16) = v4 + 1;
    unint64_t v8 = v1 + 16 * v4;
    *(void *)(v8 + 32) = v6;
    *(void *)(v8 + 40) = v5;
  }
  else
  {
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1A8D59A80();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB5E97D0);
    uint64_t v10 = sub_1A8D59A60();
    os_log_type_t v11 = sub_1A8D59F00();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1A8C7F000, v10, v11, "Account DSID is nil. CFU hasSent will be keyed on locale only", v12, 2u);
      MEMORY[0x1AD0E6EB0](v12, -1, -1);
    }
  }
  uint64_t v22 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5E9DB0);
  sub_1A8C9D3A4();
  uint64_t v13 = sub_1A8D59B70();
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  if (qword_1EB5E97F0 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1A8D59A80();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EB5E97D0);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_1A8D59A60();
  os_log_type_t v18 = sub_1A8D59F00();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v22 = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A8C90120(v13, v15, &v22);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v17, v18, "Returning CFU hasPosted key: %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v20, -1, -1);
    MEMORY[0x1AD0E6EB0](v19, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v13;
}

uint64_t sub_1A8D25ECC@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  sub_1A8CB249C(v1 + 96, (uint64_t)&v14, &qword_1EB5EAD60);
  if (v15)
  {
    sub_1A8C91C90(&v14, (uint64_t)v16);
    uint64_t v3 = v17;
    uint64_t v4 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    (*(void (**)(long long *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24))(&v14, 0x41746E6553736168, 0xEA00000000004D44, v3, v4);
    if (v15)
    {
      uint64_t v5 = sub_1A8D596F0();
      int v6 = swift_dynamicCast();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, v6 ^ 1u, 1, v5);
    }
    else
    {
      sub_1A8C8DE74((uint64_t)&v14, (uint64_t *)&unk_1EB5EA170);
      uint64_t v13 = sub_1A8D596F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 1, 1, v13);
    }
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  }
  else
  {
    sub_1A8C8DE74((uint64_t)&v14, &qword_1EB5EAD60);
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1A8D59A80();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB5E97D0);
    unint64_t v8 = sub_1A8D59A60();
    os_log_type_t v9 = sub_1A8D59EE0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1A8C7F000, v8, v9, "Unable to init UserDefaults, will not read hasSentADMCFU and will return false. User may see CFU erroneously.", v10, 2u);
      MEMORY[0x1AD0E6EB0](v10, -1, -1);
    }

    uint64_t v11 = sub_1A8D596F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
}

uint64_t sub_1A8D2614C(uint64_t a1)
{
  swift_beginAccess();
  sub_1A8CB249C(v1 + 96, (uint64_t)&v31, &qword_1EB5EAD60);
  if (*((void *)&v32 + 1))
  {
    sub_1A8C91C90(&v31, (uint64_t)v33);
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1A8D59A80();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB5E97D0);
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
    MEMORY[0x1F4188790](v4, v6);
    sub_1A8CB249C(a1, (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EB5EACF0);
    swift_retain();
    uint64_t v7 = sub_1A8D59A60();
    os_log_type_t v8 = sub_1A8D59F00();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v29 = a1;
      uint64_t v11 = v10;
      *(void *)&long long v31 = v10;
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v30 = sub_1A8C90120(0x41746E6553736168, 0xEA00000000004D44, (uint64_t *)&v31);
      uint64_t v28 = (uint64_t)&v28;
      sub_1A8D59FE0();
      swift_release();
      *(_WORD *)(v9 + 12) = 2080;
      uint64_t v12 = sub_1A8D59FC0();
      uint64_t v30 = sub_1A8C90120(v12, v13, (uint64_t *)&v31);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      sub_1A8C8DE74((uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EB5EACF0);
      _os_log_impl(&dword_1A8C7F000, v7, v8, "Updating UserDefaults for key %s to value: %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      uint64_t v14 = v11;
      a1 = v29;
      MEMORY[0x1AD0E6EB0](v14, -1, -1);
      MEMORY[0x1AD0E6EB0](v9, -1, -1);
    }
    else
    {
      swift_release();
      sub_1A8C8DE74((uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EB5EACF0);
    }

    uint64_t v20 = v34;
    uint64_t v21 = v35;
    uint64_t v22 = __swift_project_boxed_opaque_existential_1(v33, v34);
    MEMORY[0x1F4188790](v22, v23);
    uint64_t v24 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A8CB249C(a1, (uint64_t)v24, &qword_1EB5EACF0);
    uint64_t v25 = sub_1A8D596F0();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
    {
      sub_1A8C8DE74((uint64_t)v24, &qword_1EB5EACF0);
      long long v31 = 0u;
      long long v32 = 0u;
    }
    else
    {
      *((void *)&v32 + 1) = v25;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v31);
      (*(void (**)(uint64_t *, char *, uint64_t))(v26 + 32))(boxed_opaque_existential_1, v24, v25);
    }
    (*(void (**)(long long *, uint64_t, unint64_t, uint64_t, uint64_t))(v21 + 8))(&v31, 0x41746E6553736168, 0xEA00000000004D44, v20, v21);
    sub_1A8C8DE74(a1, &qword_1EB5EACF0);
    sub_1A8C8DE74((uint64_t)&v31, (uint64_t *)&unk_1EB5EA170);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  }
  else
  {
    sub_1A8C8DE74((uint64_t)&v31, &qword_1EB5EAD60);
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1A8D59A80();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EB5E97D0);
    uint64_t v16 = sub_1A8D59A60();
    os_log_type_t v17 = sub_1A8D59EE0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_1A8C7F000, v16, v17, "Unable to init UserDefaults, will not update hasSentADMCFU.", v18, 2u);
      MEMORY[0x1AD0E6EB0](v18, -1, -1);
    }

    return sub_1A8C8DE74(a1, &qword_1EB5EACF0);
  }
}

void (*sub_1A8D26644(void *a1))(uint64_t a1, uint64_t a2)
{
  *a1 = v1;
  size_t v3 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0) - 8) + 64);
  a1[1] = v3;
  uint64_t v4 = malloc(v3);
  a1[2] = v4;
  sub_1A8D25ECC((uint64_t)v4);
  return sub_1A8D266C4;
}

void sub_1A8D266C4(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1A8D266DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8CB249C(a1, (uint64_t)v10, &qword_1EB5EACF0);
  return a5(v10);
}

uint64_t sub_1A8D26784@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  sub_1A8CB249C(v1 + 96, (uint64_t)&v14, &qword_1EB5EAD60);
  if (v15)
  {
    sub_1A8C91C90(&v14, (uint64_t)v16);
    uint64_t v3 = v16[4];
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    uint64_t v4 = sub_1A8D25B60();
    (*(void (**)(long long *__return_ptr, uint64_t))(v3 + 24))(&v14, v4);
    swift_bridgeObjectRelease();
    if (v15)
    {
      uint64_t v5 = sub_1A8D596F0();
      int v6 = swift_dynamicCast();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, v6 ^ 1u, 1, v5);
    }
    else
    {
      sub_1A8C8DE74((uint64_t)&v14, (uint64_t *)&unk_1EB5EA170);
      uint64_t v13 = sub_1A8D596F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 1, 1, v13);
    }
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  }
  else
  {
    sub_1A8C8DE74((uint64_t)&v14, &qword_1EB5EAD60);
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1A8D59A80();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB5E97D0);
    uint64_t v8 = sub_1A8D59A60();
    os_log_type_t v9 = sub_1A8D59EE0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1A8C7F000, v8, v9, "Unable to init UserDefaults, will not read hasSeenCFU and will return false. User may see CFU erroneously.", v10, 2u);
      MEMORY[0x1AD0E6EB0](v10, -1, -1);
    }

    uint64_t v11 = sub_1A8D596F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
}

uint64_t sub_1A8D26A08(uint64_t a1)
{
  swift_beginAccess();
  sub_1A8CB249C(v1 + 96, (uint64_t)&v36, &qword_1EB5EAD60);
  if (*((void *)&v37 + 1))
  {
    sub_1A8C91C90(&v36, (uint64_t)v38);
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1A8D59A80();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB5E97D0);
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
    MEMORY[0x1F4188790](v4, v6);
    sub_1A8CB249C(a1, (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EB5EACF0);
    swift_retain_n();
    uint64_t v7 = sub_1A8D59A60();
    os_log_type_t v8 = sub_1A8D59F00();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(void *)&long long v36 = v32;
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v33 = &v31;
      uint64_t v10 = sub_1A8D25B60();
      uint64_t v12 = sub_1A8C90120(v10, v11, (uint64_t *)&v36);
      uint64_t v34 = a1;
      uint64_t v35 = v12;
      sub_1A8D59FE0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2080;
      uint64_t v13 = sub_1A8D59FC0();
      uint64_t v35 = sub_1A8C90120(v13, v14, (uint64_t *)&v36);
      a1 = v34;
      sub_1A8D59FE0();
      swift_bridgeObjectRelease();
      sub_1A8C8DE74((uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EB5EACF0);
      _os_log_impl(&dword_1A8C7F000, v7, v8, "Updating UserDefaults for key %s to value: %s", (uint8_t *)v9, 0x16u);
      uint64_t v15 = v32;
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v15, -1, -1);
      MEMORY[0x1AD0E6EB0](v9, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_1A8C8DE74((uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EB5EACF0);
    }

    uint64_t v21 = v39;
    uint64_t v22 = v40;
    uint64_t v23 = __swift_project_boxed_opaque_existential_1(v38, v39);
    MEMORY[0x1F4188790](v23, v24);
    uint64_t v25 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A8CB249C(a1, (uint64_t)v25, &qword_1EB5EACF0);
    uint64_t v26 = sub_1A8D596F0();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
    {
      sub_1A8C8DE74((uint64_t)v25, &qword_1EB5EACF0);
      long long v36 = 0u;
      long long v37 = 0u;
    }
    else
    {
      *((void *)&v37 + 1) = v26;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v36);
      (*(void (**)(uint64_t *, char *, uint64_t))(v27 + 32))(boxed_opaque_existential_1, v25, v26);
    }
    uint64_t v29 = sub_1A8D25B60();
    (*(void (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8))(&v36, v29, v30, v21, v22);
    swift_bridgeObjectRelease();
    sub_1A8C8DE74(a1, &qword_1EB5EACF0);
    sub_1A8C8DE74((uint64_t)&v36, (uint64_t *)&unk_1EB5EA170);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  }
  else
  {
    sub_1A8C8DE74((uint64_t)&v36, &qword_1EB5EAD60);
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1A8D59A80();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EB5E97D0);
    os_log_type_t v17 = sub_1A8D59A60();
    os_log_type_t v18 = sub_1A8D59EE0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_1A8C7F000, v17, v18, "Unable to init UserDefaults, will not update hasSeenCFU.", v19, 2u);
      MEMORY[0x1AD0E6EB0](v19, -1, -1);
    }

    return sub_1A8C8DE74(a1, &qword_1EB5EACF0);
  }
}

void (*sub_1A8D26F10(void *a1))(uint64_t a1, uint64_t a2)
{
  *a1 = v1;
  size_t v3 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0) - 8) + 64);
  a1[1] = v3;
  uint64_t v4 = malloc(v3);
  a1[2] = v4;
  sub_1A8D26784((uint64_t)v4);
  return sub_1A8D26F90;
}

void sub_1A8D26F90(uint64_t a1, uint64_t a2)
{
}

void sub_1A8D26FA8(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  uint64_t v4 = *(void **)(a1 + 16);
  if (a2)
  {
    MEMORY[0x1F4188790](a1, a2);
    uint64_t v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A8CB249C((uint64_t)v4, (uint64_t)v6, &qword_1EB5EACF0);
    a3(v6);
    sub_1A8C8DE74((uint64_t)v4, &qword_1EB5EACF0);
    free(v4);
  }
  else
  {
    a3(*(char **)(a1 + 16));
    free(v4);
  }
}

uint64_t sub_1A8D2708C()
{
  uint64_t v1 = sub_1A8D596F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x1F4188790](v1, v4);
  uint64_t v5 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8D26784((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))((char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v9, v1);
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D48]), sel_init);
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1A8D59A80();
    uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1EB5E97D0);
    MEMORY[0x1F4188790](v16, v17);
    os_log_type_t v18 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v18, v18, v1);
    id v19 = v14;
    uint64_t v20 = sub_1A8D59A60();
    os_log_type_t v21 = sub_1A8D59F00();
    int v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      int v42 = v22;
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v44 = v41;
      *(_DWORD *)uint64_t v23 = 136315138;
      v38[1] = v23 + 4;
      uint64_t v39 = v23;
      uint64_t v24 = (void *)sub_1A8D59640();
      id v25 = objc_msgSend(v19, sel_stringFromDate_, v24);

      uint64_t v26 = sub_1A8D59BF0();
      uint64_t v40 = v38;
      unint64_t v28 = v27;

      uint64_t v43 = sub_1A8C90120(v26, v28, &v44);
      sub_1A8D59FE0();

      swift_bridgeObjectRelease();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v2 + 8);
      v29(v18, v1);
      uint64_t v30 = v39;
      _os_log_impl(&dword_1A8C7F000, v20, (os_log_type_t)v42, "User saw CFU at %s", v39, 0xCu);
      uint64_t v31 = v41;
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v31, -1, -1);
      MEMORY[0x1AD0E6EB0](v30, -1, -1);

      v29(v5, v1);
    }
    else
    {

      long long v37 = *(void (**)(char *, uint64_t))(v2 + 8);
      v37(v18, v1);

      v37(v5, v1);
    }
    return 1;
  }
  sub_1A8C8DE74((uint64_t)v9, &qword_1EB5EACF0);
  if (!*(void *)(v0 + 48) && (sub_1A8D27EE8() & 1) != 0)
  {
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1A8D59A80();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB5E97D0);
    unint64_t v11 = sub_1A8D59A60();
    os_log_type_t v12 = sub_1A8D59F00();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_1A8C7F000, v11, v12, "No value for hasSentCFU but previous user has seen CFU. Returning true.", v13, 2u);
      MEMORY[0x1AD0E6EB0](v13, -1, -1);
    }

    return 1;
  }
  if (qword_1EB5E97F0 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1A8D59A80();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EB5E97D0);
  uint64_t v33 = sub_1A8D59A60();
  os_log_type_t v34 = sub_1A8D59F00();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl(&dword_1A8C7F000, v33, v34, "User has not seen CFU.", v35, 2u);
    MEMORY[0x1AD0E6EB0](v35, -1, -1);
  }

  return 0;
}

uint64_t sub_1A8D27604(char a1)
{
  return sub_1A8D27C60(a1, (uint64_t (*)(char *))sub_1A8D26A08);
}

uint64_t (*sub_1A8D2761C(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = sub_1A8D2708C() & 1;
  return sub_1A8D27668;
}

uint64_t sub_1A8D27668(uint64_t a1, uint64_t a2)
{
  return sub_1A8D27DC8(a1, a2, (uint64_t (*)(char *))sub_1A8D26A08);
}

uint64_t sub_1A8D27680(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  int v6 = *a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v6 == 1)
  {
    sub_1A8D596E0();
    uint64_t v11 = sub_1A8D596F0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
  }
  else
  {
    uint64_t v12 = sub_1A8D596F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
  }
  return a5(v10);
}

BOOL sub_1A8D2778C()
{
  uint64_t v0 = sub_1A8D596F0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  MEMORY[0x1F4188790](v0, v3);
  uint64_t v4 = (char *)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  MEMORY[0x1F4188790](v5 - 8, v6);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8D25ECC((uint64_t)v8);
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 48))(v8, 1, v0);
  if (v9 == 1)
  {
    sub_1A8C8DE74((uint64_t)v8, &qword_1EB5EACF0);
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1A8D59A80();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EB5E97D0);
    uint64_t v30 = sub_1A8D59A60();
    os_log_type_t v31 = sub_1A8D59F00();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_1A8C7F000, v30, v31, "User has not seen CFU.", v32, 2u);
      MEMORY[0x1AD0E6EB0](v32, -1, -1);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))((char *)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v8, v0);
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D48]), sel_init);
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1A8D59A80();
    uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1EB5E97D0);
    MEMORY[0x1F4188790](v12, v13);
    uint64_t v14 = (char *)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v14, v14, v0);
    id v15 = v10;
    uint64_t v16 = sub_1A8D59A60();
    os_log_type_t v17 = sub_1A8D59F00();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      int v39 = v18;
      id v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v42 = v37;
      int v40 = v9;
      *(_DWORD *)id v19 = 136315138;
      v35[1] = v19 + 4;
      long long v36 = v19;
      uint64_t v20 = (void *)sub_1A8D59640();
      id v21 = objc_msgSend(v15, sel_stringFromDate_, v20);
      uint64_t v38 = v35;
      id v22 = v21;

      uint64_t v23 = sub_1A8D59BF0();
      unint64_t v25 = v24;

      uint64_t v41 = sub_1A8C90120(v23, v25, &v42);
      int v9 = v40;
      sub_1A8D59FE0();

      swift_bridgeObjectRelease();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v1 + 8);
      v26(v14, v0);
      unint64_t v27 = v36;
      _os_log_impl(&dword_1A8C7F000, v16, (os_log_type_t)v39, "User saw ADM CFU at %s", v36, 0xCu);
      uint64_t v28 = v37;
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v28, -1, -1);
      MEMORY[0x1AD0E6EB0](v27, -1, -1);

      v26(v4, v0);
    }
    else
    {

      uint64_t v33 = *(void (**)(char *, uint64_t))(v1 + 8);
      v33(v14, v0);

      v33(v4, v0);
    }
  }
  return v9 != 1;
}

uint64_t sub_1A8D27C48(char a1)
{
  return sub_1A8D27C60(a1, (uint64_t (*)(char *))sub_1A8D2614C);
}

uint64_t sub_1A8D27C60(char a1, uint64_t (*a2)(char *))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_1A8D596E0();
    uint64_t v8 = sub_1A8D596F0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  }
  else
  {
    uint64_t v9 = sub_1A8D596F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  }
  return a2(v7);
}

uint64_t (*sub_1A8D27D64(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = sub_1A8D2778C();
  return sub_1A8D27DB0;
}

uint64_t sub_1A8D27DB0(uint64_t a1, uint64_t a2)
{
  return sub_1A8D27DC8(a1, a2, (uint64_t (*)(char *))sub_1A8D2614C);
}

uint64_t sub_1A8D27DC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *))
{
  int v4 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  MEMORY[0x1F4188790](v5 - 8, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v4)
  {
    sub_1A8D596E0();
    uint64_t v9 = sub_1A8D596F0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  }
  else
  {
    uint64_t v10 = sub_1A8D596F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  }
  return a3(v8);
}

uint64_t sub_1A8D27EE8()
{
  swift_beginAccess();
  sub_1A8CB249C(v0 + 96, (uint64_t)v19, &qword_1EB5EAD60);
  if (v19[3])
  {
    sub_1A8C91CA8((uint64_t)v19, (uint64_t)v16);
    sub_1A8C8DE74((uint64_t)v19, &qword_1EB5EAD60);
    uint64_t v1 = v17;
    uint64_t v2 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    uint64_t v3 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v2 + 64))(0xD000000000000013, 0x80000001A8D64370, v1, v2);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    if (v3)
    {
      char v4 = sub_1A8D25120(v3);
      swift_bridgeObjectRelease();
      if (qword_1EB5E97F0 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_1A8D59A80();
      __swift_project_value_buffer(v5, (uint64_t)qword_1EB5E97D0);
      uint64_t v6 = sub_1A8D59A60();
      os_log_type_t v7 = sub_1A8D59F00();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = swift_slowAlloc();
        uint64_t v9 = swift_slowAlloc();
        v19[0] = v9;
        *(_DWORD *)uint64_t v8 = 136315394;
        v16[0] = sub_1A8C90120(0xD000000000000015, 0x80000001A8D66E20, v19);
        sub_1A8D59FE0();
        *(_WORD *)(v8 + 12) = 1024;
        LODWORD(v16[0]) = v4 & 1;
        sub_1A8D59FE0();
        _os_log_impl(&dword_1A8C7F000, v6, v7, "%s returning %{BOOL}d", (uint8_t *)v8, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v9, -1, -1);
        MEMORY[0x1AD0E6EB0](v8, -1, -1);
      }

      return v4 & 1;
    }
  }
  else
  {
    sub_1A8C8DE74((uint64_t)v19, &qword_1EB5EAD60);
  }
  if (qword_1EB5E97F0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1A8D59A80();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB5E97D0);
  uint64_t v11 = sub_1A8D59A60();
  os_log_type_t v12 = sub_1A8D59F00();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v19[0] = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    v16[0] = sub_1A8C90120(0xD000000000000013, 0x80000001A8D64370, v19);
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v11, v12, "No persistent domain for suite %s, no users have been sent CFU.", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v14, -1, -1);
    MEMORY[0x1AD0E6EB0](v13, -1, -1);
  }

  char v4 = 0;
  return v4 & 1;
}

uint64_t sub_1A8D282A0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A8D596F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6, v9);
  uint64_t v10 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A8C901F4(a3, (uint64_t)v49);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
  MEMORY[0x1F4188790](v11 - 8, v12);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v15 = swift_dynamicCast();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  if (v15)
  {
    v16(v14, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v14, 1, v6) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v14, v6);
      id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D48]), sel_init);
      if (qword_1EB5E97F0 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_1A8D59A80();
      uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EB5E97D0);
      uint64_t v47 = &v43;
      MEMORY[0x1F4188790](v19, v20);
      id v21 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v21, v21, v6);
      swift_bridgeObjectRetain_n();
      id v22 = v17;
      uint64_t v23 = sub_1A8D59A60();
      os_log_type_t v24 = sub_1A8D59F00();
      int v25 = v24;
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v26 = swift_slowAlloc();
        uint64_t v46 = swift_slowAlloc();
        v49[0] = v46;
        *(_DWORD *)uint64_t v26 = 136315394;
        os_log_t v45 = v23;
        swift_bridgeObjectRetain();
        uint64_t v48 = sub_1A8C90120(a1, a2, v49);
        int v44 = v25;
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v26 + 12) = 2080;
        uint64_t v43 = v26 + 14;
        unint64_t v27 = (void *)sub_1A8D59640();
        id v28 = objc_msgSend(v22, sel_stringFromDate_, v27);

        uint64_t v29 = sub_1A8D59BF0();
        unint64_t v31 = v30;

        uint64_t v48 = sub_1A8C90120(v29, v31, v49);
        sub_1A8D59FE0();

        swift_bridgeObjectRelease();
        uint64_t v32 = *(void (**)(char *, uint64_t))(v7 + 8);
        v32(v21, v6);
        os_log_t v33 = v45;
        _os_log_impl(&dword_1A8C7F000, v45, (os_log_type_t)v44, "Previous key %s was sent CFU on %s", (uint8_t *)v26, 0x16u);
        uint64_t v34 = v46;
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v34, -1, -1);
        MEMORY[0x1AD0E6EB0](v26, -1, -1);

        v32(v10, v6);
      }
      else
      {

        uint64_t v41 = *(void (**)(char *, uint64_t))(v7 + 8);
        v41(v21, v6);

        swift_bridgeObjectRelease_n();
        v41(v10, v6);
      }
      return 1;
    }
  }
  else
  {
    v16(v14, 1, 1, v6);
  }
  sub_1A8C8DE74((uint64_t)v14, &qword_1EB5EACF0);
  sub_1A8C901F4(a3, (uint64_t)v49);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v35 = v48;
  if (qword_1EB5E97F0 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1A8D59A80();
  __swift_project_value_buffer(v36, (uint64_t)qword_1EB5E97D0);
  swift_bridgeObjectRetain_n();
  uint64_t v37 = sub_1A8D59A60();
  os_log_type_t v38 = sub_1A8D59F00();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    v49[0] = v40;
    *(_DWORD *)uint64_t v39 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1A8C90120(a1, a2, v49);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 12) = 1024;
    LODWORD(v48) = v35;
    sub_1A8D59FE0();
    _os_log_impl(&dword_1A8C7F000, v37, v38, "Previous key %s was sent CFU without date. Returning %{BOOL}d.", (uint8_t *)v39, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v40, -1, -1);
    MEMORY[0x1AD0E6EB0](v39, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v35;
}

uint64_t sub_1A8D28920()
{
  swift_beginAccess();
  sub_1A8CB249C(v0 + 96, (uint64_t)v8, &qword_1EB5EAD60);
  if (v9)
  {
    sub_1A8C91CA8((uint64_t)v8, (uint64_t)v5);
    sub_1A8C8DE74((uint64_t)v8, &qword_1EB5EAD60);
    uint64_t v1 = v6;
    uint64_t v2 = v7;
    __swift_project_boxed_opaque_existential_1(v5, v6);
    uint64_t v3 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v2 + 64))(0xD000000000000013, 0x80000001A8D64370, v1, v2);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
  }
  else
  {
    sub_1A8C8DE74((uint64_t)v8, &qword_1EB5EAD60);
    return 0;
  }
  return v3;
}

uint64_t sub_1A8D28A14()
{
  return MEMORY[0x1F4188298](sub_1A8D28A30, 0, 0);
}

uint64_t sub_1A8D28A30()
{
  if (qword_1EB5EA128 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1EB5EA140;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1A8D28B60;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A8D2534C;
  v0[13] = &block_descriptor_56;
  v0[14] = v2;
  objc_msgSend(v1, sel_assetStatusWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A8D28B60()
{
  return MEMORY[0x1F4188298](sub_1A8D28C40, 0, 0);
}

uint64_t sub_1A8D28C40()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 120));
}

uint64_t sub_1A8D28C58()
{
  *(void *)(v1 + 128) = v0;
  return MEMORY[0x1F4188298](sub_1A8D28C78, 0, 0);
}

uint64_t sub_1A8D28C78()
{
  if (qword_1EB5EA128 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1EB5EA140;
  v0[2] = v0;
  v0[7] = (char *)v0 + 148;
  v0[3] = sub_1A8D28DA8;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1A8D2534C;
  v0[13] = &block_descriptor_6;
  v0[14] = v2;
  objc_msgSend(v1, sel_assetStatusWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A8D28DA8()
{
  return MEMORY[0x1F4188298](sub_1A8D28E88, 0, 0);
}

uint64_t sub_1A8D28E88()
{
  uint64_t v12 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 148);
  *(unsigned char *)(v0 + 150) = v1;
  if (v1 == 1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1A8D29108;
    v2[3] = *(void *)(v0 + 128);
    return MEMORY[0x1F4188298](sub_1A8D295F4, 0, 0);
  }
  else
  {
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1A8D59A80();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB5E97D0);
    uint64_t v4 = sub_1A8D59A60();
    os_log_type_t v5 = sub_1A8D59F00();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      uint64_t v11 = v7;
      *(_DWORD *)uint64_t v6 = 136315394;
      *(void *)(v0 + 120) = sub_1A8C90120(0xD00000000000002DLL, 0x80000001A8D66DC0, &v11);
      sub_1A8D59FE0();
      *(_WORD *)(v6 + 12) = 1024;
      *(_DWORD *)(v0 + 144) = 0;
      sub_1A8D59FE0();
      _os_log_impl(&dword_1A8C7F000, v4, v5, "Skipping %s: assetsFinishedDownloading is %{BOOL}d)", (uint8_t *)v6, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v7, -1, -1);
      MEMORY[0x1AD0E6EB0](v6, -1, -1);
    }

    uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v9 = *(unsigned __int8 *)(v0 + 150);
    return v8(v9);
  }
}

uint64_t sub_1A8D29108()
{
  uint64_t v1 = *v0;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v5 + 8);
  uint64_t v3 = *(unsigned __int8 *)(v1 + 150);
  return v2(v3);
}

uint64_t sub_1A8D29200(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)&dword_1E979F750 + dword_1E979F750);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A8CF26DC;
  return v6(a2);
}

uint64_t sub_1A8D292AC()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1A8D292CC, 0, 0);
}

uint64_t sub_1A8D292CC()
{
  uint64_t v7 = v0;
  v0[2] = MEMORY[0x1E4FBC870];
  uint64_t v1 = (*(uint64_t (**)(void))(v0[3] + 224))();
  v0[4] = v1;
  if ((*(unsigned char *)(v1 + OBJC_IVAR___CSFEligibility_deviceEligibile) & 1) == 0) {
    sub_1A8D2CAC4(&v5, 2);
  }
  if (!sub_1A8D428F4()) {
    sub_1A8D2CAC4(&v6, 3);
  }
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(v0[3] + 192) + **(int **)(v0[3] + 192));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1A8D29408;
  return v4();
}

uint64_t sub_1A8D29408(char a1)
{
  *(unsigned char *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8D29508, 0, 0);
}

uint64_t sub_1A8D29508()
{
  uint64_t v9 = v0;
  if ((*(unsigned char *)(v0 + 48) & 1) == 0) {
    sub_1A8D2CAC4(&v6, 4);
  }
  if (((*(uint64_t (**)(void))(*(void *)(v0 + 24) + 208))() & 1) == 0) {
    sub_1A8D2CAC4(&v7, 5);
  }
  char v1 = sub_1A8CB9D9C();
  uint64_t v2 = *(void **)(v0 + 32);
  if (v1) {
    sub_1A8D2CAC4(&v8, 6);
  }

  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_1A8D295D4()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1A8D295F4, 0, 0);
}

uint64_t sub_1A8D295F4()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[20];
  uint64_t v3 = v1[21];
  __swift_project_boxed_opaque_existential_1(v1 + 17, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1) == 0)
  {
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1A8D59A80();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB5E97D0);
    char v8 = sub_1A8D59A60();
    os_log_type_t v9 = sub_1A8D59F00();
    if (!os_log_type_enabled(v8, v9)) {
      goto LABEL_15;
    }
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    uint64_t v11 = "Attempted to post CFU but device does not preconditions.";
    goto LABEL_14;
  }
  uint64_t v4 = v1[20];
  uint64_t v5 = v1[21];
  __swift_project_boxed_opaque_existential_1(v1 + 17, v4);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5))
  {
    char v6 = (void *)swift_task_alloc();
    v0[4] = v6;
    *char v6 = v0;
    v6[1] = sub_1A8D2989C;
    v6[3] = v0[3];
    return MEMORY[0x1F4188298](sub_1A8D292CC, 0, 0);
  }
  if (qword_1EB5E97F0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1A8D59A80();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB5E97D0);
  char v8 = sub_1A8D59A60();
  os_log_type_t v9 = sub_1A8D59F00();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    uint64_t v11 = "Attempted to post CFU but server has not granted access yet.";
LABEL_14:
    _os_log_impl(&dword_1A8C7F000, v8, v9, v11, v10, 2u);
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
  }
LABEL_15:

  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1A8D2989C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8D2999C, 0, 0);
}

uint64_t sub_1A8D2999C()
{
  uint64_t v20 = v0;
  if (*(void *)(v0[5] + 16))
  {
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1A8D59A80();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EB5E97D0);
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1A8D59A60();
    os_log_type_t v3 = sub_1A8D59F00();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = swift_slowAlloc();
      uint64_t v19 = v5;
      *(_DWORD *)uint64_t v4 = 136315138;
      sub_1A8D3105C();
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1A8D59E80();
      unint64_t v8 = v7;
      swift_bridgeObjectRelease();
      v0[2] = sub_1A8C90120(v6, v8, &v19);
      sub_1A8D59FE0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A8C7F000, v2, v3, "Attempted to post CFU but user is ineligible with reasons: %s", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0E6EB0](v5, -1, -1);
      os_log_type_t v9 = v4;
      goto LABEL_16;
    }

    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  uint64_t v10 = (os_unfair_lock_s *)v0[3];
  swift_bridgeObjectRelease();
  uint64_t v11 = v10 + 4;
  if (!os_unfair_lock_trylock(v10 + 4))
  {
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1A8D59A80();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EB5E97D0);
    uint64_t v2 = sub_1A8D59A60();
    os_log_type_t v16 = sub_1A8D59EE0();
    if (!os_log_type_enabled(v2, v16)) {
      goto LABEL_17;
    }
    id v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v17 = 0;
    _os_log_impl(&dword_1A8C7F000, v2, v16, "CFU posting was already in progess, not posting CFU", v17, 2u);
    os_log_type_t v9 = v17;
LABEL_16:
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
LABEL_17:

    goto LABEL_18;
  }
  char v12 = sub_1A8D29E14((uint64_t)&v10[4], (void *)v0[3]);
  os_unfair_lock_unlock(v11);
  if ((v12 & 1) == 0)
  {
LABEL_18:
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
  uint64_t v13 = (void *)swift_task_alloc();
  v0[6] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1A8D29D20;
  return sub_1A8CF000C(6);
}

uint64_t sub_1A8D29D20()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A8D29E14(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for FollowUpConfig();
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1A8D2708C())
  {
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1A8D59A80();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB5E97D0);
    unint64_t v8 = sub_1A8D59A60();
    os_log_type_t v9 = sub_1A8D59F00();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1A8C7F000, v8, v9, "User has seen CFU before. Will not post CFU.", v10, 2u);
      MEMORY[0x1AD0E6EB0](v10, -1, -1);
    }

    return 0;
  }
  else
  {
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1A8D59A80();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB5E97D0);
    char v12 = sub_1A8D59A60();
    os_log_type_t v13 = sub_1A8D59F00();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1A8C7F000, v12, v13, "Attempting to post GM CFU", v14, 2u);
      MEMORY[0x1AD0E6EB0](v14, -1, -1);
    }

    sub_1A8D2AB78(0xD000000000000013, 0x80000001A8D64370);
    sub_1A8D02EF0((uint64_t)v6);
    sub_1A8D02988();
    os_log_type_t v16 = v15;
    sub_1A8D31000((uint64_t)v6);
    id v17 = sub_1A8D59A60();
    os_log_type_t v18 = sub_1A8D59F00();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_1A8C7F000, v17, v18, "Attempting to post CFU...", v19, 2u);
      MEMORY[0x1AD0E6EB0](v19, -1, -1);
    }

    uint64_t v20 = a2[10];
    uint64_t v21 = a2[11];
    __swift_project_boxed_opaque_existential_1(a2 + 7, v20);
    id v22 = *(void (**)(void *, uint64_t, uint64_t))(v21 + 8);
    id v23 = v16;
    v22(v16, v20, v21);

    os_log_type_t v24 = sub_1A8D59A60();
    os_log_type_t v25 = sub_1A8D59F00();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_1A8C7F000, v24, v25, "Successfully posted CFU.", v26, 2u);
      MEMORY[0x1AD0E6EB0](v26, -1, -1);
    }

    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    MEMORY[0x1F4188790](v27 - 8, v28);
    unint64_t v30 = (char *)v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A8D596E0();
    uint64_t v31 = sub_1A8D596F0();
    uint64_t v32 = 1;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
    sub_1A8D26A08((uint64_t)v30);
  }
  return v32;
}

uint64_t sub_1A8D2A36C()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1A8D2A38C, 0, 0);
}

uint64_t sub_1A8D2A38C()
{
  uint64_t v1 = (os_unfair_lock_s *)(v0[2] + 16);
  if (os_unfair_lock_trylock(v1))
  {
    char v2 = sub_1A8D2A640((uint64_t)v1, (void *)v0[2]);
    os_unfair_lock_unlock(v1);
    if (v2)
    {
      uint64_t v3 = (void *)swift_task_alloc();
      v0[3] = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_1A8D2A548;
      return sub_1A8CF000C(14);
    }
  }
  else
  {
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1A8D59A80();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EB5E97D0);
    uint64_t v6 = sub_1A8D59A60();
    os_log_type_t v7 = sub_1A8D59EE0();
    if (os_log_type_enabled(v6, v7))
    {
      unint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v8 = 0;
      _os_log_impl(&dword_1A8C7F000, v6, v7, "CFU posting was already in progess, not posting CFU", v8, 2u);
      MEMORY[0x1AD0E6EB0](v8, -1, -1);
    }
  }
  os_log_type_t v9 = (uint64_t (*)(void))v0[1];
  return v9(0);
}

uint64_t sub_1A8D2A548()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v1(1);
}

uint64_t sub_1A8D2A640(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for FollowUpConfig();
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1A8D2778C())
  {
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1A8D59A80();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB5E97D0);
    unint64_t v8 = sub_1A8D59A60();
    os_log_type_t v9 = sub_1A8D59F00();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1A8C7F000, v8, v9, "User has seen ADM CFU before. Will not post ADM CFU.", v10, 2u);
      MEMORY[0x1AD0E6EB0](v10, -1, -1);
    }

    return 0;
  }
  else
  {
    if (qword_1EB5E97F0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1A8D59A80();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB5E97D0);
    char v12 = sub_1A8D59A60();
    os_log_type_t v13 = sub_1A8D59F00();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1A8C7F000, v12, v13, "Attempting to post ADM CFU", v14, 2u);
      MEMORY[0x1AD0E6EB0](v14, -1, -1);
    }

    sub_1A8D03168((uint64_t)v6);
    sub_1A8D02988();
    os_log_type_t v16 = v15;
    sub_1A8D31000((uint64_t)v6);
    id v17 = sub_1A8D59A60();
    os_log_type_t v18 = sub_1A8D59F00();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_1A8C7F000, v17, v18, "Attempting to post ADM CFU...", v19, 2u);
      MEMORY[0x1AD0E6EB0](v19, -1, -1);
    }

    uint64_t v20 = a2[10];
    uint64_t v21 = a2[11];
    __swift_project_boxed_opaque_existential_1(a2 + 7, v20);
    id v22 = *(void (**)(void *, uint64_t, uint64_t))(v21 + 8);
    id v23 = v16;
    v22(v16, v20, v21);

    os_log_type_t v24 = sub_1A8D59A60();
    os_log_type_t v25 = sub_1A8D59F00();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_1A8C7F000, v24, v25, "Successfully posted ADM CFU.", v26, 2u);
      MEMORY[0x1AD0E6EB0](v26, -1, -1);
    }

    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EACF0);
    MEMORY[0x1F4188790](v27 - 8, v28);
    unint64_t v30 = (char *)v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1A8D596E0();
    uint64_t v31 = sub_1A8D596F0();
    uint64_t v32 = 1;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
    sub_1A8D2614C((uint64_t)v30);
  }
  return v32;
}

uint64_t sub_1A8D2AB78(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[10];
  uint64_t v6 = v2[11];
  __swift_project_boxed_opaque_existential_1(v2 + 7, v5);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A8D5C9F0;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v8(inited, v5, v6);
  swift_setDeallocating();
  return swift_arrayDestroy();
}

uint64_t sub_1A8D2AE8C(unsigned char *a1)
{
  if (*a1 == 1)
  {
    uint64_t v2 = sub_1A8D25B60();
    unint64_t v4 = v3;
  }
  else
  {
    unint64_t v4 = 0xEA00000000004D44;
    uint64_t v2 = 0x41746E6553736168;
  }
  uint64_t v5 = v1 + 96;
  swift_beginAccess();
  sub_1A8CB249C(v1 + 96, (uint64_t)v24, &qword_1EB5EAD60);
  if (v25)
  {
    sub_1A8C91CA8((uint64_t)v24, (uint64_t)v21);
    sub_1A8C8DE74((uint64_t)v24, &qword_1EB5EAD60);
    uint64_t v6 = v22;
    uint64_t v7 = v23;
    __swift_project_boxed_opaque_existential_1(v21, v22);
    (*(void (**)(long long *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(v7 + 24))(&v26, v2, v4, v6, v7);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
    if (*((void *)&v27 + 1))
    {
      sub_1A8C8DE74((uint64_t)&v26, (uint64_t *)&unk_1EB5EA170);
      if (qword_1EB5E97F0 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_1A8D59A80();
      __swift_project_value_buffer(v8, (uint64_t)qword_1EB5E97D0);
      swift_bridgeObjectRetain_n();
      os_log_type_t v9 = sub_1A8D59A60();
      os_log_type_t v10 = sub_1A8D59F00();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        v24[0] = v12;
        *(_DWORD *)uint64_t v11 = 136315138;
        swift_bridgeObjectRetain();
        v21[0] = sub_1A8C90120(v2, v4, v24);
        sub_1A8D59FE0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A8C7F000, v9, v10, "Resetting value for key \"%s\".", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0E6EB0](v12, -1, -1);
        MEMORY[0x1AD0E6EB0](v11, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1A8CB249C(v5, (uint64_t)v24, &qword_1EB5EAD60);
      if (v25)
      {
        sub_1A8C91CA8((uint64_t)v24, (uint64_t)v21);
        sub_1A8C8DE74((uint64_t)v24, &qword_1EB5EAD60);
        uint64_t v19 = v22;
        uint64_t v20 = v23;
        __swift_project_boxed_opaque_existential_1(v21, v22);
        (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v20 + 16))(v2, v4, v19, v20);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1A8C8DE74((uint64_t)v24, &qword_1EB5EAD60);
      }
      return 1;
    }
  }
  else
  {
    sub_1A8C8DE74((uint64_t)v24, &qword_1EB5EAD60);
    long long v26 = 0u;
    long long v27 = 0u;
  }
  sub_1A8C8DE74((uint64_t)&v26, (uint64_t *)&unk_1EB5EA170);
  if (qword_1EB5E97F0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1A8D59A80();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EB5E97D0);
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1A8D59A60();
  os_log_type_t v15 = sub_1A8D59EE0();
  if (os_log_type_enabled(v14, v15))
  {
    os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    v24[0] = v17;
    *(_DWORD *)os_log_type_t v16 = 136315138;
    swift_bridgeObjectRetain();
    v21[0] = sub_1A8C90120(v2, v4, v24);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A8C7F000, v14, v15, "Attempted to clear CFU user default \"%s\" but no value is stored.", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v17, -1, -1);
    MEMORY[0x1AD0E6EB0](v16, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

id static FollowUp.hasEngagedWithCFU.setter(char a1)
{
  uint64_t v2 = self;
  return objc_msgSend(v2, sel_setHasEngagedWithCFU_, a1 & 1);
}

id (*static FollowUp.hasEngagedWithCFU.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v2 = self;
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v2, sel_hasEngagedWithCFU);
  return sub_1A8D2B3E8;
}

id sub_1A8D2B3E8(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasEngagedWithCFU_, *(unsigned __int8 *)(a1 + 8));
}

uint64_t static FollowUp.hasEngagedWithCFUGlobalDomain.getter()
{
  id v0 = objc_msgSend(self, sel_hasEngagedWithCFUGlobalDomain);
  if (!v0) {
    return 2;
  }
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_BOOLValue);

  return (uint64_t)v2;
}

uint64_t FollowUp.deinit()
{
  sub_1A8C8DE74(v0 + 16, &qword_1EB5E98E8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  sub_1A8C8DE74(v0 + 96, &qword_1EB5EAD60);
  __swift_destroy_boxed_opaque_existential_0(v0 + 136);

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FollowUp.__deallocating_deinit()
{
  FollowUp.deinit();
  return MEMORY[0x1F4186488](v0, 240, 7);
}

uint64_t sub_1A8D2B518(char *a1, char *a2)
{
  return sub_1A8CF7058(*a1, *a2);
}

uint64_t sub_1A8D2B524()
{
  return sub_1A8D5A4D0();
}

uint64_t sub_1A8D2B588()
{
  sub_1A8D59C80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A8D2B5D0()
{
  return sub_1A8D5A4D0();
}

CloudSubscriptionFeatures::FollowUp::Feature_optional sub_1A8D2B630(Swift::String *a1)
{
  return FollowUp.Feature.init(rawValue:)(*a1);
}

void sub_1A8D2B63C(uint64_t *a1@<X8>)
{
  if (*v1) {
    uint64_t v2 = 7169633;
  }
  else {
    uint64_t v2 = 7169121;
  }
  *a1 = v2;
  a1[1] = 0xE300000000000000;
}

uint64_t static FollowUp.postIfEligibile(_:)(unsigned char *a1)
{
  *(unsigned char *)(v1 + 49) = *a1;
  return MEMORY[0x1F4188298](sub_1A8D2B684, 0, 0);
}

uint64_t sub_1A8D2B684()
{
  char v1 = *(unsigned char *)(v0 + 49);
  id v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  *(void *)(v0 + 16) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 24) = v3;
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 24) = v1;
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *unint64_t v4 = v0;
  v4[1] = sub_1A8D2B7A4;
  uint64_t v5 = MEMORY[0x1E4FBB390];
  return MEMORY[0x1F4188160](v0 + 48, 0, 0, 0xD00000000000001BLL, 0x80000001A8D66720, sub_1A8D1E010, v3, v5);
}

uint64_t sub_1A8D2B7A4()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_1A8D2B8C0;
  }
  else
  {
    swift_task_dealloc();
    id v2 = sub_1A8D1D364;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A8D2B8C0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t static FollowUp.clearCFU(_:)(unsigned char *a1)
{
  *(unsigned char *)(v1 + 48) = *a1;
  return MEMORY[0x1F4188298](sub_1A8D2B954, 0, 0);
}

uint64_t sub_1A8D2B954()
{
  char v1 = *(unsigned char *)(v0 + 48);
  id v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  *(void *)(v0 + 16) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 24) = v3;
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *uint64_t v4 = v0;
  uint64_t v5 = MEMORY[0x1E4FBC848];
  v4[1] = sub_1A8D1CEB4;
  return MEMORY[0x1F4188160](v4, 0, 0, 0xD000000000000012, 0x80000001A8D66700, sub_1A8D1E01C, v3, v5 + 8);
}

uint64_t static FollowUp.clearCFUGate(_:)(unsigned char *a1)
{
  *(unsigned char *)(v1 + 48) = *a1;
  return MEMORY[0x1F4188298](sub_1A8D2BA90, 0, 0);
}

uint64_t sub_1A8D2BA90()
{
  char v1 = *(unsigned char *)(v0 + 48);
  id v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  *(void *)(v0 + 16) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 24) = v3;
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *uint64_t v4 = v0;
  uint64_t v5 = MEMORY[0x1E4FBC848];
  v4[1] = sub_1A8D17328;
  return MEMORY[0x1F4188160](v4, 0, 0, 0xD000000000000016, 0x80000001A8D66740, sub_1A8D1CD7C, v3, v5 + 8);
}

uint64_t sub_1A8D2BBA8()
{
  return MEMORY[0x1F4188298](sub_1A8D2BBC4, 0, 0);
}

uint64_t sub_1A8D2BBC4()
{
  uint64_t v1 = _s25CloudSubscriptionFeatures8FollowUpCACSgycfC_0();
  v0[7] = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[8] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1A8D2BCAC;
    v3[13] = v2;
    return MEMORY[0x1F4188298](sub_1A8D2C03C, 0, 0);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1A8D2BCAC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A8D2BDE8, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A8D2BDE8()
{
  os_log_type_t v16 = v0;
  swift_release();
  if (qword_1EB5E97F0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[9];
  uint64_t v2 = sub_1A8D59A80();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB5E97D0);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1A8D59A60();
  os_log_type_t v6 = sub_1A8D59EE0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[9];
  if (v7)
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)os_log_type_t v9 = 136315138;
    swift_getErrorValue();
    uint64_t v11 = sub_1A8D5A440();
    v0[6] = sub_1A8C90120(v11, v12, &v15);
    sub_1A8D59FE0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A8C7F000, v5, v6, "Error clearing legacy CFUs: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0E6EB0](v10, -1, -1);
    MEMORY[0x1AD0E6EB0](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1A8D2C01C()
{
  *(void *)(v1 + 104) = v0;
  return MEMORY[0x1F4188298](sub_1A8D2C03C, 0, 0);
}

uint64_t sub_1A8D2C03C()
{
  uint64_t v1 = *(void **)(v0 + 104);
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v2);
  os_log_type_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 24) + **(int **)(v3 + 24));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  *id v4 = v0;
  v4[1] = sub_1A8D2C140;
  return v6(v2, v3);
}

uint64_t sub_1A8D2C140(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[15] = a1;
  v3[16] = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1A8D2C274, 0, 0);
  }
}

id sub_1A8D2C274(__n128 a1)
{
  unint64_t v2 = v1[15];
  if (v2 >> 62)
  {
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1A8D5A1C0();
    swift_bridgeObjectRelease();
    uint64_t v4 = v1[15];
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v4 = v1[15];
    if (v3)
    {
LABEL_3:
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 8;
      unint64_t v45 = v2 & 0xC000000000000001;
      uint64_t v7 = v1[16];
      uint64_t v43 = v4 + 32;
      a1.n128_u64[0] = 138412290;
      __n128 v39 = a1;
      uint64_t v40 = v3;
      uint64_t v41 = (uint64_t)(v1 + 8);
      while (1)
      {
        if (v45) {
          id v8 = (id)MEMORY[0x1AD0E6030](v5, v1[15]);
        }
        else {
          id v8 = *(id *)(v43 + 8 * v5);
        }
        unint64_t v2 = (unint64_t)v8;
        uint64_t v9 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
          __break(1u);
          goto LABEL_35;
        }
        id v10 = objc_msgSend(v8, sel_uniqueIdentifier);
        if (!v10) {
          break;
        }
        uint64_t v11 = v10;
        uint64_t v12 = sub_1A8D59BF0();
        uint64_t v14 = v13;

        if (v12 == 0xD000000000000017 && v14 == 0x80000001A8D662A0)
        {
          swift_bridgeObjectRelease();
          uint64_t v9 = v5 + 1;
        }
        else
        {
          char v15 = sub_1A8D5A390();
          swift_bridgeObjectRelease();
          uint64_t v9 = v5 + 1;
          if ((v15 & 1) == 0) {
            break;
          }
        }
        id v16 = objc_msgSend((id)v2, sel_extensionIdentifier, *(_OWORD *)&v39);
        if (!v16) {
          break;
        }
        uint64_t v17 = v16;
        uint64_t v18 = sub_1A8D59BF0();
        uint64_t v20 = v19;

        if (v18 == 0xD000000000000021 && v20 == 0x80000001A8D66DF0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v21 = sub_1A8D5A390();
          swift_bridgeObjectRelease();
          if ((v21 & 1) == 0)
          {

            uint64_t v9 = v5 + 1;
            goto LABEL_5;
          }
        }
        if (qword_1EB5E97F0 != -1) {
          swift_once();
        }
        uint64_t v22 = sub_1A8D59A80();
        __swift_project_value_buffer(v22, (uint64_t)qword_1EB5E97D0);
        uint64_t v23 = (id)v2;
        os_log_type_t v24 = sub_1A8D59A60();
        os_log_type_t v25 = sub_1A8D59F00();
        int v44 = v23;
        if (os_log_type_enabled(v24, v25))
        {
          uint64_t v26 = swift_slowAlloc();
          long long v27 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v26 = v39.n128_u32[0];
          *(void *)(v26 + 4) = v44;
          *long long v27 = v44;

          _os_log_impl(&dword_1A8C7F000, v24, v25, "We found a legacy followup item. Clearing it. %@", (uint8_t *)v26, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5EAED0);
          swift_arrayDestroy();
          MEMORY[0x1AD0E6EB0](v27, -1, -1);
          uint64_t v28 = v26;
          uint64_t v23 = v44;
          MEMORY[0x1AD0E6EB0](v28, -1, -1);
        }
        else
        {

          os_log_type_t v24 = v23;
        }
        uint64_t v29 = v1[13];

        sub_1A8C91CA8(v29 + 56, (uint64_t)v6);
        uint64_t v31 = v1[11];
        uint64_t v30 = v1[12];
        __swift_project_boxed_opaque_existential_1(v6, v31);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB5EAEB0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1A8D5C9F0;
        id result = [v23 uniqueIdentifier];
        if (!result)
        {
          __break(1u);
          return result;
        }
        uint64_t v34 = result;
        uint64_t v35 = sub_1A8D59BF0();
        uint64_t v37 = v36;

        *(void *)(inited + 32) = v35;
        *(void *)(inited + 40) = v37;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(inited, v31, v30);
        if (v7)
        {
          swift_bridgeObjectRelease();

          swift_setDeallocating();
          swift_arrayDestroy();
          __swift_destroy_boxed_opaque_existential_0(v41);
          os_log_type_t v38 = *(uint64_t (**)(void))(v42 + 8);
          goto LABEL_30;
        }

        swift_setDeallocating();
        swift_arrayDestroy();
        uint64_t v6 = (void *)v41;
        __swift_destroy_boxed_opaque_existential_0(v41);
        uint64_t v1 = (void *)v42;
        uint64_t v3 = v40;
        uint64_t v9 = v5 + 1;
LABEL_5:
        ++v5;
        if (v9 == v3) {
          goto LABEL_29;
        }
      }

      goto LABEL_5;
    }
  }
LABEL_29:
  swift_bridgeObjectRelease();
  os_log_type_t v38 = (uint64_t (*)(void))v1[1];
LABEL_30:
  return (id)v38();
}

uint64_t sub_1A8D2C78C(char *a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1A8D598E0();
  sub_1A8D310B0(&qword_1EB5E9780, MEMORY[0x1F4197698]);
  swift_bridgeObjectRetain();
  __n128 v39 = a2;
  uint64_t v8 = sub_1A8D59B60();
  uint64_t v10 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v11 = v8 & ~v10;
  uint64_t v36 = v6 + 56;
  uint64_t v12 = v7 - 8;
  if ((*(void *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v32 = v2;
    os_log_t v33 = a1;
    uint64_t v34 = ~v10;
    uint64_t v13 = *(void **)v12;
    v30[1] = v12 & 0xFFFFFFFFFFFFLL | 0x2E3F000000000000;
    uint64_t v31 = v13;
    uint64_t v14 = (void (*)(char *, unint64_t, uint64_t))v13[2];
    uint64_t v37 = v13 + 2;
    os_log_type_t v38 = v14;
    uint64_t v15 = v13[8];
    uint64_t v35 = v13[9];
    id v16 = (uint64_t (**)(char *, uint64_t))(v13 + 1);
    while (1)
    {
      MEMORY[0x1F4188790](v8, v9);
      uint64_t v17 = v6;
      uint64_t v18 = *(void *)(v6 + 48);
      unint64_t v19 = v35 * v11;
      v38((char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v35 * v11, v7);
      sub_1A8D310B0(&qword_1EB5E9788, MEMORY[0x1F4197698]);
      char v20 = sub_1A8D59BA0();
      char v21 = *v16;
      uint64_t v8 = (*v16)((char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
      if (v20) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v34;
      uint64_t v6 = v17;
      if (((*(void *)(v36 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v32;
        a1 = v33;
        uint64_t v22 = v31;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v21(v39, v7);
    v38(v33, *(void *)(*v32 + 48) + v19, v7);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void **)v12;
LABEL_7:
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v24 = isUniquelyReferenced_nonNull_native;
    MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native, v25);
    long long v27 = (char *)v30 - v26;
    uint64_t v28 = v39;
    ((void (*)(char *, char *, uint64_t))v22[2])((char *)v30 - v26, v39, v7);
    uint64_t v40 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1A8D2E124((uint64_t)v27, v11, v24);
    *uint64_t v3 = v40;
    swift_bridgeObjectRelease();
    ((void (*)(char *, char *, uint64_t))v22[4])(a1, v28, v7);
    return 1;
  }
}

uint64_t sub_1A8D2CAC4(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1A8D25010();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  char v20 = a1;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v2;
    *unint64_t v2 = 0x8000000000000000;
    char v18 = a2;
    sub_1A8D2E3A8(a2, v8, isUniquelyReferenced_nonNull_native);
    *unint64_t v2 = v21;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_27;
  }
  uint64_t v9 = ~v7;
  while (2)
  {
    unint64_t v10 = 0x80000001A8D62CC0;
    unint64_t v11 = 0xD000000000000011;
    switch(*(unsigned char *)(*(void *)(v5 + 48) + v8))
    {
      case 1:
        uint64_t v12 = "hadPreviousAccess";
        goto LABEL_10;
      case 2:
        unint64_t v11 = 0xD000000000000012;
        uint64_t v12 = "doesNotHaveAccess";
        goto LABEL_10;
      case 3:
        unint64_t v11 = 0xD000000000000012;
        uint64_t v12 = "hardwareIneligible";
        goto LABEL_10;
      case 4:
        unint64_t v11 = 0xD00000000000001CLL;
        uint64_t v12 = "softwareIneligible";
        goto LABEL_10;
      case 5:
        unint64_t v11 = 0xD000000000000020;
        uint64_t v12 = "assetsNotFinishedDownloading";
        goto LABEL_10;
      case 6:
        uint64_t v12 = "ishedDownloading";
        unint64_t v11 = 0xD000000000000010;
LABEL_10:
        unint64_t v10 = (unint64_t)v12 | 0x8000000000000000;
        break;
      default:
        break;
    }
    unint64_t v13 = 0x80000001A8D62CC0;
    unint64_t v14 = 0xD000000000000011;
    switch((char)a2)
    {
      case 1:
        uint64_t v15 = "hadPreviousAccess";
        goto LABEL_20;
      case 2:
        unint64_t v14 = 0xD000000000000012;
        uint64_t v15 = "doesNotHaveAccess";
        goto LABEL_20;
      case 3:
        unint64_t v14 = 0xD000000000000012;
        uint64_t v15 = "hardwareIneligible";
        goto LABEL_20;
      case 4:
        unint64_t v14 = 0xD00000000000001CLL;
        uint64_t v15 = "softwareIneligible";
        goto LABEL_20;
      case 5:
        unint64_t v14 = 0xD000000000000020;
        unint64_t v13 = 0x80000001A8D62D60;
        goto LABEL_17;
      case 6:
        uint64_t v15 = "ishedDownloading";
        unint64_t v14 = 0xD000000000000010;
LABEL_20:
        unint64_t v13 = (unint64_t)v15 | 0x8000000000000000;
        if (v11 == v14) {
          goto LABEL_21;
        }
        goto LABEL_22;
      default:
LABEL_17:
        if (v11 != v14) {
          goto LABEL_22;
        }
LABEL_21:
        if (v10 != v13)
        {
LABEL_22:
          char v16 = sub_1A8D5A390();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v16) {
            goto LABEL_26;
          }
          unint64_t v8 = (v8 + 1) & v9;
          if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            goto LABEL_24;
          }
          continue;
        }
        swift_bridgeObjectRelease_n();
LABEL_26:
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        char v18 = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_27:
        *char v20 = v18;
        return result;
    }
  }
}

uint64_t sub_1A8D2CDD4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1A8D5A4A0();
  swift_bridgeObjectRetain();
  sub_1A8D59C80();
  uint64_t v8 = sub_1A8D5A4D0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1A8D5A390() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      char v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1A8D5A390() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1A8D2E6BC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1A8D2CF84(char *a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1A8D59980();
  sub_1A8D310B0(&qword_1E979F7B0, MEMORY[0x1F41976C8]);
  swift_bridgeObjectRetain();
  __n128 v39 = a2;
  uint64_t v8 = sub_1A8D59B60();
  uint64_t v10 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v11 = v8 & ~v10;
  uint64_t v36 = v6 + 56;
  uint64_t v12 = v7 - 8;
  if ((*(void *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v32 = v2;
    os_log_t v33 = a1;
    uint64_t v34 = ~v10;
    BOOL v13 = *(void **)v12;
    v30[1] = v12 & 0xFFFFFFFFFFFFLL | 0x2E3F000000000000;
    uint64_t v31 = v13;
    unint64_t v14 = (void (*)(char *, unint64_t, uint64_t))v13[2];
    uint64_t v37 = v13 + 2;
    os_log_type_t v38 = v14;
    uint64_t v15 = v13[8];
    uint64_t v35 = v13[9];
    char v16 = (uint64_t (**)(char *, uint64_t))(v13 + 1);
    while (1)
    {
      MEMORY[0x1F4188790](v8, v9);
      uint64_t v17 = v6;
      uint64_t v18 = *(void *)(v6 + 48);
      unint64_t v19 = v35 * v11;
      v38((char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v35 * v11, v7);
      sub_1A8D310B0(&qword_1E979F7B8, MEMORY[0x1F41976C8]);
      char v20 = sub_1A8D59BA0();
      uint64_t v21 = *v16;
      uint64_t v8 = (*v16)((char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
      if (v20) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v34;
      uint64_t v6 = v17;
      if (((*(void *)(v36 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v32;
        a1 = v33;
        uint64_t v22 = v31;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v21(v39, v7);
    v38(v33, *(void *)(*v32 + 48) + v19, v7);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void **)v12;
LABEL_7:
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v24 = isUniquelyReferenced_nonNull_native;
    MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native, v25);
    long long v27 = (char *)v30 - v26;
    uint64_t v28 = v39;
    ((void (*)(char *, char *, uint64_t))v22[2])((char *)v30 - v26, v39, v7);
    uint64_t v40 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1A8D2E858((uint64_t)v27, v11, v24);
    *uint64_t v3 = v40;
    swift_bridgeObjectRelease();
    ((void (*)(char *, char *, uint64_t))v22[4])(a1, v28, v7);
    return 1;
  }
}

uint64_t sub_1A8D2D2BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9798);
  uint64_t v3 = sub_1A8D5A090();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = *(void *)(v2 + 56);
    __n128 v39 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v6;
    uint64_t v37 = v0;
    int64_t v38 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        int64_t v41 = v11;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v38) {
          goto LABEL_33;
        }
        unint64_t v16 = v39[v15];
        int64_t v17 = v11 + 1;
        if (!v16)
        {
          int64_t v17 = v11 + 2;
          if (v11 + 2 >= v38) {
            goto LABEL_33;
          }
          unint64_t v16 = v39[v17];
          if (!v16)
          {
            int64_t v17 = v11 + 3;
            if (v11 + 3 >= v38) {
              goto LABEL_33;
            }
            unint64_t v16 = v39[v17];
            if (!v16)
            {
              uint64_t v18 = v11 + 4;
              if (v11 + 4 >= v38)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v37;
                uint64_t v35 = 1 << *(unsigned char *)(v2 + 32);
                if (v35 > 63) {
                  bzero(v39, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *__n128 v39 = -1 << v35;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v39[v18];
              if (!v16)
              {
                while (1)
                {
                  int64_t v17 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v38) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v39[v17];
                  ++v18;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v11 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        int64_t v41 = v17;
        unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      uint64_t v19 = sub_1A8D598E0();
      uint64_t v40 = &v36;
      uint64_t v20 = *(void *)(v19 - 8);
      MEMORY[0x1F4188790](v19, v21);
      uint64_t v23 = (char *)&v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v24 = v2;
      uint64_t v25 = *(void *)(v2 + 48);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 32);
      uint64_t v27 = *(void *)(v20 + 72);
      v26(v23, v25 + v27 * v14, v19);
      sub_1A8D310B0(&qword_1EB5E9780, MEMORY[0x1F4197698]);
      uint64_t result = sub_1A8D59B60();
      uint64_t v28 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v9 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v12 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v4 + 48) + v12 * v27, v23, v19);
      ++*(void *)(v4 + 16);
      int64_t v11 = v41;
      uint64_t v2 = v24;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1A8D2D684()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E98C8);
  uint64_t v3 = sub_1A8D5A090();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_37;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v28 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_38;
    }
    if (v14 >= v8) {
      break;
    }
    unint64_t v15 = v28[v14];
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v8) {
        break;
      }
      unint64_t v15 = v28[v10];
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v8) {
          break;
        }
        unint64_t v15 = v28[v10];
        if (!v15)
        {
          int64_t v16 = v14 + 3;
          if (v16 >= v8) {
            break;
          }
          unint64_t v15 = v28[v16];
          if (!v15)
          {
            while (1)
            {
              int64_t v10 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_39;
              }
              if (v10 >= v8) {
                goto LABEL_33;
              }
              unint64_t v15 = v28[v10];
              ++v16;
              if (v15) {
                goto LABEL_23;
              }
            }
          }
          int64_t v10 = v16;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
    sub_1A8D5A4A0();
    sub_1A8D59C80();
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_1A8D5A4D0();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v19) >> 6;
    do
    {
      if (++v21 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1A8D2DA60);
      }
      BOOL v24 = v21 == v23;
      if (v21 == v23) {
        unint64_t v21 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v9 + 8 * v21);
    }
    while (v25 == -1);
    unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
LABEL_7:
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(unsigned char *)(*(void *)(v4 + 48) + v11) = v17;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
  if (v26 > 63) {
    bzero(v28, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v28 = -1 << v26;
  }
  *(void *)(v2 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1A8D2DA7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB5EAC70);
  uint64_t v3 = sub_1A8D5A090();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1A8D5A4A0();
      sub_1A8D59C80();
      uint64_t result = sub_1A8D5A4D0();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1A8D2DD5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F7C0);
  uint64_t v3 = sub_1A8D5A090();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = *(void *)(v2 + 56);
    __n128 v39 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v6;
    uint64_t v37 = v0;
    int64_t v38 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        int64_t v41 = v11;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v38) {
          goto LABEL_33;
        }
        unint64_t v16 = v39[v15];
        int64_t v17 = v11 + 1;
        if (!v16)
        {
          int64_t v17 = v11 + 2;
          if (v11 + 2 >= v38) {
            goto LABEL_33;
          }
          unint64_t v16 = v39[v17];
          if (!v16)
          {
            int64_t v17 = v11 + 3;
            if (v11 + 3 >= v38) {
              goto LABEL_33;
            }
            unint64_t v16 = v39[v17];
            if (!v16)
            {
              uint64_t v18 = v11 + 4;
              if (v11 + 4 >= v38)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v37;
                uint64_t v35 = 1 << *(unsigned char *)(v2 + 32);
                if (v35 > 63) {
                  bzero(v39, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *__n128 v39 = -1 << v35;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v39[v18];
              if (!v16)
              {
                while (1)
                {
                  int64_t v17 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v38) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v39[v17];
                  ++v18;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v11 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        int64_t v41 = v17;
        unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      uint64_t v19 = sub_1A8D59980();
      uint64_t v40 = &v36;
      uint64_t v20 = *(void *)(v19 - 8);
      MEMORY[0x1F4188790](v19, v21);
      unint64_t v23 = (char *)&v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v24 = v2;
      uint64_t v25 = *(void *)(v2 + 48);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 32);
      uint64_t v27 = *(void *)(v20 + 72);
      v26(v23, v25 + v27 * v14, v19);
      sub_1A8D310B0(&qword_1E979F7B0, MEMORY[0x1F41976C8]);
      uint64_t result = sub_1A8D59B60();
      uint64_t v28 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v9 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v12 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v4 + 48) + v12 * v27, v23, v19);
      ++*(void *)(v4 + 16);
      int64_t v11 = v41;
      uint64_t v2 = v24;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1A8D2E124(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v30 = a1;
  unint64_t v5 = *(void *)(*v3 + 16);
  unint64_t v6 = *(void *)(*v3 + 24);
  if (v6 > v5 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1A8D2D2BC();
  }
  else
  {
    if (v6 > v5)
    {
      sub_1A8D2EE24(&qword_1EB5E9798, MEMORY[0x1F41976A0]);
      goto LABEL_12;
    }
    sub_1A8D2F0D8();
  }
  uint64_t v7 = *v3;
  uint64_t v8 = sub_1A8D598E0();
  sub_1A8D310B0(&qword_1EB5E9780, MEMORY[0x1F4197698]);
  uint64_t v9 = sub_1A8D59B60();
  uint64_t v11 = -1 << *(unsigned char *)(v7 + 32);
  a2 = v9 & ~v11;
  uint64_t v28 = v7 + 56;
  uint64_t v29 = v7;
  if ((*(void *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v27 = ~v11;
    unint64_t v12 = *(void **)(v8 - 8);
    unint64_t v13 = (void (*)(char *, unint64_t, uint64_t))v12[2];
    uint64_t v14 = v12[8];
    uint64_t v15 = v12[9];
    unint64_t v16 = (uint64_t (**)(char *, uint64_t))(v12 + 1);
    do
    {
      MEMORY[0x1F4188790](v9, v10);
      v13((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v29 + 48) + v15 * a2, v8);
      sub_1A8D310B0(&qword_1EB5E9788, MEMORY[0x1F4197698]);
      char v17 = sub_1A8D59BA0();
      uint64_t v9 = (*v16)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
      if (v17) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v27;
    }
    while (((*(void *)(v28 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v18 = *v26;
  *(void *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v19 = *(void *)(v18 + 48);
  uint64_t v20 = sub_1A8D598E0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * a2, v30, v20);
  uint64_t v22 = *(void *)(v18 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (!v23)
  {
    *(void *)(v18 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1A8D5A3F0();
  __break(1u);
  return result;
}

uint64_t sub_1A8D2E3A8(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1A8D2D684();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_1A8D2EADC();
        goto LABEL_31;
      }
      sub_1A8D2F478();
    }
    uint64_t v8 = *v3;
    uint64_t result = sub_1A8D25010();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0x80000001A8D62CC0;
        unint64_t v12 = 0xD000000000000011;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v13 = "hadPreviousAccess";
            goto LABEL_17;
          case 2:
            unint64_t v12 = 0xD000000000000012;
            unint64_t v13 = "doesNotHaveAccess";
            goto LABEL_17;
          case 3:
            unint64_t v12 = 0xD000000000000012;
            unint64_t v13 = "hardwareIneligible";
            goto LABEL_17;
          case 4:
            unint64_t v12 = 0xD00000000000001CLL;
            unint64_t v13 = "softwareIneligible";
            goto LABEL_17;
          case 5:
            unint64_t v12 = 0xD000000000000020;
            unint64_t v13 = "assetsNotFinishedDownloading";
            goto LABEL_17;
          case 6:
            unint64_t v13 = "ishedDownloading";
            unint64_t v12 = 0xD000000000000010;
LABEL_17:
            unint64_t v11 = (unint64_t)v13 | 0x8000000000000000;
            break;
          default:
            break;
        }
        unint64_t v14 = 0x80000001A8D62CC0;
        unint64_t v15 = 0xD000000000000011;
        switch(v5)
        {
          case 1:
            unint64_t v16 = "hadPreviousAccess";
            goto LABEL_27;
          case 2:
            unint64_t v15 = 0xD000000000000012;
            unint64_t v16 = "doesNotHaveAccess";
            goto LABEL_27;
          case 3:
            unint64_t v15 = 0xD000000000000012;
            unint64_t v16 = "hardwareIneligible";
            goto LABEL_27;
          case 4:
            unint64_t v15 = 0xD00000000000001CLL;
            unint64_t v16 = "softwareIneligible";
            goto LABEL_27;
          case 5:
            unint64_t v15 = 0xD000000000000020;
            unint64_t v14 = 0x80000001A8D62D60;
            goto LABEL_24;
          case 6:
            unint64_t v16 = "ishedDownloading";
            unint64_t v15 = 0xD000000000000010;
LABEL_27:
            unint64_t v14 = (unint64_t)v16 | 0x8000000000000000;
            if (v12 == v15) {
              goto LABEL_28;
            }
            goto LABEL_29;
          default:
LABEL_24:
            if (v12 != v15) {
              goto LABEL_29;
            }
LABEL_28:
            if (v11 == v14) {
              goto LABEL_34;
            }
LABEL_29:
            char v17 = sub_1A8D5A390();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v17) {
              goto LABEL_35;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_31:
  uint64_t v18 = *v22;
  *(void *)(*v22 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v18 + 48) + a2) = v23;
  uint64_t v19 = *(void *)(v18 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (v20)
  {
    __break(1u);
LABEL_34:
    swift_bridgeObjectRelease_n();
LABEL_35:
    sub_1A8D5A3F0();
    __break(1u);
    JUMPOUT(0x1A8D2E684);
  }
  *(void *)(v18 + 16) = v21;
  return result;
}

uint64_t sub_1A8D2E6BC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  char v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1A8D2DA7C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1A8D2EC70();
      goto LABEL_22;
    }
    sub_1A8D2F838();
  }
  uint64_t v11 = *v4;
  sub_1A8D5A4A0();
  sub_1A8D59C80();
  uint64_t result = sub_1A8D5A4D0();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1A8D5A390(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1A8D5A3F0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1A8D5A390();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1A8D2E858(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v30 = a1;
  unint64_t v5 = *(void *)(*v3 + 16);
  unint64_t v6 = *(void *)(*v3 + 24);
  if (v6 > v5 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1A8D2DD5C();
  }
  else
  {
    if (v6 > v5)
    {
      sub_1A8D2EE24(&qword_1E979F7C0, MEMORY[0x1F41976C0]);
      goto LABEL_12;
    }
    sub_1A8D2FAE8();
  }
  uint64_t v7 = *v3;
  uint64_t v8 = sub_1A8D59980();
  sub_1A8D310B0(&qword_1E979F7B0, MEMORY[0x1F41976C8]);
  uint64_t v9 = sub_1A8D59B60();
  uint64_t v11 = -1 << *(unsigned char *)(v7 + 32);
  a2 = v9 & ~v11;
  uint64_t v28 = v7 + 56;
  uint64_t v29 = v7;
  if ((*(void *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v27 = ~v11;
    uint64_t v12 = *(void **)(v8 - 8);
    uint64_t v13 = (void (*)(char *, unint64_t, uint64_t))v12[2];
    uint64_t v14 = v12[8];
    uint64_t v15 = v12[9];
    BOOL v16 = (uint64_t (**)(char *, uint64_t))(v12 + 1);
    do
    {
      MEMORY[0x1F4188790](v9, v10);
      v13((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v29 + 48) + v15 * a2, v8);
      sub_1A8D310B0(&qword_1E979F7B8, MEMORY[0x1F41976C8]);
      char v17 = sub_1A8D59BA0();
      uint64_t v9 = (*v16)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
      if (v17) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v27;
    }
    while (((*(void *)(v28 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v18 = *v26;
  *(void *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v19 = *(void *)(v18 + 48);
  uint64_t v20 = sub_1A8D59980();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * a2, v30, v20);
  uint64_t v22 = *(void *)(v18 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (!v23)
  {
    *(void *)(v18 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1A8D5A3F0();
  __break(1u);
  return result;
}

void *sub_1A8D2EADC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E98C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A8D5A080();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v2 + 16);
  if (!v5)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v7 = v2 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v8)
  {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v8);
    uint64_t v5 = *(void *)(v2 + 16);
  }
  int64_t v10 = 0;
  *(void *)(v4 + 16) = v5;
  uint64_t v11 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v2 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = *(unsigned char *)(*(void *)(v2 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A8D2EC70()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB5EAC70);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A8D5A080();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    int64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A8D2EE24(uint64_t *a1, uint64_t (*a2)(void))
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v27 = v2;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1A8D5A080();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v27 = v6;
    return result;
  }
  uint64_t result = (void *)(v5 + 56);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  uint64_t v28 = (const void *)(v4 + 56);
  if (v6 != v4 || (unint64_t)result >= v4 + 56 + 8 * v8) {
    uint64_t result = memmove(result, v28, 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 56);
  int64_t v29 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v29) {
      goto LABEL_28;
    }
    unint64_t v24 = *((void *)v28 + v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v29) {
        goto LABEL_28;
      }
      unint64_t v24 = *((void *)v28 + v10);
      if (!v24)
      {
        int64_t v10 = v23 + 2;
        if (v23 + 2 >= v29) {
          goto LABEL_28;
        }
        unint64_t v24 = *((void *)v28 + v10);
        if (!v24) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v16 = a2(0);
    uint64_t v17 = *(void *)(v16 - 8);
    MEMORY[0x1F4188790](v16, v18);
    int64_t v20 = (char *)&v26 - v19;
    unint64_t v22 = *(void *)(v21 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))((char *)&v26 - v19, *(void *)(v4 + 48) + v22, v16);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(void *)(v6 + 48) + v22, v20, v16);
  }
  int64_t v25 = v23 + 3;
  if (v25 >= v29) {
    goto LABEL_28;
  }
  unint64_t v24 = *((void *)v28 + v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_28;
    }
    unint64_t v24 = *((void *)v28 + v10);
    ++v25;
    if (v24) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A8D2F0D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E9798);
  uint64_t v3 = sub_1A8D5A090();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 56);
  uint64_t v35 = v0;
  uint64_t v36 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v6;
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v37) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v36 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v37) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v36 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = sub_1A8D598E0();
    int64_t v38 = &v35;
    uint64_t v19 = *(void *)(v18 - 8);
    MEMORY[0x1F4188790](v18, v20);
    unint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = v23;
    uint64_t v25 = v2;
    uint64_t v26 = *(void *)(v2 + 48);
    uint64_t v27 = *(void *)(v24 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v22, v26 + v27 * v14, v18);
    sub_1A8D310B0(&qword_1EB5E9780, MEMORY[0x1F4197698]);
    uint64_t result = sub_1A8D59B60();
    uint64_t v28 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v9 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v12 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v19 + 32))(*(void *)(v4 + 48) + v12 * v27, v22, v18);
    ++*(void *)(v4 + 16);
    uint64_t v2 = v25;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v37)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v35;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v36 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v37) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A8D2F478()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB5E98C8);
  uint64_t v3 = sub_1A8D5A090();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_35;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v27 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v27) {
      break;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v27) {
        break;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v27) {
          break;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v10);
        if (!v15)
        {
          int64_t v16 = v14 + 3;
          if (v16 >= v27) {
            break;
          }
          unint64_t v15 = *(void *)(v6 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              int64_t v10 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_37;
              }
              if (v10 >= v27) {
                goto LABEL_33;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v10);
              ++v16;
              if (v15) {
                goto LABEL_23;
              }
            }
          }
          int64_t v10 = v16;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
    sub_1A8D5A4A0();
    sub_1A8D59C80();
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_1A8D5A4D0();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v19) >> 6;
    do
    {
      if (++v21 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        JUMPOUT(0x1A8D2F81CLL);
      }
      BOOL v24 = v21 == v23;
      if (v21 == v23) {
        unint64_t v21 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v9 + 8 * v21);
    }
    while (v25 == -1);
    unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
LABEL_7:
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(unsigned char *)(*(void *)(v4 + 48) + v11) = v17;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_35:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1A8D2F838()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB5EAC70);
  uint64_t v3 = sub_1A8D5A090();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1A8D5A4A0();
    swift_bridgeObjectRetain();
    sub_1A8D59C80();
    uint64_t result = sub_1A8D5A4D0();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A8D2FAE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E979F7C0);
  uint64_t v3 = sub_1A8D5A090();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 56);
  uint64_t v35 = v0;
  uint64_t v36 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v6;
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v37) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v36 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v37) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v36 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = sub_1A8D59980();
    int64_t v38 = &v35;
    uint64_t v19 = *(void *)(v18 - 8);
    MEMORY[0x1F4188790](v18, v20);
    uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = v23;
    uint64_t v25 = v2;
    uint64_t v26 = *(void *)(v2 + 48);
    uint64_t v27 = *(void *)(v24 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v22, v26 + v27 * v14, v18);
    sub_1A8D310B0(&qword_1E979F7B0, MEMORY[0x1F41976C8]);
    uint64_t result = sub_1A8D59B60();
    uint64_t v28 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v9 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v12 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v19 + 32))(*(void *)(v4 + 48) + v12 * v27, v22, v18);
    ++*(void *)(v4 + 16);
    uint64_t v2 = v25;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v37)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v35;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v36 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v37) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A8D2FE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, long long a12, long long a13, uint64_t a14)
{
  unint64_t v29 = &type metadata for AvailabilityModel;
  unint64_t v30 = &protocol witness table for AvailabilityModel;
  uint64_t v21 = swift_allocObject();
  *(void *)&long long v28 = v21;
  long long v22 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)a7;
  *(_OWORD *)(v21 + 32) = v22;
  *(void *)(v21 + 48) = *(void *)(a7 + 32);
  uint64_t v26 = sub_1A8C8EB1C(0, &qword_1EB5E9790);
  uint64_t v27 = &off_1EFF57FC0;
  *(void *)&long long v25 = a1;
  *(_DWORD *)(a14 + 16) = 0;
  *(_OWORD *)(a14 + 112) = 0u;
  *(void *)(a14 + 128) = 0;
  *(_OWORD *)(a14 + 96) = 0u;
  sub_1A8C91C90(&v25, a14 + 56);
  *(void *)(a14 + 40) = a2;
  *(void *)(a14 + 48) = a3;
  *(void *)(a14 + 24) = a4;
  *(void *)(a14 + 32) = a5;
  swift_beginAccess();
  sub_1A8D327D0(a6, a14 + 96);
  swift_endAccess();
  sub_1A8C91C90(&v28, a14 + 136);
  *(void *)(a14 + 176) = a8;
  *(void *)(a14 + 184) = a9;
  *(void *)(a14 + 224) = a10;
  *(void *)(a14 + 232) = a11;
  *(_OWORD *)(a14 + 192) = a13;
  *(_OWORD *)(a14 + 208) = a12;
  return a14;
}

uint64_t _s25CloudSubscriptionFeatures8FollowUpCACSgycfC_0()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F5B768]);
  uint64_t v1 = (void *)sub_1A8D59BC0();
  id v2 = objc_msgSend(v0, sel_initWithClientIdentifier_, v1);

  if (v2)
  {
    id v3 = v2;
    id v4 = sub_1A8C8E338();
    id v5 = objc_msgSend(v4, sel_aa_primaryAppleAccount);

    if (v5)
    {
      id v6 = objc_msgSend(v5, sel_aa_personID);

      if (v6)
      {
        id v5 = (id)sub_1A8D59BF0();
        uint64_t v8 = v7;

LABEL_12:
        uint64_t v14 = SiriAssistantLocale.current.getter();
        uint64_t v16 = v15;
        id v17 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
        uint64_t v18 = (void *)sub_1A8D59BC0();
        id v19 = objc_msgSend(v17, sel_initWithSuiteName_, v18);

        if (v19)
        {
          *((void *)&v28 + 1) = sub_1A8C8EB1C(0, (unint64_t *)&qword_1EB5EACA0);
          unint64_t v29 = &off_1EFF56B50;
          *(void *)&long long v27 = v19;
        }
        else
        {
          unint64_t v29 = 0;
          long long v27 = 0u;
          long long v28 = 0u;
        }
        uint64_t v25 = 0;
        __int16 v26 = 256;
        id v20 = objc_msgSend(self, sel_currentAvailability);
        sub_1A8C9C118(v20, (uint64_t)&v25, (uint64_t)v30);
        id v21 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GMAnalyticsProvider()), sel_init);
        id v22 = _s25CloudSubscriptionFeatures7GMOptInC7currentACSgvgZ_0();
        type metadata accessor for FollowUp();
        uint64_t v23 = swift_allocObject();
        uint64_t v13 = sub_1A8D2FE88((uint64_t)v3, (uint64_t)v5, v8, v14, v16, (uint64_t)&v27, (uint64_t)v30, (uint64_t)v21, (uint64_t)v22, (uint64_t)j___s25CloudSubscriptionFeatures18EligibilityFetcherC7currentAA0D0CvgZ_0, 0, (unint64_t)sub_1A8D28A10, (unint64_t)&unk_1E979F7F0, v23);
        swift_retain();

        if (v13) {
          swift_release();
        }
        return v13;
      }
      id v5 = 0;
    }
    uint64_t v8 = 0;
    goto LABEL_12;
  }
  if (qword_1EB5E97F0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1A8D59A80();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB5E97D0);
  int64_t v10 = sub_1A8D59A60();
  os_log_type_t v11 = sub_1A8D59EE0();
  if (os_log_type_enabled(v10, v11))
  {
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v12 = 0;
    _os_log_impl(&dword_1A8C7F000, v10, v11, "Unable to make followup controller. Will not post CFUs.", v12, 2u);
    MEMORY[0x1AD0E6EB0](v12, -1, -1);
  }

  return 0;
}

uint64_t sub_1A8D30320(uint64_t a1)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = v1;
  return MEMORY[0x1F4188298](sub_1A8D30340, 0, 0);
}

uint64_t sub_1A8D30340()
{
  id v6 = v0;
  v0[5] = MEMORY[0x1E4FBC870];
  uint64_t v1 = v0[6];
  if (v1)
  {
    uint64_t v2 = (unsigned char *)(v1 + OBJC_IVAR___CloudFeature_canUse);
    swift_beginAccess();
    if ((*v2 & 1) == 0) {
      sub_1A8D2CAC4(&v5, 1);
    }
  }
  id v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  *id v3 = v0;
  v3[1] = sub_1A8D30444;
  v3[3] = v0[7];
  return MEMORY[0x1F4188298](sub_1A8D292CC, 0, 0);
}

uint64_t sub_1A8D30444(uint64_t a1)
{
  *(void *)(*(void *)v1 + 72) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A8D30544, 0, 0);
}

void sub_1A8D30544()
{
  uint64_t v16 = v0;
  int64_t v1 = 0;
  uint64_t v2 = v0[9];
  uint64_t v3 = v2 + 56;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v2 + 56);
  int64_t v7 = (unint64_t)(63 - v5) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v1 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return;
    }
    if (v10 >= v7) {
      goto LABEL_21;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v1;
    if (!v11)
    {
      int64_t v1 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_21;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v1);
      if (!v11)
      {
        int64_t v1 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_21;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v1);
        if (!v11) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v1 << 6);
LABEL_5:
    sub_1A8D2CAC4(&v15, *(unsigned __int8 *)(*(void *)(v2 + 48) + v9));
  }
  int64_t v12 = v10 + 3;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v1 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_25;
        }
        if (v1 >= v7) {
          goto LABEL_21;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v1);
        ++v12;
        if (v11) {
          goto LABEL_20;
        }
      }
    }
    int64_t v1 = v12;
    goto LABEL_20;
  }
LABEL_21:
  swift_release();
  uint64_t v13 = v0[5];
  uint64_t v14 = (void (*)(uint64_t))v0[1];
  v14(v13);
}

unint64_t sub_1A8D306CC()
{
  unint64_t result = qword_1EB5E98A8;
  if (!qword_1EB5E98A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB5E98A8);
  }
  return result;
}

unint64_t sub_1A8D30724()
{
  unint64_t result = qword_1E979F778;
  if (!qword_1E979F778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E979F778);
  }
  return result;
}

uint64_t sub_1A8D30778@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8D25ECC(a1);
}

uint64_t sub_1A8D3079C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A8D266DC(a1, a2, a3, a4, (uint64_t (*)(char *))sub_1A8D2614C);
}

uint64_t sub_1A8D307C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8D26784(a1);
}

uint64_t sub_1A8D307EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A8D266DC(a1, a2, a3, a4, (uint64_t (*)(char *))sub_1A8D26A08);
}

uint64_t sub_1A8D30818@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A8D2708C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1A8D30848(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A8D27680(a1, a2, a3, a4, (uint64_t (*)(char *))sub_1A8D26A08);
}

BOOL sub_1A8D30874@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1A8D2778C();
  *a1 = result;
  return result;
}

uint64_t sub_1A8D308A4(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A8D27680(a1, a2, a3, a4, (uint64_t (*)(char *))sub_1A8D2614C);
}

uint64_t sub_1A8D308D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1A8D308F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1A8D30920(uint64_t a1, uint64_t a2)
{
  int64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 24) + **(int **)(a2 + 24));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A8C99788;
  return v7(a1, a2);
}

uint64_t type metadata accessor for FollowUp()
{
  return self;
}

uint64_t method lookup function for FollowUp(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FollowUp);
}

uint64_t dispatch thunk of FollowUp.oldPostedCFUUserDefaultKey.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of FollowUp.oldPostedCFUUserDefaultValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of FollowUp.postedCFUUserDefaultKey.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of FollowUp.dateSentADMCFU.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of FollowUp.dateSentADMCFU.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of FollowUp.dateSentADMCFU.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of FollowUp.dateSentCFU.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of FollowUp.dateSentCFU.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of FollowUp.dateSentCFU.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of FollowUp.hasSentCFU.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}